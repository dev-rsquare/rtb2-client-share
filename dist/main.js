import { b as IB, c as _B, g as AB, a as BB, l as zB, o as FB, p as jB, r as UB, d as ji, i as UN, e as oe, f as fh, h as VN, j as VB, u as E0, G as Kb, P as n, s as R0, k as mh, m as HB, n as HN, q as WB, _ as me, t as GB, v as C, w as WN, x as Ns, y as Lc, T as qB, z as pe, A as je, C as ah, D as ad, E as YB, F as KB, H as Bw, I as XB, J as ih, K as zc, L as gf, M as QB, N as ZB, O as JB, Q as Vn, R as Hn, S as wb, U as kb, V as Yv, W as ez, X as GN, Y as tz, Z as nz, $ as Fc, a0 as qN, a1 as oz, a2 as Vi, a3 as rz, a4 as He, a5 as az, a6 as iz, a7 as Ut, a8 as sz, a9 as o0, aa as O0, ab as w0, ac as zw } from "./Box-ccaa8459.js";
import { B as vne, ad as hne } from "./Box-ccaa8459.js";
import * as O from "react";
import ai, { Children as lz, isValidElement as Xb, cloneElement as Qb, createElement as YN } from "react";
import { jsx as z, jsxs as gt } from "react/jsx-runtime";
import { Row as yne } from "./components/Row/index.js";
import { Column as Cne } from "./components/Column/index.js";
const cz = {
  50: "#fce4ec",
  100: "#f8bbd0",
  200: "#f48fb1",
  300: "#f06292",
  400: "#ec407a",
  500: "#e91e63",
  600: "#d81b60",
  700: "#c2185b",
  800: "#ad1457",
  900: "#880e4f",
  A100: "#ff80ab",
  A200: "#ff4081",
  A400: "#f50057",
  A700: "#c51162"
}, uz = cz, dz = {
  50: "#ede7f6",
  100: "#d1c4e9",
  200: "#b39ddb",
  300: "#9575cd",
  400: "#7e57c2",
  500: "#673ab7",
  600: "#5e35b1",
  700: "#512da8",
  800: "#4527a0",
  900: "#311b92",
  A100: "#b388ff",
  A200: "#7c4dff",
  A400: "#651fff",
  A700: "#6200ea"
}, pz = dz, fz = {
  50: "#e8eaf6",
  100: "#c5cae9",
  200: "#9fa8da",
  300: "#7986cb",
  400: "#5c6bc0",
  500: "#3f51b5",
  600: "#3949ab",
  700: "#303f9f",
  800: "#283593",
  900: "#1a237e",
  A100: "#8c9eff",
  A200: "#536dfe",
  A400: "#3d5afe",
  A700: "#304ffe"
}, mz = fz, vz = {
  50: "#e0f7fa",
  100: "#b2ebf2",
  200: "#80deea",
  300: "#4dd0e1",
  400: "#26c6da",
  500: "#00bcd4",
  600: "#00acc1",
  700: "#0097a7",
  800: "#00838f",
  900: "#006064",
  A100: "#84ffff",
  A200: "#18ffff",
  A400: "#00e5ff",
  A700: "#00b8d4"
}, hz = vz, gz = {
  50: "#e0f2f1",
  100: "#b2dfdb",
  200: "#80cbc4",
  300: "#4db6ac",
  400: "#26a69a",
  500: "#009688",
  600: "#00897b",
  700: "#00796b",
  800: "#00695c",
  900: "#004d40",
  A100: "#a7ffeb",
  A200: "#64ffda",
  A400: "#1de9b6",
  A700: "#00bfa5"
}, yz = gz, bz = {
  50: "#f1f8e9",
  100: "#dcedc8",
  200: "#c5e1a5",
  300: "#aed581",
  400: "#9ccc65",
  500: "#8bc34a",
  600: "#7cb342",
  700: "#689f38",
  800: "#558b2f",
  900: "#33691e",
  A100: "#ccff90",
  A200: "#b2ff59",
  A400: "#76ff03",
  A700: "#64dd17"
}, Cz = bz, xz = {
  50: "#f9fbe7",
  100: "#f0f4c3",
  200: "#e6ee9c",
  300: "#dce775",
  400: "#d4e157",
  500: "#cddc39",
  600: "#c0ca33",
  700: "#afb42b",
  800: "#9e9d24",
  900: "#827717",
  A100: "#f4ff81",
  A200: "#eeff41",
  A400: "#c6ff00",
  A700: "#aeea00"
}, Sz = xz, Tz = {
  50: "#fffde7",
  100: "#fff9c4",
  200: "#fff59d",
  300: "#fff176",
  400: "#ffee58",
  500: "#ffeb3b",
  600: "#fdd835",
  700: "#fbc02d",
  800: "#f9a825",
  900: "#f57f17",
  A100: "#ffff8d",
  A200: "#ffff00",
  A400: "#ffea00",
  A700: "#ffd600"
}, Ez = Tz, Rz = {
  50: "#fff8e1",
  100: "#ffecb3",
  200: "#ffe082",
  300: "#ffd54f",
  400: "#ffca28",
  500: "#ffc107",
  600: "#ffb300",
  700: "#ffa000",
  800: "#ff8f00",
  900: "#ff6f00",
  A100: "#ffe57f",
  A200: "#ffd740",
  A400: "#ffc400",
  A700: "#ffab00"
}, Oz = Rz, wz = {
  50: "#fbe9e7",
  100: "#ffccbc",
  200: "#ffab91",
  300: "#ff8a65",
  400: "#ff7043",
  500: "#ff5722",
  600: "#f4511e",
  700: "#e64a19",
  800: "#d84315",
  900: "#bf360c",
  A100: "#ff9e80",
  A200: "#ff6e40",
  A400: "#ff3d00",
  A700: "#dd2c00"
}, kz = wz, Nz = {
  50: "#efebe9",
  100: "#d7ccc8",
  200: "#bcaaa4",
  300: "#a1887f",
  400: "#8d6e63",
  500: "#795548",
  600: "#6d4c41",
  700: "#5d4037",
  800: "#4e342e",
  900: "#3e2723",
  A100: "#d7ccc8",
  A200: "#bcaaa4",
  A400: "#8d6e63",
  A700: "#5d4037"
}, $z = Nz, Mz = {
  50: "#eceff1",
  100: "#cfd8dc",
  200: "#b0bec5",
  300: "#90a4ae",
  400: "#78909c",
  500: "#607d8b",
  600: "#546e7a",
  700: "#455a64",
  800: "#37474f",
  900: "#263238",
  A100: "#cfd8dc",
  A200: "#b0bec5",
  A400: "#78909c",
  A700: "#455a64"
}, Dz = Mz, IJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  amber: Oz,
  blue: IB,
  blueGrey: Dz,
  brown: $z,
  common: _B,
  cyan: hz,
  deepOrange: kz,
  deepPurple: pz,
  green: AB,
  grey: BB,
  indigo: mz,
  lightBlue: zB,
  lightGreen: Cz,
  lime: Sz,
  orange: FB,
  pink: uz,
  purple: jB,
  red: UB,
  teal: yz,
  yellow: Ez
}, Symbol.toStringTag, { value: "Module" })), Pz = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ji,
  isPlainObject: UN
}, Symbol.toStringTag, { value: "Module" })), Lz = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: oe
}, Symbol.toStringTag, { value: "Module" })), Iz = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: fh,
  private_createBreakpoints: VN,
  unstable_applyStyles: VB
}, Symbol.toStringTag, { value: "Module" }));
function KN({
  styles: e,
  themeId: r,
  defaultTheme: s = {}
}) {
  const u = E0(s), f = typeof e == "function" ? e(r && u[r] || u) : e;
  return /* @__PURE__ */ z(Kb, {
    styles: f
  });
}
process.env.NODE_ENV !== "production" && (KN.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: n.object,
  /**
   * @ignore
   */
  styles: n.oneOfType([n.array, n.func, n.number, n.object, n.string, n.bool]),
  /**
   * @ignore
   */
  themeId: n.string
});
const _z = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: R0,
  extendSxProp: mh,
  unstable_createStyleFunctionSx: HB,
  unstable_defaultSxConfig: HN
}, Symbol.toStringTag, { value: "Module" }));
var WT = { exports: {} }, Nn = {};
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Fw;
function Az() {
  if (Fw)
    return Nn;
  Fw = 1;
  var e = Symbol.for("react.element"), r = Symbol.for("react.portal"), s = Symbol.for("react.fragment"), u = Symbol.for("react.strict_mode"), f = Symbol.for("react.profiler"), v = Symbol.for("react.provider"), m = Symbol.for("react.context"), y = Symbol.for("react.server_context"), b = Symbol.for("react.forward_ref"), S = Symbol.for("react.suspense"), E = Symbol.for("react.suspense_list"), k = Symbol.for("react.memo"), D = Symbol.for("react.lazy"), M = Symbol.for("react.offscreen"), P;
  P = Symbol.for("react.module.reference");
  function L(w) {
    if (typeof w == "object" && w !== null) {
      var _ = w.$$typeof;
      switch (_) {
        case e:
          switch (w = w.type, w) {
            case s:
            case f:
            case u:
            case S:
            case E:
              return w;
            default:
              switch (w = w && w.$$typeof, w) {
                case y:
                case m:
                case b:
                case D:
                case k:
                case v:
                  return w;
                default:
                  return _;
              }
          }
        case r:
          return _;
      }
    }
  }
  return Nn.ContextConsumer = m, Nn.ContextProvider = v, Nn.Element = e, Nn.ForwardRef = b, Nn.Fragment = s, Nn.Lazy = D, Nn.Memo = k, Nn.Portal = r, Nn.Profiler = f, Nn.StrictMode = u, Nn.Suspense = S, Nn.SuspenseList = E, Nn.isAsyncMode = function() {
    return !1;
  }, Nn.isConcurrentMode = function() {
    return !1;
  }, Nn.isContextConsumer = function(w) {
    return L(w) === m;
  }, Nn.isContextProvider = function(w) {
    return L(w) === v;
  }, Nn.isElement = function(w) {
    return typeof w == "object" && w !== null && w.$$typeof === e;
  }, Nn.isForwardRef = function(w) {
    return L(w) === b;
  }, Nn.isFragment = function(w) {
    return L(w) === s;
  }, Nn.isLazy = function(w) {
    return L(w) === D;
  }, Nn.isMemo = function(w) {
    return L(w) === k;
  }, Nn.isPortal = function(w) {
    return L(w) === r;
  }, Nn.isProfiler = function(w) {
    return L(w) === f;
  }, Nn.isStrictMode = function(w) {
    return L(w) === u;
  }, Nn.isSuspense = function(w) {
    return L(w) === S;
  }, Nn.isSuspenseList = function(w) {
    return L(w) === E;
  }, Nn.isValidElementType = function(w) {
    return typeof w == "string" || typeof w == "function" || w === s || w === f || w === u || w === S || w === E || w === M || typeof w == "object" && w !== null && (w.$$typeof === D || w.$$typeof === k || w.$$typeof === v || w.$$typeof === m || w.$$typeof === b || w.$$typeof === P || w.getModuleId !== void 0);
  }, Nn.typeOf = L, Nn;
}
var $n = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var jw;
function Bz() {
  return jw || (jw = 1, process.env.NODE_ENV !== "production" && function() {
    var e = Symbol.for("react.element"), r = Symbol.for("react.portal"), s = Symbol.for("react.fragment"), u = Symbol.for("react.strict_mode"), f = Symbol.for("react.profiler"), v = Symbol.for("react.provider"), m = Symbol.for("react.context"), y = Symbol.for("react.server_context"), b = Symbol.for("react.forward_ref"), S = Symbol.for("react.suspense"), E = Symbol.for("react.suspense_list"), k = Symbol.for("react.memo"), D = Symbol.for("react.lazy"), M = Symbol.for("react.offscreen"), P = !1, L = !1, w = !1, _ = !1, V = !1, A;
    A = Symbol.for("react.module.reference");
    function j(le) {
      return !!(typeof le == "string" || typeof le == "function" || le === s || le === f || V || le === u || le === S || le === E || _ || le === M || P || L || w || typeof le == "object" && le !== null && (le.$$typeof === D || le.$$typeof === k || le.$$typeof === v || le.$$typeof === m || le.$$typeof === b || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      le.$$typeof === A || le.getModuleId !== void 0));
    }
    function U(le) {
      if (typeof le == "object" && le !== null) {
        var $e = le.$$typeof;
        switch ($e) {
          case e:
            var Oe = le.type;
            switch (Oe) {
              case s:
              case f:
              case u:
              case S:
              case E:
                return Oe;
              default:
                var dt = Oe && Oe.$$typeof;
                switch (dt) {
                  case y:
                  case m:
                  case b:
                  case D:
                  case k:
                  case v:
                    return dt;
                  default:
                    return $e;
                }
            }
          case r:
            return $e;
        }
      }
    }
    var $ = m, F = v, G = e, Y = b, Q = s, q = D, re = k, ee = r, J = f, ce = u, de = S, fe = E, K = !1, ne = !1;
    function ve(le) {
      return K || (K = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function Ke(le) {
      return ne || (ne = !0, console.warn("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function tt(le) {
      return U(le) === m;
    }
    function Ie(le) {
      return U(le) === v;
    }
    function De(le) {
      return typeof le == "object" && le !== null && le.$$typeof === e;
    }
    function Ye(le) {
      return U(le) === b;
    }
    function ke(le) {
      return U(le) === s;
    }
    function lt(le) {
      return U(le) === D;
    }
    function xe(le) {
      return U(le) === k;
    }
    function ze(le) {
      return U(le) === r;
    }
    function ut(le) {
      return U(le) === f;
    }
    function Xe(le) {
      return U(le) === u;
    }
    function rt(le) {
      return U(le) === S;
    }
    function nt(le) {
      return U(le) === E;
    }
    $n.ContextConsumer = $, $n.ContextProvider = F, $n.Element = G, $n.ForwardRef = Y, $n.Fragment = Q, $n.Lazy = q, $n.Memo = re, $n.Portal = ee, $n.Profiler = J, $n.StrictMode = ce, $n.Suspense = de, $n.SuspenseList = fe, $n.isAsyncMode = ve, $n.isConcurrentMode = Ke, $n.isContextConsumer = tt, $n.isContextProvider = Ie, $n.isElement = De, $n.isForwardRef = Ye, $n.isFragment = ke, $n.isLazy = lt, $n.isMemo = xe, $n.isPortal = ze, $n.isProfiler = ut, $n.isStrictMode = Xe, $n.isSuspense = rt, $n.isSuspenseList = nt, $n.isValidElementType = j, $n.typeOf = U;
  }()), $n;
}
process.env.NODE_ENV === "production" ? WT.exports = Az() : WT.exports = Bz();
var Uw = WT.exports;
const zz = /^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;
function XN(e) {
  const r = `${e}`.match(zz);
  return r && r[1] || "";
}
function QN(e, r = "") {
  return e.displayName || e.name || XN(e) || r;
}
function Vw(e, r, s) {
  const u = QN(r);
  return e.displayName || (u !== "" ? `${s}(${u})` : s);
}
function u1(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return QN(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case Uw.ForwardRef:
          return Vw(e, e.render, "ForwardRef");
        case Uw.Memo:
          return Vw(e, e.type, "memo");
        default:
          return;
      }
  }
}
const Fz = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: u1,
  getFunctionName: XN
}, Symbol.toStringTag, { value: "Module" })), jz = ["ownerState"], Uz = ["variants"], Vz = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"];
function Hz(e) {
  return Object.keys(e).length === 0;
}
function Wz(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function xT(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const Gz = fh(), Hw = (e) => e && e.charAt(0).toLowerCase() + e.slice(1);
function Nb({
  defaultTheme: e,
  theme: r,
  themeId: s
}) {
  return Hz(r) ? e : r[s] || r;
}
function qz(e) {
  return e ? (r, s) => s[e] : null;
}
function Zb(e, r) {
  let {
    ownerState: s
  } = r, u = me(r, jz);
  const f = typeof e == "function" ? e(C({
    ownerState: s
  }, u)) : e;
  if (Array.isArray(f))
    return f.flatMap((v) => Zb(v, C({
      ownerState: s
    }, u)));
  if (f && typeof f == "object" && Array.isArray(f.variants)) {
    const {
      variants: v = []
    } = f;
    let y = me(f, Uz);
    return v.forEach((b) => {
      let S = !0;
      typeof b.props == "function" ? S = b.props(C({
        ownerState: s
      }, u, s)) : Object.keys(b.props).forEach((E) => {
        (s == null ? void 0 : s[E]) !== b.props[E] && u[E] !== b.props[E] && (S = !1);
      }), S && (Array.isArray(y) || (y = [y]), y.push(typeof b.style == "function" ? b.style(C({
        ownerState: s
      }, u, s)) : b.style));
    }), y;
  }
  return f;
}
function Yz(e = {}) {
  const {
    themeId: r,
    defaultTheme: s = Gz,
    rootShouldForwardProp: u = xT,
    slotShouldForwardProp: f = xT
  } = e, v = (m) => R0(C({}, m, {
    theme: Nb(C({}, m, {
      defaultTheme: s,
      themeId: r
    }))
  }));
  return v.__mui_systemSx = !0, (m, y = {}) => {
    WB(m, (U) => U.filter(($) => !($ != null && $.__mui_systemSx)));
    const {
      name: b,
      slot: S,
      skipVariantsResolver: E,
      skipSx: k,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: D = qz(Hw(S))
    } = y, M = me(y, Vz), P = E !== void 0 ? E : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      S && S !== "Root" && S !== "root" || !1
    ), L = k || !1;
    let w;
    process.env.NODE_ENV !== "production" && b && (w = `${b}-${Hw(S || "Root")}`);
    let _ = xT;
    S === "Root" || S === "root" ? _ = u : S ? _ = f : Wz(m) && (_ = void 0);
    const V = GB(m, C({
      shouldForwardProp: _,
      label: w
    }, M)), A = (U) => typeof U == "function" && U.__emotion_real !== U || UN(U) ? ($) => Zb(U, C({}, $, {
      theme: Nb({
        theme: $.theme,
        defaultTheme: s,
        themeId: r
      })
    })) : U, j = (U, ...$) => {
      let F = A(U);
      const G = $ ? $.map(A) : [];
      b && D && G.push((q) => {
        const re = Nb(C({}, q, {
          defaultTheme: s,
          themeId: r
        }));
        if (!re.components || !re.components[b] || !re.components[b].styleOverrides)
          return null;
        const ee = re.components[b].styleOverrides, J = {};
        return Object.entries(ee).forEach(([ce, de]) => {
          J[ce] = Zb(de, C({}, q, {
            theme: re
          }));
        }), D(q, J);
      }), b && !P && G.push((q) => {
        var re;
        const ee = Nb(C({}, q, {
          defaultTheme: s,
          themeId: r
        })), J = ee == null || (re = ee.components) == null || (re = re[b]) == null ? void 0 : re.variants;
        return Zb({
          variants: J
        }, C({}, q, {
          theme: ee
        }));
      }), L || G.push(v);
      const Y = G.length - $.length;
      if (Array.isArray(U) && Y > 0) {
        const q = new Array(Y).fill("");
        F = [...U, ...q], F.raw = [...U.raw, ...q];
      }
      const Q = V(F, ...G);
      if (process.env.NODE_ENV !== "production") {
        let q;
        b && (q = `${b}${oe(S || "")}`), q === void 0 && (q = `Styled(${u1(m)})`), Q.displayName = q;
      }
      return m.muiName && (Q.muiName = m.muiName), Q;
    };
    return V.withConfig && (j.withConfig = V.withConfig), j;
  };
}
const Kz = Yz(), d1 = Kz;
function k0(e, r) {
  const s = C({}, r);
  return Object.keys(e).forEach((u) => {
    if (u.toString().match(/^(components|slots)$/))
      s[u] = C({}, e[u], s[u]);
    else if (u.toString().match(/^(componentsProps|slotProps)$/)) {
      const f = e[u] || {}, v = r[u];
      s[u] = {}, !v || !Object.keys(v) ? s[u] = f : !f || !Object.keys(f) ? s[u] = v : (s[u] = C({}, v), Object.keys(f).forEach((m) => {
        s[u][m] = k0(f[m], v[m]);
      }));
    } else
      s[u] === void 0 && (s[u] = e[u]);
  }), s;
}
function p1(e) {
  const {
    theme: r,
    name: s,
    props: u
  } = e;
  return !r || !r.components || !r.components[s] || !r.components[s].defaultProps ? u : k0(r.components[s].defaultProps, u);
}
function vh({
  props: e,
  name: r,
  defaultTheme: s,
  themeId: u
}) {
  let f = E0(s);
  return u && (f = f[u] || f), p1({
    theme: f,
    name: r,
    props: e
  });
}
const Xz = typeof window < "u" ? O.useLayoutEffect : O.useEffect, ur = Xz;
function Qz(e, r, s, u, f) {
  const [v, m] = O.useState(() => f && s ? s(e).matches : u ? u(e).matches : r);
  return ur(() => {
    let y = !0;
    if (!s)
      return;
    const b = s(e), S = () => {
      y && m(b.matches);
    };
    return S(), b.addListener(S), () => {
      y = !1, b.removeListener(S);
    };
  }, [e, s]), v;
}
const ZN = O["useSyncExternalStore"];
function Zz(e, r, s, u, f) {
  const v = O.useCallback(() => r, [r]), m = O.useMemo(() => {
    if (f && s)
      return () => s(e).matches;
    if (u !== null) {
      const {
        matches: E
      } = u(e);
      return () => E;
    }
    return v;
  }, [v, e, u, f, s]), [y, b] = O.useMemo(() => {
    if (s === null)
      return [v, () => () => {
      }];
    const E = s(e);
    return [() => E.matches, (k) => (E.addListener(k), () => {
      E.removeListener(k);
    })];
  }, [v, s, e]);
  return ZN(b, y, m);
}
function Jz(e, r = {}) {
  const s = WN(), u = typeof window < "u" && typeof window.matchMedia < "u", {
    defaultMatches: f = !1,
    matchMedia: v = u ? window.matchMedia : null,
    ssrMatchMedia: m = null,
    noSsr: y = !1
  } = p1({
    name: "MuiUseMediaQuery",
    props: r,
    theme: s
  });
  process.env.NODE_ENV !== "production" && typeof e == "function" && s === null && console.error(["MUI: The `query` argument provided is invalid.", "You are providing a function without a theme in the context.", "One of the parent elements needs to use a ThemeProvider."].join(`
`));
  let b = typeof e == "function" ? e(s) : e;
  b = b.replace(/^@media( ?)/m, "");
  const E = (ZN !== void 0 ? Zz : Qz)(b, f, v, m, y);
  return process.env.NODE_ENV !== "production" && O.useDebugValue({
    query: b,
    match: E
  }), E;
}
function f1(e, r = 0, s = 1) {
  return process.env.NODE_ENV !== "production" && (e < r || e > s) && console.error(`MUI: The value provided ${e} is out of range [${r}, ${s}].`), Lc(e, r, s);
}
function JN(e) {
  e = e.slice(1);
  const r = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let s = e.match(r);
  return s && s[0].length === 1 && (s = s.map((u) => u + u)), s ? `rgb${s.length === 4 ? "a" : ""}(${s.map((u, f) => f < 3 ? parseInt(u, 16) : Math.round(parseInt(u, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function eF(e) {
  const r = e.toString(16);
  return r.length === 1 ? `0${r}` : r;
}
function Ol(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return Ol(JN(e));
  const r = e.indexOf("("), s = e.substring(0, r);
  if (["rgb", "rgba", "hsl", "hsla", "color"].indexOf(s) === -1)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : Ns(9, e));
  let u = e.substring(r + 1, e.length - 1), f;
  if (s === "color") {
    if (u = u.split(" "), f = u.shift(), u.length === 4 && u[3].charAt(0) === "/" && (u[3] = u[3].slice(1)), ["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].indexOf(f) === -1)
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${f}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : Ns(10, f));
  } else
    u = u.split(",");
  return u = u.map((v) => parseFloat(v)), {
    type: s,
    values: u,
    colorSpace: f
  };
}
function hh(e) {
  const {
    type: r,
    colorSpace: s
  } = e;
  let {
    values: u
  } = e;
  return r.indexOf("rgb") !== -1 ? u = u.map((f, v) => v < 3 ? parseInt(f, 10) : f) : r.indexOf("hsl") !== -1 && (u[1] = `${u[1]}%`, u[2] = `${u[2]}%`), r.indexOf("color") !== -1 ? u = `${s} ${u.join(" ")}` : u = `${u.join(", ")}`, `${r}(${u})`;
}
function tF(e) {
  if (e.indexOf("#") === 0)
    return e;
  const {
    values: r
  } = Ol(e);
  return `#${r.map((s, u) => eF(u === 3 ? Math.round(255 * s) : s)).join("")}`;
}
function e$(e) {
  e = Ol(e);
  const {
    values: r
  } = e, s = r[0], u = r[1] / 100, f = r[2] / 100, v = u * Math.min(f, 1 - f), m = (S, E = (S + s / 30) % 12) => f - v * Math.max(Math.min(E - 3, 9 - E, 1), -1);
  let y = "rgb";
  const b = [Math.round(m(0) * 255), Math.round(m(8) * 255), Math.round(m(4) * 255)];
  return e.type === "hsla" && (y += "a", b.push(r[3])), hh({
    type: y,
    values: b
  });
}
function r0(e) {
  e = Ol(e);
  let r = e.type === "hsl" || e.type === "hsla" ? Ol(e$(e)).values : e.values;
  return r = r.map((s) => (e.type !== "color" && (s /= 255), s <= 0.03928 ? s / 12.92 : ((s + 0.055) / 1.055) ** 2.4)), Number((0.2126 * r[0] + 0.7152 * r[1] + 0.0722 * r[2]).toFixed(3));
}
function nF(e, r) {
  const s = r0(e), u = r0(r);
  return (Math.max(s, u) + 0.05) / (Math.min(s, u) + 0.05);
}
function lf(e, r) {
  return e = Ol(e), r = f1(r), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${r}` : e.values[3] = r, hh(e);
}
function a0(e, r) {
  if (e = Ol(e), r = f1(r), e.type.indexOf("hsl") !== -1)
    e.values[2] *= 1 - r;
  else if (e.type.indexOf("rgb") !== -1 || e.type.indexOf("color") !== -1)
    for (let s = 0; s < 3; s += 1)
      e.values[s] *= 1 - r;
  return hh(e);
}
function i0(e, r) {
  if (e = Ol(e), r = f1(r), e.type.indexOf("hsl") !== -1)
    e.values[2] += (100 - e.values[2]) * r;
  else if (e.type.indexOf("rgb") !== -1)
    for (let s = 0; s < 3; s += 1)
      e.values[s] += (255 - e.values[s]) * r;
  else if (e.type.indexOf("color") !== -1)
    for (let s = 0; s < 3; s += 1)
      e.values[s] += (1 - e.values[s]) * r;
  return hh(e);
}
function oF(e, r = 0.15) {
  return r0(e) > 0.5 ? a0(e, r) : i0(e, r);
}
function jo(e, r) {
  return process.env.NODE_ENV === "production" ? () => null : function(...u) {
    return e(...u) || r(...u);
  };
}
function rF(e) {
  const {
    prototype: r = {}
  } = e;
  return !!r.isReactComponent;
}
function t$(e, r, s, u, f) {
  const v = e[r], m = f || r;
  if (v == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let y;
  const b = v.type;
  return typeof b == "function" && !rF(b) && (y = "Did you accidentally use a plain function component for an element instead?"), y !== void 0 ? new Error(`Invalid ${u} \`${m}\` supplied to \`${s}\`. Expected an element that can hold a ref. ${y} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const n$ = jo(n.element, t$);
n$.isRequired = jo(n.element.isRequired, t$);
const Uc = n$;
function aF(e) {
  const {
    prototype: r = {}
  } = e;
  return !!r.isReactComponent;
}
function iF(e, r, s, u, f) {
  const v = e[r], m = f || r;
  if (v == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let y;
  return typeof v == "function" && !aF(v) && (y = "Did you accidentally provide a plain function component instead?"), y !== void 0 ? new Error(`Invalid ${u} \`${m}\` supplied to \`${s}\`. Expected an element type that can hold a ref. ${y} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const jc = jo(n.elementType, iF), sF = "exact-prop: ​";
function cd(e) {
  return process.env.NODE_ENV === "production" ? e : C({}, e, {
    [sF]: (r) => {
      const s = Object.keys(r).filter((u) => !e.hasOwnProperty(u));
      return s.length > 0 ? new Error(`The following props are not supported: ${s.map((u) => `\`${u}\``).join(", ")}. Please remove them.`) : null;
    }
  });
}
function $s(e, r, s, u, f) {
  if (process.env.NODE_ENV === "production")
    return null;
  const v = e[r], m = f || r;
  return v == null ? null : v && v.nodeType !== 1 ? new Error(`Invalid ${u} \`${m}\` supplied to \`${s}\`. Expected an HTMLElement.`) : null;
}
const lF = n.oneOfType([n.func, n.object]), Tr = lF;
function GT(...e) {
  return e.reduce((r, s) => s == null ? r : function(...f) {
    r.apply(this, f), s.apply(this, f);
  }, () => {
  });
}
function gh(e, r = 166) {
  let s;
  function u(...f) {
    const v = () => {
      e.apply(this, f);
    };
    clearTimeout(s), s = setTimeout(v, r);
  }
  return u.clear = () => {
    clearTimeout(s);
  }, u;
}
function _J(e, r) {
  return process.env.NODE_ENV === "production" ? () => null : (s, u, f, v, m) => {
    const y = f || "<<anonymous>>", b = m || u;
    return typeof s[u] < "u" ? new Error(`The ${v} \`${b}\` of \`${y}\` is deprecated. ${r}`) : null;
  };
}
function Rl(e, r) {
  var s, u;
  return /* @__PURE__ */ O.isValidElement(e) && r.indexOf(
    // For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    (s = e.type.muiName) != null ? s : (u = e.type) == null || (u = u._payload) == null || (u = u.value) == null ? void 0 : u.muiName
  ) !== -1;
}
function Wn(e) {
  return e && e.ownerDocument || document;
}
function ta(e) {
  return Wn(e).defaultView || window;
}
function cF(e, r) {
  if (process.env.NODE_ENV === "production")
    return () => null;
  const s = r ? C({}, r.propTypes) : null;
  return (f) => (v, m, y, b, S, ...E) => {
    const k = S || m, D = s == null ? void 0 : s[k];
    if (D) {
      const M = D(v, m, y, b, S, ...E);
      if (M)
        return M;
    }
    return typeof v[m] < "u" && !v[f] ? new Error(`The prop \`${k}\` of \`${e}\` can only be used together with the \`${f}\` prop.`) : null;
  };
}
function s0(e, r) {
  typeof e == "function" ? e(r) : e && (e.current = r);
}
let Ww = 0;
function uF(e) {
  const [r, s] = O.useState(e), u = e || r;
  return O.useEffect(() => {
    r == null && (Ww += 1, s(`mui-${Ww}`));
  }, [r]), u;
}
const Gw = O["useId".toString()];
function Ms(e) {
  if (Gw !== void 0) {
    const r = Gw();
    return e ?? r;
  }
  return uF(e);
}
function m1(e, r, s, u, f) {
  if (process.env.NODE_ENV === "production")
    return null;
  const v = f || r;
  return typeof e[r] < "u" ? new Error(`The prop \`${v}\` is not supported. Please remove it.`) : null;
}
function za({
  controlled: e,
  default: r,
  name: s,
  state: u = "value"
}) {
  const {
    current: f
  } = O.useRef(e !== void 0), [v, m] = O.useState(r), y = f ? e : v;
  if (process.env.NODE_ENV !== "production") {
    O.useEffect(() => {
      f !== (e !== void 0) && console.error([`MUI: A component is changing the ${f ? "" : "un"}controlled ${u} state of ${s} to be ${f ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${s} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [u, s, e]);
    const {
      current: S
    } = O.useRef(r);
    O.useEffect(() => {
      !f && S !== r && console.error([`MUI: A component is changing the default ${u} state of an uncontrolled ${s} after being initialized. To suppress this warning opt to use a controlled ${s}.`].join(`
`));
    }, [JSON.stringify(r)]);
  }
  const b = O.useCallback((S) => {
    f || m(S);
  }, []);
  return [y, b];
}
function so(e) {
  const r = O.useRef(e);
  return ur(() => {
    r.current = e;
  }), O.useRef((...s) => (
    // @ts-expect-error hide `this`
    (0, r.current)(...s)
  )).current;
}
function yn(...e) {
  return O.useMemo(() => e.every((r) => r == null) ? null : (r) => {
    e.forEach((s) => {
      s0(s, r);
    });
  }, e);
}
const qw = {};
function dF(e, r) {
  const s = O.useRef(qw);
  return s.current === qw && (s.current = e(r)), s;
}
const pF = [];
function fF(e) {
  O.useEffect(e, pF);
}
class yh {
  constructor() {
    this.currentId = 0, this.clear = () => {
      this.currentId !== 0 && (clearTimeout(this.currentId), this.currentId = 0);
    }, this.disposeEffect = () => this.clear;
  }
  static create() {
    return new yh();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(r, s) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = 0, s();
    }, r);
  }
}
function El() {
  const e = dF(yh.create).current;
  return fF(e.disposeEffect), e;
}
let N0 = !0, qT = !1;
const mF = new yh(), vF = {
  text: !0,
  search: !0,
  url: !0,
  tel: !0,
  email: !0,
  password: !0,
  number: !0,
  date: !0,
  month: !0,
  week: !0,
  time: !0,
  datetime: !0,
  "datetime-local": !0
};
function hF(e) {
  const {
    type: r,
    tagName: s
  } = e;
  return !!(s === "INPUT" && vF[r] && !e.readOnly || s === "TEXTAREA" && !e.readOnly || e.isContentEditable);
}
function gF(e) {
  e.metaKey || e.altKey || e.ctrlKey || (N0 = !0);
}
function ST() {
  N0 = !1;
}
function yF() {
  this.visibilityState === "hidden" && qT && (N0 = !0);
}
function bF(e) {
  e.addEventListener("keydown", gF, !0), e.addEventListener("mousedown", ST, !0), e.addEventListener("pointerdown", ST, !0), e.addEventListener("touchstart", ST, !0), e.addEventListener("visibilitychange", yF, !0);
}
function CF(e) {
  const {
    target: r
  } = e;
  try {
    return r.matches(":focus-visible");
  } catch {
  }
  return N0 || hF(r);
}
function bh() {
  const e = O.useCallback((f) => {
    f != null && bF(f.ownerDocument);
  }, []), r = O.useRef(!1);
  function s() {
    return r.current ? (qT = !0, mF.start(100, () => {
      qT = !1;
    }), r.current = !1, !0) : !1;
  }
  function u(f) {
    return CF(f) ? (r.current = !0, !0) : !1;
  }
  return {
    isFocusVisibleRef: r,
    onFocus: u,
    onBlur: s,
    ref: e
  };
}
function o$(e) {
  const r = e.documentElement.clientWidth;
  return Math.abs(window.innerWidth - r);
}
let nf;
function r$() {
  if (nf)
    return nf;
  const e = document.createElement("div"), r = document.createElement("div");
  return r.style.width = "10px", r.style.height = "1px", e.appendChild(r), e.dir = "rtl", e.style.fontSize = "14px", e.style.width = "4px", e.style.height = "1px", e.style.position = "absolute", e.style.top = "-1000px", e.style.overflow = "scroll", document.body.appendChild(e), nf = "reverse", e.scrollLeft > 0 ? nf = "default" : (e.scrollLeft = 1, e.scrollLeft === 0 && (nf = "negative")), document.body.removeChild(e), nf;
}
function xF(e, r) {
  const s = e.scrollLeft;
  if (r !== "rtl")
    return s;
  switch (r$()) {
    case "negative":
      return e.scrollWidth - e.clientWidth + s;
    case "reverse":
      return e.scrollWidth - e.clientWidth - s;
    default:
      return s;
  }
}
const SF = (e) => {
  const r = O.useRef({});
  return O.useEffect(() => {
    r.current = e;
  }), r.current;
}, v1 = SF;
function a$(e) {
  return O.Children.toArray(e).filter((r) => /* @__PURE__ */ O.isValidElement(r));
}
const TF = {
  border: 0,
  clip: "rect(0 0 0 0)",
  height: "1px",
  margin: -1,
  overflow: "hidden",
  padding: 0,
  position: "absolute",
  whiteSpace: "nowrap",
  width: "1px"
}, i$ = TF;
function EF(e) {
  const r = typeof e;
  switch (r) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return r;
  }
}
function RF(e) {
  return typeof e == "number" && isFinite(e) && Math.floor(e) === e;
}
const OF = Number.isInteger || RF;
function s$(e, r, s, u) {
  const f = e[r];
  if (f == null || !OF(f)) {
    const v = EF(f);
    return new RangeError(`Invalid ${u} \`${r}\` of type \`${v}\` supplied to \`${s}\`, expected \`integer\`.`);
  }
  return null;
}
function l$(e, r, ...s) {
  return e[r] === void 0 ? null : s$(e, r, ...s);
}
function YT() {
  return null;
}
l$.isRequired = s$;
YT.isRequired = YT;
const Co = process.env.NODE_ENV === "production" ? YT : l$;
function Ue(e, r, s = void 0) {
  const u = {};
  return Object.keys(e).forEach(
    // `Object.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.
    // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208
    (f) => {
      u[f] = e[f].reduce((v, m) => {
        if (m) {
          const y = r(m);
          y !== "" && v.push(y), s && s[m] && v.push(s[m]);
        }
        return v;
      }, []).join(" ");
    }
  ), u;
}
const c$ = /* @__PURE__ */ O.createContext(null);
process.env.NODE_ENV !== "production" && (c$.displayName = "ThemeContext");
const u$ = c$;
function h1() {
  const e = O.useContext(u$);
  return process.env.NODE_ENV !== "production" && O.useDebugValue(e), e;
}
const wF = typeof Symbol == "function" && Symbol.for, kF = wF ? Symbol.for("mui.nested") : "__THEME_NESTED__";
function NF(e, r) {
  if (typeof r == "function") {
    const s = r(e);
    return process.env.NODE_ENV !== "production" && (s || console.error(["MUI: You should return an object from your theme function, i.e.", "<ThemeProvider theme={() => ({})} />"].join(`
`))), s;
  }
  return C({}, e, r);
}
function l0(e) {
  const {
    children: r,
    theme: s
  } = e, u = h1();
  process.env.NODE_ENV !== "production" && u === null && typeof s == "function" && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const f = O.useMemo(() => {
    const v = u === null ? s : NF(u, s);
    return v != null && (v[kF] = u !== null), v;
  }, [s, u]);
  return /* @__PURE__ */ z(u$.Provider, {
    value: f,
    children: r
  });
}
process.env.NODE_ENV !== "production" && (l0.propTypes = {
  /**
   * Your component tree.
   */
  children: n.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: n.oneOfType([n.object, n.func]).isRequired
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (l0.propTypes = cd(l0.propTypes));
const Yw = {};
function Kw(e, r, s, u = !1) {
  return O.useMemo(() => {
    const f = e && r[e] || r;
    if (typeof s == "function") {
      const v = s(f), m = e ? C({}, r, {
        [e]: v
      }) : v;
      return u ? () => m : m;
    }
    return e ? C({}, r, {
      [e]: s
    }) : C({}, r, s);
  }, [e, r, s, u]);
}
function sh(e) {
  const {
    children: r,
    theme: s,
    themeId: u
  } = e, f = WN(Yw), v = h1() || Yw;
  process.env.NODE_ENV !== "production" && (f === null && typeof s == "function" || u && f && !f[u] && typeof s == "function") && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const m = Kw(u, f, s), y = Kw(u, v, s, !0);
  return /* @__PURE__ */ z(l0, {
    theme: y,
    children: /* @__PURE__ */ z(qB.Provider, {
      value: m,
      children: r
    })
  });
}
process.env.NODE_ENV !== "production" && (sh.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Your component tree.
   */
  children: n.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: n.oneOfType([n.func, n.object]).isRequired,
  /**
   * The design system's unique id for getting the corresponded theme when there are multiple design systems.
   */
  themeId: n.string
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (sh.propTypes = cd(sh.propTypes));
const g1 = "mode", y1 = "color-scheme", d$ = "data-color-scheme";
function $F(e) {
  const {
    defaultMode: r = "light",
    defaultLightColorScheme: s = "light",
    defaultDarkColorScheme: u = "dark",
    modeStorageKey: f = g1,
    colorSchemeStorageKey: v = y1,
    attribute: m = d$,
    colorSchemeNode: y = "document.documentElement"
  } = e || {};
  return /* @__PURE__ */ z("script", {
    // eslint-disable-next-line react/no-danger
    dangerouslySetInnerHTML: {
      __html: `(function() {
try {
  var mode = localStorage.getItem('${f}') || '${r}';
  var colorScheme = '';
  if (mode === 'system') {
    // handle system mode
    var mql = window.matchMedia('(prefers-color-scheme: dark)');
    if (mql.matches) {
      colorScheme = localStorage.getItem('${v}-dark') || '${u}';
    } else {
      colorScheme = localStorage.getItem('${v}-light') || '${s}';
    }
  }
  if (mode === 'light') {
    colorScheme = localStorage.getItem('${v}-light') || '${s}';
  }
  if (mode === 'dark') {
    colorScheme = localStorage.getItem('${v}-dark') || '${u}';
  }
  if (colorScheme) {
    ${y}.setAttribute('${m}', colorScheme);
  }
} catch(e){}})();`
    }
  }, "mui-color-scheme-init");
}
function Xw(e) {
  if (typeof window < "u" && e === "system")
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
function p$(e, r) {
  if (e.mode === "light" || e.mode === "system" && e.systemMode === "light")
    return r("light");
  if (e.mode === "dark" || e.mode === "system" && e.systemMode === "dark")
    return r("dark");
}
function MF(e) {
  return p$(e, (r) => {
    if (r === "light")
      return e.lightColorScheme;
    if (r === "dark")
      return e.darkColorScheme;
  });
}
function TT(e, r) {
  if (typeof window > "u")
    return;
  let s;
  try {
    s = localStorage.getItem(e) || void 0, s || localStorage.setItem(e, r);
  } catch {
  }
  return s || r;
}
function DF(e) {
  const {
    defaultMode: r = "light",
    defaultLightColorScheme: s,
    defaultDarkColorScheme: u,
    supportedColorSchemes: f = [],
    modeStorageKey: v = g1,
    colorSchemeStorageKey: m = y1,
    storageWindow: y = typeof window > "u" ? void 0 : window
  } = e, b = f.join(","), [S, E] = O.useState(() => {
    const w = TT(v, r), _ = TT(`${m}-light`, s), V = TT(`${m}-dark`, u);
    return {
      mode: w,
      systemMode: Xw(w),
      lightColorScheme: _,
      darkColorScheme: V
    };
  }), k = MF(S), D = O.useCallback((w) => {
    E((_) => {
      if (w === _.mode)
        return _;
      const V = w || r;
      try {
        localStorage.setItem(v, V);
      } catch {
      }
      return C({}, _, {
        mode: V,
        systemMode: Xw(V)
      });
    });
  }, [v, r]), M = O.useCallback((w) => {
    w ? typeof w == "string" ? w && !b.includes(w) ? console.error(`\`${w}\` does not exist in \`theme.colorSchemes\`.`) : E((_) => {
      const V = C({}, _);
      return p$(_, (A) => {
        try {
          localStorage.setItem(`${m}-${A}`, w);
        } catch {
        }
        A === "light" && (V.lightColorScheme = w), A === "dark" && (V.darkColorScheme = w);
      }), V;
    }) : E((_) => {
      const V = C({}, _), A = w.light === null ? s : w.light, j = w.dark === null ? u : w.dark;
      if (A)
        if (!b.includes(A))
          console.error(`\`${A}\` does not exist in \`theme.colorSchemes\`.`);
        else {
          V.lightColorScheme = A;
          try {
            localStorage.setItem(`${m}-light`, A);
          } catch {
          }
        }
      if (j)
        if (!b.includes(j))
          console.error(`\`${j}\` does not exist in \`theme.colorSchemes\`.`);
        else {
          V.darkColorScheme = j;
          try {
            localStorage.setItem(`${m}-dark`, j);
          } catch {
          }
        }
      return V;
    }) : E((_) => {
      try {
        localStorage.setItem(`${m}-light`, s), localStorage.setItem(`${m}-dark`, u);
      } catch {
      }
      return C({}, _, {
        lightColorScheme: s,
        darkColorScheme: u
      });
    });
  }, [b, m, s, u]), P = O.useCallback((w) => {
    S.mode === "system" && E((_) => C({}, _, {
      systemMode: w != null && w.matches ? "dark" : "light"
    }));
  }, [S.mode]), L = O.useRef(P);
  return L.current = P, O.useEffect(() => {
    const w = (...V) => L.current(...V), _ = window.matchMedia("(prefers-color-scheme: dark)");
    return _.addListener(w), w(_), () => _.removeListener(w);
  }, []), O.useEffect(() => {
    const w = (_) => {
      const V = _.newValue;
      typeof _.key == "string" && _.key.startsWith(m) && (!V || b.match(V)) && (_.key.endsWith("light") && M({
        light: V
      }), _.key.endsWith("dark") && M({
        dark: V
      })), _.key === v && (!V || ["light", "dark", "system"].includes(V)) && D(V || r);
    };
    if (y)
      return y.addEventListener("storage", w), () => y.removeEventListener("storage", w);
  }, [M, D, v, m, b, r, y]), C({}, S, {
    colorScheme: k,
    setMode: D,
    setColorScheme: M
  });
}
const PF = ["colorSchemes", "components", "generateCssVars", "cssVarPrefix"], LF = "*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
function IF(e) {
  const {
    themeId: r,
    /**
     * This `theme` object needs to follow a certain structure to
     * be used correctly by the finel `CssVarsProvider`. It should have a
     * `colorSchemes` key with the light and dark (and any other) palette.
     * It should also ideally have a vars object created using `prepareCssVars`.
     */
    theme: s = {},
    attribute: u = d$,
    modeStorageKey: f = g1,
    colorSchemeStorageKey: v = y1,
    defaultMode: m = "light",
    defaultColorScheme: y,
    disableTransitionOnChange: b = !1,
    resolveTheme: S,
    excludeVariablesFromRoot: E
  } = e;
  (!s.colorSchemes || typeof y == "string" && !s.colorSchemes[y] || typeof y == "object" && !s.colorSchemes[y == null ? void 0 : y.light] || typeof y == "object" && !s.colorSchemes[y == null ? void 0 : y.dark]) && console.error(`MUI: \`${y}\` does not exist in \`theme.colorSchemes\`.`);
  const k = /* @__PURE__ */ O.createContext(void 0);
  process.env.NODE_ENV !== "production" && (k.displayName = "ColorSchemeContext");
  const D = () => {
    const _ = O.useContext(k);
    if (!_)
      throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `useColorScheme` must be called under <CssVarsProvider />" : Ns(19));
    return _;
  };
  function M({
    children: _,
    theme: V = s,
    modeStorageKey: A = f,
    colorSchemeStorageKey: j = v,
    attribute: U = u,
    defaultMode: $ = m,
    defaultColorScheme: F = y,
    disableTransitionOnChange: G = b,
    storageWindow: Y = typeof window > "u" ? void 0 : window,
    documentNode: Q = typeof document > "u" ? void 0 : document,
    colorSchemeNode: q = typeof document > "u" ? void 0 : document.documentElement,
    colorSchemeSelector: re = ":root",
    disableNestedContext: ee = !1,
    disableStyleSheetGeneration: J = !1
  }) {
    const ce = O.useRef(!1), de = h1(), fe = O.useContext(k), K = !!fe && !ee, ne = V[r], ve = ne || V, {
      colorSchemes: Ke = {},
      components: tt = {},
      generateCssVars: Ie = () => ({
        vars: {},
        css: {}
      }),
      cssVarPrefix: De
    } = ve, Ye = me(ve, PF), ke = Object.keys(Ke), lt = typeof F == "string" ? F : F.light, xe = typeof F == "string" ? F : F.dark, {
      mode: ze,
      setMode: ut,
      systemMode: Xe,
      lightColorScheme: rt,
      darkColorScheme: nt,
      colorScheme: le,
      setColorScheme: $e
    } = DF({
      supportedColorSchemes: ke,
      defaultLightColorScheme: lt,
      defaultDarkColorScheme: xe,
      modeStorageKey: A,
      colorSchemeStorageKey: j,
      defaultMode: $,
      storageWindow: Y
    });
    let Oe = ze, dt = le;
    K && (Oe = fe.mode, dt = fe.colorScheme);
    const it = (() => Oe || ($ === "system" ? m : $))(), zt = (() => dt || (it === "dark" ? xe : lt))(), {
      css: Dt,
      vars: ht
    } = Ie(), Tt = C({}, Ye, {
      components: tt,
      colorSchemes: Ke,
      cssVarPrefix: De,
      vars: ht,
      getColorSchemeSelector: (Ce) => `[${U}="${Ce}"] &`
    }), Lt = {}, At = {};
    Object.entries(Ke).forEach(([Ce, he]) => {
      const {
        css: Qe,
        vars: Me
      } = Ie(Ce);
      Tt.vars = ji(Tt.vars, Me), Ce === zt && (Object.keys(he).forEach((qe) => {
        he[qe] && typeof he[qe] == "object" ? Tt[qe] = C({}, Tt[qe], he[qe]) : Tt[qe] = he[qe];
      }), Tt.palette && (Tt.palette.colorScheme = Ce));
      const et = (() => typeof F == "string" ? F : $ === "dark" ? F.dark : F.light)();
      if (Ce === et) {
        if (E) {
          const qe = {};
          E(De).forEach((We) => {
            qe[We] = Qe[We], delete Qe[We];
          }), Lt[`[${U}="${Ce}"]`] = qe;
        }
        Lt[`${re}, [${U}="${Ce}"]`] = Qe;
      } else
        At[`${re === ":root" ? "" : re}[${U}="${Ce}"]`] = Qe;
    }), Tt.vars = ji(Tt.vars, ht), O.useEffect(() => {
      dt && q && q.setAttribute(U, dt);
    }, [dt, U, q]), O.useEffect(() => {
      let Ce;
      if (G && ce.current && Q) {
        const he = Q.createElement("style");
        he.appendChild(Q.createTextNode(LF)), Q.head.appendChild(he), window.getComputedStyle(Q.body), Ce = setTimeout(() => {
          Q.head.removeChild(he);
        }, 1);
      }
      return () => {
        clearTimeout(Ce);
      };
    }, [dt, G, Q]), O.useEffect(() => (ce.current = !0, () => {
      ce.current = !1;
    }), []);
    const tn = O.useMemo(() => ({
      mode: Oe,
      systemMode: Xe,
      setMode: ut,
      lightColorScheme: rt,
      darkColorScheme: nt,
      colorScheme: dt,
      setColorScheme: $e,
      allColorSchemes: ke
    }), [ke, dt, nt, rt, Oe, $e, ut, Xe]);
    let an = !0;
    (J || K && (de == null ? void 0 : de.cssVarPrefix) === De) && (an = !1);
    const Qt = /* @__PURE__ */ gt(O.Fragment, {
      children: [an && /* @__PURE__ */ gt(O.Fragment, {
        children: [/* @__PURE__ */ z(Kb, {
          styles: {
            [re]: Dt
          }
        }), /* @__PURE__ */ z(Kb, {
          styles: Lt
        }), /* @__PURE__ */ z(Kb, {
          styles: At
        })]
      }), /* @__PURE__ */ z(sh, {
        themeId: ne ? r : void 0,
        theme: S ? S(Tt) : Tt,
        children: _
      })]
    });
    return K ? Qt : /* @__PURE__ */ z(k.Provider, {
      value: tn,
      children: Qt
    });
  }
  process.env.NODE_ENV !== "production" && (M.propTypes = {
    /**
     * The body attribute name to attach colorScheme.
     */
    attribute: n.string,
    /**
     * The component tree.
     */
    children: n.node,
    /**
     * The node used to attach the color-scheme attribute
     */
    colorSchemeNode: n.any,
    /**
     * The CSS selector for attaching the generated custom properties
     */
    colorSchemeSelector: n.string,
    /**
     * localStorage key used to store `colorScheme`
     */
    colorSchemeStorageKey: n.string,
    /**
     * The initial color scheme used.
     */
    defaultColorScheme: n.oneOfType([n.string, n.object]),
    /**
     * The initial mode used.
     */
    defaultMode: n.string,
    /**
     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.
     */
    disableNestedContext: n.bool,
    /**
     * If `true`, the style sheet won't be generated.
     *
     * This is useful for controlling nested CssVarsProvider behavior.
     */
    disableStyleSheetGeneration: n.bool,
    /**
     * Disable CSS transitions when switching between modes or color schemes.
     */
    disableTransitionOnChange: n.bool,
    /**
     * The document to attach the attribute to.
     */
    documentNode: n.any,
    /**
     * The key in the local storage used to store current color scheme.
     */
    modeStorageKey: n.string,
    /**
     * The window that attaches the 'storage' event listener.
     * @default window
     */
    storageWindow: n.any,
    /**
     * The calculated theme object that will be passed through context.
     */
    theme: n.object
  });
  const P = typeof y == "string" ? y : y.light, L = typeof y == "string" ? y : y.dark;
  return {
    CssVarsProvider: M,
    useColorScheme: D,
    getInitColorSchemeScript: (_) => $F(C({
      attribute: u,
      colorSchemeStorageKey: v,
      defaultMode: m,
      defaultLightColorScheme: P,
      defaultDarkColorScheme: L,
      modeStorageKey: f
    }, _))
  };
}
function _F(e = "") {
  function r(...u) {
    if (!u.length)
      return "";
    const f = u[0];
    return typeof f == "string" && !f.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${f}${r(...u.slice(1))})` : `, ${f}`;
  }
  return (u, ...f) => `var(--${e ? `${e}-` : ""}${u}${r(...f)})`;
}
const Qw = (e, r, s, u = []) => {
  let f = e;
  r.forEach((v, m) => {
    m === r.length - 1 ? Array.isArray(f) ? f[Number(v)] = s : f && typeof f == "object" && (f[v] = s) : f && typeof f == "object" && (f[v] || (f[v] = u.includes(v) ? [] : {}), f = f[v]);
  });
}, AF = (e, r, s) => {
  function u(f, v = [], m = []) {
    Object.entries(f).forEach(([y, b]) => {
      (!s || s && !s([...v, y])) && b != null && (typeof b == "object" && Object.keys(b).length > 0 ? u(b, [...v, y], Array.isArray(b) ? [...m, y] : m) : r([...v, y], b, m));
    });
  }
  u(e);
}, BF = (e, r) => typeof r == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((u) => e.includes(u)) || e[e.length - 1].toLowerCase().indexOf("opacity") >= 0 ? r : `${r}px` : r;
function ET(e, r) {
  const {
    prefix: s,
    shouldSkipGeneratingVar: u
  } = r || {}, f = {}, v = {}, m = {};
  return AF(
    e,
    (y, b, S) => {
      if ((typeof b == "string" || typeof b == "number") && (!u || !u(y, b))) {
        const E = `--${s ? `${s}-` : ""}${y.join("-")}`;
        Object.assign(f, {
          [E]: BF(y, b)
        }), Qw(v, y, `var(${E})`, S), Qw(m, y, `var(${E}, ${b})`, S);
      }
    },
    (y) => y[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: f,
    vars: v,
    varsWithDefaults: m
  };
}
function lh(e) {
  "@babel/helpers - typeof";
  return lh = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(r) {
    return typeof r;
  } : function(r) {
    return r && typeof Symbol == "function" && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : typeof r;
  }, lh(e);
}
function zF(e, r) {
  if (lh(e) != "object" || !e)
    return e;
  var s = e[Symbol.toPrimitive];
  if (s !== void 0) {
    var u = s.call(e, r || "default");
    if (lh(u) != "object")
      return u;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (r === "string" ? String : Number)(e);
}
function FF(e) {
  var r = zF(e, "string");
  return lh(r) == "symbol" ? r : String(r);
}
const jF = ["colorSchemes", "components", "defaultColorScheme"];
function UF(e, r) {
  const {
    colorSchemes: s = {},
    defaultColorScheme: u = "light"
  } = e, f = me(e, jF), {
    vars: v,
    css: m,
    varsWithDefaults: y
  } = ET(f, r);
  let b = y;
  const S = {}, {
    [u]: E
  } = s, k = me(s, [u].map(FF));
  if (Object.entries(k || {}).forEach(([M, P]) => {
    const {
      vars: L,
      css: w,
      varsWithDefaults: _
    } = ET(P, r);
    b = ji(b, _), S[M] = {
      css: w,
      vars: L
    };
  }), E) {
    const {
      css: M,
      vars: P,
      varsWithDefaults: L
    } = ET(E, r);
    b = ji(b, L), S[u] = {
      css: M,
      vars: P
    };
  }
  return {
    vars: b,
    generateCssVars: (M) => {
      var P;
      if (!M) {
        var L;
        const _ = C({}, m);
        return {
          css: _,
          vars: v,
          selector: (r == null || (L = r.getSelector) == null ? void 0 : L.call(r, M, _)) || ":root"
        };
      }
      const w = C({}, S[M].css);
      return {
        css: w,
        vars: S[M].vars,
        selector: (r == null || (P = r.getSelector) == null ? void 0 : P.call(r, M, w)) || ":root"
      };
    }
  };
}
const VF = ["className", "component", "disableGutters", "fixed", "maxWidth", "classes"], HF = fh(), WF = d1("div", {
  name: "MuiContainer",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[`maxWidth${oe(String(s.maxWidth))}`], s.fixed && r.fixed, s.disableGutters && r.disableGutters];
  }
}), GF = (e) => vh({
  props: e,
  name: "MuiContainer",
  defaultTheme: HF
}), qF = (e, r) => {
  const s = (b) => je(r, b), {
    classes: u,
    fixed: f,
    disableGutters: v,
    maxWidth: m
  } = e, y = {
    root: ["root", m && `maxWidth${oe(String(m))}`, f && "fixed", v && "disableGutters"]
  };
  return Ue(y, s, u);
};
function YF(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: r = WF,
    useThemeProps: s = GF,
    componentName: u = "MuiContainer"
  } = e, f = r(({
    theme: m,
    ownerState: y
  }) => C({
    width: "100%",
    marginLeft: "auto",
    boxSizing: "border-box",
    marginRight: "auto",
    display: "block"
  }, !y.disableGutters && {
    paddingLeft: m.spacing(2),
    paddingRight: m.spacing(2),
    // @ts-ignore module augmentation fails if custom breakpoints are used
    [m.breakpoints.up("sm")]: {
      paddingLeft: m.spacing(3),
      paddingRight: m.spacing(3)
    }
  }), ({
    theme: m,
    ownerState: y
  }) => y.fixed && Object.keys(m.breakpoints.values).reduce((b, S) => {
    const E = S, k = m.breakpoints.values[E];
    return k !== 0 && (b[m.breakpoints.up(E)] = {
      maxWidth: `${k}${m.breakpoints.unit}`
    }), b;
  }, {}), ({
    theme: m,
    ownerState: y
  }) => C({}, y.maxWidth === "xs" && {
    // @ts-ignore module augmentation fails if custom breakpoints are used
    [m.breakpoints.up("xs")]: {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      maxWidth: Math.max(m.breakpoints.values.xs, 444)
    }
  }, y.maxWidth && // @ts-ignore module augmentation fails if custom breakpoints are used
  y.maxWidth !== "xs" && {
    // @ts-ignore module augmentation fails if custom breakpoints are used
    [m.breakpoints.up(y.maxWidth)]: {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      maxWidth: `${m.breakpoints.values[y.maxWidth]}${m.breakpoints.unit}`
    }
  })), v = /* @__PURE__ */ O.forwardRef(function(y, b) {
    const S = s(y), {
      className: E,
      component: k = "div",
      disableGutters: D = !1,
      fixed: M = !1,
      maxWidth: P = "lg"
    } = S, L = me(S, VF), w = C({}, S, {
      component: k,
      disableGutters: D,
      fixed: M,
      maxWidth: P
    }), _ = qF(w, u);
    return (
      // @ts-ignore theme is injected by the styled util
      /* @__PURE__ */ z(f, C({
        as: k,
        ownerState: w,
        className: pe(_.root, E),
        ref: b
      }, L))
    );
  });
  return process.env.NODE_ENV !== "production" && (v.propTypes = {
    children: n.node,
    classes: n.object,
    className: n.string,
    component: n.elementType,
    disableGutters: n.bool,
    fixed: n.bool,
    maxWidth: n.oneOfType([n.oneOf(["xs", "sm", "md", "lg", "xl", !1]), n.string]),
    sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
  }), v;
}
const KF = (e, r) => e.filter((s) => r.includes(s)), yf = (e, r, s) => {
  const u = e.keys[0];
  Array.isArray(r) ? r.forEach((f, v) => {
    s((m, y) => {
      v <= e.keys.length - 1 && (v === 0 ? Object.assign(m, y) : m[e.up(e.keys[v])] = y);
    }, f);
  }) : r && typeof r == "object" ? (Object.keys(r).length > e.keys.length ? e.keys : KF(e.keys, Object.keys(r))).forEach((v) => {
    if (e.keys.indexOf(v) !== -1) {
      const m = r[v];
      m !== void 0 && s((y, b) => {
        u === v ? Object.assign(y, b) : y[e.up(v)] = b;
      }, m);
    }
  }) : (typeof r == "number" || typeof r == "string") && s((f, v) => {
    Object.assign(f, v);
  }, r);
};
function wl(e) {
  return e ? `Level${e}` : "";
}
function Ch(e) {
  return e.unstable_level > 0 && e.container;
}
function f$(e) {
  return function(s) {
    return `var(--Grid-${s}Spacing${wl(e.unstable_level)})`;
  };
}
function b1(e) {
  return function(s) {
    return e.unstable_level === 0 ? `var(--Grid-${s}Spacing)` : `var(--Grid-${s}Spacing${wl(e.unstable_level - 1)})`;
  };
}
function C1(e) {
  return e.unstable_level === 0 ? "var(--Grid-columns)" : `var(--Grid-columns${wl(e.unstable_level - 1)})`;
}
const XF = ({
  theme: e,
  ownerState: r
}) => {
  const s = f$(r), u = {};
  return yf(e.breakpoints, r.gridSize, (f, v) => {
    let m = {};
    v === !0 && (m = {
      flexBasis: 0,
      flexGrow: 1,
      maxWidth: "100%"
    }), v === "auto" && (m = {
      flexBasis: "auto",
      flexGrow: 0,
      flexShrink: 0,
      maxWidth: "none",
      width: "auto"
    }), typeof v == "number" && (m = {
      flexGrow: 0,
      flexBasis: "auto",
      width: `calc(100% * ${v} / ${C1(r)}${Ch(r) ? ` + ${s("column")}` : ""})`
    }), f(u, m);
  }), u;
}, QF = ({
  theme: e,
  ownerState: r
}) => {
  const s = {};
  return yf(e.breakpoints, r.gridOffset, (u, f) => {
    let v = {};
    f === "auto" && (v = {
      marginLeft: "auto"
    }), typeof f == "number" && (v = {
      marginLeft: f === 0 ? "0px" : `calc(100% * ${f} / ${C1(r)})`
    }), u(s, v);
  }), s;
}, ZF = ({
  theme: e,
  ownerState: r
}) => {
  if (!r.container)
    return {};
  const s = Ch(r) ? {
    [`--Grid-columns${wl(r.unstable_level)}`]: C1(r)
  } : {
    "--Grid-columns": 12
  };
  return yf(e.breakpoints, r.columns, (u, f) => {
    u(s, {
      [`--Grid-columns${wl(r.unstable_level)}`]: f
    });
  }), s;
}, JF = ({
  theme: e,
  ownerState: r
}) => {
  if (!r.container)
    return {};
  const s = b1(r), u = Ch(r) ? {
    // Set the default spacing as its parent spacing.
    // It will be overridden if spacing props are provided
    [`--Grid-rowSpacing${wl(r.unstable_level)}`]: s("row")
  } : {};
  return yf(e.breakpoints, r.rowSpacing, (f, v) => {
    var m;
    f(u, {
      [`--Grid-rowSpacing${wl(r.unstable_level)}`]: typeof v == "string" ? v : (m = e.spacing) == null ? void 0 : m.call(e, v)
    });
  }), u;
}, ej = ({
  theme: e,
  ownerState: r
}) => {
  if (!r.container)
    return {};
  const s = b1(r), u = Ch(r) ? {
    // Set the default spacing as its parent spacing.
    // It will be overridden if spacing props are provided
    [`--Grid-columnSpacing${wl(r.unstable_level)}`]: s("column")
  } : {};
  return yf(e.breakpoints, r.columnSpacing, (f, v) => {
    var m;
    f(u, {
      [`--Grid-columnSpacing${wl(r.unstable_level)}`]: typeof v == "string" ? v : (m = e.spacing) == null ? void 0 : m.call(e, v)
    });
  }), u;
}, tj = ({
  theme: e,
  ownerState: r
}) => {
  if (!r.container)
    return {};
  const s = {};
  return yf(e.breakpoints, r.direction, (u, f) => {
    u(s, {
      flexDirection: f
    });
  }), s;
}, nj = ({
  ownerState: e
}) => {
  const r = f$(e), s = b1(e);
  return C({
    minWidth: 0,
    boxSizing: "border-box"
  }, e.container && C({
    display: "flex",
    flexWrap: "wrap"
  }, e.wrap && e.wrap !== "wrap" && {
    flexWrap: e.wrap
  }, {
    margin: `calc(${r("row")} / -2) calc(${r("column")} / -2)`
  }, e.disableEqualOverflow && {
    margin: `calc(${r("row")} * -1) 0px 0px calc(${r("column")} * -1)`
  }), (!e.container || Ch(e)) && C({
    padding: `calc(${s("row")} / 2) calc(${s("column")} / 2)`
  }, (e.disableEqualOverflow || e.parentDisableEqualOverflow) && {
    padding: `${s("row")} 0px 0px ${s("column")}`
  }));
}, oj = (e) => {
  const r = [];
  return Object.entries(e).forEach(([s, u]) => {
    u !== !1 && u !== void 0 && r.push(`grid-${s}-${String(u)}`);
  }), r;
}, rj = (e, r = "xs") => {
  function s(u) {
    return u === void 0 ? !1 : typeof u == "string" && !Number.isNaN(Number(u)) || typeof u == "number" && u > 0;
  }
  if (s(e))
    return [`spacing-${r}-${String(e)}`];
  if (typeof e == "object" && !Array.isArray(e)) {
    const u = [];
    return Object.entries(e).forEach(([f, v]) => {
      s(v) && u.push(`spacing-${f}-${String(v)}`);
    }), u;
  }
  return [];
}, aj = (e) => e === void 0 ? [] : typeof e == "object" ? Object.entries(e).map(([r, s]) => `direction-${r}-${s}`) : [`direction-xs-${String(e)}`], ij = ["className", "children", "columns", "container", "component", "direction", "wrap", "spacing", "rowSpacing", "columnSpacing", "disableEqualOverflow", "unstable_level"], sj = fh(), lj = d1("div", {
  name: "MuiGrid",
  slot: "Root",
  overridesResolver: (e, r) => r.root
});
function cj(e) {
  return vh({
    props: e,
    name: "MuiGrid",
    defaultTheme: sj
  });
}
function uj(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: r = lj,
    useThemeProps: s = cj,
    componentName: u = "MuiGrid"
  } = e, f = /* @__PURE__ */ O.createContext(void 0);
  process.env.NODE_ENV !== "production" && (f.displayName = "GridOverflowContext");
  const v = (b, S) => {
    const {
      container: E,
      direction: k,
      spacing: D,
      wrap: M,
      gridSize: P
    } = b, L = {
      root: ["root", E && "container", M !== "wrap" && `wrap-xs-${String(M)}`, ...aj(k), ...oj(P), ...E ? rj(D, S.breakpoints.keys[0]) : []]
    };
    return Ue(L, (w) => je(u, w), {});
  }, m = r(ZF, ej, JF, XF, tj, nj, QF), y = /* @__PURE__ */ O.forwardRef(function(S, E) {
    var k, D, M, P, L, w, _, V;
    const A = E0(), j = s(S), U = mh(j), $ = O.useContext(f), {
      className: F,
      children: G,
      columns: Y = 12,
      container: Q = !1,
      component: q = "div",
      direction: re = "row",
      wrap: ee = "wrap",
      spacing: J = 0,
      rowSpacing: ce = J,
      columnSpacing: de = J,
      disableEqualOverflow: fe,
      unstable_level: K = 0
    } = U, ne = me(U, ij);
    let ve = fe;
    K && fe !== void 0 && (ve = S.disableEqualOverflow);
    const Ke = {}, tt = {}, Ie = {};
    Object.entries(ne).forEach(([Xe, rt]) => {
      A.breakpoints.values[Xe] !== void 0 ? Ke[Xe] = rt : A.breakpoints.values[Xe.replace("Offset", "")] !== void 0 ? tt[Xe.replace("Offset", "")] = rt : Ie[Xe] = rt;
    });
    const De = (k = S.columns) != null ? k : K ? void 0 : Y, Ye = (D = S.spacing) != null ? D : K ? void 0 : J, ke = (M = (P = S.rowSpacing) != null ? P : S.spacing) != null ? M : K ? void 0 : ce, lt = (L = (w = S.columnSpacing) != null ? w : S.spacing) != null ? L : K ? void 0 : de, xe = C({}, U, {
      level: K,
      columns: De,
      container: Q,
      direction: re,
      wrap: ee,
      spacing: Ye,
      rowSpacing: ke,
      columnSpacing: lt,
      gridSize: Ke,
      gridOffset: tt,
      disableEqualOverflow: (_ = (V = ve) != null ? V : $) != null ? _ : !1,
      // use context value if exists.
      parentDisableEqualOverflow: $
      // for nested grid
    }), ze = v(xe, A);
    let ut = /* @__PURE__ */ z(m, C({
      ref: E,
      as: q,
      ownerState: xe,
      className: pe(ze.root, F)
    }, Ie, {
      children: O.Children.map(G, (Xe) => {
        if (/* @__PURE__ */ O.isValidElement(Xe) && Rl(Xe, ["Grid"])) {
          var rt;
          return /* @__PURE__ */ O.cloneElement(Xe, {
            unstable_level: (rt = Xe.props.unstable_level) != null ? rt : K + 1
          });
        }
        return Xe;
      })
    }));
    return ve !== void 0 && ve !== ($ ?? !1) && (ut = /* @__PURE__ */ z(f.Provider, {
      value: ve,
      children: ut
    })), ut;
  });
  return process.env.NODE_ENV !== "production" && (y.propTypes = {
    children: n.node,
    className: n.string,
    columns: n.oneOfType([n.arrayOf(n.number), n.number, n.object]),
    columnSpacing: n.oneOfType([n.arrayOf(n.oneOfType([n.number, n.string])), n.number, n.object, n.string]),
    component: n.elementType,
    container: n.bool,
    direction: n.oneOfType([n.oneOf(["column-reverse", "column", "row-reverse", "row"]), n.arrayOf(n.oneOf(["column-reverse", "column", "row-reverse", "row"])), n.object]),
    disableEqualOverflow: n.bool,
    lg: n.oneOfType([n.oneOf(["auto"]), n.number, n.bool]),
    lgOffset: n.oneOfType([n.oneOf(["auto"]), n.number]),
    md: n.oneOfType([n.oneOf(["auto"]), n.number, n.bool]),
    mdOffset: n.oneOfType([n.oneOf(["auto"]), n.number]),
    rowSpacing: n.oneOfType([n.arrayOf(n.oneOfType([n.number, n.string])), n.number, n.object, n.string]),
    sm: n.oneOfType([n.oneOf(["auto"]), n.number, n.bool]),
    smOffset: n.oneOfType([n.oneOf(["auto"]), n.number]),
    spacing: n.oneOfType([n.arrayOf(n.oneOfType([n.number, n.string])), n.number, n.object, n.string]),
    sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
    wrap: n.oneOf(["nowrap", "wrap-reverse", "wrap"]),
    xl: n.oneOfType([n.oneOf(["auto"]), n.number, n.bool]),
    xlOffset: n.oneOfType([n.oneOf(["auto"]), n.number]),
    xs: n.oneOfType([n.oneOf(["auto"]), n.number, n.bool]),
    xsOffset: n.oneOfType([n.oneOf(["auto"]), n.number])
  }), y.muiName = "Grid", y;
}
const dj = ["component", "direction", "spacing", "divider", "children", "className", "useFlexGap"], pj = fh(), fj = d1("div", {
  name: "MuiStack",
  slot: "Root",
  overridesResolver: (e, r) => r.root
});
function mj(e) {
  return vh({
    props: e,
    name: "MuiStack",
    defaultTheme: pj
  });
}
function vj(e, r) {
  const s = O.Children.toArray(e).filter(Boolean);
  return s.reduce((u, f, v) => (u.push(f), v < s.length - 1 && u.push(/* @__PURE__ */ O.cloneElement(r, {
    key: `separator-${v}`
  })), u), []);
}
const hj = (e) => ({
  row: "Left",
  "row-reverse": "Right",
  column: "Top",
  "column-reverse": "Bottom"
})[e], gj = ({
  ownerState: e,
  theme: r
}) => {
  let s = C({
    display: "flex",
    flexDirection: "column"
  }, ah({
    theme: r
  }, ad({
    values: e.direction,
    breakpoints: r.breakpoints.values
  }), (u) => ({
    flexDirection: u
  })));
  if (e.spacing) {
    const u = YB(r), f = Object.keys(r.breakpoints.values).reduce((b, S) => ((typeof e.spacing == "object" && e.spacing[S] != null || typeof e.direction == "object" && e.direction[S] != null) && (b[S] = !0), b), {}), v = ad({
      values: e.direction,
      base: f
    }), m = ad({
      values: e.spacing,
      base: f
    });
    typeof v == "object" && Object.keys(v).forEach((b, S, E) => {
      if (!v[b]) {
        const D = S > 0 ? v[E[S - 1]] : "column";
        v[b] = D;
      }
    }), s = ji(s, ah({
      theme: r
    }, m, (b, S) => e.useFlexGap ? {
      gap: Bw(u, b)
    } : {
      // The useFlexGap={false} implement relies on each child to give up control of the margin.
      // We need to reset the margin to avoid double spacing.
      "& > :not(style):not(style)": {
        margin: 0
      },
      "& > :not(style) ~ :not(style)": {
        [`margin${hj(S ? v[S] : e.direction)}`]: Bw(u, b)
      }
    }));
  }
  return s = KB(r.breakpoints, s), s;
};
function yj(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: r = fj,
    useThemeProps: s = mj,
    componentName: u = "MuiStack"
  } = e, f = () => Ue({
    root: ["root"]
  }, (b) => je(u, b), {}), v = r(gj), m = /* @__PURE__ */ O.forwardRef(function(b, S) {
    const E = s(b), k = mh(E), {
      component: D = "div",
      direction: M = "column",
      spacing: P = 0,
      divider: L,
      children: w,
      className: _,
      useFlexGap: V = !1
    } = k, A = me(k, dj), j = {
      direction: M,
      spacing: P,
      useFlexGap: V
    }, U = f();
    return /* @__PURE__ */ z(v, C({
      as: D,
      ownerState: j,
      ref: S,
      className: pe(U.root, _)
    }, A, {
      children: L ? vj(w, L) : w
    }));
  });
  return process.env.NODE_ENV !== "production" && (m.propTypes = {
    children: n.node,
    direction: n.oneOfType([n.oneOf(["column-reverse", "column", "row-reverse", "row"]), n.arrayOf(n.oneOf(["column-reverse", "column", "row-reverse", "row"])), n.object]),
    divider: n.node,
    spacing: n.oneOfType([n.arrayOf(n.oneOfType([n.number, n.string])), n.number, n.object, n.string]),
    sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
  }), m;
}
const bj = ["defaultProps", "mixins", "overrides", "palette", "props", "styleOverrides"], Cj = ["type", "mode"];
function xj(e) {
  process.env.NODE_ENV !== "production" && console.warn(["MUI: adaptV4Theme() is deprecated.", "Follow the upgrade guide on https://mui.com/r/migration-v4#theme."].join(`
`));
  const {
    defaultProps: r = {},
    mixins: s = {},
    overrides: u = {},
    palette: f = {},
    props: v = {},
    styleOverrides: m = {}
  } = e, y = me(e, bj), b = C({}, y, {
    components: {}
  });
  Object.keys(r).forEach((L) => {
    const w = b.components[L] || {};
    w.defaultProps = r[L], b.components[L] = w;
  }), Object.keys(v).forEach((L) => {
    const w = b.components[L] || {};
    w.defaultProps = v[L], b.components[L] = w;
  }), Object.keys(m).forEach((L) => {
    const w = b.components[L] || {};
    w.styleOverrides = m[L], b.components[L] = w;
  }), Object.keys(u).forEach((L) => {
    const w = b.components[L] || {};
    w.styleOverrides = u[L], b.components[L] = w;
  }), b.spacing = XB(e.spacing);
  const S = VN(e.breakpoints || {}), E = b.spacing;
  b.mixins = C({
    gutters: (L = {}) => C({
      paddingLeft: E(2),
      paddingRight: E(2)
    }, L, {
      [S.up("sm")]: C({
        paddingLeft: E(3),
        paddingRight: E(3)
      }, L[S.up("sm")])
    })
  }, s);
  const {
    type: k,
    mode: D
  } = f, M = me(f, Cj), P = D || k || "light";
  return b.palette = C({
    // theme.palette.text.hint
    text: {
      hint: P === "dark" ? "rgba(255, 255, 255, 0.5)" : "rgba(0, 0, 0, 0.38)"
    },
    mode: P,
    type: P
  }, M), b;
}
function Sj(e, ...r) {
  return ih(ji({
    unstable_strictMode: !0
  }, e), ...r);
}
let Zw = !1;
function Tj(e) {
  return Zw || (console.warn(["MUI: createStyles from @mui/material/styles is deprecated.", "Please use @mui/styles/createStyles"].join(`
`)), Zw = !0), e;
}
function Jw(e) {
  return String(parseFloat(e)).length === String(e).length;
}
function x1(e) {
  return String(e).match(/[\d.\-+]*\s*(.*)/)[1] || "";
}
function Tl(e) {
  return parseFloat(e);
}
function Ej(e) {
  return (r, s) => {
    const u = x1(r);
    if (u === s)
      return r;
    let f = Tl(r);
    u !== "px" && (u === "em" || u === "rem") && (f = Tl(r) * Tl(e));
    let v = f;
    if (s !== "px")
      if (s === "em")
        v = f / Tl(e);
      else if (s === "rem")
        v = f / Tl(e);
      else
        return r;
    return parseFloat(v.toFixed(5)) + s;
  };
}
function Rj({
  size: e,
  grid: r
}) {
  const s = e - e % r, u = s + r;
  return e - s < u - e ? s : u;
}
function Oj({
  lineHeight: e,
  pixels: r,
  htmlFontSize: s
}) {
  return r / (e * s);
}
function wj({
  cssProperty: e,
  min: r,
  max: s,
  unit: u = "rem",
  breakpoints: f = [600, 900, 1200],
  transform: v = null
}) {
  const m = {
    [e]: `${r}${u}`
  }, y = (s - r) / f[f.length - 1];
  return f.forEach((b) => {
    let S = r + y * b;
    v !== null && (S = v(S)), m[`@media (min-width:${b}px)`] = {
      [e]: `${Math.round(S * 1e4) / 1e4}${u}`
    };
  }), m;
}
function kj(e, r = {}) {
  const {
    breakpoints: s = ["sm", "md", "lg"],
    disableAlign: u = !1,
    factor: f = 2,
    variants: v = ["h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "caption", "button", "overline"]
  } = r, m = C({}, e);
  m.typography = C({}, m.typography);
  const y = m.typography, b = Ej(y.htmlFontSize), S = s.map((E) => m.breakpoints.values[E]);
  return v.forEach((E) => {
    const k = y[E], D = parseFloat(b(k.fontSize, "rem"));
    if (D <= 1)
      return;
    const M = D, P = 1 + (M - 1) / f;
    let {
      lineHeight: L
    } = k;
    if (!Jw(L) && !u)
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported non-unitless line height with grid alignment.
Use unitless line heights instead.` : Ns(6));
    Jw(L) || (L = parseFloat(b(L, "rem")) / parseFloat(D));
    let w = null;
    u || (w = (_) => Rj({
      size: _,
      grid: Oj({
        pixels: 4,
        lineHeight: L,
        htmlFontSize: y.htmlFontSize
      })
    })), y[E] = C({}, k, wj({
      cssProperty: "fontSize",
      min: P,
      max: M,
      unit: "rem",
      breakpoints: S,
      transform: w
    }));
  }), m;
}
const Nj = ih(), $0 = Nj;
function to() {
  const e = E0($0);
  return process.env.NODE_ENV !== "production" && O.useDebugValue(e), e[zc] || e;
}
function Ve({
  props: e,
  name: r
}) {
  return vh({
    props: e,
    name: r,
    defaultTheme: $0,
    themeId: zc
  });
}
var xh = {}, RT = { exports: {} }, ek;
function $j() {
  return ek || (ek = 1, function(e) {
    function r(s, u) {
      if (s == null)
        return {};
      var f = {}, v = Object.keys(s), m, y;
      for (y = 0; y < v.length; y++)
        m = v[y], !(u.indexOf(m) >= 0) && (f[m] = s[m]);
      return f;
    }
    e.exports = r, e.exports.__esModule = !0, e.exports.default = e.exports;
  }(RT)), RT.exports;
}
const m$ = /* @__PURE__ */ gf(QB), Mj = /* @__PURE__ */ gf(Pz), Dj = /* @__PURE__ */ gf(Lz), Pj = /* @__PURE__ */ gf(Fz), Lj = /* @__PURE__ */ gf(Iz), Ij = /* @__PURE__ */ gf(_z);
var bf = JB;
Object.defineProperty(xh, "__esModule", {
  value: !0
});
var _j = xh.default = Xj, v$ = xh.shouldForwardProp = Jb;
xh.systemDefaultTheme = void 0;
var oi = bf(ZB()), KT = bf($j()), tk = Wj(m$), Aj = Mj, Bj = bf(Dj), zj = bf(Pj), Fj = bf(Lj), jj = bf(Ij);
const Uj = ["ownerState"], Vj = ["variants"], Hj = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"];
function h$(e) {
  if (typeof WeakMap != "function")
    return null;
  var r = /* @__PURE__ */ new WeakMap(), s = /* @__PURE__ */ new WeakMap();
  return (h$ = function(u) {
    return u ? s : r;
  })(e);
}
function Wj(e, r) {
  if (!r && e && e.__esModule)
    return e;
  if (e === null || typeof e != "object" && typeof e != "function")
    return { default: e };
  var s = h$(r);
  if (s && s.has(e))
    return s.get(e);
  var u = { __proto__: null }, f = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var v in e)
    if (v !== "default" && Object.prototype.hasOwnProperty.call(e, v)) {
      var m = f ? Object.getOwnPropertyDescriptor(e, v) : null;
      m && (m.get || m.set) ? Object.defineProperty(u, v, m) : u[v] = e[v];
    }
  return u.default = e, s && s.set(e, u), u;
}
function Gj(e) {
  return Object.keys(e).length === 0;
}
function qj(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function Jb(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const Yj = xh.systemDefaultTheme = (0, Fj.default)(), nk = (e) => e && e.charAt(0).toLowerCase() + e.slice(1);
function $b({
  defaultTheme: e,
  theme: r,
  themeId: s
}) {
  return Gj(r) ? e : r[s] || r;
}
function Kj(e) {
  return e ? (r, s) => s[e] : null;
}
function e0(e, r) {
  let {
    ownerState: s
  } = r, u = (0, KT.default)(r, Uj);
  const f = typeof e == "function" ? e((0, oi.default)({
    ownerState: s
  }, u)) : e;
  if (Array.isArray(f))
    return f.flatMap((v) => e0(v, (0, oi.default)({
      ownerState: s
    }, u)));
  if (f && typeof f == "object" && Array.isArray(f.variants)) {
    const {
      variants: v = []
    } = f;
    let y = (0, KT.default)(f, Vj);
    return v.forEach((b) => {
      let S = !0;
      typeof b.props == "function" ? S = b.props((0, oi.default)({
        ownerState: s
      }, u, s)) : Object.keys(b.props).forEach((E) => {
        (s == null ? void 0 : s[E]) !== b.props[E] && u[E] !== b.props[E] && (S = !1);
      }), S && (Array.isArray(y) || (y = [y]), y.push(typeof b.style == "function" ? b.style((0, oi.default)({
        ownerState: s
      }, u, s)) : b.style));
    }), y;
  }
  return f;
}
function Xj(e = {}) {
  const {
    themeId: r,
    defaultTheme: s = Yj,
    rootShouldForwardProp: u = Jb,
    slotShouldForwardProp: f = Jb
  } = e, v = (m) => (0, jj.default)((0, oi.default)({}, m, {
    theme: $b((0, oi.default)({}, m, {
      defaultTheme: s,
      themeId: r
    }))
  }));
  return v.__mui_systemSx = !0, (m, y = {}) => {
    (0, tk.internal_processStyles)(m, (U) => U.filter(($) => !($ != null && $.__mui_systemSx)));
    const {
      name: b,
      slot: S,
      skipVariantsResolver: E,
      skipSx: k,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: D = Kj(nk(S))
    } = y, M = (0, KT.default)(y, Hj), P = E !== void 0 ? E : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      S && S !== "Root" && S !== "root" || !1
    ), L = k || !1;
    let w;
    process.env.NODE_ENV !== "production" && b && (w = `${b}-${nk(S || "Root")}`);
    let _ = Jb;
    S === "Root" || S === "root" ? _ = u : S ? _ = f : qj(m) && (_ = void 0);
    const V = (0, tk.default)(m, (0, oi.default)({
      shouldForwardProp: _,
      label: w
    }, M)), A = (U) => typeof U == "function" && U.__emotion_real !== U || (0, Aj.isPlainObject)(U) ? ($) => e0(U, (0, oi.default)({}, $, {
      theme: $b({
        theme: $.theme,
        defaultTheme: s,
        themeId: r
      })
    })) : U, j = (U, ...$) => {
      let F = A(U);
      const G = $ ? $.map(A) : [];
      b && D && G.push((q) => {
        const re = $b((0, oi.default)({}, q, {
          defaultTheme: s,
          themeId: r
        }));
        if (!re.components || !re.components[b] || !re.components[b].styleOverrides)
          return null;
        const ee = re.components[b].styleOverrides, J = {};
        return Object.entries(ee).forEach(([ce, de]) => {
          J[ce] = e0(de, (0, oi.default)({}, q, {
            theme: re
          }));
        }), D(q, J);
      }), b && !P && G.push((q) => {
        var re;
        const ee = $b((0, oi.default)({}, q, {
          defaultTheme: s,
          themeId: r
        })), J = ee == null || (re = ee.components) == null || (re = re[b]) == null ? void 0 : re.variants;
        return e0({
          variants: J
        }, (0, oi.default)({}, q, {
          theme: ee
        }));
      }), L || G.push(v);
      const Y = G.length - $.length;
      if (Array.isArray(U) && Y > 0) {
        const q = new Array(Y).fill("");
        F = [...U, ...q], F.raw = [...U.raw, ...q];
      }
      const Q = V(F, ...G);
      if (process.env.NODE_ENV !== "production") {
        let q;
        b && (q = `${b}${(0, Bj.default)(S || "")}`), q === void 0 && (q = `Styled(${(0, zj.default)(m)})`), Q.displayName = q;
      }
      return m.muiName && (Q.muiName = m.muiName), Q;
    };
    return V.withConfig && (j.withConfig = V.withConfig), j;
  };
}
const ko = (e) => v$(e) && e !== "classes", Sh = v$, Qj = _j({
  themeId: zc,
  defaultTheme: $0,
  rootShouldForwardProp: ko
}), Z = Qj, Zj = ["theme"];
function g$(e) {
  let {
    theme: r
  } = e, s = me(e, Zj);
  const u = r[zc];
  return /* @__PURE__ */ z(sh, C({}, s, {
    themeId: u ? zc : void 0,
    theme: u || r
  }));
}
process.env.NODE_ENV !== "production" && (g$.propTypes = {
  /**
   * Your component tree.
   */
  children: n.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: n.oneOfType([n.object, n.func]).isRequired
});
function Jj() {
  throw new Error(process.env.NODE_ENV !== "production" ? `MUI: makeStyles is no longer exported from @mui/material/styles.
You have to import it from @mui/styles.
See https://mui.com/r/migration-v4/#mui-material-styles for more details.` : Ns(14));
}
function eU() {
  throw new Error(process.env.NODE_ENV !== "production" ? `MUI: withStyles is no longer exported from @mui/material/styles.
You have to import it from @mui/styles.
See https://mui.com/r/migration-v4/#mui-material-styles for more details.` : Ns(15));
}
function tU() {
  throw new Error(process.env.NODE_ENV !== "production" ? `MUI: withTheme is no longer exported from @mui/material/styles.
You have to import it from @mui/styles.
See https://mui.com/r/migration-v4/#mui-material-styles for more details.` : Ns(16));
}
function y$(e) {
  var r;
  return !!e[0].match(/(cssVarPrefix|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((r = e[1]) != null && r.match(/(mode|contrastThreshold|tonalOffset)/));
}
const nU = (e) => {
  let r;
  return e < 1 ? r = 5.11916 * e ** 2 : r = 4.5 * Math.log(e + 1) + 2, (r / 100).toFixed(2);
}, c0 = nU, oU = ["colorSchemes", "cssVarPrefix", "shouldSkipGeneratingVar"], rU = ["palette"], aU = [...Array(25)].map((e, r) => {
  if (r === 0)
    return;
  const s = c0(r);
  return `linear-gradient(rgba(255 255 255 / ${s}), rgba(255 255 255 / ${s}))`;
});
function iU(e, r) {
  r.forEach((s) => {
    e[s] || (e[s] = {});
  });
}
function _e(e, r, s) {
  !e[r] && s && (e[r] = s);
}
function Kv(e) {
  return !e || !e.startsWith("hsl") ? e : ez(e);
}
function $c(e, r) {
  `${r}Channel` in e || (e[`${r}Channel`] = Yv(Kv(e[r]), `MUI: Can't create \`palette.${r}Channel\` because \`palette.${r}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${r}Channel\` as a string (in rgb format, e.g. "12 12 12") or undefined if you want to remove the channel token.`));
}
const Os = (e) => {
  try {
    return e();
  } catch {
  }
}, sU = (e = "mui") => _F(e);
function b$(e = {}, ...r) {
  var s, u, f, v, m, y;
  const {
    colorSchemes: b = {},
    cssVarPrefix: S = "mui",
    shouldSkipGeneratingVar: E = y$
  } = e, k = me(e, oU), D = sU(S), M = ih(C({}, k, b.light && {
    palette: (s = b.light) == null ? void 0 : s.palette
  })), {
    palette: P
  } = M, L = me(M, rU), {
    palette: w
  } = ih({
    palette: C({
      mode: "dark"
    }, (u = b.dark) == null ? void 0 : u.palette)
  });
  let _ = C({}, L, {
    cssVarPrefix: S,
    getCssVar: D,
    colorSchemes: C({}, b, {
      light: C({}, b.light, {
        palette: P,
        opacity: C({
          inputPlaceholder: 0.42,
          inputUnderline: 0.42,
          switchTrackDisabled: 0.12,
          switchTrack: 0.38
        }, (f = b.light) == null ? void 0 : f.opacity),
        overlays: ((v = b.light) == null ? void 0 : v.overlays) || []
      }),
      dark: C({}, b.dark, {
        palette: w,
        opacity: C({
          inputPlaceholder: 0.5,
          inputUnderline: 0.7,
          switchTrackDisabled: 0.2,
          switchTrack: 0.3
        }, (m = b.dark) == null ? void 0 : m.opacity),
        overlays: ((y = b.dark) == null ? void 0 : y.overlays) || aU
      })
    })
  });
  Object.keys(_.colorSchemes).forEach((U) => {
    const $ = _.colorSchemes[U].palette, F = (G) => {
      const Y = G.split("-"), Q = Y[1], q = Y[2];
      return D(G, $[Q][q]);
    };
    if (U === "light" ? (_e($.common, "background", "#fff"), _e($.common, "onBackground", "#000")) : (_e($.common, "background", "#000"), _e($.common, "onBackground", "#fff")), iU($, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), U === "light") {
      _e($.Alert, "errorColor", Vn($.error.light, 0.6)), _e($.Alert, "infoColor", Vn($.info.light, 0.6)), _e($.Alert, "successColor", Vn($.success.light, 0.6)), _e($.Alert, "warningColor", Vn($.warning.light, 0.6)), _e($.Alert, "errorFilledBg", F("palette-error-main")), _e($.Alert, "infoFilledBg", F("palette-info-main")), _e($.Alert, "successFilledBg", F("palette-success-main")), _e($.Alert, "warningFilledBg", F("palette-warning-main")), _e($.Alert, "errorFilledColor", Os(() => P.getContrastText($.error.main))), _e($.Alert, "infoFilledColor", Os(() => P.getContrastText($.info.main))), _e($.Alert, "successFilledColor", Os(() => P.getContrastText($.success.main))), _e($.Alert, "warningFilledColor", Os(() => P.getContrastText($.warning.main))), _e($.Alert, "errorStandardBg", Hn($.error.light, 0.9)), _e($.Alert, "infoStandardBg", Hn($.info.light, 0.9)), _e($.Alert, "successStandardBg", Hn($.success.light, 0.9)), _e($.Alert, "warningStandardBg", Hn($.warning.light, 0.9)), _e($.Alert, "errorIconColor", F("palette-error-main")), _e($.Alert, "infoIconColor", F("palette-info-main")), _e($.Alert, "successIconColor", F("palette-success-main")), _e($.Alert, "warningIconColor", F("palette-warning-main")), _e($.AppBar, "defaultBg", F("palette-grey-100")), _e($.Avatar, "defaultBg", F("palette-grey-400")), _e($.Button, "inheritContainedBg", F("palette-grey-300")), _e($.Button, "inheritContainedHoverBg", F("palette-grey-A100")), _e($.Chip, "defaultBorder", F("palette-grey-400")), _e($.Chip, "defaultAvatarColor", F("palette-grey-700")), _e($.Chip, "defaultIconColor", F("palette-grey-700")), _e($.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), _e($.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), _e($.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), _e($.LinearProgress, "primaryBg", Hn($.primary.main, 0.62)), _e($.LinearProgress, "secondaryBg", Hn($.secondary.main, 0.62)), _e($.LinearProgress, "errorBg", Hn($.error.main, 0.62)), _e($.LinearProgress, "infoBg", Hn($.info.main, 0.62)), _e($.LinearProgress, "successBg", Hn($.success.main, 0.62)), _e($.LinearProgress, "warningBg", Hn($.warning.main, 0.62)), _e($.Skeleton, "bg", `rgba(${F("palette-text-primaryChannel")} / 0.11)`), _e($.Slider, "primaryTrack", Hn($.primary.main, 0.62)), _e($.Slider, "secondaryTrack", Hn($.secondary.main, 0.62)), _e($.Slider, "errorTrack", Hn($.error.main, 0.62)), _e($.Slider, "infoTrack", Hn($.info.main, 0.62)), _e($.Slider, "successTrack", Hn($.success.main, 0.62)), _e($.Slider, "warningTrack", Hn($.warning.main, 0.62));
      const G = wb($.background.default, 0.8);
      _e($.SnackbarContent, "bg", G), _e($.SnackbarContent, "color", Os(() => P.getContrastText(G))), _e($.SpeedDialAction, "fabHoverBg", wb($.background.paper, 0.15)), _e($.StepConnector, "border", F("palette-grey-400")), _e($.StepContent, "border", F("palette-grey-400")), _e($.Switch, "defaultColor", F("palette-common-white")), _e($.Switch, "defaultDisabledColor", F("palette-grey-100")), _e($.Switch, "primaryDisabledColor", Hn($.primary.main, 0.62)), _e($.Switch, "secondaryDisabledColor", Hn($.secondary.main, 0.62)), _e($.Switch, "errorDisabledColor", Hn($.error.main, 0.62)), _e($.Switch, "infoDisabledColor", Hn($.info.main, 0.62)), _e($.Switch, "successDisabledColor", Hn($.success.main, 0.62)), _e($.Switch, "warningDisabledColor", Hn($.warning.main, 0.62)), _e($.TableCell, "border", Hn(kb($.divider, 1), 0.88)), _e($.Tooltip, "bg", kb($.grey[700], 0.92));
    } else {
      _e($.Alert, "errorColor", Hn($.error.light, 0.6)), _e($.Alert, "infoColor", Hn($.info.light, 0.6)), _e($.Alert, "successColor", Hn($.success.light, 0.6)), _e($.Alert, "warningColor", Hn($.warning.light, 0.6)), _e($.Alert, "errorFilledBg", F("palette-error-dark")), _e($.Alert, "infoFilledBg", F("palette-info-dark")), _e($.Alert, "successFilledBg", F("palette-success-dark")), _e($.Alert, "warningFilledBg", F("palette-warning-dark")), _e($.Alert, "errorFilledColor", Os(() => w.getContrastText($.error.dark))), _e($.Alert, "infoFilledColor", Os(() => w.getContrastText($.info.dark))), _e($.Alert, "successFilledColor", Os(() => w.getContrastText($.success.dark))), _e($.Alert, "warningFilledColor", Os(() => w.getContrastText($.warning.dark))), _e($.Alert, "errorStandardBg", Vn($.error.light, 0.9)), _e($.Alert, "infoStandardBg", Vn($.info.light, 0.9)), _e($.Alert, "successStandardBg", Vn($.success.light, 0.9)), _e($.Alert, "warningStandardBg", Vn($.warning.light, 0.9)), _e($.Alert, "errorIconColor", F("palette-error-main")), _e($.Alert, "infoIconColor", F("palette-info-main")), _e($.Alert, "successIconColor", F("palette-success-main")), _e($.Alert, "warningIconColor", F("palette-warning-main")), _e($.AppBar, "defaultBg", F("palette-grey-900")), _e($.AppBar, "darkBg", F("palette-background-paper")), _e($.AppBar, "darkColor", F("palette-text-primary")), _e($.Avatar, "defaultBg", F("palette-grey-600")), _e($.Button, "inheritContainedBg", F("palette-grey-800")), _e($.Button, "inheritContainedHoverBg", F("palette-grey-700")), _e($.Chip, "defaultBorder", F("palette-grey-700")), _e($.Chip, "defaultAvatarColor", F("palette-grey-300")), _e($.Chip, "defaultIconColor", F("palette-grey-300")), _e($.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), _e($.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), _e($.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), _e($.LinearProgress, "primaryBg", Vn($.primary.main, 0.5)), _e($.LinearProgress, "secondaryBg", Vn($.secondary.main, 0.5)), _e($.LinearProgress, "errorBg", Vn($.error.main, 0.5)), _e($.LinearProgress, "infoBg", Vn($.info.main, 0.5)), _e($.LinearProgress, "successBg", Vn($.success.main, 0.5)), _e($.LinearProgress, "warningBg", Vn($.warning.main, 0.5)), _e($.Skeleton, "bg", `rgba(${F("palette-text-primaryChannel")} / 0.13)`), _e($.Slider, "primaryTrack", Vn($.primary.main, 0.5)), _e($.Slider, "secondaryTrack", Vn($.secondary.main, 0.5)), _e($.Slider, "errorTrack", Vn($.error.main, 0.5)), _e($.Slider, "infoTrack", Vn($.info.main, 0.5)), _e($.Slider, "successTrack", Vn($.success.main, 0.5)), _e($.Slider, "warningTrack", Vn($.warning.main, 0.5));
      const G = wb($.background.default, 0.98);
      _e($.SnackbarContent, "bg", G), _e($.SnackbarContent, "color", Os(() => w.getContrastText(G))), _e($.SpeedDialAction, "fabHoverBg", wb($.background.paper, 0.15)), _e($.StepConnector, "border", F("palette-grey-600")), _e($.StepContent, "border", F("palette-grey-600")), _e($.Switch, "defaultColor", F("palette-grey-300")), _e($.Switch, "defaultDisabledColor", F("palette-grey-600")), _e($.Switch, "primaryDisabledColor", Vn($.primary.main, 0.55)), _e($.Switch, "secondaryDisabledColor", Vn($.secondary.main, 0.55)), _e($.Switch, "errorDisabledColor", Vn($.error.main, 0.55)), _e($.Switch, "infoDisabledColor", Vn($.info.main, 0.55)), _e($.Switch, "successDisabledColor", Vn($.success.main, 0.55)), _e($.Switch, "warningDisabledColor", Vn($.warning.main, 0.55)), _e($.TableCell, "border", Vn(kb($.divider, 1), 0.68)), _e($.Tooltip, "bg", kb($.grey[700], 0.92));
    }
    $c($.background, "default"), $c($.common, "background"), $c($.common, "onBackground"), $c($, "divider"), Object.keys($).forEach((G) => {
      const Y = $[G];
      Y && typeof Y == "object" && (Y.main && _e($[G], "mainChannel", Yv(Kv(Y.main))), Y.light && _e($[G], "lightChannel", Yv(Kv(Y.light))), Y.dark && _e($[G], "darkChannel", Yv(Kv(Y.dark))), Y.contrastText && _e($[G], "contrastTextChannel", Yv(Kv(Y.contrastText))), G === "text" && ($c($[G], "primary"), $c($[G], "secondary")), G === "action" && (Y.active && $c($[G], "active"), Y.selected && $c($[G], "selected")));
    });
  }), _ = r.reduce((U, $) => ji(U, $), _);
  const V = {
    prefix: S,
    shouldSkipGeneratingVar: E
  }, {
    vars: A,
    generateCssVars: j
  } = UF(_, V);
  return _.vars = A, _.generateCssVars = j, _.shouldSkipGeneratingVar = E, _.unstable_sxConfig = C({}, HN, k == null ? void 0 : k.unstable_sxConfig), _.unstable_sx = function($) {
    return R0({
      sx: $,
      theme: this
    });
  }, _;
}
const lU = (e) => [...[...Array(24)].map((r, s) => `--${e ? `${e}-` : ""}overlays-${s + 1}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], C$ = lU, cU = b$(), {
  CssVarsProvider: uU,
  useColorScheme: dU,
  getInitColorSchemeScript: pU
} = IF({
  themeId: zc,
  theme: cU,
  attribute: "data-mui-color-scheme",
  modeStorageKey: "mui-mode",
  colorSchemeStorageKey: "mui-color-scheme",
  defaultColorScheme: {
    light: "light",
    dark: "dark"
  },
  resolveTheme: (e) => {
    const r = C({}, e, {
      typography: GN(e.palette, e.typography)
    });
    return r.unstable_sx = function(u) {
      return R0({
        sx: u,
        theme: this
      });
    }, r;
  },
  excludeVariablesFromRoot: C$
});
function fU() {
  throw new Error(process.env.NODE_ENV !== "production" ? "MUI: The `experimental_sx` has been moved to `theme.unstable_sx`.For more details, see https://github.com/mui/material-ui/pull/35150." : Ns(20));
}
const AJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Experimental_CssVarsProvider: uU,
  StyledEngineProvider: tz,
  THEME_ID: zc,
  ThemeProvider: g$,
  adaptV4Theme: xj,
  alpha: lf,
  createMuiTheme: nz,
  createStyles: Tj,
  createTheme: ih,
  css: Fc,
  darken: a0,
  decomposeColor: Ol,
  duration: qN,
  easing: oz,
  emphasize: oF,
  experimentalStyled: Z,
  experimental_extendTheme: b$,
  experimental_sx: fU,
  getContrastRatio: nF,
  getInitColorSchemeScript: pU,
  getLuminance: r0,
  getOverlayAlpha: c0,
  hexToRgb: JN,
  hslToRgb: e$,
  keyframes: Vi,
  lighten: i0,
  makeStyles: Jj,
  private_createMixins: rz,
  private_createTypography: GN,
  private_excludeVariablesFromRoot: C$,
  recomposeColor: hh,
  responsiveFontSizes: kj,
  rgbToHex: tF,
  shouldSkipGeneratingVar: y$,
  styled: Z,
  unstable_createMuiStrictModeTheme: Sj,
  unstable_getUnit: x1,
  unstable_toUnitless: Tl,
  useColorScheme: dU,
  useTheme: to,
  useThemeProps: Ve,
  withStyles: eU,
  withTheme: tU
}, Symbol.toStringTag, { value: "Module" }));
function mU(e) {
  return je("MuiSvgIcon", e);
}
const vU = He("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]), BJ = vU, hU = ["children", "className", "color", "component", "fontSize", "htmlColor", "inheritViewBox", "titleAccess", "viewBox"], gU = (e) => {
  const {
    color: r,
    fontSize: s,
    classes: u
  } = e, f = {
    root: ["root", r !== "inherit" && `color${oe(r)}`, `fontSize${oe(s)}`]
  };
  return Ue(f, mU, u);
}, yU = Z("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.color !== "inherit" && r[`color${oe(s.color)}`], r[`fontSize${oe(s.fontSize)}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => {
  var s, u, f, v, m, y, b, S, E, k, D, M, P;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    // the <svg> will define the property that has `currentColor`
    // e.g. heroicons uses fill="none" and stroke="currentColor"
    fill: r.hasSvgAsChild ? void 0 : "currentColor",
    flexShrink: 0,
    transition: (s = e.transitions) == null || (u = s.create) == null ? void 0 : u.call(s, "fill", {
      duration: (f = e.transitions) == null || (f = f.duration) == null ? void 0 : f.shorter
    }),
    fontSize: {
      inherit: "inherit",
      small: ((v = e.typography) == null || (m = v.pxToRem) == null ? void 0 : m.call(v, 20)) || "1.25rem",
      medium: ((y = e.typography) == null || (b = y.pxToRem) == null ? void 0 : b.call(y, 24)) || "1.5rem",
      large: ((S = e.typography) == null || (E = S.pxToRem) == null ? void 0 : E.call(S, 35)) || "2.1875rem"
    }[r.fontSize],
    // TODO v5 deprecate, v6 remove for sx
    color: (k = (D = (e.vars || e).palette) == null || (D = D[r.color]) == null ? void 0 : D.main) != null ? k : {
      action: (M = (e.vars || e).palette) == null || (M = M.action) == null ? void 0 : M.active,
      disabled: (P = (e.vars || e).palette) == null || (P = P.action) == null ? void 0 : P.disabled,
      inherit: void 0
    }[r.color]
  };
}), S1 = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiSvgIcon"
  }), {
    children: f,
    className: v,
    color: m = "inherit",
    component: y = "svg",
    fontSize: b = "medium",
    htmlColor: S,
    inheritViewBox: E = !1,
    titleAccess: k,
    viewBox: D = "0 0 24 24"
  } = u, M = me(u, hU), P = /* @__PURE__ */ O.isValidElement(f) && f.type === "svg", L = C({}, u, {
    color: m,
    component: y,
    fontSize: b,
    instanceFontSize: r.fontSize,
    inheritViewBox: E,
    viewBox: D,
    hasSvgAsChild: P
  }), w = {};
  E || (w.viewBox = D);
  const _ = gU(L);
  return /* @__PURE__ */ gt(yU, C({
    as: y,
    className: pe(_.root, v),
    focusable: "false",
    color: S,
    "aria-hidden": k ? void 0 : !0,
    role: k ? "img" : void 0,
    ref: s
  }, w, M, P && f.props, {
    ownerState: L,
    children: [P ? f.props.children : f, k ? /* @__PURE__ */ z("title", {
      children: k
    }) : null]
  }));
});
process.env.NODE_ENV !== "production" && (S1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: n.oneOfType([n.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), n.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: n.oneOfType([n.oneOf(["inherit", "large", "medium", "small"]), n.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: n.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: n.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: n.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: n.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: n.string
});
S1.muiName = "SvgIcon";
const XT = S1;
function Kn(e, r) {
  function s(u, f) {
    return /* @__PURE__ */ z(XT, C({
      "data-testid": `${r}Icon`,
      ref: f
    }, u, {
      children: e
    }));
  }
  return process.env.NODE_ENV !== "production" && (s.displayName = `${r}Icon`), s.muiName = XT.muiName, /* @__PURE__ */ O.memo(/* @__PURE__ */ O.forwardRef(s));
}
const zJ = {
  configure: (e) => {
    process.env.NODE_ENV !== "production" && console.warn(["MUI: `ClassNameGenerator` import from `@mui/material/utils` is outdated and might cause unexpected issues.", "", "You should use `import { unstable_ClassNameGenerator } from '@mui/material/className'` instead", "", "The detail of the issue: https://github.com/mui/material-ui/issues/30011#issuecomment-1024993401", "", "The updated documentation: https://mui.com/guides/classname-generator/"].join(`
`)), az.configure(e);
  }
};
var QT = { exports: {} }, Mn = {};
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var ok;
function bU() {
  if (ok)
    return Mn;
  ok = 1;
  var e = Symbol.for("react.element"), r = Symbol.for("react.portal"), s = Symbol.for("react.fragment"), u = Symbol.for("react.strict_mode"), f = Symbol.for("react.profiler"), v = Symbol.for("react.provider"), m = Symbol.for("react.context"), y = Symbol.for("react.server_context"), b = Symbol.for("react.forward_ref"), S = Symbol.for("react.suspense"), E = Symbol.for("react.suspense_list"), k = Symbol.for("react.memo"), D = Symbol.for("react.lazy"), M = Symbol.for("react.offscreen"), P;
  P = Symbol.for("react.module.reference");
  function L(w) {
    if (typeof w == "object" && w !== null) {
      var _ = w.$$typeof;
      switch (_) {
        case e:
          switch (w = w.type, w) {
            case s:
            case f:
            case u:
            case S:
            case E:
              return w;
            default:
              switch (w = w && w.$$typeof, w) {
                case y:
                case m:
                case b:
                case D:
                case k:
                case v:
                  return w;
                default:
                  return _;
              }
          }
        case r:
          return _;
      }
    }
  }
  return Mn.ContextConsumer = m, Mn.ContextProvider = v, Mn.Element = e, Mn.ForwardRef = b, Mn.Fragment = s, Mn.Lazy = D, Mn.Memo = k, Mn.Portal = r, Mn.Profiler = f, Mn.StrictMode = u, Mn.Suspense = S, Mn.SuspenseList = E, Mn.isAsyncMode = function() {
    return !1;
  }, Mn.isConcurrentMode = function() {
    return !1;
  }, Mn.isContextConsumer = function(w) {
    return L(w) === m;
  }, Mn.isContextProvider = function(w) {
    return L(w) === v;
  }, Mn.isElement = function(w) {
    return typeof w == "object" && w !== null && w.$$typeof === e;
  }, Mn.isForwardRef = function(w) {
    return L(w) === b;
  }, Mn.isFragment = function(w) {
    return L(w) === s;
  }, Mn.isLazy = function(w) {
    return L(w) === D;
  }, Mn.isMemo = function(w) {
    return L(w) === k;
  }, Mn.isPortal = function(w) {
    return L(w) === r;
  }, Mn.isProfiler = function(w) {
    return L(w) === f;
  }, Mn.isStrictMode = function(w) {
    return L(w) === u;
  }, Mn.isSuspense = function(w) {
    return L(w) === S;
  }, Mn.isSuspenseList = function(w) {
    return L(w) === E;
  }, Mn.isValidElementType = function(w) {
    return typeof w == "string" || typeof w == "function" || w === s || w === f || w === u || w === S || w === E || w === M || typeof w == "object" && w !== null && (w.$$typeof === D || w.$$typeof === k || w.$$typeof === v || w.$$typeof === m || w.$$typeof === b || w.$$typeof === P || w.getModuleId !== void 0);
  }, Mn.typeOf = L, Mn;
}
var Dn = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var rk;
function CU() {
  return rk || (rk = 1, process.env.NODE_ENV !== "production" && function() {
    var e = Symbol.for("react.element"), r = Symbol.for("react.portal"), s = Symbol.for("react.fragment"), u = Symbol.for("react.strict_mode"), f = Symbol.for("react.profiler"), v = Symbol.for("react.provider"), m = Symbol.for("react.context"), y = Symbol.for("react.server_context"), b = Symbol.for("react.forward_ref"), S = Symbol.for("react.suspense"), E = Symbol.for("react.suspense_list"), k = Symbol.for("react.memo"), D = Symbol.for("react.lazy"), M = Symbol.for("react.offscreen"), P = !1, L = !1, w = !1, _ = !1, V = !1, A;
    A = Symbol.for("react.module.reference");
    function j(le) {
      return !!(typeof le == "string" || typeof le == "function" || le === s || le === f || V || le === u || le === S || le === E || _ || le === M || P || L || w || typeof le == "object" && le !== null && (le.$$typeof === D || le.$$typeof === k || le.$$typeof === v || le.$$typeof === m || le.$$typeof === b || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      le.$$typeof === A || le.getModuleId !== void 0));
    }
    function U(le) {
      if (typeof le == "object" && le !== null) {
        var $e = le.$$typeof;
        switch ($e) {
          case e:
            var Oe = le.type;
            switch (Oe) {
              case s:
              case f:
              case u:
              case S:
              case E:
                return Oe;
              default:
                var dt = Oe && Oe.$$typeof;
                switch (dt) {
                  case y:
                  case m:
                  case b:
                  case D:
                  case k:
                  case v:
                    return dt;
                  default:
                    return $e;
                }
            }
          case r:
            return $e;
        }
      }
    }
    var $ = m, F = v, G = e, Y = b, Q = s, q = D, re = k, ee = r, J = f, ce = u, de = S, fe = E, K = !1, ne = !1;
    function ve(le) {
      return K || (K = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function Ke(le) {
      return ne || (ne = !0, console.warn("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function tt(le) {
      return U(le) === m;
    }
    function Ie(le) {
      return U(le) === v;
    }
    function De(le) {
      return typeof le == "object" && le !== null && le.$$typeof === e;
    }
    function Ye(le) {
      return U(le) === b;
    }
    function ke(le) {
      return U(le) === s;
    }
    function lt(le) {
      return U(le) === D;
    }
    function xe(le) {
      return U(le) === k;
    }
    function ze(le) {
      return U(le) === r;
    }
    function ut(le) {
      return U(le) === f;
    }
    function Xe(le) {
      return U(le) === u;
    }
    function rt(le) {
      return U(le) === S;
    }
    function nt(le) {
      return U(le) === E;
    }
    Dn.ContextConsumer = $, Dn.ContextProvider = F, Dn.Element = G, Dn.ForwardRef = Y, Dn.Fragment = Q, Dn.Lazy = q, Dn.Memo = re, Dn.Portal = ee, Dn.Profiler = J, Dn.StrictMode = ce, Dn.Suspense = de, Dn.SuspenseList = fe, Dn.isAsyncMode = ve, Dn.isConcurrentMode = Ke, Dn.isContextConsumer = tt, Dn.isContextProvider = Ie, Dn.isElement = De, Dn.isForwardRef = Ye, Dn.isFragment = ke, Dn.isLazy = lt, Dn.isMemo = xe, Dn.isPortal = ze, Dn.isProfiler = ut, Dn.isStrictMode = Xe, Dn.isSuspense = rt, Dn.isSuspenseList = nt, Dn.isValidElementType = j, Dn.typeOf = U;
  }()), Dn;
}
process.env.NODE_ENV === "production" ? QT.exports = bU() : QT.exports = CU();
var Hi = QT.exports;
function ZT(e, r) {
  return ZT = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(u, f) {
    return u.__proto__ = f, u;
  }, ZT(e, r);
}
function x$(e, r) {
  e.prototype = Object.create(r.prototype), e.prototype.constructor = e, ZT(e, r);
}
var JT = { exports: {} }, Sa = {}, Mb = { exports: {} }, OT = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var ak;
function xU() {
  return ak || (ak = 1, function(e) {
    function r(K, ne) {
      var ve = K.length;
      K.push(ne);
      e:
        for (; 0 < ve; ) {
          var Ke = ve - 1 >>> 1, tt = K[Ke];
          if (0 < f(tt, ne))
            K[Ke] = ne, K[ve] = tt, ve = Ke;
          else
            break e;
        }
    }
    function s(K) {
      return K.length === 0 ? null : K[0];
    }
    function u(K) {
      if (K.length === 0)
        return null;
      var ne = K[0], ve = K.pop();
      if (ve !== ne) {
        K[0] = ve;
        e:
          for (var Ke = 0, tt = K.length, Ie = tt >>> 1; Ke < Ie; ) {
            var De = 2 * (Ke + 1) - 1, Ye = K[De], ke = De + 1, lt = K[ke];
            if (0 > f(Ye, ve))
              ke < tt && 0 > f(lt, Ye) ? (K[Ke] = lt, K[ke] = ve, Ke = ke) : (K[Ke] = Ye, K[De] = ve, Ke = De);
            else if (ke < tt && 0 > f(lt, ve))
              K[Ke] = lt, K[ke] = ve, Ke = ke;
            else
              break e;
          }
      }
      return ne;
    }
    function f(K, ne) {
      var ve = K.sortIndex - ne.sortIndex;
      return ve !== 0 ? ve : K.id - ne.id;
    }
    if (typeof performance == "object" && typeof performance.now == "function") {
      var v = performance;
      e.unstable_now = function() {
        return v.now();
      };
    } else {
      var m = Date, y = m.now();
      e.unstable_now = function() {
        return m.now() - y;
      };
    }
    var b = [], S = [], E = 1, k = null, D = 3, M = !1, P = !1, L = !1, w = typeof setTimeout == "function" ? setTimeout : null, _ = typeof clearTimeout == "function" ? clearTimeout : null, V = typeof setImmediate < "u" ? setImmediate : null;
    typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
    function A(K) {
      for (var ne = s(S); ne !== null; ) {
        if (ne.callback === null)
          u(S);
        else if (ne.startTime <= K)
          u(S), ne.sortIndex = ne.expirationTime, r(b, ne);
        else
          break;
        ne = s(S);
      }
    }
    function j(K) {
      if (L = !1, A(K), !P)
        if (s(b) !== null)
          P = !0, de(U);
        else {
          var ne = s(S);
          ne !== null && fe(j, ne.startTime - K);
        }
    }
    function U(K, ne) {
      P = !1, L && (L = !1, _(G), G = -1), M = !0;
      var ve = D;
      try {
        for (A(ne), k = s(b); k !== null && (!(k.expirationTime > ne) || K && !q()); ) {
          var Ke = k.callback;
          if (typeof Ke == "function") {
            k.callback = null, D = k.priorityLevel;
            var tt = Ke(k.expirationTime <= ne);
            ne = e.unstable_now(), typeof tt == "function" ? k.callback = tt : k === s(b) && u(b), A(ne);
          } else
            u(b);
          k = s(b);
        }
        if (k !== null)
          var Ie = !0;
        else {
          var De = s(S);
          De !== null && fe(j, De.startTime - ne), Ie = !1;
        }
        return Ie;
      } finally {
        k = null, D = ve, M = !1;
      }
    }
    var $ = !1, F = null, G = -1, Y = 5, Q = -1;
    function q() {
      return !(e.unstable_now() - Q < Y);
    }
    function re() {
      if (F !== null) {
        var K = e.unstable_now();
        Q = K;
        var ne = !0;
        try {
          ne = F(!0, K);
        } finally {
          ne ? ee() : ($ = !1, F = null);
        }
      } else
        $ = !1;
    }
    var ee;
    if (typeof V == "function")
      ee = function() {
        V(re);
      };
    else if (typeof MessageChannel < "u") {
      var J = new MessageChannel(), ce = J.port2;
      J.port1.onmessage = re, ee = function() {
        ce.postMessage(null);
      };
    } else
      ee = function() {
        w(re, 0);
      };
    function de(K) {
      F = K, $ || ($ = !0, ee());
    }
    function fe(K, ne) {
      G = w(function() {
        K(e.unstable_now());
      }, ne);
    }
    e.unstable_IdlePriority = 5, e.unstable_ImmediatePriority = 1, e.unstable_LowPriority = 4, e.unstable_NormalPriority = 3, e.unstable_Profiling = null, e.unstable_UserBlockingPriority = 2, e.unstable_cancelCallback = function(K) {
      K.callback = null;
    }, e.unstable_continueExecution = function() {
      P || M || (P = !0, de(U));
    }, e.unstable_forceFrameRate = function(K) {
      0 > K || 125 < K ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : Y = 0 < K ? Math.floor(1e3 / K) : 5;
    }, e.unstable_getCurrentPriorityLevel = function() {
      return D;
    }, e.unstable_getFirstCallbackNode = function() {
      return s(b);
    }, e.unstable_next = function(K) {
      switch (D) {
        case 1:
        case 2:
        case 3:
          var ne = 3;
          break;
        default:
          ne = D;
      }
      var ve = D;
      D = ne;
      try {
        return K();
      } finally {
        D = ve;
      }
    }, e.unstable_pauseExecution = function() {
    }, e.unstable_requestPaint = function() {
    }, e.unstable_runWithPriority = function(K, ne) {
      switch (K) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          K = 3;
      }
      var ve = D;
      D = K;
      try {
        return ne();
      } finally {
        D = ve;
      }
    }, e.unstable_scheduleCallback = function(K, ne, ve) {
      var Ke = e.unstable_now();
      switch (typeof ve == "object" && ve !== null ? (ve = ve.delay, ve = typeof ve == "number" && 0 < ve ? Ke + ve : Ke) : ve = Ke, K) {
        case 1:
          var tt = -1;
          break;
        case 2:
          tt = 250;
          break;
        case 5:
          tt = 1073741823;
          break;
        case 4:
          tt = 1e4;
          break;
        default:
          tt = 5e3;
      }
      return tt = ve + tt, K = { id: E++, callback: ne, priorityLevel: K, startTime: ve, expirationTime: tt, sortIndex: -1 }, ve > Ke ? (K.sortIndex = ve, r(S, K), s(b) === null && K === s(S) && (L ? (_(G), G = -1) : L = !0, fe(j, ve - Ke))) : (K.sortIndex = tt, r(b, K), P || M || (P = !0, de(U))), K;
    }, e.unstable_shouldYield = q, e.unstable_wrapCallback = function(K) {
      var ne = D;
      return function() {
        var ve = D;
        D = ne;
        try {
          return K.apply(this, arguments);
        } finally {
          D = ve;
        }
      };
    };
  }(OT)), OT;
}
var wT = {};
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var ik;
function SU() {
  return ik || (ik = 1, function(e) {
    process.env.NODE_ENV !== "production" && function() {
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var r = !1, s = !1, u = 5;
      function f(Me, et) {
        var qe = Me.length;
        Me.push(et), y(Me, et, qe);
      }
      function v(Me) {
        return Me.length === 0 ? null : Me[0];
      }
      function m(Me) {
        if (Me.length === 0)
          return null;
        var et = Me[0], qe = Me.pop();
        return qe !== et && (Me[0] = qe, b(Me, qe, 0)), et;
      }
      function y(Me, et, qe) {
        for (var We = qe; We > 0; ) {
          var we = We - 1 >>> 1, Fe = Me[we];
          if (S(Fe, et) > 0)
            Me[we] = et, Me[We] = Fe, We = we;
          else
            return;
        }
      }
      function b(Me, et, qe) {
        for (var We = qe, we = Me.length, Fe = we >>> 1; We < Fe; ) {
          var st = (We + 1) * 2 - 1, kt = Me[st], Nt = st + 1, nn = Me[Nt];
          if (S(kt, et) < 0)
            Nt < we && S(nn, kt) < 0 ? (Me[We] = nn, Me[Nt] = et, We = Nt) : (Me[We] = kt, Me[st] = et, We = st);
          else if (Nt < we && S(nn, et) < 0)
            Me[We] = nn, Me[Nt] = et, We = Nt;
          else
            return;
        }
      }
      function S(Me, et) {
        var qe = Me.sortIndex - et.sortIndex;
        return qe !== 0 ? qe : Me.id - et.id;
      }
      var E = 1, k = 2, D = 3, M = 4, P = 5;
      function L(Me, et) {
      }
      var w = typeof performance == "object" && typeof performance.now == "function";
      if (w) {
        var _ = performance;
        e.unstable_now = function() {
          return _.now();
        };
      } else {
        var V = Date, A = V.now();
        e.unstable_now = function() {
          return V.now() - A;
        };
      }
      var j = 1073741823, U = -1, $ = 250, F = 5e3, G = 1e4, Y = j, Q = [], q = [], re = 1, ee = null, J = D, ce = !1, de = !1, fe = !1, K = typeof setTimeout == "function" ? setTimeout : null, ne = typeof clearTimeout == "function" ? clearTimeout : null, ve = typeof setImmediate < "u" ? setImmediate : null;
      typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
      function Ke(Me) {
        for (var et = v(q); et !== null; ) {
          if (et.callback === null)
            m(q);
          else if (et.startTime <= Me)
            m(q), et.sortIndex = et.expirationTime, f(Q, et);
          else
            return;
          et = v(q);
        }
      }
      function tt(Me) {
        if (fe = !1, Ke(Me), !de)
          if (v(Q) !== null)
            de = !0, an(Ie);
          else {
            var et = v(q);
            et !== null && Qt(tt, et.startTime - Me);
          }
      }
      function Ie(Me, et) {
        de = !1, fe && (fe = !1, Ce()), ce = !0;
        var qe = J;
        try {
          var We;
          if (!s)
            return De(Me, et);
        } finally {
          ee = null, J = qe, ce = !1;
        }
      }
      function De(Me, et) {
        var qe = et;
        for (Ke(qe), ee = v(Q); ee !== null && !r && !(ee.expirationTime > qe && (!Me || zt())); ) {
          var We = ee.callback;
          if (typeof We == "function") {
            ee.callback = null, J = ee.priorityLevel;
            var we = ee.expirationTime <= qe, Fe = We(we);
            qe = e.unstable_now(), typeof Fe == "function" ? ee.callback = Fe : ee === v(Q) && m(Q), Ke(qe);
          } else
            m(Q);
          ee = v(Q);
        }
        if (ee !== null)
          return !0;
        var st = v(q);
        return st !== null && Qt(tt, st.startTime - qe), !1;
      }
      function Ye(Me, et) {
        switch (Me) {
          case E:
          case k:
          case D:
          case M:
          case P:
            break;
          default:
            Me = D;
        }
        var qe = J;
        J = Me;
        try {
          return et();
        } finally {
          J = qe;
        }
      }
      function ke(Me) {
        var et;
        switch (J) {
          case E:
          case k:
          case D:
            et = D;
            break;
          default:
            et = J;
            break;
        }
        var qe = J;
        J = et;
        try {
          return Me();
        } finally {
          J = qe;
        }
      }
      function lt(Me) {
        var et = J;
        return function() {
          var qe = J;
          J = et;
          try {
            return Me.apply(this, arguments);
          } finally {
            J = qe;
          }
        };
      }
      function xe(Me, et, qe) {
        var We = e.unstable_now(), we;
        if (typeof qe == "object" && qe !== null) {
          var Fe = qe.delay;
          typeof Fe == "number" && Fe > 0 ? we = We + Fe : we = We;
        } else
          we = We;
        var st;
        switch (Me) {
          case E:
            st = U;
            break;
          case k:
            st = $;
            break;
          case P:
            st = Y;
            break;
          case M:
            st = G;
            break;
          case D:
          default:
            st = F;
            break;
        }
        var kt = we + st, Nt = {
          id: re++,
          callback: et,
          priorityLevel: Me,
          startTime: we,
          expirationTime: kt,
          sortIndex: -1
        };
        return we > We ? (Nt.sortIndex = we, f(q, Nt), v(Q) === null && Nt === v(q) && (fe ? Ce() : fe = !0, Qt(tt, we - We))) : (Nt.sortIndex = kt, f(Q, Nt), !de && !ce && (de = !0, an(Ie))), Nt;
      }
      function ze() {
      }
      function ut() {
        !de && !ce && (de = !0, an(Ie));
      }
      function Xe() {
        return v(Q);
      }
      function rt(Me) {
        Me.callback = null;
      }
      function nt() {
        return J;
      }
      var le = !1, $e = null, Oe = -1, dt = u, it = -1;
      function zt() {
        var Me = e.unstable_now() - it;
        return !(Me < dt);
      }
      function Dt() {
      }
      function ht(Me) {
        if (Me < 0 || Me > 125) {
          console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
          return;
        }
        Me > 0 ? dt = Math.floor(1e3 / Me) : dt = u;
      }
      var Tt = function() {
        if ($e !== null) {
          var Me = e.unstable_now();
          it = Me;
          var et = !0, qe = !0;
          try {
            qe = $e(et, Me);
          } finally {
            qe ? Lt() : (le = !1, $e = null);
          }
        } else
          le = !1;
      }, Lt;
      if (typeof ve == "function")
        Lt = function() {
          ve(Tt);
        };
      else if (typeof MessageChannel < "u") {
        var At = new MessageChannel(), tn = At.port2;
        At.port1.onmessage = Tt, Lt = function() {
          tn.postMessage(null);
        };
      } else
        Lt = function() {
          K(Tt, 0);
        };
      function an(Me) {
        $e = Me, le || (le = !0, Lt());
      }
      function Qt(Me, et) {
        Oe = K(function() {
          Me(e.unstable_now());
        }, et);
      }
      function Ce() {
        ne(Oe), Oe = -1;
      }
      var he = Dt, Qe = null;
      e.unstable_IdlePriority = P, e.unstable_ImmediatePriority = E, e.unstable_LowPriority = M, e.unstable_NormalPriority = D, e.unstable_Profiling = Qe, e.unstable_UserBlockingPriority = k, e.unstable_cancelCallback = rt, e.unstable_continueExecution = ut, e.unstable_forceFrameRate = ht, e.unstable_getCurrentPriorityLevel = nt, e.unstable_getFirstCallbackNode = Xe, e.unstable_next = ke, e.unstable_pauseExecution = ze, e.unstable_requestPaint = he, e.unstable_runWithPriority = Ye, e.unstable_scheduleCallback = xe, e.unstable_shouldYield = zt, e.unstable_wrapCallback = lt, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    }();
  }(wT)), wT;
}
var sk;
function S$() {
  return sk || (sk = 1, process.env.NODE_ENV === "production" ? Mb.exports = xU() : Mb.exports = SU()), Mb.exports;
}
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var lk;
function TU() {
  if (lk)
    return Sa;
  lk = 1;
  var e = ai, r = S$();
  function s(a) {
    for (var i = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, d = 1; d < arguments.length; d++)
      i += "&args[]=" + encodeURIComponent(arguments[d]);
    return "Minified React error #" + a + "; visit " + i + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
  }
  var u = /* @__PURE__ */ new Set(), f = {};
  function v(a, i) {
    m(a, i), m(a + "Capture", i);
  }
  function m(a, i) {
    for (f[a] = i, a = 0; a < i.length; a++)
      u.add(i[a]);
  }
  var y = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u"), b = Object.prototype.hasOwnProperty, S = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, E = {}, k = {};
  function D(a) {
    return b.call(k, a) ? !0 : b.call(E, a) ? !1 : S.test(a) ? k[a] = !0 : (E[a] = !0, !1);
  }
  function M(a, i, d, h) {
    if (d !== null && d.type === 0)
      return !1;
    switch (typeof i) {
      case "function":
      case "symbol":
        return !0;
      case "boolean":
        return h ? !1 : d !== null ? !d.acceptsBooleans : (a = a.toLowerCase().slice(0, 5), a !== "data-" && a !== "aria-");
      default:
        return !1;
    }
  }
  function P(a, i, d, h) {
    if (i === null || typeof i > "u" || M(a, i, d, h))
      return !0;
    if (h)
      return !1;
    if (d !== null)
      switch (d.type) {
        case 3:
          return !i;
        case 4:
          return i === !1;
        case 5:
          return isNaN(i);
        case 6:
          return isNaN(i) || 1 > i;
      }
    return !1;
  }
  function L(a, i, d, h, x, R, B) {
    this.acceptsBooleans = i === 2 || i === 3 || i === 4, this.attributeName = h, this.attributeNamespace = x, this.mustUseProperty = d, this.propertyName = a, this.type = i, this.sanitizeURL = R, this.removeEmptyString = B;
  }
  var w = {};
  "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a) {
    w[a] = new L(a, 0, !1, a, null, !1, !1);
  }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a) {
    var i = a[0];
    w[i] = new L(i, 1, !1, a[1], null, !1, !1);
  }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a) {
    w[a] = new L(a, 2, !1, a.toLowerCase(), null, !1, !1);
  }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a) {
    w[a] = new L(a, 2, !1, a, null, !1, !1);
  }), "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a) {
    w[a] = new L(a, 3, !1, a.toLowerCase(), null, !1, !1);
  }), ["checked", "multiple", "muted", "selected"].forEach(function(a) {
    w[a] = new L(a, 3, !0, a, null, !1, !1);
  }), ["capture", "download"].forEach(function(a) {
    w[a] = new L(a, 4, !1, a, null, !1, !1);
  }), ["cols", "rows", "size", "span"].forEach(function(a) {
    w[a] = new L(a, 6, !1, a, null, !1, !1);
  }), ["rowSpan", "start"].forEach(function(a) {
    w[a] = new L(a, 5, !1, a.toLowerCase(), null, !1, !1);
  });
  var _ = /[\-:]([a-z])/g;
  function V(a) {
    return a[1].toUpperCase();
  }
  "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a) {
    var i = a.replace(
      _,
      V
    );
    w[i] = new L(i, 1, !1, a, null, !1, !1);
  }), "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a) {
    var i = a.replace(_, V);
    w[i] = new L(i, 1, !1, a, "http://www.w3.org/1999/xlink", !1, !1);
  }), ["xml:base", "xml:lang", "xml:space"].forEach(function(a) {
    var i = a.replace(_, V);
    w[i] = new L(i, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1, !1);
  }), ["tabIndex", "crossOrigin"].forEach(function(a) {
    w[a] = new L(a, 1, !1, a.toLowerCase(), null, !1, !1);
  }), w.xlinkHref = new L("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1), ["src", "href", "action", "formAction"].forEach(function(a) {
    w[a] = new L(a, 1, !1, a.toLowerCase(), null, !0, !0);
  });
  function A(a, i, d, h) {
    var x = w.hasOwnProperty(i) ? w[i] : null;
    (x !== null ? x.type !== 0 : h || !(2 < i.length) || i[0] !== "o" && i[0] !== "O" || i[1] !== "n" && i[1] !== "N") && (P(i, d, x, h) && (d = null), h || x === null ? D(i) && (d === null ? a.removeAttribute(i) : a.setAttribute(i, "" + d)) : x.mustUseProperty ? a[x.propertyName] = d === null ? x.type === 3 ? !1 : "" : d : (i = x.attributeName, h = x.attributeNamespace, d === null ? a.removeAttribute(i) : (x = x.type, d = x === 3 || x === 4 && d === !0 ? "" : "" + d, h ? a.setAttributeNS(h, i, d) : a.setAttribute(i, d))));
  }
  var j = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, U = Symbol.for("react.element"), $ = Symbol.for("react.portal"), F = Symbol.for("react.fragment"), G = Symbol.for("react.strict_mode"), Y = Symbol.for("react.profiler"), Q = Symbol.for("react.provider"), q = Symbol.for("react.context"), re = Symbol.for("react.forward_ref"), ee = Symbol.for("react.suspense"), J = Symbol.for("react.suspense_list"), ce = Symbol.for("react.memo"), de = Symbol.for("react.lazy"), fe = Symbol.for("react.offscreen"), K = Symbol.iterator;
  function ne(a) {
    return a === null || typeof a != "object" ? null : (a = K && a[K] || a["@@iterator"], typeof a == "function" ? a : null);
  }
  var ve = Object.assign, Ke;
  function tt(a) {
    if (Ke === void 0)
      try {
        throw Error();
      } catch (d) {
        var i = d.stack.trim().match(/\n( *(at )?)/);
        Ke = i && i[1] || "";
      }
    return `
` + Ke + a;
  }
  var Ie = !1;
  function De(a, i) {
    if (!a || Ie)
      return "";
    Ie = !0;
    var d = Error.prepareStackTrace;
    Error.prepareStackTrace = void 0;
    try {
      if (i)
        if (i = function() {
          throw Error();
        }, Object.defineProperty(i.prototype, "props", { set: function() {
          throw Error();
        } }), typeof Reflect == "object" && Reflect.construct) {
          try {
            Reflect.construct(i, []);
          } catch (Re) {
            var h = Re;
          }
          Reflect.construct(a, [], i);
        } else {
          try {
            i.call();
          } catch (Re) {
            h = Re;
          }
          a.call(i.prototype);
        }
      else {
        try {
          throw Error();
        } catch (Re) {
          h = Re;
        }
        a();
      }
    } catch (Re) {
      if (Re && h && typeof Re.stack == "string") {
        for (var x = Re.stack.split(`
`), R = h.stack.split(`
`), B = x.length - 1, X = R.length - 1; 1 <= B && 0 <= X && x[B] !== R[X]; )
          X--;
        for (; 1 <= B && 0 <= X; B--, X--)
          if (x[B] !== R[X]) {
            if (B !== 1 || X !== 1)
              do
                if (B--, X--, 0 > X || x[B] !== R[X]) {
                  var te = `
` + x[B].replace(" at new ", " at ");
                  return a.displayName && te.includes("<anonymous>") && (te = te.replace("<anonymous>", a.displayName)), te;
                }
              while (1 <= B && 0 <= X);
            break;
          }
      }
    } finally {
      Ie = !1, Error.prepareStackTrace = d;
    }
    return (a = a ? a.displayName || a.name : "") ? tt(a) : "";
  }
  function Ye(a) {
    switch (a.tag) {
      case 5:
        return tt(a.type);
      case 16:
        return tt("Lazy");
      case 13:
        return tt("Suspense");
      case 19:
        return tt("SuspenseList");
      case 0:
      case 2:
      case 15:
        return a = De(a.type, !1), a;
      case 11:
        return a = De(a.type.render, !1), a;
      case 1:
        return a = De(a.type, !0), a;
      default:
        return "";
    }
  }
  function ke(a) {
    if (a == null)
      return null;
    if (typeof a == "function")
      return a.displayName || a.name || null;
    if (typeof a == "string")
      return a;
    switch (a) {
      case F:
        return "Fragment";
      case $:
        return "Portal";
      case Y:
        return "Profiler";
      case G:
        return "StrictMode";
      case ee:
        return "Suspense";
      case J:
        return "SuspenseList";
    }
    if (typeof a == "object")
      switch (a.$$typeof) {
        case q:
          return (a.displayName || "Context") + ".Consumer";
        case Q:
          return (a._context.displayName || "Context") + ".Provider";
        case re:
          var i = a.render;
          return a = a.displayName, a || (a = i.displayName || i.name || "", a = a !== "" ? "ForwardRef(" + a + ")" : "ForwardRef"), a;
        case ce:
          return i = a.displayName || null, i !== null ? i : ke(a.type) || "Memo";
        case de:
          i = a._payload, a = a._init;
          try {
            return ke(a(i));
          } catch {
          }
      }
    return null;
  }
  function lt(a) {
    var i = a.type;
    switch (a.tag) {
      case 24:
        return "Cache";
      case 9:
        return (i.displayName || "Context") + ".Consumer";
      case 10:
        return (i._context.displayName || "Context") + ".Provider";
      case 18:
        return "DehydratedFragment";
      case 11:
        return a = i.render, a = a.displayName || a.name || "", i.displayName || (a !== "" ? "ForwardRef(" + a + ")" : "ForwardRef");
      case 7:
        return "Fragment";
      case 5:
        return i;
      case 4:
        return "Portal";
      case 3:
        return "Root";
      case 6:
        return "Text";
      case 16:
        return ke(i);
      case 8:
        return i === G ? "StrictMode" : "Mode";
      case 22:
        return "Offscreen";
      case 12:
        return "Profiler";
      case 21:
        return "Scope";
      case 13:
        return "Suspense";
      case 19:
        return "SuspenseList";
      case 25:
        return "TracingMarker";
      case 1:
      case 0:
      case 17:
      case 2:
      case 14:
      case 15:
        if (typeof i == "function")
          return i.displayName || i.name || null;
        if (typeof i == "string")
          return i;
    }
    return null;
  }
  function xe(a) {
    switch (typeof a) {
      case "boolean":
      case "number":
      case "string":
      case "undefined":
        return a;
      case "object":
        return a;
      default:
        return "";
    }
  }
  function ze(a) {
    var i = a.type;
    return (a = a.nodeName) && a.toLowerCase() === "input" && (i === "checkbox" || i === "radio");
  }
  function ut(a) {
    var i = ze(a) ? "checked" : "value", d = Object.getOwnPropertyDescriptor(a.constructor.prototype, i), h = "" + a[i];
    if (!a.hasOwnProperty(i) && typeof d < "u" && typeof d.get == "function" && typeof d.set == "function") {
      var x = d.get, R = d.set;
      return Object.defineProperty(a, i, { configurable: !0, get: function() {
        return x.call(this);
      }, set: function(B) {
        h = "" + B, R.call(this, B);
      } }), Object.defineProperty(a, i, { enumerable: d.enumerable }), { getValue: function() {
        return h;
      }, setValue: function(B) {
        h = "" + B;
      }, stopTracking: function() {
        a._valueTracker = null, delete a[i];
      } };
    }
  }
  function Xe(a) {
    a._valueTracker || (a._valueTracker = ut(a));
  }
  function rt(a) {
    if (!a)
      return !1;
    var i = a._valueTracker;
    if (!i)
      return !0;
    var d = i.getValue(), h = "";
    return a && (h = ze(a) ? a.checked ? "true" : "false" : a.value), a = h, a !== d ? (i.setValue(a), !0) : !1;
  }
  function nt(a) {
    if (a = a || (typeof document < "u" ? document : void 0), typeof a > "u")
      return null;
    try {
      return a.activeElement || a.body;
    } catch {
      return a.body;
    }
  }
  function le(a, i) {
    var d = i.checked;
    return ve({}, i, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: d ?? a._wrapperState.initialChecked });
  }
  function $e(a, i) {
    var d = i.defaultValue == null ? "" : i.defaultValue, h = i.checked != null ? i.checked : i.defaultChecked;
    d = xe(i.value != null ? i.value : d), a._wrapperState = { initialChecked: h, initialValue: d, controlled: i.type === "checkbox" || i.type === "radio" ? i.checked != null : i.value != null };
  }
  function Oe(a, i) {
    i = i.checked, i != null && A(a, "checked", i, !1);
  }
  function dt(a, i) {
    Oe(a, i);
    var d = xe(i.value), h = i.type;
    if (d != null)
      h === "number" ? (d === 0 && a.value === "" || a.value != d) && (a.value = "" + d) : a.value !== "" + d && (a.value = "" + d);
    else if (h === "submit" || h === "reset") {
      a.removeAttribute("value");
      return;
    }
    i.hasOwnProperty("value") ? zt(a, i.type, d) : i.hasOwnProperty("defaultValue") && zt(a, i.type, xe(i.defaultValue)), i.checked == null && i.defaultChecked != null && (a.defaultChecked = !!i.defaultChecked);
  }
  function it(a, i, d) {
    if (i.hasOwnProperty("value") || i.hasOwnProperty("defaultValue")) {
      var h = i.type;
      if (!(h !== "submit" && h !== "reset" || i.value !== void 0 && i.value !== null))
        return;
      i = "" + a._wrapperState.initialValue, d || i === a.value || (a.value = i), a.defaultValue = i;
    }
    d = a.name, d !== "" && (a.name = ""), a.defaultChecked = !!a._wrapperState.initialChecked, d !== "" && (a.name = d);
  }
  function zt(a, i, d) {
    (i !== "number" || nt(a.ownerDocument) !== a) && (d == null ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + d && (a.defaultValue = "" + d));
  }
  var Dt = Array.isArray;
  function ht(a, i, d, h) {
    if (a = a.options, i) {
      i = {};
      for (var x = 0; x < d.length; x++)
        i["$" + d[x]] = !0;
      for (d = 0; d < a.length; d++)
        x = i.hasOwnProperty("$" + a[d].value), a[d].selected !== x && (a[d].selected = x), x && h && (a[d].defaultSelected = !0);
    } else {
      for (d = "" + xe(d), i = null, x = 0; x < a.length; x++) {
        if (a[x].value === d) {
          a[x].selected = !0, h && (a[x].defaultSelected = !0);
          return;
        }
        i !== null || a[x].disabled || (i = a[x]);
      }
      i !== null && (i.selected = !0);
    }
  }
  function Tt(a, i) {
    if (i.dangerouslySetInnerHTML != null)
      throw Error(s(91));
    return ve({}, i, { value: void 0, defaultValue: void 0, children: "" + a._wrapperState.initialValue });
  }
  function Lt(a, i) {
    var d = i.value;
    if (d == null) {
      if (d = i.children, i = i.defaultValue, d != null) {
        if (i != null)
          throw Error(s(92));
        if (Dt(d)) {
          if (1 < d.length)
            throw Error(s(93));
          d = d[0];
        }
        i = d;
      }
      i == null && (i = ""), d = i;
    }
    a._wrapperState = { initialValue: xe(d) };
  }
  function At(a, i) {
    var d = xe(i.value), h = xe(i.defaultValue);
    d != null && (d = "" + d, d !== a.value && (a.value = d), i.defaultValue == null && a.defaultValue !== d && (a.defaultValue = d)), h != null && (a.defaultValue = "" + h);
  }
  function tn(a) {
    var i = a.textContent;
    i === a._wrapperState.initialValue && i !== "" && i !== null && (a.value = i);
  }
  function an(a) {
    switch (a) {
      case "svg":
        return "http://www.w3.org/2000/svg";
      case "math":
        return "http://www.w3.org/1998/Math/MathML";
      default:
        return "http://www.w3.org/1999/xhtml";
    }
  }
  function Qt(a, i) {
    return a == null || a === "http://www.w3.org/1999/xhtml" ? an(i) : a === "http://www.w3.org/2000/svg" && i === "foreignObject" ? "http://www.w3.org/1999/xhtml" : a;
  }
  var Ce, he = function(a) {
    return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(i, d, h, x) {
      MSApp.execUnsafeLocalFunction(function() {
        return a(i, d, h, x);
      });
    } : a;
  }(function(a, i) {
    if (a.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in a)
      a.innerHTML = i;
    else {
      for (Ce = Ce || document.createElement("div"), Ce.innerHTML = "<svg>" + i.valueOf().toString() + "</svg>", i = Ce.firstChild; a.firstChild; )
        a.removeChild(a.firstChild);
      for (; i.firstChild; )
        a.appendChild(i.firstChild);
    }
  });
  function Qe(a, i) {
    if (i) {
      var d = a.firstChild;
      if (d && d === a.lastChild && d.nodeType === 3) {
        d.nodeValue = i;
        return;
      }
    }
    a.textContent = i;
  }
  var Me = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0
  }, et = ["Webkit", "ms", "Moz", "O"];
  Object.keys(Me).forEach(function(a) {
    et.forEach(function(i) {
      i = i + a.charAt(0).toUpperCase() + a.substring(1), Me[i] = Me[a];
    });
  });
  function qe(a, i, d) {
    return i == null || typeof i == "boolean" || i === "" ? "" : d || typeof i != "number" || i === 0 || Me.hasOwnProperty(a) && Me[a] ? ("" + i).trim() : i + "px";
  }
  function We(a, i) {
    a = a.style;
    for (var d in i)
      if (i.hasOwnProperty(d)) {
        var h = d.indexOf("--") === 0, x = qe(d, i[d], h);
        d === "float" && (d = "cssFloat"), h ? a.setProperty(d, x) : a[d] = x;
      }
  }
  var we = ve({ menuitem: !0 }, { area: !0, base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 });
  function Fe(a, i) {
    if (i) {
      if (we[a] && (i.children != null || i.dangerouslySetInnerHTML != null))
        throw Error(s(137, a));
      if (i.dangerouslySetInnerHTML != null) {
        if (i.children != null)
          throw Error(s(60));
        if (typeof i.dangerouslySetInnerHTML != "object" || !("__html" in i.dangerouslySetInnerHTML))
          throw Error(s(61));
      }
      if (i.style != null && typeof i.style != "object")
        throw Error(s(62));
    }
  }
  function st(a, i) {
    if (a.indexOf("-") === -1)
      return typeof i.is == "string";
    switch (a) {
      case "annotation-xml":
      case "color-profile":
      case "font-face":
      case "font-face-src":
      case "font-face-uri":
      case "font-face-format":
      case "font-face-name":
      case "missing-glyph":
        return !1;
      default:
        return !0;
    }
  }
  var kt = null;
  function Nt(a) {
    return a = a.target || a.srcElement || window, a.correspondingUseElement && (a = a.correspondingUseElement), a.nodeType === 3 ? a.parentNode : a;
  }
  var nn = null, qt = null, on = null;
  function _n(a) {
    if (a = du(a)) {
      if (typeof nn != "function")
        throw Error(s(280));
      var i = a.stateNode;
      i && (i = _t(i), nn(a.stateNode, a.type, i));
    }
  }
  function fo(a) {
    qt ? on ? on.push(a) : on = [a] : qt = a;
  }
  function dr() {
    if (qt) {
      var a = qt, i = on;
      if (on = qt = null, _n(a), i)
        for (a = 0; a < i.length; a++)
          _n(i[a]);
    }
  }
  function Fr(a, i) {
    return a(i);
  }
  function ja() {
  }
  var jr = !1;
  function No(a, i, d) {
    if (jr)
      return a(i, d);
    jr = !0;
    try {
      return Fr(a, i, d);
    } finally {
      jr = !1, (qt !== null || on !== null) && (ja(), dr());
    }
  }
  function Rn(a, i) {
    var d = a.stateNode;
    if (d === null)
      return null;
    var h = _t(d);
    if (h === null)
      return null;
    d = h[i];
    e:
      switch (i) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
          (h = !h.disabled) || (a = a.type, h = !(a === "button" || a === "input" || a === "select" || a === "textarea")), a = !h;
          break e;
        default:
          a = !1;
      }
    if (a)
      return null;
    if (d && typeof d != "function")
      throw Error(s(231, i, typeof d));
    return d;
  }
  var bn = !1;
  if (y)
    try {
      var An = {};
      Object.defineProperty(An, "passive", { get: function() {
        bn = !0;
      } }), window.addEventListener("test", An, An), window.removeEventListener("test", An, An);
    } catch {
      bn = !1;
    }
  function Gn(a, i, d, h, x, R, B, X, te) {
    var Re = Array.prototype.slice.call(arguments, 3);
    try {
      i.apply(d, Re);
    } catch (Je) {
      this.onError(Je);
    }
  }
  var Xn = !1, Uo = null, $o = !1, Mo = null, Er = { onError: function(a) {
    Xn = !0, Uo = a;
  } };
  function Do(a, i, d, h, x, R, B, X, te) {
    Xn = !1, Uo = null, Gn.apply(Er, arguments);
  }
  function mo(a, i, d, h, x, R, B, X, te) {
    if (Do.apply(this, arguments), Xn) {
      if (Xn) {
        var Re = Uo;
        Xn = !1, Uo = null;
      } else
        throw Error(s(198));
      $o || ($o = !0, Mo = Re);
    }
  }
  function Ne(a) {
    var i = a, d = a;
    if (a.alternate)
      for (; i.return; )
        i = i.return;
    else {
      a = i;
      do
        i = a, i.flags & 4098 && (d = i.return), a = i.return;
      while (a);
    }
    return i.tag === 3 ? d : null;
  }
  function ue(a) {
    if (a.tag === 13) {
      var i = a.memoizedState;
      if (i === null && (a = a.alternate, a !== null && (i = a.memoizedState)), i !== null)
        return i.dehydrated;
    }
    return null;
  }
  function Ge(a) {
    if (Ne(a) !== a)
      throw Error(s(188));
  }
  function ft(a) {
    var i = a.alternate;
    if (!i) {
      if (i = Ne(a), i === null)
        throw Error(s(188));
      return i !== a ? null : a;
    }
    for (var d = a, h = i; ; ) {
      var x = d.return;
      if (x === null)
        break;
      var R = x.alternate;
      if (R === null) {
        if (h = x.return, h !== null) {
          d = h;
          continue;
        }
        break;
      }
      if (x.child === R.child) {
        for (R = x.child; R; ) {
          if (R === d)
            return Ge(x), a;
          if (R === h)
            return Ge(x), i;
          R = R.sibling;
        }
        throw Error(s(188));
      }
      if (d.return !== h.return)
        d = x, h = R;
      else {
        for (var B = !1, X = x.child; X; ) {
          if (X === d) {
            B = !0, d = x, h = R;
            break;
          }
          if (X === h) {
            B = !0, h = x, d = R;
            break;
          }
          X = X.sibling;
        }
        if (!B) {
          for (X = R.child; X; ) {
            if (X === d) {
              B = !0, d = R, h = x;
              break;
            }
            if (X === h) {
              B = !0, h = R, d = x;
              break;
            }
            X = X.sibling;
          }
          if (!B)
            throw Error(s(189));
        }
      }
      if (d.alternate !== h)
        throw Error(s(190));
    }
    if (d.tag !== 3)
      throw Error(s(188));
    return d.stateNode.current === d ? a : i;
  }
  function en(a) {
    return a = ft(a), a !== null ? pt(a) : null;
  }
  function pt(a) {
    if (a.tag === 5 || a.tag === 6)
      return a;
    for (a = a.child; a !== null; ) {
      var i = pt(a);
      if (i !== null)
        return i;
      a = a.sibling;
    }
    return null;
  }
  var sn = r.unstable_scheduleCallback, tr = r.unstable_cancelCallback, Ml = r.unstable_shouldYield, V0 = r.unstable_requestPaint, no = r.unstable_now, H0 = r.unstable_getCurrentPriorityLevel, di = r.unstable_ImmediatePriority, ln = r.unstable_UserBlockingPriority, Gi = r.unstable_NormalPriority, kh = r.unstable_LowPriority, Sf = r.unstable_IdlePriority, Hc = null, Oa = null;
  function Nh(a) {
    if (Oa && typeof Oa.onCommitFiberRoot == "function")
      try {
        Oa.onCommitFiberRoot(Hc, a, void 0, (a.current.flags & 128) === 128);
      } catch {
      }
  }
  var na = Math.clz32 ? Math.clz32 : W0, $h = Math.log, Mh = Math.LN2;
  function W0(a) {
    return a >>>= 0, a === 0 ? 32 : 31 - ($h(a) / Mh | 0) | 0;
  }
  var ud = 64, Dl = 4194304;
  function Ps(a) {
    switch (a & -a) {
      case 1:
        return 1;
      case 2:
        return 2;
      case 4:
        return 4;
      case 8:
        return 8;
      case 16:
        return 16;
      case 32:
        return 32;
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return a & 4194240;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return a & 130023424;
      case 134217728:
        return 134217728;
      case 268435456:
        return 268435456;
      case 536870912:
        return 536870912;
      case 1073741824:
        return 1073741824;
      default:
        return a;
    }
  }
  function wa(a, i) {
    var d = a.pendingLanes;
    if (d === 0)
      return 0;
    var h = 0, x = a.suspendedLanes, R = a.pingedLanes, B = d & 268435455;
    if (B !== 0) {
      var X = B & ~x;
      X !== 0 ? h = Ps(X) : (R &= B, R !== 0 && (h = Ps(R)));
    } else
      B = d & ~x, B !== 0 ? h = Ps(B) : R !== 0 && (h = Ps(R));
    if (h === 0)
      return 0;
    if (i !== 0 && i !== h && !(i & x) && (x = h & -h, R = i & -i, x >= R || x === 16 && (R & 4194240) !== 0))
      return i;
    if (h & 4 && (h |= d & 16), i = a.entangledLanes, i !== 0)
      for (a = a.entanglements, i &= h; 0 < i; )
        d = 31 - na(i), x = 1 << d, h |= a[d], i &= ~x;
    return h;
  }
  function Tf(a, i) {
    switch (a) {
      case 1:
      case 2:
      case 4:
        return i + 250;
      case 8:
      case 16:
      case 32:
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return i + 5e3;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return -1;
      case 134217728:
      case 268435456:
      case 536870912:
      case 1073741824:
        return -1;
      default:
        return -1;
    }
  }
  function dd(a, i) {
    for (var d = a.suspendedLanes, h = a.pingedLanes, x = a.expirationTimes, R = a.pendingLanes; 0 < R; ) {
      var B = 31 - na(R), X = 1 << B, te = x[B];
      te === -1 ? (!(X & d) || X & h) && (x[B] = Tf(X, i)) : te <= i && (a.expiredLanes |= X), R &= ~X;
    }
  }
  function Ef(a) {
    return a = a.pendingLanes & -1073741825, a !== 0 ? a : a & 1073741824 ? 1073741824 : 0;
  }
  function pd() {
    var a = ud;
    return ud <<= 1, !(ud & 4194240) && (ud = 64), a;
  }
  function Rf(a) {
    for (var i = [], d = 0; 31 > d; d++)
      i.push(a);
    return i;
  }
  function Ls(a, i, d) {
    a.pendingLanes |= i, i !== 536870912 && (a.suspendedLanes = 0, a.pingedLanes = 0), a = a.eventTimes, i = 31 - na(i), a[i] = d;
  }
  function G0(a, i) {
    var d = a.pendingLanes & ~i;
    a.pendingLanes = i, a.suspendedLanes = 0, a.pingedLanes = 0, a.expiredLanes &= i, a.mutableReadLanes &= i, a.entangledLanes &= i, i = a.entanglements;
    var h = a.eventTimes;
    for (a = a.expirationTimes; 0 < d; ) {
      var x = 31 - na(d), R = 1 << x;
      i[x] = 0, h[x] = -1, a[x] = -1, d &= ~R;
    }
  }
  function Wc(a, i) {
    var d = a.entangledLanes |= i;
    for (a = a.entanglements; d; ) {
      var h = 31 - na(d), x = 1 << h;
      x & i | a[h] & i && (a[h] |= i), d &= ~x;
    }
  }
  var En = 0;
  function Of(a) {
    return a &= -a, 1 < a ? 4 < a ? a & 268435455 ? 16 : 536870912 : 4 : 1;
  }
  var Dh, fd, Pn, Ph, wf, Xt = !1, Gc = [], vo = null, oa = null, ra = null, qc = /* @__PURE__ */ new Map(), xo = /* @__PURE__ */ new Map(), On = [], q0 = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
  function ka(a, i) {
    switch (a) {
      case "focusin":
      case "focusout":
        vo = null;
        break;
      case "dragenter":
      case "dragleave":
        oa = null;
        break;
      case "mouseover":
      case "mouseout":
        ra = null;
        break;
      case "pointerover":
      case "pointerout":
        qc.delete(i.pointerId);
        break;
      case "gotpointercapture":
      case "lostpointercapture":
        xo.delete(i.pointerId);
    }
  }
  function nr(a, i, d, h, x, R) {
    return a === null || a.nativeEvent !== R ? (a = { blockedOn: i, domEventName: d, eventSystemFlags: h, nativeEvent: R, targetContainers: [x] }, i !== null && (i = du(i), i !== null && fd(i)), a) : (a.eventSystemFlags |= h, i = a.targetContainers, x !== null && i.indexOf(x) === -1 && i.push(x), a);
  }
  function qi(a, i, d, h, x) {
    switch (i) {
      case "focusin":
        return vo = nr(vo, a, i, d, h, x), !0;
      case "dragenter":
        return oa = nr(oa, a, i, d, h, x), !0;
      case "mouseover":
        return ra = nr(ra, a, i, d, h, x), !0;
      case "pointerover":
        var R = x.pointerId;
        return qc.set(R, nr(qc.get(R) || null, a, i, d, h, x)), !0;
      case "gotpointercapture":
        return R = x.pointerId, xo.set(R, nr(xo.get(R) || null, a, i, d, h, x)), !0;
    }
    return !1;
  }
  function Lh(a) {
    var i = ia(a.target);
    if (i !== null) {
      var d = Ne(i);
      if (d !== null) {
        if (i = d.tag, i === 13) {
          if (i = ue(d), i !== null) {
            a.blockedOn = i, wf(a.priority, function() {
              Pn(d);
            });
            return;
          }
        } else if (i === 3 && d.stateNode.current.memoizedState.isDehydrated) {
          a.blockedOn = d.tag === 3 ? d.stateNode.containerInfo : null;
          return;
        }
      }
    }
    a.blockedOn = null;
  }
  function Pl(a) {
    if (a.blockedOn !== null)
      return !1;
    for (var i = a.targetContainers; 0 < i.length; ) {
      var d = hd(a.domEventName, a.eventSystemFlags, i[0], a.nativeEvent);
      if (d === null) {
        d = a.nativeEvent;
        var h = new d.constructor(d.type, d);
        kt = h, d.target.dispatchEvent(h), kt = null;
      } else
        return i = du(d), i !== null && fd(i), a.blockedOn = d, !1;
      i.shift();
    }
    return !0;
  }
  function kf(a, i, d) {
    Pl(a) && d.delete(i);
  }
  function Ih() {
    Xt = !1, vo !== null && Pl(vo) && (vo = null), oa !== null && Pl(oa) && (oa = null), ra !== null && Pl(ra) && (ra = null), qc.forEach(kf), xo.forEach(kf);
  }
  function Yc(a, i) {
    a.blockedOn === i && (a.blockedOn = null, Xt || (Xt = !0, r.unstable_scheduleCallback(r.unstable_NormalPriority, Ih)));
  }
  function Kc(a) {
    function i(x) {
      return Yc(x, a);
    }
    if (0 < Gc.length) {
      Yc(Gc[0], a);
      for (var d = 1; d < Gc.length; d++) {
        var h = Gc[d];
        h.blockedOn === a && (h.blockedOn = null);
      }
    }
    for (vo !== null && Yc(vo, a), oa !== null && Yc(oa, a), ra !== null && Yc(ra, a), qc.forEach(i), xo.forEach(i), d = 0; d < On.length; d++)
      h = On[d], h.blockedOn === a && (h.blockedOn = null);
    for (; 0 < On.length && (d = On[0], d.blockedOn === null); )
      Lh(d), d.blockedOn === null && On.shift();
  }
  var Ll = j.ReactCurrentBatchConfig, Is = !0;
  function _h(a, i, d, h) {
    var x = En, R = Ll.transition;
    Ll.transition = null;
    try {
      En = 1, vd(a, i, d, h);
    } finally {
      En = x, Ll.transition = R;
    }
  }
  function md(a, i, d, h) {
    var x = En, R = Ll.transition;
    Ll.transition = null;
    try {
      En = 4, vd(a, i, d, h);
    } finally {
      En = x, Ll.transition = R;
    }
  }
  function vd(a, i, d, h) {
    if (Is) {
      var x = hd(a, i, d, h);
      if (x === null)
        kd(a, i, h, Xc, d), ka(a, h);
      else if (qi(x, a, i, d, h))
        h.stopPropagation();
      else if (ka(a, h), i & 4 && -1 < q0.indexOf(a)) {
        for (; x !== null; ) {
          var R = du(x);
          if (R !== null && Dh(R), R = hd(a, i, d, h), R === null && kd(a, i, h, Xc, d), R === x)
            break;
          x = R;
        }
        x !== null && h.stopPropagation();
      } else
        kd(a, i, h, null, d);
    }
  }
  var Xc = null;
  function hd(a, i, d, h) {
    if (Xc = null, a = Nt(h), a = ia(a), a !== null)
      if (i = Ne(a), i === null)
        a = null;
      else if (d = i.tag, d === 13) {
        if (a = ue(i), a !== null)
          return a;
        a = null;
      } else if (d === 3) {
        if (i.stateNode.current.memoizedState.isDehydrated)
          return i.tag === 3 ? i.stateNode.containerInfo : null;
        a = null;
      } else
        i !== a && (a = null);
    return Xc = a, null;
  }
  function Nf(a) {
    switch (a) {
      case "cancel":
      case "click":
      case "close":
      case "contextmenu":
      case "copy":
      case "cut":
      case "auxclick":
      case "dblclick":
      case "dragend":
      case "dragstart":
      case "drop":
      case "focusin":
      case "focusout":
      case "input":
      case "invalid":
      case "keydown":
      case "keypress":
      case "keyup":
      case "mousedown":
      case "mouseup":
      case "paste":
      case "pause":
      case "play":
      case "pointercancel":
      case "pointerdown":
      case "pointerup":
      case "ratechange":
      case "reset":
      case "resize":
      case "seeked":
      case "submit":
      case "touchcancel":
      case "touchend":
      case "touchstart":
      case "volumechange":
      case "change":
      case "selectionchange":
      case "textInput":
      case "compositionstart":
      case "compositionend":
      case "compositionupdate":
      case "beforeblur":
      case "afterblur":
      case "beforeinput":
      case "blur":
      case "fullscreenchange":
      case "focus":
      case "hashchange":
      case "popstate":
      case "select":
      case "selectstart":
        return 1;
      case "drag":
      case "dragenter":
      case "dragexit":
      case "dragleave":
      case "dragover":
      case "mousemove":
      case "mouseout":
      case "mouseover":
      case "pointermove":
      case "pointerout":
      case "pointerover":
      case "scroll":
      case "toggle":
      case "touchmove":
      case "wheel":
      case "mouseenter":
      case "mouseleave":
      case "pointerenter":
      case "pointerleave":
        return 4;
      case "message":
        switch (H0()) {
          case di:
            return 1;
          case ln:
            return 4;
          case Gi:
          case kh:
            return 16;
          case Sf:
            return 536870912;
          default:
            return 16;
        }
      default:
        return 16;
    }
  }
  var pi = null, Qc = null, Zc = null;
  function $f() {
    if (Zc)
      return Zc;
    var a, i = Qc, d = i.length, h, x = "value" in pi ? pi.value : pi.textContent, R = x.length;
    for (a = 0; a < d && i[a] === x[a]; a++)
      ;
    var B = d - a;
    for (h = 1; h <= B && i[d - h] === x[R - h]; h++)
      ;
    return Zc = x.slice(a, 1 < h ? 1 - h : void 0);
  }
  function Il(a) {
    var i = a.keyCode;
    return "charCode" in a ? (a = a.charCode, a === 0 && i === 13 && (a = 13)) : a = i, a === 10 && (a = 13), 32 <= a || a === 13 ? a : 0;
  }
  function Jc() {
    return !0;
  }
  function Ah() {
    return !1;
  }
  function Ur(a) {
    function i(d, h, x, R, B) {
      this._reactName = d, this._targetInst = x, this.type = h, this.nativeEvent = R, this.target = B, this.currentTarget = null;
      for (var X in a)
        a.hasOwnProperty(X) && (d = a[X], this[X] = d ? d(R) : R[X]);
      return this.isDefaultPrevented = (R.defaultPrevented != null ? R.defaultPrevented : R.returnValue === !1) ? Jc : Ah, this.isPropagationStopped = Ah, this;
    }
    return ve(i.prototype, { preventDefault: function() {
      this.defaultPrevented = !0;
      var d = this.nativeEvent;
      d && (d.preventDefault ? d.preventDefault() : typeof d.returnValue != "unknown" && (d.returnValue = !1), this.isDefaultPrevented = Jc);
    }, stopPropagation: function() {
      var d = this.nativeEvent;
      d && (d.stopPropagation ? d.stopPropagation() : typeof d.cancelBubble != "unknown" && (d.cancelBubble = !0), this.isPropagationStopped = Jc);
    }, persist: function() {
    }, isPersistent: Jc }), i;
  }
  var Yi = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(a) {
    return a.timeStamp || Date.now();
  }, defaultPrevented: 0, isTrusted: 0 }, gd = Ur(Yi), _l = ve({}, Yi, { view: 0, detail: 0 }), Bh = Ur(_l), yd, Mf, eu, Po = ve({}, _l, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: If, button: 0, buttons: 0, relatedTarget: function(a) {
    return a.relatedTarget === void 0 ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
  }, movementX: function(a) {
    return "movementX" in a ? a.movementX : (a !== eu && (eu && a.type === "mousemove" ? (yd = a.screenX - eu.screenX, Mf = a.screenY - eu.screenY) : Mf = yd = 0, eu = a), yd);
  }, movementY: function(a) {
    return "movementY" in a ? a.movementY : Mf;
  } }), bd = Ur(Po), zh = ve({}, Po, { dataTransfer: 0 }), Fh = Ur(zh), Y0 = ve({}, _l, { relatedTarget: 0 }), Ki = Ur(Y0), Df = ve({}, Yi, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), jh = Ur(Df), K0 = ve({}, Yi, { clipboardData: function(a) {
    return "clipboardData" in a ? a.clipboardData : window.clipboardData;
  } }), X0 = Ur(K0), Q0 = ve({}, Yi, { data: 0 }), Pf = Ur(Q0), Lf = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified"
  }, Uh = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta"
  }, Vh = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
  function Hh(a) {
    var i = this.nativeEvent;
    return i.getModifierState ? i.getModifierState(a) : (a = Vh[a]) ? !!i[a] : !1;
  }
  function If() {
    return Hh;
  }
  var fi = ve({}, _l, { key: function(a) {
    if (a.key) {
      var i = Lf[a.key] || a.key;
      if (i !== "Unidentified")
        return i;
    }
    return a.type === "keypress" ? (a = Il(a), a === 13 ? "Enter" : String.fromCharCode(a)) : a.type === "keydown" || a.type === "keyup" ? Uh[a.keyCode] || "Unidentified" : "";
  }, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: If, charCode: function(a) {
    return a.type === "keypress" ? Il(a) : 0;
  }, keyCode: function(a) {
    return a.type === "keydown" || a.type === "keyup" ? a.keyCode : 0;
  }, which: function(a) {
    return a.type === "keypress" ? Il(a) : a.type === "keydown" || a.type === "keyup" ? a.keyCode : 0;
  } }), Z0 = Ur(fi), _f = ve({}, Po, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Cd = Ur(_f), Af = ve({}, _l, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: If }), J0 = Ur(Af), xd = ve({}, Yi, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), Wh = Ur(xd), Rr = ve({}, Po, {
    deltaX: function(a) {
      return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
    },
    deltaY: function(a) {
      return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
    },
    deltaZ: 0,
    deltaMode: 0
  }), mi = Ur(Rr), ho = [9, 13, 27, 32], Na = y && "CompositionEvent" in window, _s = null;
  y && "documentMode" in document && (_s = document.documentMode);
  var Sd = y && "TextEvent" in window && !_s, Gh = y && (!Na || _s && 8 < _s && 11 >= _s), Al = String.fromCharCode(32), qh = !1;
  function Yh(a, i) {
    switch (a) {
      case "keyup":
        return ho.indexOf(i.keyCode) !== -1;
      case "keydown":
        return i.keyCode !== 229;
      case "keypress":
      case "mousedown":
      case "focusout":
        return !0;
      default:
        return !1;
    }
  }
  function Td(a) {
    return a = a.detail, typeof a == "object" && "data" in a ? a.data : null;
  }
  var Bl = !1;
  function eC(a, i) {
    switch (a) {
      case "compositionend":
        return Td(i);
      case "keypress":
        return i.which !== 32 ? null : (qh = !0, Al);
      case "textInput":
        return a = i.data, a === Al && qh ? null : a;
      default:
        return null;
    }
  }
  function tC(a, i) {
    if (Bl)
      return a === "compositionend" || !Na && Yh(a, i) ? (a = $f(), Zc = Qc = pi = null, Bl = !1, a) : null;
    switch (a) {
      case "paste":
        return null;
      case "keypress":
        if (!(i.ctrlKey || i.altKey || i.metaKey) || i.ctrlKey && i.altKey) {
          if (i.char && 1 < i.char.length)
            return i.char;
          if (i.which)
            return String.fromCharCode(i.which);
        }
        return null;
      case "compositionend":
        return Gh && i.locale !== "ko" ? null : i.data;
      default:
        return null;
    }
  }
  var Kh = { color: !0, date: !0, datetime: !0, "datetime-local": !0, email: !0, month: !0, number: !0, password: !0, range: !0, search: !0, tel: !0, text: !0, time: !0, url: !0, week: !0 };
  function Xh(a) {
    var i = a && a.nodeName && a.nodeName.toLowerCase();
    return i === "input" ? !!Kh[a.type] : i === "textarea";
  }
  function Qh(a, i, d, h) {
    fo(h), i = lu(i, "onChange"), 0 < i.length && (d = new gd("onChange", "change", null, d, h), a.push({ event: d, listeners: i }));
  }
  var tu = null, zl = null;
  function Fl(a) {
    wd(a, 0);
  }
  function jl(a) {
    var i = Vl(a);
    if (rt(i))
      return a;
  }
  function Zh(a, i) {
    if (a === "change")
      return i;
  }
  var Bf = !1;
  if (y) {
    var zf;
    if (y) {
      var Ff = "oninput" in document;
      if (!Ff) {
        var Jh = document.createElement("div");
        Jh.setAttribute("oninput", "return;"), Ff = typeof Jh.oninput == "function";
      }
      zf = Ff;
    } else
      zf = !1;
    Bf = zf && (!document.documentMode || 9 < document.documentMode);
  }
  function eg() {
    tu && (tu.detachEvent("onpropertychange", tg), zl = tu = null);
  }
  function tg(a) {
    if (a.propertyName === "value" && jl(zl)) {
      var i = [];
      Qh(i, zl, a, Nt(a)), No(Fl, i);
    }
  }
  function nC(a, i, d) {
    a === "focusin" ? (eg(), tu = i, zl = d, tu.attachEvent("onpropertychange", tg)) : a === "focusout" && eg();
  }
  function oC(a) {
    if (a === "selectionchange" || a === "keyup" || a === "keydown")
      return jl(zl);
  }
  function rC(a, i) {
    if (a === "click")
      return jl(i);
  }
  function ng(a, i) {
    if (a === "input" || a === "change")
      return jl(i);
  }
  function aC(a, i) {
    return a === i && (a !== 0 || 1 / a === 1 / i) || a !== a && i !== i;
  }
  var aa = typeof Object.is == "function" ? Object.is : aC;
  function nu(a, i) {
    if (aa(a, i))
      return !0;
    if (typeof a != "object" || a === null || typeof i != "object" || i === null)
      return !1;
    var d = Object.keys(a), h = Object.keys(i);
    if (d.length !== h.length)
      return !1;
    for (h = 0; h < d.length; h++) {
      var x = d[h];
      if (!b.call(i, x) || !aa(a[x], i[x]))
        return !1;
    }
    return !0;
  }
  function og(a) {
    for (; a && a.firstChild; )
      a = a.firstChild;
    return a;
  }
  function rg(a, i) {
    var d = og(a);
    a = 0;
    for (var h; d; ) {
      if (d.nodeType === 3) {
        if (h = a + d.textContent.length, a <= i && h >= i)
          return { node: d, offset: i - a };
        a = h;
      }
      e: {
        for (; d; ) {
          if (d.nextSibling) {
            d = d.nextSibling;
            break e;
          }
          d = d.parentNode;
        }
        d = void 0;
      }
      d = og(d);
    }
  }
  function ag(a, i) {
    return a && i ? a === i ? !0 : a && a.nodeType === 3 ? !1 : i && i.nodeType === 3 ? ag(a, i.parentNode) : "contains" in a ? a.contains(i) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(i) & 16) : !1 : !1;
  }
  function Ed() {
    for (var a = window, i = nt(); i instanceof a.HTMLIFrameElement; ) {
      try {
        var d = typeof i.contentWindow.location.href == "string";
      } catch {
        d = !1;
      }
      if (d)
        a = i.contentWindow;
      else
        break;
      i = nt(a.document);
    }
    return i;
  }
  function vi(a) {
    var i = a && a.nodeName && a.nodeName.toLowerCase();
    return i && (i === "input" && (a.type === "text" || a.type === "search" || a.type === "tel" || a.type === "url" || a.type === "password") || i === "textarea" || a.contentEditable === "true");
  }
  function Rd(a) {
    var i = Ed(), d = a.focusedElem, h = a.selectionRange;
    if (i !== d && d && d.ownerDocument && ag(d.ownerDocument.documentElement, d)) {
      if (h !== null && vi(d)) {
        if (i = h.start, a = h.end, a === void 0 && (a = i), "selectionStart" in d)
          d.selectionStart = i, d.selectionEnd = Math.min(a, d.value.length);
        else if (a = (i = d.ownerDocument || document) && i.defaultView || window, a.getSelection) {
          a = a.getSelection();
          var x = d.textContent.length, R = Math.min(h.start, x);
          h = h.end === void 0 ? R : Math.min(h.end, x), !a.extend && R > h && (x = h, h = R, R = x), x = rg(d, R);
          var B = rg(
            d,
            h
          );
          x && B && (a.rangeCount !== 1 || a.anchorNode !== x.node || a.anchorOffset !== x.offset || a.focusNode !== B.node || a.focusOffset !== B.offset) && (i = i.createRange(), i.setStart(x.node, x.offset), a.removeAllRanges(), R > h ? (a.addRange(i), a.extend(B.node, B.offset)) : (i.setEnd(B.node, B.offset), a.addRange(i)));
        }
      }
      for (i = [], a = d; a = a.parentNode; )
        a.nodeType === 1 && i.push({ element: a, left: a.scrollLeft, top: a.scrollTop });
      for (typeof d.focus == "function" && d.focus(), d = 0; d < i.length; d++)
        a = i[d], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;
    }
  }
  var ig = y && "documentMode" in document && 11 >= document.documentMode, $a = null, jf = null, ou = null, Uf = !1;
  function sg(a, i, d) {
    var h = d.window === d ? d.document : d.nodeType === 9 ? d : d.ownerDocument;
    Uf || $a == null || $a !== nt(h) || (h = $a, "selectionStart" in h && vi(h) ? h = { start: h.selectionStart, end: h.selectionEnd } : (h = (h.ownerDocument && h.ownerDocument.defaultView || window).getSelection(), h = { anchorNode: h.anchorNode, anchorOffset: h.anchorOffset, focusNode: h.focusNode, focusOffset: h.focusOffset }), ou && nu(ou, h) || (ou = h, h = lu(jf, "onSelect"), 0 < h.length && (i = new gd("onSelect", "select", null, i, d), a.push({ event: i, listeners: h }), i.target = $a)));
  }
  function Od(a, i) {
    var d = {};
    return d[a.toLowerCase()] = i.toLowerCase(), d["Webkit" + a] = "webkit" + i, d["Moz" + a] = "moz" + i, d;
  }
  var As = { animationend: Od("Animation", "AnimationEnd"), animationiteration: Od("Animation", "AnimationIteration"), animationstart: Od("Animation", "AnimationStart"), transitionend: Od("Transition", "TransitionEnd") }, Vf = {}, Hf = {};
  y && (Hf = document.createElement("div").style, "AnimationEvent" in window || (delete As.animationend.animation, delete As.animationiteration.animation, delete As.animationstart.animation), "TransitionEvent" in window || delete As.transitionend.transition);
  function Lo(a) {
    if (Vf[a])
      return Vf[a];
    if (!As[a])
      return a;
    var i = As[a], d;
    for (d in i)
      if (i.hasOwnProperty(d) && d in Hf)
        return Vf[a] = i[d];
    return a;
  }
  var Wf = Lo("animationend"), lg = Lo("animationiteration"), cg = Lo("animationstart"), ug = Lo("transitionend"), dg = /* @__PURE__ */ new Map(), pg = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
  function hi(a, i) {
    dg.set(a, i), v(i, [a]);
  }
  for (var ru = 0; ru < pg.length; ru++) {
    var Bs = pg[ru], iC = Bs.toLowerCase(), au = Bs[0].toUpperCase() + Bs.slice(1);
    hi(iC, "on" + au);
  }
  hi(Wf, "onAnimationEnd"), hi(lg, "onAnimationIteration"), hi(cg, "onAnimationStart"), hi("dblclick", "onDoubleClick"), hi("focusin", "onFocus"), hi("focusout", "onBlur"), hi(ug, "onTransitionEnd"), m("onMouseEnter", ["mouseout", "mouseover"]), m("onMouseLeave", ["mouseout", "mouseover"]), m("onPointerEnter", ["pointerout", "pointerover"]), m("onPointerLeave", ["pointerout", "pointerover"]), v("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")), v("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")), v("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), v("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")), v("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")), v("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
  var iu = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), sC = new Set("cancel close invalid load scroll toggle".split(" ").concat(iu));
  function fg(a, i, d) {
    var h = a.type || "unknown-event";
    a.currentTarget = d, mo(h, i, void 0, a), a.currentTarget = null;
  }
  function wd(a, i) {
    i = (i & 4) !== 0;
    for (var d = 0; d < a.length; d++) {
      var h = a[d], x = h.event;
      h = h.listeners;
      e: {
        var R = void 0;
        if (i)
          for (var B = h.length - 1; 0 <= B; B--) {
            var X = h[B], te = X.instance, Re = X.currentTarget;
            if (X = X.listener, te !== R && x.isPropagationStopped())
              break e;
            fg(x, X, Re), R = te;
          }
        else
          for (B = 0; B < h.length; B++) {
            if (X = h[B], te = X.instance, Re = X.currentTarget, X = X.listener, te !== R && x.isPropagationStopped())
              break e;
            fg(x, X, Re), R = te;
          }
      }
    }
    if ($o)
      throw a = Mo, $o = !1, Mo = null, a;
  }
  function Ln(a, i) {
    var d = i[Zf];
    d === void 0 && (d = i[Zf] = /* @__PURE__ */ new Set());
    var h = a + "__bubble";
    d.has(h) || (mg(i, a, 2, !1), d.add(h));
  }
  function Xi(a, i, d) {
    var h = 0;
    i && (h |= 4), mg(d, a, h, i);
  }
  var gi = "_reactListening" + Math.random().toString(36).slice(2);
  function Ul(a) {
    if (!a[gi]) {
      a[gi] = !0, u.forEach(function(d) {
        d !== "selectionchange" && (sC.has(d) || Xi(d, !1, a), Xi(d, !0, a));
      });
      var i = a.nodeType === 9 ? a : a.ownerDocument;
      i === null || i[gi] || (i[gi] = !0, Xi("selectionchange", !1, i));
    }
  }
  function mg(a, i, d, h) {
    switch (Nf(i)) {
      case 1:
        var x = _h;
        break;
      case 4:
        x = md;
        break;
      default:
        x = vd;
    }
    d = x.bind(null, i, d, a), x = void 0, !bn || i !== "touchstart" && i !== "touchmove" && i !== "wheel" || (x = !0), h ? x !== void 0 ? a.addEventListener(i, d, { capture: !0, passive: x }) : a.addEventListener(i, d, !0) : x !== void 0 ? a.addEventListener(i, d, { passive: x }) : a.addEventListener(i, d, !1);
  }
  function kd(a, i, d, h, x) {
    var R = h;
    if (!(i & 1) && !(i & 2) && h !== null)
      e:
        for (; ; ) {
          if (h === null)
            return;
          var B = h.tag;
          if (B === 3 || B === 4) {
            var X = h.stateNode.containerInfo;
            if (X === x || X.nodeType === 8 && X.parentNode === x)
              break;
            if (B === 4)
              for (B = h.return; B !== null; ) {
                var te = B.tag;
                if ((te === 3 || te === 4) && (te = B.stateNode.containerInfo, te === x || te.nodeType === 8 && te.parentNode === x))
                  return;
                B = B.return;
              }
            for (; X !== null; ) {
              if (B = ia(X), B === null)
                return;
              if (te = B.tag, te === 5 || te === 6) {
                h = R = B;
                continue e;
              }
              X = X.parentNode;
            }
          }
          h = h.return;
        }
    No(function() {
      var Re = R, Je = Nt(d), ot = [];
      e: {
        var Ze = dg.get(a);
        if (Ze !== void 0) {
          var bt = gd, Rt = a;
          switch (a) {
            case "keypress":
              if (Il(d) === 0)
                break e;
            case "keydown":
            case "keyup":
              bt = Z0;
              break;
            case "focusin":
              Rt = "focus", bt = Ki;
              break;
            case "focusout":
              Rt = "blur", bt = Ki;
              break;
            case "beforeblur":
            case "afterblur":
              bt = Ki;
              break;
            case "click":
              if (d.button === 2)
                break e;
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
              bt = bd;
              break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
              bt = Fh;
              break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
              bt = J0;
              break;
            case Wf:
            case lg:
            case cg:
              bt = jh;
              break;
            case ug:
              bt = Wh;
              break;
            case "scroll":
              bt = Bh;
              break;
            case "wheel":
              bt = mi;
              break;
            case "copy":
            case "cut":
            case "paste":
              bt = X0;
              break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
              bt = Cd;
          }
          var $t = (i & 4) !== 0, co = !$t && a === "scroll", ge = $t ? Ze !== null ? Ze + "Capture" : null : Ze;
          $t = [];
          for (var ie = Re, Se; ie !== null; ) {
            Se = ie;
            var ct = Se.stateNode;
            if (Se.tag === 5 && ct !== null && (Se = ct, ge !== null && (ct = Rn(ie, ge), ct != null && $t.push(su(ie, ct, Se)))), co)
              break;
            ie = ie.return;
          }
          0 < $t.length && (Ze = new bt(Ze, Rt, null, d, Je), ot.push({ event: Ze, listeners: $t }));
        }
      }
      if (!(i & 7)) {
        e: {
          if (Ze = a === "mouseover" || a === "pointerover", bt = a === "mouseout" || a === "pointerout", Ze && d !== kt && (Rt = d.relatedTarget || d.fromElement) && (ia(Rt) || Rt[yi]))
            break e;
          if ((bt || Ze) && (Ze = Je.window === Je ? Je : (Ze = Je.ownerDocument) ? Ze.defaultView || Ze.parentWindow : window, bt ? (Rt = d.relatedTarget || d.toElement, bt = Re, Rt = Rt ? ia(Rt) : null, Rt !== null && (co = Ne(Rt), Rt !== co || Rt.tag !== 5 && Rt.tag !== 6) && (Rt = null)) : (bt = null, Rt = Re), bt !== Rt)) {
            if ($t = bd, ct = "onMouseLeave", ge = "onMouseEnter", ie = "mouse", (a === "pointerout" || a === "pointerover") && ($t = Cd, ct = "onPointerLeave", ge = "onPointerEnter", ie = "pointer"), co = bt == null ? Ze : Vl(bt), Se = Rt == null ? Ze : Vl(Rt), Ze = new $t(ct, ie + "leave", bt, d, Je), Ze.target = co, Ze.relatedTarget = Se, ct = null, ia(Je) === Re && ($t = new $t(ge, ie + "enter", Rt, d, Je), $t.target = Se, $t.relatedTarget = co, ct = $t), co = ct, bt && Rt)
              t: {
                for ($t = bt, ge = Rt, ie = 0, Se = $t; Se; Se = zs(Se))
                  ie++;
                for (Se = 0, ct = ge; ct; ct = zs(ct))
                  Se++;
                for (; 0 < ie - Se; )
                  $t = zs($t), ie--;
                for (; 0 < Se - ie; )
                  ge = zs(ge), Se--;
                for (; ie--; ) {
                  if ($t === ge || ge !== null && $t === ge.alternate)
                    break t;
                  $t = zs($t), ge = zs(ge);
                }
                $t = null;
              }
            else
              $t = null;
            bt !== null && Gf(ot, Ze, bt, $t, !1), Rt !== null && co !== null && Gf(ot, co, Rt, $t, !0);
          }
        }
        e: {
          if (Ze = Re ? Vl(Re) : window, bt = Ze.nodeName && Ze.nodeName.toLowerCase(), bt === "select" || bt === "input" && Ze.type === "file")
            var Mt = Zh;
          else if (Xh(Ze))
            if (Bf)
              Mt = ng;
            else {
              Mt = oC;
              var Ot = nC;
            }
          else
            (bt = Ze.nodeName) && bt.toLowerCase() === "input" && (Ze.type === "checkbox" || Ze.type === "radio") && (Mt = rC);
          if (Mt && (Mt = Mt(a, Re))) {
            Qh(ot, Mt, d, Je);
            break e;
          }
          Ot && Ot(a, Ze, Re), a === "focusout" && (Ot = Ze._wrapperState) && Ot.controlled && Ze.type === "number" && zt(Ze, "number", Ze.value);
        }
        switch (Ot = Re ? Vl(Re) : window, a) {
          case "focusin":
            (Xh(Ot) || Ot.contentEditable === "true") && ($a = Ot, jf = Re, ou = null);
            break;
          case "focusout":
            ou = jf = $a = null;
            break;
          case "mousedown":
            Uf = !0;
            break;
          case "contextmenu":
          case "mouseup":
          case "dragend":
            Uf = !1, sg(ot, d, Je);
            break;
          case "selectionchange":
            if (ig)
              break;
          case "keydown":
          case "keyup":
            sg(ot, d, Je);
        }
        var It;
        if (Na)
          e: {
            switch (a) {
              case "compositionstart":
                var Gt = "onCompositionStart";
                break e;
              case "compositionend":
                Gt = "onCompositionEnd";
                break e;
              case "compositionupdate":
                Gt = "onCompositionUpdate";
                break e;
            }
            Gt = void 0;
          }
        else
          Bl ? Yh(a, d) && (Gt = "onCompositionEnd") : a === "keydown" && d.keyCode === 229 && (Gt = "onCompositionStart");
        Gt && (Gh && d.locale !== "ko" && (Bl || Gt !== "onCompositionStart" ? Gt === "onCompositionEnd" && Bl && (It = $f()) : (pi = Je, Qc = "value" in pi ? pi.value : pi.textContent, Bl = !0)), Ot = lu(Re, Gt), 0 < Ot.length && (Gt = new Pf(Gt, a, null, d, Je), ot.push({ event: Gt, listeners: Ot }), It ? Gt.data = It : (It = Td(d), It !== null && (Gt.data = It)))), (It = Sd ? eC(a, d) : tC(a, d)) && (Re = lu(Re, "onBeforeInput"), 0 < Re.length && (Je = new Pf("onBeforeInput", "beforeinput", null, d, Je), ot.push({ event: Je, listeners: Re }), Je.data = It));
      }
      wd(ot, i);
    });
  }
  function su(a, i, d) {
    return { instance: a, listener: i, currentTarget: d };
  }
  function lu(a, i) {
    for (var d = i + "Capture", h = []; a !== null; ) {
      var x = a, R = x.stateNode;
      x.tag === 5 && R !== null && (x = R, R = Rn(a, d), R != null && h.unshift(su(a, R, x)), R = Rn(a, i), R != null && h.push(su(a, R, x))), a = a.return;
    }
    return h;
  }
  function zs(a) {
    if (a === null)
      return null;
    do
      a = a.return;
    while (a && a.tag !== 5);
    return a || null;
  }
  function Gf(a, i, d, h, x) {
    for (var R = i._reactName, B = []; d !== null && d !== h; ) {
      var X = d, te = X.alternate, Re = X.stateNode;
      if (te !== null && te === h)
        break;
      X.tag === 5 && Re !== null && (X = Re, x ? (te = Rn(d, R), te != null && B.unshift(su(d, te, X))) : x || (te = Rn(d, R), te != null && B.push(su(d, te, X)))), d = d.return;
    }
    B.length !== 0 && a.push({ event: i, listeners: B });
  }
  var qf = /\r\n?/g, lC = /\u0000|\uFFFD/g;
  function Yf(a) {
    return (typeof a == "string" ? a : "" + a).replace(qf, `
`).replace(lC, "");
  }
  function Nd(a, i, d) {
    if (i = Yf(i), Yf(a) !== i && d)
      throw Error(s(425));
  }
  function $d() {
  }
  var Kf = null, Fs = null;
  function cu(a, i) {
    return a === "textarea" || a === "noscript" || typeof i.children == "string" || typeof i.children == "number" || typeof i.dangerouslySetInnerHTML == "object" && i.dangerouslySetInnerHTML !== null && i.dangerouslySetInnerHTML.__html != null;
  }
  var js = typeof setTimeout == "function" ? setTimeout : void 0, vg = typeof clearTimeout == "function" ? clearTimeout : void 0, Xf = typeof Promise == "function" ? Promise : void 0, Qf = typeof queueMicrotask == "function" ? queueMicrotask : typeof Xf < "u" ? function(a) {
    return Xf.resolve(null).then(a).catch(cC);
  } : js;
  function cC(a) {
    setTimeout(function() {
      throw a;
    });
  }
  function Qi(a, i) {
    var d = i, h = 0;
    do {
      var x = d.nextSibling;
      if (a.removeChild(d), x && x.nodeType === 8)
        if (d = x.data, d === "/$") {
          if (h === 0) {
            a.removeChild(x), Kc(i);
            return;
          }
          h--;
        } else
          d !== "$" && d !== "$?" && d !== "$!" || h++;
      d = x;
    } while (d);
    Kc(i);
  }
  function Ma(a) {
    for (; a != null; a = a.nextSibling) {
      var i = a.nodeType;
      if (i === 1 || i === 3)
        break;
      if (i === 8) {
        if (i = a.data, i === "$" || i === "$!" || i === "$?")
          break;
        if (i === "/$")
          return null;
      }
    }
    return a;
  }
  function uu(a) {
    a = a.previousSibling;
    for (var i = 0; a; ) {
      if (a.nodeType === 8) {
        var d = a.data;
        if (d === "$" || d === "$!" || d === "$?") {
          if (i === 0)
            return a;
          i--;
        } else
          d === "/$" && i++;
      }
      a = a.previousSibling;
    }
    return null;
  }
  var Zi = Math.random().toString(36).slice(2), Ua = "__reactFiber$" + Zi, Us = "__reactProps$" + Zi, yi = "__reactContainer$" + Zi, Zf = "__reactEvents$" + Zi, uC = "__reactListeners$" + Zi, Jf = "__reactHandles$" + Zi;
  function ia(a) {
    var i = a[Ua];
    if (i)
      return i;
    for (var d = a.parentNode; d; ) {
      if (i = d[yi] || d[Ua]) {
        if (d = i.alternate, i.child !== null || d !== null && d.child !== null)
          for (a = uu(a); a !== null; ) {
            if (d = a[Ua])
              return d;
            a = uu(a);
          }
        return i;
      }
      a = d, d = a.parentNode;
    }
    return null;
  }
  function du(a) {
    return a = a[Ua] || a[yi], !a || a.tag !== 5 && a.tag !== 6 && a.tag !== 13 && a.tag !== 3 ? null : a;
  }
  function Vl(a) {
    if (a.tag === 5 || a.tag === 6)
      return a.stateNode;
    throw Error(s(33));
  }
  function _t(a) {
    return a[Us] || null;
  }
  var Ji = [], Bn = -1;
  function Zt(a) {
    return { current: a };
  }
  function Cn(a) {
    0 > Bn || (a.current = Ji[Bn], Ji[Bn] = null, Bn--);
  }
  function xn(a, i) {
    Bn++, Ji[Bn] = a.current, a.current = i;
  }
  var Va = {}, Wt = Zt(Va), oo = Zt(!1), Or = Va;
  function sa(a, i) {
    var d = a.type.contextTypes;
    if (!d)
      return Va;
    var h = a.stateNode;
    if (h && h.__reactInternalMemoizedUnmaskedChildContext === i)
      return h.__reactInternalMemoizedMaskedChildContext;
    var x = {}, R;
    for (R in d)
      x[R] = i[R];
    return h && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = i, a.__reactInternalMemoizedMaskedChildContext = x), x;
  }
  function qn(a) {
    return a = a.childContextTypes, a != null;
  }
  function la() {
    Cn(oo), Cn(Wt);
  }
  function es(a, i, d) {
    if (Wt.current !== Va)
      throw Error(s(168));
    xn(Wt, i), xn(oo, d);
  }
  function pu(a, i, d) {
    var h = a.stateNode;
    if (i = i.childContextTypes, typeof h.getChildContext != "function")
      return d;
    h = h.getChildContext();
    for (var x in h)
      if (!(x in i))
        throw Error(s(108, lt(a) || "Unknown", x));
    return ve({}, d, h);
  }
  function Md(a) {
    return a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || Va, Or = Wt.current, xn(Wt, a), xn(oo, oo.current), !0;
  }
  function hg(a, i, d) {
    var h = a.stateNode;
    if (!h)
      throw Error(s(169));
    d ? (a = pu(a, i, Or), h.__reactInternalMemoizedMergedChildContext = a, Cn(oo), Cn(Wt), xn(Wt, a)) : Cn(oo), xn(oo, d);
  }
  var Vr = null, Io = !1, fu = !1;
  function em(a) {
    Vr === null ? Vr = [a] : Vr.push(a);
  }
  function tm(a) {
    Io = !0, em(a);
  }
  function wr() {
    if (!fu && Vr !== null) {
      fu = !0;
      var a = 0, i = En;
      try {
        var d = Vr;
        for (En = 1; a < d.length; a++) {
          var h = d[a];
          do
            h = h(!0);
          while (h !== null);
        }
        Vr = null, Io = !1;
      } catch (x) {
        throw Vr !== null && (Vr = Vr.slice(a + 1)), sn(di, wr), x;
      } finally {
        En = i, fu = !1;
      }
    }
    return null;
  }
  var ts = [], kr = 0, Vs = null, Hl = 0, Nr = [], or = 0, ca = null, Vo = 1, bi = "";
  function Hr(a, i) {
    ts[kr++] = Hl, ts[kr++] = Vs, Vs = a, Hl = i;
  }
  function nm(a, i, d) {
    Nr[or++] = Vo, Nr[or++] = bi, Nr[or++] = ca, ca = a;
    var h = Vo;
    a = bi;
    var x = 32 - na(h) - 1;
    h &= ~(1 << x), d += 1;
    var R = 32 - na(i) + x;
    if (30 < R) {
      var B = x - x % 5;
      R = (h & (1 << B) - 1).toString(32), h >>= B, x -= B, Vo = 1 << 32 - na(i) + x | d << x | h, bi = R + a;
    } else
      Vo = 1 << R | d << x | h, bi = a;
  }
  function Dd(a) {
    a.return !== null && (Hr(a, 1), nm(a, 1, 0));
  }
  function om(a) {
    for (; a === Vs; )
      Vs = ts[--kr], ts[kr] = null, Hl = ts[--kr], ts[kr] = null;
    for (; a === ca; )
      ca = Nr[--or], Nr[or] = null, bi = Nr[--or], Nr[or] = null, Vo = Nr[--or], Nr[or] = null;
  }
  var Wr = null, $r = null, zn = !1, ua = null;
  function rm(a, i) {
    var d = ha(5, null, null, 0);
    d.elementType = "DELETED", d.stateNode = i, d.return = a, i = a.deletions, i === null ? (a.deletions = [d], a.flags |= 16) : i.push(d);
  }
  function gg(a, i) {
    switch (a.tag) {
      case 5:
        var d = a.type;
        return i = i.nodeType !== 1 || d.toLowerCase() !== i.nodeName.toLowerCase() ? null : i, i !== null ? (a.stateNode = i, Wr = a, $r = Ma(i.firstChild), !0) : !1;
      case 6:
        return i = a.pendingProps === "" || i.nodeType !== 3 ? null : i, i !== null ? (a.stateNode = i, Wr = a, $r = null, !0) : !1;
      case 13:
        return i = i.nodeType !== 8 ? null : i, i !== null ? (d = ca !== null ? { id: Vo, overflow: bi } : null, a.memoizedState = { dehydrated: i, treeContext: d, retryLane: 1073741824 }, d = ha(18, null, null, 0), d.stateNode = i, d.return = a, a.child = d, Wr = a, $r = null, !0) : !1;
      default:
        return !1;
    }
  }
  function Pd(a) {
    return (a.mode & 1) !== 0 && (a.flags & 128) === 0;
  }
  function Ld(a) {
    if (zn) {
      var i = $r;
      if (i) {
        var d = i;
        if (!gg(a, i)) {
          if (Pd(a))
            throw Error(s(418));
          i = Ma(d.nextSibling);
          var h = Wr;
          i && gg(a, i) ? rm(h, d) : (a.flags = a.flags & -4097 | 2, zn = !1, Wr = a);
        }
      } else {
        if (Pd(a))
          throw Error(s(418));
        a.flags = a.flags & -4097 | 2, zn = !1, Wr = a;
      }
    }
  }
  function yg(a) {
    for (a = a.return; a !== null && a.tag !== 5 && a.tag !== 3 && a.tag !== 13; )
      a = a.return;
    Wr = a;
  }
  function Id(a) {
    if (a !== Wr)
      return !1;
    if (!zn)
      return yg(a), zn = !0, !1;
    var i;
    if ((i = a.tag !== 3) && !(i = a.tag !== 5) && (i = a.type, i = i !== "head" && i !== "body" && !cu(a.type, a.memoizedProps)), i && (i = $r)) {
      if (Pd(a))
        throw bg(), Error(s(418));
      for (; i; )
        rm(a, i), i = Ma(i.nextSibling);
    }
    if (yg(a), a.tag === 13) {
      if (a = a.memoizedState, a = a !== null ? a.dehydrated : null, !a)
        throw Error(s(317));
      e: {
        for (a = a.nextSibling, i = 0; a; ) {
          if (a.nodeType === 8) {
            var d = a.data;
            if (d === "/$") {
              if (i === 0) {
                $r = Ma(a.nextSibling);
                break e;
              }
              i--;
            } else
              d !== "$" && d !== "$!" && d !== "$?" || i++;
          }
          a = a.nextSibling;
        }
        $r = null;
      }
    } else
      $r = Wr ? Ma(a.stateNode.nextSibling) : null;
    return !0;
  }
  function bg() {
    for (var a = $r; a; )
      a = Ma(a.nextSibling);
  }
  function Qn() {
    $r = Wr = null, zn = !1;
  }
  function am(a) {
    ua === null ? ua = [a] : ua.push(a);
  }
  var _d = j.ReactCurrentBatchConfig;
  function Gr(a, i) {
    if (a && a.defaultProps) {
      i = ve({}, i), a = a.defaultProps;
      for (var d in a)
        i[d] === void 0 && (i[d] = a[d]);
      return i;
    }
    return i;
  }
  var Ha = Zt(null), Ad = null, ns = null, im = null;
  function sm() {
    im = ns = Ad = null;
  }
  function os(a) {
    var i = Ha.current;
    Cn(Ha), a._currentValue = i;
  }
  function _o(a, i, d) {
    for (; a !== null; ) {
      var h = a.alternate;
      if ((a.childLanes & i) !== i ? (a.childLanes |= i, h !== null && (h.childLanes |= i)) : h !== null && (h.childLanes & i) !== i && (h.childLanes |= i), a === d)
        break;
      a = a.return;
    }
  }
  function mt(a, i) {
    Ad = a, im = ns = null, a = a.dependencies, a !== null && a.firstContext !== null && (a.lanes & i && (go = !0), a.firstContext = null);
  }
  function lo(a) {
    var i = a._currentValue;
    if (im !== a)
      if (a = { context: a, memoizedValue: i, next: null }, ns === null) {
        if (Ad === null)
          throw Error(s(308));
        ns = a, Ad.dependencies = { lanes: 0, firstContext: a };
      } else
        ns = ns.next = a;
    return i;
  }
  var Ho = null;
  function lm(a) {
    Ho === null ? Ho = [a] : Ho.push(a);
  }
  function Cg(a, i, d, h) {
    var x = i.interleaved;
    return x === null ? (d.next = d, lm(i)) : (d.next = x.next, x.next = d), i.interleaved = d, Ci(a, h);
  }
  function Ci(a, i) {
    a.lanes |= i;
    var d = a.alternate;
    for (d !== null && (d.lanes |= i), d = a, a = a.return; a !== null; )
      a.childLanes |= i, d = a.alternate, d !== null && (d.childLanes |= i), d = a, a = a.return;
    return d.tag === 3 ? d.stateNode : null;
  }
  var rs = !1;
  function cm(a) {
    a.updateQueue = { baseState: a.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
  }
  function So(a, i) {
    a = a.updateQueue, i.updateQueue === a && (i.updateQueue = { baseState: a.baseState, firstBaseUpdate: a.firstBaseUpdate, lastBaseUpdate: a.lastBaseUpdate, shared: a.shared, effects: a.effects });
  }
  function xi(a, i) {
    return { eventTime: a, lane: i, tag: 0, payload: null, callback: null, next: null };
  }
  function as(a, i, d) {
    var h = a.updateQueue;
    if (h === null)
      return null;
    if (h = h.shared, cn & 2) {
      var x = h.pending;
      return x === null ? i.next = i : (i.next = x.next, x.next = i), h.pending = i, Ci(a, d);
    }
    return x = h.interleaved, x === null ? (i.next = i, lm(h)) : (i.next = x.next, x.next = i), h.interleaved = i, Ci(a, d);
  }
  function Bd(a, i, d) {
    if (i = i.updateQueue, i !== null && (i = i.shared, (d & 4194240) !== 0)) {
      var h = i.lanes;
      h &= a.pendingLanes, d |= h, i.lanes = d, Wc(a, d);
    }
  }
  function um(a, i) {
    var d = a.updateQueue, h = a.alternate;
    if (h !== null && (h = h.updateQueue, d === h)) {
      var x = null, R = null;
      if (d = d.firstBaseUpdate, d !== null) {
        do {
          var B = { eventTime: d.eventTime, lane: d.lane, tag: d.tag, payload: d.payload, callback: d.callback, next: null };
          R === null ? x = R = B : R = R.next = B, d = d.next;
        } while (d !== null);
        R === null ? x = R = i : R = R.next = i;
      } else
        x = R = i;
      d = { baseState: h.baseState, firstBaseUpdate: x, lastBaseUpdate: R, shared: h.shared, effects: h.effects }, a.updateQueue = d;
      return;
    }
    a = d.lastBaseUpdate, a === null ? d.firstBaseUpdate = i : a.next = i, d.lastBaseUpdate = i;
  }
  function is(a, i, d, h) {
    var x = a.updateQueue;
    rs = !1;
    var R = x.firstBaseUpdate, B = x.lastBaseUpdate, X = x.shared.pending;
    if (X !== null) {
      x.shared.pending = null;
      var te = X, Re = te.next;
      te.next = null, B === null ? R = Re : B.next = Re, B = te;
      var Je = a.alternate;
      Je !== null && (Je = Je.updateQueue, X = Je.lastBaseUpdate, X !== B && (X === null ? Je.firstBaseUpdate = Re : X.next = Re, Je.lastBaseUpdate = te));
    }
    if (R !== null) {
      var ot = x.baseState;
      B = 0, Je = Re = te = null, X = R;
      do {
        var Ze = X.lane, bt = X.eventTime;
        if ((h & Ze) === Ze) {
          Je !== null && (Je = Je.next = {
            eventTime: bt,
            lane: 0,
            tag: X.tag,
            payload: X.payload,
            callback: X.callback,
            next: null
          });
          e: {
            var Rt = a, $t = X;
            switch (Ze = i, bt = d, $t.tag) {
              case 1:
                if (Rt = $t.payload, typeof Rt == "function") {
                  ot = Rt.call(bt, ot, Ze);
                  break e;
                }
                ot = Rt;
                break e;
              case 3:
                Rt.flags = Rt.flags & -65537 | 128;
              case 0:
                if (Rt = $t.payload, Ze = typeof Rt == "function" ? Rt.call(bt, ot, Ze) : Rt, Ze == null)
                  break e;
                ot = ve({}, ot, Ze);
                break e;
              case 2:
                rs = !0;
            }
          }
          X.callback !== null && X.lane !== 0 && (a.flags |= 64, Ze = x.effects, Ze === null ? x.effects = [X] : Ze.push(X));
        } else
          bt = { eventTime: bt, lane: Ze, tag: X.tag, payload: X.payload, callback: X.callback, next: null }, Je === null ? (Re = Je = bt, te = ot) : Je = Je.next = bt, B |= Ze;
        if (X = X.next, X === null) {
          if (X = x.shared.pending, X === null)
            break;
          Ze = X, X = Ze.next, Ze.next = null, x.lastBaseUpdate = Ze, x.shared.pending = null;
        }
      } while (1);
      if (Je === null && (te = ot), x.baseState = te, x.firstBaseUpdate = Re, x.lastBaseUpdate = Je, i = x.shared.interleaved, i !== null) {
        x = i;
        do
          B |= x.lane, x = x.next;
        while (x !== i);
      } else
        R === null && (x.shared.lanes = 0);
      Ri |= B, a.lanes = B, a.memoizedState = ot;
    }
  }
  function Hs(a, i, d) {
    if (a = i.effects, i.effects = null, a !== null)
      for (i = 0; i < a.length; i++) {
        var h = a[i], x = h.callback;
        if (x !== null) {
          if (h.callback = null, h = d, typeof x != "function")
            throw Error(s(191, x));
          x.call(h);
        }
      }
  }
  var xg = new e.Component().refs;
  function dm(a, i, d, h) {
    i = a.memoizedState, d = d(h, i), d = d == null ? i : ve({}, i, d), a.memoizedState = d, a.lanes === 0 && (a.updateQueue.baseState = d);
  }
  var zd = { isMounted: function(a) {
    return (a = a._reactInternals) ? Ne(a) === a : !1;
  }, enqueueSetState: function(a, i, d) {
    a = a._reactInternals;
    var h = sr(), x = yo(a), R = xi(h, x);
    R.payload = i, d != null && (R.callback = d), i = as(a, R, x), i !== null && (lr(i, a, x, h), Bd(i, a, x));
  }, enqueueReplaceState: function(a, i, d) {
    a = a._reactInternals;
    var h = sr(), x = yo(a), R = xi(h, x);
    R.tag = 1, R.payload = i, d != null && (R.callback = d), i = as(a, R, x), i !== null && (lr(i, a, x, h), Bd(i, a, x));
  }, enqueueForceUpdate: function(a, i) {
    a = a._reactInternals;
    var d = sr(), h = yo(a), x = xi(d, h);
    x.tag = 2, i != null && (x.callback = i), i = as(a, x, h), i !== null && (lr(i, a, h, d), Bd(i, a, h));
  } };
  function Sg(a, i, d, h, x, R, B) {
    return a = a.stateNode, typeof a.shouldComponentUpdate == "function" ? a.shouldComponentUpdate(h, R, B) : i.prototype && i.prototype.isPureReactComponent ? !nu(d, h) || !nu(x, R) : !0;
  }
  function Tg(a, i, d) {
    var h = !1, x = Va, R = i.contextType;
    return typeof R == "object" && R !== null ? R = lo(R) : (x = qn(i) ? Or : Wt.current, h = i.contextTypes, R = (h = h != null) ? sa(a, x) : Va), i = new i(d, R), a.memoizedState = i.state !== null && i.state !== void 0 ? i.state : null, i.updater = zd, a.stateNode = i, i._reactInternals = a, h && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = x, a.__reactInternalMemoizedMaskedChildContext = R), i;
  }
  function Eg(a, i, d, h) {
    a = i.state, typeof i.componentWillReceiveProps == "function" && i.componentWillReceiveProps(d, h), typeof i.UNSAFE_componentWillReceiveProps == "function" && i.UNSAFE_componentWillReceiveProps(d, h), i.state !== a && zd.enqueueReplaceState(i, i.state, null);
  }
  function Fd(a, i, d, h) {
    var x = a.stateNode;
    x.props = d, x.state = a.memoizedState, x.refs = xg, cm(a);
    var R = i.contextType;
    typeof R == "object" && R !== null ? x.context = lo(R) : (R = qn(i) ? Or : Wt.current, x.context = sa(a, R)), x.state = a.memoizedState, R = i.getDerivedStateFromProps, typeof R == "function" && (dm(a, i, R, d), x.state = a.memoizedState), typeof i.getDerivedStateFromProps == "function" || typeof x.getSnapshotBeforeUpdate == "function" || typeof x.UNSAFE_componentWillMount != "function" && typeof x.componentWillMount != "function" || (i = x.state, typeof x.componentWillMount == "function" && x.componentWillMount(), typeof x.UNSAFE_componentWillMount == "function" && x.UNSAFE_componentWillMount(), i !== x.state && zd.enqueueReplaceState(x, x.state, null), is(a, d, x, h), x.state = a.memoizedState), typeof x.componentDidMount == "function" && (a.flags |= 4194308);
  }
  function Wl(a, i, d) {
    if (a = d.ref, a !== null && typeof a != "function" && typeof a != "object") {
      if (d._owner) {
        if (d = d._owner, d) {
          if (d.tag !== 1)
            throw Error(s(309));
          var h = d.stateNode;
        }
        if (!h)
          throw Error(s(147, a));
        var x = h, R = "" + a;
        return i !== null && i.ref !== null && typeof i.ref == "function" && i.ref._stringRef === R ? i.ref : (i = function(B) {
          var X = x.refs;
          X === xg && (X = x.refs = {}), B === null ? delete X[R] : X[R] = B;
        }, i._stringRef = R, i);
      }
      if (typeof a != "string")
        throw Error(s(284));
      if (!d._owner)
        throw Error(s(290, a));
    }
    return a;
  }
  function jd(a, i) {
    throw a = Object.prototype.toString.call(i), Error(s(31, a === "[object Object]" ? "object with keys {" + Object.keys(i).join(", ") + "}" : a));
  }
  function Rg(a) {
    var i = a._init;
    return i(a._payload);
  }
  function Og(a) {
    function i(ge, ie) {
      if (a) {
        var Se = ge.deletions;
        Se === null ? (ge.deletions = [ie], ge.flags |= 16) : Se.push(ie);
      }
    }
    function d(ge, ie) {
      if (!a)
        return null;
      for (; ie !== null; )
        i(ge, ie), ie = ie.sibling;
      return null;
    }
    function h(ge, ie) {
      for (ge = /* @__PURE__ */ new Map(); ie !== null; )
        ie.key !== null ? ge.set(ie.key, ie) : ge.set(ie.index, ie), ie = ie.sibling;
      return ge;
    }
    function x(ge, ie) {
      return ge = ms(ge, ie), ge.index = 0, ge.sibling = null, ge;
    }
    function R(ge, ie, Se) {
      return ge.index = Se, a ? (Se = ge.alternate, Se !== null ? (Se = Se.index, Se < ie ? (ge.flags |= 2, ie) : Se) : (ge.flags |= 2, ie)) : (ge.flags |= 1048576, ie);
    }
    function B(ge) {
      return a && ge.alternate === null && (ge.flags |= 2), ge;
    }
    function X(ge, ie, Se, ct) {
      return ie === null || ie.tag !== 6 ? (ie = Du(Se, ge.mode, ct), ie.return = ge, ie) : (ie = x(ie, Se), ie.return = ge, ie);
    }
    function te(ge, ie, Se, ct) {
      var Mt = Se.type;
      return Mt === F ? Je(ge, ie, Se.props.children, ct, Se.key) : ie !== null && (ie.elementType === Mt || typeof Mt == "object" && Mt !== null && Mt.$$typeof === de && Rg(Mt) === ie.type) ? (ct = x(ie, Se.props), ct.ref = Wl(ge, ie, Se), ct.return = ge, ct) : (ct = bp(Se.type, Se.key, Se.props, null, ge.mode, ct), ct.ref = Wl(ge, ie, Se), ct.return = ge, ct);
    }
    function Re(ge, ie, Se, ct) {
      return ie === null || ie.tag !== 4 || ie.stateNode.containerInfo !== Se.containerInfo || ie.stateNode.implementation !== Se.implementation ? (ie = cl(Se, ge.mode, ct), ie.return = ge, ie) : (ie = x(ie, Se.children || []), ie.return = ge, ie);
    }
    function Je(ge, ie, Se, ct, Mt) {
      return ie === null || ie.tag !== 7 ? (ie = ll(Se, ge.mode, ct, Mt), ie.return = ge, ie) : (ie = x(ie, Se), ie.return = ge, ie);
    }
    function ot(ge, ie, Se) {
      if (typeof ie == "string" && ie !== "" || typeof ie == "number")
        return ie = Du("" + ie, ge.mode, Se), ie.return = ge, ie;
      if (typeof ie == "object" && ie !== null) {
        switch (ie.$$typeof) {
          case U:
            return Se = bp(ie.type, ie.key, ie.props, null, ge.mode, Se), Se.ref = Wl(ge, null, ie), Se.return = ge, Se;
          case $:
            return ie = cl(ie, ge.mode, Se), ie.return = ge, ie;
          case de:
            var ct = ie._init;
            return ot(ge, ct(ie._payload), Se);
        }
        if (Dt(ie) || ne(ie))
          return ie = ll(ie, ge.mode, Se, null), ie.return = ge, ie;
        jd(ge, ie);
      }
      return null;
    }
    function Ze(ge, ie, Se, ct) {
      var Mt = ie !== null ? ie.key : null;
      if (typeof Se == "string" && Se !== "" || typeof Se == "number")
        return Mt !== null ? null : X(ge, ie, "" + Se, ct);
      if (typeof Se == "object" && Se !== null) {
        switch (Se.$$typeof) {
          case U:
            return Se.key === Mt ? te(ge, ie, Se, ct) : null;
          case $:
            return Se.key === Mt ? Re(ge, ie, Se, ct) : null;
          case de:
            return Mt = Se._init, Ze(
              ge,
              ie,
              Mt(Se._payload),
              ct
            );
        }
        if (Dt(Se) || ne(Se))
          return Mt !== null ? null : Je(ge, ie, Se, ct, null);
        jd(ge, Se);
      }
      return null;
    }
    function bt(ge, ie, Se, ct, Mt) {
      if (typeof ct == "string" && ct !== "" || typeof ct == "number")
        return ge = ge.get(Se) || null, X(ie, ge, "" + ct, Mt);
      if (typeof ct == "object" && ct !== null) {
        switch (ct.$$typeof) {
          case U:
            return ge = ge.get(ct.key === null ? Se : ct.key) || null, te(ie, ge, ct, Mt);
          case $:
            return ge = ge.get(ct.key === null ? Se : ct.key) || null, Re(ie, ge, ct, Mt);
          case de:
            var Ot = ct._init;
            return bt(ge, ie, Se, Ot(ct._payload), Mt);
        }
        if (Dt(ct) || ne(ct))
          return ge = ge.get(Se) || null, Je(ie, ge, ct, Mt, null);
        jd(ie, ct);
      }
      return null;
    }
    function Rt(ge, ie, Se, ct) {
      for (var Mt = null, Ot = null, It = ie, Gt = ie = 0, zo = null; It !== null && Gt < Se.length; Gt++) {
        It.index > Gt ? (zo = It, It = null) : zo = It.sibling;
        var vn = Ze(ge, It, Se[Gt], ct);
        if (vn === null) {
          It === null && (It = zo);
          break;
        }
        a && It && vn.alternate === null && i(ge, It), ie = R(vn, ie, Gt), Ot === null ? Mt = vn : Ot.sibling = vn, Ot = vn, It = zo;
      }
      if (Gt === Se.length)
        return d(ge, It), zn && Hr(ge, Gt), Mt;
      if (It === null) {
        for (; Gt < Se.length; Gt++)
          It = ot(ge, Se[Gt], ct), It !== null && (ie = R(It, ie, Gt), Ot === null ? Mt = It : Ot.sibling = It, Ot = It);
        return zn && Hr(ge, Gt), Mt;
      }
      for (It = h(ge, It); Gt < Se.length; Gt++)
        zo = bt(It, ge, Gt, Se[Gt], ct), zo !== null && (a && zo.alternate !== null && It.delete(zo.key === null ? Gt : zo.key), ie = R(zo, ie, Gt), Ot === null ? Mt = zo : Ot.sibling = zo, Ot = zo);
      return a && It.forEach(function(vs) {
        return i(ge, vs);
      }), zn && Hr(ge, Gt), Mt;
    }
    function $t(ge, ie, Se, ct) {
      var Mt = ne(Se);
      if (typeof Mt != "function")
        throw Error(s(150));
      if (Se = Mt.call(Se), Se == null)
        throw Error(s(151));
      for (var Ot = Mt = null, It = ie, Gt = ie = 0, zo = null, vn = Se.next(); It !== null && !vn.done; Gt++, vn = Se.next()) {
        It.index > Gt ? (zo = It, It = null) : zo = It.sibling;
        var vs = Ze(ge, It, vn.value, ct);
        if (vs === null) {
          It === null && (It = zo);
          break;
        }
        a && It && vs.alternate === null && i(ge, It), ie = R(vs, ie, Gt), Ot === null ? Mt = vs : Ot.sibling = vs, Ot = vs, It = zo;
      }
      if (vn.done)
        return d(
          ge,
          It
        ), zn && Hr(ge, Gt), Mt;
      if (It === null) {
        for (; !vn.done; Gt++, vn = Se.next())
          vn = ot(ge, vn.value, ct), vn !== null && (ie = R(vn, ie, Gt), Ot === null ? Mt = vn : Ot.sibling = vn, Ot = vn);
        return zn && Hr(ge, Gt), Mt;
      }
      for (It = h(ge, It); !vn.done; Gt++, vn = Se.next())
        vn = bt(It, ge, Gt, vn.value, ct), vn !== null && (a && vn.alternate !== null && It.delete(vn.key === null ? Gt : vn.key), ie = R(vn, ie, Gt), Ot === null ? Mt = vn : Ot.sibling = vn, Ot = vn);
      return a && It.forEach(function($C) {
        return i(ge, $C);
      }), zn && Hr(ge, Gt), Mt;
    }
    function co(ge, ie, Se, ct) {
      if (typeof Se == "object" && Se !== null && Se.type === F && Se.key === null && (Se = Se.props.children), typeof Se == "object" && Se !== null) {
        switch (Se.$$typeof) {
          case U:
            e: {
              for (var Mt = Se.key, Ot = ie; Ot !== null; ) {
                if (Ot.key === Mt) {
                  if (Mt = Se.type, Mt === F) {
                    if (Ot.tag === 7) {
                      d(ge, Ot.sibling), ie = x(Ot, Se.props.children), ie.return = ge, ge = ie;
                      break e;
                    }
                  } else if (Ot.elementType === Mt || typeof Mt == "object" && Mt !== null && Mt.$$typeof === de && Rg(Mt) === Ot.type) {
                    d(ge, Ot.sibling), ie = x(Ot, Se.props), ie.ref = Wl(ge, Ot, Se), ie.return = ge, ge = ie;
                    break e;
                  }
                  d(ge, Ot);
                  break;
                } else
                  i(ge, Ot);
                Ot = Ot.sibling;
              }
              Se.type === F ? (ie = ll(Se.props.children, ge.mode, ct, Se.key), ie.return = ge, ge = ie) : (ct = bp(Se.type, Se.key, Se.props, null, ge.mode, ct), ct.ref = Wl(ge, ie, Se), ct.return = ge, ge = ct);
            }
            return B(ge);
          case $:
            e: {
              for (Ot = Se.key; ie !== null; ) {
                if (ie.key === Ot)
                  if (ie.tag === 4 && ie.stateNode.containerInfo === Se.containerInfo && ie.stateNode.implementation === Se.implementation) {
                    d(ge, ie.sibling), ie = x(ie, Se.children || []), ie.return = ge, ge = ie;
                    break e;
                  } else {
                    d(ge, ie);
                    break;
                  }
                else
                  i(ge, ie);
                ie = ie.sibling;
              }
              ie = cl(Se, ge.mode, ct), ie.return = ge, ge = ie;
            }
            return B(ge);
          case de:
            return Ot = Se._init, co(ge, ie, Ot(Se._payload), ct);
        }
        if (Dt(Se))
          return Rt(ge, ie, Se, ct);
        if (ne(Se))
          return $t(ge, ie, Se, ct);
        jd(ge, Se);
      }
      return typeof Se == "string" && Se !== "" || typeof Se == "number" ? (Se = "" + Se, ie !== null && ie.tag === 6 ? (d(ge, ie.sibling), ie = x(ie, Se), ie.return = ge, ge = ie) : (d(ge, ie), ie = Du(Se, ge.mode, ct), ie.return = ge, ge = ie), B(ge)) : d(ge, ie);
    }
    return co;
  }
  var Gl = Og(!0), wg = Og(!1), mu = {}, Da = Zt(mu), vu = Zt(mu), ql = Zt(mu);
  function Ws(a) {
    if (a === mu)
      throw Error(s(174));
    return a;
  }
  function pm(a, i) {
    switch (xn(ql, i), xn(vu, a), xn(Da, mu), a = i.nodeType, a) {
      case 9:
      case 11:
        i = (i = i.documentElement) ? i.namespaceURI : Qt(null, "");
        break;
      default:
        a = a === 8 ? i.parentNode : i, i = a.namespaceURI || null, a = a.tagName, i = Qt(i, a);
    }
    Cn(Da), xn(Da, i);
  }
  function ss() {
    Cn(Da), Cn(vu), Cn(ql);
  }
  function Ft(a) {
    Ws(ql.current);
    var i = Ws(Da.current), d = Qt(i, a.type);
    i !== d && (xn(vu, a), xn(Da, d));
  }
  function rn(a) {
    vu.current === a && (Cn(Da), Cn(vu));
  }
  var jt = Zt(0);
  function Zn(a) {
    for (var i = a; i !== null; ) {
      if (i.tag === 13) {
        var d = i.memoizedState;
        if (d !== null && (d = d.dehydrated, d === null || d.data === "$?" || d.data === "$!"))
          return i;
      } else if (i.tag === 19 && i.memoizedProps.revealOrder !== void 0) {
        if (i.flags & 128)
          return i;
      } else if (i.child !== null) {
        i.child.return = i, i = i.child;
        continue;
      }
      if (i === a)
        break;
      for (; i.sibling === null; ) {
        if (i.return === null || i.return === a)
          return null;
        i = i.return;
      }
      i.sibling.return = i.return, i = i.sibling;
    }
    return null;
  }
  var da = [];
  function Ud() {
    for (var a = 0; a < da.length; a++)
      da[a]._workInProgressVersionPrimary = null;
    da.length = 0;
  }
  var Vd = j.ReactCurrentDispatcher, fm = j.ReactCurrentBatchConfig, Gs = 0, Fn = null, Ae = null, dn = null, Vt = !1, Wa = !1, qr = 0, qs = 0;
  function jn() {
    throw Error(s(321));
  }
  function Ys(a, i) {
    if (i === null)
      return !1;
    for (var d = 0; d < i.length && d < a.length; d++)
      if (!aa(a[d], i[d]))
        return !1;
    return !0;
  }
  function ls(a, i, d, h, x, R) {
    if (Gs = R, Fn = i, i.memoizedState = null, i.updateQueue = null, i.lanes = 0, Vd.current = a === null || a.memoizedState === null ? pC : fC, a = d(h, x), Wa) {
      R = 0;
      do {
        if (Wa = !1, qr = 0, 25 <= R)
          throw Error(s(301));
        R += 1, dn = Ae = null, i.updateQueue = null, Vd.current = vm, a = d(h, x);
      } while (Wa);
    }
    if (Vd.current = ap, i = Ae !== null && Ae.next !== null, Gs = 0, dn = Ae = Fn = null, Vt = !1, i)
      throw Error(s(300));
    return a;
  }
  function Ks() {
    var a = qr !== 0;
    return qr = 0, a;
  }
  function pa() {
    var a = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
    return dn === null ? Fn.memoizedState = dn = a : dn = dn.next = a, dn;
  }
  function Mr() {
    if (Ae === null) {
      var a = Fn.alternate;
      a = a !== null ? a.memoizedState : null;
    } else
      a = Ae.next;
    var i = dn === null ? Fn.memoizedState : dn.next;
    if (i !== null)
      dn = i, Ae = a;
    else {
      if (a === null)
        throw Error(s(310));
      Ae = a, a = { memoizedState: Ae.memoizedState, baseState: Ae.baseState, baseQueue: Ae.baseQueue, queue: Ae.queue, next: null }, dn === null ? Fn.memoizedState = dn = a : dn = dn.next = a;
    }
    return dn;
  }
  function Xs(a, i) {
    return typeof i == "function" ? i(a) : i;
  }
  function hu(a) {
    var i = Mr(), d = i.queue;
    if (d === null)
      throw Error(s(311));
    d.lastRenderedReducer = a;
    var h = Ae, x = h.baseQueue, R = d.pending;
    if (R !== null) {
      if (x !== null) {
        var B = x.next;
        x.next = R.next, R.next = B;
      }
      h.baseQueue = x = R, d.pending = null;
    }
    if (x !== null) {
      R = x.next, h = h.baseState;
      var X = B = null, te = null, Re = R;
      do {
        var Je = Re.lane;
        if ((Gs & Je) === Je)
          te !== null && (te = te.next = { lane: 0, action: Re.action, hasEagerState: Re.hasEagerState, eagerState: Re.eagerState, next: null }), h = Re.hasEagerState ? Re.eagerState : a(h, Re.action);
        else {
          var ot = {
            lane: Je,
            action: Re.action,
            hasEagerState: Re.hasEagerState,
            eagerState: Re.eagerState,
            next: null
          };
          te === null ? (X = te = ot, B = h) : te = te.next = ot, Fn.lanes |= Je, Ri |= Je;
        }
        Re = Re.next;
      } while (Re !== null && Re !== R);
      te === null ? B = h : te.next = X, aa(h, i.memoizedState) || (go = !0), i.memoizedState = h, i.baseState = B, i.baseQueue = te, d.lastRenderedState = h;
    }
    if (a = d.interleaved, a !== null) {
      x = a;
      do
        R = x.lane, Fn.lanes |= R, Ri |= R, x = x.next;
      while (x !== a);
    } else
      x === null && (d.lanes = 0);
    return [i.memoizedState, d.dispatch];
  }
  function gu(a) {
    var i = Mr(), d = i.queue;
    if (d === null)
      throw Error(s(311));
    d.lastRenderedReducer = a;
    var h = d.dispatch, x = d.pending, R = i.memoizedState;
    if (x !== null) {
      d.pending = null;
      var B = x = x.next;
      do
        R = a(R, B.action), B = B.next;
      while (B !== x);
      aa(R, i.memoizedState) || (go = !0), i.memoizedState = R, i.baseQueue === null && (i.baseState = R), d.lastRenderedState = R;
    }
    return [R, h];
  }
  function Hd() {
  }
  function Wd(a, i) {
    var d = Fn, h = Mr(), x = i(), R = !aa(h.memoizedState, x);
    if (R && (h.memoizedState = x, go = !0), h = h.queue, yu(Yd.bind(null, d, h, a), [a]), h.getSnapshot !== i || R || dn !== null && dn.memoizedState.tag & 1) {
      if (d.flags |= 2048, Qs(9, qd.bind(null, d, h, x, i), void 0, null), Jn === null)
        throw Error(s(349));
      Gs & 30 || Gd(d, i, x);
    }
    return x;
  }
  function Gd(a, i, d) {
    a.flags |= 16384, a = { getSnapshot: i, value: d }, i = Fn.updateQueue, i === null ? (i = { lastEffect: null, stores: null }, Fn.updateQueue = i, i.stores = [a]) : (d = i.stores, d === null ? i.stores = [a] : d.push(a));
  }
  function qd(a, i, d, h) {
    i.value = d, i.getSnapshot = h, Kd(i) && Xd(a);
  }
  function Yd(a, i, d) {
    return d(function() {
      Kd(i) && Xd(a);
    });
  }
  function Kd(a) {
    var i = a.getSnapshot;
    a = a.value;
    try {
      var d = i();
      return !aa(a, d);
    } catch {
      return !0;
    }
  }
  function Xd(a) {
    var i = Ci(a, 1);
    i !== null && lr(i, a, 1, -1);
  }
  function Qd(a) {
    var i = pa();
    return typeof a == "function" && (a = a()), i.memoizedState = i.baseState = a, a = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: Xs, lastRenderedState: a }, i.queue = a, a = a.dispatch = rp.bind(null, Fn, a), [i.memoizedState, a];
  }
  function Qs(a, i, d, h) {
    return a = { tag: a, create: i, destroy: d, deps: h, next: null }, i = Fn.updateQueue, i === null ? (i = { lastEffect: null, stores: null }, Fn.updateQueue = i, i.lastEffect = a.next = a) : (d = i.lastEffect, d === null ? i.lastEffect = a.next = a : (h = d.next, d.next = a, a.next = h, i.lastEffect = a)), a;
  }
  function Zd() {
    return Mr().memoizedState;
  }
  function Zs(a, i, d, h) {
    var x = pa();
    Fn.flags |= a, x.memoizedState = Qs(1 | i, d, void 0, h === void 0 ? null : h);
  }
  function Si(a, i, d, h) {
    var x = Mr();
    h = h === void 0 ? null : h;
    var R = void 0;
    if (Ae !== null) {
      var B = Ae.memoizedState;
      if (R = B.destroy, h !== null && Ys(h, B.deps)) {
        x.memoizedState = Qs(i, d, R, h);
        return;
      }
    }
    Fn.flags |= a, x.memoizedState = Qs(1 | i, d, R, h);
  }
  function Jd(a, i) {
    return Zs(8390656, 8, a, i);
  }
  function yu(a, i) {
    return Si(2048, 8, a, i);
  }
  function ep(a, i) {
    return Si(4, 2, a, i);
  }
  function tp(a, i) {
    return Si(4, 4, a, i);
  }
  function mm(a, i) {
    if (typeof i == "function")
      return a = a(), i(a), function() {
        i(null);
      };
    if (i != null)
      return a = a(), i.current = a, function() {
        i.current = null;
      };
  }
  function Yl(a, i, d) {
    return d = d != null ? d.concat([a]) : null, Si(4, 4, mm.bind(null, i, a), d);
  }
  function np() {
  }
  function Kl(a, i) {
    var d = Mr();
    i = i === void 0 ? null : i;
    var h = d.memoizedState;
    return h !== null && i !== null && Ys(i, h[1]) ? h[0] : (d.memoizedState = [a, i], a);
  }
  function cs(a, i) {
    var d = Mr();
    i = i === void 0 ? null : i;
    var h = d.memoizedState;
    return h !== null && i !== null && Ys(i, h[1]) ? h[0] : (a = a(), d.memoizedState = [a, i], a);
  }
  function Dr(a, i, d) {
    return Gs & 21 ? (aa(d, i) || (d = pd(), Fn.lanes |= d, Ri |= d, a.baseState = !0), i) : (a.baseState && (a.baseState = !1, go = !0), a.memoizedState = d);
  }
  function dC(a, i) {
    var d = En;
    En = d !== 0 && 4 > d ? d : 4, a(!0);
    var h = fm.transition;
    fm.transition = {};
    try {
      a(!1), i();
    } finally {
      En = d, fm.transition = h;
    }
  }
  function In() {
    return Mr().memoizedState;
  }
  function op(a, i, d) {
    var h = yo(a);
    if (d = { lane: h, action: d, hasEagerState: !1, eagerState: null, next: null }, Xl(a))
      bu(i, d);
    else if (d = Cg(a, i, d, h), d !== null) {
      var x = sr();
      lr(d, a, h, x), kg(d, i, h);
    }
  }
  function rp(a, i, d) {
    var h = yo(a), x = { lane: h, action: d, hasEagerState: !1, eagerState: null, next: null };
    if (Xl(a))
      bu(i, x);
    else {
      var R = a.alternate;
      if (a.lanes === 0 && (R === null || R.lanes === 0) && (R = i.lastRenderedReducer, R !== null))
        try {
          var B = i.lastRenderedState, X = R(B, d);
          if (x.hasEagerState = !0, x.eagerState = X, aa(X, B)) {
            var te = i.interleaved;
            te === null ? (x.next = x, lm(i)) : (x.next = te.next, te.next = x), i.interleaved = x;
            return;
          }
        } catch {
        } finally {
        }
      d = Cg(a, i, x, h), d !== null && (x = sr(), lr(d, a, h, x), kg(d, i, h));
    }
  }
  function Xl(a) {
    var i = a.alternate;
    return a === Fn || i !== null && i === Fn;
  }
  function bu(a, i) {
    Wa = Vt = !0;
    var d = a.pending;
    d === null ? i.next = i : (i.next = d.next, d.next = i), a.pending = i;
  }
  function kg(a, i, d) {
    if (d & 4194240) {
      var h = i.lanes;
      h &= a.pendingLanes, d |= h, i.lanes = d, Wc(a, d);
    }
  }
  var ap = { readContext: lo, useCallback: jn, useContext: jn, useEffect: jn, useImperativeHandle: jn, useInsertionEffect: jn, useLayoutEffect: jn, useMemo: jn, useReducer: jn, useRef: jn, useState: jn, useDebugValue: jn, useDeferredValue: jn, useTransition: jn, useMutableSource: jn, useSyncExternalStore: jn, useId: jn, unstable_isNewReconciler: !1 }, pC = { readContext: lo, useCallback: function(a, i) {
    return pa().memoizedState = [a, i === void 0 ? null : i], a;
  }, useContext: lo, useEffect: Jd, useImperativeHandle: function(a, i, d) {
    return d = d != null ? d.concat([a]) : null, Zs(
      4194308,
      4,
      mm.bind(null, i, a),
      d
    );
  }, useLayoutEffect: function(a, i) {
    return Zs(4194308, 4, a, i);
  }, useInsertionEffect: function(a, i) {
    return Zs(4, 2, a, i);
  }, useMemo: function(a, i) {
    var d = pa();
    return i = i === void 0 ? null : i, a = a(), d.memoizedState = [a, i], a;
  }, useReducer: function(a, i, d) {
    var h = pa();
    return i = d !== void 0 ? d(i) : i, h.memoizedState = h.baseState = i, a = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: a, lastRenderedState: i }, h.queue = a, a = a.dispatch = op.bind(null, Fn, a), [h.memoizedState, a];
  }, useRef: function(a) {
    var i = pa();
    return a = { current: a }, i.memoizedState = a;
  }, useState: Qd, useDebugValue: np, useDeferredValue: function(a) {
    return pa().memoizedState = a;
  }, useTransition: function() {
    var a = Qd(!1), i = a[0];
    return a = dC.bind(null, a[1]), pa().memoizedState = a, [i, a];
  }, useMutableSource: function() {
  }, useSyncExternalStore: function(a, i, d) {
    var h = Fn, x = pa();
    if (zn) {
      if (d === void 0)
        throw Error(s(407));
      d = d();
    } else {
      if (d = i(), Jn === null)
        throw Error(s(349));
      Gs & 30 || Gd(h, i, d);
    }
    x.memoizedState = d;
    var R = { value: d, getSnapshot: i };
    return x.queue = R, Jd(Yd.bind(
      null,
      h,
      R,
      a
    ), [a]), h.flags |= 2048, Qs(9, qd.bind(null, h, R, d, i), void 0, null), d;
  }, useId: function() {
    var a = pa(), i = Jn.identifierPrefix;
    if (zn) {
      var d = bi, h = Vo;
      d = (h & ~(1 << 32 - na(h) - 1)).toString(32) + d, i = ":" + i + "R" + d, d = qr++, 0 < d && (i += "H" + d.toString(32)), i += ":";
    } else
      d = qs++, i = ":" + i + "r" + d.toString(32) + ":";
    return a.memoizedState = i;
  }, unstable_isNewReconciler: !1 }, fC = {
    readContext: lo,
    useCallback: Kl,
    useContext: lo,
    useEffect: yu,
    useImperativeHandle: Yl,
    useInsertionEffect: ep,
    useLayoutEffect: tp,
    useMemo: cs,
    useReducer: hu,
    useRef: Zd,
    useState: function() {
      return hu(Xs);
    },
    useDebugValue: np,
    useDeferredValue: function(a) {
      var i = Mr();
      return Dr(i, Ae.memoizedState, a);
    },
    useTransition: function() {
      var a = hu(Xs)[0], i = Mr().memoizedState;
      return [a, i];
    },
    useMutableSource: Hd,
    useSyncExternalStore: Wd,
    useId: In,
    unstable_isNewReconciler: !1
  }, vm = { readContext: lo, useCallback: Kl, useContext: lo, useEffect: yu, useImperativeHandle: Yl, useInsertionEffect: ep, useLayoutEffect: tp, useMemo: cs, useReducer: gu, useRef: Zd, useState: function() {
    return gu(Xs);
  }, useDebugValue: np, useDeferredValue: function(a) {
    var i = Mr();
    return Ae === null ? i.memoizedState = a : Dr(i, Ae.memoizedState, a);
  }, useTransition: function() {
    var a = gu(Xs)[0], i = Mr().memoizedState;
    return [a, i];
  }, useMutableSource: Hd, useSyncExternalStore: Wd, useId: In, unstable_isNewReconciler: !1 };
  function Ql(a, i) {
    try {
      var d = "", h = i;
      do
        d += Ye(h), h = h.return;
      while (h);
      var x = d;
    } catch (R) {
      x = `
Error generating stack: ` + R.message + `
` + R.stack;
    }
    return { value: a, source: i, stack: x, digest: null };
  }
  function Cu(a, i, d) {
    return { value: a, source: null, stack: d ?? null, digest: i ?? null };
  }
  function ip(a, i) {
    try {
      console.error(i.value);
    } catch (d) {
      setTimeout(function() {
        throw d;
      });
    }
  }
  var mC = typeof WeakMap == "function" ? WeakMap : Map;
  function Ng(a, i, d) {
    d = xi(-1, d), d.tag = 3, d.payload = { element: null };
    var h = i.value;
    return d.callback = function() {
      fp || (fp = !0, ol = h), ip(a, i);
    }, d;
  }
  function xu(a, i, d) {
    d = xi(-1, d), d.tag = 3;
    var h = a.type.getDerivedStateFromError;
    if (typeof h == "function") {
      var x = i.value;
      d.payload = function() {
        return h(x);
      }, d.callback = function() {
        ip(a, i);
      };
    }
    var R = a.stateNode;
    return R !== null && typeof R.componentDidCatch == "function" && (d.callback = function() {
      ip(a, i), typeof h != "function" && (Ya === null ? Ya = /* @__PURE__ */ new Set([this]) : Ya.add(this));
      var B = i.stack;
      this.componentDidCatch(i.value, { componentStack: B !== null ? B : "" });
    }), d;
  }
  function $g(a, i, d) {
    var h = a.pingCache;
    if (h === null) {
      h = a.pingCache = new mC();
      var x = /* @__PURE__ */ new Set();
      h.set(i, x);
    } else
      x = h.get(i), x === void 0 && (x = /* @__PURE__ */ new Set(), h.set(i, x));
    x.has(d) || (x.add(d), a = xC.bind(null, a, i, d), i.then(a, a));
  }
  function hm(a) {
    do {
      var i;
      if ((i = a.tag === 13) && (i = a.memoizedState, i = i !== null ? i.dehydrated !== null : !0), i)
        return a;
      a = a.return;
    } while (a !== null);
    return null;
  }
  function gm(a, i, d, h, x) {
    return a.mode & 1 ? (a.flags |= 65536, a.lanes = x, a) : (a === i ? a.flags |= 65536 : (a.flags |= 128, d.flags |= 131072, d.flags &= -52805, d.tag === 1 && (d.alternate === null ? d.tag = 17 : (i = xi(-1, 1), i.tag = 2, as(d, i, 1))), d.lanes |= 1), a);
  }
  var vC = j.ReactCurrentOwner, go = !1;
  function To(a, i, d, h) {
    i.child = a === null ? wg(i, null, d, h) : Gl(i, a.child, d, h);
  }
  function us(a, i, d, h, x) {
    d = d.render;
    var R = i.ref;
    return mt(i, x), h = ls(a, i, d, h, R, x), d = Ks(), a !== null && !go ? (i.updateQueue = a.updateQueue, i.flags &= -2053, a.lanes &= ~x, Wo(a, i, x)) : (zn && d && Dd(i), i.flags |= 1, To(a, i, h, x), i.child);
  }
  function sp(a, i, d, h, x) {
    if (a === null) {
      var R = d.type;
      return typeof R == "function" && !_m(R) && R.defaultProps === void 0 && d.compare === null && d.defaultProps === void 0 ? (i.tag = 15, i.type = R, Pr(a, i, R, h, x)) : (a = bp(d.type, null, h, i, i.mode, x), a.ref = i.ref, a.return = i, i.child = a);
    }
    if (R = a.child, !(a.lanes & x)) {
      var B = R.memoizedProps;
      if (d = d.compare, d = d !== null ? d : nu, d(B, h) && a.ref === i.ref)
        return Wo(a, i, x);
    }
    return i.flags |= 1, a = ms(R, h), a.ref = i.ref, a.return = i, i.child = a;
  }
  function Pr(a, i, d, h, x) {
    if (a !== null) {
      var R = a.memoizedProps;
      if (nu(R, h) && a.ref === i.ref)
        if (go = !1, i.pendingProps = h = R, (a.lanes & x) !== 0)
          a.flags & 131072 && (go = !0);
        else
          return i.lanes = a.lanes, Wo(a, i, x);
    }
    return Zl(a, i, d, h, x);
  }
  function Js(a, i, d) {
    var h = i.pendingProps, x = h.children, R = a !== null ? a.memoizedState : null;
    if (h.mode === "hidden")
      if (!(i.mode & 1))
        i.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, xn(rc, Yr), Yr |= d;
      else {
        if (!(d & 1073741824))
          return a = R !== null ? R.baseLanes | d : d, i.lanes = i.childLanes = 1073741824, i.memoizedState = { baseLanes: a, cachePool: null, transitions: null }, i.updateQueue = null, xn(rc, Yr), Yr |= a, null;
        i.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, h = R !== null ? R.baseLanes : d, xn(rc, Yr), Yr |= h;
      }
    else
      R !== null ? (h = R.baseLanes | d, i.memoizedState = null) : h = d, xn(rc, Yr), Yr |= h;
    return To(a, i, x, d), i.child;
  }
  function Jt(a, i) {
    var d = i.ref;
    (a === null && d !== null || a !== null && a.ref !== d) && (i.flags |= 512, i.flags |= 2097152);
  }
  function Zl(a, i, d, h, x) {
    var R = qn(d) ? Or : Wt.current;
    return R = sa(i, R), mt(i, x), d = ls(a, i, d, h, R, x), h = Ks(), a !== null && !go ? (i.updateQueue = a.updateQueue, i.flags &= -2053, a.lanes &= ~x, Wo(a, i, x)) : (zn && h && Dd(i), i.flags |= 1, To(a, i, d, x), i.child);
  }
  function ym(a, i, d, h, x) {
    if (qn(d)) {
      var R = !0;
      Md(i);
    } else
      R = !1;
    if (mt(i, x), i.stateNode === null)
      rr(a, i), Tg(i, d, h), Fd(i, d, h, x), h = !0;
    else if (a === null) {
      var B = i.stateNode, X = i.memoizedProps;
      B.props = X;
      var te = B.context, Re = d.contextType;
      typeof Re == "object" && Re !== null ? Re = lo(Re) : (Re = qn(d) ? Or : Wt.current, Re = sa(i, Re));
      var Je = d.getDerivedStateFromProps, ot = typeof Je == "function" || typeof B.getSnapshotBeforeUpdate == "function";
      ot || typeof B.UNSAFE_componentWillReceiveProps != "function" && typeof B.componentWillReceiveProps != "function" || (X !== h || te !== Re) && Eg(i, B, h, Re), rs = !1;
      var Ze = i.memoizedState;
      B.state = Ze, is(i, h, B, x), te = i.memoizedState, X !== h || Ze !== te || oo.current || rs ? (typeof Je == "function" && (dm(i, d, Je, h), te = i.memoizedState), (X = rs || Sg(i, d, X, h, Ze, te, Re)) ? (ot || typeof B.UNSAFE_componentWillMount != "function" && typeof B.componentWillMount != "function" || (typeof B.componentWillMount == "function" && B.componentWillMount(), typeof B.UNSAFE_componentWillMount == "function" && B.UNSAFE_componentWillMount()), typeof B.componentDidMount == "function" && (i.flags |= 4194308)) : (typeof B.componentDidMount == "function" && (i.flags |= 4194308), i.memoizedProps = h, i.memoizedState = te), B.props = h, B.state = te, B.context = Re, h = X) : (typeof B.componentDidMount == "function" && (i.flags |= 4194308), h = !1);
    } else {
      B = i.stateNode, So(a, i), X = i.memoizedProps, Re = i.type === i.elementType ? X : Gr(i.type, X), B.props = Re, ot = i.pendingProps, Ze = B.context, te = d.contextType, typeof te == "object" && te !== null ? te = lo(te) : (te = qn(d) ? Or : Wt.current, te = sa(i, te));
      var bt = d.getDerivedStateFromProps;
      (Je = typeof bt == "function" || typeof B.getSnapshotBeforeUpdate == "function") || typeof B.UNSAFE_componentWillReceiveProps != "function" && typeof B.componentWillReceiveProps != "function" || (X !== ot || Ze !== te) && Eg(i, B, h, te), rs = !1, Ze = i.memoizedState, B.state = Ze, is(i, h, B, x);
      var Rt = i.memoizedState;
      X !== ot || Ze !== Rt || oo.current || rs ? (typeof bt == "function" && (dm(i, d, bt, h), Rt = i.memoizedState), (Re = rs || Sg(i, d, Re, h, Ze, Rt, te) || !1) ? (Je || typeof B.UNSAFE_componentWillUpdate != "function" && typeof B.componentWillUpdate != "function" || (typeof B.componentWillUpdate == "function" && B.componentWillUpdate(h, Rt, te), typeof B.UNSAFE_componentWillUpdate == "function" && B.UNSAFE_componentWillUpdate(h, Rt, te)), typeof B.componentDidUpdate == "function" && (i.flags |= 4), typeof B.getSnapshotBeforeUpdate == "function" && (i.flags |= 1024)) : (typeof B.componentDidUpdate != "function" || X === a.memoizedProps && Ze === a.memoizedState || (i.flags |= 4), typeof B.getSnapshotBeforeUpdate != "function" || X === a.memoizedProps && Ze === a.memoizedState || (i.flags |= 1024), i.memoizedProps = h, i.memoizedState = Rt), B.props = h, B.state = Rt, B.context = te, h = Re) : (typeof B.componentDidUpdate != "function" || X === a.memoizedProps && Ze === a.memoizedState || (i.flags |= 4), typeof B.getSnapshotBeforeUpdate != "function" || X === a.memoizedProps && Ze === a.memoizedState || (i.flags |= 1024), h = !1);
    }
    return Mg(a, i, d, h, R, x);
  }
  function Mg(a, i, d, h, x, R) {
    Jt(a, i);
    var B = (i.flags & 128) !== 0;
    if (!h && !B)
      return x && hg(i, d, !1), Wo(a, i, R);
    h = i.stateNode, vC.current = i;
    var X = B && typeof d.getDerivedStateFromError != "function" ? null : h.render();
    return i.flags |= 1, a !== null && B ? (i.child = Gl(i, a.child, null, R), i.child = Gl(i, null, X, R)) : To(a, i, X, R), i.memoizedState = h.state, x && hg(i, d, !0), i.child;
  }
  function Dg(a) {
    var i = a.stateNode;
    i.pendingContext ? es(a, i.pendingContext, i.pendingContext !== i.context) : i.context && es(a, i.context, !1), pm(a, i.containerInfo);
  }
  function lp(a, i, d, h, x) {
    return Qn(), am(x), i.flags |= 256, To(a, i, d, h), i.child;
  }
  var el = { dehydrated: null, treeContext: null, retryLane: 0 };
  function bm(a) {
    return { baseLanes: a, cachePool: null, transitions: null };
  }
  function Cm(a, i, d) {
    var h = i.pendingProps, x = jt.current, R = !1, B = (i.flags & 128) !== 0, X;
    if ((X = B) || (X = a !== null && a.memoizedState === null ? !1 : (x & 2) !== 0), X ? (R = !0, i.flags &= -129) : (a === null || a.memoizedState !== null) && (x |= 1), xn(jt, x & 1), a === null)
      return Ld(i), a = i.memoizedState, a !== null && (a = a.dehydrated, a !== null) ? (i.mode & 1 ? a.data === "$!" ? i.lanes = 8 : i.lanes = 1073741824 : i.lanes = 1, null) : (B = h.children, a = h.fallback, R ? (h = i.mode, R = i.child, B = { mode: "hidden", children: B }, !(h & 1) && R !== null ? (R.childLanes = 0, R.pendingProps = B) : R = Mu(B, h, 0, null), a = ll(a, h, d, null), R.return = i, a.return = i, R.sibling = a, i.child = R, i.child.memoizedState = bm(d), i.memoizedState = el, a) : xm(i, B));
    if (x = a.memoizedState, x !== null && (X = x.dehydrated, X !== null))
      return hC(a, i, B, h, X, x, d);
    if (R) {
      R = h.fallback, B = i.mode, x = a.child, X = x.sibling;
      var te = { mode: "hidden", children: h.children };
      return !(B & 1) && i.child !== x ? (h = i.child, h.childLanes = 0, h.pendingProps = te, i.deletions = null) : (h = ms(x, te), h.subtreeFlags = x.subtreeFlags & 14680064), X !== null ? R = ms(X, R) : (R = ll(R, B, d, null), R.flags |= 2), R.return = i, h.return = i, h.sibling = R, i.child = h, h = R, R = i.child, B = a.child.memoizedState, B = B === null ? bm(d) : { baseLanes: B.baseLanes | d, cachePool: null, transitions: B.transitions }, R.memoizedState = B, R.childLanes = a.childLanes & ~d, i.memoizedState = el, h;
    }
    return R = a.child, a = R.sibling, h = ms(R, { mode: "visible", children: h.children }), !(i.mode & 1) && (h.lanes = d), h.return = i, h.sibling = null, a !== null && (d = i.deletions, d === null ? (i.deletions = [a], i.flags |= 16) : d.push(a)), i.child = h, i.memoizedState = null, h;
  }
  function xm(a, i) {
    return i = Mu({ mode: "visible", children: i }, a.mode, 0, null), i.return = a, a.child = i;
  }
  function Jl(a, i, d, h) {
    return h !== null && am(h), Gl(i, a.child, null, d), a = xm(i, i.pendingProps.children), a.flags |= 2, i.memoizedState = null, a;
  }
  function hC(a, i, d, h, x, R, B) {
    if (d)
      return i.flags & 256 ? (i.flags &= -257, h = Cu(Error(s(422))), Jl(a, i, B, h)) : i.memoizedState !== null ? (i.child = a.child, i.flags |= 128, null) : (R = h.fallback, x = i.mode, h = Mu({ mode: "visible", children: h.children }, x, 0, null), R = ll(R, x, B, null), R.flags |= 2, h.return = i, R.return = i, h.sibling = R, i.child = h, i.mode & 1 && Gl(i, a.child, null, B), i.child.memoizedState = bm(B), i.memoizedState = el, R);
    if (!(i.mode & 1))
      return Jl(a, i, B, null);
    if (x.data === "$!") {
      if (h = x.nextSibling && x.nextSibling.dataset, h)
        var X = h.dgst;
      return h = X, R = Error(s(419)), h = Cu(R, h, void 0), Jl(a, i, B, h);
    }
    if (X = (B & a.childLanes) !== 0, go || X) {
      if (h = Jn, h !== null) {
        switch (B & -B) {
          case 4:
            x = 2;
            break;
          case 16:
            x = 8;
            break;
          case 64:
          case 128:
          case 256:
          case 512:
          case 1024:
          case 2048:
          case 4096:
          case 8192:
          case 16384:
          case 32768:
          case 65536:
          case 131072:
          case 262144:
          case 524288:
          case 1048576:
          case 2097152:
          case 4194304:
          case 8388608:
          case 16777216:
          case 33554432:
          case 67108864:
            x = 32;
            break;
          case 536870912:
            x = 268435456;
            break;
          default:
            x = 0;
        }
        x = x & (h.suspendedLanes | B) ? 0 : x, x !== 0 && x !== R.retryLane && (R.retryLane = x, Ci(a, x), lr(h, a, x, -1));
      }
      return Pm(), h = Cu(Error(s(421))), Jl(a, i, B, h);
    }
    return x.data === "$?" ? (i.flags |= 128, i.child = a.child, i = SC.bind(null, a), x._reactRetry = i, null) : (a = R.treeContext, $r = Ma(x.nextSibling), Wr = i, zn = !0, ua = null, a !== null && (Nr[or++] = Vo, Nr[or++] = bi, Nr[or++] = ca, Vo = a.id, bi = a.overflow, ca = i), i = xm(i, h.children), i.flags |= 4096, i);
  }
  function Sm(a, i, d) {
    a.lanes |= i;
    var h = a.alternate;
    h !== null && (h.lanes |= i), _o(a.return, i, d);
  }
  function cp(a, i, d, h, x) {
    var R = a.memoizedState;
    R === null ? a.memoizedState = { isBackwards: i, rendering: null, renderingStartTime: 0, last: h, tail: d, tailMode: x } : (R.isBackwards = i, R.rendering = null, R.renderingStartTime = 0, R.last = h, R.tail = d, R.tailMode = x);
  }
  function Tm(a, i, d) {
    var h = i.pendingProps, x = h.revealOrder, R = h.tail;
    if (To(a, i, h.children, d), h = jt.current, h & 2)
      h = h & 1 | 2, i.flags |= 128;
    else {
      if (a !== null && a.flags & 128)
        e:
          for (a = i.child; a !== null; ) {
            if (a.tag === 13)
              a.memoizedState !== null && Sm(a, d, i);
            else if (a.tag === 19)
              Sm(a, d, i);
            else if (a.child !== null) {
              a.child.return = a, a = a.child;
              continue;
            }
            if (a === i)
              break e;
            for (; a.sibling === null; ) {
              if (a.return === null || a.return === i)
                break e;
              a = a.return;
            }
            a.sibling.return = a.return, a = a.sibling;
          }
      h &= 1;
    }
    if (xn(jt, h), !(i.mode & 1))
      i.memoizedState = null;
    else
      switch (x) {
        case "forwards":
          for (d = i.child, x = null; d !== null; )
            a = d.alternate, a !== null && Zn(a) === null && (x = d), d = d.sibling;
          d = x, d === null ? (x = i.child, i.child = null) : (x = d.sibling, d.sibling = null), cp(i, !1, x, d, R);
          break;
        case "backwards":
          for (d = null, x = i.child, i.child = null; x !== null; ) {
            if (a = x.alternate, a !== null && Zn(a) === null) {
              i.child = x;
              break;
            }
            a = x.sibling, x.sibling = d, d = x, x = a;
          }
          cp(i, !0, d, null, R);
          break;
        case "together":
          cp(i, !1, null, null, void 0);
          break;
        default:
          i.memoizedState = null;
      }
    return i.child;
  }
  function rr(a, i) {
    !(i.mode & 1) && a !== null && (a.alternate = null, i.alternate = null, i.flags |= 2);
  }
  function Wo(a, i, d) {
    if (a !== null && (i.dependencies = a.dependencies), Ri |= i.lanes, !(d & i.childLanes))
      return null;
    if (a !== null && i.child !== a.child)
      throw Error(s(153));
    if (i.child !== null) {
      for (a = i.child, d = ms(a, a.pendingProps), i.child = d, d.return = i; a.sibling !== null; )
        a = a.sibling, d = d.sibling = ms(a, a.pendingProps), d.return = i;
      d.sibling = null;
    }
    return i.child;
  }
  function Ti(a, i, d) {
    switch (i.tag) {
      case 3:
        Dg(i), Qn();
        break;
      case 5:
        Ft(i);
        break;
      case 1:
        qn(i.type) && Md(i);
        break;
      case 4:
        pm(i, i.stateNode.containerInfo);
        break;
      case 10:
        var h = i.type._context, x = i.memoizedProps.value;
        xn(Ha, h._currentValue), h._currentValue = x;
        break;
      case 13:
        if (h = i.memoizedState, h !== null)
          return h.dehydrated !== null ? (xn(jt, jt.current & 1), i.flags |= 128, null) : d & i.child.childLanes ? Cm(a, i, d) : (xn(jt, jt.current & 1), a = Wo(a, i, d), a !== null ? a.sibling : null);
        xn(jt, jt.current & 1);
        break;
      case 19:
        if (h = (d & i.childLanes) !== 0, a.flags & 128) {
          if (h)
            return Tm(a, i, d);
          i.flags |= 128;
        }
        if (x = i.memoizedState, x !== null && (x.rendering = null, x.tail = null, x.lastEffect = null), xn(jt, jt.current), h)
          break;
        return null;
      case 22:
      case 23:
        return i.lanes = 0, Js(a, i, d);
    }
    return Wo(a, i, d);
  }
  var Su, tl, fa, Eo;
  Su = function(a, i) {
    for (var d = i.child; d !== null; ) {
      if (d.tag === 5 || d.tag === 6)
        a.appendChild(d.stateNode);
      else if (d.tag !== 4 && d.child !== null) {
        d.child.return = d, d = d.child;
        continue;
      }
      if (d === i)
        break;
      for (; d.sibling === null; ) {
        if (d.return === null || d.return === i)
          return;
        d = d.return;
      }
      d.sibling.return = d.return, d = d.sibling;
    }
  }, tl = function() {
  }, fa = function(a, i, d, h) {
    var x = a.memoizedProps;
    if (x !== h) {
      a = i.stateNode, Ws(Da.current);
      var R = null;
      switch (d) {
        case "input":
          x = le(a, x), h = le(a, h), R = [];
          break;
        case "select":
          x = ve({}, x, { value: void 0 }), h = ve({}, h, { value: void 0 }), R = [];
          break;
        case "textarea":
          x = Tt(a, x), h = Tt(a, h), R = [];
          break;
        default:
          typeof x.onClick != "function" && typeof h.onClick == "function" && (a.onclick = $d);
      }
      Fe(d, h);
      var B;
      d = null;
      for (Re in x)
        if (!h.hasOwnProperty(Re) && x.hasOwnProperty(Re) && x[Re] != null)
          if (Re === "style") {
            var X = x[Re];
            for (B in X)
              X.hasOwnProperty(B) && (d || (d = {}), d[B] = "");
          } else
            Re !== "dangerouslySetInnerHTML" && Re !== "children" && Re !== "suppressContentEditableWarning" && Re !== "suppressHydrationWarning" && Re !== "autoFocus" && (f.hasOwnProperty(Re) ? R || (R = []) : (R = R || []).push(Re, null));
      for (Re in h) {
        var te = h[Re];
        if (X = x != null ? x[Re] : void 0, h.hasOwnProperty(Re) && te !== X && (te != null || X != null))
          if (Re === "style")
            if (X) {
              for (B in X)
                !X.hasOwnProperty(B) || te && te.hasOwnProperty(B) || (d || (d = {}), d[B] = "");
              for (B in te)
                te.hasOwnProperty(B) && X[B] !== te[B] && (d || (d = {}), d[B] = te[B]);
            } else
              d || (R || (R = []), R.push(
                Re,
                d
              )), d = te;
          else
            Re === "dangerouslySetInnerHTML" ? (te = te ? te.__html : void 0, X = X ? X.__html : void 0, te != null && X !== te && (R = R || []).push(Re, te)) : Re === "children" ? typeof te != "string" && typeof te != "number" || (R = R || []).push(Re, "" + te) : Re !== "suppressContentEditableWarning" && Re !== "suppressHydrationWarning" && (f.hasOwnProperty(Re) ? (te != null && Re === "onScroll" && Ln("scroll", a), R || X === te || (R = [])) : (R = R || []).push(Re, te));
      }
      d && (R = R || []).push("style", d);
      var Re = R;
      (i.updateQueue = Re) && (i.flags |= 4);
    }
  }, Eo = function(a, i, d, h) {
    d !== h && (i.flags |= 4);
  };
  function Tu(a, i) {
    if (!zn)
      switch (a.tailMode) {
        case "hidden":
          i = a.tail;
          for (var d = null; i !== null; )
            i.alternate !== null && (d = i), i = i.sibling;
          d === null ? a.tail = null : d.sibling = null;
          break;
        case "collapsed":
          d = a.tail;
          for (var h = null; d !== null; )
            d.alternate !== null && (h = d), d = d.sibling;
          h === null ? i || a.tail === null ? a.tail = null : a.tail.sibling = null : h.sibling = null;
      }
  }
  function ar(a) {
    var i = a.alternate !== null && a.alternate.child === a.child, d = 0, h = 0;
    if (i)
      for (var x = a.child; x !== null; )
        d |= x.lanes | x.childLanes, h |= x.subtreeFlags & 14680064, h |= x.flags & 14680064, x.return = a, x = x.sibling;
    else
      for (x = a.child; x !== null; )
        d |= x.lanes | x.childLanes, h |= x.subtreeFlags, h |= x.flags, x.return = a, x = x.sibling;
    return a.subtreeFlags |= h, a.childLanes = d, i;
  }
  function gC(a, i, d) {
    var h = i.pendingProps;
    switch (om(i), i.tag) {
      case 2:
      case 16:
      case 15:
      case 0:
      case 11:
      case 7:
      case 8:
      case 12:
      case 9:
      case 14:
        return ar(i), null;
      case 1:
        return qn(i.type) && la(), ar(i), null;
      case 3:
        return h = i.stateNode, ss(), Cn(oo), Cn(Wt), Ud(), h.pendingContext && (h.context = h.pendingContext, h.pendingContext = null), (a === null || a.child === null) && (Id(i) ? i.flags |= 4 : a === null || a.memoizedState.isDehydrated && !(i.flags & 256) || (i.flags |= 1024, ua !== null && ($u(ua), ua = null))), tl(a, i), ar(i), null;
      case 5:
        rn(i);
        var x = Ws(ql.current);
        if (d = i.type, a !== null && i.stateNode != null)
          fa(a, i, d, h, x), a.ref !== i.ref && (i.flags |= 512, i.flags |= 2097152);
        else {
          if (!h) {
            if (i.stateNode === null)
              throw Error(s(166));
            return ar(i), null;
          }
          if (a = Ws(Da.current), Id(i)) {
            h = i.stateNode, d = i.type;
            var R = i.memoizedProps;
            switch (h[Ua] = i, h[Us] = R, a = (i.mode & 1) !== 0, d) {
              case "dialog":
                Ln("cancel", h), Ln("close", h);
                break;
              case "iframe":
              case "object":
              case "embed":
                Ln("load", h);
                break;
              case "video":
              case "audio":
                for (x = 0; x < iu.length; x++)
                  Ln(iu[x], h);
                break;
              case "source":
                Ln("error", h);
                break;
              case "img":
              case "image":
              case "link":
                Ln(
                  "error",
                  h
                ), Ln("load", h);
                break;
              case "details":
                Ln("toggle", h);
                break;
              case "input":
                $e(h, R), Ln("invalid", h);
                break;
              case "select":
                h._wrapperState = { wasMultiple: !!R.multiple }, Ln("invalid", h);
                break;
              case "textarea":
                Lt(h, R), Ln("invalid", h);
            }
            Fe(d, R), x = null;
            for (var B in R)
              if (R.hasOwnProperty(B)) {
                var X = R[B];
                B === "children" ? typeof X == "string" ? h.textContent !== X && (R.suppressHydrationWarning !== !0 && Nd(h.textContent, X, a), x = ["children", X]) : typeof X == "number" && h.textContent !== "" + X && (R.suppressHydrationWarning !== !0 && Nd(
                  h.textContent,
                  X,
                  a
                ), x = ["children", "" + X]) : f.hasOwnProperty(B) && X != null && B === "onScroll" && Ln("scroll", h);
              }
            switch (d) {
              case "input":
                Xe(h), it(h, R, !0);
                break;
              case "textarea":
                Xe(h), tn(h);
                break;
              case "select":
              case "option":
                break;
              default:
                typeof R.onClick == "function" && (h.onclick = $d);
            }
            h = x, i.updateQueue = h, h !== null && (i.flags |= 4);
          } else {
            B = x.nodeType === 9 ? x : x.ownerDocument, a === "http://www.w3.org/1999/xhtml" && (a = an(d)), a === "http://www.w3.org/1999/xhtml" ? d === "script" ? (a = B.createElement("div"), a.innerHTML = "<script><\/script>", a = a.removeChild(a.firstChild)) : typeof h.is == "string" ? a = B.createElement(d, { is: h.is }) : (a = B.createElement(d), d === "select" && (B = a, h.multiple ? B.multiple = !0 : h.size && (B.size = h.size))) : a = B.createElementNS(a, d), a[Ua] = i, a[Us] = h, Su(a, i, !1, !1), i.stateNode = a;
            e: {
              switch (B = st(d, h), d) {
                case "dialog":
                  Ln("cancel", a), Ln("close", a), x = h;
                  break;
                case "iframe":
                case "object":
                case "embed":
                  Ln("load", a), x = h;
                  break;
                case "video":
                case "audio":
                  for (x = 0; x < iu.length; x++)
                    Ln(iu[x], a);
                  x = h;
                  break;
                case "source":
                  Ln("error", a), x = h;
                  break;
                case "img":
                case "image":
                case "link":
                  Ln(
                    "error",
                    a
                  ), Ln("load", a), x = h;
                  break;
                case "details":
                  Ln("toggle", a), x = h;
                  break;
                case "input":
                  $e(a, h), x = le(a, h), Ln("invalid", a);
                  break;
                case "option":
                  x = h;
                  break;
                case "select":
                  a._wrapperState = { wasMultiple: !!h.multiple }, x = ve({}, h, { value: void 0 }), Ln("invalid", a);
                  break;
                case "textarea":
                  Lt(a, h), x = Tt(a, h), Ln("invalid", a);
                  break;
                default:
                  x = h;
              }
              Fe(d, x), X = x;
              for (R in X)
                if (X.hasOwnProperty(R)) {
                  var te = X[R];
                  R === "style" ? We(a, te) : R === "dangerouslySetInnerHTML" ? (te = te ? te.__html : void 0, te != null && he(a, te)) : R === "children" ? typeof te == "string" ? (d !== "textarea" || te !== "") && Qe(a, te) : typeof te == "number" && Qe(a, "" + te) : R !== "suppressContentEditableWarning" && R !== "suppressHydrationWarning" && R !== "autoFocus" && (f.hasOwnProperty(R) ? te != null && R === "onScroll" && Ln("scroll", a) : te != null && A(a, R, te, B));
                }
              switch (d) {
                case "input":
                  Xe(a), it(a, h, !1);
                  break;
                case "textarea":
                  Xe(a), tn(a);
                  break;
                case "option":
                  h.value != null && a.setAttribute("value", "" + xe(h.value));
                  break;
                case "select":
                  a.multiple = !!h.multiple, R = h.value, R != null ? ht(a, !!h.multiple, R, !1) : h.defaultValue != null && ht(
                    a,
                    !!h.multiple,
                    h.defaultValue,
                    !0
                  );
                  break;
                default:
                  typeof x.onClick == "function" && (a.onclick = $d);
              }
              switch (d) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                  h = !!h.autoFocus;
                  break e;
                case "img":
                  h = !0;
                  break e;
                default:
                  h = !1;
              }
            }
            h && (i.flags |= 4);
          }
          i.ref !== null && (i.flags |= 512, i.flags |= 2097152);
        }
        return ar(i), null;
      case 6:
        if (a && i.stateNode != null)
          Eo(a, i, a.memoizedProps, h);
        else {
          if (typeof h != "string" && i.stateNode === null)
            throw Error(s(166));
          if (d = Ws(ql.current), Ws(Da.current), Id(i)) {
            if (h = i.stateNode, d = i.memoizedProps, h[Ua] = i, (R = h.nodeValue !== d) && (a = Wr, a !== null))
              switch (a.tag) {
                case 3:
                  Nd(h.nodeValue, d, (a.mode & 1) !== 0);
                  break;
                case 5:
                  a.memoizedProps.suppressHydrationWarning !== !0 && Nd(h.nodeValue, d, (a.mode & 1) !== 0);
              }
            R && (i.flags |= 4);
          } else
            h = (d.nodeType === 9 ? d : d.ownerDocument).createTextNode(h), h[Ua] = i, i.stateNode = h;
        }
        return ar(i), null;
      case 13:
        if (Cn(jt), h = i.memoizedState, a === null || a.memoizedState !== null && a.memoizedState.dehydrated !== null) {
          if (zn && $r !== null && i.mode & 1 && !(i.flags & 128))
            bg(), Qn(), i.flags |= 98560, R = !1;
          else if (R = Id(i), h !== null && h.dehydrated !== null) {
            if (a === null) {
              if (!R)
                throw Error(s(318));
              if (R = i.memoizedState, R = R !== null ? R.dehydrated : null, !R)
                throw Error(s(317));
              R[Ua] = i;
            } else
              Qn(), !(i.flags & 128) && (i.memoizedState = null), i.flags |= 4;
            ar(i), R = !1;
          } else
            ua !== null && ($u(ua), ua = null), R = !0;
          if (!R)
            return i.flags & 65536 ? i : null;
        }
        return i.flags & 128 ? (i.lanes = d, i) : (h = h !== null, h !== (a !== null && a.memoizedState !== null) && h && (i.child.flags |= 8192, i.mode & 1 && (a === null || jt.current & 1 ? Oo === 0 && (Oo = 3) : Pm())), i.updateQueue !== null && (i.flags |= 4), ar(i), null);
      case 4:
        return ss(), tl(a, i), a === null && Ul(i.stateNode.containerInfo), ar(i), null;
      case 10:
        return os(i.type._context), ar(i), null;
      case 17:
        return qn(i.type) && la(), ar(i), null;
      case 19:
        if (Cn(jt), R = i.memoizedState, R === null)
          return ar(i), null;
        if (h = (i.flags & 128) !== 0, B = R.rendering, B === null)
          if (h)
            Tu(R, !1);
          else {
            if (Oo !== 0 || a !== null && a.flags & 128)
              for (a = i.child; a !== null; ) {
                if (B = Zn(a), B !== null) {
                  for (i.flags |= 128, Tu(R, !1), h = B.updateQueue, h !== null && (i.updateQueue = h, i.flags |= 4), i.subtreeFlags = 0, h = d, d = i.child; d !== null; )
                    R = d, a = h, R.flags &= 14680066, B = R.alternate, B === null ? (R.childLanes = 0, R.lanes = a, R.child = null, R.subtreeFlags = 0, R.memoizedProps = null, R.memoizedState = null, R.updateQueue = null, R.dependencies = null, R.stateNode = null) : (R.childLanes = B.childLanes, R.lanes = B.lanes, R.child = B.child, R.subtreeFlags = 0, R.deletions = null, R.memoizedProps = B.memoizedProps, R.memoizedState = B.memoizedState, R.updateQueue = B.updateQueue, R.type = B.type, a = B.dependencies, R.dependencies = a === null ? null : { lanes: a.lanes, firstContext: a.firstContext }), d = d.sibling;
                  return xn(jt, jt.current & 1 | 2), i.child;
                }
                a = a.sibling;
              }
            R.tail !== null && no() > ic && (i.flags |= 128, h = !0, Tu(R, !1), i.lanes = 4194304);
          }
        else {
          if (!h)
            if (a = Zn(B), a !== null) {
              if (i.flags |= 128, h = !0, d = a.updateQueue, d !== null && (i.updateQueue = d, i.flags |= 4), Tu(R, !0), R.tail === null && R.tailMode === "hidden" && !B.alternate && !zn)
                return ar(i), null;
            } else
              2 * no() - R.renderingStartTime > ic && d !== 1073741824 && (i.flags |= 128, h = !0, Tu(R, !1), i.lanes = 4194304);
          R.isBackwards ? (B.sibling = i.child, i.child = B) : (d = R.last, d !== null ? d.sibling = B : i.child = B, R.last = B);
        }
        return R.tail !== null ? (i = R.tail, R.rendering = i, R.tail = i.sibling, R.renderingStartTime = no(), i.sibling = null, d = jt.current, xn(jt, h ? d & 1 | 2 : d & 1), i) : (ar(i), null);
      case 22:
      case 23:
        return Dm(), h = i.memoizedState !== null, a !== null && a.memoizedState !== null !== h && (i.flags |= 8192), h && i.mode & 1 ? Yr & 1073741824 && (ar(i), i.subtreeFlags & 6 && (i.flags |= 8192)) : ar(i), null;
      case 24:
        return null;
      case 25:
        return null;
    }
    throw Error(s(156, i.tag));
  }
  function Em(a, i) {
    switch (om(i), i.tag) {
      case 1:
        return qn(i.type) && la(), a = i.flags, a & 65536 ? (i.flags = a & -65537 | 128, i) : null;
      case 3:
        return ss(), Cn(oo), Cn(Wt), Ud(), a = i.flags, a & 65536 && !(a & 128) ? (i.flags = a & -65537 | 128, i) : null;
      case 5:
        return rn(i), null;
      case 13:
        if (Cn(jt), a = i.memoizedState, a !== null && a.dehydrated !== null) {
          if (i.alternate === null)
            throw Error(s(340));
          Qn();
        }
        return a = i.flags, a & 65536 ? (i.flags = a & -65537 | 128, i) : null;
      case 19:
        return Cn(jt), null;
      case 4:
        return ss(), null;
      case 10:
        return os(i.type._context), null;
      case 22:
      case 23:
        return Dm(), null;
      case 24:
        return null;
      default:
        return null;
    }
  }
  var Eu = !1, Ro = !1, Pg = typeof WeakSet == "function" ? WeakSet : Set, Et = null;
  function ec(a, i) {
    var d = a.ref;
    if (d !== null)
      if (typeof d == "function")
        try {
          d(null);
        } catch (h) {
          ao(a, i, h);
        }
      else
        d.current = null;
  }
  function Ru(a, i, d) {
    try {
      d();
    } catch (h) {
      ao(a, i, h);
    }
  }
  var Lg = !1;
  function Ig(a, i) {
    if (Kf = Is, a = Ed(), vi(a)) {
      if ("selectionStart" in a)
        var d = { start: a.selectionStart, end: a.selectionEnd };
      else
        e: {
          d = (d = a.ownerDocument) && d.defaultView || window;
          var h = d.getSelection && d.getSelection();
          if (h && h.rangeCount !== 0) {
            d = h.anchorNode;
            var x = h.anchorOffset, R = h.focusNode;
            h = h.focusOffset;
            try {
              d.nodeType, R.nodeType;
            } catch {
              d = null;
              break e;
            }
            var B = 0, X = -1, te = -1, Re = 0, Je = 0, ot = a, Ze = null;
            t:
              for (; ; ) {
                for (var bt; ot !== d || x !== 0 && ot.nodeType !== 3 || (X = B + x), ot !== R || h !== 0 && ot.nodeType !== 3 || (te = B + h), ot.nodeType === 3 && (B += ot.nodeValue.length), (bt = ot.firstChild) !== null; )
                  Ze = ot, ot = bt;
                for (; ; ) {
                  if (ot === a)
                    break t;
                  if (Ze === d && ++Re === x && (X = B), Ze === R && ++Je === h && (te = B), (bt = ot.nextSibling) !== null)
                    break;
                  ot = Ze, Ze = ot.parentNode;
                }
                ot = bt;
              }
            d = X === -1 || te === -1 ? null : { start: X, end: te };
          } else
            d = null;
        }
      d = d || { start: 0, end: 0 };
    } else
      d = null;
    for (Fs = { focusedElem: a, selectionRange: d }, Is = !1, Et = i; Et !== null; )
      if (i = Et, a = i.child, (i.subtreeFlags & 1028) !== 0 && a !== null)
        a.return = i, Et = a;
      else
        for (; Et !== null; ) {
          i = Et;
          try {
            var Rt = i.alternate;
            if (i.flags & 1024)
              switch (i.tag) {
                case 0:
                case 11:
                case 15:
                  break;
                case 1:
                  if (Rt !== null) {
                    var $t = Rt.memoizedProps, co = Rt.memoizedState, ge = i.stateNode, ie = ge.getSnapshotBeforeUpdate(i.elementType === i.type ? $t : Gr(i.type, $t), co);
                    ge.__reactInternalSnapshotBeforeUpdate = ie;
                  }
                  break;
                case 3:
                  var Se = i.stateNode.containerInfo;
                  Se.nodeType === 1 ? Se.textContent = "" : Se.nodeType === 9 && Se.documentElement && Se.removeChild(Se.documentElement);
                  break;
                case 5:
                case 6:
                case 4:
                case 17:
                  break;
                default:
                  throw Error(s(163));
              }
          } catch (ct) {
            ao(i, i.return, ct);
          }
          if (a = i.sibling, a !== null) {
            a.return = i.return, Et = a;
            break;
          }
          Et = i.return;
        }
    return Rt = Lg, Lg = !1, Rt;
  }
  function Ou(a, i, d) {
    var h = i.updateQueue;
    if (h = h !== null ? h.lastEffect : null, h !== null) {
      var x = h = h.next;
      do {
        if ((x.tag & a) === a) {
          var R = x.destroy;
          x.destroy = void 0, R !== void 0 && Ru(i, d, R);
        }
        x = x.next;
      } while (x !== h);
    }
  }
  function wu(a, i) {
    if (i = i.updateQueue, i = i !== null ? i.lastEffect : null, i !== null) {
      var d = i = i.next;
      do {
        if ((d.tag & a) === a) {
          var h = d.create;
          d.destroy = h();
        }
        d = d.next;
      } while (d !== i);
    }
  }
  function Rm(a) {
    var i = a.ref;
    if (i !== null) {
      var d = a.stateNode;
      switch (a.tag) {
        case 5:
          a = d;
          break;
        default:
          a = d;
      }
      typeof i == "function" ? i(a) : i.current = a;
    }
  }
  function Om(a) {
    var i = a.alternate;
    i !== null && (a.alternate = null, Om(i)), a.child = null, a.deletions = null, a.sibling = null, a.tag === 5 && (i = a.stateNode, i !== null && (delete i[Ua], delete i[Us], delete i[Zf], delete i[uC], delete i[Jf])), a.stateNode = null, a.return = null, a.dependencies = null, a.memoizedProps = null, a.memoizedState = null, a.pendingProps = null, a.stateNode = null, a.updateQueue = null;
  }
  function _g(a) {
    return a.tag === 5 || a.tag === 3 || a.tag === 4;
  }
  function up(a) {
    e:
      for (; ; ) {
        for (; a.sibling === null; ) {
          if (a.return === null || _g(a.return))
            return null;
          a = a.return;
        }
        for (a.sibling.return = a.return, a = a.sibling; a.tag !== 5 && a.tag !== 6 && a.tag !== 18; ) {
          if (a.flags & 2 || a.child === null || a.tag === 4)
            continue e;
          a.child.return = a, a = a.child;
        }
        if (!(a.flags & 2))
          return a.stateNode;
      }
  }
  function tc(a, i, d) {
    var h = a.tag;
    if (h === 5 || h === 6)
      a = a.stateNode, i ? d.nodeType === 8 ? d.parentNode.insertBefore(a, i) : d.insertBefore(a, i) : (d.nodeType === 8 ? (i = d.parentNode, i.insertBefore(a, d)) : (i = d, i.appendChild(a)), d = d._reactRootContainer, d != null || i.onclick !== null || (i.onclick = $d));
    else if (h !== 4 && (a = a.child, a !== null))
      for (tc(a, i, d), a = a.sibling; a !== null; )
        tc(a, i, d), a = a.sibling;
  }
  function Ga(a, i, d) {
    var h = a.tag;
    if (h === 5 || h === 6)
      a = a.stateNode, i ? d.insertBefore(a, i) : d.appendChild(a);
    else if (h !== 4 && (a = a.child, a !== null))
      for (Ga(a, i, d), a = a.sibling; a !== null; )
        Ga(a, i, d), a = a.sibling;
  }
  var Yn = null, Ao = !1;
  function ma(a, i, d) {
    for (d = d.child; d !== null; )
      nc(a, i, d), d = d.sibling;
  }
  function nc(a, i, d) {
    if (Oa && typeof Oa.onCommitFiberUnmount == "function")
      try {
        Oa.onCommitFiberUnmount(Hc, d);
      } catch {
      }
    switch (d.tag) {
      case 5:
        Ro || ec(d, i);
      case 6:
        var h = Yn, x = Ao;
        Yn = null, ma(a, i, d), Yn = h, Ao = x, Yn !== null && (Ao ? (a = Yn, d = d.stateNode, a.nodeType === 8 ? a.parentNode.removeChild(d) : a.removeChild(d)) : Yn.removeChild(d.stateNode));
        break;
      case 18:
        Yn !== null && (Ao ? (a = Yn, d = d.stateNode, a.nodeType === 8 ? Qi(a.parentNode, d) : a.nodeType === 1 && Qi(a, d), Kc(a)) : Qi(Yn, d.stateNode));
        break;
      case 4:
        h = Yn, x = Ao, Yn = d.stateNode.containerInfo, Ao = !0, ma(a, i, d), Yn = h, Ao = x;
        break;
      case 0:
      case 11:
      case 14:
      case 15:
        if (!Ro && (h = d.updateQueue, h !== null && (h = h.lastEffect, h !== null))) {
          x = h = h.next;
          do {
            var R = x, B = R.destroy;
            R = R.tag, B !== void 0 && (R & 2 || R & 4) && Ru(d, i, B), x = x.next;
          } while (x !== h);
        }
        ma(a, i, d);
        break;
      case 1:
        if (!Ro && (ec(d, i), h = d.stateNode, typeof h.componentWillUnmount == "function"))
          try {
            h.props = d.memoizedProps, h.state = d.memoizedState, h.componentWillUnmount();
          } catch (X) {
            ao(d, i, X);
          }
        ma(a, i, d);
        break;
      case 21:
        ma(a, i, d);
        break;
      case 22:
        d.mode & 1 ? (Ro = (h = Ro) || d.memoizedState !== null, ma(a, i, d), Ro = h) : ma(a, i, d);
        break;
      default:
        ma(a, i, d);
    }
  }
  function Ei(a) {
    var i = a.updateQueue;
    if (i !== null) {
      a.updateQueue = null;
      var d = a.stateNode;
      d === null && (d = a.stateNode = new Pg()), i.forEach(function(h) {
        var x = TC.bind(null, a, h);
        d.has(h) || (d.add(h), h.then(x, x));
      });
    }
  }
  function Pa(a, i) {
    var d = i.deletions;
    if (d !== null)
      for (var h = 0; h < d.length; h++) {
        var x = d[h];
        try {
          var R = a, B = i, X = B;
          e:
            for (; X !== null; ) {
              switch (X.tag) {
                case 5:
                  Yn = X.stateNode, Ao = !1;
                  break e;
                case 3:
                  Yn = X.stateNode.containerInfo, Ao = !0;
                  break e;
                case 4:
                  Yn = X.stateNode.containerInfo, Ao = !0;
                  break e;
              }
              X = X.return;
            }
          if (Yn === null)
            throw Error(s(160));
          nc(R, B, x), Yn = null, Ao = !1;
          var te = x.alternate;
          te !== null && (te.return = null), x.return = null;
        } catch (Re) {
          ao(x, i, Re);
        }
      }
    if (i.subtreeFlags & 12854)
      for (i = i.child; i !== null; )
        Ag(i, a), i = i.sibling;
  }
  function Ag(a, i) {
    var d = a.alternate, h = a.flags;
    switch (a.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        if (Pa(i, a), qa(a), h & 4) {
          try {
            Ou(3, a, a.return), wu(3, a);
          } catch ($t) {
            ao(a, a.return, $t);
          }
          try {
            Ou(5, a, a.return);
          } catch ($t) {
            ao(a, a.return, $t);
          }
        }
        break;
      case 1:
        Pa(i, a), qa(a), h & 512 && d !== null && ec(d, d.return);
        break;
      case 5:
        if (Pa(i, a), qa(a), h & 512 && d !== null && ec(d, d.return), a.flags & 32) {
          var x = a.stateNode;
          try {
            Qe(x, "");
          } catch ($t) {
            ao(a, a.return, $t);
          }
        }
        if (h & 4 && (x = a.stateNode, x != null)) {
          var R = a.memoizedProps, B = d !== null ? d.memoizedProps : R, X = a.type, te = a.updateQueue;
          if (a.updateQueue = null, te !== null)
            try {
              X === "input" && R.type === "radio" && R.name != null && Oe(x, R), st(X, B);
              var Re = st(X, R);
              for (B = 0; B < te.length; B += 2) {
                var Je = te[B], ot = te[B + 1];
                Je === "style" ? We(x, ot) : Je === "dangerouslySetInnerHTML" ? he(x, ot) : Je === "children" ? Qe(x, ot) : A(x, Je, ot, Re);
              }
              switch (X) {
                case "input":
                  dt(x, R);
                  break;
                case "textarea":
                  At(x, R);
                  break;
                case "select":
                  var Ze = x._wrapperState.wasMultiple;
                  x._wrapperState.wasMultiple = !!R.multiple;
                  var bt = R.value;
                  bt != null ? ht(x, !!R.multiple, bt, !1) : Ze !== !!R.multiple && (R.defaultValue != null ? ht(
                    x,
                    !!R.multiple,
                    R.defaultValue,
                    !0
                  ) : ht(x, !!R.multiple, R.multiple ? [] : "", !1));
              }
              x[Us] = R;
            } catch ($t) {
              ao(a, a.return, $t);
            }
        }
        break;
      case 6:
        if (Pa(i, a), qa(a), h & 4) {
          if (a.stateNode === null)
            throw Error(s(162));
          x = a.stateNode, R = a.memoizedProps;
          try {
            x.nodeValue = R;
          } catch ($t) {
            ao(a, a.return, $t);
          }
        }
        break;
      case 3:
        if (Pa(i, a), qa(a), h & 4 && d !== null && d.memoizedState.isDehydrated)
          try {
            Kc(i.containerInfo);
          } catch ($t) {
            ao(a, a.return, $t);
          }
        break;
      case 4:
        Pa(i, a), qa(a);
        break;
      case 13:
        Pa(i, a), qa(a), x = a.child, x.flags & 8192 && (R = x.memoizedState !== null, x.stateNode.isHidden = R, !R || x.alternate !== null && x.alternate.memoizedState !== null || (Nm = no())), h & 4 && Ei(a);
        break;
      case 22:
        if (Je = d !== null && d.memoizedState !== null, a.mode & 1 ? (Ro = (Re = Ro) || Je, Pa(i, a), Ro = Re) : Pa(i, a), qa(a), h & 8192) {
          if (Re = a.memoizedState !== null, (a.stateNode.isHidden = Re) && !Je && a.mode & 1)
            for (Et = a, Je = a.child; Je !== null; ) {
              for (ot = Et = Je; Et !== null; ) {
                switch (Ze = Et, bt = Ze.child, Ze.tag) {
                  case 0:
                  case 11:
                  case 14:
                  case 15:
                    Ou(4, Ze, Ze.return);
                    break;
                  case 1:
                    ec(Ze, Ze.return);
                    var Rt = Ze.stateNode;
                    if (typeof Rt.componentWillUnmount == "function") {
                      h = Ze, d = Ze.return;
                      try {
                        i = h, Rt.props = i.memoizedProps, Rt.state = i.memoizedState, Rt.componentWillUnmount();
                      } catch ($t) {
                        ao(h, d, $t);
                      }
                    }
                    break;
                  case 5:
                    ec(Ze, Ze.return);
                    break;
                  case 22:
                    if (Ze.memoizedState !== null) {
                      wm(ot);
                      continue;
                    }
                }
                bt !== null ? (bt.return = Ze, Et = bt) : wm(ot);
              }
              Je = Je.sibling;
            }
          e:
            for (Je = null, ot = a; ; ) {
              if (ot.tag === 5) {
                if (Je === null) {
                  Je = ot;
                  try {
                    x = ot.stateNode, Re ? (R = x.style, typeof R.setProperty == "function" ? R.setProperty("display", "none", "important") : R.display = "none") : (X = ot.stateNode, te = ot.memoizedProps.style, B = te != null && te.hasOwnProperty("display") ? te.display : null, X.style.display = qe("display", B));
                  } catch ($t) {
                    ao(a, a.return, $t);
                  }
                }
              } else if (ot.tag === 6) {
                if (Je === null)
                  try {
                    ot.stateNode.nodeValue = Re ? "" : ot.memoizedProps;
                  } catch ($t) {
                    ao(a, a.return, $t);
                  }
              } else if ((ot.tag !== 22 && ot.tag !== 23 || ot.memoizedState === null || ot === a) && ot.child !== null) {
                ot.child.return = ot, ot = ot.child;
                continue;
              }
              if (ot === a)
                break e;
              for (; ot.sibling === null; ) {
                if (ot.return === null || ot.return === a)
                  break e;
                Je === ot && (Je = null), ot = ot.return;
              }
              Je === ot && (Je = null), ot.sibling.return = ot.return, ot = ot.sibling;
            }
        }
        break;
      case 19:
        Pa(i, a), qa(a), h & 4 && Ei(a);
        break;
      case 21:
        break;
      default:
        Pa(
          i,
          a
        ), qa(a);
    }
  }
  function qa(a) {
    var i = a.flags;
    if (i & 2) {
      try {
        e: {
          for (var d = a.return; d !== null; ) {
            if (_g(d)) {
              var h = d;
              break e;
            }
            d = d.return;
          }
          throw Error(s(160));
        }
        switch (h.tag) {
          case 5:
            var x = h.stateNode;
            h.flags & 32 && (Qe(x, ""), h.flags &= -33);
            var R = up(a);
            Ga(a, R, x);
            break;
          case 3:
          case 4:
            var B = h.stateNode.containerInfo, X = up(a);
            tc(a, X, B);
            break;
          default:
            throw Error(s(161));
        }
      } catch (te) {
        ao(a, a.return, te);
      }
      a.flags &= -3;
    }
    i & 4096 && (a.flags &= -4097);
  }
  function Bg(a, i, d) {
    Et = a, oc(a);
  }
  function oc(a, i, d) {
    for (var h = (a.mode & 1) !== 0; Et !== null; ) {
      var x = Et, R = x.child;
      if (x.tag === 22 && h) {
        var B = x.memoizedState !== null || Eu;
        if (!B) {
          var X = x.alternate, te = X !== null && X.memoizedState !== null || Ro;
          X = Eu;
          var Re = Ro;
          if (Eu = B, (Ro = te) && !Re)
            for (Et = x; Et !== null; )
              B = Et, te = B.child, B.tag === 22 && B.memoizedState !== null ? Fg(x) : te !== null ? (te.return = B, Et = te) : Fg(x);
          for (; R !== null; )
            Et = R, oc(R), R = R.sibling;
          Et = x, Eu = X, Ro = Re;
        }
        zg(a);
      } else
        x.subtreeFlags & 8772 && R !== null ? (R.return = x, Et = R) : zg(a);
    }
  }
  function zg(a) {
    for (; Et !== null; ) {
      var i = Et;
      if (i.flags & 8772) {
        var d = i.alternate;
        try {
          if (i.flags & 8772)
            switch (i.tag) {
              case 0:
              case 11:
              case 15:
                Ro || wu(5, i);
                break;
              case 1:
                var h = i.stateNode;
                if (i.flags & 4 && !Ro)
                  if (d === null)
                    h.componentDidMount();
                  else {
                    var x = i.elementType === i.type ? d.memoizedProps : Gr(i.type, d.memoizedProps);
                    h.componentDidUpdate(x, d.memoizedState, h.__reactInternalSnapshotBeforeUpdate);
                  }
                var R = i.updateQueue;
                R !== null && Hs(i, R, h);
                break;
              case 3:
                var B = i.updateQueue;
                if (B !== null) {
                  if (d = null, i.child !== null)
                    switch (i.child.tag) {
                      case 5:
                        d = i.child.stateNode;
                        break;
                      case 1:
                        d = i.child.stateNode;
                    }
                  Hs(i, B, d);
                }
                break;
              case 5:
                var X = i.stateNode;
                if (d === null && i.flags & 4) {
                  d = X;
                  var te = i.memoizedProps;
                  switch (i.type) {
                    case "button":
                    case "input":
                    case "select":
                    case "textarea":
                      te.autoFocus && d.focus();
                      break;
                    case "img":
                      te.src && (d.src = te.src);
                  }
                }
                break;
              case 6:
                break;
              case 4:
                break;
              case 12:
                break;
              case 13:
                if (i.memoizedState === null) {
                  var Re = i.alternate;
                  if (Re !== null) {
                    var Je = Re.memoizedState;
                    if (Je !== null) {
                      var ot = Je.dehydrated;
                      ot !== null && Kc(ot);
                    }
                  }
                }
                break;
              case 19:
              case 17:
              case 21:
              case 22:
              case 23:
              case 25:
                break;
              default:
                throw Error(s(163));
            }
          Ro || i.flags & 512 && Rm(i);
        } catch (Ze) {
          ao(i, i.return, Ze);
        }
      }
      if (i === a) {
        Et = null;
        break;
      }
      if (d = i.sibling, d !== null) {
        d.return = i.return, Et = d;
        break;
      }
      Et = i.return;
    }
  }
  function wm(a) {
    for (; Et !== null; ) {
      var i = Et;
      if (i === a) {
        Et = null;
        break;
      }
      var d = i.sibling;
      if (d !== null) {
        d.return = i.return, Et = d;
        break;
      }
      Et = i.return;
    }
  }
  function Fg(a) {
    for (; Et !== null; ) {
      var i = Et;
      try {
        switch (i.tag) {
          case 0:
          case 11:
          case 15:
            var d = i.return;
            try {
              wu(4, i);
            } catch (te) {
              ao(i, d, te);
            }
            break;
          case 1:
            var h = i.stateNode;
            if (typeof h.componentDidMount == "function") {
              var x = i.return;
              try {
                h.componentDidMount();
              } catch (te) {
                ao(i, x, te);
              }
            }
            var R = i.return;
            try {
              Rm(i);
            } catch (te) {
              ao(i, R, te);
            }
            break;
          case 5:
            var B = i.return;
            try {
              Rm(i);
            } catch (te) {
              ao(i, B, te);
            }
        }
      } catch (te) {
        ao(i, i.return, te);
      }
      if (i === a) {
        Et = null;
        break;
      }
      var X = i.sibling;
      if (X !== null) {
        X.return = i.return, Et = X;
        break;
      }
      Et = i.return;
    }
  }
  var dp = Math.ceil, ku = j.ReactCurrentDispatcher, km = j.ReactCurrentOwner, ir = j.ReactCurrentBatchConfig, cn = 0, Jn = null, ro = null, Bo = 0, Yr = 0, rc = Zt(0), Oo = 0, Nu = null, Ri = 0, pp = 0, ac = 0, nl = null, pr = null, Nm = 0, ic = 1 / 0, Oi = null, fp = !1, ol = null, Ya = null, ds = !1, ps = null, mp = 0, sc = 0, vp = null, rl = -1, al = 0;
  function sr() {
    return cn & 6 ? no() : rl !== -1 ? rl : rl = no();
  }
  function yo(a) {
    return a.mode & 1 ? cn & 2 && Bo !== 0 ? Bo & -Bo : _d.transition !== null ? (al === 0 && (al = pd()), al) : (a = En, a !== 0 || (a = window.event, a = a === void 0 ? 16 : Nf(a.type)), a) : 1;
  }
  function lr(a, i, d, h) {
    if (50 < sc)
      throw sc = 0, vp = null, Error(s(185));
    Ls(a, d, h), (!(cn & 2) || a !== Jn) && (a === Jn && (!(cn & 2) && (pp |= d), Oo === 4 && va(a, Bo)), cr(a, h), d === 1 && cn === 0 && !(i.mode & 1) && (ic = no() + 500, Io && wr()));
  }
  function cr(a, i) {
    var d = a.callbackNode;
    dd(a, i);
    var h = wa(a, a === Jn ? Bo : 0);
    if (h === 0)
      d !== null && tr(d), a.callbackNode = null, a.callbackPriority = 0;
    else if (i = h & -h, a.callbackPriority !== i) {
      if (d != null && tr(d), i === 1)
        a.tag === 0 ? tm(jg.bind(null, a)) : em(jg.bind(null, a)), Qf(function() {
          !(cn & 6) && wr();
        }), d = null;
      else {
        switch (Of(h)) {
          case 1:
            d = di;
            break;
          case 4:
            d = ln;
            break;
          case 16:
            d = Gi;
            break;
          case 536870912:
            d = Sf;
            break;
          default:
            d = Gi;
        }
        d = Im(d, lc.bind(null, a));
      }
      a.callbackPriority = i, a.callbackNode = d;
    }
  }
  function lc(a, i) {
    if (rl = -1, al = 0, cn & 6)
      throw Error(s(327));
    var d = a.callbackNode;
    if (uc() && a.callbackNode !== d)
      return null;
    var h = wa(a, a === Jn ? Bo : 0);
    if (h === 0)
      return null;
    if (h & 30 || h & a.expiredLanes || i)
      i = gp(a, h);
    else {
      i = h;
      var x = cn;
      cn |= 2;
      var R = hp();
      (Jn !== a || Bo !== i) && (Oi = null, ic = no() + 500, il(a, i));
      do
        try {
          bC();
          break;
        } catch (X) {
          Ug(a, X);
        }
      while (1);
      sm(), ku.current = R, cn = x, ro !== null ? i = 0 : (Jn = null, Bo = 0, i = Oo);
    }
    if (i !== 0) {
      if (i === 2 && (x = Ef(a), x !== 0 && (h = x, i = $m(a, x))), i === 1)
        throw d = Nu, il(a, 0), va(a, h), cr(a, no()), d;
      if (i === 6)
        va(a, h);
      else {
        if (x = a.current.alternate, !(h & 30) && !Mm(x) && (i = gp(a, h), i === 2 && (R = Ef(a), R !== 0 && (h = R, i = $m(a, R))), i === 1))
          throw d = Nu, il(a, 0), va(a, h), cr(a, no()), d;
        switch (a.finishedWork = x, a.finishedLanes = h, i) {
          case 0:
          case 1:
            throw Error(s(345));
          case 2:
            sl(a, pr, Oi);
            break;
          case 3:
            if (va(a, h), (h & 130023424) === h && (i = Nm + 500 - no(), 10 < i)) {
              if (wa(a, 0) !== 0)
                break;
              if (x = a.suspendedLanes, (x & h) !== h) {
                sr(), a.pingedLanes |= a.suspendedLanes & x;
                break;
              }
              a.timeoutHandle = js(sl.bind(null, a, pr, Oi), i);
              break;
            }
            sl(a, pr, Oi);
            break;
          case 4:
            if (va(a, h), (h & 4194240) === h)
              break;
            for (i = a.eventTimes, x = -1; 0 < h; ) {
              var B = 31 - na(h);
              R = 1 << B, B = i[B], B > x && (x = B), h &= ~R;
            }
            if (h = x, h = no() - h, h = (120 > h ? 120 : 480 > h ? 480 : 1080 > h ? 1080 : 1920 > h ? 1920 : 3e3 > h ? 3e3 : 4320 > h ? 4320 : 1960 * dp(h / 1960)) - h, 10 < h) {
              a.timeoutHandle = js(sl.bind(null, a, pr, Oi), h);
              break;
            }
            sl(a, pr, Oi);
            break;
          case 5:
            sl(a, pr, Oi);
            break;
          default:
            throw Error(s(329));
        }
      }
    }
    return cr(a, no()), a.callbackNode === d ? lc.bind(null, a) : null;
  }
  function $m(a, i) {
    var d = nl;
    return a.current.memoizedState.isDehydrated && (il(a, i).flags |= 256), a = gp(a, i), a !== 2 && (i = pr, pr = d, i !== null && $u(i)), a;
  }
  function $u(a) {
    pr === null ? pr = a : pr.push.apply(pr, a);
  }
  function Mm(a) {
    for (var i = a; ; ) {
      if (i.flags & 16384) {
        var d = i.updateQueue;
        if (d !== null && (d = d.stores, d !== null))
          for (var h = 0; h < d.length; h++) {
            var x = d[h], R = x.getSnapshot;
            x = x.value;
            try {
              if (!aa(R(), x))
                return !1;
            } catch {
              return !1;
            }
          }
      }
      if (d = i.child, i.subtreeFlags & 16384 && d !== null)
        d.return = i, i = d;
      else {
        if (i === a)
          break;
        for (; i.sibling === null; ) {
          if (i.return === null || i.return === a)
            return !0;
          i = i.return;
        }
        i.sibling.return = i.return, i = i.sibling;
      }
    }
    return !0;
  }
  function va(a, i) {
    for (i &= ~ac, i &= ~pp, a.suspendedLanes |= i, a.pingedLanes &= ~i, a = a.expirationTimes; 0 < i; ) {
      var d = 31 - na(i), h = 1 << d;
      a[d] = -1, i &= ~h;
    }
  }
  function jg(a) {
    if (cn & 6)
      throw Error(s(327));
    uc();
    var i = wa(a, 0);
    if (!(i & 1))
      return cr(a, no()), null;
    var d = gp(a, i);
    if (a.tag !== 0 && d === 2) {
      var h = Ef(a);
      h !== 0 && (i = h, d = $m(a, h));
    }
    if (d === 1)
      throw d = Nu, il(a, 0), va(a, i), cr(a, no()), d;
    if (d === 6)
      throw Error(s(345));
    return a.finishedWork = a.current.alternate, a.finishedLanes = i, sl(a, pr, Oi), cr(a, no()), null;
  }
  function cc(a, i) {
    var d = cn;
    cn |= 1;
    try {
      return a(i);
    } finally {
      cn = d, cn === 0 && (ic = no() + 500, Io && wr());
    }
  }
  function fs(a) {
    ps !== null && ps.tag === 0 && !(cn & 6) && uc();
    var i = cn;
    cn |= 1;
    var d = ir.transition, h = En;
    try {
      if (ir.transition = null, En = 1, a)
        return a();
    } finally {
      En = h, ir.transition = d, cn = i, !(cn & 6) && wr();
    }
  }
  function Dm() {
    Yr = rc.current, Cn(rc);
  }
  function il(a, i) {
    a.finishedWork = null, a.finishedLanes = 0;
    var d = a.timeoutHandle;
    if (d !== -1 && (a.timeoutHandle = -1, vg(d)), ro !== null)
      for (d = ro.return; d !== null; ) {
        var h = d;
        switch (om(h), h.tag) {
          case 1:
            h = h.type.childContextTypes, h != null && la();
            break;
          case 3:
            ss(), Cn(oo), Cn(Wt), Ud();
            break;
          case 5:
            rn(h);
            break;
          case 4:
            ss();
            break;
          case 13:
            Cn(jt);
            break;
          case 19:
            Cn(jt);
            break;
          case 10:
            os(h.type._context);
            break;
          case 22:
          case 23:
            Dm();
        }
        d = d.return;
      }
    if (Jn = a, ro = a = ms(a.current, null), Bo = Yr = i, Oo = 0, Nu = null, ac = pp = Ri = 0, pr = nl = null, Ho !== null) {
      for (i = 0; i < Ho.length; i++)
        if (d = Ho[i], h = d.interleaved, h !== null) {
          d.interleaved = null;
          var x = h.next, R = d.pending;
          if (R !== null) {
            var B = R.next;
            R.next = x, h.next = B;
          }
          d.pending = h;
        }
      Ho = null;
    }
    return a;
  }
  function Ug(a, i) {
    do {
      var d = ro;
      try {
        if (sm(), Vd.current = ap, Vt) {
          for (var h = Fn.memoizedState; h !== null; ) {
            var x = h.queue;
            x !== null && (x.pending = null), h = h.next;
          }
          Vt = !1;
        }
        if (Gs = 0, dn = Ae = Fn = null, Wa = !1, qr = 0, km.current = null, d === null || d.return === null) {
          Oo = 1, Nu = i, ro = null;
          break;
        }
        e: {
          var R = a, B = d.return, X = d, te = i;
          if (i = Bo, X.flags |= 32768, te !== null && typeof te == "object" && typeof te.then == "function") {
            var Re = te, Je = X, ot = Je.tag;
            if (!(Je.mode & 1) && (ot === 0 || ot === 11 || ot === 15)) {
              var Ze = Je.alternate;
              Ze ? (Je.updateQueue = Ze.updateQueue, Je.memoizedState = Ze.memoizedState, Je.lanes = Ze.lanes) : (Je.updateQueue = null, Je.memoizedState = null);
            }
            var bt = hm(B);
            if (bt !== null) {
              bt.flags &= -257, gm(bt, B, X, R, i), bt.mode & 1 && $g(R, Re, i), i = bt, te = Re;
              var Rt = i.updateQueue;
              if (Rt === null) {
                var $t = /* @__PURE__ */ new Set();
                $t.add(te), i.updateQueue = $t;
              } else
                Rt.add(te);
              break e;
            } else {
              if (!(i & 1)) {
                $g(R, Re, i), Pm();
                break e;
              }
              te = Error(s(426));
            }
          } else if (zn && X.mode & 1) {
            var co = hm(B);
            if (co !== null) {
              !(co.flags & 65536) && (co.flags |= 256), gm(co, B, X, R, i), am(Ql(te, X));
              break e;
            }
          }
          R = te = Ql(te, X), Oo !== 4 && (Oo = 2), nl === null ? nl = [R] : nl.push(R), R = B;
          do {
            switch (R.tag) {
              case 3:
                R.flags |= 65536, i &= -i, R.lanes |= i;
                var ge = Ng(R, te, i);
                um(R, ge);
                break e;
              case 1:
                X = te;
                var ie = R.type, Se = R.stateNode;
                if (!(R.flags & 128) && (typeof ie.getDerivedStateFromError == "function" || Se !== null && typeof Se.componentDidCatch == "function" && (Ya === null || !Ya.has(Se)))) {
                  R.flags |= 65536, i &= -i, R.lanes |= i;
                  var ct = xu(R, X, i);
                  um(R, ct);
                  break e;
                }
            }
            R = R.return;
          } while (R !== null);
        }
        Lm(d);
      } catch (Mt) {
        i = Mt, ro === d && d !== null && (ro = d = d.return);
        continue;
      }
      break;
    } while (1);
  }
  function hp() {
    var a = ku.current;
    return ku.current = ap, a === null ? ap : a;
  }
  function Pm() {
    (Oo === 0 || Oo === 3 || Oo === 2) && (Oo = 4), Jn === null || !(Ri & 268435455) && !(pp & 268435455) || va(Jn, Bo);
  }
  function gp(a, i) {
    var d = cn;
    cn |= 2;
    var h = hp();
    (Jn !== a || Bo !== i) && (Oi = null, il(a, i));
    do
      try {
        yC();
        break;
      } catch (x) {
        Ug(a, x);
      }
    while (1);
    if (sm(), cn = d, ku.current = h, ro !== null)
      throw Error(s(261));
    return Jn = null, Bo = 0, Oo;
  }
  function yC() {
    for (; ro !== null; )
      Vg(ro);
  }
  function bC() {
    for (; ro !== null && !Ml(); )
      Vg(ro);
  }
  function Vg(a) {
    var i = Wg(a.alternate, a, Yr);
    a.memoizedProps = a.pendingProps, i === null ? Lm(a) : ro = i, km.current = null;
  }
  function Lm(a) {
    var i = a;
    do {
      var d = i.alternate;
      if (a = i.return, i.flags & 32768) {
        if (d = Em(d, i), d !== null) {
          d.flags &= 32767, ro = d;
          return;
        }
        if (a !== null)
          a.flags |= 32768, a.subtreeFlags = 0, a.deletions = null;
        else {
          Oo = 6, ro = null;
          return;
        }
      } else if (d = gC(d, i, Yr), d !== null) {
        ro = d;
        return;
      }
      if (i = i.sibling, i !== null) {
        ro = i;
        return;
      }
      ro = i = a;
    } while (i !== null);
    Oo === 0 && (Oo = 5);
  }
  function sl(a, i, d) {
    var h = En, x = ir.transition;
    try {
      ir.transition = null, En = 1, CC(a, i, d, h);
    } finally {
      ir.transition = x, En = h;
    }
    return null;
  }
  function CC(a, i, d, h) {
    do
      uc();
    while (ps !== null);
    if (cn & 6)
      throw Error(s(327));
    d = a.finishedWork;
    var x = a.finishedLanes;
    if (d === null)
      return null;
    if (a.finishedWork = null, a.finishedLanes = 0, d === a.current)
      throw Error(s(177));
    a.callbackNode = null, a.callbackPriority = 0;
    var R = d.lanes | d.childLanes;
    if (G0(a, R), a === Jn && (ro = Jn = null, Bo = 0), !(d.subtreeFlags & 2064) && !(d.flags & 2064) || ds || (ds = !0, Im(Gi, function() {
      return uc(), null;
    })), R = (d.flags & 15990) !== 0, d.subtreeFlags & 15990 || R) {
      R = ir.transition, ir.transition = null;
      var B = En;
      En = 1;
      var X = cn;
      cn |= 4, km.current = null, Ig(a, d), Ag(d, a), Rd(Fs), Is = !!Kf, Fs = Kf = null, a.current = d, Bg(d), V0(), cn = X, En = B, ir.transition = R;
    } else
      a.current = d;
    if (ds && (ds = !1, ps = a, mp = x), R = a.pendingLanes, R === 0 && (Ya = null), Nh(d.stateNode), cr(a, no()), i !== null)
      for (h = a.onRecoverableError, d = 0; d < i.length; d++)
        x = i[d], h(x.value, { componentStack: x.stack, digest: x.digest });
    if (fp)
      throw fp = !1, a = ol, ol = null, a;
    return mp & 1 && a.tag !== 0 && uc(), R = a.pendingLanes, R & 1 ? a === vp ? sc++ : (sc = 0, vp = a) : sc = 0, wr(), null;
  }
  function uc() {
    if (ps !== null) {
      var a = Of(mp), i = ir.transition, d = En;
      try {
        if (ir.transition = null, En = 16 > a ? 16 : a, ps === null)
          var h = !1;
        else {
          if (a = ps, ps = null, mp = 0, cn & 6)
            throw Error(s(331));
          var x = cn;
          for (cn |= 4, Et = a.current; Et !== null; ) {
            var R = Et, B = R.child;
            if (Et.flags & 16) {
              var X = R.deletions;
              if (X !== null) {
                for (var te = 0; te < X.length; te++) {
                  var Re = X[te];
                  for (Et = Re; Et !== null; ) {
                    var Je = Et;
                    switch (Je.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Ou(8, Je, R);
                    }
                    var ot = Je.child;
                    if (ot !== null)
                      ot.return = Je, Et = ot;
                    else
                      for (; Et !== null; ) {
                        Je = Et;
                        var Ze = Je.sibling, bt = Je.return;
                        if (Om(Je), Je === Re) {
                          Et = null;
                          break;
                        }
                        if (Ze !== null) {
                          Ze.return = bt, Et = Ze;
                          break;
                        }
                        Et = bt;
                      }
                  }
                }
                var Rt = R.alternate;
                if (Rt !== null) {
                  var $t = Rt.child;
                  if ($t !== null) {
                    Rt.child = null;
                    do {
                      var co = $t.sibling;
                      $t.sibling = null, $t = co;
                    } while ($t !== null);
                  }
                }
                Et = R;
              }
            }
            if (R.subtreeFlags & 2064 && B !== null)
              B.return = R, Et = B;
            else
              e:
                for (; Et !== null; ) {
                  if (R = Et, R.flags & 2048)
                    switch (R.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Ou(9, R, R.return);
                    }
                  var ge = R.sibling;
                  if (ge !== null) {
                    ge.return = R.return, Et = ge;
                    break e;
                  }
                  Et = R.return;
                }
          }
          var ie = a.current;
          for (Et = ie; Et !== null; ) {
            B = Et;
            var Se = B.child;
            if (B.subtreeFlags & 2064 && Se !== null)
              Se.return = B, Et = Se;
            else
              e:
                for (B = ie; Et !== null; ) {
                  if (X = Et, X.flags & 2048)
                    try {
                      switch (X.tag) {
                        case 0:
                        case 11:
                        case 15:
                          wu(9, X);
                      }
                    } catch (Mt) {
                      ao(X, X.return, Mt);
                    }
                  if (X === B) {
                    Et = null;
                    break e;
                  }
                  var ct = X.sibling;
                  if (ct !== null) {
                    ct.return = X.return, Et = ct;
                    break e;
                  }
                  Et = X.return;
                }
          }
          if (cn = x, wr(), Oa && typeof Oa.onPostCommitFiberRoot == "function")
            try {
              Oa.onPostCommitFiberRoot(Hc, a);
            } catch {
            }
          h = !0;
        }
        return h;
      } finally {
        En = d, ir.transition = i;
      }
    }
    return !1;
  }
  function Hg(a, i, d) {
    i = Ql(d, i), i = Ng(a, i, 1), a = as(a, i, 1), i = sr(), a !== null && (Ls(a, 1, i), cr(a, i));
  }
  function ao(a, i, d) {
    if (a.tag === 3)
      Hg(a, a, d);
    else
      for (; i !== null; ) {
        if (i.tag === 3) {
          Hg(i, a, d);
          break;
        } else if (i.tag === 1) {
          var h = i.stateNode;
          if (typeof i.type.getDerivedStateFromError == "function" || typeof h.componentDidCatch == "function" && (Ya === null || !Ya.has(h))) {
            a = Ql(d, a), a = xu(i, a, 1), i = as(i, a, 1), a = sr(), i !== null && (Ls(i, 1, a), cr(i, a));
            break;
          }
        }
        i = i.return;
      }
  }
  function xC(a, i, d) {
    var h = a.pingCache;
    h !== null && h.delete(i), i = sr(), a.pingedLanes |= a.suspendedLanes & d, Jn === a && (Bo & d) === d && (Oo === 4 || Oo === 3 && (Bo & 130023424) === Bo && 500 > no() - Nm ? il(a, 0) : ac |= d), cr(a, i);
  }
  function yp(a, i) {
    i === 0 && (a.mode & 1 ? (i = Dl, Dl <<= 1, !(Dl & 130023424) && (Dl = 4194304)) : i = 1);
    var d = sr();
    a = Ci(a, i), a !== null && (Ls(a, i, d), cr(a, d));
  }
  function SC(a) {
    var i = a.memoizedState, d = 0;
    i !== null && (d = i.retryLane), yp(a, d);
  }
  function TC(a, i) {
    var d = 0;
    switch (a.tag) {
      case 13:
        var h = a.stateNode, x = a.memoizedState;
        x !== null && (d = x.retryLane);
        break;
      case 19:
        h = a.stateNode;
        break;
      default:
        throw Error(s(314));
    }
    h !== null && h.delete(i), yp(a, d);
  }
  var Wg;
  Wg = function(a, i, d) {
    if (a !== null)
      if (a.memoizedProps !== i.pendingProps || oo.current)
        go = !0;
      else {
        if (!(a.lanes & d) && !(i.flags & 128))
          return go = !1, Ti(a, i, d);
        go = !!(a.flags & 131072);
      }
    else
      go = !1, zn && i.flags & 1048576 && nm(i, Hl, i.index);
    switch (i.lanes = 0, i.tag) {
      case 2:
        var h = i.type;
        rr(a, i), a = i.pendingProps;
        var x = sa(i, Wt.current);
        mt(i, d), x = ls(null, i, h, a, x, d);
        var R = Ks();
        return i.flags |= 1, typeof x == "object" && x !== null && typeof x.render == "function" && x.$$typeof === void 0 ? (i.tag = 1, i.memoizedState = null, i.updateQueue = null, qn(h) ? (R = !0, Md(i)) : R = !1, i.memoizedState = x.state !== null && x.state !== void 0 ? x.state : null, cm(i), x.updater = zd, i.stateNode = x, x._reactInternals = i, Fd(i, h, a, d), i = Mg(null, i, h, !0, R, d)) : (i.tag = 0, zn && R && Dd(i), To(null, i, x, d), i = i.child), i;
      case 16:
        h = i.elementType;
        e: {
          switch (rr(a, i), a = i.pendingProps, x = h._init, h = x(h._payload), i.type = h, x = i.tag = RC(h), a = Gr(h, a), x) {
            case 0:
              i = Zl(null, i, h, a, d);
              break e;
            case 1:
              i = ym(null, i, h, a, d);
              break e;
            case 11:
              i = us(null, i, h, a, d);
              break e;
            case 14:
              i = sp(null, i, h, Gr(h.type, a), d);
              break e;
          }
          throw Error(s(
            306,
            h,
            ""
          ));
        }
        return i;
      case 0:
        return h = i.type, x = i.pendingProps, x = i.elementType === h ? x : Gr(h, x), Zl(a, i, h, x, d);
      case 1:
        return h = i.type, x = i.pendingProps, x = i.elementType === h ? x : Gr(h, x), ym(a, i, h, x, d);
      case 3:
        e: {
          if (Dg(i), a === null)
            throw Error(s(387));
          h = i.pendingProps, R = i.memoizedState, x = R.element, So(a, i), is(i, h, null, d);
          var B = i.memoizedState;
          if (h = B.element, R.isDehydrated)
            if (R = { element: h, isDehydrated: !1, cache: B.cache, pendingSuspenseBoundaries: B.pendingSuspenseBoundaries, transitions: B.transitions }, i.updateQueue.baseState = R, i.memoizedState = R, i.flags & 256) {
              x = Ql(Error(s(423)), i), i = lp(a, i, h, d, x);
              break e;
            } else if (h !== x) {
              x = Ql(Error(s(424)), i), i = lp(a, i, h, d, x);
              break e;
            } else
              for ($r = Ma(i.stateNode.containerInfo.firstChild), Wr = i, zn = !0, ua = null, d = wg(i, null, h, d), i.child = d; d; )
                d.flags = d.flags & -3 | 4096, d = d.sibling;
          else {
            if (Qn(), h === x) {
              i = Wo(a, i, d);
              break e;
            }
            To(a, i, h, d);
          }
          i = i.child;
        }
        return i;
      case 5:
        return Ft(i), a === null && Ld(i), h = i.type, x = i.pendingProps, R = a !== null ? a.memoizedProps : null, B = x.children, cu(h, x) ? B = null : R !== null && cu(h, R) && (i.flags |= 32), Jt(a, i), To(a, i, B, d), i.child;
      case 6:
        return a === null && Ld(i), null;
      case 13:
        return Cm(a, i, d);
      case 4:
        return pm(i, i.stateNode.containerInfo), h = i.pendingProps, a === null ? i.child = Gl(i, null, h, d) : To(a, i, h, d), i.child;
      case 11:
        return h = i.type, x = i.pendingProps, x = i.elementType === h ? x : Gr(h, x), us(a, i, h, x, d);
      case 7:
        return To(a, i, i.pendingProps, d), i.child;
      case 8:
        return To(a, i, i.pendingProps.children, d), i.child;
      case 12:
        return To(a, i, i.pendingProps.children, d), i.child;
      case 10:
        e: {
          if (h = i.type._context, x = i.pendingProps, R = i.memoizedProps, B = x.value, xn(Ha, h._currentValue), h._currentValue = B, R !== null)
            if (aa(R.value, B)) {
              if (R.children === x.children && !oo.current) {
                i = Wo(a, i, d);
                break e;
              }
            } else
              for (R = i.child, R !== null && (R.return = i); R !== null; ) {
                var X = R.dependencies;
                if (X !== null) {
                  B = R.child;
                  for (var te = X.firstContext; te !== null; ) {
                    if (te.context === h) {
                      if (R.tag === 1) {
                        te = xi(-1, d & -d), te.tag = 2;
                        var Re = R.updateQueue;
                        if (Re !== null) {
                          Re = Re.shared;
                          var Je = Re.pending;
                          Je === null ? te.next = te : (te.next = Je.next, Je.next = te), Re.pending = te;
                        }
                      }
                      R.lanes |= d, te = R.alternate, te !== null && (te.lanes |= d), _o(
                        R.return,
                        d,
                        i
                      ), X.lanes |= d;
                      break;
                    }
                    te = te.next;
                  }
                } else if (R.tag === 10)
                  B = R.type === i.type ? null : R.child;
                else if (R.tag === 18) {
                  if (B = R.return, B === null)
                    throw Error(s(341));
                  B.lanes |= d, X = B.alternate, X !== null && (X.lanes |= d), _o(B, d, i), B = R.sibling;
                } else
                  B = R.child;
                if (B !== null)
                  B.return = R;
                else
                  for (B = R; B !== null; ) {
                    if (B === i) {
                      B = null;
                      break;
                    }
                    if (R = B.sibling, R !== null) {
                      R.return = B.return, B = R;
                      break;
                    }
                    B = B.return;
                  }
                R = B;
              }
          To(a, i, x.children, d), i = i.child;
        }
        return i;
      case 9:
        return x = i.type, h = i.pendingProps.children, mt(i, d), x = lo(x), h = h(x), i.flags |= 1, To(a, i, h, d), i.child;
      case 14:
        return h = i.type, x = Gr(h, i.pendingProps), x = Gr(h.type, x), sp(a, i, h, x, d);
      case 15:
        return Pr(a, i, i.type, i.pendingProps, d);
      case 17:
        return h = i.type, x = i.pendingProps, x = i.elementType === h ? x : Gr(h, x), rr(a, i), i.tag = 1, qn(h) ? (a = !0, Md(i)) : a = !1, mt(i, d), Tg(i, h, x), Fd(i, h, x, d), Mg(null, i, h, !0, a, d);
      case 19:
        return Tm(a, i, d);
      case 22:
        return Js(a, i, d);
    }
    throw Error(s(156, i.tag));
  };
  function Im(a, i) {
    return sn(a, i);
  }
  function EC(a, i, d, h) {
    this.tag = a, this.key = d, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = i, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = h, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null;
  }
  function ha(a, i, d, h) {
    return new EC(a, i, d, h);
  }
  function _m(a) {
    return a = a.prototype, !(!a || !a.isReactComponent);
  }
  function RC(a) {
    if (typeof a == "function")
      return _m(a) ? 1 : 0;
    if (a != null) {
      if (a = a.$$typeof, a === re)
        return 11;
      if (a === ce)
        return 14;
    }
    return 2;
  }
  function ms(a, i) {
    var d = a.alternate;
    return d === null ? (d = ha(a.tag, i, a.key, a.mode), d.elementType = a.elementType, d.type = a.type, d.stateNode = a.stateNode, d.alternate = a, a.alternate = d) : (d.pendingProps = i, d.type = a.type, d.flags = 0, d.subtreeFlags = 0, d.deletions = null), d.flags = a.flags & 14680064, d.childLanes = a.childLanes, d.lanes = a.lanes, d.child = a.child, d.memoizedProps = a.memoizedProps, d.memoizedState = a.memoizedState, d.updateQueue = a.updateQueue, i = a.dependencies, d.dependencies = i === null ? null : { lanes: i.lanes, firstContext: i.firstContext }, d.sibling = a.sibling, d.index = a.index, d.ref = a.ref, d;
  }
  function bp(a, i, d, h, x, R) {
    var B = 2;
    if (h = a, typeof a == "function")
      _m(a) && (B = 1);
    else if (typeof a == "string")
      B = 5;
    else
      e:
        switch (a) {
          case F:
            return ll(d.children, x, R, i);
          case G:
            B = 8, x |= 8;
            break;
          case Y:
            return a = ha(12, d, i, x | 2), a.elementType = Y, a.lanes = R, a;
          case ee:
            return a = ha(13, d, i, x), a.elementType = ee, a.lanes = R, a;
          case J:
            return a = ha(19, d, i, x), a.elementType = J, a.lanes = R, a;
          case fe:
            return Mu(d, x, R, i);
          default:
            if (typeof a == "object" && a !== null)
              switch (a.$$typeof) {
                case Q:
                  B = 10;
                  break e;
                case q:
                  B = 9;
                  break e;
                case re:
                  B = 11;
                  break e;
                case ce:
                  B = 14;
                  break e;
                case de:
                  B = 16, h = null;
                  break e;
              }
            throw Error(s(130, a == null ? a : typeof a, ""));
        }
    return i = ha(B, d, i, x), i.elementType = a, i.type = h, i.lanes = R, i;
  }
  function ll(a, i, d, h) {
    return a = ha(7, a, h, i), a.lanes = d, a;
  }
  function Mu(a, i, d, h) {
    return a = ha(22, a, h, i), a.elementType = fe, a.lanes = d, a.stateNode = { isHidden: !1 }, a;
  }
  function Du(a, i, d) {
    return a = ha(6, a, null, i), a.lanes = d, a;
  }
  function cl(a, i, d) {
    return i = ha(4, a.children !== null ? a.children : [], a.key, i), i.lanes = d, i.stateNode = { containerInfo: a.containerInfo, pendingChildren: null, implementation: a.implementation }, i;
  }
  function OC(a, i, d, h, x) {
    this.tag = i, this.containerInfo = a, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = Rf(0), this.expirationTimes = Rf(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = Rf(0), this.identifierPrefix = h, this.onRecoverableError = x, this.mutableSourceEagerHydrationData = null;
  }
  function Cp(a, i, d, h, x, R, B, X, te) {
    return a = new OC(a, i, d, X, te), i === 1 ? (i = 1, R === !0 && (i |= 8)) : i = 0, R = ha(3, null, null, i), a.current = R, R.stateNode = a, R.memoizedState = { element: h, isDehydrated: d, cache: null, transitions: null, pendingSuspenseBoundaries: null }, cm(R), a;
  }
  function Gg(a, i, d) {
    var h = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
    return { $$typeof: $, key: h == null ? null : "" + h, children: a, containerInfo: i, implementation: d };
  }
  function Am(a) {
    if (!a)
      return Va;
    a = a._reactInternals;
    e: {
      if (Ne(a) !== a || a.tag !== 1)
        throw Error(s(170));
      var i = a;
      do {
        switch (i.tag) {
          case 3:
            i = i.stateNode.context;
            break e;
          case 1:
            if (qn(i.type)) {
              i = i.stateNode.__reactInternalMemoizedMergedChildContext;
              break e;
            }
        }
        i = i.return;
      } while (i !== null);
      throw Error(s(171));
    }
    if (a.tag === 1) {
      var d = a.type;
      if (qn(d))
        return pu(a, d, i);
    }
    return i;
  }
  function qg(a, i, d, h, x, R, B, X, te) {
    return a = Cp(d, h, !0, a, x, R, B, X, te), a.context = Am(null), d = a.current, h = sr(), x = yo(d), R = xi(h, x), R.callback = i ?? null, as(d, R, x), a.current.lanes = x, Ls(a, x, h), cr(a, h), a;
  }
  function Pu(a, i, d, h) {
    var x = i.current, R = sr(), B = yo(x);
    return d = Am(d), i.context === null ? i.context = d : i.pendingContext = d, i = xi(R, B), i.payload = { element: a }, h = h === void 0 ? null : h, h !== null && (i.callback = h), a = as(x, i, B), a !== null && (lr(a, x, B, R), Bd(a, x, B)), B;
  }
  function xp(a) {
    if (a = a.current, !a.child)
      return null;
    switch (a.child.tag) {
      case 5:
        return a.child.stateNode;
      default:
        return a.child.stateNode;
    }
  }
  function Yg(a, i) {
    if (a = a.memoizedState, a !== null && a.dehydrated !== null) {
      var d = a.retryLane;
      a.retryLane = d !== 0 && d < i ? d : i;
    }
  }
  function Bm(a, i) {
    Yg(a, i), (a = a.alternate) && Yg(a, i);
  }
  function Kg() {
    return null;
  }
  var zm = typeof reportError == "function" ? reportError : function(a) {
    console.error(a);
  };
  function Sp(a) {
    this._internalRoot = a;
  }
  wi.prototype.render = Sp.prototype.render = function(a) {
    var i = this._internalRoot;
    if (i === null)
      throw Error(s(409));
    Pu(a, i, null, null);
  }, wi.prototype.unmount = Sp.prototype.unmount = function() {
    var a = this._internalRoot;
    if (a !== null) {
      this._internalRoot = null;
      var i = a.containerInfo;
      fs(function() {
        Pu(null, a, null, null);
      }), i[yi] = null;
    }
  };
  function wi(a) {
    this._internalRoot = a;
  }
  wi.prototype.unstable_scheduleHydration = function(a) {
    if (a) {
      var i = Ph();
      a = { blockedOn: null, target: a, priority: i };
      for (var d = 0; d < On.length && i !== 0 && i < On[d].priority; d++)
        ;
      On.splice(d, 0, a), d === 0 && Lh(a);
    }
  };
  function Fm(a) {
    return !(!a || a.nodeType !== 1 && a.nodeType !== 9 && a.nodeType !== 11);
  }
  function Tp(a) {
    return !(!a || a.nodeType !== 1 && a.nodeType !== 9 && a.nodeType !== 11 && (a.nodeType !== 8 || a.nodeValue !== " react-mount-point-unstable "));
  }
  function Xg() {
  }
  function wC(a, i, d, h, x) {
    if (x) {
      if (typeof h == "function") {
        var R = h;
        h = function() {
          var Re = xp(B);
          R.call(Re);
        };
      }
      var B = qg(i, h, a, 0, null, !1, !1, "", Xg);
      return a._reactRootContainer = B, a[yi] = B.current, Ul(a.nodeType === 8 ? a.parentNode : a), fs(), B;
    }
    for (; x = a.lastChild; )
      a.removeChild(x);
    if (typeof h == "function") {
      var X = h;
      h = function() {
        var Re = xp(te);
        X.call(Re);
      };
    }
    var te = Cp(a, 0, !1, null, null, !1, !1, "", Xg);
    return a._reactRootContainer = te, a[yi] = te.current, Ul(a.nodeType === 8 ? a.parentNode : a), fs(function() {
      Pu(i, te, d, h);
    }), te;
  }
  function Ep(a, i, d, h, x) {
    var R = d._reactRootContainer;
    if (R) {
      var B = R;
      if (typeof x == "function") {
        var X = x;
        x = function() {
          var te = xp(B);
          X.call(te);
        };
      }
      Pu(i, B, a, x);
    } else
      B = wC(d, i, a, x, h);
    return xp(B);
  }
  Dh = function(a) {
    switch (a.tag) {
      case 3:
        var i = a.stateNode;
        if (i.current.memoizedState.isDehydrated) {
          var d = Ps(i.pendingLanes);
          d !== 0 && (Wc(i, d | 1), cr(i, no()), !(cn & 6) && (ic = no() + 500, wr()));
        }
        break;
      case 13:
        fs(function() {
          var h = Ci(a, 1);
          if (h !== null) {
            var x = sr();
            lr(h, a, 1, x);
          }
        }), Bm(a, 1);
    }
  }, fd = function(a) {
    if (a.tag === 13) {
      var i = Ci(a, 134217728);
      if (i !== null) {
        var d = sr();
        lr(i, a, 134217728, d);
      }
      Bm(a, 134217728);
    }
  }, Pn = function(a) {
    if (a.tag === 13) {
      var i = yo(a), d = Ci(a, i);
      if (d !== null) {
        var h = sr();
        lr(d, a, i, h);
      }
      Bm(a, i);
    }
  }, Ph = function() {
    return En;
  }, wf = function(a, i) {
    var d = En;
    try {
      return En = a, i();
    } finally {
      En = d;
    }
  }, nn = function(a, i, d) {
    switch (i) {
      case "input":
        if (dt(a, d), i = d.name, d.type === "radio" && i != null) {
          for (d = a; d.parentNode; )
            d = d.parentNode;
          for (d = d.querySelectorAll("input[name=" + JSON.stringify("" + i) + '][type="radio"]'), i = 0; i < d.length; i++) {
            var h = d[i];
            if (h !== a && h.form === a.form) {
              var x = _t(h);
              if (!x)
                throw Error(s(90));
              rt(h), dt(h, x);
            }
          }
        }
        break;
      case "textarea":
        At(a, d);
        break;
      case "select":
        i = d.value, i != null && ht(a, !!d.multiple, i, !1);
    }
  }, Fr = cc, ja = fs;
  var kC = { usingClientEntryPoint: !1, Events: [du, Vl, _t, fo, dr, cc] }, dc = { findFiberByHostInstance: ia, bundleType: 0, version: "18.2.0", rendererPackageName: "react-dom" }, NC = { bundleType: dc.bundleType, version: dc.version, rendererPackageName: dc.rendererPackageName, rendererConfig: dc.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: j.ReactCurrentDispatcher, findHostInstanceByFiber: function(a) {
    return a = en(a), a === null ? null : a.stateNode;
  }, findFiberByHostInstance: dc.findFiberByHostInstance || Kg, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.2.0-next-9e3b772b8-20220608" };
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
    var Rp = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!Rp.isDisabled && Rp.supportsFiber)
      try {
        Hc = Rp.inject(NC), Oa = Rp;
      } catch {
      }
  }
  return Sa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = kC, Sa.createPortal = function(a, i) {
    var d = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
    if (!Fm(i))
      throw Error(s(200));
    return Gg(a, i, null, d);
  }, Sa.createRoot = function(a, i) {
    if (!Fm(a))
      throw Error(s(299));
    var d = !1, h = "", x = zm;
    return i != null && (i.unstable_strictMode === !0 && (d = !0), i.identifierPrefix !== void 0 && (h = i.identifierPrefix), i.onRecoverableError !== void 0 && (x = i.onRecoverableError)), i = Cp(a, 1, !1, null, null, d, !1, h, x), a[yi] = i.current, Ul(a.nodeType === 8 ? a.parentNode : a), new Sp(i);
  }, Sa.findDOMNode = function(a) {
    if (a == null)
      return null;
    if (a.nodeType === 1)
      return a;
    var i = a._reactInternals;
    if (i === void 0)
      throw typeof a.render == "function" ? Error(s(188)) : (a = Object.keys(a).join(","), Error(s(268, a)));
    return a = en(i), a = a === null ? null : a.stateNode, a;
  }, Sa.flushSync = function(a) {
    return fs(a);
  }, Sa.hydrate = function(a, i, d) {
    if (!Tp(i))
      throw Error(s(200));
    return Ep(null, a, i, !0, d);
  }, Sa.hydrateRoot = function(a, i, d) {
    if (!Fm(a))
      throw Error(s(405));
    var h = d != null && d.hydratedSources || null, x = !1, R = "", B = zm;
    if (d != null && (d.unstable_strictMode === !0 && (x = !0), d.identifierPrefix !== void 0 && (R = d.identifierPrefix), d.onRecoverableError !== void 0 && (B = d.onRecoverableError)), i = qg(i, null, a, 1, d ?? null, x, !1, R, B), a[yi] = i.current, Ul(a), h)
      for (a = 0; a < h.length; a++)
        d = h[a], x = d._getVersion, x = x(d._source), i.mutableSourceEagerHydrationData == null ? i.mutableSourceEagerHydrationData = [d, x] : i.mutableSourceEagerHydrationData.push(
          d,
          x
        );
    return new wi(i);
  }, Sa.render = function(a, i, d) {
    if (!Tp(i))
      throw Error(s(200));
    return Ep(null, a, i, !1, d);
  }, Sa.unmountComponentAtNode = function(a) {
    if (!Tp(a))
      throw Error(s(40));
    return a._reactRootContainer ? (fs(function() {
      Ep(null, null, a, !1, function() {
        a._reactRootContainer = null, a[yi] = null;
      });
    }), !0) : !1;
  }, Sa.unstable_batchedUpdates = cc, Sa.unstable_renderSubtreeIntoContainer = function(a, i, d, h) {
    if (!Tp(d))
      throw Error(s(200));
    if (a == null || a._reactInternals === void 0)
      throw Error(s(38));
    return Ep(a, i, d, !1, h);
  }, Sa.version = "18.2.0-next-9e3b772b8-20220608", Sa;
}
var Ta = {};
/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var ck;
function EU() {
  return ck || (ck = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var e = ai, r = S$(), s = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, u = !1;
    function f(t) {
      u = t;
    }
    function v(t) {
      if (!u) {
        for (var o = arguments.length, l = new Array(o > 1 ? o - 1 : 0), c = 1; c < o; c++)
          l[c - 1] = arguments[c];
        y("warn", t, l);
      }
    }
    function m(t) {
      if (!u) {
        for (var o = arguments.length, l = new Array(o > 1 ? o - 1 : 0), c = 1; c < o; c++)
          l[c - 1] = arguments[c];
        y("error", t, l);
      }
    }
    function y(t, o, l) {
      {
        var c = s.ReactDebugCurrentFrame, p = c.getStackAddendum();
        p !== "" && (o += "%s", l = l.concat([p]));
        var g = l.map(function(T) {
          return String(T);
        });
        g.unshift("Warning: " + o), Function.prototype.apply.call(console[t], console, g);
      }
    }
    var b = 0, S = 1, E = 2, k = 3, D = 4, M = 5, P = 6, L = 7, w = 8, _ = 9, V = 10, A = 11, j = 12, U = 13, $ = 14, F = 15, G = 16, Y = 17, Q = 18, q = 19, re = 21, ee = 22, J = 23, ce = 24, de = 25, fe = !0, K = !1, ne = !1, ve = !1, Ke = !1, tt = !0, Ie = !1, De = !1, Ye = !0, ke = !0, lt = !0, xe = /* @__PURE__ */ new Set(), ze = {}, ut = {};
    function Xe(t, o) {
      rt(t, o), rt(t + "Capture", o);
    }
    function rt(t, o) {
      ze[t] && m("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", t), ze[t] = o;
      {
        var l = t.toLowerCase();
        ut[l] = t, t === "onDoubleClick" && (ut.ondblclick = t);
      }
      for (var c = 0; c < o.length; c++)
        xe.add(o[c]);
    }
    var nt = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", le = Object.prototype.hasOwnProperty;
    function $e(t) {
      {
        var o = typeof Symbol == "function" && Symbol.toStringTag, l = o && t[Symbol.toStringTag] || t.constructor.name || "Object";
        return l;
      }
    }
    function Oe(t) {
      try {
        return dt(t), !1;
      } catch {
        return !0;
      }
    }
    function dt(t) {
      return "" + t;
    }
    function it(t, o) {
      if (Oe(t))
        return m("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", o, $e(t)), dt(t);
    }
    function zt(t) {
      if (Oe(t))
        return m("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", $e(t)), dt(t);
    }
    function Dt(t, o) {
      if (Oe(t))
        return m("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", o, $e(t)), dt(t);
    }
    function ht(t, o) {
      if (Oe(t))
        return m("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", o, $e(t)), dt(t);
    }
    function Tt(t) {
      if (Oe(t))
        return m("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", $e(t)), dt(t);
    }
    function Lt(t) {
      if (Oe(t))
        return m("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before before using it here.", $e(t)), dt(t);
    }
    var At = 0, tn = 1, an = 2, Qt = 3, Ce = 4, he = 5, Qe = 6, Me = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD", et = Me + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040", qe = new RegExp("^[" + Me + "][" + et + "]*$"), We = {}, we = {};
    function Fe(t) {
      return le.call(we, t) ? !0 : le.call(We, t) ? !1 : qe.test(t) ? (we[t] = !0, !0) : (We[t] = !0, m("Invalid attribute name: `%s`", t), !1);
    }
    function st(t, o, l) {
      return o !== null ? o.type === At : l ? !1 : t.length > 2 && (t[0] === "o" || t[0] === "O") && (t[1] === "n" || t[1] === "N");
    }
    function kt(t, o, l, c) {
      if (l !== null && l.type === At)
        return !1;
      switch (typeof o) {
        case "function":
        case "symbol":
          return !0;
        case "boolean": {
          if (c)
            return !1;
          if (l !== null)
            return !l.acceptsBooleans;
          var p = t.toLowerCase().slice(0, 5);
          return p !== "data-" && p !== "aria-";
        }
        default:
          return !1;
      }
    }
    function Nt(t, o, l, c) {
      if (o === null || typeof o > "u" || kt(t, o, l, c))
        return !0;
      if (c)
        return !1;
      if (l !== null)
        switch (l.type) {
          case Qt:
            return !o;
          case Ce:
            return o === !1;
          case he:
            return isNaN(o);
          case Qe:
            return isNaN(o) || o < 1;
        }
      return !1;
    }
    function nn(t) {
      return on.hasOwnProperty(t) ? on[t] : null;
    }
    function qt(t, o, l, c, p, g, T) {
      this.acceptsBooleans = o === an || o === Qt || o === Ce, this.attributeName = c, this.attributeNamespace = p, this.mustUseProperty = l, this.propertyName = t, this.type = o, this.sanitizeURL = g, this.removeEmptyString = T;
    }
    var on = {}, _n = [
      "children",
      "dangerouslySetInnerHTML",
      // TODO: This prevents the assignment of defaultValue to regular
      // elements (not just inputs). Now that ReactDOMInput assigns to the
      // defaultValue property -- do we need this?
      "defaultValue",
      "defaultChecked",
      "innerHTML",
      "suppressContentEditableWarning",
      "suppressHydrationWarning",
      "style"
    ];
    _n.forEach(function(t) {
      on[t] = new qt(
        t,
        At,
        !1,
        // mustUseProperty
        t,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(t) {
      var o = t[0], l = t[1];
      on[o] = new qt(
        o,
        tn,
        !1,
        // mustUseProperty
        l,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(t) {
      on[t] = new qt(
        t,
        an,
        !1,
        // mustUseProperty
        t.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(t) {
      on[t] = new qt(
        t,
        an,
        !1,
        // mustUseProperty
        t,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "allowFullScreen",
      "async",
      // Note: there is a special case that prevents it from being written to the DOM
      // on the client side because the browsers are inconsistent. Instead we call focus().
      "autoFocus",
      "autoPlay",
      "controls",
      "default",
      "defer",
      "disabled",
      "disablePictureInPicture",
      "disableRemotePlayback",
      "formNoValidate",
      "hidden",
      "loop",
      "noModule",
      "noValidate",
      "open",
      "playsInline",
      "readOnly",
      "required",
      "reversed",
      "scoped",
      "seamless",
      // Microdata
      "itemScope"
    ].forEach(function(t) {
      on[t] = new qt(
        t,
        Qt,
        !1,
        // mustUseProperty
        t.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "checked",
      // Note: `option.selected` is not updated if `select.multiple` is
      // disabled with `removeAttribute`. We have special logic for handling this.
      "multiple",
      "muted",
      "selected"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(t) {
      on[t] = new qt(
        t,
        Qt,
        !0,
        // mustUseProperty
        t,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "capture",
      "download"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(t) {
      on[t] = new qt(
        t,
        Ce,
        !1,
        // mustUseProperty
        t,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "cols",
      "rows",
      "size",
      "span"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(t) {
      on[t] = new qt(
        t,
        Qe,
        !1,
        // mustUseProperty
        t,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["rowSpan", "start"].forEach(function(t) {
      on[t] = new qt(
        t,
        he,
        !1,
        // mustUseProperty
        t.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    });
    var fo = /[\-\:]([a-z])/g, dr = function(t) {
      return t[1].toUpperCase();
    };
    [
      "accent-height",
      "alignment-baseline",
      "arabic-form",
      "baseline-shift",
      "cap-height",
      "clip-path",
      "clip-rule",
      "color-interpolation",
      "color-interpolation-filters",
      "color-profile",
      "color-rendering",
      "dominant-baseline",
      "enable-background",
      "fill-opacity",
      "fill-rule",
      "flood-color",
      "flood-opacity",
      "font-family",
      "font-size",
      "font-size-adjust",
      "font-stretch",
      "font-style",
      "font-variant",
      "font-weight",
      "glyph-name",
      "glyph-orientation-horizontal",
      "glyph-orientation-vertical",
      "horiz-adv-x",
      "horiz-origin-x",
      "image-rendering",
      "letter-spacing",
      "lighting-color",
      "marker-end",
      "marker-mid",
      "marker-start",
      "overline-position",
      "overline-thickness",
      "paint-order",
      "panose-1",
      "pointer-events",
      "rendering-intent",
      "shape-rendering",
      "stop-color",
      "stop-opacity",
      "strikethrough-position",
      "strikethrough-thickness",
      "stroke-dasharray",
      "stroke-dashoffset",
      "stroke-linecap",
      "stroke-linejoin",
      "stroke-miterlimit",
      "stroke-opacity",
      "stroke-width",
      "text-anchor",
      "text-decoration",
      "text-rendering",
      "underline-position",
      "underline-thickness",
      "unicode-bidi",
      "unicode-range",
      "units-per-em",
      "v-alphabetic",
      "v-hanging",
      "v-ideographic",
      "v-mathematical",
      "vector-effect",
      "vert-adv-y",
      "vert-origin-x",
      "vert-origin-y",
      "word-spacing",
      "writing-mode",
      "xmlns:xlink",
      "x-height"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(t) {
      var o = t.replace(fo, dr);
      on[o] = new qt(
        o,
        tn,
        !1,
        // mustUseProperty
        t,
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "xlink:actuate",
      "xlink:arcrole",
      "xlink:role",
      "xlink:show",
      "xlink:title",
      "xlink:type"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(t) {
      var o = t.replace(fo, dr);
      on[o] = new qt(
        o,
        tn,
        !1,
        // mustUseProperty
        t,
        "http://www.w3.org/1999/xlink",
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "xml:base",
      "xml:lang",
      "xml:space"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(t) {
      var o = t.replace(fo, dr);
      on[o] = new qt(
        o,
        tn,
        !1,
        // mustUseProperty
        t,
        "http://www.w3.org/XML/1998/namespace",
        !1,
        // sanitizeURL
        !1
      );
    }), ["tabIndex", "crossOrigin"].forEach(function(t) {
      on[t] = new qt(
        t,
        tn,
        !1,
        // mustUseProperty
        t.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    });
    var Fr = "xlinkHref";
    on[Fr] = new qt(
      "xlinkHref",
      tn,
      !1,
      // mustUseProperty
      "xlink:href",
      "http://www.w3.org/1999/xlink",
      !0,
      // sanitizeURL
      !1
    ), ["src", "href", "action", "formAction"].forEach(function(t) {
      on[t] = new qt(
        t,
        tn,
        !1,
        // mustUseProperty
        t.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !0,
        // sanitizeURL
        !0
      );
    });
    var ja = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i, jr = !1;
    function No(t) {
      !jr && ja.test(t) && (jr = !0, m("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(t)));
    }
    function Rn(t, o, l, c) {
      if (c.mustUseProperty) {
        var p = c.propertyName;
        return t[p];
      } else {
        it(l, o), c.sanitizeURL && No("" + l);
        var g = c.attributeName, T = null;
        if (c.type === Ce) {
          if (t.hasAttribute(g)) {
            var N = t.getAttribute(g);
            return N === "" ? !0 : Nt(o, l, c, !1) ? N : N === "" + l ? l : N;
          }
        } else if (t.hasAttribute(g)) {
          if (Nt(o, l, c, !1))
            return t.getAttribute(g);
          if (c.type === Qt)
            return l;
          T = t.getAttribute(g);
        }
        return Nt(o, l, c, !1) ? T === null ? l : T : T === "" + l ? l : T;
      }
    }
    function bn(t, o, l, c) {
      {
        if (!Fe(o))
          return;
        if (!t.hasAttribute(o))
          return l === void 0 ? void 0 : null;
        var p = t.getAttribute(o);
        return it(l, o), p === "" + l ? l : p;
      }
    }
    function An(t, o, l, c) {
      var p = nn(o);
      if (!st(o, p, c)) {
        if (Nt(o, l, p, c) && (l = null), c || p === null) {
          if (Fe(o)) {
            var g = o;
            l === null ? t.removeAttribute(g) : (it(l, o), t.setAttribute(g, "" + l));
          }
          return;
        }
        var T = p.mustUseProperty;
        if (T) {
          var N = p.propertyName;
          if (l === null) {
            var I = p.type;
            t[N] = I === Qt ? !1 : "";
          } else
            t[N] = l;
          return;
        }
        var H = p.attributeName, W = p.attributeNamespace;
        if (l === null)
          t.removeAttribute(H);
        else {
          var se = p.type, ae;
          se === Qt || se === Ce && l === !0 ? ae = "" : (it(l, H), ae = "" + l, p.sanitizeURL && No(ae.toString())), W ? t.setAttributeNS(W, H, ae) : t.setAttribute(H, ae);
        }
      }
    }
    var Gn = Symbol.for("react.element"), Xn = Symbol.for("react.portal"), Uo = Symbol.for("react.fragment"), $o = Symbol.for("react.strict_mode"), Mo = Symbol.for("react.profiler"), Er = Symbol.for("react.provider"), Do = Symbol.for("react.context"), mo = Symbol.for("react.forward_ref"), Ne = Symbol.for("react.suspense"), ue = Symbol.for("react.suspense_list"), Ge = Symbol.for("react.memo"), ft = Symbol.for("react.lazy"), en = Symbol.for("react.scope"), pt = Symbol.for("react.debug_trace_mode"), sn = Symbol.for("react.offscreen"), tr = Symbol.for("react.legacy_hidden"), Ml = Symbol.for("react.cache"), V0 = Symbol.for("react.tracing_marker"), no = Symbol.iterator, H0 = "@@iterator";
    function di(t) {
      if (t === null || typeof t != "object")
        return null;
      var o = no && t[no] || t[H0];
      return typeof o == "function" ? o : null;
    }
    var ln = Object.assign, Gi = 0, kh, Sf, Hc, Oa, Nh, na, $h;
    function Mh() {
    }
    Mh.__reactDisabledLog = !0;
    function W0() {
      {
        if (Gi === 0) {
          kh = console.log, Sf = console.info, Hc = console.warn, Oa = console.error, Nh = console.group, na = console.groupCollapsed, $h = console.groupEnd;
          var t = {
            configurable: !0,
            enumerable: !0,
            value: Mh,
            writable: !0
          };
          Object.defineProperties(console, {
            info: t,
            log: t,
            warn: t,
            error: t,
            group: t,
            groupCollapsed: t,
            groupEnd: t
          });
        }
        Gi++;
      }
    }
    function ud() {
      {
        if (Gi--, Gi === 0) {
          var t = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: ln({}, t, {
              value: kh
            }),
            info: ln({}, t, {
              value: Sf
            }),
            warn: ln({}, t, {
              value: Hc
            }),
            error: ln({}, t, {
              value: Oa
            }),
            group: ln({}, t, {
              value: Nh
            }),
            groupCollapsed: ln({}, t, {
              value: na
            }),
            groupEnd: ln({}, t, {
              value: $h
            })
          });
        }
        Gi < 0 && m("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var Dl = s.ReactCurrentDispatcher, Ps;
    function wa(t, o, l) {
      {
        if (Ps === void 0)
          try {
            throw Error();
          } catch (p) {
            var c = p.stack.trim().match(/\n( *(at )?)/);
            Ps = c && c[1] || "";
          }
        return `
` + Ps + t;
      }
    }
    var Tf = !1, dd;
    {
      var Ef = typeof WeakMap == "function" ? WeakMap : Map;
      dd = new Ef();
    }
    function pd(t, o) {
      if (!t || Tf)
        return "";
      {
        var l = dd.get(t);
        if (l !== void 0)
          return l;
      }
      var c;
      Tf = !0;
      var p = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var g;
      g = Dl.current, Dl.current = null, W0();
      try {
        if (o) {
          var T = function() {
            throw Error();
          };
          if (Object.defineProperty(T.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(T, []);
            } catch (Ee) {
              c = Ee;
            }
            Reflect.construct(t, [], T);
          } else {
            try {
              T.call();
            } catch (Ee) {
              c = Ee;
            }
            t.call(T.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (Ee) {
            c = Ee;
          }
          t();
        }
      } catch (Ee) {
        if (Ee && c && typeof Ee.stack == "string") {
          for (var N = Ee.stack.split(`
`), I = c.stack.split(`
`), H = N.length - 1, W = I.length - 1; H >= 1 && W >= 0 && N[H] !== I[W]; )
            W--;
          for (; H >= 1 && W >= 0; H--, W--)
            if (N[H] !== I[W]) {
              if (H !== 1 || W !== 1)
                do
                  if (H--, W--, W < 0 || N[H] !== I[W]) {
                    var se = `
` + N[H].replace(" at new ", " at ");
                    return t.displayName && se.includes("<anonymous>") && (se = se.replace("<anonymous>", t.displayName)), typeof t == "function" && dd.set(t, se), se;
                  }
                while (H >= 1 && W >= 0);
              break;
            }
        }
      } finally {
        Tf = !1, Dl.current = g, ud(), Error.prepareStackTrace = p;
      }
      var ae = t ? t.displayName || t.name : "", Te = ae ? wa(ae) : "";
      return typeof t == "function" && dd.set(t, Te), Te;
    }
    function Rf(t, o, l) {
      return pd(t, !0);
    }
    function Ls(t, o, l) {
      return pd(t, !1);
    }
    function G0(t) {
      var o = t.prototype;
      return !!(o && o.isReactComponent);
    }
    function Wc(t, o, l) {
      if (t == null)
        return "";
      if (typeof t == "function")
        return pd(t, G0(t));
      if (typeof t == "string")
        return wa(t);
      switch (t) {
        case Ne:
          return wa("Suspense");
        case ue:
          return wa("SuspenseList");
      }
      if (typeof t == "object")
        switch (t.$$typeof) {
          case mo:
            return Ls(t.render);
          case Ge:
            return Wc(t.type, o, l);
          case ft: {
            var c = t, p = c._payload, g = c._init;
            try {
              return Wc(g(p), o, l);
            } catch {
            }
          }
        }
      return "";
    }
    function En(t) {
      switch (t._debugOwner && t._debugOwner.type, t._debugSource, t.tag) {
        case M:
          return wa(t.type);
        case G:
          return wa("Lazy");
        case U:
          return wa("Suspense");
        case q:
          return wa("SuspenseList");
        case b:
        case E:
        case F:
          return Ls(t.type);
        case A:
          return Ls(t.type.render);
        case S:
          return Rf(t.type);
        default:
          return "";
      }
    }
    function Of(t) {
      try {
        var o = "", l = t;
        do
          o += En(l), l = l.return;
        while (l);
        return o;
      } catch (c) {
        return `
Error generating stack: ` + c.message + `
` + c.stack;
      }
    }
    function Dh(t, o, l) {
      var c = t.displayName;
      if (c)
        return c;
      var p = o.displayName || o.name || "";
      return p !== "" ? l + "(" + p + ")" : l;
    }
    function fd(t) {
      return t.displayName || "Context";
    }
    function Pn(t) {
      if (t == null)
        return null;
      if (typeof t.tag == "number" && m("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof t == "function")
        return t.displayName || t.name || null;
      if (typeof t == "string")
        return t;
      switch (t) {
        case Uo:
          return "Fragment";
        case Xn:
          return "Portal";
        case Mo:
          return "Profiler";
        case $o:
          return "StrictMode";
        case Ne:
          return "Suspense";
        case ue:
          return "SuspenseList";
      }
      if (typeof t == "object")
        switch (t.$$typeof) {
          case Do:
            var o = t;
            return fd(o) + ".Consumer";
          case Er:
            var l = t;
            return fd(l._context) + ".Provider";
          case mo:
            return Dh(t, t.render, "ForwardRef");
          case Ge:
            var c = t.displayName || null;
            return c !== null ? c : Pn(t.type) || "Memo";
          case ft: {
            var p = t, g = p._payload, T = p._init;
            try {
              return Pn(T(g));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    function Ph(t, o, l) {
      var c = o.displayName || o.name || "";
      return t.displayName || (c !== "" ? l + "(" + c + ")" : l);
    }
    function wf(t) {
      return t.displayName || "Context";
    }
    function Xt(t) {
      var o = t.tag, l = t.type;
      switch (o) {
        case ce:
          return "Cache";
        case _:
          var c = l;
          return wf(c) + ".Consumer";
        case V:
          var p = l;
          return wf(p._context) + ".Provider";
        case Q:
          return "DehydratedFragment";
        case A:
          return Ph(l, l.render, "ForwardRef");
        case L:
          return "Fragment";
        case M:
          return l;
        case D:
          return "Portal";
        case k:
          return "Root";
        case P:
          return "Text";
        case G:
          return Pn(l);
        case w:
          return l === $o ? "StrictMode" : "Mode";
        case ee:
          return "Offscreen";
        case j:
          return "Profiler";
        case re:
          return "Scope";
        case U:
          return "Suspense";
        case q:
          return "SuspenseList";
        case de:
          return "TracingMarker";
        case S:
        case b:
        case Y:
        case E:
        case $:
        case F:
          if (typeof l == "function")
            return l.displayName || l.name || null;
          if (typeof l == "string")
            return l;
          break;
      }
      return null;
    }
    var Gc = s.ReactDebugCurrentFrame, vo = null, oa = !1;
    function ra() {
      {
        if (vo === null)
          return null;
        var t = vo._debugOwner;
        if (t !== null && typeof t < "u")
          return Xt(t);
      }
      return null;
    }
    function qc() {
      return vo === null ? "" : Of(vo);
    }
    function xo() {
      Gc.getCurrentStack = null, vo = null, oa = !1;
    }
    function On(t) {
      Gc.getCurrentStack = t === null ? null : qc, vo = t, oa = !1;
    }
    function q0() {
      return vo;
    }
    function ka(t) {
      oa = t;
    }
    function nr(t) {
      return "" + t;
    }
    function qi(t) {
      switch (typeof t) {
        case "boolean":
        case "number":
        case "string":
        case "undefined":
          return t;
        case "object":
          return Lt(t), t;
        default:
          return "";
      }
    }
    var Lh = {
      button: !0,
      checkbox: !0,
      image: !0,
      hidden: !0,
      radio: !0,
      reset: !0,
      submit: !0
    };
    function Pl(t, o) {
      Lh[o.type] || o.onChange || o.onInput || o.readOnly || o.disabled || o.value == null || m("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`."), o.onChange || o.readOnly || o.disabled || o.checked == null || m("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function kf(t) {
      var o = t.type, l = t.nodeName;
      return l && l.toLowerCase() === "input" && (o === "checkbox" || o === "radio");
    }
    function Ih(t) {
      return t._valueTracker;
    }
    function Yc(t) {
      t._valueTracker = null;
    }
    function Kc(t) {
      var o = "";
      return t && (kf(t) ? o = t.checked ? "true" : "false" : o = t.value), o;
    }
    function Ll(t) {
      var o = kf(t) ? "checked" : "value", l = Object.getOwnPropertyDescriptor(t.constructor.prototype, o);
      Lt(t[o]);
      var c = "" + t[o];
      if (!(t.hasOwnProperty(o) || typeof l > "u" || typeof l.get != "function" || typeof l.set != "function")) {
        var p = l.get, g = l.set;
        Object.defineProperty(t, o, {
          configurable: !0,
          get: function() {
            return p.call(this);
          },
          set: function(N) {
            Lt(N), c = "" + N, g.call(this, N);
          }
        }), Object.defineProperty(t, o, {
          enumerable: l.enumerable
        });
        var T = {
          getValue: function() {
            return c;
          },
          setValue: function(N) {
            Lt(N), c = "" + N;
          },
          stopTracking: function() {
            Yc(t), delete t[o];
          }
        };
        return T;
      }
    }
    function Is(t) {
      Ih(t) || (t._valueTracker = Ll(t));
    }
    function _h(t) {
      if (!t)
        return !1;
      var o = Ih(t);
      if (!o)
        return !0;
      var l = o.getValue(), c = Kc(t);
      return c !== l ? (o.setValue(c), !0) : !1;
    }
    function md(t) {
      if (t = t || (typeof document < "u" ? document : void 0), typeof t > "u")
        return null;
      try {
        return t.activeElement || t.body;
      } catch {
        return t.body;
      }
    }
    var vd = !1, Xc = !1, hd = !1, Nf = !1;
    function pi(t) {
      var o = t.type === "checkbox" || t.type === "radio";
      return o ? t.checked != null : t.value != null;
    }
    function Qc(t, o) {
      var l = t, c = o.checked, p = ln({}, o, {
        defaultChecked: void 0,
        defaultValue: void 0,
        value: void 0,
        checked: c ?? l._wrapperState.initialChecked
      });
      return p;
    }
    function Zc(t, o) {
      Pl("input", o), o.checked !== void 0 && o.defaultChecked !== void 0 && !Xc && (m("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", ra() || "A component", o.type), Xc = !0), o.value !== void 0 && o.defaultValue !== void 0 && !vd && (m("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", ra() || "A component", o.type), vd = !0);
      var l = t, c = o.defaultValue == null ? "" : o.defaultValue;
      l._wrapperState = {
        initialChecked: o.checked != null ? o.checked : o.defaultChecked,
        initialValue: qi(o.value != null ? o.value : c),
        controlled: pi(o)
      };
    }
    function $f(t, o) {
      var l = t, c = o.checked;
      c != null && An(l, "checked", c, !1);
    }
    function Il(t, o) {
      var l = t;
      {
        var c = pi(o);
        !l._wrapperState.controlled && c && !Nf && (m("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components"), Nf = !0), l._wrapperState.controlled && !c && !hd && (m("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components"), hd = !0);
      }
      $f(t, o);
      var p = qi(o.value), g = o.type;
      if (p != null)
        g === "number" ? (p === 0 && l.value === "" || // We explicitly want to coerce to number here if possible.
        // eslint-disable-next-line
        l.value != p) && (l.value = nr(p)) : l.value !== nr(p) && (l.value = nr(p));
      else if (g === "submit" || g === "reset") {
        l.removeAttribute("value");
        return;
      }
      o.hasOwnProperty("value") ? Yi(l, o.type, p) : o.hasOwnProperty("defaultValue") && Yi(l, o.type, qi(o.defaultValue)), o.checked == null && o.defaultChecked != null && (l.defaultChecked = !!o.defaultChecked);
    }
    function Jc(t, o, l) {
      var c = t;
      if (o.hasOwnProperty("value") || o.hasOwnProperty("defaultValue")) {
        var p = o.type, g = p === "submit" || p === "reset";
        if (g && (o.value === void 0 || o.value === null))
          return;
        var T = nr(c._wrapperState.initialValue);
        l || T !== c.value && (c.value = T), c.defaultValue = T;
      }
      var N = c.name;
      N !== "" && (c.name = ""), c.defaultChecked = !c.defaultChecked, c.defaultChecked = !!c._wrapperState.initialChecked, N !== "" && (c.name = N);
    }
    function Ah(t, o) {
      var l = t;
      Il(l, o), Ur(l, o);
    }
    function Ur(t, o) {
      var l = o.name;
      if (o.type === "radio" && l != null) {
        for (var c = t; c.parentNode; )
          c = c.parentNode;
        it(l, "name");
        for (var p = c.querySelectorAll("input[name=" + JSON.stringify("" + l) + '][type="radio"]'), g = 0; g < p.length; g++) {
          var T = p[g];
          if (!(T === t || T.form !== t.form)) {
            var N = fy(T);
            if (!N)
              throw new Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
            _h(T), Il(T, N);
          }
        }
      }
    }
    function Yi(t, o, l) {
      // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
      (o !== "number" || md(t.ownerDocument) !== t) && (l == null ? t.defaultValue = nr(t._wrapperState.initialValue) : t.defaultValue !== nr(l) && (t.defaultValue = nr(l)));
    }
    var gd = !1, _l = !1, Bh = !1;
    function yd(t, o) {
      o.value == null && (typeof o.children == "object" && o.children !== null ? e.Children.forEach(o.children, function(l) {
        l != null && (typeof l == "string" || typeof l == "number" || _l || (_l = !0, m("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.")));
      }) : o.dangerouslySetInnerHTML != null && (Bh || (Bh = !0, m("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.")))), o.selected != null && !gd && (m("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>."), gd = !0);
    }
    function Mf(t, o) {
      o.value != null && t.setAttribute("value", nr(qi(o.value)));
    }
    var eu = Array.isArray;
    function Po(t) {
      return eu(t);
    }
    var bd;
    bd = !1;
    function zh() {
      var t = ra();
      return t ? `

Check the render method of \`` + t + "`." : "";
    }
    var Fh = ["value", "defaultValue"];
    function Y0(t) {
      {
        Pl("select", t);
        for (var o = 0; o < Fh.length; o++) {
          var l = Fh[o];
          if (t[l] != null) {
            var c = Po(t[l]);
            t.multiple && !c ? m("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", l, zh()) : !t.multiple && c && m("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", l, zh());
          }
        }
      }
    }
    function Ki(t, o, l, c) {
      var p = t.options;
      if (o) {
        for (var g = l, T = {}, N = 0; N < g.length; N++)
          T["$" + g[N]] = !0;
        for (var I = 0; I < p.length; I++) {
          var H = T.hasOwnProperty("$" + p[I].value);
          p[I].selected !== H && (p[I].selected = H), H && c && (p[I].defaultSelected = !0);
        }
      } else {
        for (var W = nr(qi(l)), se = null, ae = 0; ae < p.length; ae++) {
          if (p[ae].value === W) {
            p[ae].selected = !0, c && (p[ae].defaultSelected = !0);
            return;
          }
          se === null && !p[ae].disabled && (se = p[ae]);
        }
        se !== null && (se.selected = !0);
      }
    }
    function Df(t, o) {
      return ln({}, o, {
        value: void 0
      });
    }
    function jh(t, o) {
      var l = t;
      Y0(o), l._wrapperState = {
        wasMultiple: !!o.multiple
      }, o.value !== void 0 && o.defaultValue !== void 0 && !bd && (m("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components"), bd = !0);
    }
    function K0(t, o) {
      var l = t;
      l.multiple = !!o.multiple;
      var c = o.value;
      c != null ? Ki(l, !!o.multiple, c, !1) : o.defaultValue != null && Ki(l, !!o.multiple, o.defaultValue, !0);
    }
    function X0(t, o) {
      var l = t, c = l._wrapperState.wasMultiple;
      l._wrapperState.wasMultiple = !!o.multiple;
      var p = o.value;
      p != null ? Ki(l, !!o.multiple, p, !1) : c !== !!o.multiple && (o.defaultValue != null ? Ki(l, !!o.multiple, o.defaultValue, !0) : Ki(l, !!o.multiple, o.multiple ? [] : "", !1));
    }
    function Q0(t, o) {
      var l = t, c = o.value;
      c != null && Ki(l, !!o.multiple, c, !1);
    }
    var Pf = !1;
    function Lf(t, o) {
      var l = t;
      if (o.dangerouslySetInnerHTML != null)
        throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
      var c = ln({}, o, {
        value: void 0,
        defaultValue: void 0,
        children: nr(l._wrapperState.initialValue)
      });
      return c;
    }
    function Uh(t, o) {
      var l = t;
      Pl("textarea", o), o.value !== void 0 && o.defaultValue !== void 0 && !Pf && (m("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", ra() || "A component"), Pf = !0);
      var c = o.value;
      if (c == null) {
        var p = o.children, g = o.defaultValue;
        if (p != null) {
          m("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
          {
            if (g != null)
              throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
            if (Po(p)) {
              if (p.length > 1)
                throw new Error("<textarea> can only have at most one child.");
              p = p[0];
            }
            g = p;
          }
        }
        g == null && (g = ""), c = g;
      }
      l._wrapperState = {
        initialValue: qi(c)
      };
    }
    function Vh(t, o) {
      var l = t, c = qi(o.value), p = qi(o.defaultValue);
      if (c != null) {
        var g = nr(c);
        g !== l.value && (l.value = g), o.defaultValue == null && l.defaultValue !== g && (l.defaultValue = g);
      }
      p != null && (l.defaultValue = nr(p));
    }
    function Hh(t, o) {
      var l = t, c = l.textContent;
      c === l._wrapperState.initialValue && c !== "" && c !== null && (l.value = c);
    }
    function If(t, o) {
      Vh(t, o);
    }
    var fi = "http://www.w3.org/1999/xhtml", Z0 = "http://www.w3.org/1998/Math/MathML", _f = "http://www.w3.org/2000/svg";
    function Cd(t) {
      switch (t) {
        case "svg":
          return _f;
        case "math":
          return Z0;
        default:
          return fi;
      }
    }
    function Af(t, o) {
      return t == null || t === fi ? Cd(o) : t === _f && o === "foreignObject" ? fi : t;
    }
    var J0 = function(t) {
      return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(o, l, c, p) {
        MSApp.execUnsafeLocalFunction(function() {
          return t(o, l, c, p);
        });
      } : t;
    }, xd, Wh = J0(function(t, o) {
      if (t.namespaceURI === _f && !("innerHTML" in t)) {
        xd = xd || document.createElement("div"), xd.innerHTML = "<svg>" + o.valueOf().toString() + "</svg>";
        for (var l = xd.firstChild; t.firstChild; )
          t.removeChild(t.firstChild);
        for (; l.firstChild; )
          t.appendChild(l.firstChild);
        return;
      }
      t.innerHTML = o;
    }), Rr = 1, mi = 3, ho = 8, Na = 9, _s = 11, Sd = function(t, o) {
      if (o) {
        var l = t.firstChild;
        if (l && l === t.lastChild && l.nodeType === mi) {
          l.nodeValue = o;
          return;
        }
      }
      t.textContent = o;
    }, Gh = {
      animation: ["animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationPlayState", "animationTimingFunction"],
      background: ["backgroundAttachment", "backgroundClip", "backgroundColor", "backgroundImage", "backgroundOrigin", "backgroundPositionX", "backgroundPositionY", "backgroundRepeat", "backgroundSize"],
      backgroundPosition: ["backgroundPositionX", "backgroundPositionY"],
      border: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderTopColor", "borderTopStyle", "borderTopWidth"],
      borderBlockEnd: ["borderBlockEndColor", "borderBlockEndStyle", "borderBlockEndWidth"],
      borderBlockStart: ["borderBlockStartColor", "borderBlockStartStyle", "borderBlockStartWidth"],
      borderBottom: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth"],
      borderColor: ["borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor"],
      borderImage: ["borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth"],
      borderInlineEnd: ["borderInlineEndColor", "borderInlineEndStyle", "borderInlineEndWidth"],
      borderInlineStart: ["borderInlineStartColor", "borderInlineStartStyle", "borderInlineStartWidth"],
      borderLeft: ["borderLeftColor", "borderLeftStyle", "borderLeftWidth"],
      borderRadius: ["borderBottomLeftRadius", "borderBottomRightRadius", "borderTopLeftRadius", "borderTopRightRadius"],
      borderRight: ["borderRightColor", "borderRightStyle", "borderRightWidth"],
      borderStyle: ["borderBottomStyle", "borderLeftStyle", "borderRightStyle", "borderTopStyle"],
      borderTop: ["borderTopColor", "borderTopStyle", "borderTopWidth"],
      borderWidth: ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopWidth"],
      columnRule: ["columnRuleColor", "columnRuleStyle", "columnRuleWidth"],
      columns: ["columnCount", "columnWidth"],
      flex: ["flexBasis", "flexGrow", "flexShrink"],
      flexFlow: ["flexDirection", "flexWrap"],
      font: ["fontFamily", "fontFeatureSettings", "fontKerning", "fontLanguageOverride", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition", "fontWeight", "lineHeight"],
      fontVariant: ["fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition"],
      gap: ["columnGap", "rowGap"],
      grid: ["gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
      gridArea: ["gridColumnEnd", "gridColumnStart", "gridRowEnd", "gridRowStart"],
      gridColumn: ["gridColumnEnd", "gridColumnStart"],
      gridColumnGap: ["columnGap"],
      gridGap: ["columnGap", "rowGap"],
      gridRow: ["gridRowEnd", "gridRowStart"],
      gridRowGap: ["rowGap"],
      gridTemplate: ["gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
      listStyle: ["listStyleImage", "listStylePosition", "listStyleType"],
      margin: ["marginBottom", "marginLeft", "marginRight", "marginTop"],
      marker: ["markerEnd", "markerMid", "markerStart"],
      mask: ["maskClip", "maskComposite", "maskImage", "maskMode", "maskOrigin", "maskPositionX", "maskPositionY", "maskRepeat", "maskSize"],
      maskPosition: ["maskPositionX", "maskPositionY"],
      outline: ["outlineColor", "outlineStyle", "outlineWidth"],
      overflow: ["overflowX", "overflowY"],
      padding: ["paddingBottom", "paddingLeft", "paddingRight", "paddingTop"],
      placeContent: ["alignContent", "justifyContent"],
      placeItems: ["alignItems", "justifyItems"],
      placeSelf: ["alignSelf", "justifySelf"],
      textDecoration: ["textDecorationColor", "textDecorationLine", "textDecorationStyle"],
      textEmphasis: ["textEmphasisColor", "textEmphasisStyle"],
      transition: ["transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction"],
      wordWrap: ["overflowWrap"]
    }, Al = {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      // SVG-related properties
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0
    };
    function qh(t, o) {
      return t + o.charAt(0).toUpperCase() + o.substring(1);
    }
    var Yh = ["Webkit", "ms", "Moz", "O"];
    Object.keys(Al).forEach(function(t) {
      Yh.forEach(function(o) {
        Al[qh(o, t)] = Al[t];
      });
    });
    function Td(t, o, l) {
      var c = o == null || typeof o == "boolean" || o === "";
      return c ? "" : !l && typeof o == "number" && o !== 0 && !(Al.hasOwnProperty(t) && Al[t]) ? o + "px" : (ht(o, t), ("" + o).trim());
    }
    var Bl = /([A-Z])/g, eC = /^ms-/;
    function tC(t) {
      return t.replace(Bl, "-$1").toLowerCase().replace(eC, "-ms-");
    }
    var Kh = function() {
    };
    {
      var Xh = /^(?:webkit|moz|o)[A-Z]/, Qh = /^-ms-/, tu = /-(.)/g, zl = /;\s*$/, Fl = {}, jl = {}, Zh = !1, Bf = !1, zf = function(t) {
        return t.replace(tu, function(o, l) {
          return l.toUpperCase();
        });
      }, Ff = function(t) {
        Fl.hasOwnProperty(t) && Fl[t] || (Fl[t] = !0, m(
          "Unsupported style property %s. Did you mean %s?",
          t,
          // As Andi Smith suggests
          // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
          // is converted to lowercase `ms`.
          zf(t.replace(Qh, "ms-"))
        ));
      }, Jh = function(t) {
        Fl.hasOwnProperty(t) && Fl[t] || (Fl[t] = !0, m("Unsupported vendor-prefixed style property %s. Did you mean %s?", t, t.charAt(0).toUpperCase() + t.slice(1)));
      }, eg = function(t, o) {
        jl.hasOwnProperty(o) && jl[o] || (jl[o] = !0, m(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, t, o.replace(zl, "")));
      }, tg = function(t, o) {
        Zh || (Zh = !0, m("`NaN` is an invalid value for the `%s` css style property.", t));
      }, nC = function(t, o) {
        Bf || (Bf = !0, m("`Infinity` is an invalid value for the `%s` css style property.", t));
      };
      Kh = function(t, o) {
        t.indexOf("-") > -1 ? Ff(t) : Xh.test(t) ? Jh(t) : zl.test(o) && eg(t, o), typeof o == "number" && (isNaN(o) ? tg(t, o) : isFinite(o) || nC(t, o));
      };
    }
    var oC = Kh;
    function rC(t) {
      {
        var o = "", l = "";
        for (var c in t)
          if (t.hasOwnProperty(c)) {
            var p = t[c];
            if (p != null) {
              var g = c.indexOf("--") === 0;
              o += l + (g ? c : tC(c)) + ":", o += Td(c, p, g), l = ";";
            }
          }
        return o || null;
      }
    }
    function ng(t, o) {
      var l = t.style;
      for (var c in o)
        if (o.hasOwnProperty(c)) {
          var p = c.indexOf("--") === 0;
          p || oC(c, o[c]);
          var g = Td(c, o[c], p);
          c === "float" && (c = "cssFloat"), p ? l.setProperty(c, g) : l[c] = g;
        }
    }
    function aC(t) {
      return t == null || typeof t == "boolean" || t === "";
    }
    function aa(t) {
      var o = {};
      for (var l in t)
        for (var c = Gh[l] || [l], p = 0; p < c.length; p++)
          o[c[p]] = l;
      return o;
    }
    function nu(t, o) {
      {
        if (!o)
          return;
        var l = aa(t), c = aa(o), p = {};
        for (var g in l) {
          var T = l[g], N = c[g];
          if (N && T !== N) {
            var I = T + "," + N;
            if (p[I])
              continue;
            p[I] = !0, m("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", aC(t[T]) ? "Removing" : "Updating", T, N);
          }
        }
      }
    }
    var og = {
      area: !0,
      base: !0,
      br: !0,
      col: !0,
      embed: !0,
      hr: !0,
      img: !0,
      input: !0,
      keygen: !0,
      link: !0,
      meta: !0,
      param: !0,
      source: !0,
      track: !0,
      wbr: !0
      // NOTE: menuitem's close tag should be omitted, but that causes problems.
    }, rg = ln({
      menuitem: !0
    }, og), ag = "__html";
    function Ed(t, o) {
      if (o) {
        if (rg[t] && (o.children != null || o.dangerouslySetInnerHTML != null))
          throw new Error(t + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
        if (o.dangerouslySetInnerHTML != null) {
          if (o.children != null)
            throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
          if (typeof o.dangerouslySetInnerHTML != "object" || !(ag in o.dangerouslySetInnerHTML))
            throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        }
        if (!o.suppressContentEditableWarning && o.contentEditable && o.children != null && m("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional."), o.style != null && typeof o.style != "object")
          throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
      }
    }
    function vi(t, o) {
      if (t.indexOf("-") === -1)
        return typeof o.is == "string";
      switch (t) {
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return !1;
        default:
          return !0;
      }
    }
    var Rd = {
      // HTML
      accept: "accept",
      acceptcharset: "acceptCharset",
      "accept-charset": "acceptCharset",
      accesskey: "accessKey",
      action: "action",
      allowfullscreen: "allowFullScreen",
      alt: "alt",
      as: "as",
      async: "async",
      autocapitalize: "autoCapitalize",
      autocomplete: "autoComplete",
      autocorrect: "autoCorrect",
      autofocus: "autoFocus",
      autoplay: "autoPlay",
      autosave: "autoSave",
      capture: "capture",
      cellpadding: "cellPadding",
      cellspacing: "cellSpacing",
      challenge: "challenge",
      charset: "charSet",
      checked: "checked",
      children: "children",
      cite: "cite",
      class: "className",
      classid: "classID",
      classname: "className",
      cols: "cols",
      colspan: "colSpan",
      content: "content",
      contenteditable: "contentEditable",
      contextmenu: "contextMenu",
      controls: "controls",
      controlslist: "controlsList",
      coords: "coords",
      crossorigin: "crossOrigin",
      dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
      data: "data",
      datetime: "dateTime",
      default: "default",
      defaultchecked: "defaultChecked",
      defaultvalue: "defaultValue",
      defer: "defer",
      dir: "dir",
      disabled: "disabled",
      disablepictureinpicture: "disablePictureInPicture",
      disableremoteplayback: "disableRemotePlayback",
      download: "download",
      draggable: "draggable",
      enctype: "encType",
      enterkeyhint: "enterKeyHint",
      for: "htmlFor",
      form: "form",
      formmethod: "formMethod",
      formaction: "formAction",
      formenctype: "formEncType",
      formnovalidate: "formNoValidate",
      formtarget: "formTarget",
      frameborder: "frameBorder",
      headers: "headers",
      height: "height",
      hidden: "hidden",
      high: "high",
      href: "href",
      hreflang: "hrefLang",
      htmlfor: "htmlFor",
      httpequiv: "httpEquiv",
      "http-equiv": "httpEquiv",
      icon: "icon",
      id: "id",
      imagesizes: "imageSizes",
      imagesrcset: "imageSrcSet",
      innerhtml: "innerHTML",
      inputmode: "inputMode",
      integrity: "integrity",
      is: "is",
      itemid: "itemID",
      itemprop: "itemProp",
      itemref: "itemRef",
      itemscope: "itemScope",
      itemtype: "itemType",
      keyparams: "keyParams",
      keytype: "keyType",
      kind: "kind",
      label: "label",
      lang: "lang",
      list: "list",
      loop: "loop",
      low: "low",
      manifest: "manifest",
      marginwidth: "marginWidth",
      marginheight: "marginHeight",
      max: "max",
      maxlength: "maxLength",
      media: "media",
      mediagroup: "mediaGroup",
      method: "method",
      min: "min",
      minlength: "minLength",
      multiple: "multiple",
      muted: "muted",
      name: "name",
      nomodule: "noModule",
      nonce: "nonce",
      novalidate: "noValidate",
      open: "open",
      optimum: "optimum",
      pattern: "pattern",
      placeholder: "placeholder",
      playsinline: "playsInline",
      poster: "poster",
      preload: "preload",
      profile: "profile",
      radiogroup: "radioGroup",
      readonly: "readOnly",
      referrerpolicy: "referrerPolicy",
      rel: "rel",
      required: "required",
      reversed: "reversed",
      role: "role",
      rows: "rows",
      rowspan: "rowSpan",
      sandbox: "sandbox",
      scope: "scope",
      scoped: "scoped",
      scrolling: "scrolling",
      seamless: "seamless",
      selected: "selected",
      shape: "shape",
      size: "size",
      sizes: "sizes",
      span: "span",
      spellcheck: "spellCheck",
      src: "src",
      srcdoc: "srcDoc",
      srclang: "srcLang",
      srcset: "srcSet",
      start: "start",
      step: "step",
      style: "style",
      summary: "summary",
      tabindex: "tabIndex",
      target: "target",
      title: "title",
      type: "type",
      usemap: "useMap",
      value: "value",
      width: "width",
      wmode: "wmode",
      wrap: "wrap",
      // SVG
      about: "about",
      accentheight: "accentHeight",
      "accent-height": "accentHeight",
      accumulate: "accumulate",
      additive: "additive",
      alignmentbaseline: "alignmentBaseline",
      "alignment-baseline": "alignmentBaseline",
      allowreorder: "allowReorder",
      alphabetic: "alphabetic",
      amplitude: "amplitude",
      arabicform: "arabicForm",
      "arabic-form": "arabicForm",
      ascent: "ascent",
      attributename: "attributeName",
      attributetype: "attributeType",
      autoreverse: "autoReverse",
      azimuth: "azimuth",
      basefrequency: "baseFrequency",
      baselineshift: "baselineShift",
      "baseline-shift": "baselineShift",
      baseprofile: "baseProfile",
      bbox: "bbox",
      begin: "begin",
      bias: "bias",
      by: "by",
      calcmode: "calcMode",
      capheight: "capHeight",
      "cap-height": "capHeight",
      clip: "clip",
      clippath: "clipPath",
      "clip-path": "clipPath",
      clippathunits: "clipPathUnits",
      cliprule: "clipRule",
      "clip-rule": "clipRule",
      color: "color",
      colorinterpolation: "colorInterpolation",
      "color-interpolation": "colorInterpolation",
      colorinterpolationfilters: "colorInterpolationFilters",
      "color-interpolation-filters": "colorInterpolationFilters",
      colorprofile: "colorProfile",
      "color-profile": "colorProfile",
      colorrendering: "colorRendering",
      "color-rendering": "colorRendering",
      contentscripttype: "contentScriptType",
      contentstyletype: "contentStyleType",
      cursor: "cursor",
      cx: "cx",
      cy: "cy",
      d: "d",
      datatype: "datatype",
      decelerate: "decelerate",
      descent: "descent",
      diffuseconstant: "diffuseConstant",
      direction: "direction",
      display: "display",
      divisor: "divisor",
      dominantbaseline: "dominantBaseline",
      "dominant-baseline": "dominantBaseline",
      dur: "dur",
      dx: "dx",
      dy: "dy",
      edgemode: "edgeMode",
      elevation: "elevation",
      enablebackground: "enableBackground",
      "enable-background": "enableBackground",
      end: "end",
      exponent: "exponent",
      externalresourcesrequired: "externalResourcesRequired",
      fill: "fill",
      fillopacity: "fillOpacity",
      "fill-opacity": "fillOpacity",
      fillrule: "fillRule",
      "fill-rule": "fillRule",
      filter: "filter",
      filterres: "filterRes",
      filterunits: "filterUnits",
      floodopacity: "floodOpacity",
      "flood-opacity": "floodOpacity",
      floodcolor: "floodColor",
      "flood-color": "floodColor",
      focusable: "focusable",
      fontfamily: "fontFamily",
      "font-family": "fontFamily",
      fontsize: "fontSize",
      "font-size": "fontSize",
      fontsizeadjust: "fontSizeAdjust",
      "font-size-adjust": "fontSizeAdjust",
      fontstretch: "fontStretch",
      "font-stretch": "fontStretch",
      fontstyle: "fontStyle",
      "font-style": "fontStyle",
      fontvariant: "fontVariant",
      "font-variant": "fontVariant",
      fontweight: "fontWeight",
      "font-weight": "fontWeight",
      format: "format",
      from: "from",
      fx: "fx",
      fy: "fy",
      g1: "g1",
      g2: "g2",
      glyphname: "glyphName",
      "glyph-name": "glyphName",
      glyphorientationhorizontal: "glyphOrientationHorizontal",
      "glyph-orientation-horizontal": "glyphOrientationHorizontal",
      glyphorientationvertical: "glyphOrientationVertical",
      "glyph-orientation-vertical": "glyphOrientationVertical",
      glyphref: "glyphRef",
      gradienttransform: "gradientTransform",
      gradientunits: "gradientUnits",
      hanging: "hanging",
      horizadvx: "horizAdvX",
      "horiz-adv-x": "horizAdvX",
      horizoriginx: "horizOriginX",
      "horiz-origin-x": "horizOriginX",
      ideographic: "ideographic",
      imagerendering: "imageRendering",
      "image-rendering": "imageRendering",
      in2: "in2",
      in: "in",
      inlist: "inlist",
      intercept: "intercept",
      k1: "k1",
      k2: "k2",
      k3: "k3",
      k4: "k4",
      k: "k",
      kernelmatrix: "kernelMatrix",
      kernelunitlength: "kernelUnitLength",
      kerning: "kerning",
      keypoints: "keyPoints",
      keysplines: "keySplines",
      keytimes: "keyTimes",
      lengthadjust: "lengthAdjust",
      letterspacing: "letterSpacing",
      "letter-spacing": "letterSpacing",
      lightingcolor: "lightingColor",
      "lighting-color": "lightingColor",
      limitingconeangle: "limitingConeAngle",
      local: "local",
      markerend: "markerEnd",
      "marker-end": "markerEnd",
      markerheight: "markerHeight",
      markermid: "markerMid",
      "marker-mid": "markerMid",
      markerstart: "markerStart",
      "marker-start": "markerStart",
      markerunits: "markerUnits",
      markerwidth: "markerWidth",
      mask: "mask",
      maskcontentunits: "maskContentUnits",
      maskunits: "maskUnits",
      mathematical: "mathematical",
      mode: "mode",
      numoctaves: "numOctaves",
      offset: "offset",
      opacity: "opacity",
      operator: "operator",
      order: "order",
      orient: "orient",
      orientation: "orientation",
      origin: "origin",
      overflow: "overflow",
      overlineposition: "overlinePosition",
      "overline-position": "overlinePosition",
      overlinethickness: "overlineThickness",
      "overline-thickness": "overlineThickness",
      paintorder: "paintOrder",
      "paint-order": "paintOrder",
      panose1: "panose1",
      "panose-1": "panose1",
      pathlength: "pathLength",
      patterncontentunits: "patternContentUnits",
      patterntransform: "patternTransform",
      patternunits: "patternUnits",
      pointerevents: "pointerEvents",
      "pointer-events": "pointerEvents",
      points: "points",
      pointsatx: "pointsAtX",
      pointsaty: "pointsAtY",
      pointsatz: "pointsAtZ",
      prefix: "prefix",
      preservealpha: "preserveAlpha",
      preserveaspectratio: "preserveAspectRatio",
      primitiveunits: "primitiveUnits",
      property: "property",
      r: "r",
      radius: "radius",
      refx: "refX",
      refy: "refY",
      renderingintent: "renderingIntent",
      "rendering-intent": "renderingIntent",
      repeatcount: "repeatCount",
      repeatdur: "repeatDur",
      requiredextensions: "requiredExtensions",
      requiredfeatures: "requiredFeatures",
      resource: "resource",
      restart: "restart",
      result: "result",
      results: "results",
      rotate: "rotate",
      rx: "rx",
      ry: "ry",
      scale: "scale",
      security: "security",
      seed: "seed",
      shaperendering: "shapeRendering",
      "shape-rendering": "shapeRendering",
      slope: "slope",
      spacing: "spacing",
      specularconstant: "specularConstant",
      specularexponent: "specularExponent",
      speed: "speed",
      spreadmethod: "spreadMethod",
      startoffset: "startOffset",
      stddeviation: "stdDeviation",
      stemh: "stemh",
      stemv: "stemv",
      stitchtiles: "stitchTiles",
      stopcolor: "stopColor",
      "stop-color": "stopColor",
      stopopacity: "stopOpacity",
      "stop-opacity": "stopOpacity",
      strikethroughposition: "strikethroughPosition",
      "strikethrough-position": "strikethroughPosition",
      strikethroughthickness: "strikethroughThickness",
      "strikethrough-thickness": "strikethroughThickness",
      string: "string",
      stroke: "stroke",
      strokedasharray: "strokeDasharray",
      "stroke-dasharray": "strokeDasharray",
      strokedashoffset: "strokeDashoffset",
      "stroke-dashoffset": "strokeDashoffset",
      strokelinecap: "strokeLinecap",
      "stroke-linecap": "strokeLinecap",
      strokelinejoin: "strokeLinejoin",
      "stroke-linejoin": "strokeLinejoin",
      strokemiterlimit: "strokeMiterlimit",
      "stroke-miterlimit": "strokeMiterlimit",
      strokewidth: "strokeWidth",
      "stroke-width": "strokeWidth",
      strokeopacity: "strokeOpacity",
      "stroke-opacity": "strokeOpacity",
      suppresscontenteditablewarning: "suppressContentEditableWarning",
      suppresshydrationwarning: "suppressHydrationWarning",
      surfacescale: "surfaceScale",
      systemlanguage: "systemLanguage",
      tablevalues: "tableValues",
      targetx: "targetX",
      targety: "targetY",
      textanchor: "textAnchor",
      "text-anchor": "textAnchor",
      textdecoration: "textDecoration",
      "text-decoration": "textDecoration",
      textlength: "textLength",
      textrendering: "textRendering",
      "text-rendering": "textRendering",
      to: "to",
      transform: "transform",
      typeof: "typeof",
      u1: "u1",
      u2: "u2",
      underlineposition: "underlinePosition",
      "underline-position": "underlinePosition",
      underlinethickness: "underlineThickness",
      "underline-thickness": "underlineThickness",
      unicode: "unicode",
      unicodebidi: "unicodeBidi",
      "unicode-bidi": "unicodeBidi",
      unicoderange: "unicodeRange",
      "unicode-range": "unicodeRange",
      unitsperem: "unitsPerEm",
      "units-per-em": "unitsPerEm",
      unselectable: "unselectable",
      valphabetic: "vAlphabetic",
      "v-alphabetic": "vAlphabetic",
      values: "values",
      vectoreffect: "vectorEffect",
      "vector-effect": "vectorEffect",
      version: "version",
      vertadvy: "vertAdvY",
      "vert-adv-y": "vertAdvY",
      vertoriginx: "vertOriginX",
      "vert-origin-x": "vertOriginX",
      vertoriginy: "vertOriginY",
      "vert-origin-y": "vertOriginY",
      vhanging: "vHanging",
      "v-hanging": "vHanging",
      videographic: "vIdeographic",
      "v-ideographic": "vIdeographic",
      viewbox: "viewBox",
      viewtarget: "viewTarget",
      visibility: "visibility",
      vmathematical: "vMathematical",
      "v-mathematical": "vMathematical",
      vocab: "vocab",
      widths: "widths",
      wordspacing: "wordSpacing",
      "word-spacing": "wordSpacing",
      writingmode: "writingMode",
      "writing-mode": "writingMode",
      x1: "x1",
      x2: "x2",
      x: "x",
      xchannelselector: "xChannelSelector",
      xheight: "xHeight",
      "x-height": "xHeight",
      xlinkactuate: "xlinkActuate",
      "xlink:actuate": "xlinkActuate",
      xlinkarcrole: "xlinkArcrole",
      "xlink:arcrole": "xlinkArcrole",
      xlinkhref: "xlinkHref",
      "xlink:href": "xlinkHref",
      xlinkrole: "xlinkRole",
      "xlink:role": "xlinkRole",
      xlinkshow: "xlinkShow",
      "xlink:show": "xlinkShow",
      xlinktitle: "xlinkTitle",
      "xlink:title": "xlinkTitle",
      xlinktype: "xlinkType",
      "xlink:type": "xlinkType",
      xmlbase: "xmlBase",
      "xml:base": "xmlBase",
      xmllang: "xmlLang",
      "xml:lang": "xmlLang",
      xmlns: "xmlns",
      "xml:space": "xmlSpace",
      xmlnsxlink: "xmlnsXlink",
      "xmlns:xlink": "xmlnsXlink",
      xmlspace: "xmlSpace",
      y1: "y1",
      y2: "y2",
      y: "y",
      ychannelselector: "yChannelSelector",
      z: "z",
      zoomandpan: "zoomAndPan"
    }, ig = {
      "aria-current": 0,
      // state
      "aria-description": 0,
      "aria-details": 0,
      "aria-disabled": 0,
      // state
      "aria-hidden": 0,
      // state
      "aria-invalid": 0,
      // state
      "aria-keyshortcuts": 0,
      "aria-label": 0,
      "aria-roledescription": 0,
      // Widget Attributes
      "aria-autocomplete": 0,
      "aria-checked": 0,
      "aria-expanded": 0,
      "aria-haspopup": 0,
      "aria-level": 0,
      "aria-modal": 0,
      "aria-multiline": 0,
      "aria-multiselectable": 0,
      "aria-orientation": 0,
      "aria-placeholder": 0,
      "aria-pressed": 0,
      "aria-readonly": 0,
      "aria-required": 0,
      "aria-selected": 0,
      "aria-sort": 0,
      "aria-valuemax": 0,
      "aria-valuemin": 0,
      "aria-valuenow": 0,
      "aria-valuetext": 0,
      // Live Region Attributes
      "aria-atomic": 0,
      "aria-busy": 0,
      "aria-live": 0,
      "aria-relevant": 0,
      // Drag-and-Drop Attributes
      "aria-dropeffect": 0,
      "aria-grabbed": 0,
      // Relationship Attributes
      "aria-activedescendant": 0,
      "aria-colcount": 0,
      "aria-colindex": 0,
      "aria-colspan": 0,
      "aria-controls": 0,
      "aria-describedby": 0,
      "aria-errormessage": 0,
      "aria-flowto": 0,
      "aria-labelledby": 0,
      "aria-owns": 0,
      "aria-posinset": 0,
      "aria-rowcount": 0,
      "aria-rowindex": 0,
      "aria-rowspan": 0,
      "aria-setsize": 0
    }, $a = {}, jf = new RegExp("^(aria)-[" + et + "]*$"), ou = new RegExp("^(aria)[A-Z][" + et + "]*$");
    function Uf(t, o) {
      {
        if (le.call($a, o) && $a[o])
          return !0;
        if (ou.test(o)) {
          var l = "aria-" + o.slice(4).toLowerCase(), c = ig.hasOwnProperty(l) ? l : null;
          if (c == null)
            return m("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", o), $a[o] = !0, !0;
          if (o !== c)
            return m("Invalid ARIA attribute `%s`. Did you mean `%s`?", o, c), $a[o] = !0, !0;
        }
        if (jf.test(o)) {
          var p = o.toLowerCase(), g = ig.hasOwnProperty(p) ? p : null;
          if (g == null)
            return $a[o] = !0, !1;
          if (o !== g)
            return m("Unknown ARIA attribute `%s`. Did you mean `%s`?", o, g), $a[o] = !0, !0;
        }
      }
      return !0;
    }
    function sg(t, o) {
      {
        var l = [];
        for (var c in o) {
          var p = Uf(t, c);
          p || l.push(c);
        }
        var g = l.map(function(T) {
          return "`" + T + "`";
        }).join(", ");
        l.length === 1 ? m("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", g, t) : l.length > 1 && m("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", g, t);
      }
    }
    function Od(t, o) {
      vi(t, o) || sg(t, o);
    }
    var As = !1;
    function Vf(t, o) {
      {
        if (t !== "input" && t !== "textarea" && t !== "select")
          return;
        o != null && o.value === null && !As && (As = !0, t === "select" && o.multiple ? m("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", t) : m("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", t));
      }
    }
    var Hf = function() {
    };
    {
      var Lo = {}, Wf = /^on./, lg = /^on[^A-Z]/, cg = new RegExp("^(aria)-[" + et + "]*$"), ug = new RegExp("^(aria)[A-Z][" + et + "]*$");
      Hf = function(t, o, l, c) {
        if (le.call(Lo, o) && Lo[o])
          return !0;
        var p = o.toLowerCase();
        if (p === "onfocusin" || p === "onfocusout")
          return m("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."), Lo[o] = !0, !0;
        if (c != null) {
          var g = c.registrationNameDependencies, T = c.possibleRegistrationNames;
          if (g.hasOwnProperty(o))
            return !0;
          var N = T.hasOwnProperty(p) ? T[p] : null;
          if (N != null)
            return m("Invalid event handler property `%s`. Did you mean `%s`?", o, N), Lo[o] = !0, !0;
          if (Wf.test(o))
            return m("Unknown event handler property `%s`. It will be ignored.", o), Lo[o] = !0, !0;
        } else if (Wf.test(o))
          return lg.test(o) && m("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", o), Lo[o] = !0, !0;
        if (cg.test(o) || ug.test(o))
          return !0;
        if (p === "innerhtml")
          return m("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."), Lo[o] = !0, !0;
        if (p === "aria")
          return m("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead."), Lo[o] = !0, !0;
        if (p === "is" && l !== null && l !== void 0 && typeof l != "string")
          return m("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof l), Lo[o] = !0, !0;
        if (typeof l == "number" && isNaN(l))
          return m("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", o), Lo[o] = !0, !0;
        var I = nn(o), H = I !== null && I.type === At;
        if (Rd.hasOwnProperty(p)) {
          var W = Rd[p];
          if (W !== o)
            return m("Invalid DOM property `%s`. Did you mean `%s`?", o, W), Lo[o] = !0, !0;
        } else if (!H && o !== p)
          return m("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", o, p), Lo[o] = !0, !0;
        return typeof l == "boolean" && kt(o, l, I, !1) ? (l ? m('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', l, o, o, l, o) : m('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', l, o, o, l, o, o, o), Lo[o] = !0, !0) : H ? !0 : kt(o, l, I, !1) ? (Lo[o] = !0, !1) : ((l === "false" || l === "true") && I !== null && I.type === Qt && (m("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", l, o, l === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', o, l), Lo[o] = !0), !0);
      };
    }
    var dg = function(t, o, l) {
      {
        var c = [];
        for (var p in o) {
          var g = Hf(t, p, o[p], l);
          g || c.push(p);
        }
        var T = c.map(function(N) {
          return "`" + N + "`";
        }).join(", ");
        c.length === 1 ? m("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", T, t) : c.length > 1 && m("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", T, t);
      }
    };
    function pg(t, o, l) {
      vi(t, o) || dg(t, o, l);
    }
    var hi = 1, ru = 2, Bs = 4, iC = hi | ru | Bs, au = null;
    function iu(t) {
      au !== null && m("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue."), au = t;
    }
    function sC() {
      au === null && m("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue."), au = null;
    }
    function fg(t) {
      return t === au;
    }
    function wd(t) {
      var o = t.target || t.srcElement || window;
      return o.correspondingUseElement && (o = o.correspondingUseElement), o.nodeType === mi ? o.parentNode : o;
    }
    var Ln = null, Xi = null, gi = null;
    function Ul(t) {
      var o = mc(t);
      if (o) {
        if (typeof Ln != "function")
          throw new Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
        var l = o.stateNode;
        if (l) {
          var c = fy(l);
          Ln(o.stateNode, o.type, c);
        }
      }
    }
    function mg(t) {
      Ln = t;
    }
    function kd(t) {
      Xi ? gi ? gi.push(t) : gi = [t] : Xi = t;
    }
    function su() {
      return Xi !== null || gi !== null;
    }
    function lu() {
      if (Xi) {
        var t = Xi, o = gi;
        if (Xi = null, gi = null, Ul(t), o)
          for (var l = 0; l < o.length; l++)
            Ul(o[l]);
      }
    }
    var zs = function(t, o) {
      return t(o);
    }, Gf = function() {
    }, qf = !1;
    function lC() {
      var t = su();
      t && (Gf(), lu());
    }
    function Yf(t, o, l) {
      if (qf)
        return t(o, l);
      qf = !0;
      try {
        return zs(t, o, l);
      } finally {
        qf = !1, lC();
      }
    }
    function Nd(t, o, l) {
      zs = t, Gf = l;
    }
    function $d(t) {
      return t === "button" || t === "input" || t === "select" || t === "textarea";
    }
    function Kf(t, o, l) {
      switch (t) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
          return !!(l.disabled && $d(o));
        default:
          return !1;
      }
    }
    function Fs(t, o) {
      var l = t.stateNode;
      if (l === null)
        return null;
      var c = fy(l);
      if (c === null)
        return null;
      var p = c[o];
      if (Kf(o, t.type, c))
        return null;
      if (p && typeof p != "function")
        throw new Error("Expected `" + o + "` listener to be a function, instead got a value of `" + typeof p + "` type.");
      return p;
    }
    var cu = !1;
    if (nt)
      try {
        var js = {};
        Object.defineProperty(js, "passive", {
          get: function() {
            cu = !0;
          }
        }), window.addEventListener("test", js, js), window.removeEventListener("test", js, js);
      } catch {
        cu = !1;
      }
    function vg(t, o, l, c, p, g, T, N, I) {
      var H = Array.prototype.slice.call(arguments, 3);
      try {
        o.apply(l, H);
      } catch (W) {
        this.onError(W);
      }
    }
    var Xf = vg;
    if (typeof window < "u" && typeof window.dispatchEvent == "function" && typeof document < "u" && typeof document.createEvent == "function") {
      var Qf = document.createElement("react");
      Xf = function(o, l, c, p, g, T, N, I, H) {
        if (typeof document > "u" || document === null)
          throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
        var W = document.createEvent("Event"), se = !1, ae = !0, Te = window.event, Ee = Object.getOwnPropertyDescriptor(window, "event");
        function Pe() {
          Qf.removeEventListener(Le, Bt, !1), typeof window.event < "u" && window.hasOwnProperty("event") && (window.event = Te);
        }
        var xt = Array.prototype.slice.call(arguments, 3);
        function Bt() {
          se = !0, Pe(), l.apply(c, xt), ae = !1;
        }
        var Pt, fn = !1, un = !1;
        function ye(be) {
          if (Pt = be.error, fn = !0, Pt === null && be.colno === 0 && be.lineno === 0 && (un = !0), be.defaultPrevented && Pt != null && typeof Pt == "object")
            try {
              Pt._suppressLogging = !0;
            } catch {
            }
        }
        var Le = "react-" + (o || "invokeguardedcallback");
        if (window.addEventListener("error", ye), Qf.addEventListener(Le, Bt, !1), W.initEvent(Le, !1, !1), Qf.dispatchEvent(W), Ee && Object.defineProperty(window, "event", Ee), se && ae && (fn ? un && (Pt = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.")) : Pt = new Error(`An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the "Pause on exceptions" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.`), this.onError(Pt)), window.removeEventListener("error", ye), !se)
          return Pe(), vg.apply(this, arguments);
      };
    }
    var cC = Xf, Qi = !1, Ma = null, uu = !1, Zi = null, Ua = {
      onError: function(t) {
        Qi = !0, Ma = t;
      }
    };
    function Us(t, o, l, c, p, g, T, N, I) {
      Qi = !1, Ma = null, cC.apply(Ua, arguments);
    }
    function yi(t, o, l, c, p, g, T, N, I) {
      if (Us.apply(this, arguments), Qi) {
        var H = Jf();
        uu || (uu = !0, Zi = H);
      }
    }
    function Zf() {
      if (uu) {
        var t = Zi;
        throw uu = !1, Zi = null, t;
      }
    }
    function uC() {
      return Qi;
    }
    function Jf() {
      if (Qi) {
        var t = Ma;
        return Qi = !1, Ma = null, t;
      } else
        throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
    }
    function ia(t) {
      return t._reactInternals;
    }
    function du(t) {
      return t._reactInternals !== void 0;
    }
    function Vl(t, o) {
      t._reactInternals = o;
    }
    var _t = (
      /*                      */
      0
    ), Ji = (
      /*                */
      1
    ), Bn = (
      /*                    */
      2
    ), Zt = (
      /*                       */
      4
    ), Cn = (
      /*                */
      16
    ), xn = (
      /*                 */
      32
    ), Va = (
      /*                     */
      64
    ), Wt = (
      /*                   */
      128
    ), oo = (
      /*            */
      256
    ), Or = (
      /*                          */
      512
    ), sa = (
      /*                     */
      1024
    ), qn = (
      /*                      */
      2048
    ), la = (
      /*                    */
      4096
    ), es = (
      /*                   */
      8192
    ), pu = (
      /*             */
      16384
    ), Md = qn | Zt | Va | Or | sa | pu, hg = (
      /*               */
      32767
    ), Vr = (
      /*                   */
      32768
    ), Io = (
      /*                */
      65536
    ), fu = (
      /* */
      131072
    ), em = (
      /*                       */
      1048576
    ), tm = (
      /*                    */
      2097152
    ), wr = (
      /*                 */
      4194304
    ), ts = (
      /*                */
      8388608
    ), kr = (
      /*               */
      16777216
    ), Vs = (
      /*              */
      33554432
    ), Hl = (
      // TODO: Remove Update flag from before mutation phase by re-landing Visibility
      // flag logic (see #20043)
      Zt | sa | 0
    ), Nr = Bn | Zt | Cn | xn | Or | la | es, or = Zt | Va | Or | es, ca = qn | Cn, Vo = wr | ts | tm, bi = s.ReactCurrentOwner;
    function Hr(t) {
      var o = t, l = t;
      if (t.alternate)
        for (; o.return; )
          o = o.return;
      else {
        var c = o;
        do
          o = c, (o.flags & (Bn | la)) !== _t && (l = o.return), c = o.return;
        while (c);
      }
      return o.tag === k ? l : null;
    }
    function nm(t) {
      if (t.tag === U) {
        var o = t.memoizedState;
        if (o === null) {
          var l = t.alternate;
          l !== null && (o = l.memoizedState);
        }
        if (o !== null)
          return o.dehydrated;
      }
      return null;
    }
    function Dd(t) {
      return t.tag === k ? t.stateNode.containerInfo : null;
    }
    function om(t) {
      return Hr(t) === t;
    }
    function Wr(t) {
      {
        var o = bi.current;
        if (o !== null && o.tag === S) {
          var l = o, c = l.stateNode;
          c._warnedAboutRefsInRender || m("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", Xt(l) || "A component"), c._warnedAboutRefsInRender = !0;
        }
      }
      var p = ia(t);
      return p ? Hr(p) === p : !1;
    }
    function $r(t) {
      if (Hr(t) !== t)
        throw new Error("Unable to find node on an unmounted component.");
    }
    function zn(t) {
      var o = t.alternate;
      if (!o) {
        var l = Hr(t);
        if (l === null)
          throw new Error("Unable to find node on an unmounted component.");
        return l !== t ? null : t;
      }
      for (var c = t, p = o; ; ) {
        var g = c.return;
        if (g === null)
          break;
        var T = g.alternate;
        if (T === null) {
          var N = g.return;
          if (N !== null) {
            c = p = N;
            continue;
          }
          break;
        }
        if (g.child === T.child) {
          for (var I = g.child; I; ) {
            if (I === c)
              return $r(g), t;
            if (I === p)
              return $r(g), o;
            I = I.sibling;
          }
          throw new Error("Unable to find node on an unmounted component.");
        }
        if (c.return !== p.return)
          c = g, p = T;
        else {
          for (var H = !1, W = g.child; W; ) {
            if (W === c) {
              H = !0, c = g, p = T;
              break;
            }
            if (W === p) {
              H = !0, p = g, c = T;
              break;
            }
            W = W.sibling;
          }
          if (!H) {
            for (W = T.child; W; ) {
              if (W === c) {
                H = !0, c = T, p = g;
                break;
              }
              if (W === p) {
                H = !0, p = T, c = g;
                break;
              }
              W = W.sibling;
            }
            if (!H)
              throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
          }
        }
        if (c.alternate !== p)
          throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
      }
      if (c.tag !== k)
        throw new Error("Unable to find node on an unmounted component.");
      return c.stateNode.current === c ? t : o;
    }
    function ua(t) {
      var o = zn(t);
      return o !== null ? rm(o) : null;
    }
    function rm(t) {
      if (t.tag === M || t.tag === P)
        return t;
      for (var o = t.child; o !== null; ) {
        var l = rm(o);
        if (l !== null)
          return l;
        o = o.sibling;
      }
      return null;
    }
    function gg(t) {
      var o = zn(t);
      return o !== null ? Pd(o) : null;
    }
    function Pd(t) {
      if (t.tag === M || t.tag === P)
        return t;
      for (var o = t.child; o !== null; ) {
        if (o.tag !== D) {
          var l = Pd(o);
          if (l !== null)
            return l;
        }
        o = o.sibling;
      }
      return null;
    }
    var Ld = r.unstable_scheduleCallback, yg = r.unstable_cancelCallback, Id = r.unstable_shouldYield, bg = r.unstable_requestPaint, Qn = r.unstable_now, am = r.unstable_getCurrentPriorityLevel, _d = r.unstable_ImmediatePriority, Gr = r.unstable_UserBlockingPriority, Ha = r.unstable_NormalPriority, Ad = r.unstable_LowPriority, ns = r.unstable_IdlePriority, im = r.unstable_yieldValue, sm = r.unstable_setDisableYieldValue, os = null, _o = null, mt = null, lo = !1, Ho = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u";
    function lm(t) {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u")
        return !1;
      var o = __REACT_DEVTOOLS_GLOBAL_HOOK__;
      if (o.isDisabled)
        return !0;
      if (!o.supportsFiber)
        return m("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools"), !0;
      try {
        Ye && (t = ln({}, t, {
          getLaneLabelMap: as,
          injectProfilingHooks: xi
        })), os = o.inject(t), _o = o;
      } catch (l) {
        m("React instrumentation encountered an error: %s.", l);
      }
      return !!o.checkDCE;
    }
    function Cg(t, o) {
      if (_o && typeof _o.onScheduleFiberRoot == "function")
        try {
          _o.onScheduleFiberRoot(os, t, o);
        } catch (l) {
          lo || (lo = !0, m("React instrumentation encountered an error: %s", l));
        }
    }
    function Ci(t, o) {
      if (_o && typeof _o.onCommitFiberRoot == "function")
        try {
          var l = (t.current.flags & Wt) === Wt;
          if (ke) {
            var c;
            switch (o) {
              case rr:
                c = _d;
                break;
              case Wo:
                c = Gr;
                break;
              case Ti:
                c = Ha;
                break;
              case Su:
                c = ns;
                break;
              default:
                c = Ha;
                break;
            }
            _o.onCommitFiberRoot(os, t, c, l);
          }
        } catch (p) {
          lo || (lo = !0, m("React instrumentation encountered an error: %s", p));
        }
    }
    function rs(t) {
      if (_o && typeof _o.onPostCommitFiberRoot == "function")
        try {
          _o.onPostCommitFiberRoot(os, t);
        } catch (o) {
          lo || (lo = !0, m("React instrumentation encountered an error: %s", o));
        }
    }
    function cm(t) {
      if (_o && typeof _o.onCommitFiberUnmount == "function")
        try {
          _o.onCommitFiberUnmount(os, t);
        } catch (o) {
          lo || (lo = !0, m("React instrumentation encountered an error: %s", o));
        }
    }
    function So(t) {
      if (typeof im == "function" && (sm(t), f(t)), _o && typeof _o.setStrictMode == "function")
        try {
          _o.setStrictMode(os, t);
        } catch (o) {
          lo || (lo = !0, m("React instrumentation encountered an error: %s", o));
        }
    }
    function xi(t) {
      mt = t;
    }
    function as() {
      {
        for (var t = /* @__PURE__ */ new Map(), o = 1, l = 0; l < Fn; l++) {
          var c = dC(o);
          t.set(o, c), o *= 2;
        }
        return t;
      }
    }
    function Bd(t) {
      mt !== null && typeof mt.markCommitStarted == "function" && mt.markCommitStarted(t);
    }
    function um() {
      mt !== null && typeof mt.markCommitStopped == "function" && mt.markCommitStopped();
    }
    function is(t) {
      mt !== null && typeof mt.markComponentRenderStarted == "function" && mt.markComponentRenderStarted(t);
    }
    function Hs() {
      mt !== null && typeof mt.markComponentRenderStopped == "function" && mt.markComponentRenderStopped();
    }
    function xg(t) {
      mt !== null && typeof mt.markComponentPassiveEffectMountStarted == "function" && mt.markComponentPassiveEffectMountStarted(t);
    }
    function dm() {
      mt !== null && typeof mt.markComponentPassiveEffectMountStopped == "function" && mt.markComponentPassiveEffectMountStopped();
    }
    function zd(t) {
      mt !== null && typeof mt.markComponentPassiveEffectUnmountStarted == "function" && mt.markComponentPassiveEffectUnmountStarted(t);
    }
    function Sg() {
      mt !== null && typeof mt.markComponentPassiveEffectUnmountStopped == "function" && mt.markComponentPassiveEffectUnmountStopped();
    }
    function Tg(t) {
      mt !== null && typeof mt.markComponentLayoutEffectMountStarted == "function" && mt.markComponentLayoutEffectMountStarted(t);
    }
    function Eg() {
      mt !== null && typeof mt.markComponentLayoutEffectMountStopped == "function" && mt.markComponentLayoutEffectMountStopped();
    }
    function Fd(t) {
      mt !== null && typeof mt.markComponentLayoutEffectUnmountStarted == "function" && mt.markComponentLayoutEffectUnmountStarted(t);
    }
    function Wl() {
      mt !== null && typeof mt.markComponentLayoutEffectUnmountStopped == "function" && mt.markComponentLayoutEffectUnmountStopped();
    }
    function jd(t, o, l) {
      mt !== null && typeof mt.markComponentErrored == "function" && mt.markComponentErrored(t, o, l);
    }
    function Rg(t, o, l) {
      mt !== null && typeof mt.markComponentSuspended == "function" && mt.markComponentSuspended(t, o, l);
    }
    function Og(t) {
      mt !== null && typeof mt.markLayoutEffectsStarted == "function" && mt.markLayoutEffectsStarted(t);
    }
    function Gl() {
      mt !== null && typeof mt.markLayoutEffectsStopped == "function" && mt.markLayoutEffectsStopped();
    }
    function wg(t) {
      mt !== null && typeof mt.markPassiveEffectsStarted == "function" && mt.markPassiveEffectsStarted(t);
    }
    function mu() {
      mt !== null && typeof mt.markPassiveEffectsStopped == "function" && mt.markPassiveEffectsStopped();
    }
    function Da(t) {
      mt !== null && typeof mt.markRenderStarted == "function" && mt.markRenderStarted(t);
    }
    function vu() {
      mt !== null && typeof mt.markRenderYielded == "function" && mt.markRenderYielded();
    }
    function ql() {
      mt !== null && typeof mt.markRenderStopped == "function" && mt.markRenderStopped();
    }
    function Ws(t) {
      mt !== null && typeof mt.markRenderScheduled == "function" && mt.markRenderScheduled(t);
    }
    function pm(t, o) {
      mt !== null && typeof mt.markForceUpdateScheduled == "function" && mt.markForceUpdateScheduled(t, o);
    }
    function ss(t, o) {
      mt !== null && typeof mt.markStateUpdateScheduled == "function" && mt.markStateUpdateScheduled(t, o);
    }
    var Ft = (
      /*                         */
      0
    ), rn = (
      /*                 */
      1
    ), jt = (
      /*                    */
      2
    ), Zn = (
      /*               */
      8
    ), da = (
      /*              */
      16
    ), Ud = Math.clz32 ? Math.clz32 : Gs, Vd = Math.log, fm = Math.LN2;
    function Gs(t) {
      var o = t >>> 0;
      return o === 0 ? 32 : 31 - (Vd(o) / fm | 0) | 0;
    }
    var Fn = 31, Ae = (
      /*                        */
      0
    ), dn = (
      /*                          */
      0
    ), Vt = (
      /*                        */
      1
    ), Wa = (
      /*    */
      2
    ), qr = (
      /*             */
      4
    ), qs = (
      /*            */
      8
    ), jn = (
      /*                     */
      16
    ), Ys = (
      /*                */
      32
    ), ls = (
      /*                       */
      4194240
    ), Ks = (
      /*                        */
      64
    ), pa = (
      /*                        */
      128
    ), Mr = (
      /*                        */
      256
    ), Xs = (
      /*                        */
      512
    ), hu = (
      /*                        */
      1024
    ), gu = (
      /*                        */
      2048
    ), Hd = (
      /*                        */
      4096
    ), Wd = (
      /*                        */
      8192
    ), Gd = (
      /*                        */
      16384
    ), qd = (
      /*                       */
      32768
    ), Yd = (
      /*                       */
      65536
    ), Kd = (
      /*                       */
      131072
    ), Xd = (
      /*                       */
      262144
    ), Qd = (
      /*                       */
      524288
    ), Qs = (
      /*                       */
      1048576
    ), Zd = (
      /*                       */
      2097152
    ), Zs = (
      /*                            */
      130023424
    ), Si = (
      /*                             */
      4194304
    ), Jd = (
      /*                             */
      8388608
    ), yu = (
      /*                             */
      16777216
    ), ep = (
      /*                             */
      33554432
    ), tp = (
      /*                             */
      67108864
    ), mm = Si, Yl = (
      /*          */
      134217728
    ), np = (
      /*                          */
      268435455
    ), Kl = (
      /*               */
      268435456
    ), cs = (
      /*                        */
      536870912
    ), Dr = (
      /*                   */
      1073741824
    );
    function dC(t) {
      {
        if (t & Vt)
          return "Sync";
        if (t & Wa)
          return "InputContinuousHydration";
        if (t & qr)
          return "InputContinuous";
        if (t & qs)
          return "DefaultHydration";
        if (t & jn)
          return "Default";
        if (t & Ys)
          return "TransitionHydration";
        if (t & ls)
          return "Transition";
        if (t & Zs)
          return "Retry";
        if (t & Yl)
          return "SelectiveHydration";
        if (t & Kl)
          return "IdleHydration";
        if (t & cs)
          return "Idle";
        if (t & Dr)
          return "Offscreen";
      }
    }
    var In = -1, op = Ks, rp = Si;
    function Xl(t) {
      switch (go(t)) {
        case Vt:
          return Vt;
        case Wa:
          return Wa;
        case qr:
          return qr;
        case qs:
          return qs;
        case jn:
          return jn;
        case Ys:
          return Ys;
        case Ks:
        case pa:
        case Mr:
        case Xs:
        case hu:
        case gu:
        case Hd:
        case Wd:
        case Gd:
        case qd:
        case Yd:
        case Kd:
        case Xd:
        case Qd:
        case Qs:
        case Zd:
          return t & ls;
        case Si:
        case Jd:
        case yu:
        case ep:
        case tp:
          return t & Zs;
        case Yl:
          return Yl;
        case Kl:
          return Kl;
        case cs:
          return cs;
        case Dr:
          return Dr;
        default:
          return m("Should have found matching lanes. This is a bug in React."), t;
      }
    }
    function bu(t, o) {
      var l = t.pendingLanes;
      if (l === Ae)
        return Ae;
      var c = Ae, p = t.suspendedLanes, g = t.pingedLanes, T = l & np;
      if (T !== Ae) {
        var N = T & ~p;
        if (N !== Ae)
          c = Xl(N);
        else {
          var I = T & g;
          I !== Ae && (c = Xl(I));
        }
      } else {
        var H = l & ~p;
        H !== Ae ? c = Xl(H) : g !== Ae && (c = Xl(g));
      }
      if (c === Ae)
        return Ae;
      if (o !== Ae && o !== c && // If we already suspended with a delay, then interrupting is fine. Don't
      // bother waiting until the root is complete.
      (o & p) === Ae) {
        var W = go(c), se = go(o);
        if (
          // Tests whether the next lane is equal or lower priority than the wip
          // one. This works because the bits decrease in priority as you go left.
          W >= se || // Default priority updates should not interrupt transition updates. The
          // only difference between default updates and transition updates is that
          // default updates do not support refresh transitions.
          W === jn && (se & ls) !== Ae
        )
          return o;
      }
      (c & qr) !== Ae && (c |= l & jn);
      var ae = t.entangledLanes;
      if (ae !== Ae)
        for (var Te = t.entanglements, Ee = c & ae; Ee > 0; ) {
          var Pe = us(Ee), xt = 1 << Pe;
          c |= Te[Pe], Ee &= ~xt;
        }
      return c;
    }
    function kg(t, o) {
      for (var l = t.eventTimes, c = In; o > 0; ) {
        var p = us(o), g = 1 << p, T = l[p];
        T > c && (c = T), o &= ~g;
      }
      return c;
    }
    function ap(t, o) {
      switch (t) {
        case Vt:
        case Wa:
        case qr:
          return o + 250;
        case qs:
        case jn:
        case Ys:
        case Ks:
        case pa:
        case Mr:
        case Xs:
        case hu:
        case gu:
        case Hd:
        case Wd:
        case Gd:
        case qd:
        case Yd:
        case Kd:
        case Xd:
        case Qd:
        case Qs:
        case Zd:
          return o + 5e3;
        case Si:
        case Jd:
        case yu:
        case ep:
        case tp:
          return In;
        case Yl:
        case Kl:
        case cs:
        case Dr:
          return In;
        default:
          return m("Should have found matching lanes. This is a bug in React."), In;
      }
    }
    function pC(t, o) {
      for (var l = t.pendingLanes, c = t.suspendedLanes, p = t.pingedLanes, g = t.expirationTimes, T = l; T > 0; ) {
        var N = us(T), I = 1 << N, H = g[N];
        H === In ? ((I & c) === Ae || (I & p) !== Ae) && (g[N] = ap(I, o)) : H <= o && (t.expiredLanes |= I), T &= ~I;
      }
    }
    function fC(t) {
      return Xl(t.pendingLanes);
    }
    function vm(t) {
      var o = t.pendingLanes & ~Dr;
      return o !== Ae ? o : o & Dr ? Dr : Ae;
    }
    function Ql(t) {
      return (t & Vt) !== Ae;
    }
    function Cu(t) {
      return (t & np) !== Ae;
    }
    function ip(t) {
      return (t & Zs) === t;
    }
    function mC(t) {
      var o = Vt | qr | jn;
      return (t & o) === Ae;
    }
    function Ng(t) {
      return (t & ls) === t;
    }
    function xu(t, o) {
      var l = Wa | qr | qs | jn;
      return (o & l) !== Ae;
    }
    function $g(t, o) {
      return (o & t.expiredLanes) !== Ae;
    }
    function hm(t) {
      return (t & ls) !== Ae;
    }
    function gm() {
      var t = op;
      return op <<= 1, (op & ls) === Ae && (op = Ks), t;
    }
    function vC() {
      var t = rp;
      return rp <<= 1, (rp & Zs) === Ae && (rp = Si), t;
    }
    function go(t) {
      return t & -t;
    }
    function To(t) {
      return go(t);
    }
    function us(t) {
      return 31 - Ud(t);
    }
    function sp(t) {
      return us(t);
    }
    function Pr(t, o) {
      return (t & o) !== Ae;
    }
    function Js(t, o) {
      return (t & o) === o;
    }
    function Jt(t, o) {
      return t | o;
    }
    function Zl(t, o) {
      return t & ~o;
    }
    function ym(t, o) {
      return t & o;
    }
    function Mg(t) {
      return t;
    }
    function Dg(t, o) {
      return t !== dn && t < o ? t : o;
    }
    function lp(t) {
      for (var o = [], l = 0; l < Fn; l++)
        o.push(t);
      return o;
    }
    function el(t, o, l) {
      t.pendingLanes |= o, o !== cs && (t.suspendedLanes = Ae, t.pingedLanes = Ae);
      var c = t.eventTimes, p = sp(o);
      c[p] = l;
    }
    function bm(t, o) {
      t.suspendedLanes |= o, t.pingedLanes &= ~o;
      for (var l = t.expirationTimes, c = o; c > 0; ) {
        var p = us(c), g = 1 << p;
        l[p] = In, c &= ~g;
      }
    }
    function Cm(t, o, l) {
      t.pingedLanes |= t.suspendedLanes & o;
    }
    function xm(t, o) {
      var l = t.pendingLanes & ~o;
      t.pendingLanes = o, t.suspendedLanes = Ae, t.pingedLanes = Ae, t.expiredLanes &= o, t.mutableReadLanes &= o, t.entangledLanes &= o;
      for (var c = t.entanglements, p = t.eventTimes, g = t.expirationTimes, T = l; T > 0; ) {
        var N = us(T), I = 1 << N;
        c[N] = Ae, p[N] = In, g[N] = In, T &= ~I;
      }
    }
    function Jl(t, o) {
      for (var l = t.entangledLanes |= o, c = t.entanglements, p = l; p; ) {
        var g = us(p), T = 1 << g;
        // Is this one of the newly entangled lanes?
        T & o | // Is this lane transitively entangled with the newly entangled lanes?
        c[g] & o && (c[g] |= o), p &= ~T;
      }
    }
    function hC(t, o) {
      var l = go(o), c;
      switch (l) {
        case qr:
          c = Wa;
          break;
        case jn:
          c = qs;
          break;
        case Ks:
        case pa:
        case Mr:
        case Xs:
        case hu:
        case gu:
        case Hd:
        case Wd:
        case Gd:
        case qd:
        case Yd:
        case Kd:
        case Xd:
        case Qd:
        case Qs:
        case Zd:
        case Si:
        case Jd:
        case yu:
        case ep:
        case tp:
          c = Ys;
          break;
        case cs:
          c = Kl;
          break;
        default:
          c = dn;
          break;
      }
      return (c & (t.suspendedLanes | o)) !== dn ? dn : c;
    }
    function Sm(t, o, l) {
      if (Ho)
        for (var c = t.pendingUpdatersLaneMap; l > 0; ) {
          var p = sp(l), g = 1 << p, T = c[p];
          T.add(o), l &= ~g;
        }
    }
    function cp(t, o) {
      if (Ho)
        for (var l = t.pendingUpdatersLaneMap, c = t.memoizedUpdaters; o > 0; ) {
          var p = sp(o), g = 1 << p, T = l[p];
          T.size > 0 && (T.forEach(function(N) {
            var I = N.alternate;
            (I === null || !c.has(I)) && c.add(N);
          }), T.clear()), o &= ~g;
        }
    }
    function Tm(t, o) {
      return null;
    }
    var rr = Vt, Wo = qr, Ti = jn, Su = cs, tl = dn;
    function fa() {
      return tl;
    }
    function Eo(t) {
      tl = t;
    }
    function Tu(t, o) {
      var l = tl;
      try {
        return tl = t, o();
      } finally {
        tl = l;
      }
    }
    function ar(t, o) {
      return t !== 0 && t < o ? t : o;
    }
    function gC(t, o) {
      return t === 0 || t > o ? t : o;
    }
    function Em(t, o) {
      return t !== 0 && t < o;
    }
    function Eu(t) {
      var o = go(t);
      return Em(rr, o) ? Em(Wo, o) ? Cu(o) ? Ti : Su : Wo : rr;
    }
    function Ro(t) {
      var o = t.current.memoizedState;
      return o.isDehydrated;
    }
    var Pg;
    function Et(t) {
      Pg = t;
    }
    function ec(t) {
      Pg(t);
    }
    var Ru;
    function Lg(t) {
      Ru = t;
    }
    var Ig;
    function Ou(t) {
      Ig = t;
    }
    var wu;
    function Rm(t) {
      wu = t;
    }
    var Om;
    function _g(t) {
      Om = t;
    }
    var up = !1, tc = [], Ga = null, Yn = null, Ao = null, ma = /* @__PURE__ */ new Map(), nc = /* @__PURE__ */ new Map(), Ei = [], Pa = [
      "mousedown",
      "mouseup",
      "touchcancel",
      "touchend",
      "touchstart",
      "auxclick",
      "dblclick",
      "pointercancel",
      "pointerdown",
      "pointerup",
      "dragend",
      "dragstart",
      "drop",
      "compositionend",
      "compositionstart",
      "keydown",
      "keypress",
      "keyup",
      "input",
      "textInput",
      // Intentionally camelCase
      "copy",
      "cut",
      "paste",
      "click",
      "change",
      "contextmenu",
      "reset",
      "submit"
    ];
    function Ag(t) {
      return Pa.indexOf(t) > -1;
    }
    function qa(t, o, l, c, p) {
      return {
        blockedOn: t,
        domEventName: o,
        eventSystemFlags: l,
        nativeEvent: p,
        targetContainers: [c]
      };
    }
    function Bg(t, o) {
      switch (t) {
        case "focusin":
        case "focusout":
          Ga = null;
          break;
        case "dragenter":
        case "dragleave":
          Yn = null;
          break;
        case "mouseover":
        case "mouseout":
          Ao = null;
          break;
        case "pointerover":
        case "pointerout": {
          var l = o.pointerId;
          ma.delete(l);
          break;
        }
        case "gotpointercapture":
        case "lostpointercapture": {
          var c = o.pointerId;
          nc.delete(c);
          break;
        }
      }
    }
    function oc(t, o, l, c, p, g) {
      if (t === null || t.nativeEvent !== g) {
        var T = qa(o, l, c, p, g);
        if (o !== null) {
          var N = mc(o);
          N !== null && Ru(N);
        }
        return T;
      }
      t.eventSystemFlags |= c;
      var I = t.targetContainers;
      return p !== null && I.indexOf(p) === -1 && I.push(p), t;
    }
    function zg(t, o, l, c, p) {
      switch (o) {
        case "focusin": {
          var g = p;
          return Ga = oc(Ga, t, o, l, c, g), !0;
        }
        case "dragenter": {
          var T = p;
          return Yn = oc(Yn, t, o, l, c, T), !0;
        }
        case "mouseover": {
          var N = p;
          return Ao = oc(Ao, t, o, l, c, N), !0;
        }
        case "pointerover": {
          var I = p, H = I.pointerId;
          return ma.set(H, oc(ma.get(H) || null, t, o, l, c, I)), !0;
        }
        case "gotpointercapture": {
          var W = p, se = W.pointerId;
          return nc.set(se, oc(nc.get(se) || null, t, o, l, c, W)), !0;
        }
      }
      return !1;
    }
    function wm(t) {
      var o = _u(t.target);
      if (o !== null) {
        var l = Hr(o);
        if (l !== null) {
          var c = l.tag;
          if (c === U) {
            var p = nm(l);
            if (p !== null) {
              t.blockedOn = p, Om(t.priority, function() {
                Ig(l);
              });
              return;
            }
          } else if (c === k) {
            var g = l.stateNode;
            if (Ro(g)) {
              t.blockedOn = Dd(l);
              return;
            }
          }
        }
      }
      t.blockedOn = null;
    }
    function Fg(t) {
      for (var o = wu(), l = {
        blockedOn: null,
        target: t,
        priority: o
      }, c = 0; c < Ei.length && Em(o, Ei[c].priority); c++)
        ;
      Ei.splice(c, 0, l), c === 0 && wm(l);
    }
    function dp(t) {
      if (t.blockedOn !== null)
        return !1;
      for (var o = t.targetContainers; o.length > 0; ) {
        var l = o[0], c = nl(t.domEventName, t.eventSystemFlags, l, t.nativeEvent);
        if (c === null) {
          var p = t.nativeEvent, g = new p.constructor(p.type, p);
          iu(g), p.target.dispatchEvent(g), sC();
        } else {
          var T = mc(c);
          return T !== null && Ru(T), t.blockedOn = c, !1;
        }
        o.shift();
      }
      return !0;
    }
    function ku(t, o, l) {
      dp(t) && l.delete(o);
    }
    function km() {
      up = !1, Ga !== null && dp(Ga) && (Ga = null), Yn !== null && dp(Yn) && (Yn = null), Ao !== null && dp(Ao) && (Ao = null), ma.forEach(ku), nc.forEach(ku);
    }
    function ir(t, o) {
      t.blockedOn === o && (t.blockedOn = null, up || (up = !0, r.unstable_scheduleCallback(r.unstable_NormalPriority, km)));
    }
    function cn(t) {
      if (tc.length > 0) {
        ir(tc[0], t);
        for (var o = 1; o < tc.length; o++) {
          var l = tc[o];
          l.blockedOn === t && (l.blockedOn = null);
        }
      }
      Ga !== null && ir(Ga, t), Yn !== null && ir(Yn, t), Ao !== null && ir(Ao, t);
      var c = function(N) {
        return ir(N, t);
      };
      ma.forEach(c), nc.forEach(c);
      for (var p = 0; p < Ei.length; p++) {
        var g = Ei[p];
        g.blockedOn === t && (g.blockedOn = null);
      }
      for (; Ei.length > 0; ) {
        var T = Ei[0];
        if (T.blockedOn !== null)
          break;
        wm(T), T.blockedOn === null && Ei.shift();
      }
    }
    var Jn = s.ReactCurrentBatchConfig, ro = !0;
    function Bo(t) {
      ro = !!t;
    }
    function Yr() {
      return ro;
    }
    function rc(t, o, l) {
      var c = pr(o), p;
      switch (c) {
        case rr:
          p = Oo;
          break;
        case Wo:
          p = Nu;
          break;
        case Ti:
        default:
          p = Ri;
          break;
      }
      return p.bind(null, o, l, t);
    }
    function Oo(t, o, l, c) {
      var p = fa(), g = Jn.transition;
      Jn.transition = null;
      try {
        Eo(rr), Ri(t, o, l, c);
      } finally {
        Eo(p), Jn.transition = g;
      }
    }
    function Nu(t, o, l, c) {
      var p = fa(), g = Jn.transition;
      Jn.transition = null;
      try {
        Eo(Wo), Ri(t, o, l, c);
      } finally {
        Eo(p), Jn.transition = g;
      }
    }
    function Ri(t, o, l, c) {
      ro && pp(t, o, l, c);
    }
    function pp(t, o, l, c) {
      var p = nl(t, o, l, c);
      if (p === null) {
        AC(t, o, c, ac, l), Bg(t, c);
        return;
      }
      if (zg(p, t, o, l, c)) {
        c.stopPropagation();
        return;
      }
      if (Bg(t, c), o & Bs && Ag(t)) {
        for (; p !== null; ) {
          var g = mc(p);
          g !== null && ec(g);
          var T = nl(t, o, l, c);
          if (T === null && AC(t, o, c, ac, l), T === p)
            break;
          p = T;
        }
        p !== null && c.stopPropagation();
        return;
      }
      AC(t, o, c, null, l);
    }
    var ac = null;
    function nl(t, o, l, c) {
      ac = null;
      var p = wd(c), g = _u(p);
      if (g !== null) {
        var T = Hr(g);
        if (T === null)
          g = null;
        else {
          var N = T.tag;
          if (N === U) {
            var I = nm(T);
            if (I !== null)
              return I;
            g = null;
          } else if (N === k) {
            var H = T.stateNode;
            if (Ro(H))
              return Dd(T);
            g = null;
          } else
            T !== g && (g = null);
        }
      }
      return ac = g, null;
    }
    function pr(t) {
      switch (t) {
        case "cancel":
        case "click":
        case "close":
        case "contextmenu":
        case "copy":
        case "cut":
        case "auxclick":
        case "dblclick":
        case "dragend":
        case "dragstart":
        case "drop":
        case "focusin":
        case "focusout":
        case "input":
        case "invalid":
        case "keydown":
        case "keypress":
        case "keyup":
        case "mousedown":
        case "mouseup":
        case "paste":
        case "pause":
        case "play":
        case "pointercancel":
        case "pointerdown":
        case "pointerup":
        case "ratechange":
        case "reset":
        case "resize":
        case "seeked":
        case "submit":
        case "touchcancel":
        case "touchend":
        case "touchstart":
        case "volumechange":
        case "change":
        case "selectionchange":
        case "textInput":
        case "compositionstart":
        case "compositionend":
        case "compositionupdate":
        case "beforeblur":
        case "afterblur":
        case "beforeinput":
        case "blur":
        case "fullscreenchange":
        case "focus":
        case "hashchange":
        case "popstate":
        case "select":
        case "selectstart":
          return rr;
        case "drag":
        case "dragenter":
        case "dragexit":
        case "dragleave":
        case "dragover":
        case "mousemove":
        case "mouseout":
        case "mouseover":
        case "pointermove":
        case "pointerout":
        case "pointerover":
        case "scroll":
        case "toggle":
        case "touchmove":
        case "wheel":
        case "mouseenter":
        case "mouseleave":
        case "pointerenter":
        case "pointerleave":
          return Wo;
        case "message": {
          var o = am();
          switch (o) {
            case _d:
              return rr;
            case Gr:
              return Wo;
            case Ha:
            case Ad:
              return Ti;
            case ns:
              return Su;
            default:
              return Ti;
          }
        }
        default:
          return Ti;
      }
    }
    function Nm(t, o, l) {
      return t.addEventListener(o, l, !1), l;
    }
    function ic(t, o, l) {
      return t.addEventListener(o, l, !0), l;
    }
    function Oi(t, o, l, c) {
      return t.addEventListener(o, l, {
        capture: !0,
        passive: c
      }), l;
    }
    function fp(t, o, l, c) {
      return t.addEventListener(o, l, {
        passive: c
      }), l;
    }
    var ol = null, Ya = null, ds = null;
    function ps(t) {
      return ol = t, Ya = vp(), !0;
    }
    function mp() {
      ol = null, Ya = null, ds = null;
    }
    function sc() {
      if (ds)
        return ds;
      var t, o = Ya, l = o.length, c, p = vp(), g = p.length;
      for (t = 0; t < l && o[t] === p[t]; t++)
        ;
      var T = l - t;
      for (c = 1; c <= T && o[l - c] === p[g - c]; c++)
        ;
      var N = c > 1 ? 1 - c : void 0;
      return ds = p.slice(t, N), ds;
    }
    function vp() {
      return "value" in ol ? ol.value : ol.textContent;
    }
    function rl(t) {
      var o, l = t.keyCode;
      return "charCode" in t ? (o = t.charCode, o === 0 && l === 13 && (o = 13)) : o = l, o === 10 && (o = 13), o >= 32 || o === 13 ? o : 0;
    }
    function al() {
      return !0;
    }
    function sr() {
      return !1;
    }
    function yo(t) {
      function o(l, c, p, g, T) {
        this._reactName = l, this._targetInst = p, this.type = c, this.nativeEvent = g, this.target = T, this.currentTarget = null;
        for (var N in t)
          if (t.hasOwnProperty(N)) {
            var I = t[N];
            I ? this[N] = I(g) : this[N] = g[N];
          }
        var H = g.defaultPrevented != null ? g.defaultPrevented : g.returnValue === !1;
        return H ? this.isDefaultPrevented = al : this.isDefaultPrevented = sr, this.isPropagationStopped = sr, this;
      }
      return ln(o.prototype, {
        preventDefault: function() {
          this.defaultPrevented = !0;
          var l = this.nativeEvent;
          l && (l.preventDefault ? l.preventDefault() : typeof l.returnValue != "unknown" && (l.returnValue = !1), this.isDefaultPrevented = al);
        },
        stopPropagation: function() {
          var l = this.nativeEvent;
          l && (l.stopPropagation ? l.stopPropagation() : typeof l.cancelBubble != "unknown" && (l.cancelBubble = !0), this.isPropagationStopped = al);
        },
        /**
         * We release all dispatched `SyntheticEvent`s after each event loop, adding
         * them back into the pool. This allows a way to hold onto a reference that
         * won't be added back into the pool.
         */
        persist: function() {
        },
        /**
         * Checks if this event should be released back into the pool.
         *
         * @return {boolean} True if this should not be released, false otherwise.
         */
        isPersistent: al
      }), o;
    }
    var lr = {
      eventPhase: 0,
      bubbles: 0,
      cancelable: 0,
      timeStamp: function(t) {
        return t.timeStamp || Date.now();
      },
      defaultPrevented: 0,
      isTrusted: 0
    }, cr = yo(lr), lc = ln({}, lr, {
      view: 0,
      detail: 0
    }), $m = yo(lc), $u, Mm, va;
    function jg(t) {
      t !== va && (va && t.type === "mousemove" ? ($u = t.screenX - va.screenX, Mm = t.screenY - va.screenY) : ($u = 0, Mm = 0), va = t);
    }
    var cc = ln({}, lc, {
      screenX: 0,
      screenY: 0,
      clientX: 0,
      clientY: 0,
      pageX: 0,
      pageY: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      getModifierState: yp,
      button: 0,
      buttons: 0,
      relatedTarget: function(t) {
        return t.relatedTarget === void 0 ? t.fromElement === t.srcElement ? t.toElement : t.fromElement : t.relatedTarget;
      },
      movementX: function(t) {
        return "movementX" in t ? t.movementX : (jg(t), $u);
      },
      movementY: function(t) {
        return "movementY" in t ? t.movementY : Mm;
      }
    }), fs = yo(cc), Dm = ln({}, cc, {
      dataTransfer: 0
    }), il = yo(Dm), Ug = ln({}, lc, {
      relatedTarget: 0
    }), hp = yo(Ug), Pm = ln({}, lr, {
      animationName: 0,
      elapsedTime: 0,
      pseudoElement: 0
    }), gp = yo(Pm), yC = ln({}, lr, {
      clipboardData: function(t) {
        return "clipboardData" in t ? t.clipboardData : window.clipboardData;
      }
    }), bC = yo(yC), Vg = ln({}, lr, {
      data: 0
    }), Lm = yo(Vg), sl = Lm, CC = {
      Esc: "Escape",
      Spacebar: " ",
      Left: "ArrowLeft",
      Up: "ArrowUp",
      Right: "ArrowRight",
      Down: "ArrowDown",
      Del: "Delete",
      Win: "OS",
      Menu: "ContextMenu",
      Apps: "ContextMenu",
      Scroll: "ScrollLock",
      MozPrintableKey: "Unidentified"
    }, uc = {
      8: "Backspace",
      9: "Tab",
      12: "Clear",
      13: "Enter",
      16: "Shift",
      17: "Control",
      18: "Alt",
      19: "Pause",
      20: "CapsLock",
      27: "Escape",
      32: " ",
      33: "PageUp",
      34: "PageDown",
      35: "End",
      36: "Home",
      37: "ArrowLeft",
      38: "ArrowUp",
      39: "ArrowRight",
      40: "ArrowDown",
      45: "Insert",
      46: "Delete",
      112: "F1",
      113: "F2",
      114: "F3",
      115: "F4",
      116: "F5",
      117: "F6",
      118: "F7",
      119: "F8",
      120: "F9",
      121: "F10",
      122: "F11",
      123: "F12",
      144: "NumLock",
      145: "ScrollLock",
      224: "Meta"
    };
    function Hg(t) {
      if (t.key) {
        var o = CC[t.key] || t.key;
        if (o !== "Unidentified")
          return o;
      }
      if (t.type === "keypress") {
        var l = rl(t);
        return l === 13 ? "Enter" : String.fromCharCode(l);
      }
      return t.type === "keydown" || t.type === "keyup" ? uc[t.keyCode] || "Unidentified" : "";
    }
    var ao = {
      Alt: "altKey",
      Control: "ctrlKey",
      Meta: "metaKey",
      Shift: "shiftKey"
    };
    function xC(t) {
      var o = this, l = o.nativeEvent;
      if (l.getModifierState)
        return l.getModifierState(t);
      var c = ao[t];
      return c ? !!l[c] : !1;
    }
    function yp(t) {
      return xC;
    }
    var SC = ln({}, lc, {
      key: Hg,
      code: 0,
      location: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      repeat: 0,
      locale: 0,
      getModifierState: yp,
      // Legacy Interface
      charCode: function(t) {
        return t.type === "keypress" ? rl(t) : 0;
      },
      keyCode: function(t) {
        return t.type === "keydown" || t.type === "keyup" ? t.keyCode : 0;
      },
      which: function(t) {
        return t.type === "keypress" ? rl(t) : t.type === "keydown" || t.type === "keyup" ? t.keyCode : 0;
      }
    }), TC = yo(SC), Wg = ln({}, cc, {
      pointerId: 0,
      width: 0,
      height: 0,
      pressure: 0,
      tangentialPressure: 0,
      tiltX: 0,
      tiltY: 0,
      twist: 0,
      pointerType: 0,
      isPrimary: 0
    }), Im = yo(Wg), EC = ln({}, lc, {
      touches: 0,
      targetTouches: 0,
      changedTouches: 0,
      altKey: 0,
      metaKey: 0,
      ctrlKey: 0,
      shiftKey: 0,
      getModifierState: yp
    }), ha = yo(EC), _m = ln({}, lr, {
      propertyName: 0,
      elapsedTime: 0,
      pseudoElement: 0
    }), RC = yo(_m), ms = ln({}, cc, {
      deltaX: function(t) {
        return "deltaX" in t ? t.deltaX : (
          // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
          "wheelDeltaX" in t ? -t.wheelDeltaX : 0
        );
      },
      deltaY: function(t) {
        return "deltaY" in t ? t.deltaY : (
          // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
          "wheelDeltaY" in t ? -t.wheelDeltaY : (
            // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
            "wheelDelta" in t ? -t.wheelDelta : 0
          )
        );
      },
      deltaZ: 0,
      // Browsers without "deltaMode" is reporting in raw wheel delta where one
      // notch on the scroll is always +/- 120, roughly equivalent to pixels.
      // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
      // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
      deltaMode: 0
    }), bp = yo(ms), ll = [9, 13, 27, 32], Mu = 229, Du = nt && "CompositionEvent" in window, cl = null;
    nt && "documentMode" in document && (cl = document.documentMode);
    var OC = nt && "TextEvent" in window && !cl, Cp = nt && (!Du || cl && cl > 8 && cl <= 11), Gg = 32, Am = String.fromCharCode(Gg);
    function qg() {
      Xe("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), Xe("onCompositionEnd", ["compositionend", "focusout", "keydown", "keypress", "keyup", "mousedown"]), Xe("onCompositionStart", ["compositionstart", "focusout", "keydown", "keypress", "keyup", "mousedown"]), Xe("onCompositionUpdate", ["compositionupdate", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
    }
    var Pu = !1;
    function xp(t) {
      return (t.ctrlKey || t.altKey || t.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
      !(t.ctrlKey && t.altKey);
    }
    function Yg(t) {
      switch (t) {
        case "compositionstart":
          return "onCompositionStart";
        case "compositionend":
          return "onCompositionEnd";
        case "compositionupdate":
          return "onCompositionUpdate";
      }
    }
    function Bm(t, o) {
      return t === "keydown" && o.keyCode === Mu;
    }
    function Kg(t, o) {
      switch (t) {
        case "keyup":
          return ll.indexOf(o.keyCode) !== -1;
        case "keydown":
          return o.keyCode !== Mu;
        case "keypress":
        case "mousedown":
        case "focusout":
          return !0;
        default:
          return !1;
      }
    }
    function zm(t) {
      var o = t.detail;
      return typeof o == "object" && "data" in o ? o.data : null;
    }
    function Sp(t) {
      return t.locale === "ko";
    }
    var wi = !1;
    function Fm(t, o, l, c, p) {
      var g, T;
      if (Du ? g = Yg(o) : wi ? Kg(o, c) && (g = "onCompositionEnd") : Bm(o, c) && (g = "onCompositionStart"), !g)
        return null;
      Cp && !Sp(c) && (!wi && g === "onCompositionStart" ? wi = ps(p) : g === "onCompositionEnd" && wi && (T = sc()));
      var N = ey(l, g);
      if (N.length > 0) {
        var I = new Lm(g, o, null, c, p);
        if (t.push({
          event: I,
          listeners: N
        }), T)
          I.data = T;
        else {
          var H = zm(c);
          H !== null && (I.data = H);
        }
      }
    }
    function Tp(t, o) {
      switch (t) {
        case "compositionend":
          return zm(o);
        case "keypress":
          var l = o.which;
          return l !== Gg ? null : (Pu = !0, Am);
        case "textInput":
          var c = o.data;
          return c === Am && Pu ? null : c;
        default:
          return null;
      }
    }
    function Xg(t, o) {
      if (wi) {
        if (t === "compositionend" || !Du && Kg(t, o)) {
          var l = sc();
          return mp(), wi = !1, l;
        }
        return null;
      }
      switch (t) {
        case "paste":
          return null;
        case "keypress":
          if (!xp(o)) {
            if (o.char && o.char.length > 1)
              return o.char;
            if (o.which)
              return String.fromCharCode(o.which);
          }
          return null;
        case "compositionend":
          return Cp && !Sp(o) ? null : o.data;
        default:
          return null;
      }
    }
    function wC(t, o, l, c, p) {
      var g;
      if (OC ? g = Tp(o, c) : g = Xg(o, c), !g)
        return null;
      var T = ey(l, "onBeforeInput");
      if (T.length > 0) {
        var N = new sl("onBeforeInput", "beforeinput", null, c, p);
        t.push({
          event: N,
          listeners: T
        }), N.data = g;
      }
    }
    function Ep(t, o, l, c, p, g, T) {
      Fm(t, o, l, c, p), wC(t, o, l, c, p);
    }
    var kC = {
      color: !0,
      date: !0,
      datetime: !0,
      "datetime-local": !0,
      email: !0,
      month: !0,
      number: !0,
      password: !0,
      range: !0,
      search: !0,
      tel: !0,
      text: !0,
      time: !0,
      url: !0,
      week: !0
    };
    function dc(t) {
      var o = t && t.nodeName && t.nodeName.toLowerCase();
      return o === "input" ? !!kC[t.type] : o === "textarea";
    }
    /**
     * Checks if an event is supported in the current execution environment.
     *
     * NOTE: This will not work correctly for non-generic events such as `change`,
     * `reset`, `load`, `error`, and `select`.
     *
     * Borrows from Modernizr.
     *
     * @param {string} eventNameSuffix Event name, e.g. "click".
     * @return {boolean} True if the event is supported.
     * @internal
     * @license Modernizr 3.0.0pre (Custom Build) | MIT
     */
    function NC(t) {
      if (!nt)
        return !1;
      var o = "on" + t, l = o in document;
      if (!l) {
        var c = document.createElement("div");
        c.setAttribute(o, "return;"), l = typeof c[o] == "function";
      }
      return l;
    }
    function Rp() {
      Xe("onChange", ["change", "click", "focusin", "focusout", "input", "keydown", "keyup", "selectionchange"]);
    }
    function a(t, o, l, c) {
      kd(c);
      var p = ey(o, "onChange");
      if (p.length > 0) {
        var g = new cr("onChange", "change", null, l, c);
        t.push({
          event: g,
          listeners: p
        });
      }
    }
    var i = null, d = null;
    function h(t) {
      var o = t.nodeName && t.nodeName.toLowerCase();
      return o === "select" || o === "input" && t.type === "file";
    }
    function x(t) {
      var o = [];
      a(o, d, t, wd(t)), Yf(R, o);
    }
    function R(t) {
      hE(t, 0);
    }
    function B(t) {
      var o = Mp(t);
      if (_h(o))
        return t;
    }
    function X(t, o) {
      if (t === "change")
        return o;
    }
    var te = !1;
    nt && (te = NC("input") && (!document.documentMode || document.documentMode > 9));
    function Re(t, o) {
      i = t, d = o, i.attachEvent("onpropertychange", ot);
    }
    function Je() {
      i && (i.detachEvent("onpropertychange", ot), i = null, d = null);
    }
    function ot(t) {
      t.propertyName === "value" && B(d) && x(t);
    }
    function Ze(t, o, l) {
      t === "focusin" ? (Je(), Re(o, l)) : t === "focusout" && Je();
    }
    function bt(t, o) {
      if (t === "selectionchange" || t === "keyup" || t === "keydown")
        return B(d);
    }
    function Rt(t) {
      var o = t.nodeName;
      return o && o.toLowerCase() === "input" && (t.type === "checkbox" || t.type === "radio");
    }
    function $t(t, o) {
      if (t === "click")
        return B(o);
    }
    function co(t, o) {
      if (t === "input" || t === "change")
        return B(o);
    }
    function ge(t) {
      var o = t._wrapperState;
      !o || !o.controlled || t.type !== "number" || Yi(t, "number", t.value);
    }
    function ie(t, o, l, c, p, g, T) {
      var N = l ? Mp(l) : window, I, H;
      if (h(N) ? I = X : dc(N) ? te ? I = co : (I = bt, H = Ze) : Rt(N) && (I = $t), I) {
        var W = I(o, l);
        if (W) {
          a(t, W, c, p);
          return;
        }
      }
      H && H(o, N, l), o === "focusout" && ge(N);
    }
    function Se() {
      rt("onMouseEnter", ["mouseout", "mouseover"]), rt("onMouseLeave", ["mouseout", "mouseover"]), rt("onPointerEnter", ["pointerout", "pointerover"]), rt("onPointerLeave", ["pointerout", "pointerover"]);
    }
    function ct(t, o, l, c, p, g, T) {
      var N = o === "mouseover" || o === "pointerover", I = o === "mouseout" || o === "pointerout";
      if (N && !fg(c)) {
        var H = c.relatedTarget || c.fromElement;
        if (H && (_u(H) || ev(H)))
          return;
      }
      if (!(!I && !N)) {
        var W;
        if (p.window === p)
          W = p;
        else {
          var se = p.ownerDocument;
          se ? W = se.defaultView || se.parentWindow : W = window;
        }
        var ae, Te;
        if (I) {
          var Ee = c.relatedTarget || c.toElement;
          if (ae = l, Te = Ee ? _u(Ee) : null, Te !== null) {
            var Pe = Hr(Te);
            (Te !== Pe || Te.tag !== M && Te.tag !== P) && (Te = null);
          }
        } else
          ae = null, Te = l;
        if (ae !== Te) {
          var xt = fs, Bt = "onMouseLeave", Pt = "onMouseEnter", fn = "mouse";
          (o === "pointerout" || o === "pointerover") && (xt = Im, Bt = "onPointerLeave", Pt = "onPointerEnter", fn = "pointer");
          var un = ae == null ? W : Mp(ae), ye = Te == null ? W : Mp(Te), Le = new xt(Bt, fn + "leave", ae, c, p);
          Le.target = un, Le.relatedTarget = ye;
          var be = null, at = _u(p);
          if (at === l) {
            var St = new xt(Pt, fn + "enter", Te, c, p);
            St.target = ye, St.relatedTarget = un, be = St;
          }
          mL(t, Le, be, ae, Te);
        }
      }
    }
    function Mt(t, o) {
      return t === o && (t !== 0 || 1 / t === 1 / o) || t !== t && o !== o;
    }
    var Ot = typeof Object.is == "function" ? Object.is : Mt;
    function It(t, o) {
      if (Ot(t, o))
        return !0;
      if (typeof t != "object" || t === null || typeof o != "object" || o === null)
        return !1;
      var l = Object.keys(t), c = Object.keys(o);
      if (l.length !== c.length)
        return !1;
      for (var p = 0; p < l.length; p++) {
        var g = l[p];
        if (!le.call(o, g) || !Ot(t[g], o[g]))
          return !1;
      }
      return !0;
    }
    function Gt(t) {
      for (; t && t.firstChild; )
        t = t.firstChild;
      return t;
    }
    function zo(t) {
      for (; t; ) {
        if (t.nextSibling)
          return t.nextSibling;
        t = t.parentNode;
      }
    }
    function vn(t, o) {
      for (var l = Gt(t), c = 0, p = 0; l; ) {
        if (l.nodeType === mi) {
          if (p = c + l.textContent.length, c <= o && p >= o)
            return {
              node: l,
              offset: o - c
            };
          c = p;
        }
        l = Gt(zo(l));
      }
    }
    function vs(t) {
      var o = t.ownerDocument, l = o && o.defaultView || window, c = l.getSelection && l.getSelection();
      if (!c || c.rangeCount === 0)
        return null;
      var p = c.anchorNode, g = c.anchorOffset, T = c.focusNode, N = c.focusOffset;
      try {
        p.nodeType, T.nodeType;
      } catch {
        return null;
      }
      return $C(t, p, g, T, N);
    }
    function $C(t, o, l, c, p) {
      var g = 0, T = -1, N = -1, I = 0, H = 0, W = t, se = null;
      e:
        for (; ; ) {
          for (var ae = null; W === o && (l === 0 || W.nodeType === mi) && (T = g + l), W === c && (p === 0 || W.nodeType === mi) && (N = g + p), W.nodeType === mi && (g += W.nodeValue.length), (ae = W.firstChild) !== null; )
            se = W, W = ae;
          for (; ; ) {
            if (W === t)
              break e;
            if (se === o && ++I === l && (T = g), se === c && ++H === p && (N = g), (ae = W.nextSibling) !== null)
              break;
            W = se, se = W.parentNode;
          }
          W = ae;
        }
      return T === -1 || N === -1 ? null : {
        start: T,
        end: N
      };
    }
    function KP(t, o) {
      var l = t.ownerDocument || document, c = l && l.defaultView || window;
      if (c.getSelection) {
        var p = c.getSelection(), g = t.textContent.length, T = Math.min(o.start, g), N = o.end === void 0 ? T : Math.min(o.end, g);
        if (!p.extend && T > N) {
          var I = N;
          N = T, T = I;
        }
        var H = vn(t, T), W = vn(t, N);
        if (H && W) {
          if (p.rangeCount === 1 && p.anchorNode === H.node && p.anchorOffset === H.offset && p.focusNode === W.node && p.focusOffset === W.offset)
            return;
          var se = l.createRange();
          se.setStart(H.node, H.offset), p.removeAllRanges(), T > N ? (p.addRange(se), p.extend(W.node, W.offset)) : (se.setEnd(W.node, W.offset), p.addRange(se));
        }
      }
    }
    function rE(t) {
      return t && t.nodeType === mi;
    }
    function aE(t, o) {
      return !t || !o ? !1 : t === o ? !0 : rE(t) ? !1 : rE(o) ? aE(t, o.parentNode) : "contains" in t ? t.contains(o) : t.compareDocumentPosition ? !!(t.compareDocumentPosition(o) & 16) : !1;
    }
    function XP(t) {
      return t && t.ownerDocument && aE(t.ownerDocument.documentElement, t);
    }
    function QP(t) {
      try {
        return typeof t.contentWindow.location.href == "string";
      } catch {
        return !1;
      }
    }
    function iE() {
      for (var t = window, o = md(); o instanceof t.HTMLIFrameElement; ) {
        if (QP(o))
          t = o.contentWindow;
        else
          return o;
        o = md(t.document);
      }
      return o;
    }
    function MC(t) {
      var o = t && t.nodeName && t.nodeName.toLowerCase();
      return o && (o === "input" && (t.type === "text" || t.type === "search" || t.type === "tel" || t.type === "url" || t.type === "password") || o === "textarea" || t.contentEditable === "true");
    }
    function ZP() {
      var t = iE();
      return {
        focusedElem: t,
        selectionRange: MC(t) ? eL(t) : null
      };
    }
    function JP(t) {
      var o = iE(), l = t.focusedElem, c = t.selectionRange;
      if (o !== l && XP(l)) {
        c !== null && MC(l) && tL(l, c);
        for (var p = [], g = l; g = g.parentNode; )
          g.nodeType === Rr && p.push({
            element: g,
            left: g.scrollLeft,
            top: g.scrollTop
          });
        typeof l.focus == "function" && l.focus();
        for (var T = 0; T < p.length; T++) {
          var N = p[T];
          N.element.scrollLeft = N.left, N.element.scrollTop = N.top;
        }
      }
    }
    function eL(t) {
      var o;
      return "selectionStart" in t ? o = {
        start: t.selectionStart,
        end: t.selectionEnd
      } : o = vs(t), o || {
        start: 0,
        end: 0
      };
    }
    function tL(t, o) {
      var l = o.start, c = o.end;
      c === void 0 && (c = l), "selectionStart" in t ? (t.selectionStart = l, t.selectionEnd = Math.min(c, t.value.length)) : KP(t, o);
    }
    var nL = nt && "documentMode" in document && document.documentMode <= 11;
    function oL() {
      Xe("onSelect", ["focusout", "contextmenu", "dragend", "focusin", "keydown", "keyup", "mousedown", "mouseup", "selectionchange"]);
    }
    var Op = null, DC = null, jm = null, PC = !1;
    function rL(t) {
      if ("selectionStart" in t && MC(t))
        return {
          start: t.selectionStart,
          end: t.selectionEnd
        };
      var o = t.ownerDocument && t.ownerDocument.defaultView || window, l = o.getSelection();
      return {
        anchorNode: l.anchorNode,
        anchorOffset: l.anchorOffset,
        focusNode: l.focusNode,
        focusOffset: l.focusOffset
      };
    }
    function aL(t) {
      return t.window === t ? t.document : t.nodeType === Na ? t : t.ownerDocument;
    }
    function sE(t, o, l) {
      var c = aL(l);
      if (!(PC || Op == null || Op !== md(c))) {
        var p = rL(Op);
        if (!jm || !It(jm, p)) {
          jm = p;
          var g = ey(DC, "onSelect");
          if (g.length > 0) {
            var T = new cr("onSelect", "select", null, o, l);
            t.push({
              event: T,
              listeners: g
            }), T.target = Op;
          }
        }
      }
    }
    function iL(t, o, l, c, p, g, T) {
      var N = l ? Mp(l) : window;
      switch (o) {
        case "focusin":
          (dc(N) || N.contentEditable === "true") && (Op = N, DC = l, jm = null);
          break;
        case "focusout":
          Op = null, DC = null, jm = null;
          break;
        case "mousedown":
          PC = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          PC = !1, sE(t, c, p);
          break;
        case "selectionchange":
          if (nL)
            break;
        case "keydown":
        case "keyup":
          sE(t, c, p);
      }
    }
    function Qg(t, o) {
      var l = {};
      return l[t.toLowerCase()] = o.toLowerCase(), l["Webkit" + t] = "webkit" + o, l["Moz" + t] = "moz" + o, l;
    }
    var wp = {
      animationend: Qg("Animation", "AnimationEnd"),
      animationiteration: Qg("Animation", "AnimationIteration"),
      animationstart: Qg("Animation", "AnimationStart"),
      transitionend: Qg("Transition", "TransitionEnd")
    }, LC = {}, lE = {};
    nt && (lE = document.createElement("div").style, "AnimationEvent" in window || (delete wp.animationend.animation, delete wp.animationiteration.animation, delete wp.animationstart.animation), "TransitionEvent" in window || delete wp.transitionend.transition);
    function Zg(t) {
      if (LC[t])
        return LC[t];
      if (!wp[t])
        return t;
      var o = wp[t];
      for (var l in o)
        if (o.hasOwnProperty(l) && l in lE)
          return LC[t] = o[l];
      return t;
    }
    var cE = Zg("animationend"), uE = Zg("animationiteration"), dE = Zg("animationstart"), pE = Zg("transitionend"), fE = /* @__PURE__ */ new Map(), mE = ["abort", "auxClick", "cancel", "canPlay", "canPlayThrough", "click", "close", "contextMenu", "copy", "cut", "drag", "dragEnd", "dragEnter", "dragExit", "dragLeave", "dragOver", "dragStart", "drop", "durationChange", "emptied", "encrypted", "ended", "error", "gotPointerCapture", "input", "invalid", "keyDown", "keyPress", "keyUp", "load", "loadedData", "loadedMetadata", "loadStart", "lostPointerCapture", "mouseDown", "mouseMove", "mouseOut", "mouseOver", "mouseUp", "paste", "pause", "play", "playing", "pointerCancel", "pointerDown", "pointerMove", "pointerOut", "pointerOver", "pointerUp", "progress", "rateChange", "reset", "resize", "seeked", "seeking", "stalled", "submit", "suspend", "timeUpdate", "touchCancel", "touchEnd", "touchStart", "volumeChange", "scroll", "toggle", "touchMove", "waiting", "wheel"];
    function pc(t, o) {
      fE.set(t, o), Xe(o, [t]);
    }
    function sL() {
      for (var t = 0; t < mE.length; t++) {
        var o = mE[t], l = o.toLowerCase(), c = o[0].toUpperCase() + o.slice(1);
        pc(l, "on" + c);
      }
      pc(cE, "onAnimationEnd"), pc(uE, "onAnimationIteration"), pc(dE, "onAnimationStart"), pc("dblclick", "onDoubleClick"), pc("focusin", "onFocus"), pc("focusout", "onBlur"), pc(pE, "onTransitionEnd");
    }
    function lL(t, o, l, c, p, g, T) {
      var N = fE.get(o);
      if (N !== void 0) {
        var I = cr, H = o;
        switch (o) {
          case "keypress":
            if (rl(c) === 0)
              return;
          case "keydown":
          case "keyup":
            I = TC;
            break;
          case "focusin":
            H = "focus", I = hp;
            break;
          case "focusout":
            H = "blur", I = hp;
            break;
          case "beforeblur":
          case "afterblur":
            I = hp;
            break;
          case "click":
            if (c.button === 2)
              return;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            I = fs;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            I = il;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            I = ha;
            break;
          case cE:
          case uE:
          case dE:
            I = gp;
            break;
          case pE:
            I = RC;
            break;
          case "scroll":
            I = $m;
            break;
          case "wheel":
            I = bp;
            break;
          case "copy":
          case "cut":
          case "paste":
            I = bC;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            I = Im;
            break;
        }
        var W = (g & Bs) !== 0;
        {
          var se = !W && // TODO: ideally, we'd eventually add all events from
          // nonDelegatedEvents list in DOMPluginEventSystem.
          // Then we can remove this special list.
          // This is a breaking change that can wait until React 18.
          o === "scroll", ae = pL(l, N, c.type, W, se);
          if (ae.length > 0) {
            var Te = new I(N, H, null, c, p);
            t.push({
              event: Te,
              listeners: ae
            });
          }
        }
      }
    }
    sL(), Se(), Rp(), oL(), qg();
    function cL(t, o, l, c, p, g, T) {
      lL(t, o, l, c, p, g);
      var N = (g & iC) === 0;
      N && (ct(t, o, l, c, p), ie(t, o, l, c, p), iL(t, o, l, c, p), Ep(t, o, l, c, p));
    }
    var Um = ["abort", "canplay", "canplaythrough", "durationchange", "emptied", "encrypted", "ended", "error", "loadeddata", "loadedmetadata", "loadstart", "pause", "play", "playing", "progress", "ratechange", "resize", "seeked", "seeking", "stalled", "suspend", "timeupdate", "volumechange", "waiting"], IC = new Set(["cancel", "close", "invalid", "load", "scroll", "toggle"].concat(Um));
    function vE(t, o, l) {
      var c = t.type || "unknown-event";
      t.currentTarget = l, yi(c, o, void 0, t), t.currentTarget = null;
    }
    function uL(t, o, l) {
      var c;
      if (l)
        for (var p = o.length - 1; p >= 0; p--) {
          var g = o[p], T = g.instance, N = g.currentTarget, I = g.listener;
          if (T !== c && t.isPropagationStopped())
            return;
          vE(t, I, N), c = T;
        }
      else
        for (var H = 0; H < o.length; H++) {
          var W = o[H], se = W.instance, ae = W.currentTarget, Te = W.listener;
          if (se !== c && t.isPropagationStopped())
            return;
          vE(t, Te, ae), c = se;
        }
    }
    function hE(t, o) {
      for (var l = (o & Bs) !== 0, c = 0; c < t.length; c++) {
        var p = t[c], g = p.event, T = p.listeners;
        uL(g, T, l);
      }
      Zf();
    }
    function dL(t, o, l, c, p) {
      var g = wd(l), T = [];
      cL(T, t, c, l, g, o), hE(T, o);
    }
    function eo(t, o) {
      IC.has(t) || m('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', t);
      var l = !1, c = jI(o), p = vL(t, l);
      c.has(p) || (gE(o, t, ru, l), c.add(p));
    }
    function _C(t, o, l) {
      IC.has(t) && !o && m('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', t);
      var c = 0;
      o && (c |= Bs), gE(l, t, c, o);
    }
    var Jg = "_reactListening" + Math.random().toString(36).slice(2);
    function Vm(t) {
      if (!t[Jg]) {
        t[Jg] = !0, xe.forEach(function(l) {
          l !== "selectionchange" && (IC.has(l) || _C(l, !1, t), _C(l, !0, t));
        });
        var o = t.nodeType === Na ? t : t.ownerDocument;
        o !== null && (o[Jg] || (o[Jg] = !0, _C("selectionchange", !1, o)));
      }
    }
    function gE(t, o, l, c, p) {
      var g = rc(t, o, l), T = void 0;
      cu && (o === "touchstart" || o === "touchmove" || o === "wheel") && (T = !0), t = t, c ? T !== void 0 ? Oi(t, o, g, T) : ic(t, o, g) : T !== void 0 ? fp(t, o, g, T) : Nm(t, o, g);
    }
    function yE(t, o) {
      return t === o || t.nodeType === ho && t.parentNode === o;
    }
    function AC(t, o, l, c, p) {
      var g = c;
      if (!(o & hi) && !(o & ru)) {
        var T = p;
        if (c !== null) {
          var N = c;
          e:
            for (; ; ) {
              if (N === null)
                return;
              var I = N.tag;
              if (I === k || I === D) {
                var H = N.stateNode.containerInfo;
                if (yE(H, T))
                  break;
                if (I === D)
                  for (var W = N.return; W !== null; ) {
                    var se = W.tag;
                    if (se === k || se === D) {
                      var ae = W.stateNode.containerInfo;
                      if (yE(ae, T))
                        return;
                    }
                    W = W.return;
                  }
                for (; H !== null; ) {
                  var Te = _u(H);
                  if (Te === null)
                    return;
                  var Ee = Te.tag;
                  if (Ee === M || Ee === P) {
                    N = g = Te;
                    continue e;
                  }
                  H = H.parentNode;
                }
              }
              N = N.return;
            }
        }
      }
      Yf(function() {
        return dL(t, o, l, g);
      });
    }
    function Hm(t, o, l) {
      return {
        instance: t,
        listener: o,
        currentTarget: l
      };
    }
    function pL(t, o, l, c, p, g) {
      for (var T = o !== null ? o + "Capture" : null, N = c ? T : o, I = [], H = t, W = null; H !== null; ) {
        var se = H, ae = se.stateNode, Te = se.tag;
        if (Te === M && ae !== null && (W = ae, N !== null)) {
          var Ee = Fs(H, N);
          Ee != null && I.push(Hm(H, Ee, W));
        }
        if (p)
          break;
        H = H.return;
      }
      return I;
    }
    function ey(t, o) {
      for (var l = o + "Capture", c = [], p = t; p !== null; ) {
        var g = p, T = g.stateNode, N = g.tag;
        if (N === M && T !== null) {
          var I = T, H = Fs(p, l);
          H != null && c.unshift(Hm(p, H, I));
          var W = Fs(p, o);
          W != null && c.push(Hm(p, W, I));
        }
        p = p.return;
      }
      return c;
    }
    function kp(t) {
      if (t === null)
        return null;
      do
        t = t.return;
      while (t && t.tag !== M);
      return t || null;
    }
    function fL(t, o) {
      for (var l = t, c = o, p = 0, g = l; g; g = kp(g))
        p++;
      for (var T = 0, N = c; N; N = kp(N))
        T++;
      for (; p - T > 0; )
        l = kp(l), p--;
      for (; T - p > 0; )
        c = kp(c), T--;
      for (var I = p; I--; ) {
        if (l === c || c !== null && l === c.alternate)
          return l;
        l = kp(l), c = kp(c);
      }
      return null;
    }
    function bE(t, o, l, c, p) {
      for (var g = o._reactName, T = [], N = l; N !== null && N !== c; ) {
        var I = N, H = I.alternate, W = I.stateNode, se = I.tag;
        if (H !== null && H === c)
          break;
        if (se === M && W !== null) {
          var ae = W;
          if (p) {
            var Te = Fs(N, g);
            Te != null && T.unshift(Hm(N, Te, ae));
          } else if (!p) {
            var Ee = Fs(N, g);
            Ee != null && T.push(Hm(N, Ee, ae));
          }
        }
        N = N.return;
      }
      T.length !== 0 && t.push({
        event: o,
        listeners: T
      });
    }
    function mL(t, o, l, c, p) {
      var g = c && p ? fL(c, p) : null;
      c !== null && bE(t, o, c, g, !1), p !== null && l !== null && bE(t, l, p, g, !0);
    }
    function vL(t, o) {
      return t + "__" + (o ? "capture" : "bubble");
    }
    var ga = !1, Wm = "dangerouslySetInnerHTML", ty = "suppressContentEditableWarning", fc = "suppressHydrationWarning", CE = "autoFocus", Lu = "children", Iu = "style", ny = "__html", BC, oy, Gm, xE, ry, SE, TE;
    BC = {
      // There are working polyfills for <dialog>. Let people use it.
      dialog: !0,
      // Electron ships a custom <webview> tag to display external web content in
      // an isolated frame and process.
      // This tag is not present in non Electron environments such as JSDom which
      // is often used for testing purposes.
      // @see https://electronjs.org/docs/api/webview-tag
      webview: !0
    }, oy = function(t, o) {
      Od(t, o), Vf(t, o), pg(t, o, {
        registrationNameDependencies: ze,
        possibleRegistrationNames: ut
      });
    }, SE = nt && !document.documentMode, Gm = function(t, o, l) {
      if (!ga) {
        var c = ay(l), p = ay(o);
        p !== c && (ga = !0, m("Prop `%s` did not match. Server: %s Client: %s", t, JSON.stringify(p), JSON.stringify(c)));
      }
    }, xE = function(t) {
      if (!ga) {
        ga = !0;
        var o = [];
        t.forEach(function(l) {
          o.push(l);
        }), m("Extra attributes from the server: %s", o);
      }
    }, ry = function(t, o) {
      o === !1 ? m("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", t, t, t) : m("Expected `%s` listener to be a function, instead got a value of `%s` type.", t, typeof o);
    }, TE = function(t, o) {
      var l = t.namespaceURI === fi ? t.ownerDocument.createElement(t.tagName) : t.ownerDocument.createElementNS(t.namespaceURI, t.tagName);
      return l.innerHTML = o, l.innerHTML;
    };
    var hL = /\r\n?/g, gL = /\u0000|\uFFFD/g;
    function ay(t) {
      Tt(t);
      var o = typeof t == "string" ? t : "" + t;
      return o.replace(hL, `
`).replace(gL, "");
    }
    function iy(t, o, l, c) {
      var p = ay(o), g = ay(t);
      if (g !== p && (c && (ga || (ga = !0, m('Text content did not match. Server: "%s" Client: "%s"', g, p))), l && fe))
        throw new Error("Text content does not match server-rendered HTML.");
    }
    function EE(t) {
      return t.nodeType === Na ? t : t.ownerDocument;
    }
    function yL() {
    }
    function sy(t) {
      t.onclick = yL;
    }
    function bL(t, o, l, c, p) {
      for (var g in c)
        if (c.hasOwnProperty(g)) {
          var T = c[g];
          if (g === Iu)
            T && Object.freeze(T), ng(o, T);
          else if (g === Wm) {
            var N = T ? T[ny] : void 0;
            N != null && Wh(o, N);
          } else if (g === Lu)
            if (typeof T == "string") {
              var I = t !== "textarea" || T !== "";
              I && Sd(o, T);
            } else
              typeof T == "number" && Sd(o, "" + T);
          else
            g === ty || g === fc || g === CE || (ze.hasOwnProperty(g) ? T != null && (typeof T != "function" && ry(g, T), g === "onScroll" && eo("scroll", o)) : T != null && An(o, g, T, p));
        }
    }
    function CL(t, o, l, c) {
      for (var p = 0; p < o.length; p += 2) {
        var g = o[p], T = o[p + 1];
        g === Iu ? ng(t, T) : g === Wm ? Wh(t, T) : g === Lu ? Sd(t, T) : An(t, g, T, c);
      }
    }
    function xL(t, o, l, c) {
      var p, g = EE(l), T, N = c;
      if (N === fi && (N = Cd(t)), N === fi) {
        if (p = vi(t, o), !p && t !== t.toLowerCase() && m("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", t), t === "script") {
          var I = g.createElement("div");
          I.innerHTML = "<script><\/script>";
          var H = I.firstChild;
          T = I.removeChild(H);
        } else if (typeof o.is == "string")
          T = g.createElement(t, {
            is: o.is
          });
        else if (T = g.createElement(t), t === "select") {
          var W = T;
          o.multiple ? W.multiple = !0 : o.size && (W.size = o.size);
        }
      } else
        T = g.createElementNS(N, t);
      return N === fi && !p && Object.prototype.toString.call(T) === "[object HTMLUnknownElement]" && !le.call(BC, t) && (BC[t] = !0, m("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", t)), T;
    }
    function SL(t, o) {
      return EE(o).createTextNode(t);
    }
    function TL(t, o, l, c) {
      var p = vi(o, l);
      oy(o, l);
      var g;
      switch (o) {
        case "dialog":
          eo("cancel", t), eo("close", t), g = l;
          break;
        case "iframe":
        case "object":
        case "embed":
          eo("load", t), g = l;
          break;
        case "video":
        case "audio":
          for (var T = 0; T < Um.length; T++)
            eo(Um[T], t);
          g = l;
          break;
        case "source":
          eo("error", t), g = l;
          break;
        case "img":
        case "image":
        case "link":
          eo("error", t), eo("load", t), g = l;
          break;
        case "details":
          eo("toggle", t), g = l;
          break;
        case "input":
          Zc(t, l), g = Qc(t, l), eo("invalid", t);
          break;
        case "option":
          yd(t, l), g = l;
          break;
        case "select":
          jh(t, l), g = Df(t, l), eo("invalid", t);
          break;
        case "textarea":
          Uh(t, l), g = Lf(t, l), eo("invalid", t);
          break;
        default:
          g = l;
      }
      switch (Ed(o, g), bL(o, t, c, g, p), o) {
        case "input":
          Is(t), Jc(t, l, !1);
          break;
        case "textarea":
          Is(t), Hh(t);
          break;
        case "option":
          Mf(t, l);
          break;
        case "select":
          K0(t, l);
          break;
        default:
          typeof g.onClick == "function" && sy(t);
          break;
      }
    }
    function EL(t, o, l, c, p) {
      oy(o, c);
      var g = null, T, N;
      switch (o) {
        case "input":
          T = Qc(t, l), N = Qc(t, c), g = [];
          break;
        case "select":
          T = Df(t, l), N = Df(t, c), g = [];
          break;
        case "textarea":
          T = Lf(t, l), N = Lf(t, c), g = [];
          break;
        default:
          T = l, N = c, typeof T.onClick != "function" && typeof N.onClick == "function" && sy(t);
          break;
      }
      Ed(o, N);
      var I, H, W = null;
      for (I in T)
        if (!(N.hasOwnProperty(I) || !T.hasOwnProperty(I) || T[I] == null))
          if (I === Iu) {
            var se = T[I];
            for (H in se)
              se.hasOwnProperty(H) && (W || (W = {}), W[H] = "");
          } else
            I === Wm || I === Lu || I === ty || I === fc || I === CE || (ze.hasOwnProperty(I) ? g || (g = []) : (g = g || []).push(I, null));
      for (I in N) {
        var ae = N[I], Te = T != null ? T[I] : void 0;
        if (!(!N.hasOwnProperty(I) || ae === Te || ae == null && Te == null))
          if (I === Iu)
            if (ae && Object.freeze(ae), Te) {
              for (H in Te)
                Te.hasOwnProperty(H) && (!ae || !ae.hasOwnProperty(H)) && (W || (W = {}), W[H] = "");
              for (H in ae)
                ae.hasOwnProperty(H) && Te[H] !== ae[H] && (W || (W = {}), W[H] = ae[H]);
            } else
              W || (g || (g = []), g.push(I, W)), W = ae;
          else if (I === Wm) {
            var Ee = ae ? ae[ny] : void 0, Pe = Te ? Te[ny] : void 0;
            Ee != null && Pe !== Ee && (g = g || []).push(I, Ee);
          } else
            I === Lu ? (typeof ae == "string" || typeof ae == "number") && (g = g || []).push(I, "" + ae) : I === ty || I === fc || (ze.hasOwnProperty(I) ? (ae != null && (typeof ae != "function" && ry(I, ae), I === "onScroll" && eo("scroll", t)), !g && Te !== ae && (g = [])) : (g = g || []).push(I, ae));
      }
      return W && (nu(W, N[Iu]), (g = g || []).push(Iu, W)), g;
    }
    function RL(t, o, l, c, p) {
      l === "input" && p.type === "radio" && p.name != null && $f(t, p);
      var g = vi(l, c), T = vi(l, p);
      switch (CL(t, o, g, T), l) {
        case "input":
          Il(t, p);
          break;
        case "textarea":
          Vh(t, p);
          break;
        case "select":
          X0(t, p);
          break;
      }
    }
    function OL(t) {
      {
        var o = t.toLowerCase();
        return Rd.hasOwnProperty(o) && Rd[o] || null;
      }
    }
    function wL(t, o, l, c, p, g, T) {
      var N, I;
      switch (N = vi(o, l), oy(o, l), o) {
        case "dialog":
          eo("cancel", t), eo("close", t);
          break;
        case "iframe":
        case "object":
        case "embed":
          eo("load", t);
          break;
        case "video":
        case "audio":
          for (var H = 0; H < Um.length; H++)
            eo(Um[H], t);
          break;
        case "source":
          eo("error", t);
          break;
        case "img":
        case "image":
        case "link":
          eo("error", t), eo("load", t);
          break;
        case "details":
          eo("toggle", t);
          break;
        case "input":
          Zc(t, l), eo("invalid", t);
          break;
        case "option":
          yd(t, l);
          break;
        case "select":
          jh(t, l), eo("invalid", t);
          break;
        case "textarea":
          Uh(t, l), eo("invalid", t);
          break;
      }
      Ed(o, l);
      {
        I = /* @__PURE__ */ new Set();
        for (var W = t.attributes, se = 0; se < W.length; se++) {
          var ae = W[se].name.toLowerCase();
          switch (ae) {
            case "value":
              break;
            case "checked":
              break;
            case "selected":
              break;
            default:
              I.add(W[se].name);
          }
        }
      }
      var Te = null;
      for (var Ee in l)
        if (l.hasOwnProperty(Ee)) {
          var Pe = l[Ee];
          if (Ee === Lu)
            typeof Pe == "string" ? t.textContent !== Pe && (l[fc] !== !0 && iy(t.textContent, Pe, g, T), Te = [Lu, Pe]) : typeof Pe == "number" && t.textContent !== "" + Pe && (l[fc] !== !0 && iy(t.textContent, Pe, g, T), Te = [Lu, "" + Pe]);
          else if (ze.hasOwnProperty(Ee))
            Pe != null && (typeof Pe != "function" && ry(Ee, Pe), Ee === "onScroll" && eo("scroll", t));
          else if (T && // Convince Flow we've calculated it (it's DEV-only in this method.)
          typeof N == "boolean") {
            var xt = void 0, Bt = N && Ie ? null : nn(Ee);
            if (l[fc] !== !0) {
              if (!(Ee === ty || Ee === fc || // Controlled attributes are not validated
              // TODO: Only ignore them on controlled tags.
              Ee === "value" || Ee === "checked" || Ee === "selected")) {
                if (Ee === Wm) {
                  var Pt = t.innerHTML, fn = Pe ? Pe[ny] : void 0;
                  if (fn != null) {
                    var un = TE(t, fn);
                    un !== Pt && Gm(Ee, Pt, un);
                  }
                } else if (Ee === Iu) {
                  if (I.delete(Ee), SE) {
                    var ye = rC(Pe);
                    xt = t.getAttribute("style"), ye !== xt && Gm(Ee, xt, ye);
                  }
                } else if (N && !Ie)
                  I.delete(Ee.toLowerCase()), xt = bn(t, Ee, Pe), Pe !== xt && Gm(Ee, xt, Pe);
                else if (!st(Ee, Bt, N) && !Nt(Ee, Pe, Bt, N)) {
                  var Le = !1;
                  if (Bt !== null)
                    I.delete(Bt.attributeName), xt = Rn(t, Ee, Pe, Bt);
                  else {
                    var be = c;
                    if (be === fi && (be = Cd(o)), be === fi)
                      I.delete(Ee.toLowerCase());
                    else {
                      var at = OL(Ee);
                      at !== null && at !== Ee && (Le = !0, I.delete(at)), I.delete(Ee);
                    }
                    xt = bn(t, Ee, Pe);
                  }
                  var St = Ie;
                  !St && Pe !== xt && !Le && Gm(Ee, xt, Pe);
                }
              }
            }
          }
        }
      switch (T && // $FlowFixMe - Should be inferred as not undefined.
      I.size > 0 && l[fc] !== !0 && xE(I), o) {
        case "input":
          Is(t), Jc(t, l, !0);
          break;
        case "textarea":
          Is(t), Hh(t);
          break;
        case "select":
        case "option":
          break;
        default:
          typeof l.onClick == "function" && sy(t);
          break;
      }
      return Te;
    }
    function kL(t, o, l) {
      var c = t.nodeValue !== o;
      return c;
    }
    function zC(t, o) {
      {
        if (ga)
          return;
        ga = !0, m("Did not expect server HTML to contain a <%s> in <%s>.", o.nodeName.toLowerCase(), t.nodeName.toLowerCase());
      }
    }
    function FC(t, o) {
      {
        if (ga)
          return;
        ga = !0, m('Did not expect server HTML to contain the text node "%s" in <%s>.', o.nodeValue, t.nodeName.toLowerCase());
      }
    }
    function jC(t, o, l) {
      {
        if (ga)
          return;
        ga = !0, m("Expected server HTML to contain a matching <%s> in <%s>.", o, t.nodeName.toLowerCase());
      }
    }
    function UC(t, o) {
      {
        if (o === "" || ga)
          return;
        ga = !0, m('Expected server HTML to contain a matching text node for "%s" in <%s>.', o, t.nodeName.toLowerCase());
      }
    }
    function NL(t, o, l) {
      switch (o) {
        case "input":
          Ah(t, l);
          return;
        case "textarea":
          If(t, l);
          return;
        case "select":
          Q0(t, l);
          return;
      }
    }
    var qm = function() {
    }, Ym = function() {
    };
    {
      var $L = ["address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "main", "marquee", "menu", "menuitem", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "source", "style", "summary", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "title", "tr", "track", "ul", "wbr", "xmp"], RE = [
        "applet",
        "caption",
        "html",
        "table",
        "td",
        "th",
        "marquee",
        "object",
        "template",
        // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
        // TODO: Distinguish by namespace here -- for <title>, including it here
        // errs on the side of fewer warnings
        "foreignObject",
        "desc",
        "title"
      ], ML = RE.concat(["button"]), DL = ["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"], OE = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
      };
      Ym = function(t, o) {
        var l = ln({}, t || OE), c = {
          tag: o
        };
        return RE.indexOf(o) !== -1 && (l.aTagInScope = null, l.buttonTagInScope = null, l.nobrTagInScope = null), ML.indexOf(o) !== -1 && (l.pTagInButtonScope = null), $L.indexOf(o) !== -1 && o !== "address" && o !== "div" && o !== "p" && (l.listItemTagAutoclosing = null, l.dlItemTagAutoclosing = null), l.current = c, o === "form" && (l.formTag = c), o === "a" && (l.aTagInScope = c), o === "button" && (l.buttonTagInScope = c), o === "nobr" && (l.nobrTagInScope = c), o === "p" && (l.pTagInButtonScope = c), o === "li" && (l.listItemTagAutoclosing = c), (o === "dd" || o === "dt") && (l.dlItemTagAutoclosing = c), l;
      };
      var PL = function(t, o) {
        switch (o) {
          case "select":
            return t === "option" || t === "optgroup" || t === "#text";
          case "optgroup":
            return t === "option" || t === "#text";
          case "option":
            return t === "#text";
          case "tr":
            return t === "th" || t === "td" || t === "style" || t === "script" || t === "template";
          case "tbody":
          case "thead":
          case "tfoot":
            return t === "tr" || t === "style" || t === "script" || t === "template";
          case "colgroup":
            return t === "col" || t === "template";
          case "table":
            return t === "caption" || t === "colgroup" || t === "tbody" || t === "tfoot" || t === "thead" || t === "style" || t === "script" || t === "template";
          case "head":
            return t === "base" || t === "basefont" || t === "bgsound" || t === "link" || t === "meta" || t === "title" || t === "noscript" || t === "noframes" || t === "style" || t === "script" || t === "template";
          case "html":
            return t === "head" || t === "body" || t === "frameset";
          case "frameset":
            return t === "frame";
          case "#document":
            return t === "html";
        }
        switch (t) {
          case "h1":
          case "h2":
          case "h3":
          case "h4":
          case "h5":
          case "h6":
            return o !== "h1" && o !== "h2" && o !== "h3" && o !== "h4" && o !== "h5" && o !== "h6";
          case "rp":
          case "rt":
            return DL.indexOf(o) === -1;
          case "body":
          case "caption":
          case "col":
          case "colgroup":
          case "frameset":
          case "frame":
          case "head":
          case "html":
          case "tbody":
          case "td":
          case "tfoot":
          case "th":
          case "thead":
          case "tr":
            return o == null;
        }
        return !0;
      }, LL = function(t, o) {
        switch (t) {
          case "address":
          case "article":
          case "aside":
          case "blockquote":
          case "center":
          case "details":
          case "dialog":
          case "dir":
          case "div":
          case "dl":
          case "fieldset":
          case "figcaption":
          case "figure":
          case "footer":
          case "header":
          case "hgroup":
          case "main":
          case "menu":
          case "nav":
          case "ol":
          case "p":
          case "section":
          case "summary":
          case "ul":
          case "pre":
          case "listing":
          case "table":
          case "hr":
          case "xmp":
          case "h1":
          case "h2":
          case "h3":
          case "h4":
          case "h5":
          case "h6":
            return o.pTagInButtonScope;
          case "form":
            return o.formTag || o.pTagInButtonScope;
          case "li":
            return o.listItemTagAutoclosing;
          case "dd":
          case "dt":
            return o.dlItemTagAutoclosing;
          case "button":
            return o.buttonTagInScope;
          case "a":
            return o.aTagInScope;
          case "nobr":
            return o.nobrTagInScope;
        }
        return null;
      }, wE = {};
      qm = function(t, o, l) {
        l = l || OE;
        var c = l.current, p = c && c.tag;
        o != null && (t != null && m("validateDOMNesting: when childText is passed, childTag should be null"), t = "#text");
        var g = PL(t, p) ? null : c, T = g ? null : LL(t, l), N = g || T;
        if (N) {
          var I = N.tag, H = !!g + "|" + t + "|" + I;
          if (!wE[H]) {
            wE[H] = !0;
            var W = t, se = "";
            if (t === "#text" ? /\S/.test(o) ? W = "Text nodes" : (W = "Whitespace text nodes", se = " Make sure you don't have any extra whitespace between tags on each line of your source code.") : W = "<" + t + ">", g) {
              var ae = "";
              I === "table" && t === "tr" && (ae += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser."), m("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", W, I, se, ae);
            } else
              m("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", W, I);
          }
        }
      };
    }
    var ly = "suppressHydrationWarning", cy = "$", uy = "/$", Km = "$?", Xm = "$!", IL = "style", VC = null, HC = null;
    function _L(t) {
      var o, l, c = t.nodeType;
      switch (c) {
        case Na:
        case _s: {
          o = c === Na ? "#document" : "#fragment";
          var p = t.documentElement;
          l = p ? p.namespaceURI : Af(null, "");
          break;
        }
        default: {
          var g = c === ho ? t.parentNode : t, T = g.namespaceURI || null;
          o = g.tagName, l = Af(T, o);
          break;
        }
      }
      {
        var N = o.toLowerCase(), I = Ym(null, N);
        return {
          namespace: l,
          ancestorInfo: I
        };
      }
    }
    function AL(t, o, l) {
      {
        var c = t, p = Af(c.namespace, o), g = Ym(c.ancestorInfo, o);
        return {
          namespace: p,
          ancestorInfo: g
        };
      }
    }
    function NJ(t) {
      return t;
    }
    function BL(t) {
      VC = Yr(), HC = ZP();
      var o = null;
      return Bo(!1), o;
    }
    function zL(t) {
      JP(HC), Bo(VC), VC = null, HC = null;
    }
    function FL(t, o, l, c, p) {
      var g;
      {
        var T = c;
        if (qm(t, null, T.ancestorInfo), typeof o.children == "string" || typeof o.children == "number") {
          var N = "" + o.children, I = Ym(T.ancestorInfo, t);
          qm(null, N, I);
        }
        g = T.namespace;
      }
      var H = xL(t, o, l, g);
      return Jm(p, H), ZC(H, o), H;
    }
    function jL(t, o) {
      t.appendChild(o);
    }
    function UL(t, o, l, c, p) {
      switch (TL(t, o, l, c), o) {
        case "button":
        case "input":
        case "select":
        case "textarea":
          return !!l.autoFocus;
        case "img":
          return !0;
        default:
          return !1;
      }
    }
    function VL(t, o, l, c, p, g) {
      {
        var T = g;
        if (typeof c.children != typeof l.children && (typeof c.children == "string" || typeof c.children == "number")) {
          var N = "" + c.children, I = Ym(T.ancestorInfo, o);
          qm(null, N, I);
        }
      }
      return EL(t, o, l, c);
    }
    function WC(t, o) {
      return t === "textarea" || t === "noscript" || typeof o.children == "string" || typeof o.children == "number" || typeof o.dangerouslySetInnerHTML == "object" && o.dangerouslySetInnerHTML !== null && o.dangerouslySetInnerHTML.__html != null;
    }
    function HL(t, o, l, c) {
      {
        var p = l;
        qm(null, t, p.ancestorInfo);
      }
      var g = SL(t, o);
      return Jm(c, g), g;
    }
    function WL() {
      var t = window.event;
      return t === void 0 ? Ti : pr(t.type);
    }
    var GC = typeof setTimeout == "function" ? setTimeout : void 0, GL = typeof clearTimeout == "function" ? clearTimeout : void 0, qC = -1, kE = typeof Promise == "function" ? Promise : void 0, qL = typeof queueMicrotask == "function" ? queueMicrotask : typeof kE < "u" ? function(t) {
      return kE.resolve(null).then(t).catch(YL);
    } : GC;
    function YL(t) {
      setTimeout(function() {
        throw t;
      });
    }
    function KL(t, o, l, c) {
      switch (o) {
        case "button":
        case "input":
        case "select":
        case "textarea":
          l.autoFocus && t.focus();
          return;
        case "img": {
          l.src && (t.src = l.src);
          return;
        }
      }
    }
    function XL(t, o, l, c, p, g) {
      RL(t, o, l, c, p), ZC(t, p);
    }
    function NE(t) {
      Sd(t, "");
    }
    function QL(t, o, l) {
      t.nodeValue = l;
    }
    function ZL(t, o) {
      t.appendChild(o);
    }
    function JL(t, o) {
      var l;
      t.nodeType === ho ? (l = t.parentNode, l.insertBefore(o, t)) : (l = t, l.appendChild(o));
      var c = t._reactRootContainer;
      c == null && l.onclick === null && sy(l);
    }
    function eI(t, o, l) {
      t.insertBefore(o, l);
    }
    function tI(t, o, l) {
      t.nodeType === ho ? t.parentNode.insertBefore(o, l) : t.insertBefore(o, l);
    }
    function nI(t, o) {
      t.removeChild(o);
    }
    function oI(t, o) {
      t.nodeType === ho ? t.parentNode.removeChild(o) : t.removeChild(o);
    }
    function YC(t, o) {
      var l = o, c = 0;
      do {
        var p = l.nextSibling;
        if (t.removeChild(l), p && p.nodeType === ho) {
          var g = p.data;
          if (g === uy)
            if (c === 0) {
              t.removeChild(p), cn(o);
              return;
            } else
              c--;
          else
            (g === cy || g === Km || g === Xm) && c++;
        }
        l = p;
      } while (l);
      cn(o);
    }
    function rI(t, o) {
      t.nodeType === ho ? YC(t.parentNode, o) : t.nodeType === Rr && YC(t, o), cn(t);
    }
    function aI(t) {
      t = t;
      var o = t.style;
      typeof o.setProperty == "function" ? o.setProperty("display", "none", "important") : o.display = "none";
    }
    function iI(t) {
      t.nodeValue = "";
    }
    function sI(t, o) {
      t = t;
      var l = o[IL], c = l != null && l.hasOwnProperty("display") ? l.display : null;
      t.style.display = Td("display", c);
    }
    function lI(t, o) {
      t.nodeValue = o;
    }
    function cI(t) {
      t.nodeType === Rr ? t.textContent = "" : t.nodeType === Na && t.documentElement && t.removeChild(t.documentElement);
    }
    function uI(t, o, l) {
      return t.nodeType !== Rr || o.toLowerCase() !== t.nodeName.toLowerCase() ? null : t;
    }
    function dI(t, o) {
      return o === "" || t.nodeType !== mi ? null : t;
    }
    function pI(t) {
      return t.nodeType !== ho ? null : t;
    }
    function $E(t) {
      return t.data === Km;
    }
    function KC(t) {
      return t.data === Xm;
    }
    function fI(t) {
      var o = t.nextSibling && t.nextSibling.dataset, l, c, p;
      return o && (l = o.dgst, c = o.msg, p = o.stck), {
        message: c,
        digest: l,
        stack: p
      };
    }
    function mI(t, o) {
      t._reactRetry = o;
    }
    function dy(t) {
      for (; t != null; t = t.nextSibling) {
        var o = t.nodeType;
        if (o === Rr || o === mi)
          break;
        if (o === ho) {
          var l = t.data;
          if (l === cy || l === Xm || l === Km)
            break;
          if (l === uy)
            return null;
        }
      }
      return t;
    }
    function Qm(t) {
      return dy(t.nextSibling);
    }
    function vI(t) {
      return dy(t.firstChild);
    }
    function hI(t) {
      return dy(t.firstChild);
    }
    function gI(t) {
      return dy(t.nextSibling);
    }
    function yI(t, o, l, c, p, g, T) {
      Jm(g, t), ZC(t, l);
      var N;
      {
        var I = p;
        N = I.namespace;
      }
      var H = (g.mode & rn) !== Ft;
      return wL(t, o, l, N, c, H, T);
    }
    function bI(t, o, l, c) {
      return Jm(l, t), l.mode & rn, kL(t, o);
    }
    function CI(t, o) {
      Jm(o, t);
    }
    function xI(t) {
      for (var o = t.nextSibling, l = 0; o; ) {
        if (o.nodeType === ho) {
          var c = o.data;
          if (c === uy) {
            if (l === 0)
              return Qm(o);
            l--;
          } else
            (c === cy || c === Xm || c === Km) && l++;
        }
        o = o.nextSibling;
      }
      return null;
    }
    function ME(t) {
      for (var o = t.previousSibling, l = 0; o; ) {
        if (o.nodeType === ho) {
          var c = o.data;
          if (c === cy || c === Xm || c === Km) {
            if (l === 0)
              return o;
            l--;
          } else
            c === uy && l++;
        }
        o = o.previousSibling;
      }
      return null;
    }
    function SI(t) {
      cn(t);
    }
    function TI(t) {
      cn(t);
    }
    function EI(t) {
      return t !== "head" && t !== "body";
    }
    function RI(t, o, l, c) {
      var p = !0;
      iy(o.nodeValue, l, c, p);
    }
    function OI(t, o, l, c, p, g) {
      if (o[ly] !== !0) {
        var T = !0;
        iy(c.nodeValue, p, g, T);
      }
    }
    function wI(t, o) {
      o.nodeType === Rr ? zC(t, o) : o.nodeType === ho || FC(t, o);
    }
    function kI(t, o) {
      {
        var l = t.parentNode;
        l !== null && (o.nodeType === Rr ? zC(l, o) : o.nodeType === ho || FC(l, o));
      }
    }
    function NI(t, o, l, c, p) {
      (p || o[ly] !== !0) && (c.nodeType === Rr ? zC(l, c) : c.nodeType === ho || FC(l, c));
    }
    function $I(t, o, l) {
      jC(t, o);
    }
    function MI(t, o) {
      UC(t, o);
    }
    function DI(t, o, l) {
      {
        var c = t.parentNode;
        c !== null && jC(c, o);
      }
    }
    function PI(t, o) {
      {
        var l = t.parentNode;
        l !== null && UC(l, o);
      }
    }
    function LI(t, o, l, c, p, g) {
      (g || o[ly] !== !0) && jC(l, c);
    }
    function II(t, o, l, c, p) {
      (p || o[ly] !== !0) && UC(l, c);
    }
    function _I(t) {
      m("An error occurred during hydration. The server HTML was replaced with client content in <%s>.", t.nodeName.toLowerCase());
    }
    function AI(t) {
      Vm(t);
    }
    var Np = Math.random().toString(36).slice(2), $p = "__reactFiber$" + Np, XC = "__reactProps$" + Np, Zm = "__reactContainer$" + Np, QC = "__reactEvents$" + Np, BI = "__reactListeners$" + Np, zI = "__reactHandles$" + Np;
    function FI(t) {
      delete t[$p], delete t[XC], delete t[QC], delete t[BI], delete t[zI];
    }
    function Jm(t, o) {
      o[$p] = t;
    }
    function py(t, o) {
      o[Zm] = t;
    }
    function DE(t) {
      t[Zm] = null;
    }
    function ev(t) {
      return !!t[Zm];
    }
    function _u(t) {
      var o = t[$p];
      if (o)
        return o;
      for (var l = t.parentNode; l; ) {
        if (o = l[Zm] || l[$p], o) {
          var c = o.alternate;
          if (o.child !== null || c !== null && c.child !== null)
            for (var p = ME(t); p !== null; ) {
              var g = p[$p];
              if (g)
                return g;
              p = ME(p);
            }
          return o;
        }
        t = l, l = t.parentNode;
      }
      return null;
    }
    function mc(t) {
      var o = t[$p] || t[Zm];
      return o && (o.tag === M || o.tag === P || o.tag === U || o.tag === k) ? o : null;
    }
    function Mp(t) {
      if (t.tag === M || t.tag === P)
        return t.stateNode;
      throw new Error("getNodeFromInstance: Invalid argument.");
    }
    function fy(t) {
      return t[XC] || null;
    }
    function ZC(t, o) {
      t[XC] = o;
    }
    function jI(t) {
      var o = t[QC];
      return o === void 0 && (o = t[QC] = /* @__PURE__ */ new Set()), o;
    }
    var PE = {}, LE = s.ReactDebugCurrentFrame;
    function my(t) {
      if (t) {
        var o = t._owner, l = Wc(t.type, t._source, o ? o.type : null);
        LE.setExtraStackFrame(l);
      } else
        LE.setExtraStackFrame(null);
    }
    function ki(t, o, l, c, p) {
      {
        var g = Function.call.bind(le);
        for (var T in t)
          if (g(t, T)) {
            var N = void 0;
            try {
              if (typeof t[T] != "function") {
                var I = Error((c || "React class") + ": " + l + " type `" + T + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof t[T] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw I.name = "Invariant Violation", I;
              }
              N = t[T](o, T, c, l, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (H) {
              N = H;
            }
            N && !(N instanceof Error) && (my(p), m("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", c || "React class", l, T, typeof N), my(null)), N instanceof Error && !(N.message in PE) && (PE[N.message] = !0, my(p), m("Failed %s type: %s", l, N.message), my(null));
          }
      }
    }
    var JC = [], vy;
    vy = [];
    var ul = -1;
    function vc(t) {
      return {
        current: t
      };
    }
    function Lr(t, o) {
      if (ul < 0) {
        m("Unexpected pop.");
        return;
      }
      o !== vy[ul] && m("Unexpected Fiber popped."), t.current = JC[ul], JC[ul] = null, vy[ul] = null, ul--;
    }
    function Ir(t, o, l) {
      ul++, JC[ul] = t.current, vy[ul] = l, t.current = o;
    }
    var ex;
    ex = {};
    var La = {};
    Object.freeze(La);
    var dl = vc(La), hs = vc(!1), tx = La;
    function Dp(t, o, l) {
      return l && gs(o) ? tx : dl.current;
    }
    function IE(t, o, l) {
      {
        var c = t.stateNode;
        c.__reactInternalMemoizedUnmaskedChildContext = o, c.__reactInternalMemoizedMaskedChildContext = l;
      }
    }
    function Pp(t, o) {
      {
        var l = t.type, c = l.contextTypes;
        if (!c)
          return La;
        var p = t.stateNode;
        if (p && p.__reactInternalMemoizedUnmaskedChildContext === o)
          return p.__reactInternalMemoizedMaskedChildContext;
        var g = {};
        for (var T in c)
          g[T] = o[T];
        {
          var N = Xt(t) || "Unknown";
          ki(c, g, "context", N);
        }
        return p && IE(t, o, g), g;
      }
    }
    function hy() {
      return hs.current;
    }
    function gs(t) {
      {
        var o = t.childContextTypes;
        return o != null;
      }
    }
    function gy(t) {
      Lr(hs, t), Lr(dl, t);
    }
    function nx(t) {
      Lr(hs, t), Lr(dl, t);
    }
    function _E(t, o, l) {
      {
        if (dl.current !== La)
          throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
        Ir(dl, o, t), Ir(hs, l, t);
      }
    }
    function AE(t, o, l) {
      {
        var c = t.stateNode, p = o.childContextTypes;
        if (typeof c.getChildContext != "function") {
          {
            var g = Xt(t) || "Unknown";
            ex[g] || (ex[g] = !0, m("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", g, g));
          }
          return l;
        }
        var T = c.getChildContext();
        for (var N in T)
          if (!(N in p))
            throw new Error((Xt(t) || "Unknown") + '.getChildContext(): key "' + N + '" is not defined in childContextTypes.');
        {
          var I = Xt(t) || "Unknown";
          ki(p, T, "child context", I);
        }
        return ln({}, l, T);
      }
    }
    function yy(t) {
      {
        var o = t.stateNode, l = o && o.__reactInternalMemoizedMergedChildContext || La;
        return tx = dl.current, Ir(dl, l, t), Ir(hs, hs.current, t), !0;
      }
    }
    function BE(t, o, l) {
      {
        var c = t.stateNode;
        if (!c)
          throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
        if (l) {
          var p = AE(t, o, tx);
          c.__reactInternalMemoizedMergedChildContext = p, Lr(hs, t), Lr(dl, t), Ir(dl, p, t), Ir(hs, l, t);
        } else
          Lr(hs, t), Ir(hs, l, t);
      }
    }
    function UI(t) {
      {
        if (!om(t) || t.tag !== S)
          throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
        var o = t;
        do {
          switch (o.tag) {
            case k:
              return o.stateNode.context;
            case S: {
              var l = o.type;
              if (gs(l))
                return o.stateNode.__reactInternalMemoizedMergedChildContext;
              break;
            }
          }
          o = o.return;
        } while (o !== null);
        throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
    var hc = 0, by = 1, pl = null, ox = !1, rx = !1;
    function zE(t) {
      pl === null ? pl = [t] : pl.push(t);
    }
    function VI(t) {
      ox = !0, zE(t);
    }
    function FE() {
      ox && gc();
    }
    function gc() {
      if (!rx && pl !== null) {
        rx = !0;
        var t = 0, o = fa();
        try {
          var l = !0, c = pl;
          for (Eo(rr); t < c.length; t++) {
            var p = c[t];
            do
              p = p(l);
            while (p !== null);
          }
          pl = null, ox = !1;
        } catch (g) {
          throw pl !== null && (pl = pl.slice(t + 1)), Ld(_d, gc), g;
        } finally {
          Eo(o), rx = !1;
        }
      }
      return null;
    }
    var Lp = [], Ip = 0, Cy = null, xy = 0, Ka = [], Xa = 0, Au = null, fl = 1, ml = "";
    function HI(t) {
      return zu(), (t.flags & em) !== _t;
    }
    function WI(t) {
      return zu(), xy;
    }
    function GI() {
      var t = ml, o = fl, l = o & ~qI(o);
      return l.toString(32) + t;
    }
    function Bu(t, o) {
      zu(), Lp[Ip++] = xy, Lp[Ip++] = Cy, Cy = t, xy = o;
    }
    function jE(t, o, l) {
      zu(), Ka[Xa++] = fl, Ka[Xa++] = ml, Ka[Xa++] = Au, Au = t;
      var c = fl, p = ml, g = Sy(c) - 1, T = c & ~(1 << g), N = l + 1, I = Sy(o) + g;
      if (I > 30) {
        var H = g - g % 5, W = (1 << H) - 1, se = (T & W).toString(32), ae = T >> H, Te = g - H, Ee = Sy(o) + Te, Pe = N << Te, xt = Pe | ae, Bt = se + p;
        fl = 1 << Ee | xt, ml = Bt;
      } else {
        var Pt = N << g, fn = Pt | T, un = p;
        fl = 1 << I | fn, ml = un;
      }
    }
    function ax(t) {
      zu();
      var o = t.return;
      if (o !== null) {
        var l = 1, c = 0;
        Bu(t, l), jE(t, l, c);
      }
    }
    function Sy(t) {
      return 32 - Ud(t);
    }
    function qI(t) {
      return 1 << Sy(t) - 1;
    }
    function ix(t) {
      for (; t === Cy; )
        Cy = Lp[--Ip], Lp[Ip] = null, xy = Lp[--Ip], Lp[Ip] = null;
      for (; t === Au; )
        Au = Ka[--Xa], Ka[Xa] = null, ml = Ka[--Xa], Ka[Xa] = null, fl = Ka[--Xa], Ka[Xa] = null;
    }
    function YI() {
      return zu(), Au !== null ? {
        id: fl,
        overflow: ml
      } : null;
    }
    function KI(t, o) {
      zu(), Ka[Xa++] = fl, Ka[Xa++] = ml, Ka[Xa++] = Au, fl = o.id, ml = o.overflow, Au = t;
    }
    function zu() {
      mr() || m("Expected to be hydrating. This is a bug in React. Please file an issue.");
    }
    var fr = null, Qa = null, Ni = !1, Fu = !1, yc = null;
    function XI() {
      Ni && m("We should not be hydrating here. This is a bug in React. Please file a bug.");
    }
    function UE() {
      Fu = !0;
    }
    function QI() {
      return Fu;
    }
    function ZI(t) {
      var o = t.stateNode.containerInfo;
      return Qa = hI(o), fr = t, Ni = !0, yc = null, Fu = !1, !0;
    }
    function JI(t, o, l) {
      return Qa = gI(o), fr = t, Ni = !0, yc = null, Fu = !1, l !== null && KI(t, l), !0;
    }
    function VE(t, o) {
      switch (t.tag) {
        case k: {
          wI(t.stateNode.containerInfo, o);
          break;
        }
        case M: {
          var l = (t.mode & rn) !== Ft;
          NI(
            t.type,
            t.memoizedProps,
            t.stateNode,
            o,
            // TODO: Delete this argument when we remove the legacy root API.
            l
          );
          break;
        }
        case U: {
          var c = t.memoizedState;
          c.dehydrated !== null && kI(c.dehydrated, o);
          break;
        }
      }
    }
    function HE(t, o) {
      VE(t, o);
      var l = nB();
      l.stateNode = o, l.return = t;
      var c = t.deletions;
      c === null ? (t.deletions = [l], t.flags |= Cn) : c.push(l);
    }
    function sx(t, o) {
      {
        if (Fu)
          return;
        switch (t.tag) {
          case k: {
            var l = t.stateNode.containerInfo;
            switch (o.tag) {
              case M:
                var c = o.type;
                o.pendingProps, $I(l, c);
                break;
              case P:
                var p = o.pendingProps;
                MI(l, p);
                break;
            }
            break;
          }
          case M: {
            var g = t.type, T = t.memoizedProps, N = t.stateNode;
            switch (o.tag) {
              case M: {
                var I = o.type, H = o.pendingProps, W = (t.mode & rn) !== Ft;
                LI(
                  g,
                  T,
                  N,
                  I,
                  H,
                  // TODO: Delete this argument when we remove the legacy root API.
                  W
                );
                break;
              }
              case P: {
                var se = o.pendingProps, ae = (t.mode & rn) !== Ft;
                II(
                  g,
                  T,
                  N,
                  se,
                  // TODO: Delete this argument when we remove the legacy root API.
                  ae
                );
                break;
              }
            }
            break;
          }
          case U: {
            var Te = t.memoizedState, Ee = Te.dehydrated;
            if (Ee !== null)
              switch (o.tag) {
                case M:
                  var Pe = o.type;
                  o.pendingProps, DI(Ee, Pe);
                  break;
                case P:
                  var xt = o.pendingProps;
                  PI(Ee, xt);
                  break;
              }
            break;
          }
          default:
            return;
        }
      }
    }
    function WE(t, o) {
      o.flags = o.flags & ~la | Bn, sx(t, o);
    }
    function GE(t, o) {
      switch (t.tag) {
        case M: {
          var l = t.type;
          t.pendingProps;
          var c = uI(o, l);
          return c !== null ? (t.stateNode = c, fr = t, Qa = vI(c), !0) : !1;
        }
        case P: {
          var p = t.pendingProps, g = dI(o, p);
          return g !== null ? (t.stateNode = g, fr = t, Qa = null, !0) : !1;
        }
        case U: {
          var T = pI(o);
          if (T !== null) {
            var N = {
              dehydrated: T,
              treeContext: YI(),
              retryLane: Dr
            };
            t.memoizedState = N;
            var I = oB(T);
            return I.return = t, t.child = I, fr = t, Qa = null, !0;
          }
          return !1;
        }
        default:
          return !1;
      }
    }
    function lx(t) {
      return (t.mode & rn) !== Ft && (t.flags & Wt) === _t;
    }
    function cx(t) {
      throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
    }
    function ux(t) {
      if (Ni) {
        var o = Qa;
        if (!o) {
          lx(t) && (sx(fr, t), cx()), WE(fr, t), Ni = !1, fr = t;
          return;
        }
        var l = o;
        if (!GE(t, o)) {
          lx(t) && (sx(fr, t), cx()), o = Qm(l);
          var c = fr;
          if (!o || !GE(t, o)) {
            WE(fr, t), Ni = !1, fr = t;
            return;
          }
          HE(c, l);
        }
      }
    }
    function e_(t, o, l) {
      var c = t.stateNode, p = !Fu, g = yI(c, t.type, t.memoizedProps, o, l, t, p);
      return t.updateQueue = g, g !== null;
    }
    function t_(t) {
      var o = t.stateNode, l = t.memoizedProps, c = bI(o, l, t);
      if (c) {
        var p = fr;
        if (p !== null)
          switch (p.tag) {
            case k: {
              var g = p.stateNode.containerInfo, T = (p.mode & rn) !== Ft;
              RI(
                g,
                o,
                l,
                // TODO: Delete this argument when we remove the legacy root API.
                T
              );
              break;
            }
            case M: {
              var N = p.type, I = p.memoizedProps, H = p.stateNode, W = (p.mode & rn) !== Ft;
              OI(
                N,
                I,
                H,
                o,
                l,
                // TODO: Delete this argument when we remove the legacy root API.
                W
              );
              break;
            }
          }
      }
      return c;
    }
    function n_(t) {
      var o = t.memoizedState, l = o !== null ? o.dehydrated : null;
      if (!l)
        throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
      CI(l, t);
    }
    function o_(t) {
      var o = t.memoizedState, l = o !== null ? o.dehydrated : null;
      if (!l)
        throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
      return xI(l);
    }
    function qE(t) {
      for (var o = t.return; o !== null && o.tag !== M && o.tag !== k && o.tag !== U; )
        o = o.return;
      fr = o;
    }
    function Ty(t) {
      if (t !== fr)
        return !1;
      if (!Ni)
        return qE(t), Ni = !0, !1;
      if (t.tag !== k && (t.tag !== M || EI(t.type) && !WC(t.type, t.memoizedProps))) {
        var o = Qa;
        if (o)
          if (lx(t))
            YE(t), cx();
          else
            for (; o; )
              HE(t, o), o = Qm(o);
      }
      return qE(t), t.tag === U ? Qa = o_(t) : Qa = fr ? Qm(t.stateNode) : null, !0;
    }
    function r_() {
      return Ni && Qa !== null;
    }
    function YE(t) {
      for (var o = Qa; o; )
        VE(t, o), o = Qm(o);
    }
    function _p() {
      fr = null, Qa = null, Ni = !1, Fu = !1;
    }
    function KE() {
      yc !== null && (VO(yc), yc = null);
    }
    function mr() {
      return Ni;
    }
    function dx(t) {
      yc === null ? yc = [t] : yc.push(t);
    }
    var a_ = s.ReactCurrentBatchConfig, i_ = null;
    function s_() {
      return a_.transition;
    }
    var $i = {
      recordUnsafeLifecycleWarnings: function(t, o) {
      },
      flushPendingUnsafeLifecycleWarnings: function() {
      },
      recordLegacyContextWarning: function(t, o) {
      },
      flushLegacyContextWarning: function() {
      },
      discardPendingWarnings: function() {
      }
    };
    {
      var l_ = function(t) {
        for (var o = null, l = t; l !== null; )
          l.mode & Zn && (o = l), l = l.return;
        return o;
      }, ju = function(t) {
        var o = [];
        return t.forEach(function(l) {
          o.push(l);
        }), o.sort().join(", ");
      }, tv = [], nv = [], ov = [], rv = [], av = [], iv = [], Uu = /* @__PURE__ */ new Set();
      $i.recordUnsafeLifecycleWarnings = function(t, o) {
        Uu.has(t.type) || (typeof o.componentWillMount == "function" && // Don't warn about react-lifecycles-compat polyfilled components.
        o.componentWillMount.__suppressDeprecationWarning !== !0 && tv.push(t), t.mode & Zn && typeof o.UNSAFE_componentWillMount == "function" && nv.push(t), typeof o.componentWillReceiveProps == "function" && o.componentWillReceiveProps.__suppressDeprecationWarning !== !0 && ov.push(t), t.mode & Zn && typeof o.UNSAFE_componentWillReceiveProps == "function" && rv.push(t), typeof o.componentWillUpdate == "function" && o.componentWillUpdate.__suppressDeprecationWarning !== !0 && av.push(t), t.mode & Zn && typeof o.UNSAFE_componentWillUpdate == "function" && iv.push(t));
      }, $i.flushPendingUnsafeLifecycleWarnings = function() {
        var t = /* @__PURE__ */ new Set();
        tv.length > 0 && (tv.forEach(function(ae) {
          t.add(Xt(ae) || "Component"), Uu.add(ae.type);
        }), tv = []);
        var o = /* @__PURE__ */ new Set();
        nv.length > 0 && (nv.forEach(function(ae) {
          o.add(Xt(ae) || "Component"), Uu.add(ae.type);
        }), nv = []);
        var l = /* @__PURE__ */ new Set();
        ov.length > 0 && (ov.forEach(function(ae) {
          l.add(Xt(ae) || "Component"), Uu.add(ae.type);
        }), ov = []);
        var c = /* @__PURE__ */ new Set();
        rv.length > 0 && (rv.forEach(function(ae) {
          c.add(Xt(ae) || "Component"), Uu.add(ae.type);
        }), rv = []);
        var p = /* @__PURE__ */ new Set();
        av.length > 0 && (av.forEach(function(ae) {
          p.add(Xt(ae) || "Component"), Uu.add(ae.type);
        }), av = []);
        var g = /* @__PURE__ */ new Set();
        if (iv.length > 0 && (iv.forEach(function(ae) {
          g.add(Xt(ae) || "Component"), Uu.add(ae.type);
        }), iv = []), o.size > 0) {
          var T = ju(o);
          m(`Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.

Please update the following components: %s`, T);
        }
        if (c.size > 0) {
          var N = ju(c);
          m(`Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state

Please update the following components: %s`, N);
        }
        if (g.size > 0) {
          var I = ju(g);
          m(`Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.

Please update the following components: %s`, I);
        }
        if (t.size > 0) {
          var H = ju(t);
          v(`componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.
* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, H);
        }
        if (l.size > 0) {
          var W = ju(l);
          v(`componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state
* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, W);
        }
        if (p.size > 0) {
          var se = ju(p);
          v(`componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, se);
        }
      };
      var Ey = /* @__PURE__ */ new Map(), XE = /* @__PURE__ */ new Set();
      $i.recordLegacyContextWarning = function(t, o) {
        var l = l_(t);
        if (l === null) {
          m("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
          return;
        }
        if (!XE.has(t.type)) {
          var c = Ey.get(l);
          (t.type.contextTypes != null || t.type.childContextTypes != null || o !== null && typeof o.getChildContext == "function") && (c === void 0 && (c = [], Ey.set(l, c)), c.push(t));
        }
      }, $i.flushLegacyContextWarning = function() {
        Ey.forEach(function(t, o) {
          if (t.length !== 0) {
            var l = t[0], c = /* @__PURE__ */ new Set();
            t.forEach(function(g) {
              c.add(Xt(g) || "Component"), XE.add(g.type);
            });
            var p = ju(c);
            try {
              On(l), m(`Legacy context API has been detected within a strict-mode tree.

The old API will be supported in all 16.x releases, but applications using it should migrate to the new version.

Please update the following components: %s

Learn more about this warning here: https://reactjs.org/link/legacy-context`, p);
            } finally {
              xo();
            }
          }
        });
      }, $i.discardPendingWarnings = function() {
        tv = [], nv = [], ov = [], rv = [], av = [], iv = [], Ey = /* @__PURE__ */ new Map();
      };
    }
    function Mi(t, o) {
      if (t && t.defaultProps) {
        var l = ln({}, o), c = t.defaultProps;
        for (var p in c)
          l[p] === void 0 && (l[p] = c[p]);
        return l;
      }
      return o;
    }
    var px = vc(null), fx;
    fx = {};
    var Ry = null, Ap = null, mx = null, Oy = !1;
    function wy() {
      Ry = null, Ap = null, mx = null, Oy = !1;
    }
    function QE() {
      Oy = !0;
    }
    function ZE() {
      Oy = !1;
    }
    function JE(t, o, l) {
      Ir(px, o._currentValue, t), o._currentValue = l, o._currentRenderer !== void 0 && o._currentRenderer !== null && o._currentRenderer !== fx && m("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."), o._currentRenderer = fx;
    }
    function vx(t, o) {
      var l = px.current;
      Lr(px, o), t._currentValue = l;
    }
    function hx(t, o, l) {
      for (var c = t; c !== null; ) {
        var p = c.alternate;
        if (Js(c.childLanes, o) ? p !== null && !Js(p.childLanes, o) && (p.childLanes = Jt(p.childLanes, o)) : (c.childLanes = Jt(c.childLanes, o), p !== null && (p.childLanes = Jt(p.childLanes, o))), c === l)
          break;
        c = c.return;
      }
      c !== l && m("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
    }
    function c_(t, o, l) {
      u_(t, o, l);
    }
    function u_(t, o, l) {
      var c = t.child;
      for (c !== null && (c.return = t); c !== null; ) {
        var p = void 0, g = c.dependencies;
        if (g !== null) {
          p = c.child;
          for (var T = g.firstContext; T !== null; ) {
            if (T.context === o) {
              if (c.tag === S) {
                var N = To(l), I = vl(In, N);
                I.tag = Ny;
                var H = c.updateQueue;
                if (H !== null) {
                  var W = H.shared, se = W.pending;
                  se === null ? I.next = I : (I.next = se.next, se.next = I), W.pending = I;
                }
              }
              c.lanes = Jt(c.lanes, l);
              var ae = c.alternate;
              ae !== null && (ae.lanes = Jt(ae.lanes, l)), hx(c.return, l, t), g.lanes = Jt(g.lanes, l);
              break;
            }
            T = T.next;
          }
        } else if (c.tag === V)
          p = c.type === t.type ? null : c.child;
        else if (c.tag === Q) {
          var Te = c.return;
          if (Te === null)
            throw new Error("We just came from a parent so we must have had a parent. This is a bug in React.");
          Te.lanes = Jt(Te.lanes, l);
          var Ee = Te.alternate;
          Ee !== null && (Ee.lanes = Jt(Ee.lanes, l)), hx(Te, l, t), p = c.sibling;
        } else
          p = c.child;
        if (p !== null)
          p.return = c;
        else
          for (p = c; p !== null; ) {
            if (p === t) {
              p = null;
              break;
            }
            var Pe = p.sibling;
            if (Pe !== null) {
              Pe.return = p.return, p = Pe;
              break;
            }
            p = p.return;
          }
        c = p;
      }
    }
    function Bp(t, o) {
      Ry = t, Ap = null, mx = null;
      var l = t.dependencies;
      if (l !== null) {
        var c = l.firstContext;
        c !== null && (Pr(l.lanes, o) && Cv(), l.firstContext = null);
      }
    }
    function Fo(t) {
      Oy && m("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
      var o = t._currentValue;
      if (mx !== t) {
        var l = {
          context: t,
          memoizedValue: o,
          next: null
        };
        if (Ap === null) {
          if (Ry === null)
            throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
          Ap = l, Ry.dependencies = {
            lanes: Ae,
            firstContext: l
          };
        } else
          Ap = Ap.next = l;
      }
      return o;
    }
    var Vu = null;
    function gx(t) {
      Vu === null ? Vu = [t] : Vu.push(t);
    }
    function d_() {
      if (Vu !== null) {
        for (var t = 0; t < Vu.length; t++) {
          var o = Vu[t], l = o.interleaved;
          if (l !== null) {
            o.interleaved = null;
            var c = l.next, p = o.pending;
            if (p !== null) {
              var g = p.next;
              p.next = c, l.next = g;
            }
            o.pending = l;
          }
        }
        Vu = null;
      }
    }
    function eR(t, o, l, c) {
      var p = o.interleaved;
      return p === null ? (l.next = l, gx(o)) : (l.next = p.next, p.next = l), o.interleaved = l, ky(t, c);
    }
    function p_(t, o, l, c) {
      var p = o.interleaved;
      p === null ? (l.next = l, gx(o)) : (l.next = p.next, p.next = l), o.interleaved = l;
    }
    function f_(t, o, l, c) {
      var p = o.interleaved;
      return p === null ? (l.next = l, gx(o)) : (l.next = p.next, p.next = l), o.interleaved = l, ky(t, c);
    }
    function ya(t, o) {
      return ky(t, o);
    }
    var m_ = ky;
    function ky(t, o) {
      t.lanes = Jt(t.lanes, o);
      var l = t.alternate;
      l !== null && (l.lanes = Jt(l.lanes, o)), l === null && (t.flags & (Bn | la)) !== _t && tw(t);
      for (var c = t, p = t.return; p !== null; )
        p.childLanes = Jt(p.childLanes, o), l = p.alternate, l !== null ? l.childLanes = Jt(l.childLanes, o) : (p.flags & (Bn | la)) !== _t && tw(t), c = p, p = p.return;
      if (c.tag === k) {
        var g = c.stateNode;
        return g;
      } else
        return null;
    }
    var tR = 0, nR = 1, Ny = 2, yx = 3, $y = !1, bx, My;
    bx = !1, My = null;
    function Cx(t) {
      var o = {
        baseState: t.memoizedState,
        firstBaseUpdate: null,
        lastBaseUpdate: null,
        shared: {
          pending: null,
          interleaved: null,
          lanes: Ae
        },
        effects: null
      };
      t.updateQueue = o;
    }
    function oR(t, o) {
      var l = o.updateQueue, c = t.updateQueue;
      if (l === c) {
        var p = {
          baseState: c.baseState,
          firstBaseUpdate: c.firstBaseUpdate,
          lastBaseUpdate: c.lastBaseUpdate,
          shared: c.shared,
          effects: c.effects
        };
        o.updateQueue = p;
      }
    }
    function vl(t, o) {
      var l = {
        eventTime: t,
        lane: o,
        tag: tR,
        payload: null,
        callback: null,
        next: null
      };
      return l;
    }
    function bc(t, o, l) {
      var c = t.updateQueue;
      if (c === null)
        return null;
      var p = c.shared;
      if (My === p && !bx && (m("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback."), bx = !0), m2()) {
        var g = p.pending;
        return g === null ? o.next = o : (o.next = g.next, g.next = o), p.pending = o, m_(t, l);
      } else
        return f_(t, p, o, l);
    }
    function Dy(t, o, l) {
      var c = o.updateQueue;
      if (c !== null) {
        var p = c.shared;
        if (hm(l)) {
          var g = p.lanes;
          g = ym(g, t.pendingLanes);
          var T = Jt(g, l);
          p.lanes = T, Jl(t, T);
        }
      }
    }
    function xx(t, o) {
      var l = t.updateQueue, c = t.alternate;
      if (c !== null) {
        var p = c.updateQueue;
        if (l === p) {
          var g = null, T = null, N = l.firstBaseUpdate;
          if (N !== null) {
            var I = N;
            do {
              var H = {
                eventTime: I.eventTime,
                lane: I.lane,
                tag: I.tag,
                payload: I.payload,
                callback: I.callback,
                next: null
              };
              T === null ? g = T = H : (T.next = H, T = H), I = I.next;
            } while (I !== null);
            T === null ? g = T = o : (T.next = o, T = o);
          } else
            g = T = o;
          l = {
            baseState: p.baseState,
            firstBaseUpdate: g,
            lastBaseUpdate: T,
            shared: p.shared,
            effects: p.effects
          }, t.updateQueue = l;
          return;
        }
      }
      var W = l.lastBaseUpdate;
      W === null ? l.firstBaseUpdate = o : W.next = o, l.lastBaseUpdate = o;
    }
    function v_(t, o, l, c, p, g) {
      switch (l.tag) {
        case nR: {
          var T = l.payload;
          if (typeof T == "function") {
            QE();
            var N = T.call(g, c, p);
            {
              if (t.mode & Zn) {
                So(!0);
                try {
                  T.call(g, c, p);
                } finally {
                  So(!1);
                }
              }
              ZE();
            }
            return N;
          }
          return T;
        }
        case yx:
          t.flags = t.flags & ~Io | Wt;
        case tR: {
          var I = l.payload, H;
          if (typeof I == "function") {
            QE(), H = I.call(g, c, p);
            {
              if (t.mode & Zn) {
                So(!0);
                try {
                  I.call(g, c, p);
                } finally {
                  So(!1);
                }
              }
              ZE();
            }
          } else
            H = I;
          return H == null ? c : ln({}, c, H);
        }
        case Ny:
          return $y = !0, c;
      }
      return c;
    }
    function Py(t, o, l, c) {
      var p = t.updateQueue;
      $y = !1, My = p.shared;
      var g = p.firstBaseUpdate, T = p.lastBaseUpdate, N = p.shared.pending;
      if (N !== null) {
        p.shared.pending = null;
        var I = N, H = I.next;
        I.next = null, T === null ? g = H : T.next = H, T = I;
        var W = t.alternate;
        if (W !== null) {
          var se = W.updateQueue, ae = se.lastBaseUpdate;
          ae !== T && (ae === null ? se.firstBaseUpdate = H : ae.next = H, se.lastBaseUpdate = I);
        }
      }
      if (g !== null) {
        var Te = p.baseState, Ee = Ae, Pe = null, xt = null, Bt = null, Pt = g;
        do {
          var fn = Pt.lane, un = Pt.eventTime;
          if (Js(c, fn)) {
            if (Bt !== null) {
              var Le = {
                eventTime: un,
                // This update is going to be committed so we never want uncommit
                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                // this will never be skipped by the check above.
                lane: dn,
                tag: Pt.tag,
                payload: Pt.payload,
                callback: Pt.callback,
                next: null
              };
              Bt = Bt.next = Le;
            }
            Te = v_(t, p, Pt, Te, o, l);
            var be = Pt.callback;
            if (be !== null && // If the update was already committed, we should not queue its
            // callback again.
            Pt.lane !== dn) {
              t.flags |= Va;
              var at = p.effects;
              at === null ? p.effects = [Pt] : at.push(Pt);
            }
          } else {
            var ye = {
              eventTime: un,
              lane: fn,
              tag: Pt.tag,
              payload: Pt.payload,
              callback: Pt.callback,
              next: null
            };
            Bt === null ? (xt = Bt = ye, Pe = Te) : Bt = Bt.next = ye, Ee = Jt(Ee, fn);
          }
          if (Pt = Pt.next, Pt === null) {
            if (N = p.shared.pending, N === null)
              break;
            var St = N, yt = St.next;
            St.next = null, Pt = yt, p.lastBaseUpdate = St, p.shared.pending = null;
          }
        } while (!0);
        Bt === null && (Pe = Te), p.baseState = Pe, p.firstBaseUpdate = xt, p.lastBaseUpdate = Bt;
        var Ht = p.shared.interleaved;
        if (Ht !== null) {
          var Kt = Ht;
          do
            Ee = Jt(Ee, Kt.lane), Kt = Kt.next;
          while (Kt !== Ht);
        } else
          g === null && (p.shared.lanes = Ae);
        Dv(Ee), t.lanes = Ee, t.memoizedState = Te;
      }
      My = null;
    }
    function h_(t, o) {
      if (typeof t != "function")
        throw new Error("Invalid argument passed as callback. Expected a function. Instead " + ("received: " + t));
      t.call(o);
    }
    function rR() {
      $y = !1;
    }
    function Ly() {
      return $y;
    }
    function aR(t, o, l) {
      var c = o.effects;
      if (o.effects = null, c !== null)
        for (var p = 0; p < c.length; p++) {
          var g = c[p], T = g.callback;
          T !== null && (g.callback = null, h_(T, l));
        }
    }
    var Sx = {}, iR = new e.Component().refs, Tx, Ex, Rx, Ox, wx, sR, Iy, kx, Nx, $x;
    {
      Tx = /* @__PURE__ */ new Set(), Ex = /* @__PURE__ */ new Set(), Rx = /* @__PURE__ */ new Set(), Ox = /* @__PURE__ */ new Set(), kx = /* @__PURE__ */ new Set(), wx = /* @__PURE__ */ new Set(), Nx = /* @__PURE__ */ new Set(), $x = /* @__PURE__ */ new Set();
      var lR = /* @__PURE__ */ new Set();
      Iy = function(t, o) {
        if (!(t === null || typeof t == "function")) {
          var l = o + "_" + t;
          lR.has(l) || (lR.add(l), m("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", o, t));
        }
      }, sR = function(t, o) {
        if (o === void 0) {
          var l = Pn(t) || "Component";
          wx.has(l) || (wx.add(l), m("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", l));
        }
      }, Object.defineProperty(Sx, "_processChildContext", {
        enumerable: !1,
        value: function() {
          throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
        }
      }), Object.freeze(Sx);
    }
    function Mx(t, o, l, c) {
      var p = t.memoizedState, g = l(c, p);
      {
        if (t.mode & Zn) {
          So(!0);
          try {
            g = l(c, p);
          } finally {
            So(!1);
          }
        }
        sR(o, g);
      }
      var T = g == null ? p : ln({}, p, g);
      if (t.memoizedState = T, t.lanes === Ae) {
        var N = t.updateQueue;
        N.baseState = T;
      }
    }
    var Dx = {
      isMounted: Wr,
      enqueueSetState: function(t, o, l) {
        var c = ia(t), p = Qr(), g = wc(c), T = vl(p, g);
        T.payload = o, l != null && (Iy(l, "setState"), T.callback = l);
        var N = bc(c, T, g);
        N !== null && (Jo(N, c, g, p), Dy(N, c, g)), ss(c, g);
      },
      enqueueReplaceState: function(t, o, l) {
        var c = ia(t), p = Qr(), g = wc(c), T = vl(p, g);
        T.tag = nR, T.payload = o, l != null && (Iy(l, "replaceState"), T.callback = l);
        var N = bc(c, T, g);
        N !== null && (Jo(N, c, g, p), Dy(N, c, g)), ss(c, g);
      },
      enqueueForceUpdate: function(t, o) {
        var l = ia(t), c = Qr(), p = wc(l), g = vl(c, p);
        g.tag = Ny, o != null && (Iy(o, "forceUpdate"), g.callback = o);
        var T = bc(l, g, p);
        T !== null && (Jo(T, l, p, c), Dy(T, l, p)), pm(l, p);
      }
    };
    function cR(t, o, l, c, p, g, T) {
      var N = t.stateNode;
      if (typeof N.shouldComponentUpdate == "function") {
        var I = N.shouldComponentUpdate(c, g, T);
        {
          if (t.mode & Zn) {
            So(!0);
            try {
              I = N.shouldComponentUpdate(c, g, T);
            } finally {
              So(!1);
            }
          }
          I === void 0 && m("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", Pn(o) || "Component");
        }
        return I;
      }
      return o.prototype && o.prototype.isPureReactComponent ? !It(l, c) || !It(p, g) : !0;
    }
    function g_(t, o, l) {
      var c = t.stateNode;
      {
        var p = Pn(o) || "Component", g = c.render;
        g || (o.prototype && typeof o.prototype.render == "function" ? m("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", p) : m("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", p)), c.getInitialState && !c.getInitialState.isReactClassApproved && !c.state && m("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", p), c.getDefaultProps && !c.getDefaultProps.isReactClassApproved && m("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", p), c.propTypes && m("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", p), c.contextType && m("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", p), c.contextTypes && m("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", p), o.contextType && o.contextTypes && !Nx.has(o) && (Nx.add(o), m("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", p)), typeof c.componentShouldUpdate == "function" && m("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", p), o.prototype && o.prototype.isPureReactComponent && typeof c.shouldComponentUpdate < "u" && m("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", Pn(o) || "A pure component"), typeof c.componentDidUnmount == "function" && m("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", p), typeof c.componentDidReceiveProps == "function" && m("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", p), typeof c.componentWillRecieveProps == "function" && m("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", p), typeof c.UNSAFE_componentWillRecieveProps == "function" && m("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", p);
        var T = c.props !== l;
        c.props !== void 0 && T && m("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", p, p), c.defaultProps && m("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", p, p), typeof c.getSnapshotBeforeUpdate == "function" && typeof c.componentDidUpdate != "function" && !Rx.has(o) && (Rx.add(o), m("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", Pn(o))), typeof c.getDerivedStateFromProps == "function" && m("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", p), typeof c.getDerivedStateFromError == "function" && m("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", p), typeof o.getSnapshotBeforeUpdate == "function" && m("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", p);
        var N = c.state;
        N && (typeof N != "object" || Po(N)) && m("%s.state: must be set to an object or null", p), typeof c.getChildContext == "function" && typeof o.childContextTypes != "object" && m("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", p);
      }
    }
    function uR(t, o) {
      o.updater = Dx, t.stateNode = o, Vl(o, t), o._reactInternalInstance = Sx;
    }
    function dR(t, o, l) {
      var c = !1, p = La, g = La, T = o.contextType;
      if ("contextType" in o) {
        var N = (
          // Allow null for conditional declaration
          T === null || T !== void 0 && T.$$typeof === Do && T._context === void 0
        );
        if (!N && !$x.has(o)) {
          $x.add(o);
          var I = "";
          T === void 0 ? I = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file." : typeof T != "object" ? I = " However, it is set to a " + typeof T + "." : T.$$typeof === Er ? I = " Did you accidentally pass the Context.Provider instead?" : T._context !== void 0 ? I = " Did you accidentally pass the Context.Consumer instead?" : I = " However, it is set to an object with keys {" + Object.keys(T).join(", ") + "}.", m("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", Pn(o) || "Component", I);
        }
      }
      if (typeof T == "object" && T !== null)
        g = Fo(T);
      else {
        p = Dp(t, o, !0);
        var H = o.contextTypes;
        c = H != null, g = c ? Pp(t, p) : La;
      }
      var W = new o(l, g);
      if (t.mode & Zn) {
        So(!0);
        try {
          W = new o(l, g);
        } finally {
          So(!1);
        }
      }
      var se = t.memoizedState = W.state !== null && W.state !== void 0 ? W.state : null;
      uR(t, W);
      {
        if (typeof o.getDerivedStateFromProps == "function" && se === null) {
          var ae = Pn(o) || "Component";
          Ex.has(ae) || (Ex.add(ae), m("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", ae, W.state === null ? "null" : "undefined", ae));
        }
        if (typeof o.getDerivedStateFromProps == "function" || typeof W.getSnapshotBeforeUpdate == "function") {
          var Te = null, Ee = null, Pe = null;
          if (typeof W.componentWillMount == "function" && W.componentWillMount.__suppressDeprecationWarning !== !0 ? Te = "componentWillMount" : typeof W.UNSAFE_componentWillMount == "function" && (Te = "UNSAFE_componentWillMount"), typeof W.componentWillReceiveProps == "function" && W.componentWillReceiveProps.__suppressDeprecationWarning !== !0 ? Ee = "componentWillReceiveProps" : typeof W.UNSAFE_componentWillReceiveProps == "function" && (Ee = "UNSAFE_componentWillReceiveProps"), typeof W.componentWillUpdate == "function" && W.componentWillUpdate.__suppressDeprecationWarning !== !0 ? Pe = "componentWillUpdate" : typeof W.UNSAFE_componentWillUpdate == "function" && (Pe = "UNSAFE_componentWillUpdate"), Te !== null || Ee !== null || Pe !== null) {
            var xt = Pn(o) || "Component", Bt = typeof o.getDerivedStateFromProps == "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
            Ox.has(xt) || (Ox.add(xt), m(`Unsafe legacy lifecycles will not be called for components using new component APIs.

%s uses %s but also contains the following legacy lifecycles:%s%s%s

The above lifecycles should be removed. Learn more about this warning here:
https://reactjs.org/link/unsafe-component-lifecycles`, xt, Bt, Te !== null ? `
  ` + Te : "", Ee !== null ? `
  ` + Ee : "", Pe !== null ? `
  ` + Pe : ""));
          }
        }
      }
      return c && IE(t, p, g), W;
    }
    function y_(t, o) {
      var l = o.state;
      typeof o.componentWillMount == "function" && o.componentWillMount(), typeof o.UNSAFE_componentWillMount == "function" && o.UNSAFE_componentWillMount(), l !== o.state && (m("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", Xt(t) || "Component"), Dx.enqueueReplaceState(o, o.state, null));
    }
    function pR(t, o, l, c) {
      var p = o.state;
      if (typeof o.componentWillReceiveProps == "function" && o.componentWillReceiveProps(l, c), typeof o.UNSAFE_componentWillReceiveProps == "function" && o.UNSAFE_componentWillReceiveProps(l, c), o.state !== p) {
        {
          var g = Xt(t) || "Component";
          Tx.has(g) || (Tx.add(g), m("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", g));
        }
        Dx.enqueueReplaceState(o, o.state, null);
      }
    }
    function Px(t, o, l, c) {
      g_(t, o, l);
      var p = t.stateNode;
      p.props = l, p.state = t.memoizedState, p.refs = iR, Cx(t);
      var g = o.contextType;
      if (typeof g == "object" && g !== null)
        p.context = Fo(g);
      else {
        var T = Dp(t, o, !0);
        p.context = Pp(t, T);
      }
      {
        if (p.state === l) {
          var N = Pn(o) || "Component";
          kx.has(N) || (kx.add(N), m("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", N));
        }
        t.mode & Zn && $i.recordLegacyContextWarning(t, p), $i.recordUnsafeLifecycleWarnings(t, p);
      }
      p.state = t.memoizedState;
      var I = o.getDerivedStateFromProps;
      if (typeof I == "function" && (Mx(t, o, I, l), p.state = t.memoizedState), typeof o.getDerivedStateFromProps != "function" && typeof p.getSnapshotBeforeUpdate != "function" && (typeof p.UNSAFE_componentWillMount == "function" || typeof p.componentWillMount == "function") && (y_(t, p), Py(t, l, p, c), p.state = t.memoizedState), typeof p.componentDidMount == "function") {
        var H = Zt;
        H |= wr, (t.mode & da) !== Ft && (H |= kr), t.flags |= H;
      }
    }
    function b_(t, o, l, c) {
      var p = t.stateNode, g = t.memoizedProps;
      p.props = g;
      var T = p.context, N = o.contextType, I = La;
      if (typeof N == "object" && N !== null)
        I = Fo(N);
      else {
        var H = Dp(t, o, !0);
        I = Pp(t, H);
      }
      var W = o.getDerivedStateFromProps, se = typeof W == "function" || typeof p.getSnapshotBeforeUpdate == "function";
      !se && (typeof p.UNSAFE_componentWillReceiveProps == "function" || typeof p.componentWillReceiveProps == "function") && (g !== l || T !== I) && pR(t, p, l, I), rR();
      var ae = t.memoizedState, Te = p.state = ae;
      if (Py(t, l, p, c), Te = t.memoizedState, g === l && ae === Te && !hy() && !Ly()) {
        if (typeof p.componentDidMount == "function") {
          var Ee = Zt;
          Ee |= wr, (t.mode & da) !== Ft && (Ee |= kr), t.flags |= Ee;
        }
        return !1;
      }
      typeof W == "function" && (Mx(t, o, W, l), Te = t.memoizedState);
      var Pe = Ly() || cR(t, o, g, l, ae, Te, I);
      if (Pe) {
        if (!se && (typeof p.UNSAFE_componentWillMount == "function" || typeof p.componentWillMount == "function") && (typeof p.componentWillMount == "function" && p.componentWillMount(), typeof p.UNSAFE_componentWillMount == "function" && p.UNSAFE_componentWillMount()), typeof p.componentDidMount == "function") {
          var xt = Zt;
          xt |= wr, (t.mode & da) !== Ft && (xt |= kr), t.flags |= xt;
        }
      } else {
        if (typeof p.componentDidMount == "function") {
          var Bt = Zt;
          Bt |= wr, (t.mode & da) !== Ft && (Bt |= kr), t.flags |= Bt;
        }
        t.memoizedProps = l, t.memoizedState = Te;
      }
      return p.props = l, p.state = Te, p.context = I, Pe;
    }
    function C_(t, o, l, c, p) {
      var g = o.stateNode;
      oR(t, o);
      var T = o.memoizedProps, N = o.type === o.elementType ? T : Mi(o.type, T);
      g.props = N;
      var I = o.pendingProps, H = g.context, W = l.contextType, se = La;
      if (typeof W == "object" && W !== null)
        se = Fo(W);
      else {
        var ae = Dp(o, l, !0);
        se = Pp(o, ae);
      }
      var Te = l.getDerivedStateFromProps, Ee = typeof Te == "function" || typeof g.getSnapshotBeforeUpdate == "function";
      !Ee && (typeof g.UNSAFE_componentWillReceiveProps == "function" || typeof g.componentWillReceiveProps == "function") && (T !== I || H !== se) && pR(o, g, c, se), rR();
      var Pe = o.memoizedState, xt = g.state = Pe;
      if (Py(o, c, g, p), xt = o.memoizedState, T === I && Pe === xt && !hy() && !Ly() && !ne)
        return typeof g.componentDidUpdate == "function" && (T !== t.memoizedProps || Pe !== t.memoizedState) && (o.flags |= Zt), typeof g.getSnapshotBeforeUpdate == "function" && (T !== t.memoizedProps || Pe !== t.memoizedState) && (o.flags |= sa), !1;
      typeof Te == "function" && (Mx(o, l, Te, c), xt = o.memoizedState);
      var Bt = Ly() || cR(o, l, N, c, Pe, xt, se) || // TODO: In some cases, we'll end up checking if context has changed twice,
      // both before and after `shouldComponentUpdate` has been called. Not ideal,
      // but I'm loath to refactor this function. This only happens for memoized
      // components so it's not that common.
      ne;
      return Bt ? (!Ee && (typeof g.UNSAFE_componentWillUpdate == "function" || typeof g.componentWillUpdate == "function") && (typeof g.componentWillUpdate == "function" && g.componentWillUpdate(c, xt, se), typeof g.UNSAFE_componentWillUpdate == "function" && g.UNSAFE_componentWillUpdate(c, xt, se)), typeof g.componentDidUpdate == "function" && (o.flags |= Zt), typeof g.getSnapshotBeforeUpdate == "function" && (o.flags |= sa)) : (typeof g.componentDidUpdate == "function" && (T !== t.memoizedProps || Pe !== t.memoizedState) && (o.flags |= Zt), typeof g.getSnapshotBeforeUpdate == "function" && (T !== t.memoizedProps || Pe !== t.memoizedState) && (o.flags |= sa), o.memoizedProps = c, o.memoizedState = xt), g.props = c, g.state = xt, g.context = se, Bt;
    }
    var Lx, Ix, _x, Ax, Bx, fR = function(t, o) {
    };
    Lx = !1, Ix = !1, _x = {}, Ax = {}, Bx = {}, fR = function(t, o) {
      if (!(t === null || typeof t != "object") && !(!t._store || t._store.validated || t.key != null)) {
        if (typeof t._store != "object")
          throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
        t._store.validated = !0;
        var l = Xt(o) || "Component";
        Ax[l] || (Ax[l] = !0, m('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.'));
      }
    };
    function sv(t, o, l) {
      var c = l.ref;
      if (c !== null && typeof c != "function" && typeof c != "object") {
        if ((t.mode & Zn || De) && // We warn in ReactElement.js if owner and self are equal for string refs
        // because these cannot be automatically converted to an arrow function
        // using a codemod. Therefore, we don't have to warn about string refs again.
        !(l._owner && l._self && l._owner.stateNode !== l._self)) {
          var p = Xt(t) || "Component";
          _x[p] || (m('A string ref, "%s", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', c), _x[p] = !0);
        }
        if (l._owner) {
          var g = l._owner, T;
          if (g) {
            var N = g;
            if (N.tag !== S)
              throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
            T = N.stateNode;
          }
          if (!T)
            throw new Error("Missing owner for string ref " + c + ". This error is likely caused by a bug in React. Please file an issue.");
          var I = T;
          Dt(c, "ref");
          var H = "" + c;
          if (o !== null && o.ref !== null && typeof o.ref == "function" && o.ref._stringRef === H)
            return o.ref;
          var W = function(se) {
            var ae = I.refs;
            ae === iR && (ae = I.refs = {}), se === null ? delete ae[H] : ae[H] = se;
          };
          return W._stringRef = H, W;
        } else {
          if (typeof c != "string")
            throw new Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
          if (!l._owner)
            throw new Error("Element ref was specified as a string (" + c + `) but no owner was set. This could happen for one of the following reasons:
1. You may be adding a ref to a function component
2. You may be adding a ref to a component that was not created inside a component's render method
3. You have multiple copies of React loaded
See https://reactjs.org/link/refs-must-have-owner for more information.`);
        }
      }
      return c;
    }
    function _y(t, o) {
      var l = Object.prototype.toString.call(o);
      throw new Error("Objects are not valid as a React child (found: " + (l === "[object Object]" ? "object with keys {" + Object.keys(o).join(", ") + "}" : l) + "). If you meant to render a collection of children, use an array instead.");
    }
    function Ay(t) {
      {
        var o = Xt(t) || "Component";
        if (Bx[o])
          return;
        Bx[o] = !0, m("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
      }
    }
    function mR(t) {
      var o = t._payload, l = t._init;
      return l(o);
    }
    function vR(t) {
      function o(ye, Le) {
        if (t) {
          var be = ye.deletions;
          be === null ? (ye.deletions = [Le], ye.flags |= Cn) : be.push(Le);
        }
      }
      function l(ye, Le) {
        if (!t)
          return null;
        for (var be = Le; be !== null; )
          o(ye, be), be = be.sibling;
        return null;
      }
      function c(ye, Le) {
        for (var be = /* @__PURE__ */ new Map(), at = Le; at !== null; )
          at.key !== null ? be.set(at.key, at) : be.set(at.index, at), at = at.sibling;
        return be;
      }
      function p(ye, Le) {
        var be = Qu(ye, Le);
        return be.index = 0, be.sibling = null, be;
      }
      function g(ye, Le, be) {
        if (ye.index = be, !t)
          return ye.flags |= em, Le;
        var at = ye.alternate;
        if (at !== null) {
          var St = at.index;
          return St < Le ? (ye.flags |= Bn, Le) : St;
        } else
          return ye.flags |= Bn, Le;
      }
      function T(ye) {
        return t && ye.alternate === null && (ye.flags |= Bn), ye;
      }
      function N(ye, Le, be, at) {
        if (Le === null || Le.tag !== P) {
          var St = dT(be, ye.mode, at);
          return St.return = ye, St;
        } else {
          var yt = p(Le, be);
          return yt.return = ye, yt;
        }
      }
      function I(ye, Le, be, at) {
        var St = be.type;
        if (St === Uo)
          return W(ye, Le, be.props.children, at, be.key);
        if (Le !== null && (Le.elementType === St || // Keep this check inline so it only runs on the false path:
        aw(Le, be) || // Lazy types should reconcile their resolved type.
        // We need to do this after the Hot Reloading check above,
        // because hot reloading has different semantics than prod because
        // it doesn't resuspend. So we can't let the call below suspend.
        typeof St == "object" && St !== null && St.$$typeof === ft && mR(St) === Le.type)) {
          var yt = p(Le, be.props);
          return yt.ref = sv(ye, Le, be), yt.return = ye, yt._debugSource = be._source, yt._debugOwner = be._owner, yt;
        }
        var Ht = uT(be, ye.mode, at);
        return Ht.ref = sv(ye, Le, be), Ht.return = ye, Ht;
      }
      function H(ye, Le, be, at) {
        if (Le === null || Le.tag !== D || Le.stateNode.containerInfo !== be.containerInfo || Le.stateNode.implementation !== be.implementation) {
          var St = pT(be, ye.mode, at);
          return St.return = ye, St;
        } else {
          var yt = p(Le, be.children || []);
          return yt.return = ye, yt;
        }
      }
      function W(ye, Le, be, at, St) {
        if (Le === null || Le.tag !== L) {
          var yt = Nc(be, ye.mode, at, St);
          return yt.return = ye, yt;
        } else {
          var Ht = p(Le, be);
          return Ht.return = ye, Ht;
        }
      }
      function se(ye, Le, be) {
        if (typeof Le == "string" && Le !== "" || typeof Le == "number") {
          var at = dT("" + Le, ye.mode, be);
          return at.return = ye, at;
        }
        if (typeof Le == "object" && Le !== null) {
          switch (Le.$$typeof) {
            case Gn: {
              var St = uT(Le, ye.mode, be);
              return St.ref = sv(ye, null, Le), St.return = ye, St;
            }
            case Xn: {
              var yt = pT(Le, ye.mode, be);
              return yt.return = ye, yt;
            }
            case ft: {
              var Ht = Le._payload, Kt = Le._init;
              return se(ye, Kt(Ht), be);
            }
          }
          if (Po(Le) || di(Le)) {
            var kn = Nc(Le, ye.mode, be, null);
            return kn.return = ye, kn;
          }
          _y(ye, Le);
        }
        return typeof Le == "function" && Ay(ye), null;
      }
      function ae(ye, Le, be, at) {
        var St = Le !== null ? Le.key : null;
        if (typeof be == "string" && be !== "" || typeof be == "number")
          return St !== null ? null : N(ye, Le, "" + be, at);
        if (typeof be == "object" && be !== null) {
          switch (be.$$typeof) {
            case Gn:
              return be.key === St ? I(ye, Le, be, at) : null;
            case Xn:
              return be.key === St ? H(ye, Le, be, at) : null;
            case ft: {
              var yt = be._payload, Ht = be._init;
              return ae(ye, Le, Ht(yt), at);
            }
          }
          if (Po(be) || di(be))
            return St !== null ? null : W(ye, Le, be, at, null);
          _y(ye, be);
        }
        return typeof be == "function" && Ay(ye), null;
      }
      function Te(ye, Le, be, at, St) {
        if (typeof at == "string" && at !== "" || typeof at == "number") {
          var yt = ye.get(be) || null;
          return N(Le, yt, "" + at, St);
        }
        if (typeof at == "object" && at !== null) {
          switch (at.$$typeof) {
            case Gn: {
              var Ht = ye.get(at.key === null ? be : at.key) || null;
              return I(Le, Ht, at, St);
            }
            case Xn: {
              var Kt = ye.get(at.key === null ? be : at.key) || null;
              return H(Le, Kt, at, St);
            }
            case ft:
              var kn = at._payload, hn = at._init;
              return Te(ye, Le, be, hn(kn), St);
          }
          if (Po(at) || di(at)) {
            var wo = ye.get(be) || null;
            return W(Le, wo, at, St, null);
          }
          _y(Le, at);
        }
        return typeof at == "function" && Ay(Le), null;
      }
      function Ee(ye, Le, be) {
        {
          if (typeof ye != "object" || ye === null)
            return Le;
          switch (ye.$$typeof) {
            case Gn:
            case Xn:
              fR(ye, be);
              var at = ye.key;
              if (typeof at != "string")
                break;
              if (Le === null) {
                Le = /* @__PURE__ */ new Set(), Le.add(at);
                break;
              }
              if (!Le.has(at)) {
                Le.add(at);
                break;
              }
              m("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted — the behavior is unsupported and could change in a future version.", at);
              break;
            case ft:
              var St = ye._payload, yt = ye._init;
              Ee(yt(St), Le, be);
              break;
          }
        }
        return Le;
      }
      function Pe(ye, Le, be, at) {
        for (var St = null, yt = 0; yt < be.length; yt++) {
          var Ht = be[yt];
          St = Ee(Ht, St, ye);
        }
        for (var Kt = null, kn = null, hn = Le, wo = 0, gn = 0, bo = null; hn !== null && gn < be.length; gn++) {
          hn.index > gn ? (bo = hn, hn = null) : bo = hn.sibling;
          var Ar = ae(ye, hn, be[gn], at);
          if (Ar === null) {
            hn === null && (hn = bo);
            break;
          }
          t && hn && Ar.alternate === null && o(ye, hn), wo = g(Ar, wo, gn), kn === null ? Kt = Ar : kn.sibling = Ar, kn = Ar, hn = bo;
        }
        if (gn === be.length) {
          if (l(ye, hn), mr()) {
            var xr = gn;
            Bu(ye, xr);
          }
          return Kt;
        }
        if (hn === null) {
          for (; gn < be.length; gn++) {
            var _a = se(ye, be[gn], at);
            _a !== null && (wo = g(_a, wo, gn), kn === null ? Kt = _a : kn.sibling = _a, kn = _a);
          }
          if (mr()) {
            var Zr = gn;
            Bu(ye, Zr);
          }
          return Kt;
        }
        for (var Jr = c(ye, hn); gn < be.length; gn++) {
          var Br = Te(Jr, ye, gn, be[gn], at);
          Br !== null && (t && Br.alternate !== null && Jr.delete(Br.key === null ? gn : Br.key), wo = g(Br, wo, gn), kn === null ? Kt = Br : kn.sibling = Br, kn = Br);
        }
        if (t && Jr.forEach(function(tf) {
          return o(ye, tf);
        }), mr()) {
          var xl = gn;
          Bu(ye, xl);
        }
        return Kt;
      }
      function xt(ye, Le, be, at) {
        var St = di(be);
        if (typeof St != "function")
          throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
        {
          typeof Symbol == "function" && // $FlowFixMe Flow doesn't know about toStringTag
          be[Symbol.toStringTag] === "Generator" && (Ix || m("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers."), Ix = !0), be.entries === St && (Lx || m("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), Lx = !0);
          var yt = St.call(be);
          if (yt)
            for (var Ht = null, Kt = yt.next(); !Kt.done; Kt = yt.next()) {
              var kn = Kt.value;
              Ht = Ee(kn, Ht, ye);
            }
        }
        var hn = St.call(be);
        if (hn == null)
          throw new Error("An iterable object provided no iterator.");
        for (var wo = null, gn = null, bo = Le, Ar = 0, xr = 0, _a = null, Zr = hn.next(); bo !== null && !Zr.done; xr++, Zr = hn.next()) {
          bo.index > xr ? (_a = bo, bo = null) : _a = bo.sibling;
          var Jr = ae(ye, bo, Zr.value, at);
          if (Jr === null) {
            bo === null && (bo = _a);
            break;
          }
          t && bo && Jr.alternate === null && o(ye, bo), Ar = g(Jr, Ar, xr), gn === null ? wo = Jr : gn.sibling = Jr, gn = Jr, bo = _a;
        }
        if (Zr.done) {
          if (l(ye, bo), mr()) {
            var Br = xr;
            Bu(ye, Br);
          }
          return wo;
        }
        if (bo === null) {
          for (; !Zr.done; xr++, Zr = hn.next()) {
            var xl = se(ye, Zr.value, at);
            xl !== null && (Ar = g(xl, Ar, xr), gn === null ? wo = xl : gn.sibling = xl, gn = xl);
          }
          if (mr()) {
            var tf = xr;
            Bu(ye, tf);
          }
          return wo;
        }
        for (var Av = c(ye, bo); !Zr.done; xr++, Zr = hn.next()) {
          var Rs = Te(Av, ye, xr, Zr.value, at);
          Rs !== null && (t && Rs.alternate !== null && Av.delete(Rs.key === null ? xr : Rs.key), Ar = g(Rs, Ar, xr), gn === null ? wo = Rs : gn.sibling = Rs, gn = Rs);
        }
        if (t && Av.forEach(function(LB) {
          return o(ye, LB);
        }), mr()) {
          var PB = xr;
          Bu(ye, PB);
        }
        return wo;
      }
      function Bt(ye, Le, be, at) {
        if (Le !== null && Le.tag === P) {
          l(ye, Le.sibling);
          var St = p(Le, be);
          return St.return = ye, St;
        }
        l(ye, Le);
        var yt = dT(be, ye.mode, at);
        return yt.return = ye, yt;
      }
      function Pt(ye, Le, be, at) {
        for (var St = be.key, yt = Le; yt !== null; ) {
          if (yt.key === St) {
            var Ht = be.type;
            if (Ht === Uo) {
              if (yt.tag === L) {
                l(ye, yt.sibling);
                var Kt = p(yt, be.props.children);
                return Kt.return = ye, Kt._debugSource = be._source, Kt._debugOwner = be._owner, Kt;
              }
            } else if (yt.elementType === Ht || // Keep this check inline so it only runs on the false path:
            aw(yt, be) || // Lazy types should reconcile their resolved type.
            // We need to do this after the Hot Reloading check above,
            // because hot reloading has different semantics than prod because
            // it doesn't resuspend. So we can't let the call below suspend.
            typeof Ht == "object" && Ht !== null && Ht.$$typeof === ft && mR(Ht) === yt.type) {
              l(ye, yt.sibling);
              var kn = p(yt, be.props);
              return kn.ref = sv(ye, yt, be), kn.return = ye, kn._debugSource = be._source, kn._debugOwner = be._owner, kn;
            }
            l(ye, yt);
            break;
          } else
            o(ye, yt);
          yt = yt.sibling;
        }
        if (be.type === Uo) {
          var hn = Nc(be.props.children, ye.mode, at, be.key);
          return hn.return = ye, hn;
        } else {
          var wo = uT(be, ye.mode, at);
          return wo.ref = sv(ye, Le, be), wo.return = ye, wo;
        }
      }
      function fn(ye, Le, be, at) {
        for (var St = be.key, yt = Le; yt !== null; ) {
          if (yt.key === St)
            if (yt.tag === D && yt.stateNode.containerInfo === be.containerInfo && yt.stateNode.implementation === be.implementation) {
              l(ye, yt.sibling);
              var Ht = p(yt, be.children || []);
              return Ht.return = ye, Ht;
            } else {
              l(ye, yt);
              break;
            }
          else
            o(ye, yt);
          yt = yt.sibling;
        }
        var Kt = pT(be, ye.mode, at);
        return Kt.return = ye, Kt;
      }
      function un(ye, Le, be, at) {
        var St = typeof be == "object" && be !== null && be.type === Uo && be.key === null;
        if (St && (be = be.props.children), typeof be == "object" && be !== null) {
          switch (be.$$typeof) {
            case Gn:
              return T(Pt(ye, Le, be, at));
            case Xn:
              return T(fn(ye, Le, be, at));
            case ft:
              var yt = be._payload, Ht = be._init;
              return un(ye, Le, Ht(yt), at);
          }
          if (Po(be))
            return Pe(ye, Le, be, at);
          if (di(be))
            return xt(ye, Le, be, at);
          _y(ye, be);
        }
        return typeof be == "string" && be !== "" || typeof be == "number" ? T(Bt(ye, Le, "" + be, at)) : (typeof be == "function" && Ay(ye), l(ye, Le));
      }
      return un;
    }
    var zp = vR(!0), hR = vR(!1);
    function x_(t, o) {
      if (t !== null && o.child !== t.child)
        throw new Error("Resuming work not yet implemented.");
      if (o.child !== null) {
        var l = o.child, c = Qu(l, l.pendingProps);
        for (o.child = c, c.return = o; l.sibling !== null; )
          l = l.sibling, c = c.sibling = Qu(l, l.pendingProps), c.return = o;
        c.sibling = null;
      }
    }
    function S_(t, o) {
      for (var l = t.child; l !== null; )
        Q2(l, o), l = l.sibling;
    }
    var lv = {}, Cc = vc(lv), cv = vc(lv), By = vc(lv);
    function zy(t) {
      if (t === lv)
        throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
      return t;
    }
    function gR() {
      var t = zy(By.current);
      return t;
    }
    function zx(t, o) {
      Ir(By, o, t), Ir(cv, t, t), Ir(Cc, lv, t);
      var l = _L(o);
      Lr(Cc, t), Ir(Cc, l, t);
    }
    function Fp(t) {
      Lr(Cc, t), Lr(cv, t), Lr(By, t);
    }
    function Fx() {
      var t = zy(Cc.current);
      return t;
    }
    function yR(t) {
      zy(By.current);
      var o = zy(Cc.current), l = AL(o, t.type);
      o !== l && (Ir(cv, t, t), Ir(Cc, l, t));
    }
    function jx(t) {
      cv.current === t && (Lr(Cc, t), Lr(cv, t));
    }
    var T_ = 0, bR = 1, CR = 1, uv = 2, Di = vc(T_);
    function Ux(t, o) {
      return (t & o) !== 0;
    }
    function jp(t) {
      return t & bR;
    }
    function Vx(t, o) {
      return t & bR | o;
    }
    function E_(t, o) {
      return t | o;
    }
    function xc(t, o) {
      Ir(Di, o, t);
    }
    function Up(t) {
      Lr(Di, t);
    }
    function R_(t, o) {
      var l = t.memoizedState;
      return l !== null ? l.dehydrated !== null : (t.memoizedProps, !0);
    }
    function Fy(t) {
      for (var o = t; o !== null; ) {
        if (o.tag === U) {
          var l = o.memoizedState;
          if (l !== null) {
            var c = l.dehydrated;
            if (c === null || $E(c) || KC(c))
              return o;
          }
        } else if (o.tag === q && // revealOrder undefined can't be trusted because it don't
        // keep track of whether it suspended or not.
        o.memoizedProps.revealOrder !== void 0) {
          var p = (o.flags & Wt) !== _t;
          if (p)
            return o;
        } else if (o.child !== null) {
          o.child.return = o, o = o.child;
          continue;
        }
        if (o === t)
          return null;
        for (; o.sibling === null; ) {
          if (o.return === null || o.return === t)
            return null;
          o = o.return;
        }
        o.sibling.return = o.return, o = o.sibling;
      }
      return null;
    }
    var ba = (
      /*   */
      0
    ), Go = (
      /* */
      1
    ), ys = (
      /*  */
      2
    ), qo = (
      /*    */
      4
    ), vr = (
      /*   */
      8
    ), Hx = [];
    function Wx() {
      for (var t = 0; t < Hx.length; t++) {
        var o = Hx[t];
        o._workInProgressVersionPrimary = null;
      }
      Hx.length = 0;
    }
    function O_(t, o) {
      var l = o._getVersion, c = l(o._source);
      t.mutableSourceEagerHydrationData == null ? t.mutableSourceEagerHydrationData = [o, c] : t.mutableSourceEagerHydrationData.push(o, c);
    }
    var Ct = s.ReactCurrentDispatcher, dv = s.ReactCurrentBatchConfig, Gx, Vp;
    Gx = /* @__PURE__ */ new Set();
    var Hu = Ae, wn = null, Yo = null, Ko = null, jy = !1, pv = !1, fv = 0, w_ = 0, k_ = 25, Be = null, Za = null, Sc = -1, qx = !1;
    function Sn() {
      {
        var t = Be;
        Za === null ? Za = [t] : Za.push(t);
      }
    }
    function vt() {
      {
        var t = Be;
        Za !== null && (Sc++, Za[Sc] !== t && N_(t));
      }
    }
    function Hp(t) {
      t != null && !Po(t) && m("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", Be, typeof t);
    }
    function N_(t) {
      {
        var o = Xt(wn);
        if (!Gx.has(o) && (Gx.add(o), Za !== null)) {
          for (var l = "", c = 30, p = 0; p <= Sc; p++) {
            for (var g = Za[p], T = p === Sc ? t : g, N = p + 1 + ". " + g; N.length < c; )
              N += " ";
            N += T + `
`, l += N;
          }
          m(`React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks

   Previous render            Next render
   ------------------------------------------------------
%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
`, o, l);
        }
      }
    }
    function _r() {
      throw new Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
    }
    function Yx(t, o) {
      if (qx)
        return !1;
      if (o === null)
        return m("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", Be), !1;
      t.length !== o.length && m(`The final argument passed to %s changed size between renders. The order and size of this array must remain constant.

Previous: %s
Incoming: %s`, Be, "[" + o.join(", ") + "]", "[" + t.join(", ") + "]");
      for (var l = 0; l < o.length && l < t.length; l++)
        if (!Ot(t[l], o[l]))
          return !1;
      return !0;
    }
    function Wp(t, o, l, c, p, g) {
      Hu = g, wn = o, Za = t !== null ? t._debugHookTypes : null, Sc = -1, qx = t !== null && t.type !== o.type, o.memoizedState = null, o.updateQueue = null, o.lanes = Ae, t !== null && t.memoizedState !== null ? Ct.current = UR : Za !== null ? Ct.current = jR : Ct.current = FR;
      var T = l(c, p);
      if (pv) {
        var N = 0;
        do {
          if (pv = !1, fv = 0, N >= k_)
            throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
          N += 1, qx = !1, Yo = null, Ko = null, o.updateQueue = null, Sc = -1, Ct.current = VR, T = l(c, p);
        } while (pv);
      }
      Ct.current = eb, o._debugHookTypes = Za;
      var I = Yo !== null && Yo.next !== null;
      if (Hu = Ae, wn = null, Yo = null, Ko = null, Be = null, Za = null, Sc = -1, t !== null && (t.flags & Vo) !== (o.flags & Vo) && // Disable this warning in legacy mode, because legacy Suspense is weird
      // and creates false positives. To make this work in legacy mode, we'd
      // need to mark fibers that commit in an incomplete state, somehow. For
      // now I'll disable the warning that most of the bugs that would trigger
      // it are either exclusive to concurrent mode or exist in both.
      (t.mode & rn) !== Ft && m("Internal React error: Expected static flag was missing. Please notify the React team."), jy = !1, I)
        throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
      return T;
    }
    function Gp() {
      var t = fv !== 0;
      return fv = 0, t;
    }
    function xR(t, o, l) {
      o.updateQueue = t.updateQueue, (o.mode & da) !== Ft ? o.flags &= ~(Vs | kr | qn | Zt) : o.flags &= ~(qn | Zt), t.lanes = Zl(t.lanes, l);
    }
    function SR() {
      if (Ct.current = eb, jy) {
        for (var t = wn.memoizedState; t !== null; ) {
          var o = t.queue;
          o !== null && (o.pending = null), t = t.next;
        }
        jy = !1;
      }
      Hu = Ae, wn = null, Yo = null, Ko = null, Za = null, Sc = -1, Be = null, IR = !1, pv = !1, fv = 0;
    }
    function bs() {
      var t = {
        memoizedState: null,
        baseState: null,
        baseQueue: null,
        queue: null,
        next: null
      };
      return Ko === null ? wn.memoizedState = Ko = t : Ko = Ko.next = t, Ko;
    }
    function Ja() {
      var t;
      if (Yo === null) {
        var o = wn.alternate;
        o !== null ? t = o.memoizedState : t = null;
      } else
        t = Yo.next;
      var l;
      if (Ko === null ? l = wn.memoizedState : l = Ko.next, l !== null)
        Ko = l, l = Ko.next, Yo = t;
      else {
        if (t === null)
          throw new Error("Rendered more hooks than during the previous render.");
        Yo = t;
        var c = {
          memoizedState: Yo.memoizedState,
          baseState: Yo.baseState,
          baseQueue: Yo.baseQueue,
          queue: Yo.queue,
          next: null
        };
        Ko === null ? wn.memoizedState = Ko = c : Ko = Ko.next = c;
      }
      return Ko;
    }
    function TR() {
      return {
        lastEffect: null,
        stores: null
      };
    }
    function Kx(t, o) {
      return typeof o == "function" ? o(t) : o;
    }
    function Xx(t, o, l) {
      var c = bs(), p;
      l !== void 0 ? p = l(o) : p = o, c.memoizedState = c.baseState = p;
      var g = {
        pending: null,
        interleaved: null,
        lanes: Ae,
        dispatch: null,
        lastRenderedReducer: t,
        lastRenderedState: p
      };
      c.queue = g;
      var T = g.dispatch = P_.bind(null, wn, g);
      return [c.memoizedState, T];
    }
    function Qx(t, o, l) {
      var c = Ja(), p = c.queue;
      if (p === null)
        throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
      p.lastRenderedReducer = t;
      var g = Yo, T = g.baseQueue, N = p.pending;
      if (N !== null) {
        if (T !== null) {
          var I = T.next, H = N.next;
          T.next = H, N.next = I;
        }
        g.baseQueue !== T && m("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React."), g.baseQueue = T = N, p.pending = null;
      }
      if (T !== null) {
        var W = T.next, se = g.baseState, ae = null, Te = null, Ee = null, Pe = W;
        do {
          var xt = Pe.lane;
          if (Js(Hu, xt)) {
            if (Ee !== null) {
              var Pt = {
                // This update is going to be committed so we never want uncommit
                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                // this will never be skipped by the check above.
                lane: dn,
                action: Pe.action,
                hasEagerState: Pe.hasEagerState,
                eagerState: Pe.eagerState,
                next: null
              };
              Ee = Ee.next = Pt;
            }
            if (Pe.hasEagerState)
              se = Pe.eagerState;
            else {
              var fn = Pe.action;
              se = t(se, fn);
            }
          } else {
            var Bt = {
              lane: xt,
              action: Pe.action,
              hasEagerState: Pe.hasEagerState,
              eagerState: Pe.eagerState,
              next: null
            };
            Ee === null ? (Te = Ee = Bt, ae = se) : Ee = Ee.next = Bt, wn.lanes = Jt(wn.lanes, xt), Dv(xt);
          }
          Pe = Pe.next;
        } while (Pe !== null && Pe !== W);
        Ee === null ? ae = se : Ee.next = Te, Ot(se, c.memoizedState) || Cv(), c.memoizedState = se, c.baseState = ae, c.baseQueue = Ee, p.lastRenderedState = se;
      }
      var un = p.interleaved;
      if (un !== null) {
        var ye = un;
        do {
          var Le = ye.lane;
          wn.lanes = Jt(wn.lanes, Le), Dv(Le), ye = ye.next;
        } while (ye !== un);
      } else
        T === null && (p.lanes = Ae);
      var be = p.dispatch;
      return [c.memoizedState, be];
    }
    function Zx(t, o, l) {
      var c = Ja(), p = c.queue;
      if (p === null)
        throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
      p.lastRenderedReducer = t;
      var g = p.dispatch, T = p.pending, N = c.memoizedState;
      if (T !== null) {
        p.pending = null;
        var I = T.next, H = I;
        do {
          var W = H.action;
          N = t(N, W), H = H.next;
        } while (H !== I);
        Ot(N, c.memoizedState) || Cv(), c.memoizedState = N, c.baseQueue === null && (c.baseState = N), p.lastRenderedState = N;
      }
      return [N, g];
    }
    function $J(t, o, l) {
    }
    function MJ(t, o, l) {
    }
    function Jx(t, o, l) {
      var c = wn, p = bs(), g, T = mr();
      if (T) {
        if (l === void 0)
          throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
        g = l(), Vp || g !== l() && (m("The result of getServerSnapshot should be cached to avoid an infinite loop"), Vp = !0);
      } else {
        if (g = o(), !Vp) {
          var N = o();
          Ot(g, N) || (m("The result of getSnapshot should be cached to avoid an infinite loop"), Vp = !0);
        }
        var I = yb();
        if (I === null)
          throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        xu(I, Hu) || ER(c, o, g);
      }
      p.memoizedState = g;
      var H = {
        value: g,
        getSnapshot: o
      };
      return p.queue = H, Gy(OR.bind(null, c, H, t), [t]), c.flags |= qn, mv(Go | vr, RR.bind(null, c, H, g, o), void 0, null), g;
    }
    function Uy(t, o, l) {
      var c = wn, p = Ja(), g = o();
      if (!Vp) {
        var T = o();
        Ot(g, T) || (m("The result of getSnapshot should be cached to avoid an infinite loop"), Vp = !0);
      }
      var N = p.memoizedState, I = !Ot(N, g);
      I && (p.memoizedState = g, Cv());
      var H = p.queue;
      if (hv(OR.bind(null, c, H, t), [t]), H.getSnapshot !== o || I || // Check if the susbcribe function changed. We can save some memory by
      // checking whether we scheduled a subscription effect above.
      Ko !== null && Ko.memoizedState.tag & Go) {
        c.flags |= qn, mv(Go | vr, RR.bind(null, c, H, g, o), void 0, null);
        var W = yb();
        if (W === null)
          throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        xu(W, Hu) || ER(c, o, g);
      }
      return g;
    }
    function ER(t, o, l) {
      t.flags |= pu;
      var c = {
        getSnapshot: o,
        value: l
      }, p = wn.updateQueue;
      if (p === null)
        p = TR(), wn.updateQueue = p, p.stores = [c];
      else {
        var g = p.stores;
        g === null ? p.stores = [c] : g.push(c);
      }
    }
    function RR(t, o, l, c) {
      o.value = l, o.getSnapshot = c, wR(o) && kR(t);
    }
    function OR(t, o, l) {
      var c = function() {
        wR(o) && kR(t);
      };
      return l(c);
    }
    function wR(t) {
      var o = t.getSnapshot, l = t.value;
      try {
        var c = o();
        return !Ot(l, c);
      } catch {
        return !0;
      }
    }
    function kR(t) {
      var o = ya(t, Vt);
      o !== null && Jo(o, t, Vt, In);
    }
    function Vy(t) {
      var o = bs();
      typeof t == "function" && (t = t()), o.memoizedState = o.baseState = t;
      var l = {
        pending: null,
        interleaved: null,
        lanes: Ae,
        dispatch: null,
        lastRenderedReducer: Kx,
        lastRenderedState: t
      };
      o.queue = l;
      var c = l.dispatch = L_.bind(null, wn, l);
      return [o.memoizedState, c];
    }
    function eS(t) {
      return Qx(Kx);
    }
    function tS(t) {
      return Zx(Kx);
    }
    function mv(t, o, l, c) {
      var p = {
        tag: t,
        create: o,
        destroy: l,
        deps: c,
        // Circular
        next: null
      }, g = wn.updateQueue;
      if (g === null)
        g = TR(), wn.updateQueue = g, g.lastEffect = p.next = p;
      else {
        var T = g.lastEffect;
        if (T === null)
          g.lastEffect = p.next = p;
        else {
          var N = T.next;
          T.next = p, p.next = N, g.lastEffect = p;
        }
      }
      return p;
    }
    function nS(t) {
      var o = bs();
      {
        var l = {
          current: t
        };
        return o.memoizedState = l, l;
      }
    }
    function Hy(t) {
      var o = Ja();
      return o.memoizedState;
    }
    function vv(t, o, l, c) {
      var p = bs(), g = c === void 0 ? null : c;
      wn.flags |= t, p.memoizedState = mv(Go | o, l, void 0, g);
    }
    function Wy(t, o, l, c) {
      var p = Ja(), g = c === void 0 ? null : c, T = void 0;
      if (Yo !== null) {
        var N = Yo.memoizedState;
        if (T = N.destroy, g !== null) {
          var I = N.deps;
          if (Yx(g, I)) {
            p.memoizedState = mv(o, l, T, g);
            return;
          }
        }
      }
      wn.flags |= t, p.memoizedState = mv(Go | o, l, T, g);
    }
    function Gy(t, o) {
      return (wn.mode & da) !== Ft ? vv(Vs | qn | ts, vr, t, o) : vv(qn | ts, vr, t, o);
    }
    function hv(t, o) {
      return Wy(qn, vr, t, o);
    }
    function oS(t, o) {
      return vv(Zt, ys, t, o);
    }
    function qy(t, o) {
      return Wy(Zt, ys, t, o);
    }
    function rS(t, o) {
      var l = Zt;
      return l |= wr, (wn.mode & da) !== Ft && (l |= kr), vv(l, qo, t, o);
    }
    function Yy(t, o) {
      return Wy(Zt, qo, t, o);
    }
    function NR(t, o) {
      if (typeof o == "function") {
        var l = o, c = t();
        return l(c), function() {
          l(null);
        };
      } else if (o != null) {
        var p = o;
        p.hasOwnProperty("current") || m("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(p).join(", ") + "}");
        var g = t();
        return p.current = g, function() {
          p.current = null;
        };
      }
    }
    function aS(t, o, l) {
      typeof o != "function" && m("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", o !== null ? typeof o : "null");
      var c = l != null ? l.concat([t]) : null, p = Zt;
      return p |= wr, (wn.mode & da) !== Ft && (p |= kr), vv(p, qo, NR.bind(null, o, t), c);
    }
    function Ky(t, o, l) {
      typeof o != "function" && m("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", o !== null ? typeof o : "null");
      var c = l != null ? l.concat([t]) : null;
      return Wy(Zt, qo, NR.bind(null, o, t), c);
    }
    function $_(t, o) {
    }
    var Xy = $_;
    function iS(t, o) {
      var l = bs(), c = o === void 0 ? null : o;
      return l.memoizedState = [t, c], t;
    }
    function Qy(t, o) {
      var l = Ja(), c = o === void 0 ? null : o, p = l.memoizedState;
      if (p !== null && c !== null) {
        var g = p[1];
        if (Yx(c, g))
          return p[0];
      }
      return l.memoizedState = [t, c], t;
    }
    function sS(t, o) {
      var l = bs(), c = o === void 0 ? null : o, p = t();
      return l.memoizedState = [p, c], p;
    }
    function Zy(t, o) {
      var l = Ja(), c = o === void 0 ? null : o, p = l.memoizedState;
      if (p !== null && c !== null) {
        var g = p[1];
        if (Yx(c, g))
          return p[0];
      }
      var T = t();
      return l.memoizedState = [T, c], T;
    }
    function lS(t) {
      var o = bs();
      return o.memoizedState = t, t;
    }
    function $R(t) {
      var o = Ja(), l = Yo, c = l.memoizedState;
      return DR(o, c, t);
    }
    function MR(t) {
      var o = Ja();
      if (Yo === null)
        return o.memoizedState = t, t;
      var l = Yo.memoizedState;
      return DR(o, l, t);
    }
    function DR(t, o, l) {
      var c = !mC(Hu);
      if (c) {
        if (!Ot(l, o)) {
          var p = gm();
          wn.lanes = Jt(wn.lanes, p), Dv(p), t.baseState = !0;
        }
        return o;
      } else
        return t.baseState && (t.baseState = !1, Cv()), t.memoizedState = l, l;
    }
    function M_(t, o, l) {
      var c = fa();
      Eo(ar(c, Wo)), t(!0);
      var p = dv.transition;
      dv.transition = {};
      var g = dv.transition;
      dv.transition._updatedFibers = /* @__PURE__ */ new Set();
      try {
        t(!1), o();
      } finally {
        if (Eo(c), dv.transition = p, p === null && g._updatedFibers) {
          var T = g._updatedFibers.size;
          T > 10 && v("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."), g._updatedFibers.clear();
        }
      }
    }
    function cS() {
      var t = Vy(!1), o = t[0], l = t[1], c = M_.bind(null, l), p = bs();
      return p.memoizedState = c, [o, c];
    }
    function PR() {
      var t = eS(), o = t[0], l = Ja(), c = l.memoizedState;
      return [o, c];
    }
    function LR() {
      var t = tS(), o = t[0], l = Ja(), c = l.memoizedState;
      return [o, c];
    }
    var IR = !1;
    function D_() {
      return IR;
    }
    function uS() {
      var t = bs(), o = yb(), l = o.identifierPrefix, c;
      if (mr()) {
        var p = GI();
        c = ":" + l + "R" + p;
        var g = fv++;
        g > 0 && (c += "H" + g.toString(32)), c += ":";
      } else {
        var T = w_++;
        c = ":" + l + "r" + T.toString(32) + ":";
      }
      return t.memoizedState = c, c;
    }
    function Jy() {
      var t = Ja(), o = t.memoizedState;
      return o;
    }
    function P_(t, o, l) {
      typeof arguments[3] == "function" && m("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
      var c = wc(t), p = {
        lane: c,
        action: l,
        hasEagerState: !1,
        eagerState: null,
        next: null
      };
      if (_R(t))
        AR(o, p);
      else {
        var g = eR(t, o, p, c);
        if (g !== null) {
          var T = Qr();
          Jo(g, t, c, T), BR(g, o, c);
        }
      }
      zR(t, c);
    }
    function L_(t, o, l) {
      typeof arguments[3] == "function" && m("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
      var c = wc(t), p = {
        lane: c,
        action: l,
        hasEagerState: !1,
        eagerState: null,
        next: null
      };
      if (_R(t))
        AR(o, p);
      else {
        var g = t.alternate;
        if (t.lanes === Ae && (g === null || g.lanes === Ae)) {
          var T = o.lastRenderedReducer;
          if (T !== null) {
            var N;
            N = Ct.current, Ct.current = Pi;
            try {
              var I = o.lastRenderedState, H = T(I, l);
              if (p.hasEagerState = !0, p.eagerState = H, Ot(H, I)) {
                p_(t, o, p, c);
                return;
              }
            } catch {
            } finally {
              Ct.current = N;
            }
          }
        }
        var W = eR(t, o, p, c);
        if (W !== null) {
          var se = Qr();
          Jo(W, t, c, se), BR(W, o, c);
        }
      }
      zR(t, c);
    }
    function _R(t) {
      var o = t.alternate;
      return t === wn || o !== null && o === wn;
    }
    function AR(t, o) {
      pv = jy = !0;
      var l = t.pending;
      l === null ? o.next = o : (o.next = l.next, l.next = o), t.pending = o;
    }
    function BR(t, o, l) {
      if (hm(l)) {
        var c = o.lanes;
        c = ym(c, t.pendingLanes);
        var p = Jt(c, l);
        o.lanes = p, Jl(t, p);
      }
    }
    function zR(t, o, l) {
      ss(t, o);
    }
    var eb = {
      readContext: Fo,
      useCallback: _r,
      useContext: _r,
      useEffect: _r,
      useImperativeHandle: _r,
      useInsertionEffect: _r,
      useLayoutEffect: _r,
      useMemo: _r,
      useReducer: _r,
      useRef: _r,
      useState: _r,
      useDebugValue: _r,
      useDeferredValue: _r,
      useTransition: _r,
      useMutableSource: _r,
      useSyncExternalStore: _r,
      useId: _r,
      unstable_isNewReconciler: K
    }, FR = null, jR = null, UR = null, VR = null, Cs = null, Pi = null, tb = null;
    {
      var dS = function() {
        m("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
      }, Yt = function() {
        m("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
      };
      FR = {
        readContext: function(t) {
          return Fo(t);
        },
        useCallback: function(t, o) {
          return Be = "useCallback", Sn(), Hp(o), iS(t, o);
        },
        useContext: function(t) {
          return Be = "useContext", Sn(), Fo(t);
        },
        useEffect: function(t, o) {
          return Be = "useEffect", Sn(), Hp(o), Gy(t, o);
        },
        useImperativeHandle: function(t, o, l) {
          return Be = "useImperativeHandle", Sn(), Hp(l), aS(t, o, l);
        },
        useInsertionEffect: function(t, o) {
          return Be = "useInsertionEffect", Sn(), Hp(o), oS(t, o);
        },
        useLayoutEffect: function(t, o) {
          return Be = "useLayoutEffect", Sn(), Hp(o), rS(t, o);
        },
        useMemo: function(t, o) {
          Be = "useMemo", Sn(), Hp(o);
          var l = Ct.current;
          Ct.current = Cs;
          try {
            return sS(t, o);
          } finally {
            Ct.current = l;
          }
        },
        useReducer: function(t, o, l) {
          Be = "useReducer", Sn();
          var c = Ct.current;
          Ct.current = Cs;
          try {
            return Xx(t, o, l);
          } finally {
            Ct.current = c;
          }
        },
        useRef: function(t) {
          return Be = "useRef", Sn(), nS(t);
        },
        useState: function(t) {
          Be = "useState", Sn();
          var o = Ct.current;
          Ct.current = Cs;
          try {
            return Vy(t);
          } finally {
            Ct.current = o;
          }
        },
        useDebugValue: function(t, o) {
          return Be = "useDebugValue", Sn(), void 0;
        },
        useDeferredValue: function(t) {
          return Be = "useDeferredValue", Sn(), lS(t);
        },
        useTransition: function() {
          return Be = "useTransition", Sn(), cS();
        },
        useMutableSource: function(t, o, l) {
          return Be = "useMutableSource", Sn(), void 0;
        },
        useSyncExternalStore: function(t, o, l) {
          return Be = "useSyncExternalStore", Sn(), Jx(t, o, l);
        },
        useId: function() {
          return Be = "useId", Sn(), uS();
        },
        unstable_isNewReconciler: K
      }, jR = {
        readContext: function(t) {
          return Fo(t);
        },
        useCallback: function(t, o) {
          return Be = "useCallback", vt(), iS(t, o);
        },
        useContext: function(t) {
          return Be = "useContext", vt(), Fo(t);
        },
        useEffect: function(t, o) {
          return Be = "useEffect", vt(), Gy(t, o);
        },
        useImperativeHandle: function(t, o, l) {
          return Be = "useImperativeHandle", vt(), aS(t, o, l);
        },
        useInsertionEffect: function(t, o) {
          return Be = "useInsertionEffect", vt(), oS(t, o);
        },
        useLayoutEffect: function(t, o) {
          return Be = "useLayoutEffect", vt(), rS(t, o);
        },
        useMemo: function(t, o) {
          Be = "useMemo", vt();
          var l = Ct.current;
          Ct.current = Cs;
          try {
            return sS(t, o);
          } finally {
            Ct.current = l;
          }
        },
        useReducer: function(t, o, l) {
          Be = "useReducer", vt();
          var c = Ct.current;
          Ct.current = Cs;
          try {
            return Xx(t, o, l);
          } finally {
            Ct.current = c;
          }
        },
        useRef: function(t) {
          return Be = "useRef", vt(), nS(t);
        },
        useState: function(t) {
          Be = "useState", vt();
          var o = Ct.current;
          Ct.current = Cs;
          try {
            return Vy(t);
          } finally {
            Ct.current = o;
          }
        },
        useDebugValue: function(t, o) {
          return Be = "useDebugValue", vt(), void 0;
        },
        useDeferredValue: function(t) {
          return Be = "useDeferredValue", vt(), lS(t);
        },
        useTransition: function() {
          return Be = "useTransition", vt(), cS();
        },
        useMutableSource: function(t, o, l) {
          return Be = "useMutableSource", vt(), void 0;
        },
        useSyncExternalStore: function(t, o, l) {
          return Be = "useSyncExternalStore", vt(), Jx(t, o, l);
        },
        useId: function() {
          return Be = "useId", vt(), uS();
        },
        unstable_isNewReconciler: K
      }, UR = {
        readContext: function(t) {
          return Fo(t);
        },
        useCallback: function(t, o) {
          return Be = "useCallback", vt(), Qy(t, o);
        },
        useContext: function(t) {
          return Be = "useContext", vt(), Fo(t);
        },
        useEffect: function(t, o) {
          return Be = "useEffect", vt(), hv(t, o);
        },
        useImperativeHandle: function(t, o, l) {
          return Be = "useImperativeHandle", vt(), Ky(t, o, l);
        },
        useInsertionEffect: function(t, o) {
          return Be = "useInsertionEffect", vt(), qy(t, o);
        },
        useLayoutEffect: function(t, o) {
          return Be = "useLayoutEffect", vt(), Yy(t, o);
        },
        useMemo: function(t, o) {
          Be = "useMemo", vt();
          var l = Ct.current;
          Ct.current = Pi;
          try {
            return Zy(t, o);
          } finally {
            Ct.current = l;
          }
        },
        useReducer: function(t, o, l) {
          Be = "useReducer", vt();
          var c = Ct.current;
          Ct.current = Pi;
          try {
            return Qx(t, o, l);
          } finally {
            Ct.current = c;
          }
        },
        useRef: function(t) {
          return Be = "useRef", vt(), Hy();
        },
        useState: function(t) {
          Be = "useState", vt();
          var o = Ct.current;
          Ct.current = Pi;
          try {
            return eS(t);
          } finally {
            Ct.current = o;
          }
        },
        useDebugValue: function(t, o) {
          return Be = "useDebugValue", vt(), Xy();
        },
        useDeferredValue: function(t) {
          return Be = "useDeferredValue", vt(), $R(t);
        },
        useTransition: function() {
          return Be = "useTransition", vt(), PR();
        },
        useMutableSource: function(t, o, l) {
          return Be = "useMutableSource", vt(), void 0;
        },
        useSyncExternalStore: function(t, o, l) {
          return Be = "useSyncExternalStore", vt(), Uy(t, o);
        },
        useId: function() {
          return Be = "useId", vt(), Jy();
        },
        unstable_isNewReconciler: K
      }, VR = {
        readContext: function(t) {
          return Fo(t);
        },
        useCallback: function(t, o) {
          return Be = "useCallback", vt(), Qy(t, o);
        },
        useContext: function(t) {
          return Be = "useContext", vt(), Fo(t);
        },
        useEffect: function(t, o) {
          return Be = "useEffect", vt(), hv(t, o);
        },
        useImperativeHandle: function(t, o, l) {
          return Be = "useImperativeHandle", vt(), Ky(t, o, l);
        },
        useInsertionEffect: function(t, o) {
          return Be = "useInsertionEffect", vt(), qy(t, o);
        },
        useLayoutEffect: function(t, o) {
          return Be = "useLayoutEffect", vt(), Yy(t, o);
        },
        useMemo: function(t, o) {
          Be = "useMemo", vt();
          var l = Ct.current;
          Ct.current = tb;
          try {
            return Zy(t, o);
          } finally {
            Ct.current = l;
          }
        },
        useReducer: function(t, o, l) {
          Be = "useReducer", vt();
          var c = Ct.current;
          Ct.current = tb;
          try {
            return Zx(t, o, l);
          } finally {
            Ct.current = c;
          }
        },
        useRef: function(t) {
          return Be = "useRef", vt(), Hy();
        },
        useState: function(t) {
          Be = "useState", vt();
          var o = Ct.current;
          Ct.current = tb;
          try {
            return tS(t);
          } finally {
            Ct.current = o;
          }
        },
        useDebugValue: function(t, o) {
          return Be = "useDebugValue", vt(), Xy();
        },
        useDeferredValue: function(t) {
          return Be = "useDeferredValue", vt(), MR(t);
        },
        useTransition: function() {
          return Be = "useTransition", vt(), LR();
        },
        useMutableSource: function(t, o, l) {
          return Be = "useMutableSource", vt(), void 0;
        },
        useSyncExternalStore: function(t, o, l) {
          return Be = "useSyncExternalStore", vt(), Uy(t, o);
        },
        useId: function() {
          return Be = "useId", vt(), Jy();
        },
        unstable_isNewReconciler: K
      }, Cs = {
        readContext: function(t) {
          return dS(), Fo(t);
        },
        useCallback: function(t, o) {
          return Be = "useCallback", Yt(), Sn(), iS(t, o);
        },
        useContext: function(t) {
          return Be = "useContext", Yt(), Sn(), Fo(t);
        },
        useEffect: function(t, o) {
          return Be = "useEffect", Yt(), Sn(), Gy(t, o);
        },
        useImperativeHandle: function(t, o, l) {
          return Be = "useImperativeHandle", Yt(), Sn(), aS(t, o, l);
        },
        useInsertionEffect: function(t, o) {
          return Be = "useInsertionEffect", Yt(), Sn(), oS(t, o);
        },
        useLayoutEffect: function(t, o) {
          return Be = "useLayoutEffect", Yt(), Sn(), rS(t, o);
        },
        useMemo: function(t, o) {
          Be = "useMemo", Yt(), Sn();
          var l = Ct.current;
          Ct.current = Cs;
          try {
            return sS(t, o);
          } finally {
            Ct.current = l;
          }
        },
        useReducer: function(t, o, l) {
          Be = "useReducer", Yt(), Sn();
          var c = Ct.current;
          Ct.current = Cs;
          try {
            return Xx(t, o, l);
          } finally {
            Ct.current = c;
          }
        },
        useRef: function(t) {
          return Be = "useRef", Yt(), Sn(), nS(t);
        },
        useState: function(t) {
          Be = "useState", Yt(), Sn();
          var o = Ct.current;
          Ct.current = Cs;
          try {
            return Vy(t);
          } finally {
            Ct.current = o;
          }
        },
        useDebugValue: function(t, o) {
          return Be = "useDebugValue", Yt(), Sn(), void 0;
        },
        useDeferredValue: function(t) {
          return Be = "useDeferredValue", Yt(), Sn(), lS(t);
        },
        useTransition: function() {
          return Be = "useTransition", Yt(), Sn(), cS();
        },
        useMutableSource: function(t, o, l) {
          return Be = "useMutableSource", Yt(), Sn(), void 0;
        },
        useSyncExternalStore: function(t, o, l) {
          return Be = "useSyncExternalStore", Yt(), Sn(), Jx(t, o, l);
        },
        useId: function() {
          return Be = "useId", Yt(), Sn(), uS();
        },
        unstable_isNewReconciler: K
      }, Pi = {
        readContext: function(t) {
          return dS(), Fo(t);
        },
        useCallback: function(t, o) {
          return Be = "useCallback", Yt(), vt(), Qy(t, o);
        },
        useContext: function(t) {
          return Be = "useContext", Yt(), vt(), Fo(t);
        },
        useEffect: function(t, o) {
          return Be = "useEffect", Yt(), vt(), hv(t, o);
        },
        useImperativeHandle: function(t, o, l) {
          return Be = "useImperativeHandle", Yt(), vt(), Ky(t, o, l);
        },
        useInsertionEffect: function(t, o) {
          return Be = "useInsertionEffect", Yt(), vt(), qy(t, o);
        },
        useLayoutEffect: function(t, o) {
          return Be = "useLayoutEffect", Yt(), vt(), Yy(t, o);
        },
        useMemo: function(t, o) {
          Be = "useMemo", Yt(), vt();
          var l = Ct.current;
          Ct.current = Pi;
          try {
            return Zy(t, o);
          } finally {
            Ct.current = l;
          }
        },
        useReducer: function(t, o, l) {
          Be = "useReducer", Yt(), vt();
          var c = Ct.current;
          Ct.current = Pi;
          try {
            return Qx(t, o, l);
          } finally {
            Ct.current = c;
          }
        },
        useRef: function(t) {
          return Be = "useRef", Yt(), vt(), Hy();
        },
        useState: function(t) {
          Be = "useState", Yt(), vt();
          var o = Ct.current;
          Ct.current = Pi;
          try {
            return eS(t);
          } finally {
            Ct.current = o;
          }
        },
        useDebugValue: function(t, o) {
          return Be = "useDebugValue", Yt(), vt(), Xy();
        },
        useDeferredValue: function(t) {
          return Be = "useDeferredValue", Yt(), vt(), $R(t);
        },
        useTransition: function() {
          return Be = "useTransition", Yt(), vt(), PR();
        },
        useMutableSource: function(t, o, l) {
          return Be = "useMutableSource", Yt(), vt(), void 0;
        },
        useSyncExternalStore: function(t, o, l) {
          return Be = "useSyncExternalStore", Yt(), vt(), Uy(t, o);
        },
        useId: function() {
          return Be = "useId", Yt(), vt(), Jy();
        },
        unstable_isNewReconciler: K
      }, tb = {
        readContext: function(t) {
          return dS(), Fo(t);
        },
        useCallback: function(t, o) {
          return Be = "useCallback", Yt(), vt(), Qy(t, o);
        },
        useContext: function(t) {
          return Be = "useContext", Yt(), vt(), Fo(t);
        },
        useEffect: function(t, o) {
          return Be = "useEffect", Yt(), vt(), hv(t, o);
        },
        useImperativeHandle: function(t, o, l) {
          return Be = "useImperativeHandle", Yt(), vt(), Ky(t, o, l);
        },
        useInsertionEffect: function(t, o) {
          return Be = "useInsertionEffect", Yt(), vt(), qy(t, o);
        },
        useLayoutEffect: function(t, o) {
          return Be = "useLayoutEffect", Yt(), vt(), Yy(t, o);
        },
        useMemo: function(t, o) {
          Be = "useMemo", Yt(), vt();
          var l = Ct.current;
          Ct.current = Pi;
          try {
            return Zy(t, o);
          } finally {
            Ct.current = l;
          }
        },
        useReducer: function(t, o, l) {
          Be = "useReducer", Yt(), vt();
          var c = Ct.current;
          Ct.current = Pi;
          try {
            return Zx(t, o, l);
          } finally {
            Ct.current = c;
          }
        },
        useRef: function(t) {
          return Be = "useRef", Yt(), vt(), Hy();
        },
        useState: function(t) {
          Be = "useState", Yt(), vt();
          var o = Ct.current;
          Ct.current = Pi;
          try {
            return tS(t);
          } finally {
            Ct.current = o;
          }
        },
        useDebugValue: function(t, o) {
          return Be = "useDebugValue", Yt(), vt(), Xy();
        },
        useDeferredValue: function(t) {
          return Be = "useDeferredValue", Yt(), vt(), MR(t);
        },
        useTransition: function() {
          return Be = "useTransition", Yt(), vt(), LR();
        },
        useMutableSource: function(t, o, l) {
          return Be = "useMutableSource", Yt(), vt(), void 0;
        },
        useSyncExternalStore: function(t, o, l) {
          return Be = "useSyncExternalStore", Yt(), vt(), Uy(t, o);
        },
        useId: function() {
          return Be = "useId", Yt(), vt(), Jy();
        },
        unstable_isNewReconciler: K
      };
    }
    var Tc = r.unstable_now, HR = 0, nb = -1, gv = -1, ob = -1, pS = !1, rb = !1;
    function WR() {
      return pS;
    }
    function I_() {
      rb = !0;
    }
    function __() {
      pS = !1, rb = !1;
    }
    function A_() {
      pS = rb, rb = !1;
    }
    function GR() {
      return HR;
    }
    function qR() {
      HR = Tc();
    }
    function fS(t) {
      gv = Tc(), t.actualStartTime < 0 && (t.actualStartTime = Tc());
    }
    function YR(t) {
      gv = -1;
    }
    function ab(t, o) {
      if (gv >= 0) {
        var l = Tc() - gv;
        t.actualDuration += l, o && (t.selfBaseDuration = l), gv = -1;
      }
    }
    function xs(t) {
      if (nb >= 0) {
        var o = Tc() - nb;
        nb = -1;
        for (var l = t.return; l !== null; ) {
          switch (l.tag) {
            case k:
              var c = l.stateNode;
              c.effectDuration += o;
              return;
            case j:
              var p = l.stateNode;
              p.effectDuration += o;
              return;
          }
          l = l.return;
        }
      }
    }
    function mS(t) {
      if (ob >= 0) {
        var o = Tc() - ob;
        ob = -1;
        for (var l = t.return; l !== null; ) {
          switch (l.tag) {
            case k:
              var c = l.stateNode;
              c !== null && (c.passiveEffectDuration += o);
              return;
            case j:
              var p = l.stateNode;
              p !== null && (p.passiveEffectDuration += o);
              return;
          }
          l = l.return;
        }
      }
    }
    function Ss() {
      nb = Tc();
    }
    function vS() {
      ob = Tc();
    }
    function hS(t) {
      for (var o = t.child; o; )
        t.actualDuration += o.actualDuration, o = o.sibling;
    }
    function Wu(t, o) {
      return {
        value: t,
        source: o,
        stack: Of(o),
        digest: null
      };
    }
    function gS(t, o, l) {
      return {
        value: t,
        source: null,
        stack: l ?? null,
        digest: o ?? null
      };
    }
    function B_(t, o) {
      return !0;
    }
    function yS(t, o) {
      try {
        var l = B_(t, o);
        if (l === !1)
          return;
        var c = o.value, p = o.source, g = o.stack, T = g !== null ? g : "";
        if (c != null && c._suppressLogging) {
          if (t.tag === S)
            return;
          console.error(c);
        }
        var N = p ? Xt(p) : null, I = N ? "The above error occurred in the <" + N + "> component:" : "The above error occurred in one of your React components:", H;
        if (t.tag === k)
          H = `Consider adding an error boundary to your tree to customize error handling behavior.
Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.`;
        else {
          var W = Xt(t) || "Anonymous";
          H = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + W + ".");
        }
        var se = I + `
` + T + `

` + ("" + H);
        console.error(se);
      } catch (ae) {
        setTimeout(function() {
          throw ae;
        });
      }
    }
    var z_ = typeof WeakMap == "function" ? WeakMap : Map;
    function KR(t, o, l) {
      var c = vl(In, l);
      c.tag = yx, c.payload = {
        element: null
      };
      var p = o.value;
      return c.callback = function() {
        M2(p), yS(t, o);
      }, c;
    }
    function bS(t, o, l) {
      var c = vl(In, l);
      c.tag = yx;
      var p = t.type.getDerivedStateFromError;
      if (typeof p == "function") {
        var g = o.value;
        c.payload = function() {
          return p(g);
        }, c.callback = function() {
          iw(t), yS(t, o);
        };
      }
      var T = t.stateNode;
      return T !== null && typeof T.componentDidCatch == "function" && (c.callback = function() {
        iw(t), yS(t, o), typeof p != "function" && N2(this);
        var I = o.value, H = o.stack;
        this.componentDidCatch(I, {
          componentStack: H !== null ? H : ""
        }), typeof p != "function" && (Pr(t.lanes, Vt) || m("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", Xt(t) || "Unknown"));
      }), c;
    }
    function XR(t, o, l) {
      var c = t.pingCache, p;
      if (c === null ? (c = t.pingCache = new z_(), p = /* @__PURE__ */ new Set(), c.set(o, p)) : (p = c.get(o), p === void 0 && (p = /* @__PURE__ */ new Set(), c.set(o, p))), !p.has(l)) {
        p.add(l);
        var g = D2.bind(null, t, o, l);
        Ho && Pv(t, l), o.then(g, g);
      }
    }
    function F_(t, o, l, c) {
      var p = t.updateQueue;
      if (p === null) {
        var g = /* @__PURE__ */ new Set();
        g.add(l), t.updateQueue = g;
      } else
        p.add(l);
    }
    function j_(t, o) {
      var l = t.tag;
      if ((t.mode & rn) === Ft && (l === b || l === A || l === F)) {
        var c = t.alternate;
        c ? (t.updateQueue = c.updateQueue, t.memoizedState = c.memoizedState, t.lanes = c.lanes) : (t.updateQueue = null, t.memoizedState = null);
      }
    }
    function QR(t) {
      var o = t;
      do {
        if (o.tag === U && R_(o))
          return o;
        o = o.return;
      } while (o !== null);
      return null;
    }
    function ZR(t, o, l, c, p) {
      if ((t.mode & rn) === Ft) {
        if (t === o)
          t.flags |= Io;
        else {
          if (t.flags |= Wt, l.flags |= fu, l.flags &= ~(Md | Vr), l.tag === S) {
            var g = l.alternate;
            if (g === null)
              l.tag = Y;
            else {
              var T = vl(In, Vt);
              T.tag = Ny, bc(l, T, Vt);
            }
          }
          l.lanes = Jt(l.lanes, Vt);
        }
        return t;
      }
      return t.flags |= Io, t.lanes = p, t;
    }
    function U_(t, o, l, c, p) {
      if (l.flags |= Vr, Ho && Pv(t, p), c !== null && typeof c == "object" && typeof c.then == "function") {
        var g = c;
        j_(l), mr() && l.mode & rn && UE();
        var T = QR(o);
        if (T !== null) {
          T.flags &= ~oo, ZR(T, o, l, t, p), T.mode & rn && XR(t, g, p), F_(T, t, g);
          return;
        } else {
          if (!Ql(p)) {
            XR(t, g, p), ZS();
            return;
          }
          var N = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
          c = N;
        }
      } else if (mr() && l.mode & rn) {
        UE();
        var I = QR(o);
        if (I !== null) {
          (I.flags & Io) === _t && (I.flags |= oo), ZR(I, o, l, t, p), dx(Wu(c, l));
          return;
        }
      }
      c = Wu(c, l), x2(c);
      var H = o;
      do {
        switch (H.tag) {
          case k: {
            var W = c;
            H.flags |= Io;
            var se = To(p);
            H.lanes = Jt(H.lanes, se);
            var ae = KR(H, W, se);
            xx(H, ae);
            return;
          }
          case S:
            var Te = c, Ee = H.type, Pe = H.stateNode;
            if ((H.flags & Wt) === _t && (typeof Ee.getDerivedStateFromError == "function" || Pe !== null && typeof Pe.componentDidCatch == "function" && !QO(Pe))) {
              H.flags |= Io;
              var xt = To(p);
              H.lanes = Jt(H.lanes, xt);
              var Bt = bS(H, Te, xt);
              xx(H, Bt);
              return;
            }
            break;
        }
        H = H.return;
      } while (H !== null);
    }
    function V_() {
      return null;
    }
    var yv = s.ReactCurrentOwner, Li = !1, CS, bv, xS, SS, TS, Gu, ES, ib;
    CS = {}, bv = {}, xS = {}, SS = {}, TS = {}, Gu = !1, ES = {}, ib = {};
    function Kr(t, o, l, c) {
      t === null ? o.child = hR(o, null, l, c) : o.child = zp(o, t.child, l, c);
    }
    function H_(t, o, l, c) {
      o.child = zp(o, t.child, null, c), o.child = zp(o, null, l, c);
    }
    function JR(t, o, l, c, p) {
      if (o.type !== o.elementType) {
        var g = l.propTypes;
        g && ki(
          g,
          c,
          // Resolved props
          "prop",
          Pn(l)
        );
      }
      var T = l.render, N = o.ref, I, H;
      Bp(o, p), is(o);
      {
        if (yv.current = o, ka(!0), I = Wp(t, o, T, c, N, p), H = Gp(), o.mode & Zn) {
          So(!0);
          try {
            I = Wp(t, o, T, c, N, p), H = Gp();
          } finally {
            So(!1);
          }
        }
        ka(!1);
      }
      return Hs(), t !== null && !Li ? (xR(t, o, p), hl(t, o, p)) : (mr() && H && ax(o), o.flags |= Ji, Kr(t, o, I, p), o.child);
    }
    function eO(t, o, l, c, p) {
      if (t === null) {
        var g = l.type;
        if (K2(g) && l.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
        l.defaultProps === void 0) {
          var T = g;
          return T = ef(g), o.tag = F, o.type = T, wS(o, g), tO(t, o, T, c, p);
        }
        {
          var N = g.propTypes;
          N && ki(
            N,
            c,
            // Resolved props
            "prop",
            Pn(g)
          );
        }
        var I = cT(l.type, null, c, o, o.mode, p);
        return I.ref = o.ref, I.return = o, o.child = I, I;
      }
      {
        var H = l.type, W = H.propTypes;
        W && ki(
          W,
          c,
          // Resolved props
          "prop",
          Pn(H)
        );
      }
      var se = t.child, ae = PS(t, p);
      if (!ae) {
        var Te = se.memoizedProps, Ee = l.compare;
        if (Ee = Ee !== null ? Ee : It, Ee(Te, c) && t.ref === o.ref)
          return hl(t, o, p);
      }
      o.flags |= Ji;
      var Pe = Qu(se, c);
      return Pe.ref = o.ref, Pe.return = o, o.child = Pe, Pe;
    }
    function tO(t, o, l, c, p) {
      if (o.type !== o.elementType) {
        var g = o.elementType;
        if (g.$$typeof === ft) {
          var T = g, N = T._payload, I = T._init;
          try {
            g = I(N);
          } catch {
            g = null;
          }
          var H = g && g.propTypes;
          H && ki(
            H,
            c,
            // Resolved (SimpleMemoComponent has no defaultProps)
            "prop",
            Pn(g)
          );
        }
      }
      if (t !== null) {
        var W = t.memoizedProps;
        if (It(W, c) && t.ref === o.ref && // Prevent bailout if the implementation changed due to hot reload.
        o.type === t.type)
          if (Li = !1, o.pendingProps = c = W, PS(t, p))
            (t.flags & fu) !== _t && (Li = !0);
          else
            return o.lanes = t.lanes, hl(t, o, p);
      }
      return RS(t, o, l, c, p);
    }
    function nO(t, o, l) {
      var c = o.pendingProps, p = c.children, g = t !== null ? t.memoizedState : null;
      if (c.mode === "hidden" || ve)
        if ((o.mode & rn) === Ft) {
          var T = {
            baseLanes: Ae,
            cachePool: null,
            transitions: null
          };
          o.memoizedState = T, bb(o, l);
        } else if (Pr(l, Dr)) {
          var se = {
            baseLanes: Ae,
            cachePool: null,
            transitions: null
          };
          o.memoizedState = se;
          var ae = g !== null ? g.baseLanes : l;
          bb(o, ae);
        } else {
          var N = null, I;
          if (g !== null) {
            var H = g.baseLanes;
            I = Jt(H, l);
          } else
            I = l;
          o.lanes = o.childLanes = Dr;
          var W = {
            baseLanes: I,
            cachePool: N,
            transitions: null
          };
          return o.memoizedState = W, o.updateQueue = null, bb(o, I), null;
        }
      else {
        var Te;
        g !== null ? (Te = Jt(g.baseLanes, l), o.memoizedState = null) : Te = l, bb(o, Te);
      }
      return Kr(t, o, p, l), o.child;
    }
    function W_(t, o, l) {
      var c = o.pendingProps;
      return Kr(t, o, c, l), o.child;
    }
    function G_(t, o, l) {
      var c = o.pendingProps.children;
      return Kr(t, o, c, l), o.child;
    }
    function q_(t, o, l) {
      {
        o.flags |= Zt;
        {
          var c = o.stateNode;
          c.effectDuration = 0, c.passiveEffectDuration = 0;
        }
      }
      var p = o.pendingProps, g = p.children;
      return Kr(t, o, g, l), o.child;
    }
    function oO(t, o) {
      var l = o.ref;
      (t === null && l !== null || t !== null && t.ref !== l) && (o.flags |= Or, o.flags |= tm);
    }
    function RS(t, o, l, c, p) {
      if (o.type !== o.elementType) {
        var g = l.propTypes;
        g && ki(
          g,
          c,
          // Resolved props
          "prop",
          Pn(l)
        );
      }
      var T;
      {
        var N = Dp(o, l, !0);
        T = Pp(o, N);
      }
      var I, H;
      Bp(o, p), is(o);
      {
        if (yv.current = o, ka(!0), I = Wp(t, o, l, c, T, p), H = Gp(), o.mode & Zn) {
          So(!0);
          try {
            I = Wp(t, o, l, c, T, p), H = Gp();
          } finally {
            So(!1);
          }
        }
        ka(!1);
      }
      return Hs(), t !== null && !Li ? (xR(t, o, p), hl(t, o, p)) : (mr() && H && ax(o), o.flags |= Ji, Kr(t, o, I, p), o.child);
    }
    function rO(t, o, l, c, p) {
      {
        switch (uB(o)) {
          case !1: {
            var g = o.stateNode, T = o.type, N = new T(o.memoizedProps, g.context), I = N.state;
            g.updater.enqueueSetState(g, I, null);
            break;
          }
          case !0: {
            o.flags |= Wt, o.flags |= Io;
            var H = new Error("Simulated error coming from DevTools"), W = To(p);
            o.lanes = Jt(o.lanes, W);
            var se = bS(o, Wu(H, o), W);
            xx(o, se);
            break;
          }
        }
        if (o.type !== o.elementType) {
          var ae = l.propTypes;
          ae && ki(
            ae,
            c,
            // Resolved props
            "prop",
            Pn(l)
          );
        }
      }
      var Te;
      gs(l) ? (Te = !0, yy(o)) : Te = !1, Bp(o, p);
      var Ee = o.stateNode, Pe;
      Ee === null ? (lb(t, o), dR(o, l, c), Px(o, l, c, p), Pe = !0) : t === null ? Pe = b_(o, l, c, p) : Pe = C_(t, o, l, c, p);
      var xt = OS(t, o, l, Pe, Te, p);
      {
        var Bt = o.stateNode;
        Pe && Bt.props !== c && (Gu || m("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", Xt(o) || "a component"), Gu = !0);
      }
      return xt;
    }
    function OS(t, o, l, c, p, g) {
      oO(t, o);
      var T = (o.flags & Wt) !== _t;
      if (!c && !T)
        return p && BE(o, l, !1), hl(t, o, g);
      var N = o.stateNode;
      yv.current = o;
      var I;
      if (T && typeof l.getDerivedStateFromError != "function")
        I = null, YR();
      else {
        is(o);
        {
          if (ka(!0), I = N.render(), o.mode & Zn) {
            So(!0);
            try {
              N.render();
            } finally {
              So(!1);
            }
          }
          ka(!1);
        }
        Hs();
      }
      return o.flags |= Ji, t !== null && T ? H_(t, o, I, g) : Kr(t, o, I, g), o.memoizedState = N.state, p && BE(o, l, !0), o.child;
    }
    function aO(t) {
      var o = t.stateNode;
      o.pendingContext ? _E(t, o.pendingContext, o.pendingContext !== o.context) : o.context && _E(t, o.context, !1), zx(t, o.containerInfo);
    }
    function Y_(t, o, l) {
      if (aO(o), t === null)
        throw new Error("Should have a current fiber. This is a bug in React.");
      var c = o.pendingProps, p = o.memoizedState, g = p.element;
      oR(t, o), Py(o, c, null, l);
      var T = o.memoizedState;
      o.stateNode;
      var N = T.element;
      if (p.isDehydrated) {
        var I = {
          element: N,
          isDehydrated: !1,
          cache: T.cache,
          pendingSuspenseBoundaries: T.pendingSuspenseBoundaries,
          transitions: T.transitions
        }, H = o.updateQueue;
        if (H.baseState = I, o.memoizedState = I, o.flags & oo) {
          var W = Wu(new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering."), o);
          return iO(t, o, N, l, W);
        } else if (N !== g) {
          var se = Wu(new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), o);
          return iO(t, o, N, l, se);
        } else {
          ZI(o);
          var ae = hR(o, null, N, l);
          o.child = ae;
          for (var Te = ae; Te; )
            Te.flags = Te.flags & ~Bn | la, Te = Te.sibling;
        }
      } else {
        if (_p(), N === g)
          return hl(t, o, l);
        Kr(t, o, N, l);
      }
      return o.child;
    }
    function iO(t, o, l, c, p) {
      return _p(), dx(p), o.flags |= oo, Kr(t, o, l, c), o.child;
    }
    function K_(t, o, l) {
      yR(o), t === null && ux(o);
      var c = o.type, p = o.pendingProps, g = t !== null ? t.memoizedProps : null, T = p.children, N = WC(c, p);
      return N ? T = null : g !== null && WC(c, g) && (o.flags |= xn), oO(t, o), Kr(t, o, T, l), o.child;
    }
    function X_(t, o) {
      return t === null && ux(o), null;
    }
    function Q_(t, o, l, c) {
      lb(t, o);
      var p = o.pendingProps, g = l, T = g._payload, N = g._init, I = N(T);
      o.type = I;
      var H = o.tag = X2(I), W = Mi(I, p), se;
      switch (H) {
        case b:
          return wS(o, I), o.type = I = ef(I), se = RS(null, o, I, W, c), se;
        case S:
          return o.type = I = oT(I), se = rO(null, o, I, W, c), se;
        case A:
          return o.type = I = rT(I), se = JR(null, o, I, W, c), se;
        case $: {
          if (o.type !== o.elementType) {
            var ae = I.propTypes;
            ae && ki(
              ae,
              W,
              // Resolved for outer only
              "prop",
              Pn(I)
            );
          }
          return se = eO(
            null,
            o,
            I,
            Mi(I.type, W),
            // The inner type can have defaults too
            c
          ), se;
        }
      }
      var Te = "";
      throw I !== null && typeof I == "object" && I.$$typeof === ft && (Te = " Did you wrap a component in React.lazy() more than once?"), new Error("Element type is invalid. Received a promise that resolves to: " + I + ". " + ("Lazy element type must resolve to a class or function." + Te));
    }
    function Z_(t, o, l, c, p) {
      lb(t, o), o.tag = S;
      var g;
      return gs(l) ? (g = !0, yy(o)) : g = !1, Bp(o, p), dR(o, l, c), Px(o, l, c, p), OS(null, o, l, !0, g, p);
    }
    function J_(t, o, l, c) {
      lb(t, o);
      var p = o.pendingProps, g;
      {
        var T = Dp(o, l, !1);
        g = Pp(o, T);
      }
      Bp(o, c);
      var N, I;
      is(o);
      {
        if (l.prototype && typeof l.prototype.render == "function") {
          var H = Pn(l) || "Unknown";
          CS[H] || (m("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", H, H), CS[H] = !0);
        }
        o.mode & Zn && $i.recordLegacyContextWarning(o, null), ka(!0), yv.current = o, N = Wp(null, o, l, p, g, c), I = Gp(), ka(!1);
      }
      if (Hs(), o.flags |= Ji, typeof N == "object" && N !== null && typeof N.render == "function" && N.$$typeof === void 0) {
        var W = Pn(l) || "Unknown";
        bv[W] || (m("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", W, W, W), bv[W] = !0);
      }
      if (
        // Run these checks in production only if the flag is off.
        // Eventually we'll delete this branch altogether.
        typeof N == "object" && N !== null && typeof N.render == "function" && N.$$typeof === void 0
      ) {
        {
          var se = Pn(l) || "Unknown";
          bv[se] || (m("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", se, se, se), bv[se] = !0);
        }
        o.tag = S, o.memoizedState = null, o.updateQueue = null;
        var ae = !1;
        return gs(l) ? (ae = !0, yy(o)) : ae = !1, o.memoizedState = N.state !== null && N.state !== void 0 ? N.state : null, Cx(o), uR(o, N), Px(o, l, p, c), OS(null, o, l, !0, ae, c);
      } else {
        if (o.tag = b, o.mode & Zn) {
          So(!0);
          try {
            N = Wp(null, o, l, p, g, c), I = Gp();
          } finally {
            So(!1);
          }
        }
        return mr() && I && ax(o), Kr(null, o, N, c), wS(o, l), o.child;
      }
    }
    function wS(t, o) {
      {
        if (o && o.childContextTypes && m("%s(...): childContextTypes cannot be defined on a function component.", o.displayName || o.name || "Component"), t.ref !== null) {
          var l = "", c = ra();
          c && (l += `

Check the render method of \`` + c + "`.");
          var p = c || "", g = t._debugSource;
          g && (p = g.fileName + ":" + g.lineNumber), TS[p] || (TS[p] = !0, m("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", l));
        }
        if (typeof o.getDerivedStateFromProps == "function") {
          var T = Pn(o) || "Unknown";
          SS[T] || (m("%s: Function components do not support getDerivedStateFromProps.", T), SS[T] = !0);
        }
        if (typeof o.contextType == "object" && o.contextType !== null) {
          var N = Pn(o) || "Unknown";
          xS[N] || (m("%s: Function components do not support contextType.", N), xS[N] = !0);
        }
      }
    }
    var kS = {
      dehydrated: null,
      treeContext: null,
      retryLane: dn
    };
    function NS(t) {
      return {
        baseLanes: t,
        cachePool: V_(),
        transitions: null
      };
    }
    function eA(t, o) {
      var l = null;
      return {
        baseLanes: Jt(t.baseLanes, o),
        cachePool: l,
        transitions: t.transitions
      };
    }
    function tA(t, o, l, c) {
      if (o !== null) {
        var p = o.memoizedState;
        if (p === null)
          return !1;
      }
      return Ux(t, uv);
    }
    function nA(t, o) {
      return Zl(t.childLanes, o);
    }
    function sO(t, o, l) {
      var c = o.pendingProps;
      dB(o) && (o.flags |= Wt);
      var p = Di.current, g = !1, T = (o.flags & Wt) !== _t;
      if (T || tA(p, t) ? (g = !0, o.flags &= ~Wt) : (t === null || t.memoizedState !== null) && (p = E_(p, CR)), p = jp(p), xc(o, p), t === null) {
        ux(o);
        var N = o.memoizedState;
        if (N !== null) {
          var I = N.dehydrated;
          if (I !== null)
            return sA(o, I);
        }
        var H = c.children, W = c.fallback;
        if (g) {
          var se = oA(o, H, W, l), ae = o.child;
          return ae.memoizedState = NS(l), o.memoizedState = kS, se;
        } else
          return $S(o, H);
      } else {
        var Te = t.memoizedState;
        if (Te !== null) {
          var Ee = Te.dehydrated;
          if (Ee !== null)
            return lA(t, o, T, c, Ee, Te, l);
        }
        if (g) {
          var Pe = c.fallback, xt = c.children, Bt = aA(t, o, xt, Pe, l), Pt = o.child, fn = t.child.memoizedState;
          return Pt.memoizedState = fn === null ? NS(l) : eA(fn, l), Pt.childLanes = nA(t, l), o.memoizedState = kS, Bt;
        } else {
          var un = c.children, ye = rA(t, o, un, l);
          return o.memoizedState = null, ye;
        }
      }
    }
    function $S(t, o, l) {
      var c = t.mode, p = {
        mode: "visible",
        children: o
      }, g = MS(p, c);
      return g.return = t, t.child = g, g;
    }
    function oA(t, o, l, c) {
      var p = t.mode, g = t.child, T = {
        mode: "hidden",
        children: o
      }, N, I;
      return (p & rn) === Ft && g !== null ? (N = g, N.childLanes = Ae, N.pendingProps = T, t.mode & jt && (N.actualDuration = 0, N.actualStartTime = -1, N.selfBaseDuration = 0, N.treeBaseDuration = 0), I = Nc(l, p, c, null)) : (N = MS(T, p), I = Nc(l, p, c, null)), N.return = t, I.return = t, N.sibling = I, t.child = N, I;
    }
    function MS(t, o, l) {
      return lw(t, o, Ae, null);
    }
    function lO(t, o) {
      return Qu(t, o);
    }
    function rA(t, o, l, c) {
      var p = t.child, g = p.sibling, T = lO(p, {
        mode: "visible",
        children: l
      });
      if ((o.mode & rn) === Ft && (T.lanes = c), T.return = o, T.sibling = null, g !== null) {
        var N = o.deletions;
        N === null ? (o.deletions = [g], o.flags |= Cn) : N.push(g);
      }
      return o.child = T, T;
    }
    function aA(t, o, l, c, p) {
      var g = o.mode, T = t.child, N = T.sibling, I = {
        mode: "hidden",
        children: l
      }, H;
      if (
        // In legacy mode, we commit the primary tree as if it successfully
        // completed, even though it's in an inconsistent state.
        (g & rn) === Ft && // Make sure we're on the second pass, i.e. the primary child fragment was
        // already cloned. In legacy mode, the only case where this isn't true is
        // when DevTools forces us to display a fallback; we skip the first render
        // pass entirely and go straight to rendering the fallback. (In Concurrent
        // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
        // only codepath.)
        o.child !== T
      ) {
        var W = o.child;
        H = W, H.childLanes = Ae, H.pendingProps = I, o.mode & jt && (H.actualDuration = 0, H.actualStartTime = -1, H.selfBaseDuration = T.selfBaseDuration, H.treeBaseDuration = T.treeBaseDuration), o.deletions = null;
      } else
        H = lO(T, I), H.subtreeFlags = T.subtreeFlags & Vo;
      var se;
      return N !== null ? se = Qu(N, c) : (se = Nc(c, g, p, null), se.flags |= Bn), se.return = o, H.return = o, H.sibling = se, o.child = H, se;
    }
    function sb(t, o, l, c) {
      c !== null && dx(c), zp(o, t.child, null, l);
      var p = o.pendingProps, g = p.children, T = $S(o, g);
      return T.flags |= Bn, o.memoizedState = null, T;
    }
    function iA(t, o, l, c, p) {
      var g = o.mode, T = {
        mode: "visible",
        children: l
      }, N = MS(T, g), I = Nc(c, g, p, null);
      return I.flags |= Bn, N.return = o, I.return = o, N.sibling = I, o.child = N, (o.mode & rn) !== Ft && zp(o, t.child, null, p), I;
    }
    function sA(t, o, l) {
      return (t.mode & rn) === Ft ? (m("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components."), t.lanes = Vt) : KC(o) ? t.lanes = qs : t.lanes = Dr, null;
    }
    function lA(t, o, l, c, p, g, T) {
      if (l)
        if (o.flags & oo) {
          o.flags &= ~oo;
          var ye = gS(new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
          return sb(t, o, T, ye);
        } else {
          if (o.memoizedState !== null)
            return o.child = t.child, o.flags |= Wt, null;
          var Le = c.children, be = c.fallback, at = iA(t, o, Le, be, T), St = o.child;
          return St.memoizedState = NS(T), o.memoizedState = kS, at;
        }
      else {
        if (XI(), (o.mode & rn) === Ft)
          return sb(
            t,
            o,
            T,
            // TODO: When we delete legacy mode, we should make this error argument
            // required — every concurrent mode path that causes hydration to
            // de-opt to client rendering should have an error message.
            null
          );
        if (KC(p)) {
          var N, I, H;
          {
            var W = fI(p);
            N = W.digest, I = W.message, H = W.stack;
          }
          var se;
          I ? se = new Error(I) : se = new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
          var ae = gS(se, N, H);
          return sb(t, o, T, ae);
        }
        var Te = Pr(T, t.childLanes);
        if (Li || Te) {
          var Ee = yb();
          if (Ee !== null) {
            var Pe = hC(Ee, T);
            if (Pe !== dn && Pe !== g.retryLane) {
              g.retryLane = Pe;
              var xt = In;
              ya(t, Pe), Jo(Ee, t, Pe, xt);
            }
          }
          ZS();
          var Bt = gS(new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
          return sb(t, o, T, Bt);
        } else if ($E(p)) {
          o.flags |= Wt, o.child = t.child;
          var Pt = P2.bind(null, t);
          return mI(p, Pt), null;
        } else {
          JI(o, p, g.treeContext);
          var fn = c.children, un = $S(o, fn);
          return un.flags |= la, un;
        }
      }
    }
    function cO(t, o, l) {
      t.lanes = Jt(t.lanes, o);
      var c = t.alternate;
      c !== null && (c.lanes = Jt(c.lanes, o)), hx(t.return, o, l);
    }
    function cA(t, o, l) {
      for (var c = o; c !== null; ) {
        if (c.tag === U) {
          var p = c.memoizedState;
          p !== null && cO(c, l, t);
        } else if (c.tag === q)
          cO(c, l, t);
        else if (c.child !== null) {
          c.child.return = c, c = c.child;
          continue;
        }
        if (c === t)
          return;
        for (; c.sibling === null; ) {
          if (c.return === null || c.return === t)
            return;
          c = c.return;
        }
        c.sibling.return = c.return, c = c.sibling;
      }
    }
    function uA(t) {
      for (var o = t, l = null; o !== null; ) {
        var c = o.alternate;
        c !== null && Fy(c) === null && (l = o), o = o.sibling;
      }
      return l;
    }
    function dA(t) {
      if (t !== void 0 && t !== "forwards" && t !== "backwards" && t !== "together" && !ES[t])
        if (ES[t] = !0, typeof t == "string")
          switch (t.toLowerCase()) {
            case "together":
            case "forwards":
            case "backwards": {
              m('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', t, t.toLowerCase());
              break;
            }
            case "forward":
            case "backward": {
              m('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', t, t.toLowerCase());
              break;
            }
            default:
              m('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', t);
              break;
          }
        else
          m('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', t);
    }
    function pA(t, o) {
      t !== void 0 && !ib[t] && (t !== "collapsed" && t !== "hidden" ? (ib[t] = !0, m('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', t)) : o !== "forwards" && o !== "backwards" && (ib[t] = !0, m('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', t)));
    }
    function uO(t, o) {
      {
        var l = Po(t), c = !l && typeof di(t) == "function";
        if (l || c) {
          var p = l ? "array" : "iterable";
          return m("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", p, o, p), !1;
        }
      }
      return !0;
    }
    function fA(t, o) {
      if ((o === "forwards" || o === "backwards") && t !== void 0 && t !== null && t !== !1)
        if (Po(t)) {
          for (var l = 0; l < t.length; l++)
            if (!uO(t[l], l))
              return;
        } else {
          var c = di(t);
          if (typeof c == "function") {
            var p = c.call(t);
            if (p)
              for (var g = p.next(), T = 0; !g.done; g = p.next()) {
                if (!uO(g.value, T))
                  return;
                T++;
              }
          } else
            m('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', o);
        }
    }
    function DS(t, o, l, c, p) {
      var g = t.memoizedState;
      g === null ? t.memoizedState = {
        isBackwards: o,
        rendering: null,
        renderingStartTime: 0,
        last: c,
        tail: l,
        tailMode: p
      } : (g.isBackwards = o, g.rendering = null, g.renderingStartTime = 0, g.last = c, g.tail = l, g.tailMode = p);
    }
    function dO(t, o, l) {
      var c = o.pendingProps, p = c.revealOrder, g = c.tail, T = c.children;
      dA(p), pA(g, p), fA(T, p), Kr(t, o, T, l);
      var N = Di.current, I = Ux(N, uv);
      if (I)
        N = Vx(N, uv), o.flags |= Wt;
      else {
        var H = t !== null && (t.flags & Wt) !== _t;
        H && cA(o, o.child, l), N = jp(N);
      }
      if (xc(o, N), (o.mode & rn) === Ft)
        o.memoizedState = null;
      else
        switch (p) {
          case "forwards": {
            var W = uA(o.child), se;
            W === null ? (se = o.child, o.child = null) : (se = W.sibling, W.sibling = null), DS(
              o,
              !1,
              // isBackwards
              se,
              W,
              g
            );
            break;
          }
          case "backwards": {
            var ae = null, Te = o.child;
            for (o.child = null; Te !== null; ) {
              var Ee = Te.alternate;
              if (Ee !== null && Fy(Ee) === null) {
                o.child = Te;
                break;
              }
              var Pe = Te.sibling;
              Te.sibling = ae, ae = Te, Te = Pe;
            }
            DS(
              o,
              !0,
              // isBackwards
              ae,
              null,
              // last
              g
            );
            break;
          }
          case "together": {
            DS(
              o,
              !1,
              // isBackwards
              null,
              // tail
              null,
              // last
              void 0
            );
            break;
          }
          default:
            o.memoizedState = null;
        }
      return o.child;
    }
    function mA(t, o, l) {
      zx(o, o.stateNode.containerInfo);
      var c = o.pendingProps;
      return t === null ? o.child = zp(o, null, c, l) : Kr(t, o, c, l), o.child;
    }
    var pO = !1;
    function vA(t, o, l) {
      var c = o.type, p = c._context, g = o.pendingProps, T = o.memoizedProps, N = g.value;
      {
        "value" in g || pO || (pO = !0, m("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?"));
        var I = o.type.propTypes;
        I && ki(I, g, "prop", "Context.Provider");
      }
      if (JE(o, p, N), T !== null) {
        var H = T.value;
        if (Ot(H, N)) {
          if (T.children === g.children && !hy())
            return hl(t, o, l);
        } else
          c_(o, p, l);
      }
      var W = g.children;
      return Kr(t, o, W, l), o.child;
    }
    var fO = !1;
    function hA(t, o, l) {
      var c = o.type;
      c._context === void 0 ? c !== c.Consumer && (fO || (fO = !0, m("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?"))) : c = c._context;
      var p = o.pendingProps, g = p.children;
      typeof g != "function" && m("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it."), Bp(o, l);
      var T = Fo(c);
      is(o);
      var N;
      return yv.current = o, ka(!0), N = g(T), ka(!1), Hs(), o.flags |= Ji, Kr(t, o, N, l), o.child;
    }
    function Cv() {
      Li = !0;
    }
    function lb(t, o) {
      (o.mode & rn) === Ft && t !== null && (t.alternate = null, o.alternate = null, o.flags |= Bn);
    }
    function hl(t, o, l) {
      return t !== null && (o.dependencies = t.dependencies), YR(), Dv(o.lanes), Pr(l, o.childLanes) ? (x_(t, o), o.child) : null;
    }
    function gA(t, o, l) {
      {
        var c = o.return;
        if (c === null)
          throw new Error("Cannot swap the root fiber.");
        if (t.alternate = null, o.alternate = null, l.index = o.index, l.sibling = o.sibling, l.return = o.return, l.ref = o.ref, o === c.child)
          c.child = l;
        else {
          var p = c.child;
          if (p === null)
            throw new Error("Expected parent to have a child.");
          for (; p.sibling !== o; )
            if (p = p.sibling, p === null)
              throw new Error("Expected to find the previous sibling.");
          p.sibling = l;
        }
        var g = c.deletions;
        return g === null ? (c.deletions = [t], c.flags |= Cn) : g.push(t), l.flags |= Bn, l;
      }
    }
    function PS(t, o) {
      var l = t.lanes;
      return !!Pr(l, o);
    }
    function yA(t, o, l) {
      switch (o.tag) {
        case k:
          aO(o), o.stateNode, _p();
          break;
        case M:
          yR(o);
          break;
        case S: {
          var c = o.type;
          gs(c) && yy(o);
          break;
        }
        case D:
          zx(o, o.stateNode.containerInfo);
          break;
        case V: {
          var p = o.memoizedProps.value, g = o.type._context;
          JE(o, g, p);
          break;
        }
        case j:
          {
            var T = Pr(l, o.childLanes);
            T && (o.flags |= Zt);
            {
              var N = o.stateNode;
              N.effectDuration = 0, N.passiveEffectDuration = 0;
            }
          }
          break;
        case U: {
          var I = o.memoizedState;
          if (I !== null) {
            if (I.dehydrated !== null)
              return xc(o, jp(Di.current)), o.flags |= Wt, null;
            var H = o.child, W = H.childLanes;
            if (Pr(l, W))
              return sO(t, o, l);
            xc(o, jp(Di.current));
            var se = hl(t, o, l);
            return se !== null ? se.sibling : null;
          } else
            xc(o, jp(Di.current));
          break;
        }
        case q: {
          var ae = (t.flags & Wt) !== _t, Te = Pr(l, o.childLanes);
          if (ae) {
            if (Te)
              return dO(t, o, l);
            o.flags |= Wt;
          }
          var Ee = o.memoizedState;
          if (Ee !== null && (Ee.rendering = null, Ee.tail = null, Ee.lastEffect = null), xc(o, Di.current), Te)
            break;
          return null;
        }
        case ee:
        case J:
          return o.lanes = Ae, nO(t, o, l);
      }
      return hl(t, o, l);
    }
    function mO(t, o, l) {
      if (o._debugNeedsRemount && t !== null)
        return gA(t, o, cT(o.type, o.key, o.pendingProps, o._debugOwner || null, o.mode, o.lanes));
      if (t !== null) {
        var c = t.memoizedProps, p = o.pendingProps;
        if (c !== p || hy() || // Force a re-render if the implementation changed due to hot reload:
        o.type !== t.type)
          Li = !0;
        else {
          var g = PS(t, l);
          if (!g && // If this is the second pass of an error or suspense boundary, there
          // may not be work scheduled on `current`, so we check for this flag.
          (o.flags & Wt) === _t)
            return Li = !1, yA(t, o, l);
          (t.flags & fu) !== _t ? Li = !0 : Li = !1;
        }
      } else if (Li = !1, mr() && HI(o)) {
        var T = o.index, N = WI();
        jE(o, N, T);
      }
      switch (o.lanes = Ae, o.tag) {
        case E:
          return J_(t, o, o.type, l);
        case G: {
          var I = o.elementType;
          return Q_(t, o, I, l);
        }
        case b: {
          var H = o.type, W = o.pendingProps, se = o.elementType === H ? W : Mi(H, W);
          return RS(t, o, H, se, l);
        }
        case S: {
          var ae = o.type, Te = o.pendingProps, Ee = o.elementType === ae ? Te : Mi(ae, Te);
          return rO(t, o, ae, Ee, l);
        }
        case k:
          return Y_(t, o, l);
        case M:
          return K_(t, o, l);
        case P:
          return X_(t, o);
        case U:
          return sO(t, o, l);
        case D:
          return mA(t, o, l);
        case A: {
          var Pe = o.type, xt = o.pendingProps, Bt = o.elementType === Pe ? xt : Mi(Pe, xt);
          return JR(t, o, Pe, Bt, l);
        }
        case L:
          return W_(t, o, l);
        case w:
          return G_(t, o, l);
        case j:
          return q_(t, o, l);
        case V:
          return vA(t, o, l);
        case _:
          return hA(t, o, l);
        case $: {
          var Pt = o.type, fn = o.pendingProps, un = Mi(Pt, fn);
          if (o.type !== o.elementType) {
            var ye = Pt.propTypes;
            ye && ki(
              ye,
              un,
              // Resolved for outer only
              "prop",
              Pn(Pt)
            );
          }
          return un = Mi(Pt.type, un), eO(t, o, Pt, un, l);
        }
        case F:
          return tO(t, o, o.type, o.pendingProps, l);
        case Y: {
          var Le = o.type, be = o.pendingProps, at = o.elementType === Le ? be : Mi(Le, be);
          return Z_(t, o, Le, at, l);
        }
        case q:
          return dO(t, o, l);
        case re:
          break;
        case ee:
          return nO(t, o, l);
      }
      throw new Error("Unknown unit of work tag (" + o.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function qp(t) {
      t.flags |= Zt;
    }
    function vO(t) {
      t.flags |= Or, t.flags |= tm;
    }
    var hO, LS, gO, yO;
    hO = function(t, o, l, c) {
      for (var p = o.child; p !== null; ) {
        if (p.tag === M || p.tag === P)
          jL(t, p.stateNode);
        else if (p.tag !== D) {
          if (p.child !== null) {
            p.child.return = p, p = p.child;
            continue;
          }
        }
        if (p === o)
          return;
        for (; p.sibling === null; ) {
          if (p.return === null || p.return === o)
            return;
          p = p.return;
        }
        p.sibling.return = p.return, p = p.sibling;
      }
    }, LS = function(t, o) {
    }, gO = function(t, o, l, c, p) {
      var g = t.memoizedProps;
      if (g !== c) {
        var T = o.stateNode, N = Fx(), I = VL(T, l, g, c, p, N);
        o.updateQueue = I, I && qp(o);
      }
    }, yO = function(t, o, l, c) {
      l !== c && qp(o);
    };
    function xv(t, o) {
      if (!mr())
        switch (t.tailMode) {
          case "hidden": {
            for (var l = t.tail, c = null; l !== null; )
              l.alternate !== null && (c = l), l = l.sibling;
            c === null ? t.tail = null : c.sibling = null;
            break;
          }
          case "collapsed": {
            for (var p = t.tail, g = null; p !== null; )
              p.alternate !== null && (g = p), p = p.sibling;
            g === null ? !o && t.tail !== null ? t.tail.sibling = null : t.tail = null : g.sibling = null;
            break;
          }
        }
    }
    function hr(t) {
      var o = t.alternate !== null && t.alternate.child === t.child, l = Ae, c = _t;
      if (o) {
        if ((t.mode & jt) !== Ft) {
          for (var I = t.selfBaseDuration, H = t.child; H !== null; )
            l = Jt(l, Jt(H.lanes, H.childLanes)), c |= H.subtreeFlags & Vo, c |= H.flags & Vo, I += H.treeBaseDuration, H = H.sibling;
          t.treeBaseDuration = I;
        } else
          for (var W = t.child; W !== null; )
            l = Jt(l, Jt(W.lanes, W.childLanes)), c |= W.subtreeFlags & Vo, c |= W.flags & Vo, W.return = t, W = W.sibling;
        t.subtreeFlags |= c;
      } else {
        if ((t.mode & jt) !== Ft) {
          for (var p = t.actualDuration, g = t.selfBaseDuration, T = t.child; T !== null; )
            l = Jt(l, Jt(T.lanes, T.childLanes)), c |= T.subtreeFlags, c |= T.flags, p += T.actualDuration, g += T.treeBaseDuration, T = T.sibling;
          t.actualDuration = p, t.treeBaseDuration = g;
        } else
          for (var N = t.child; N !== null; )
            l = Jt(l, Jt(N.lanes, N.childLanes)), c |= N.subtreeFlags, c |= N.flags, N.return = t, N = N.sibling;
        t.subtreeFlags |= c;
      }
      return t.childLanes = l, o;
    }
    function bA(t, o, l) {
      if (r_() && (o.mode & rn) !== Ft && (o.flags & Wt) === _t)
        return YE(o), _p(), o.flags |= oo | Vr | Io, !1;
      var c = Ty(o);
      if (l !== null && l.dehydrated !== null)
        if (t === null) {
          if (!c)
            throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
          if (n_(o), hr(o), (o.mode & jt) !== Ft) {
            var p = l !== null;
            if (p) {
              var g = o.child;
              g !== null && (o.treeBaseDuration -= g.treeBaseDuration);
            }
          }
          return !1;
        } else {
          if (_p(), (o.flags & Wt) === _t && (o.memoizedState = null), o.flags |= Zt, hr(o), (o.mode & jt) !== Ft) {
            var T = l !== null;
            if (T) {
              var N = o.child;
              N !== null && (o.treeBaseDuration -= N.treeBaseDuration);
            }
          }
          return !1;
        }
      else
        return KE(), !0;
    }
    function bO(t, o, l) {
      var c = o.pendingProps;
      switch (ix(o), o.tag) {
        case E:
        case G:
        case F:
        case b:
        case A:
        case L:
        case w:
        case j:
        case _:
        case $:
          return hr(o), null;
        case S: {
          var p = o.type;
          return gs(p) && gy(o), hr(o), null;
        }
        case k: {
          var g = o.stateNode;
          if (Fp(o), nx(o), Wx(), g.pendingContext && (g.context = g.pendingContext, g.pendingContext = null), t === null || t.child === null) {
            var T = Ty(o);
            if (T)
              qp(o);
            else if (t !== null) {
              var N = t.memoizedState;
              // Check if this is a client root
              (!N.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)
              (o.flags & oo) !== _t) && (o.flags |= sa, KE());
            }
          }
          return LS(t, o), hr(o), null;
        }
        case M: {
          jx(o);
          var I = gR(), H = o.type;
          if (t !== null && o.stateNode != null)
            gO(t, o, H, c, I), t.ref !== o.ref && vO(o);
          else {
            if (!c) {
              if (o.stateNode === null)
                throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
              return hr(o), null;
            }
            var W = Fx(), se = Ty(o);
            if (se)
              e_(o, I, W) && qp(o);
            else {
              var ae = FL(H, c, I, W, o);
              hO(ae, o, !1, !1), o.stateNode = ae, UL(ae, H, c, I) && qp(o);
            }
            o.ref !== null && vO(o);
          }
          return hr(o), null;
        }
        case P: {
          var Te = c;
          if (t && o.stateNode != null) {
            var Ee = t.memoizedProps;
            yO(t, o, Ee, Te);
          } else {
            if (typeof Te != "string" && o.stateNode === null)
              throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
            var Pe = gR(), xt = Fx(), Bt = Ty(o);
            Bt ? t_(o) && qp(o) : o.stateNode = HL(Te, Pe, xt, o);
          }
          return hr(o), null;
        }
        case U: {
          Up(o);
          var Pt = o.memoizedState;
          if (t === null || t.memoizedState !== null && t.memoizedState.dehydrated !== null) {
            var fn = bA(t, o, Pt);
            if (!fn)
              return o.flags & Io ? o : null;
          }
          if ((o.flags & Wt) !== _t)
            return o.lanes = l, (o.mode & jt) !== Ft && hS(o), o;
          var un = Pt !== null, ye = t !== null && t.memoizedState !== null;
          if (un !== ye && un) {
            var Le = o.child;
            if (Le.flags |= es, (o.mode & rn) !== Ft) {
              var be = t === null && (o.memoizedProps.unstable_avoidThisFallback !== !0 || !Ke);
              be || Ux(Di.current, CR) ? C2() : ZS();
            }
          }
          var at = o.updateQueue;
          if (at !== null && (o.flags |= Zt), hr(o), (o.mode & jt) !== Ft && un) {
            var St = o.child;
            St !== null && (o.treeBaseDuration -= St.treeBaseDuration);
          }
          return null;
        }
        case D:
          return Fp(o), LS(t, o), t === null && AI(o.stateNode.containerInfo), hr(o), null;
        case V:
          var yt = o.type._context;
          return vx(yt, o), hr(o), null;
        case Y: {
          var Ht = o.type;
          return gs(Ht) && gy(o), hr(o), null;
        }
        case q: {
          Up(o);
          var Kt = o.memoizedState;
          if (Kt === null)
            return hr(o), null;
          var kn = (o.flags & Wt) !== _t, hn = Kt.rendering;
          if (hn === null)
            if (kn)
              xv(Kt, !1);
            else {
              var wo = S2() && (t === null || (t.flags & Wt) === _t);
              if (!wo)
                for (var gn = o.child; gn !== null; ) {
                  var bo = Fy(gn);
                  if (bo !== null) {
                    kn = !0, o.flags |= Wt, xv(Kt, !1);
                    var Ar = bo.updateQueue;
                    return Ar !== null && (o.updateQueue = Ar, o.flags |= Zt), o.subtreeFlags = _t, S_(o, l), xc(o, Vx(Di.current, uv)), o.child;
                  }
                  gn = gn.sibling;
                }
              Kt.tail !== null && Qn() > FO() && (o.flags |= Wt, kn = !0, xv(Kt, !1), o.lanes = mm);
            }
          else {
            if (!kn) {
              var xr = Fy(hn);
              if (xr !== null) {
                o.flags |= Wt, kn = !0;
                var _a = xr.updateQueue;
                if (_a !== null && (o.updateQueue = _a, o.flags |= Zt), xv(Kt, !0), Kt.tail === null && Kt.tailMode === "hidden" && !hn.alternate && !mr())
                  return hr(o), null;
              } else
                // The time it took to render last row is greater than the remaining
                // time we have to render. So rendering one more row would likely
                // exceed it.
                Qn() * 2 - Kt.renderingStartTime > FO() && l !== Dr && (o.flags |= Wt, kn = !0, xv(Kt, !1), o.lanes = mm);
            }
            if (Kt.isBackwards)
              hn.sibling = o.child, o.child = hn;
            else {
              var Zr = Kt.last;
              Zr !== null ? Zr.sibling = hn : o.child = hn, Kt.last = hn;
            }
          }
          if (Kt.tail !== null) {
            var Jr = Kt.tail;
            Kt.rendering = Jr, Kt.tail = Jr.sibling, Kt.renderingStartTime = Qn(), Jr.sibling = null;
            var Br = Di.current;
            return kn ? Br = Vx(Br, uv) : Br = jp(Br), xc(o, Br), Jr;
          }
          return hr(o), null;
        }
        case re:
          break;
        case ee:
        case J: {
          QS(o);
          var xl = o.memoizedState, tf = xl !== null;
          if (t !== null) {
            var Av = t.memoizedState, Rs = Av !== null;
            Rs !== tf && // LegacyHidden doesn't do any hiding — it only pre-renders.
            !ve && (o.flags |= es);
          }
          return !tf || (o.mode & rn) === Ft ? hr(o) : Pr(Es, Dr) && (hr(o), o.subtreeFlags & (Bn | Zt) && (o.flags |= es)), null;
        }
        case ce:
          return null;
        case de:
          return null;
      }
      throw new Error("Unknown unit of work tag (" + o.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function CA(t, o, l) {
      switch (ix(o), o.tag) {
        case S: {
          var c = o.type;
          gs(c) && gy(o);
          var p = o.flags;
          return p & Io ? (o.flags = p & ~Io | Wt, (o.mode & jt) !== Ft && hS(o), o) : null;
        }
        case k: {
          o.stateNode, Fp(o), nx(o), Wx();
          var g = o.flags;
          return (g & Io) !== _t && (g & Wt) === _t ? (o.flags = g & ~Io | Wt, o) : null;
        }
        case M:
          return jx(o), null;
        case U: {
          Up(o);
          var T = o.memoizedState;
          if (T !== null && T.dehydrated !== null) {
            if (o.alternate === null)
              throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
            _p();
          }
          var N = o.flags;
          return N & Io ? (o.flags = N & ~Io | Wt, (o.mode & jt) !== Ft && hS(o), o) : null;
        }
        case q:
          return Up(o), null;
        case D:
          return Fp(o), null;
        case V:
          var I = o.type._context;
          return vx(I, o), null;
        case ee:
        case J:
          return QS(o), null;
        case ce:
          return null;
        default:
          return null;
      }
    }
    function CO(t, o, l) {
      switch (ix(o), o.tag) {
        case S: {
          var c = o.type.childContextTypes;
          c != null && gy(o);
          break;
        }
        case k: {
          o.stateNode, Fp(o), nx(o), Wx();
          break;
        }
        case M: {
          jx(o);
          break;
        }
        case D:
          Fp(o);
          break;
        case U:
          Up(o);
          break;
        case q:
          Up(o);
          break;
        case V:
          var p = o.type._context;
          vx(p, o);
          break;
        case ee:
        case J:
          QS(o);
          break;
      }
    }
    var xO = null;
    xO = /* @__PURE__ */ new Set();
    var cb = !1, gr = !1, xA = typeof WeakSet == "function" ? WeakSet : Set, wt = null, Yp = null, Kp = null;
    function SA(t) {
      Us(null, function() {
        throw t;
      }), Jf();
    }
    var TA = function(t, o) {
      if (o.props = t.memoizedProps, o.state = t.memoizedState, t.mode & jt)
        try {
          Ss(), o.componentWillUnmount();
        } finally {
          xs(t);
        }
      else
        o.componentWillUnmount();
    };
    function SO(t, o) {
      try {
        Ec(qo, t);
      } catch (l) {
        Un(t, o, l);
      }
    }
    function IS(t, o, l) {
      try {
        TA(t, l);
      } catch (c) {
        Un(t, o, c);
      }
    }
    function EA(t, o, l) {
      try {
        l.componentDidMount();
      } catch (c) {
        Un(t, o, c);
      }
    }
    function TO(t, o) {
      try {
        RO(t);
      } catch (l) {
        Un(t, o, l);
      }
    }
    function Xp(t, o) {
      var l = t.ref;
      if (l !== null)
        if (typeof l == "function") {
          var c;
          try {
            if (ke && lt && t.mode & jt)
              try {
                Ss(), c = l(null);
              } finally {
                xs(t);
              }
            else
              c = l(null);
          } catch (p) {
            Un(t, o, p);
          }
          typeof c == "function" && m("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", Xt(t));
        } else
          l.current = null;
    }
    function ub(t, o, l) {
      try {
        l();
      } catch (c) {
        Un(t, o, c);
      }
    }
    var EO = !1;
    function RA(t, o) {
      BL(t.containerInfo), wt = o, OA();
      var l = EO;
      return EO = !1, l;
    }
    function OA() {
      for (; wt !== null; ) {
        var t = wt, o = t.child;
        (t.subtreeFlags & Hl) !== _t && o !== null ? (o.return = t, wt = o) : wA();
      }
    }
    function wA() {
      for (; wt !== null; ) {
        var t = wt;
        On(t);
        try {
          kA(t);
        } catch (l) {
          Un(t, t.return, l);
        }
        xo();
        var o = t.sibling;
        if (o !== null) {
          o.return = t.return, wt = o;
          return;
        }
        wt = t.return;
      }
    }
    function kA(t) {
      var o = t.alternate, l = t.flags;
      if ((l & sa) !== _t) {
        switch (On(t), t.tag) {
          case b:
          case A:
          case F:
            break;
          case S: {
            if (o !== null) {
              var c = o.memoizedProps, p = o.memoizedState, g = t.stateNode;
              t.type === t.elementType && !Gu && (g.props !== t.memoizedProps && m("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", Xt(t) || "instance"), g.state !== t.memoizedState && m("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", Xt(t) || "instance"));
              var T = g.getSnapshotBeforeUpdate(t.elementType === t.type ? c : Mi(t.type, c), p);
              {
                var N = xO;
                T === void 0 && !N.has(t.type) && (N.add(t.type), m("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", Xt(t)));
              }
              g.__reactInternalSnapshotBeforeUpdate = T;
            }
            break;
          }
          case k: {
            {
              var I = t.stateNode;
              cI(I.containerInfo);
            }
            break;
          }
          case M:
          case P:
          case D:
          case Y:
            break;
          default:
            throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
        xo();
      }
    }
    function Ii(t, o, l) {
      var c = o.updateQueue, p = c !== null ? c.lastEffect : null;
      if (p !== null) {
        var g = p.next, T = g;
        do {
          if ((T.tag & t) === t) {
            var N = T.destroy;
            T.destroy = void 0, N !== void 0 && ((t & vr) !== ba ? zd(o) : (t & qo) !== ba && Fd(o), (t & ys) !== ba && Lv(!0), ub(o, l, N), (t & ys) !== ba && Lv(!1), (t & vr) !== ba ? Sg() : (t & qo) !== ba && Wl());
          }
          T = T.next;
        } while (T !== g);
      }
    }
    function Ec(t, o) {
      var l = o.updateQueue, c = l !== null ? l.lastEffect : null;
      if (c !== null) {
        var p = c.next, g = p;
        do {
          if ((g.tag & t) === t) {
            (t & vr) !== ba ? xg(o) : (t & qo) !== ba && Tg(o);
            var T = g.create;
            (t & ys) !== ba && Lv(!0), g.destroy = T(), (t & ys) !== ba && Lv(!1), (t & vr) !== ba ? dm() : (t & qo) !== ba && Eg();
            {
              var N = g.destroy;
              if (N !== void 0 && typeof N != "function") {
                var I = void 0;
                (g.tag & qo) !== _t ? I = "useLayoutEffect" : (g.tag & ys) !== _t ? I = "useInsertionEffect" : I = "useEffect";
                var H = void 0;
                N === null ? H = " You returned null. If your effect does not require clean up, return undefined (or nothing)." : typeof N.then == "function" ? H = `

It looks like you wrote ` + I + `(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:

` + I + `(() => {
  async function fetchData() {
    // You can await here
    const response = await MyAPI.getData(someId);
    // ...
  }
  fetchData();
}, [someId]); // Or [] if effect doesn't need props or state

Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching` : H = " You returned: " + N, m("%s must not return anything besides a function, which is used for clean-up.%s", I, H);
              }
            }
          }
          g = g.next;
        } while (g !== p);
      }
    }
    function NA(t, o) {
      if ((o.flags & Zt) !== _t)
        switch (o.tag) {
          case j: {
            var l = o.stateNode.passiveEffectDuration, c = o.memoizedProps, p = c.id, g = c.onPostCommit, T = GR(), N = o.alternate === null ? "mount" : "update";
            WR() && (N = "nested-update"), typeof g == "function" && g(p, N, l, T);
            var I = o.return;
            e:
              for (; I !== null; ) {
                switch (I.tag) {
                  case k:
                    var H = I.stateNode;
                    H.passiveEffectDuration += l;
                    break e;
                  case j:
                    var W = I.stateNode;
                    W.passiveEffectDuration += l;
                    break e;
                }
                I = I.return;
              }
            break;
          }
        }
    }
    function $A(t, o, l, c) {
      if ((l.flags & or) !== _t)
        switch (l.tag) {
          case b:
          case A:
          case F: {
            if (!gr)
              if (l.mode & jt)
                try {
                  Ss(), Ec(qo | Go, l);
                } finally {
                  xs(l);
                }
              else
                Ec(qo | Go, l);
            break;
          }
          case S: {
            var p = l.stateNode;
            if (l.flags & Zt && !gr)
              if (o === null)
                if (l.type === l.elementType && !Gu && (p.props !== l.memoizedProps && m("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", Xt(l) || "instance"), p.state !== l.memoizedState && m("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", Xt(l) || "instance")), l.mode & jt)
                  try {
                    Ss(), p.componentDidMount();
                  } finally {
                    xs(l);
                  }
                else
                  p.componentDidMount();
              else {
                var g = l.elementType === l.type ? o.memoizedProps : Mi(l.type, o.memoizedProps), T = o.memoizedState;
                if (l.type === l.elementType && !Gu && (p.props !== l.memoizedProps && m("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", Xt(l) || "instance"), p.state !== l.memoizedState && m("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", Xt(l) || "instance")), l.mode & jt)
                  try {
                    Ss(), p.componentDidUpdate(g, T, p.__reactInternalSnapshotBeforeUpdate);
                  } finally {
                    xs(l);
                  }
                else
                  p.componentDidUpdate(g, T, p.__reactInternalSnapshotBeforeUpdate);
              }
            var N = l.updateQueue;
            N !== null && (l.type === l.elementType && !Gu && (p.props !== l.memoizedProps && m("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", Xt(l) || "instance"), p.state !== l.memoizedState && m("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", Xt(l) || "instance")), aR(l, N, p));
            break;
          }
          case k: {
            var I = l.updateQueue;
            if (I !== null) {
              var H = null;
              if (l.child !== null)
                switch (l.child.tag) {
                  case M:
                    H = l.child.stateNode;
                    break;
                  case S:
                    H = l.child.stateNode;
                    break;
                }
              aR(l, I, H);
            }
            break;
          }
          case M: {
            var W = l.stateNode;
            if (o === null && l.flags & Zt) {
              var se = l.type, ae = l.memoizedProps;
              KL(W, se, ae);
            }
            break;
          }
          case P:
            break;
          case D:
            break;
          case j: {
            {
              var Te = l.memoizedProps, Ee = Te.onCommit, Pe = Te.onRender, xt = l.stateNode.effectDuration, Bt = GR(), Pt = o === null ? "mount" : "update";
              WR() && (Pt = "nested-update"), typeof Pe == "function" && Pe(l.memoizedProps.id, Pt, l.actualDuration, l.treeBaseDuration, l.actualStartTime, Bt);
              {
                typeof Ee == "function" && Ee(l.memoizedProps.id, Pt, xt, Bt), w2(l);
                var fn = l.return;
                e:
                  for (; fn !== null; ) {
                    switch (fn.tag) {
                      case k:
                        var un = fn.stateNode;
                        un.effectDuration += xt;
                        break e;
                      case j:
                        var ye = fn.stateNode;
                        ye.effectDuration += xt;
                        break e;
                    }
                    fn = fn.return;
                  }
              }
            }
            break;
          }
          case U: {
            BA(t, l);
            break;
          }
          case q:
          case Y:
          case re:
          case ee:
          case J:
          case de:
            break;
          default:
            throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
      gr || l.flags & Or && RO(l);
    }
    function MA(t) {
      switch (t.tag) {
        case b:
        case A:
        case F: {
          if (t.mode & jt)
            try {
              Ss(), SO(t, t.return);
            } finally {
              xs(t);
            }
          else
            SO(t, t.return);
          break;
        }
        case S: {
          var o = t.stateNode;
          typeof o.componentDidMount == "function" && EA(t, t.return, o), TO(t, t.return);
          break;
        }
        case M: {
          TO(t, t.return);
          break;
        }
      }
    }
    function DA(t, o) {
      for (var l = null, c = t; ; ) {
        if (c.tag === M) {
          if (l === null) {
            l = c;
            try {
              var p = c.stateNode;
              o ? aI(p) : sI(c.stateNode, c.memoizedProps);
            } catch (T) {
              Un(t, t.return, T);
            }
          }
        } else if (c.tag === P) {
          if (l === null)
            try {
              var g = c.stateNode;
              o ? iI(g) : lI(g, c.memoizedProps);
            } catch (T) {
              Un(t, t.return, T);
            }
        } else if (!((c.tag === ee || c.tag === J) && c.memoizedState !== null && c !== t)) {
          if (c.child !== null) {
            c.child.return = c, c = c.child;
            continue;
          }
        }
        if (c === t)
          return;
        for (; c.sibling === null; ) {
          if (c.return === null || c.return === t)
            return;
          l === c && (l = null), c = c.return;
        }
        l === c && (l = null), c.sibling.return = c.return, c = c.sibling;
      }
    }
    function RO(t) {
      var o = t.ref;
      if (o !== null) {
        var l = t.stateNode, c;
        switch (t.tag) {
          case M:
            c = l;
            break;
          default:
            c = l;
        }
        if (typeof o == "function") {
          var p;
          if (t.mode & jt)
            try {
              Ss(), p = o(c);
            } finally {
              xs(t);
            }
          else
            p = o(c);
          typeof p == "function" && m("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", Xt(t));
        } else
          o.hasOwnProperty("current") || m("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", Xt(t)), o.current = c;
      }
    }
    function PA(t) {
      var o = t.alternate;
      o !== null && (o.return = null), t.return = null;
    }
    function OO(t) {
      var o = t.alternate;
      o !== null && (t.alternate = null, OO(o));
      {
        if (t.child = null, t.deletions = null, t.sibling = null, t.tag === M) {
          var l = t.stateNode;
          l !== null && FI(l);
        }
        t.stateNode = null, t._debugOwner = null, t.return = null, t.dependencies = null, t.memoizedProps = null, t.memoizedState = null, t.pendingProps = null, t.stateNode = null, t.updateQueue = null;
      }
    }
    function LA(t) {
      for (var o = t.return; o !== null; ) {
        if (wO(o))
          return o;
        o = o.return;
      }
      throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    function wO(t) {
      return t.tag === M || t.tag === k || t.tag === D;
    }
    function kO(t) {
      var o = t;
      e:
        for (; ; ) {
          for (; o.sibling === null; ) {
            if (o.return === null || wO(o.return))
              return null;
            o = o.return;
          }
          for (o.sibling.return = o.return, o = o.sibling; o.tag !== M && o.tag !== P && o.tag !== Q; ) {
            if (o.flags & Bn || o.child === null || o.tag === D)
              continue e;
            o.child.return = o, o = o.child;
          }
          if (!(o.flags & Bn))
            return o.stateNode;
        }
    }
    function IA(t) {
      var o = LA(t);
      switch (o.tag) {
        case M: {
          var l = o.stateNode;
          o.flags & xn && (NE(l), o.flags &= ~xn);
          var c = kO(t);
          AS(t, c, l);
          break;
        }
        case k:
        case D: {
          var p = o.stateNode.containerInfo, g = kO(t);
          _S(t, g, p);
          break;
        }
        default:
          throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
    function _S(t, o, l) {
      var c = t.tag, p = c === M || c === P;
      if (p) {
        var g = t.stateNode;
        o ? tI(l, g, o) : JL(l, g);
      } else if (c !== D) {
        var T = t.child;
        if (T !== null) {
          _S(T, o, l);
          for (var N = T.sibling; N !== null; )
            _S(N, o, l), N = N.sibling;
        }
      }
    }
    function AS(t, o, l) {
      var c = t.tag, p = c === M || c === P;
      if (p) {
        var g = t.stateNode;
        o ? eI(l, g, o) : ZL(l, g);
      } else if (c !== D) {
        var T = t.child;
        if (T !== null) {
          AS(T, o, l);
          for (var N = T.sibling; N !== null; )
            AS(N, o, l), N = N.sibling;
        }
      }
    }
    var yr = null, _i = !1;
    function _A(t, o, l) {
      {
        var c = o;
        e:
          for (; c !== null; ) {
            switch (c.tag) {
              case M: {
                yr = c.stateNode, _i = !1;
                break e;
              }
              case k: {
                yr = c.stateNode.containerInfo, _i = !0;
                break e;
              }
              case D: {
                yr = c.stateNode.containerInfo, _i = !0;
                break e;
              }
            }
            c = c.return;
          }
        if (yr === null)
          throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        NO(t, o, l), yr = null, _i = !1;
      }
      PA(l);
    }
    function Rc(t, o, l) {
      for (var c = l.child; c !== null; )
        NO(t, o, c), c = c.sibling;
    }
    function NO(t, o, l) {
      switch (cm(l), l.tag) {
        case M:
          gr || Xp(l, o);
        case P: {
          {
            var c = yr, p = _i;
            yr = null, Rc(t, o, l), yr = c, _i = p, yr !== null && (_i ? oI(yr, l.stateNode) : nI(yr, l.stateNode));
          }
          return;
        }
        case Q: {
          yr !== null && (_i ? rI(yr, l.stateNode) : YC(yr, l.stateNode));
          return;
        }
        case D: {
          {
            var g = yr, T = _i;
            yr = l.stateNode.containerInfo, _i = !0, Rc(t, o, l), yr = g, _i = T;
          }
          return;
        }
        case b:
        case A:
        case $:
        case F: {
          if (!gr) {
            var N = l.updateQueue;
            if (N !== null) {
              var I = N.lastEffect;
              if (I !== null) {
                var H = I.next, W = H;
                do {
                  var se = W, ae = se.destroy, Te = se.tag;
                  ae !== void 0 && ((Te & ys) !== ba ? ub(l, o, ae) : (Te & qo) !== ba && (Fd(l), l.mode & jt ? (Ss(), ub(l, o, ae), xs(l)) : ub(l, o, ae), Wl())), W = W.next;
                } while (W !== H);
              }
            }
          }
          Rc(t, o, l);
          return;
        }
        case S: {
          if (!gr) {
            Xp(l, o);
            var Ee = l.stateNode;
            typeof Ee.componentWillUnmount == "function" && IS(l, o, Ee);
          }
          Rc(t, o, l);
          return;
        }
        case re: {
          Rc(t, o, l);
          return;
        }
        case ee: {
          if (
            // TODO: Remove this dead flag
            l.mode & rn
          ) {
            var Pe = gr;
            gr = Pe || l.memoizedState !== null, Rc(t, o, l), gr = Pe;
          } else
            Rc(t, o, l);
          break;
        }
        default: {
          Rc(t, o, l);
          return;
        }
      }
    }
    function AA(t) {
      t.memoizedState;
    }
    function BA(t, o) {
      var l = o.memoizedState;
      if (l === null) {
        var c = o.alternate;
        if (c !== null) {
          var p = c.memoizedState;
          if (p !== null) {
            var g = p.dehydrated;
            g !== null && TI(g);
          }
        }
      }
    }
    function $O(t) {
      var o = t.updateQueue;
      if (o !== null) {
        t.updateQueue = null;
        var l = t.stateNode;
        l === null && (l = t.stateNode = new xA()), o.forEach(function(c) {
          var p = L2.bind(null, t, c);
          if (!l.has(c)) {
            if (l.add(c), Ho)
              if (Yp !== null && Kp !== null)
                Pv(Kp, Yp);
              else
                throw Error("Expected finished root and lanes to be set. This is a bug in React.");
            c.then(p, p);
          }
        });
      }
    }
    function zA(t, o, l) {
      Yp = l, Kp = t, On(o), MO(o, t), On(o), Yp = null, Kp = null;
    }
    function Ai(t, o, l) {
      var c = o.deletions;
      if (c !== null)
        for (var p = 0; p < c.length; p++) {
          var g = c[p];
          try {
            _A(t, o, g);
          } catch (I) {
            Un(g, o, I);
          }
        }
      var T = q0();
      if (o.subtreeFlags & Nr)
        for (var N = o.child; N !== null; )
          On(N), MO(N, t), N = N.sibling;
      On(T);
    }
    function MO(t, o, l) {
      var c = t.alternate, p = t.flags;
      switch (t.tag) {
        case b:
        case A:
        case $:
        case F: {
          if (Ai(o, t), Ts(t), p & Zt) {
            try {
              Ii(ys | Go, t, t.return), Ec(ys | Go, t);
            } catch (Ht) {
              Un(t, t.return, Ht);
            }
            if (t.mode & jt) {
              try {
                Ss(), Ii(qo | Go, t, t.return);
              } catch (Ht) {
                Un(t, t.return, Ht);
              }
              xs(t);
            } else
              try {
                Ii(qo | Go, t, t.return);
              } catch (Ht) {
                Un(t, t.return, Ht);
              }
          }
          return;
        }
        case S: {
          Ai(o, t), Ts(t), p & Or && c !== null && Xp(c, c.return);
          return;
        }
        case M: {
          Ai(o, t), Ts(t), p & Or && c !== null && Xp(c, c.return);
          {
            if (t.flags & xn) {
              var g = t.stateNode;
              try {
                NE(g);
              } catch (Ht) {
                Un(t, t.return, Ht);
              }
            }
            if (p & Zt) {
              var T = t.stateNode;
              if (T != null) {
                var N = t.memoizedProps, I = c !== null ? c.memoizedProps : N, H = t.type, W = t.updateQueue;
                if (t.updateQueue = null, W !== null)
                  try {
                    XL(T, W, H, I, N, t);
                  } catch (Ht) {
                    Un(t, t.return, Ht);
                  }
              }
            }
          }
          return;
        }
        case P: {
          if (Ai(o, t), Ts(t), p & Zt) {
            if (t.stateNode === null)
              throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
            var se = t.stateNode, ae = t.memoizedProps, Te = c !== null ? c.memoizedProps : ae;
            try {
              QL(se, Te, ae);
            } catch (Ht) {
              Un(t, t.return, Ht);
            }
          }
          return;
        }
        case k: {
          if (Ai(o, t), Ts(t), p & Zt && c !== null) {
            var Ee = c.memoizedState;
            if (Ee.isDehydrated)
              try {
                SI(o.containerInfo);
              } catch (Ht) {
                Un(t, t.return, Ht);
              }
          }
          return;
        }
        case D: {
          Ai(o, t), Ts(t);
          return;
        }
        case U: {
          Ai(o, t), Ts(t);
          var Pe = t.child;
          if (Pe.flags & es) {
            var xt = Pe.stateNode, Bt = Pe.memoizedState, Pt = Bt !== null;
            if (xt.isHidden = Pt, Pt) {
              var fn = Pe.alternate !== null && Pe.alternate.memoizedState !== null;
              fn || b2();
            }
          }
          if (p & Zt) {
            try {
              AA(t);
            } catch (Ht) {
              Un(t, t.return, Ht);
            }
            $O(t);
          }
          return;
        }
        case ee: {
          var un = c !== null && c.memoizedState !== null;
          if (
            // TODO: Remove this dead flag
            t.mode & rn
          ) {
            var ye = gr;
            gr = ye || un, Ai(o, t), gr = ye;
          } else
            Ai(o, t);
          if (Ts(t), p & es) {
            var Le = t.stateNode, be = t.memoizedState, at = be !== null, St = t;
            if (Le.isHidden = at, at && !un && (St.mode & rn) !== Ft) {
              wt = St;
              for (var yt = St.child; yt !== null; )
                wt = yt, jA(yt), yt = yt.sibling;
            }
            DA(St, at);
          }
          return;
        }
        case q: {
          Ai(o, t), Ts(t), p & Zt && $O(t);
          return;
        }
        case re:
          return;
        default: {
          Ai(o, t), Ts(t);
          return;
        }
      }
    }
    function Ts(t) {
      var o = t.flags;
      if (o & Bn) {
        try {
          IA(t);
        } catch (l) {
          Un(t, t.return, l);
        }
        t.flags &= ~Bn;
      }
      o & la && (t.flags &= ~la);
    }
    function FA(t, o, l) {
      Yp = l, Kp = o, wt = t, DO(t, o, l), Yp = null, Kp = null;
    }
    function DO(t, o, l) {
      for (var c = (t.mode & rn) !== Ft; wt !== null; ) {
        var p = wt, g = p.child;
        if (p.tag === ee && c) {
          var T = p.memoizedState !== null, N = T || cb;
          if (N) {
            BS(t, o, l);
            continue;
          } else {
            var I = p.alternate, H = I !== null && I.memoizedState !== null, W = H || gr, se = cb, ae = gr;
            cb = N, gr = W, gr && !ae && (wt = p, UA(p));
            for (var Te = g; Te !== null; )
              wt = Te, DO(
                Te,
                // New root; bubble back up to here and stop.
                o,
                l
              ), Te = Te.sibling;
            wt = p, cb = se, gr = ae, BS(t, o, l);
            continue;
          }
        }
        (p.subtreeFlags & or) !== _t && g !== null ? (g.return = p, wt = g) : BS(t, o, l);
      }
    }
    function BS(t, o, l) {
      for (; wt !== null; ) {
        var c = wt;
        if ((c.flags & or) !== _t) {
          var p = c.alternate;
          On(c);
          try {
            $A(o, p, c, l);
          } catch (T) {
            Un(c, c.return, T);
          }
          xo();
        }
        if (c === t) {
          wt = null;
          return;
        }
        var g = c.sibling;
        if (g !== null) {
          g.return = c.return, wt = g;
          return;
        }
        wt = c.return;
      }
    }
    function jA(t) {
      for (; wt !== null; ) {
        var o = wt, l = o.child;
        switch (o.tag) {
          case b:
          case A:
          case $:
          case F: {
            if (o.mode & jt)
              try {
                Ss(), Ii(qo, o, o.return);
              } finally {
                xs(o);
              }
            else
              Ii(qo, o, o.return);
            break;
          }
          case S: {
            Xp(o, o.return);
            var c = o.stateNode;
            typeof c.componentWillUnmount == "function" && IS(o, o.return, c);
            break;
          }
          case M: {
            Xp(o, o.return);
            break;
          }
          case ee: {
            var p = o.memoizedState !== null;
            if (p) {
              PO(t);
              continue;
            }
            break;
          }
        }
        l !== null ? (l.return = o, wt = l) : PO(t);
      }
    }
    function PO(t) {
      for (; wt !== null; ) {
        var o = wt;
        if (o === t) {
          wt = null;
          return;
        }
        var l = o.sibling;
        if (l !== null) {
          l.return = o.return, wt = l;
          return;
        }
        wt = o.return;
      }
    }
    function UA(t) {
      for (; wt !== null; ) {
        var o = wt, l = o.child;
        if (o.tag === ee) {
          var c = o.memoizedState !== null;
          if (c) {
            LO(t);
            continue;
          }
        }
        l !== null ? (l.return = o, wt = l) : LO(t);
      }
    }
    function LO(t) {
      for (; wt !== null; ) {
        var o = wt;
        On(o);
        try {
          MA(o);
        } catch (c) {
          Un(o, o.return, c);
        }
        if (xo(), o === t) {
          wt = null;
          return;
        }
        var l = o.sibling;
        if (l !== null) {
          l.return = o.return, wt = l;
          return;
        }
        wt = o.return;
      }
    }
    function VA(t, o, l, c) {
      wt = o, HA(o, t, l, c);
    }
    function HA(t, o, l, c) {
      for (; wt !== null; ) {
        var p = wt, g = p.child;
        (p.subtreeFlags & ca) !== _t && g !== null ? (g.return = p, wt = g) : WA(t, o, l, c);
      }
    }
    function WA(t, o, l, c) {
      for (; wt !== null; ) {
        var p = wt;
        if ((p.flags & qn) !== _t) {
          On(p);
          try {
            GA(o, p, l, c);
          } catch (T) {
            Un(p, p.return, T);
          }
          xo();
        }
        if (p === t) {
          wt = null;
          return;
        }
        var g = p.sibling;
        if (g !== null) {
          g.return = p.return, wt = g;
          return;
        }
        wt = p.return;
      }
    }
    function GA(t, o, l, c) {
      switch (o.tag) {
        case b:
        case A:
        case F: {
          if (o.mode & jt) {
            vS();
            try {
              Ec(vr | Go, o);
            } finally {
              mS(o);
            }
          } else
            Ec(vr | Go, o);
          break;
        }
      }
    }
    function qA(t) {
      wt = t, YA();
    }
    function YA() {
      for (; wt !== null; ) {
        var t = wt, o = t.child;
        if ((wt.flags & Cn) !== _t) {
          var l = t.deletions;
          if (l !== null) {
            for (var c = 0; c < l.length; c++) {
              var p = l[c];
              wt = p, QA(p, t);
            }
            {
              var g = t.alternate;
              if (g !== null) {
                var T = g.child;
                if (T !== null) {
                  g.child = null;
                  do {
                    var N = T.sibling;
                    T.sibling = null, T = N;
                  } while (T !== null);
                }
              }
            }
            wt = t;
          }
        }
        (t.subtreeFlags & ca) !== _t && o !== null ? (o.return = t, wt = o) : KA();
      }
    }
    function KA() {
      for (; wt !== null; ) {
        var t = wt;
        (t.flags & qn) !== _t && (On(t), XA(t), xo());
        var o = t.sibling;
        if (o !== null) {
          o.return = t.return, wt = o;
          return;
        }
        wt = t.return;
      }
    }
    function XA(t) {
      switch (t.tag) {
        case b:
        case A:
        case F: {
          t.mode & jt ? (vS(), Ii(vr | Go, t, t.return), mS(t)) : Ii(vr | Go, t, t.return);
          break;
        }
      }
    }
    function QA(t, o) {
      for (; wt !== null; ) {
        var l = wt;
        On(l), JA(l, o), xo();
        var c = l.child;
        c !== null ? (c.return = l, wt = c) : ZA(t);
      }
    }
    function ZA(t) {
      for (; wt !== null; ) {
        var o = wt, l = o.sibling, c = o.return;
        if (OO(o), o === t) {
          wt = null;
          return;
        }
        if (l !== null) {
          l.return = c, wt = l;
          return;
        }
        wt = c;
      }
    }
    function JA(t, o) {
      switch (t.tag) {
        case b:
        case A:
        case F: {
          t.mode & jt ? (vS(), Ii(vr, t, o), mS(t)) : Ii(vr, t, o);
          break;
        }
      }
    }
    function e2(t) {
      switch (t.tag) {
        case b:
        case A:
        case F: {
          try {
            Ec(qo | Go, t);
          } catch (l) {
            Un(t, t.return, l);
          }
          break;
        }
        case S: {
          var o = t.stateNode;
          try {
            o.componentDidMount();
          } catch (l) {
            Un(t, t.return, l);
          }
          break;
        }
      }
    }
    function t2(t) {
      switch (t.tag) {
        case b:
        case A:
        case F: {
          try {
            Ec(vr | Go, t);
          } catch (o) {
            Un(t, t.return, o);
          }
          break;
        }
      }
    }
    function n2(t) {
      switch (t.tag) {
        case b:
        case A:
        case F: {
          try {
            Ii(qo | Go, t, t.return);
          } catch (l) {
            Un(t, t.return, l);
          }
          break;
        }
        case S: {
          var o = t.stateNode;
          typeof o.componentWillUnmount == "function" && IS(t, t.return, o);
          break;
        }
      }
    }
    function o2(t) {
      switch (t.tag) {
        case b:
        case A:
        case F:
          try {
            Ii(vr | Go, t, t.return);
          } catch (o) {
            Un(t, t.return, o);
          }
      }
    }
    if (typeof Symbol == "function" && Symbol.for) {
      var Sv = Symbol.for;
      Sv("selector.component"), Sv("selector.has_pseudo_class"), Sv("selector.role"), Sv("selector.test_id"), Sv("selector.text");
    }
    var r2 = [];
    function a2() {
      r2.forEach(function(t) {
        return t();
      });
    }
    var i2 = s.ReactCurrentActQueue;
    function s2(t) {
      {
        var o = (
          // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
          typeof IS_REACT_ACT_ENVIRONMENT < "u" ? IS_REACT_ACT_ENVIRONMENT : void 0
        ), l = typeof jest < "u";
        return l && o !== !1;
      }
    }
    function IO() {
      {
        var t = (
          // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
          typeof IS_REACT_ACT_ENVIRONMENT < "u" ? IS_REACT_ACT_ENVIRONMENT : void 0
        );
        return !t && i2.current !== null && m("The current testing environment is not configured to support act(...)"), t;
      }
    }
    var l2 = Math.ceil, zS = s.ReactCurrentDispatcher, FS = s.ReactCurrentOwner, br = s.ReactCurrentBatchConfig, Bi = s.ReactCurrentActQueue, Xo = (
      /*             */
      0
    ), _O = (
      /*               */
      1
    ), Cr = (
      /*                */
      2
    ), ei = (
      /*                */
      4
    ), gl = 0, Tv = 1, qu = 2, db = 3, Ev = 4, AO = 5, jS = 6, pn = Xo, Xr = null, uo = null, Qo = Ae, Es = Ae, US = vc(Ae), Zo = gl, Rv = null, pb = Ae, Ov = Ae, fb = Ae, wv = null, Ca = null, VS = 0, BO = 500, zO = 1 / 0, c2 = 500, yl = null;
    function kv() {
      zO = Qn() + c2;
    }
    function FO() {
      return zO;
    }
    var mb = !1, HS = null, Qp = null, Yu = !1, Oc = null, Nv = Ae, WS = [], GS = null, u2 = 50, $v = 0, qS = null, YS = !1, vb = !1, d2 = 50, Zp = 0, hb = null, Mv = In, gb = Ae, jO = !1;
    function yb() {
      return Xr;
    }
    function Qr() {
      return (pn & (Cr | ei)) !== Xo ? Qn() : (Mv !== In || (Mv = Qn()), Mv);
    }
    function wc(t) {
      var o = t.mode;
      if ((o & rn) === Ft)
        return Vt;
      if ((pn & Cr) !== Xo && Qo !== Ae)
        return To(Qo);
      var l = s_() !== i_;
      if (l) {
        if (br.transition !== null) {
          var c = br.transition;
          c._updatedFibers || (c._updatedFibers = /* @__PURE__ */ new Set()), c._updatedFibers.add(t);
        }
        return gb === dn && (gb = gm()), gb;
      }
      var p = fa();
      if (p !== dn)
        return p;
      var g = WL();
      return g;
    }
    function p2(t) {
      var o = t.mode;
      return (o & rn) === Ft ? Vt : vC();
    }
    function Jo(t, o, l, c) {
      _2(), jO && m("useInsertionEffect must not schedule updates."), YS && (vb = !0), el(t, l, c), (pn & Cr) !== Ae && t === Xr ? z2(o) : (Ho && Sm(t, o, l), F2(o), t === Xr && ((pn & Cr) === Xo && (Ov = Jt(Ov, l)), Zo === Ev && kc(t, Qo)), xa(t, c), l === Vt && pn === Xo && (o.mode & rn) === Ft && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
      !Bi.isBatchingLegacy && (kv(), FE()));
    }
    function f2(t, o, l) {
      var c = t.current;
      c.lanes = o, el(t, o, l), xa(t, l);
    }
    function m2(t) {
      return (
        // TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We
        // decided not to enable it.
        (pn & Cr) !== Xo
      );
    }
    function xa(t, o) {
      var l = t.callbackNode;
      pC(t, o);
      var c = bu(t, t === Xr ? Qo : Ae);
      if (c === Ae) {
        l !== null && ow(l), t.callbackNode = null, t.callbackPriority = dn;
        return;
      }
      var p = go(c), g = t.callbackPriority;
      if (g === p && // Special case related to `act`. If the currently scheduled task is a
      // Scheduler task, rather than an `act` task, cancel it and re-scheduled
      // on the `act` queue.
      !(Bi.current !== null && l !== tT)) {
        l == null && g !== Vt && m("Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.");
        return;
      }
      l != null && ow(l);
      var T;
      if (p === Vt)
        t.tag === hc ? (Bi.isBatchingLegacy !== null && (Bi.didScheduleLegacyUpdate = !0), VI(HO.bind(null, t))) : zE(HO.bind(null, t)), Bi.current !== null ? Bi.current.push(gc) : qL(function() {
          (pn & (Cr | ei)) === Xo && gc();
        }), T = null;
      else {
        var N;
        switch (Eu(c)) {
          case rr:
            N = _d;
            break;
          case Wo:
            N = Gr;
            break;
          case Ti:
            N = Ha;
            break;
          case Su:
            N = ns;
            break;
          default:
            N = Ha;
            break;
        }
        T = nT(N, UO.bind(null, t));
      }
      t.callbackPriority = p, t.callbackNode = T;
    }
    function UO(t, o) {
      if (__(), Mv = In, gb = Ae, (pn & (Cr | ei)) !== Xo)
        throw new Error("Should not already be working.");
      var l = t.callbackNode, c = Cl();
      if (c && t.callbackNode !== l)
        return null;
      var p = bu(t, t === Xr ? Qo : Ae);
      if (p === Ae)
        return null;
      var g = !xu(t, p) && !$g(t, p) && !o, T = g ? E2(t, p) : Cb(t, p);
      if (T !== gl) {
        if (T === qu) {
          var N = vm(t);
          N !== Ae && (p = N, T = KS(t, N));
        }
        if (T === Tv) {
          var I = Rv;
          throw Ku(t, Ae), kc(t, p), xa(t, Qn()), I;
        }
        if (T === jS)
          kc(t, p);
        else {
          var H = !xu(t, p), W = t.current.alternate;
          if (H && !h2(W)) {
            if (T = Cb(t, p), T === qu) {
              var se = vm(t);
              se !== Ae && (p = se, T = KS(t, se));
            }
            if (T === Tv) {
              var ae = Rv;
              throw Ku(t, Ae), kc(t, p), xa(t, Qn()), ae;
            }
          }
          t.finishedWork = W, t.finishedLanes = p, v2(t, T, p);
        }
      }
      return xa(t, Qn()), t.callbackNode === l ? UO.bind(null, t) : null;
    }
    function KS(t, o) {
      var l = wv;
      if (Ro(t)) {
        var c = Ku(t, o);
        c.flags |= oo, _I(t.containerInfo);
      }
      var p = Cb(t, o);
      if (p !== qu) {
        var g = Ca;
        Ca = l, g !== null && VO(g);
      }
      return p;
    }
    function VO(t) {
      Ca === null ? Ca = t : Ca.push.apply(Ca, t);
    }
    function v2(t, o, l) {
      switch (o) {
        case gl:
        case Tv:
          throw new Error("Root did not complete. This is a bug in React.");
        case qu: {
          Xu(t, Ca, yl);
          break;
        }
        case db: {
          if (kc(t, l), ip(l) && // do not delay if we're inside an act() scope
          !rw()) {
            var c = VS + BO - Qn();
            if (c > 10) {
              var p = bu(t, Ae);
              if (p !== Ae)
                break;
              var g = t.suspendedLanes;
              if (!Js(g, l)) {
                Qr(), Cm(t, g);
                break;
              }
              t.timeoutHandle = GC(Xu.bind(null, t, Ca, yl), c);
              break;
            }
          }
          Xu(t, Ca, yl);
          break;
        }
        case Ev: {
          if (kc(t, l), Ng(l))
            break;
          if (!rw()) {
            var T = kg(t, l), N = T, I = Qn() - N, H = I2(I) - I;
            if (H > 10) {
              t.timeoutHandle = GC(Xu.bind(null, t, Ca, yl), H);
              break;
            }
          }
          Xu(t, Ca, yl);
          break;
        }
        case AO: {
          Xu(t, Ca, yl);
          break;
        }
        default:
          throw new Error("Unknown root exit status.");
      }
    }
    function h2(t) {
      for (var o = t; ; ) {
        if (o.flags & pu) {
          var l = o.updateQueue;
          if (l !== null) {
            var c = l.stores;
            if (c !== null)
              for (var p = 0; p < c.length; p++) {
                var g = c[p], T = g.getSnapshot, N = g.value;
                try {
                  if (!Ot(T(), N))
                    return !1;
                } catch {
                  return !1;
                }
              }
          }
        }
        var I = o.child;
        if (o.subtreeFlags & pu && I !== null) {
          I.return = o, o = I;
          continue;
        }
        if (o === t)
          return !0;
        for (; o.sibling === null; ) {
          if (o.return === null || o.return === t)
            return !0;
          o = o.return;
        }
        o.sibling.return = o.return, o = o.sibling;
      }
      return !0;
    }
    function kc(t, o) {
      o = Zl(o, fb), o = Zl(o, Ov), bm(t, o);
    }
    function HO(t) {
      if (A_(), (pn & (Cr | ei)) !== Xo)
        throw new Error("Should not already be working.");
      Cl();
      var o = bu(t, Ae);
      if (!Pr(o, Vt))
        return xa(t, Qn()), null;
      var l = Cb(t, o);
      if (t.tag !== hc && l === qu) {
        var c = vm(t);
        c !== Ae && (o = c, l = KS(t, c));
      }
      if (l === Tv) {
        var p = Rv;
        throw Ku(t, Ae), kc(t, o), xa(t, Qn()), p;
      }
      if (l === jS)
        throw new Error("Root did not complete. This is a bug in React.");
      var g = t.current.alternate;
      return t.finishedWork = g, t.finishedLanes = o, Xu(t, Ca, yl), xa(t, Qn()), null;
    }
    function g2(t, o) {
      o !== Ae && (Jl(t, Jt(o, Vt)), xa(t, Qn()), (pn & (Cr | ei)) === Xo && (kv(), gc()));
    }
    function XS(t, o) {
      var l = pn;
      pn |= _O;
      try {
        return t(o);
      } finally {
        pn = l, pn === Xo && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
        !Bi.isBatchingLegacy && (kv(), FE());
      }
    }
    function y2(t, o, l, c, p) {
      var g = fa(), T = br.transition;
      try {
        return br.transition = null, Eo(rr), t(o, l, c, p);
      } finally {
        Eo(g), br.transition = T, pn === Xo && kv();
      }
    }
    function bl(t) {
      Oc !== null && Oc.tag === hc && (pn & (Cr | ei)) === Xo && Cl();
      var o = pn;
      pn |= _O;
      var l = br.transition, c = fa();
      try {
        return br.transition = null, Eo(rr), t ? t() : void 0;
      } finally {
        Eo(c), br.transition = l, pn = o, (pn & (Cr | ei)) === Xo && gc();
      }
    }
    function WO() {
      return (pn & (Cr | ei)) !== Xo;
    }
    function bb(t, o) {
      Ir(US, Es, t), Es = Jt(Es, o);
    }
    function QS(t) {
      Es = US.current, Lr(US, t);
    }
    function Ku(t, o) {
      t.finishedWork = null, t.finishedLanes = Ae;
      var l = t.timeoutHandle;
      if (l !== qC && (t.timeoutHandle = qC, GL(l)), uo !== null)
        for (var c = uo.return; c !== null; ) {
          var p = c.alternate;
          CO(p, c), c = c.return;
        }
      Xr = t;
      var g = Qu(t.current, null);
      return uo = g, Qo = Es = o, Zo = gl, Rv = null, pb = Ae, Ov = Ae, fb = Ae, wv = null, Ca = null, d_(), $i.discardPendingWarnings(), g;
    }
    function GO(t, o) {
      do {
        var l = uo;
        try {
          if (wy(), SR(), xo(), FS.current = null, l === null || l.return === null) {
            Zo = Tv, Rv = o, uo = null;
            return;
          }
          if (ke && l.mode & jt && ab(l, !0), Ye)
            if (Hs(), o !== null && typeof o == "object" && typeof o.then == "function") {
              var c = o;
              Rg(l, c, Qo);
            } else
              jd(l, o, Qo);
          U_(t, l.return, l, o, Qo), XO(l);
        } catch (p) {
          o = p, uo === l && l !== null ? (l = l.return, uo = l) : l = uo;
          continue;
        }
        return;
      } while (!0);
    }
    function qO() {
      var t = zS.current;
      return zS.current = eb, t === null ? eb : t;
    }
    function YO(t) {
      zS.current = t;
    }
    function b2() {
      VS = Qn();
    }
    function Dv(t) {
      pb = Jt(t, pb);
    }
    function C2() {
      Zo === gl && (Zo = db);
    }
    function ZS() {
      (Zo === gl || Zo === db || Zo === qu) && (Zo = Ev), Xr !== null && (Cu(pb) || Cu(Ov)) && kc(Xr, Qo);
    }
    function x2(t) {
      Zo !== Ev && (Zo = qu), wv === null ? wv = [t] : wv.push(t);
    }
    function S2() {
      return Zo === gl;
    }
    function Cb(t, o) {
      var l = pn;
      pn |= Cr;
      var c = qO();
      if (Xr !== t || Qo !== o) {
        if (Ho) {
          var p = t.memoizedUpdaters;
          p.size > 0 && (Pv(t, Qo), p.clear()), cp(t, o);
        }
        yl = Tm(), Ku(t, o);
      }
      Da(o);
      do
        try {
          T2();
          break;
        } catch (g) {
          GO(t, g);
        }
      while (!0);
      if (wy(), pn = l, YO(c), uo !== null)
        throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
      return ql(), Xr = null, Qo = Ae, Zo;
    }
    function T2() {
      for (; uo !== null; )
        KO(uo);
    }
    function E2(t, o) {
      var l = pn;
      pn |= Cr;
      var c = qO();
      if (Xr !== t || Qo !== o) {
        if (Ho) {
          var p = t.memoizedUpdaters;
          p.size > 0 && (Pv(t, Qo), p.clear()), cp(t, o);
        }
        yl = Tm(), kv(), Ku(t, o);
      }
      Da(o);
      do
        try {
          R2();
          break;
        } catch (g) {
          GO(t, g);
        }
      while (!0);
      return wy(), YO(c), pn = l, uo !== null ? (vu(), gl) : (ql(), Xr = null, Qo = Ae, Zo);
    }
    function R2() {
      for (; uo !== null && !Id(); )
        KO(uo);
    }
    function KO(t) {
      var o = t.alternate;
      On(t);
      var l;
      (t.mode & jt) !== Ft ? (fS(t), l = JS(o, t, Es), ab(t, !0)) : l = JS(o, t, Es), xo(), t.memoizedProps = t.pendingProps, l === null ? XO(t) : uo = l, FS.current = null;
    }
    function XO(t) {
      var o = t;
      do {
        var l = o.alternate, c = o.return;
        if ((o.flags & Vr) === _t) {
          On(o);
          var p = void 0;
          if ((o.mode & jt) === Ft ? p = bO(l, o, Es) : (fS(o), p = bO(l, o, Es), ab(o, !1)), xo(), p !== null) {
            uo = p;
            return;
          }
        } else {
          var g = CA(l, o);
          if (g !== null) {
            g.flags &= hg, uo = g;
            return;
          }
          if ((o.mode & jt) !== Ft) {
            ab(o, !1);
            for (var T = o.actualDuration, N = o.child; N !== null; )
              T += N.actualDuration, N = N.sibling;
            o.actualDuration = T;
          }
          if (c !== null)
            c.flags |= Vr, c.subtreeFlags = _t, c.deletions = null;
          else {
            Zo = jS, uo = null;
            return;
          }
        }
        var I = o.sibling;
        if (I !== null) {
          uo = I;
          return;
        }
        o = c, uo = o;
      } while (o !== null);
      Zo === gl && (Zo = AO);
    }
    function Xu(t, o, l) {
      var c = fa(), p = br.transition;
      try {
        br.transition = null, Eo(rr), O2(t, o, l, c);
      } finally {
        br.transition = p, Eo(c);
      }
      return null;
    }
    function O2(t, o, l, c) {
      do
        Cl();
      while (Oc !== null);
      if (A2(), (pn & (Cr | ei)) !== Xo)
        throw new Error("Should not already be working.");
      var p = t.finishedWork, g = t.finishedLanes;
      if (Bd(g), p === null)
        return um(), null;
      if (g === Ae && m("root.finishedLanes should not be empty during a commit. This is a bug in React."), t.finishedWork = null, t.finishedLanes = Ae, p === t.current)
        throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
      t.callbackNode = null, t.callbackPriority = dn;
      var T = Jt(p.lanes, p.childLanes);
      xm(t, T), t === Xr && (Xr = null, uo = null, Qo = Ae), ((p.subtreeFlags & ca) !== _t || (p.flags & ca) !== _t) && (Yu || (Yu = !0, GS = l, nT(Ha, function() {
        return Cl(), null;
      })));
      var N = (p.subtreeFlags & (Hl | Nr | or | ca)) !== _t, I = (p.flags & (Hl | Nr | or | ca)) !== _t;
      if (N || I) {
        var H = br.transition;
        br.transition = null;
        var W = fa();
        Eo(rr);
        var se = pn;
        pn |= ei, FS.current = null, RA(t, p), qR(), zA(t, p, g), zL(t.containerInfo), t.current = p, Og(g), FA(p, t, g), Gl(), bg(), pn = se, Eo(W), br.transition = H;
      } else
        t.current = p, qR();
      var ae = Yu;
      if (Yu ? (Yu = !1, Oc = t, Nv = g) : (Zp = 0, hb = null), T = t.pendingLanes, T === Ae && (Qp = null), ae || ew(t.current, !1), Ci(p.stateNode, c), Ho && t.memoizedUpdaters.clear(), a2(), xa(t, Qn()), o !== null)
        for (var Te = t.onRecoverableError, Ee = 0; Ee < o.length; Ee++) {
          var Pe = o[Ee], xt = Pe.stack, Bt = Pe.digest;
          Te(Pe.value, {
            componentStack: xt,
            digest: Bt
          });
        }
      if (mb) {
        mb = !1;
        var Pt = HS;
        throw HS = null, Pt;
      }
      return Pr(Nv, Vt) && t.tag !== hc && Cl(), T = t.pendingLanes, Pr(T, Vt) ? (I_(), t === qS ? $v++ : ($v = 0, qS = t)) : $v = 0, gc(), um(), null;
    }
    function Cl() {
      if (Oc !== null) {
        var t = Eu(Nv), o = gC(Ti, t), l = br.transition, c = fa();
        try {
          return br.transition = null, Eo(o), k2();
        } finally {
          Eo(c), br.transition = l;
        }
      }
      return !1;
    }
    function w2(t) {
      WS.push(t), Yu || (Yu = !0, nT(Ha, function() {
        return Cl(), null;
      }));
    }
    function k2() {
      if (Oc === null)
        return !1;
      var t = GS;
      GS = null;
      var o = Oc, l = Nv;
      if (Oc = null, Nv = Ae, (pn & (Cr | ei)) !== Xo)
        throw new Error("Cannot flush passive effects while already rendering.");
      YS = !0, vb = !1, wg(l);
      var c = pn;
      pn |= ei, qA(o.current), VA(o, o.current, l, t);
      {
        var p = WS;
        WS = [];
        for (var g = 0; g < p.length; g++) {
          var T = p[g];
          NA(o, T);
        }
      }
      mu(), ew(o.current, !0), pn = c, gc(), vb ? o === hb ? Zp++ : (Zp = 0, hb = o) : Zp = 0, YS = !1, vb = !1, rs(o);
      {
        var N = o.current.stateNode;
        N.effectDuration = 0, N.passiveEffectDuration = 0;
      }
      return !0;
    }
    function QO(t) {
      return Qp !== null && Qp.has(t);
    }
    function N2(t) {
      Qp === null ? Qp = /* @__PURE__ */ new Set([t]) : Qp.add(t);
    }
    function $2(t) {
      mb || (mb = !0, HS = t);
    }
    var M2 = $2;
    function ZO(t, o, l) {
      var c = Wu(l, o), p = KR(t, c, Vt), g = bc(t, p, Vt), T = Qr();
      g !== null && (el(g, Vt, T), xa(g, T));
    }
    function Un(t, o, l) {
      if (SA(l), Lv(!1), t.tag === k) {
        ZO(t, t, l);
        return;
      }
      var c = null;
      for (c = o; c !== null; ) {
        if (c.tag === k) {
          ZO(c, t, l);
          return;
        } else if (c.tag === S) {
          var p = c.type, g = c.stateNode;
          if (typeof p.getDerivedStateFromError == "function" || typeof g.componentDidCatch == "function" && !QO(g)) {
            var T = Wu(l, t), N = bS(c, T, Vt), I = bc(c, N, Vt), H = Qr();
            I !== null && (el(I, Vt, H), xa(I, H));
            return;
          }
        }
        c = c.return;
      }
      m(`Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.

Error message:

%s`, l);
    }
    function D2(t, o, l) {
      var c = t.pingCache;
      c !== null && c.delete(o);
      var p = Qr();
      Cm(t, l), j2(t), Xr === t && Js(Qo, l) && (Zo === Ev || Zo === db && ip(Qo) && Qn() - VS < BO ? Ku(t, Ae) : fb = Jt(fb, l)), xa(t, p);
    }
    function JO(t, o) {
      o === dn && (o = p2(t));
      var l = Qr(), c = ya(t, o);
      c !== null && (el(c, o, l), xa(c, l));
    }
    function P2(t) {
      var o = t.memoizedState, l = dn;
      o !== null && (l = o.retryLane), JO(t, l);
    }
    function L2(t, o) {
      var l = dn, c;
      switch (t.tag) {
        case U:
          c = t.stateNode;
          var p = t.memoizedState;
          p !== null && (l = p.retryLane);
          break;
        case q:
          c = t.stateNode;
          break;
        default:
          throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
      }
      c !== null && c.delete(o), JO(t, l);
    }
    function I2(t) {
      return t < 120 ? 120 : t < 480 ? 480 : t < 1080 ? 1080 : t < 1920 ? 1920 : t < 3e3 ? 3e3 : t < 4320 ? 4320 : l2(t / 1960) * 1960;
    }
    function _2() {
      if ($v > u2)
        throw $v = 0, qS = null, new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
      Zp > d2 && (Zp = 0, hb = null, m("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render."));
    }
    function A2() {
      $i.flushLegacyContextWarning(), $i.flushPendingUnsafeLifecycleWarnings();
    }
    function ew(t, o) {
      On(t), xb(t, kr, n2), o && xb(t, Vs, o2), xb(t, kr, e2), o && xb(t, Vs, t2), xo();
    }
    function xb(t, o, l) {
      for (var c = t, p = null; c !== null; ) {
        var g = c.subtreeFlags & o;
        c !== p && c.child !== null && g !== _t ? c = c.child : ((c.flags & o) !== _t && l(c), c.sibling !== null ? c = c.sibling : c = p = c.return);
      }
    }
    var Sb = null;
    function tw(t) {
      {
        if ((pn & Cr) !== Xo || !(t.mode & rn))
          return;
        var o = t.tag;
        if (o !== E && o !== k && o !== S && o !== b && o !== A && o !== $ && o !== F)
          return;
        var l = Xt(t) || "ReactComponent";
        if (Sb !== null) {
          if (Sb.has(l))
            return;
          Sb.add(l);
        } else
          Sb = /* @__PURE__ */ new Set([l]);
        var c = vo;
        try {
          On(t), m("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
        } finally {
          c ? On(t) : xo();
        }
      }
    }
    var JS;
    {
      var B2 = null;
      JS = function(t, o, l) {
        var c = cw(B2, o);
        try {
          return mO(t, o, l);
        } catch (g) {
          if (QI() || g !== null && typeof g == "object" && typeof g.then == "function")
            throw g;
          if (wy(), SR(), CO(t, o), cw(o, c), o.mode & jt && fS(o), Us(null, mO, null, t, o, l), uC()) {
            var p = Jf();
            typeof p == "object" && p !== null && p._suppressLogging && typeof g == "object" && g !== null && !g._suppressLogging && (g._suppressLogging = !0);
          }
          throw g;
        }
      };
    }
    var nw = !1, eT;
    eT = /* @__PURE__ */ new Set();
    function z2(t) {
      if (oa && !D_())
        switch (t.tag) {
          case b:
          case A:
          case F: {
            var o = uo && Xt(uo) || "Unknown", l = o;
            if (!eT.has(l)) {
              eT.add(l);
              var c = Xt(t) || "Unknown";
              m("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", c, o, o);
            }
            break;
          }
          case S: {
            nw || (m("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state."), nw = !0);
            break;
          }
        }
    }
    function Pv(t, o) {
      if (Ho) {
        var l = t.memoizedUpdaters;
        l.forEach(function(c) {
          Sm(t, c, o);
        });
      }
    }
    var tT = {};
    function nT(t, o) {
      {
        var l = Bi.current;
        return l !== null ? (l.push(o), tT) : Ld(t, o);
      }
    }
    function ow(t) {
      if (t !== tT)
        return yg(t);
    }
    function rw() {
      return Bi.current !== null;
    }
    function F2(t) {
      {
        if (t.mode & rn) {
          if (!IO())
            return;
        } else if (!s2() || pn !== Xo || t.tag !== b && t.tag !== A && t.tag !== F)
          return;
        if (Bi.current === null) {
          var o = vo;
          try {
            On(t), m(`An update to %s inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act`, Xt(t));
          } finally {
            o ? On(t) : xo();
          }
        }
      }
    }
    function j2(t) {
      t.tag !== hc && IO() && Bi.current === null && m(`A suspended resource finished loading inside a test, but the event was not wrapped in act(...).

When testing, code that resolves suspended data should be wrapped into act(...):

act(() => {
  /* finish loading suspended data */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act`);
    }
    function Lv(t) {
      jO = t;
    }
    var ti = null, Jp = null, U2 = function(t) {
      ti = t;
    };
    function ef(t) {
      {
        if (ti === null)
          return t;
        var o = ti(t);
        return o === void 0 ? t : o.current;
      }
    }
    function oT(t) {
      return ef(t);
    }
    function rT(t) {
      {
        if (ti === null)
          return t;
        var o = ti(t);
        if (o === void 0) {
          if (t != null && typeof t.render == "function") {
            var l = ef(t.render);
            if (t.render !== l) {
              var c = {
                $$typeof: mo,
                render: l
              };
              return t.displayName !== void 0 && (c.displayName = t.displayName), c;
            }
          }
          return t;
        }
        return o.current;
      }
    }
    function aw(t, o) {
      {
        if (ti === null)
          return !1;
        var l = t.elementType, c = o.type, p = !1, g = typeof c == "object" && c !== null ? c.$$typeof : null;
        switch (t.tag) {
          case S: {
            typeof c == "function" && (p = !0);
            break;
          }
          case b: {
            (typeof c == "function" || g === ft) && (p = !0);
            break;
          }
          case A: {
            (g === mo || g === ft) && (p = !0);
            break;
          }
          case $:
          case F: {
            (g === Ge || g === ft) && (p = !0);
            break;
          }
          default:
            return !1;
        }
        if (p) {
          var T = ti(l);
          if (T !== void 0 && T === ti(c))
            return !0;
        }
        return !1;
      }
    }
    function iw(t) {
      {
        if (ti === null || typeof WeakSet != "function")
          return;
        Jp === null && (Jp = /* @__PURE__ */ new WeakSet()), Jp.add(t);
      }
    }
    var V2 = function(t, o) {
      {
        if (ti === null)
          return;
        var l = o.staleFamilies, c = o.updatedFamilies;
        Cl(), bl(function() {
          aT(t.current, c, l);
        });
      }
    }, H2 = function(t, o) {
      {
        if (t.context !== La)
          return;
        Cl(), bl(function() {
          Iv(o, t, null, null);
        });
      }
    };
    function aT(t, o, l) {
      {
        var c = t.alternate, p = t.child, g = t.sibling, T = t.tag, N = t.type, I = null;
        switch (T) {
          case b:
          case F:
          case S:
            I = N;
            break;
          case A:
            I = N.render;
            break;
        }
        if (ti === null)
          throw new Error("Expected resolveFamily to be set during hot reload.");
        var H = !1, W = !1;
        if (I !== null) {
          var se = ti(I);
          se !== void 0 && (l.has(se) ? W = !0 : o.has(se) && (T === S ? W = !0 : H = !0));
        }
        if (Jp !== null && (Jp.has(t) || c !== null && Jp.has(c)) && (W = !0), W && (t._debugNeedsRemount = !0), W || H) {
          var ae = ya(t, Vt);
          ae !== null && Jo(ae, t, Vt, In);
        }
        p !== null && !W && aT(p, o, l), g !== null && aT(g, o, l);
      }
    }
    var W2 = function(t, o) {
      {
        var l = /* @__PURE__ */ new Set(), c = new Set(o.map(function(p) {
          return p.current;
        }));
        return iT(t.current, c, l), l;
      }
    };
    function iT(t, o, l) {
      {
        var c = t.child, p = t.sibling, g = t.tag, T = t.type, N = null;
        switch (g) {
          case b:
          case F:
          case S:
            N = T;
            break;
          case A:
            N = T.render;
            break;
        }
        var I = !1;
        N !== null && o.has(N) && (I = !0), I ? G2(t, l) : c !== null && iT(c, o, l), p !== null && iT(p, o, l);
      }
    }
    function G2(t, o) {
      {
        var l = q2(t, o);
        if (l)
          return;
        for (var c = t; ; ) {
          switch (c.tag) {
            case M:
              o.add(c.stateNode);
              return;
            case D:
              o.add(c.stateNode.containerInfo);
              return;
            case k:
              o.add(c.stateNode.containerInfo);
              return;
          }
          if (c.return === null)
            throw new Error("Expected to reach root first.");
          c = c.return;
        }
      }
    }
    function q2(t, o) {
      for (var l = t, c = !1; ; ) {
        if (l.tag === M)
          c = !0, o.add(l.stateNode);
        else if (l.child !== null) {
          l.child.return = l, l = l.child;
          continue;
        }
        if (l === t)
          return c;
        for (; l.sibling === null; ) {
          if (l.return === null || l.return === t)
            return c;
          l = l.return;
        }
        l.sibling.return = l.return, l = l.sibling;
      }
      return !1;
    }
    var sT;
    {
      sT = !1;
      try {
        var sw = Object.preventExtensions({});
      } catch {
        sT = !0;
      }
    }
    function Y2(t, o, l, c) {
      this.tag = t, this.key = l, this.elementType = null, this.type = null, this.stateNode = null, this.return = null, this.child = null, this.sibling = null, this.index = 0, this.ref = null, this.pendingProps = o, this.memoizedProps = null, this.updateQueue = null, this.memoizedState = null, this.dependencies = null, this.mode = c, this.flags = _t, this.subtreeFlags = _t, this.deletions = null, this.lanes = Ae, this.childLanes = Ae, this.alternate = null, this.actualDuration = Number.NaN, this.actualStartTime = Number.NaN, this.selfBaseDuration = Number.NaN, this.treeBaseDuration = Number.NaN, this.actualDuration = 0, this.actualStartTime = -1, this.selfBaseDuration = 0, this.treeBaseDuration = 0, this._debugSource = null, this._debugOwner = null, this._debugNeedsRemount = !1, this._debugHookTypes = null, !sT && typeof Object.preventExtensions == "function" && Object.preventExtensions(this);
    }
    var Ia = function(t, o, l, c) {
      return new Y2(t, o, l, c);
    };
    function lT(t) {
      var o = t.prototype;
      return !!(o && o.isReactComponent);
    }
    function K2(t) {
      return typeof t == "function" && !lT(t) && t.defaultProps === void 0;
    }
    function X2(t) {
      if (typeof t == "function")
        return lT(t) ? S : b;
      if (t != null) {
        var o = t.$$typeof;
        if (o === mo)
          return A;
        if (o === Ge)
          return $;
      }
      return E;
    }
    function Qu(t, o) {
      var l = t.alternate;
      l === null ? (l = Ia(t.tag, o, t.key, t.mode), l.elementType = t.elementType, l.type = t.type, l.stateNode = t.stateNode, l._debugSource = t._debugSource, l._debugOwner = t._debugOwner, l._debugHookTypes = t._debugHookTypes, l.alternate = t, t.alternate = l) : (l.pendingProps = o, l.type = t.type, l.flags = _t, l.subtreeFlags = _t, l.deletions = null, l.actualDuration = 0, l.actualStartTime = -1), l.flags = t.flags & Vo, l.childLanes = t.childLanes, l.lanes = t.lanes, l.child = t.child, l.memoizedProps = t.memoizedProps, l.memoizedState = t.memoizedState, l.updateQueue = t.updateQueue;
      var c = t.dependencies;
      switch (l.dependencies = c === null ? null : {
        lanes: c.lanes,
        firstContext: c.firstContext
      }, l.sibling = t.sibling, l.index = t.index, l.ref = t.ref, l.selfBaseDuration = t.selfBaseDuration, l.treeBaseDuration = t.treeBaseDuration, l._debugNeedsRemount = t._debugNeedsRemount, l.tag) {
        case E:
        case b:
        case F:
          l.type = ef(t.type);
          break;
        case S:
          l.type = oT(t.type);
          break;
        case A:
          l.type = rT(t.type);
          break;
      }
      return l;
    }
    function Q2(t, o) {
      t.flags &= Vo | Bn;
      var l = t.alternate;
      if (l === null)
        t.childLanes = Ae, t.lanes = o, t.child = null, t.subtreeFlags = _t, t.memoizedProps = null, t.memoizedState = null, t.updateQueue = null, t.dependencies = null, t.stateNode = null, t.selfBaseDuration = 0, t.treeBaseDuration = 0;
      else {
        t.childLanes = l.childLanes, t.lanes = l.lanes, t.child = l.child, t.subtreeFlags = _t, t.deletions = null, t.memoizedProps = l.memoizedProps, t.memoizedState = l.memoizedState, t.updateQueue = l.updateQueue, t.type = l.type;
        var c = l.dependencies;
        t.dependencies = c === null ? null : {
          lanes: c.lanes,
          firstContext: c.firstContext
        }, t.selfBaseDuration = l.selfBaseDuration, t.treeBaseDuration = l.treeBaseDuration;
      }
      return t;
    }
    function Z2(t, o, l) {
      var c;
      return t === by ? (c = rn, o === !0 && (c |= Zn, c |= da)) : c = Ft, Ho && (c |= jt), Ia(k, null, null, c);
    }
    function cT(t, o, l, c, p, g) {
      var T = E, N = t;
      if (typeof t == "function")
        lT(t) ? (T = S, N = oT(N)) : N = ef(N);
      else if (typeof t == "string")
        T = M;
      else
        e:
          switch (t) {
            case Uo:
              return Nc(l.children, p, g, o);
            case $o:
              T = w, p |= Zn, (p & rn) !== Ft && (p |= da);
              break;
            case Mo:
              return J2(l, p, g, o);
            case Ne:
              return eB(l, p, g, o);
            case ue:
              return tB(l, p, g, o);
            case sn:
              return lw(l, p, g, o);
            case tr:
            case en:
            case Ml:
            case V0:
            case pt:
            default: {
              if (typeof t == "object" && t !== null)
                switch (t.$$typeof) {
                  case Er:
                    T = V;
                    break e;
                  case Do:
                    T = _;
                    break e;
                  case mo:
                    T = A, N = rT(N);
                    break e;
                  case Ge:
                    T = $;
                    break e;
                  case ft:
                    T = G, N = null;
                    break e;
                }
              var I = "";
              {
                (t === void 0 || typeof t == "object" && t !== null && Object.keys(t).length === 0) && (I += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
                var H = c ? Xt(c) : null;
                H && (I += `

Check the render method of \`` + H + "`.");
              }
              throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (t == null ? t : typeof t) + "." + I));
            }
          }
      var W = Ia(T, l, o, p);
      return W.elementType = t, W.type = N, W.lanes = g, W._debugOwner = c, W;
    }
    function uT(t, o, l) {
      var c = null;
      c = t._owner;
      var p = t.type, g = t.key, T = t.props, N = cT(p, g, T, c, o, l);
      return N._debugSource = t._source, N._debugOwner = t._owner, N;
    }
    function Nc(t, o, l, c) {
      var p = Ia(L, t, c, o);
      return p.lanes = l, p;
    }
    function J2(t, o, l, c) {
      typeof t.id != "string" && m('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof t.id);
      var p = Ia(j, t, c, o | jt);
      return p.elementType = Mo, p.lanes = l, p.stateNode = {
        effectDuration: 0,
        passiveEffectDuration: 0
      }, p;
    }
    function eB(t, o, l, c) {
      var p = Ia(U, t, c, o);
      return p.elementType = Ne, p.lanes = l, p;
    }
    function tB(t, o, l, c) {
      var p = Ia(q, t, c, o);
      return p.elementType = ue, p.lanes = l, p;
    }
    function lw(t, o, l, c) {
      var p = Ia(ee, t, c, o);
      p.elementType = sn, p.lanes = l;
      var g = {
        isHidden: !1
      };
      return p.stateNode = g, p;
    }
    function dT(t, o, l) {
      var c = Ia(P, t, null, o);
      return c.lanes = l, c;
    }
    function nB() {
      var t = Ia(M, null, null, Ft);
      return t.elementType = "DELETED", t;
    }
    function oB(t) {
      var o = Ia(Q, null, null, Ft);
      return o.stateNode = t, o;
    }
    function pT(t, o, l) {
      var c = t.children !== null ? t.children : [], p = Ia(D, c, t.key, o);
      return p.lanes = l, p.stateNode = {
        containerInfo: t.containerInfo,
        pendingChildren: null,
        // Used by persistent updates
        implementation: t.implementation
      }, p;
    }
    function cw(t, o) {
      return t === null && (t = Ia(E, null, null, Ft)), t.tag = o.tag, t.key = o.key, t.elementType = o.elementType, t.type = o.type, t.stateNode = o.stateNode, t.return = o.return, t.child = o.child, t.sibling = o.sibling, t.index = o.index, t.ref = o.ref, t.pendingProps = o.pendingProps, t.memoizedProps = o.memoizedProps, t.updateQueue = o.updateQueue, t.memoizedState = o.memoizedState, t.dependencies = o.dependencies, t.mode = o.mode, t.flags = o.flags, t.subtreeFlags = o.subtreeFlags, t.deletions = o.deletions, t.lanes = o.lanes, t.childLanes = o.childLanes, t.alternate = o.alternate, t.actualDuration = o.actualDuration, t.actualStartTime = o.actualStartTime, t.selfBaseDuration = o.selfBaseDuration, t.treeBaseDuration = o.treeBaseDuration, t._debugSource = o._debugSource, t._debugOwner = o._debugOwner, t._debugNeedsRemount = o._debugNeedsRemount, t._debugHookTypes = o._debugHookTypes, t;
    }
    function rB(t, o, l, c, p) {
      this.tag = o, this.containerInfo = t, this.pendingChildren = null, this.current = null, this.pingCache = null, this.finishedWork = null, this.timeoutHandle = qC, this.context = null, this.pendingContext = null, this.callbackNode = null, this.callbackPriority = dn, this.eventTimes = lp(Ae), this.expirationTimes = lp(In), this.pendingLanes = Ae, this.suspendedLanes = Ae, this.pingedLanes = Ae, this.expiredLanes = Ae, this.mutableReadLanes = Ae, this.finishedLanes = Ae, this.entangledLanes = Ae, this.entanglements = lp(Ae), this.identifierPrefix = c, this.onRecoverableError = p, this.mutableSourceEagerHydrationData = null, this.effectDuration = 0, this.passiveEffectDuration = 0;
      {
        this.memoizedUpdaters = /* @__PURE__ */ new Set();
        for (var g = this.pendingUpdatersLaneMap = [], T = 0; T < Fn; T++)
          g.push(/* @__PURE__ */ new Set());
      }
      switch (o) {
        case by:
          this._debugRootType = l ? "hydrateRoot()" : "createRoot()";
          break;
        case hc:
          this._debugRootType = l ? "hydrate()" : "render()";
          break;
      }
    }
    function uw(t, o, l, c, p, g, T, N, I, H) {
      var W = new rB(t, o, l, N, I), se = Z2(o, g);
      W.current = se, se.stateNode = W;
      {
        var ae = {
          element: c,
          isDehydrated: l,
          cache: null,
          // not enabled yet
          transitions: null,
          pendingSuspenseBoundaries: null
        };
        se.memoizedState = ae;
      }
      return Cx(se), W;
    }
    var fT = "18.2.0";
    function aB(t, o, l) {
      var c = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
      return zt(c), {
        // This tag allow us to uniquely identify this as a React Portal
        $$typeof: Xn,
        key: c == null ? null : "" + c,
        children: t,
        containerInfo: o,
        implementation: l
      };
    }
    var mT, vT;
    mT = !1, vT = {};
    function dw(t) {
      if (!t)
        return La;
      var o = ia(t), l = UI(o);
      if (o.tag === S) {
        var c = o.type;
        if (gs(c))
          return AE(o, c, l);
      }
      return l;
    }
    function iB(t, o) {
      {
        var l = ia(t);
        if (l === void 0) {
          if (typeof t.render == "function")
            throw new Error("Unable to find node on an unmounted component.");
          var c = Object.keys(t).join(",");
          throw new Error("Argument appears to not be a ReactComponent. Keys: " + c);
        }
        var p = ua(l);
        if (p === null)
          return null;
        if (p.mode & Zn) {
          var g = Xt(l) || "Component";
          if (!vT[g]) {
            vT[g] = !0;
            var T = vo;
            try {
              On(p), l.mode & Zn ? m("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", o, o, g) : m("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", o, o, g);
            } finally {
              T ? On(T) : xo();
            }
          }
        }
        return p.stateNode;
      }
    }
    function pw(t, o, l, c, p, g, T, N) {
      var I = !1, H = null;
      return uw(t, o, I, H, l, c, p, g, T);
    }
    function fw(t, o, l, c, p, g, T, N, I, H) {
      var W = !0, se = uw(l, c, W, t, p, g, T, N, I);
      se.context = dw(null);
      var ae = se.current, Te = Qr(), Ee = wc(ae), Pe = vl(Te, Ee);
      return Pe.callback = o ?? null, bc(ae, Pe, Ee), f2(se, Ee, Te), se;
    }
    function Iv(t, o, l, c) {
      Cg(o, t);
      var p = o.current, g = Qr(), T = wc(p);
      Ws(T);
      var N = dw(l);
      o.context === null ? o.context = N : o.pendingContext = N, oa && vo !== null && !mT && (mT = !0, m(`Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.

Check the render method of %s.`, Xt(vo) || "Unknown"));
      var I = vl(g, T);
      I.payload = {
        element: t
      }, c = c === void 0 ? null : c, c !== null && (typeof c != "function" && m("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", c), I.callback = c);
      var H = bc(p, I, T);
      return H !== null && (Jo(H, p, T, g), Dy(H, p, T)), T;
    }
    function Tb(t) {
      var o = t.current;
      if (!o.child)
        return null;
      switch (o.child.tag) {
        case M:
          return o.child.stateNode;
        default:
          return o.child.stateNode;
      }
    }
    function sB(t) {
      switch (t.tag) {
        case k: {
          var o = t.stateNode;
          if (Ro(o)) {
            var l = fC(o);
            g2(o, l);
          }
          break;
        }
        case U: {
          bl(function() {
            var p = ya(t, Vt);
            if (p !== null) {
              var g = Qr();
              Jo(p, t, Vt, g);
            }
          });
          var c = Vt;
          hT(t, c);
          break;
        }
      }
    }
    function mw(t, o) {
      var l = t.memoizedState;
      l !== null && l.dehydrated !== null && (l.retryLane = Dg(l.retryLane, o));
    }
    function hT(t, o) {
      mw(t, o);
      var l = t.alternate;
      l && mw(l, o);
    }
    function lB(t) {
      if (t.tag === U) {
        var o = Yl, l = ya(t, o);
        if (l !== null) {
          var c = Qr();
          Jo(l, t, o, c);
        }
        hT(t, o);
      }
    }
    function cB(t) {
      if (t.tag === U) {
        var o = wc(t), l = ya(t, o);
        if (l !== null) {
          var c = Qr();
          Jo(l, t, o, c);
        }
        hT(t, o);
      }
    }
    function vw(t) {
      var o = gg(t);
      return o === null ? null : o.stateNode;
    }
    var hw = function(t) {
      return null;
    };
    function uB(t) {
      return hw(t);
    }
    var gw = function(t) {
      return !1;
    };
    function dB(t) {
      return gw(t);
    }
    var yw = null, bw = null, Cw = null, xw = null, Sw = null, Tw = null, Ew = null, Rw = null, Ow = null;
    {
      var ww = function(t, o, l) {
        var c = o[l], p = Po(t) ? t.slice() : ln({}, t);
        return l + 1 === o.length ? (Po(p) ? p.splice(c, 1) : delete p[c], p) : (p[c] = ww(t[c], o, l + 1), p);
      }, kw = function(t, o) {
        return ww(t, o, 0);
      }, Nw = function(t, o, l, c) {
        var p = o[c], g = Po(t) ? t.slice() : ln({}, t);
        if (c + 1 === o.length) {
          var T = l[c];
          g[T] = g[p], Po(g) ? g.splice(p, 1) : delete g[p];
        } else
          g[p] = Nw(
            // $FlowFixMe number or string is fine here
            t[p],
            o,
            l,
            c + 1
          );
        return g;
      }, $w = function(t, o, l) {
        if (o.length !== l.length) {
          v("copyWithRename() expects paths of the same length");
          return;
        } else
          for (var c = 0; c < l.length - 1; c++)
            if (o[c] !== l[c]) {
              v("copyWithRename() expects paths to be the same except for the deepest key");
              return;
            }
        return Nw(t, o, l, 0);
      }, Mw = function(t, o, l, c) {
        if (l >= o.length)
          return c;
        var p = o[l], g = Po(t) ? t.slice() : ln({}, t);
        return g[p] = Mw(t[p], o, l + 1, c), g;
      }, Dw = function(t, o, l) {
        return Mw(t, o, 0, l);
      }, gT = function(t, o) {
        for (var l = t.memoizedState; l !== null && o > 0; )
          l = l.next, o--;
        return l;
      };
      yw = function(t, o, l, c) {
        var p = gT(t, o);
        if (p !== null) {
          var g = Dw(p.memoizedState, l, c);
          p.memoizedState = g, p.baseState = g, t.memoizedProps = ln({}, t.memoizedProps);
          var T = ya(t, Vt);
          T !== null && Jo(T, t, Vt, In);
        }
      }, bw = function(t, o, l) {
        var c = gT(t, o);
        if (c !== null) {
          var p = kw(c.memoizedState, l);
          c.memoizedState = p, c.baseState = p, t.memoizedProps = ln({}, t.memoizedProps);
          var g = ya(t, Vt);
          g !== null && Jo(g, t, Vt, In);
        }
      }, Cw = function(t, o, l, c) {
        var p = gT(t, o);
        if (p !== null) {
          var g = $w(p.memoizedState, l, c);
          p.memoizedState = g, p.baseState = g, t.memoizedProps = ln({}, t.memoizedProps);
          var T = ya(t, Vt);
          T !== null && Jo(T, t, Vt, In);
        }
      }, xw = function(t, o, l) {
        t.pendingProps = Dw(t.memoizedProps, o, l), t.alternate && (t.alternate.pendingProps = t.pendingProps);
        var c = ya(t, Vt);
        c !== null && Jo(c, t, Vt, In);
      }, Sw = function(t, o) {
        t.pendingProps = kw(t.memoizedProps, o), t.alternate && (t.alternate.pendingProps = t.pendingProps);
        var l = ya(t, Vt);
        l !== null && Jo(l, t, Vt, In);
      }, Tw = function(t, o, l) {
        t.pendingProps = $w(t.memoizedProps, o, l), t.alternate && (t.alternate.pendingProps = t.pendingProps);
        var c = ya(t, Vt);
        c !== null && Jo(c, t, Vt, In);
      }, Ew = function(t) {
        var o = ya(t, Vt);
        o !== null && Jo(o, t, Vt, In);
      }, Rw = function(t) {
        hw = t;
      }, Ow = function(t) {
        gw = t;
      };
    }
    function pB(t) {
      var o = ua(t);
      return o === null ? null : o.stateNode;
    }
    function fB(t) {
      return null;
    }
    function mB() {
      return vo;
    }
    function vB(t) {
      var o = t.findFiberByHostInstance, l = s.ReactCurrentDispatcher;
      return lm({
        bundleType: t.bundleType,
        version: t.version,
        rendererPackageName: t.rendererPackageName,
        rendererConfig: t.rendererConfig,
        overrideHookState: yw,
        overrideHookStateDeletePath: bw,
        overrideHookStateRenamePath: Cw,
        overrideProps: xw,
        overridePropsDeletePath: Sw,
        overridePropsRenamePath: Tw,
        setErrorHandler: Rw,
        setSuspenseHandler: Ow,
        scheduleUpdate: Ew,
        currentDispatcherRef: l,
        findHostInstanceByFiber: pB,
        findFiberByHostInstance: o || fB,
        // React Refresh
        findHostInstancesForRefresh: W2,
        scheduleRefresh: V2,
        scheduleRoot: H2,
        setRefreshHandler: U2,
        // Enables DevTools to append owner stacks to error messages in DEV mode.
        getCurrentFiber: mB,
        // Enables DevTools to detect reconciler version rather than renderer version
        // which may not match for third party renderers.
        reconcilerVersion: fT
      });
    }
    var Pw = typeof reportError == "function" ? (
      // In modern browsers, reportError will dispatch an error event,
      // emulating an uncaught JavaScript error.
      reportError
    ) : function(t) {
      console.error(t);
    };
    function yT(t) {
      this._internalRoot = t;
    }
    Eb.prototype.render = yT.prototype.render = function(t) {
      var o = this._internalRoot;
      if (o === null)
        throw new Error("Cannot update an unmounted root.");
      {
        typeof arguments[1] == "function" ? m("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().") : Rb(arguments[1]) ? m("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.") : typeof arguments[1] < "u" && m("You passed a second argument to root.render(...) but it only accepts one argument.");
        var l = o.containerInfo;
        if (l.nodeType !== ho) {
          var c = vw(o.current);
          c && c.parentNode !== l && m("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
        }
      }
      Iv(t, o, null, null);
    }, Eb.prototype.unmount = yT.prototype.unmount = function() {
      typeof arguments[0] == "function" && m("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
      var t = this._internalRoot;
      if (t !== null) {
        this._internalRoot = null;
        var o = t.containerInfo;
        WO() && m("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition."), bl(function() {
          Iv(null, t, null, null);
        }), DE(o);
      }
    };
    function hB(t, o) {
      if (!Rb(t))
        throw new Error("createRoot(...): Target container is not a DOM element.");
      Lw(t);
      var l = !1, c = !1, p = "", g = Pw;
      o != null && (o.hydrate ? v("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.") : typeof o == "object" && o !== null && o.$$typeof === Gn && m(`You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:

  let root = createRoot(domContainer);
  root.render(<App />);`), o.unstable_strictMode === !0 && (l = !0), o.identifierPrefix !== void 0 && (p = o.identifierPrefix), o.onRecoverableError !== void 0 && (g = o.onRecoverableError), o.transitionCallbacks !== void 0 && o.transitionCallbacks);
      var T = pw(t, by, null, l, c, p, g);
      py(T.current, t);
      var N = t.nodeType === ho ? t.parentNode : t;
      return Vm(N), new yT(T);
    }
    function Eb(t) {
      this._internalRoot = t;
    }
    function gB(t) {
      t && Fg(t);
    }
    Eb.prototype.unstable_scheduleHydration = gB;
    function yB(t, o, l) {
      if (!Rb(t))
        throw new Error("hydrateRoot(...): Target container is not a DOM element.");
      Lw(t), o === void 0 && m("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
      var c = l ?? null, p = l != null && l.hydratedSources || null, g = !1, T = !1, N = "", I = Pw;
      l != null && (l.unstable_strictMode === !0 && (g = !0), l.identifierPrefix !== void 0 && (N = l.identifierPrefix), l.onRecoverableError !== void 0 && (I = l.onRecoverableError));
      var H = fw(o, null, t, by, c, g, T, N, I);
      if (py(H.current, t), Vm(t), p)
        for (var W = 0; W < p.length; W++) {
          var se = p[W];
          O_(H, se);
        }
      return new Eb(H);
    }
    function Rb(t) {
      return !!(t && (t.nodeType === Rr || t.nodeType === Na || t.nodeType === _s || !tt));
    }
    function _v(t) {
      return !!(t && (t.nodeType === Rr || t.nodeType === Na || t.nodeType === _s || t.nodeType === ho && t.nodeValue === " react-mount-point-unstable "));
    }
    function Lw(t) {
      t.nodeType === Rr && t.tagName && t.tagName.toUpperCase() === "BODY" && m("createRoot(): Creating roots directly with document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try using a container element created for your app."), ev(t) && (t._reactRootContainer ? m("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.") : m("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it."));
    }
    var bB = s.ReactCurrentOwner, Iw;
    Iw = function(t) {
      if (t._reactRootContainer && t.nodeType !== ho) {
        var o = vw(t._reactRootContainer.current);
        o && o.parentNode !== t && m("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
      }
      var l = !!t._reactRootContainer, c = bT(t), p = !!(c && mc(c));
      p && !l && m("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render."), t.nodeType === Rr && t.tagName && t.tagName.toUpperCase() === "BODY" && m("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
    };
    function bT(t) {
      return t ? t.nodeType === Na ? t.documentElement : t.firstChild : null;
    }
    function _w() {
    }
    function CB(t, o, l, c, p) {
      if (p) {
        if (typeof c == "function") {
          var g = c;
          c = function() {
            var ae = Tb(T);
            g.call(ae);
          };
        }
        var T = fw(
          o,
          c,
          t,
          hc,
          null,
          // hydrationCallbacks
          !1,
          // isStrictMode
          !1,
          // concurrentUpdatesByDefaultOverride,
          "",
          // identifierPrefix
          _w
        );
        t._reactRootContainer = T, py(T.current, t);
        var N = t.nodeType === ho ? t.parentNode : t;
        return Vm(N), bl(), T;
      } else {
        for (var I; I = t.lastChild; )
          t.removeChild(I);
        if (typeof c == "function") {
          var H = c;
          c = function() {
            var ae = Tb(W);
            H.call(ae);
          };
        }
        var W = pw(
          t,
          hc,
          null,
          // hydrationCallbacks
          !1,
          // isStrictMode
          !1,
          // concurrentUpdatesByDefaultOverride,
          "",
          // identifierPrefix
          _w
        );
        t._reactRootContainer = W, py(W.current, t);
        var se = t.nodeType === ho ? t.parentNode : t;
        return Vm(se), bl(function() {
          Iv(o, W, l, c);
        }), W;
      }
    }
    function xB(t, o) {
      t !== null && typeof t != "function" && m("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", o, t);
    }
    function Ob(t, o, l, c, p) {
      Iw(l), xB(p === void 0 ? null : p, "render");
      var g = l._reactRootContainer, T;
      if (!g)
        T = CB(l, o, t, p, c);
      else {
        if (T = g, typeof p == "function") {
          var N = p;
          p = function() {
            var I = Tb(T);
            N.call(I);
          };
        }
        Iv(o, T, t, p);
      }
      return Tb(T);
    }
    function SB(t) {
      {
        var o = bB.current;
        if (o !== null && o.stateNode !== null) {
          var l = o.stateNode._warnedAboutRefsInRender;
          l || m("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", Pn(o.type) || "A component"), o.stateNode._warnedAboutRefsInRender = !0;
        }
      }
      return t == null ? null : t.nodeType === Rr ? t : iB(t, "findDOMNode");
    }
    function TB(t, o, l) {
      if (m("ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !_v(o))
        throw new Error("Target container is not a DOM element.");
      {
        var c = ev(o) && o._reactRootContainer === void 0;
        c && m("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call hydrateRoot(container, element)?");
      }
      return Ob(null, t, o, !0, l);
    }
    function EB(t, o, l) {
      if (m("ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !_v(o))
        throw new Error("Target container is not a DOM element.");
      {
        var c = ev(o) && o._reactRootContainer === void 0;
        c && m("You are calling ReactDOM.render() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.render(element)?");
      }
      return Ob(null, t, o, !1, l);
    }
    function RB(t, o, l, c) {
      if (m("ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported in React 18. Consider using a portal instead. Until you switch to the createRoot API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !_v(l))
        throw new Error("Target container is not a DOM element.");
      if (t == null || !du(t))
        throw new Error("parentComponent must be a valid React Component");
      return Ob(t, o, l, !1, c);
    }
    function OB(t) {
      if (!_v(t))
        throw new Error("unmountComponentAtNode(...): Target container is not a DOM element.");
      {
        var o = ev(t) && t._reactRootContainer === void 0;
        o && m("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?");
      }
      if (t._reactRootContainer) {
        {
          var l = bT(t), c = l && !mc(l);
          c && m("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
        }
        return bl(function() {
          Ob(null, null, t, !1, function() {
            t._reactRootContainer = null, DE(t);
          });
        }), !0;
      } else {
        {
          var p = bT(t), g = !!(p && mc(p)), T = t.nodeType === Rr && _v(t.parentNode) && !!t.parentNode._reactRootContainer;
          g && m("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", T ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
        }
        return !1;
      }
    }
    Et(sB), Lg(lB), Ou(cB), Rm(fa), _g(Tu), (typeof Map != "function" || // $FlowIssue Flow incorrectly thinks Map has no prototype
    Map.prototype == null || typeof Map.prototype.forEach != "function" || typeof Set != "function" || // $FlowIssue Flow incorrectly thinks Set has no prototype
    Set.prototype == null || typeof Set.prototype.clear != "function" || typeof Set.prototype.forEach != "function") && m("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"), mg(NL), Nd(XS, y2, bl);
    function wB(t, o) {
      var l = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
      if (!Rb(o))
        throw new Error("Target container is not a DOM element.");
      return aB(t, o, null, l);
    }
    function kB(t, o, l, c) {
      return RB(t, o, l, c);
    }
    var CT = {
      usingClientEntryPoint: !1,
      // Keep in sync with ReactTestUtils.js.
      // This is an array for better minification.
      Events: [mc, Mp, fy, kd, lu, XS]
    };
    function NB(t, o) {
      return CT.usingClientEntryPoint || m('You are importing createRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".'), hB(t, o);
    }
    function $B(t, o, l) {
      return CT.usingClientEntryPoint || m('You are importing hydrateRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".'), yB(t, o, l);
    }
    function MB(t) {
      return WO() && m("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task."), bl(t);
    }
    var DB = vB({
      findFiberByHostInstance: _u,
      bundleType: 1,
      version: fT,
      rendererPackageName: "react-dom"
    });
    if (!DB && nt && window.top === window.self && (navigator.userAgent.indexOf("Chrome") > -1 && navigator.userAgent.indexOf("Edge") === -1 || navigator.userAgent.indexOf("Firefox") > -1)) {
      var Aw = window.location.protocol;
      /^(https?|file):$/.test(Aw) && console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (Aw === "file:" ? `
You might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq` : ""), "font-weight:bold");
    }
    Ta.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = CT, Ta.createPortal = wB, Ta.createRoot = NB, Ta.findDOMNode = SB, Ta.flushSync = MB, Ta.hydrate = TB, Ta.hydrateRoot = $B, Ta.render = EB, Ta.unmountComponentAtNode = OB, Ta.unstable_batchedUpdates = XS, Ta.unstable_renderSubtreeIntoContainer = kB, Ta.version = fT, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), Ta;
}
function T$() {
  if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function")) {
    if (process.env.NODE_ENV !== "production")
      throw new Error("^_^");
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(T$);
    } catch (e) {
      console.error(e);
    }
  }
}
process.env.NODE_ENV === "production" ? (T$(), JT.exports = TU()) : JT.exports = EU();
var u0 = JT.exports;
const Db = /* @__PURE__ */ iz(u0), uk = {
  disabled: !1
};
var RU = process.env.NODE_ENV !== "production" ? n.oneOfType([n.number, n.shape({
  enter: n.number,
  exit: n.number,
  appear: n.number
}).isRequired]) : null;
process.env.NODE_ENV !== "production" && n.oneOfType([n.string, n.shape({
  enter: n.string,
  exit: n.string,
  active: n.string
}), n.shape({
  enter: n.string,
  enterDone: n.string,
  enterActive: n.string,
  exit: n.string,
  exitDone: n.string,
  exitActive: n.string
})]);
const d0 = ai.createContext(null);
var OU = function(r) {
  return r.scrollTop;
}, Xv = "unmounted", ed = "exited", td = "entering", rf = "entered", e1 = "exiting", Nl = /* @__PURE__ */ function(e) {
  x$(r, e);
  function r(u, f) {
    var v;
    v = e.call(this, u, f) || this;
    var m = f, y = m && !m.isMounting ? u.enter : u.appear, b;
    return v.appearStatus = null, u.in ? y ? (b = ed, v.appearStatus = td) : b = rf : u.unmountOnExit || u.mountOnEnter ? b = Xv : b = ed, v.state = {
      status: b
    }, v.nextCallback = null, v;
  }
  r.getDerivedStateFromProps = function(f, v) {
    var m = f.in;
    return m && v.status === Xv ? {
      status: ed
    } : null;
  };
  var s = r.prototype;
  return s.componentDidMount = function() {
    this.updateStatus(!0, this.appearStatus);
  }, s.componentDidUpdate = function(f) {
    var v = null;
    if (f !== this.props) {
      var m = this.state.status;
      this.props.in ? m !== td && m !== rf && (v = td) : (m === td || m === rf) && (v = e1);
    }
    this.updateStatus(!1, v);
  }, s.componentWillUnmount = function() {
    this.cancelNextCallback();
  }, s.getTimeouts = function() {
    var f = this.props.timeout, v, m, y;
    return v = m = y = f, f != null && typeof f != "number" && (v = f.exit, m = f.enter, y = f.appear !== void 0 ? f.appear : m), {
      exit: v,
      enter: m,
      appear: y
    };
  }, s.updateStatus = function(f, v) {
    if (f === void 0 && (f = !1), v !== null)
      if (this.cancelNextCallback(), v === td) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var m = this.props.nodeRef ? this.props.nodeRef.current : Db.findDOMNode(this);
          m && OU(m);
        }
        this.performEnter(f);
      } else
        this.performExit();
    else
      this.props.unmountOnExit && this.state.status === ed && this.setState({
        status: Xv
      });
  }, s.performEnter = function(f) {
    var v = this, m = this.props.enter, y = this.context ? this.context.isMounting : f, b = this.props.nodeRef ? [y] : [Db.findDOMNode(this), y], S = b[0], E = b[1], k = this.getTimeouts(), D = y ? k.appear : k.enter;
    if (!f && !m || uk.disabled) {
      this.safeSetState({
        status: rf
      }, function() {
        v.props.onEntered(S);
      });
      return;
    }
    this.props.onEnter(S, E), this.safeSetState({
      status: td
    }, function() {
      v.props.onEntering(S, E), v.onTransitionEnd(D, function() {
        v.safeSetState({
          status: rf
        }, function() {
          v.props.onEntered(S, E);
        });
      });
    });
  }, s.performExit = function() {
    var f = this, v = this.props.exit, m = this.getTimeouts(), y = this.props.nodeRef ? void 0 : Db.findDOMNode(this);
    if (!v || uk.disabled) {
      this.safeSetState({
        status: ed
      }, function() {
        f.props.onExited(y);
      });
      return;
    }
    this.props.onExit(y), this.safeSetState({
      status: e1
    }, function() {
      f.props.onExiting(y), f.onTransitionEnd(m.exit, function() {
        f.safeSetState({
          status: ed
        }, function() {
          f.props.onExited(y);
        });
      });
    });
  }, s.cancelNextCallback = function() {
    this.nextCallback !== null && (this.nextCallback.cancel(), this.nextCallback = null);
  }, s.safeSetState = function(f, v) {
    v = this.setNextCallback(v), this.setState(f, v);
  }, s.setNextCallback = function(f) {
    var v = this, m = !0;
    return this.nextCallback = function(y) {
      m && (m = !1, v.nextCallback = null, f(y));
    }, this.nextCallback.cancel = function() {
      m = !1;
    }, this.nextCallback;
  }, s.onTransitionEnd = function(f, v) {
    this.setNextCallback(v);
    var m = this.props.nodeRef ? this.props.nodeRef.current : Db.findDOMNode(this), y = f == null && !this.props.addEndListener;
    if (!m || y) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var b = this.props.nodeRef ? [this.nextCallback] : [m, this.nextCallback], S = b[0], E = b[1];
      this.props.addEndListener(S, E);
    }
    f != null && setTimeout(this.nextCallback, f);
  }, s.render = function() {
    var f = this.state.status;
    if (f === Xv)
      return null;
    var v = this.props, m = v.children;
    v.in, v.mountOnEnter, v.unmountOnExit, v.appear, v.enter, v.exit, v.timeout, v.addEndListener, v.onEnter, v.onEntering, v.onEntered, v.onExit, v.onExiting, v.onExited, v.nodeRef;
    var y = me(v, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      /* @__PURE__ */ ai.createElement(d0.Provider, {
        value: null
      }, typeof m == "function" ? m(f, y) : ai.cloneElement(ai.Children.only(m), y))
    );
  }, r;
}(ai.Component);
Nl.contextType = d0;
Nl.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: n.shape({
    current: typeof Element > "u" ? n.any : function(e, r, s, u, f, v) {
      var m = e[r];
      return n.instanceOf(m && "ownerDocument" in m ? m.ownerDocument.defaultView.Element : Element)(e, r, s, u, f, v);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: n.oneOfType([n.func.isRequired, n.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: n.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: n.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: n.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: n.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: n.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: n.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function(r) {
    var s = RU;
    r.addEndListener || (s = s.isRequired);
    for (var u = arguments.length, f = new Array(u > 1 ? u - 1 : 0), v = 1; v < u; v++)
      f[v - 1] = arguments[v];
    return s.apply(void 0, [r].concat(f));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: n.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: n.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: n.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: n.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: n.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: n.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: n.func
} : {};
function of() {
}
Nl.defaultProps = {
  in: !1,
  mountOnEnter: !1,
  unmountOnExit: !1,
  appear: !1,
  enter: !0,
  exit: !0,
  onEnter: of,
  onEntering: of,
  onEntered: of,
  onExit: of,
  onExiting: of,
  onExited: of
};
Nl.UNMOUNTED = Xv;
Nl.EXITED = ed;
Nl.ENTERING = td;
Nl.ENTERED = rf;
Nl.EXITING = e1;
const Th = Nl;
function wU(e) {
  if (e === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function T1(e, r) {
  var s = function(v) {
    return r && Xb(v) ? r(v) : v;
  }, u = /* @__PURE__ */ Object.create(null);
  return e && lz.map(e, function(f) {
    return f;
  }).forEach(function(f) {
    u[f.key] = s(f);
  }), u;
}
function kU(e, r) {
  e = e || {}, r = r || {};
  function s(E) {
    return E in r ? r[E] : e[E];
  }
  var u = /* @__PURE__ */ Object.create(null), f = [];
  for (var v in e)
    v in r ? f.length && (u[v] = f, f = []) : f.push(v);
  var m, y = {};
  for (var b in r) {
    if (u[b])
      for (m = 0; m < u[b].length; m++) {
        var S = u[b][m];
        y[u[b][m]] = s(S);
      }
    y[b] = s(b);
  }
  for (m = 0; m < f.length; m++)
    y[f[m]] = s(f[m]);
  return y;
}
function od(e, r, s) {
  return s[r] != null ? s[r] : e.props[r];
}
function NU(e, r) {
  return T1(e.children, function(s) {
    return Qb(s, {
      onExited: r.bind(null, s),
      in: !0,
      appear: od(s, "appear", e),
      enter: od(s, "enter", e),
      exit: od(s, "exit", e)
    });
  });
}
function $U(e, r, s) {
  var u = T1(e.children), f = kU(r, u);
  return Object.keys(f).forEach(function(v) {
    var m = f[v];
    if (Xb(m)) {
      var y = v in r, b = v in u, S = r[v], E = Xb(S) && !S.props.in;
      b && (!y || E) ? f[v] = Qb(m, {
        onExited: s.bind(null, m),
        in: !0,
        exit: od(m, "exit", e),
        enter: od(m, "enter", e)
      }) : !b && y && !E ? f[v] = Qb(m, {
        in: !1
      }) : b && y && Xb(S) && (f[v] = Qb(m, {
        onExited: s.bind(null, m),
        in: S.props.in,
        exit: od(m, "exit", e),
        enter: od(m, "enter", e)
      }));
    }
  }), f;
}
var MU = Object.values || function(e) {
  return Object.keys(e).map(function(r) {
    return e[r];
  });
}, DU = {
  component: "div",
  childFactory: function(r) {
    return r;
  }
}, E1 = /* @__PURE__ */ function(e) {
  x$(r, e);
  function r(u, f) {
    var v;
    v = e.call(this, u, f) || this;
    var m = v.handleExited.bind(wU(v));
    return v.state = {
      contextValue: {
        isMounting: !0
      },
      handleExited: m,
      firstRender: !0
    }, v;
  }
  var s = r.prototype;
  return s.componentDidMount = function() {
    this.mounted = !0, this.setState({
      contextValue: {
        isMounting: !1
      }
    });
  }, s.componentWillUnmount = function() {
    this.mounted = !1;
  }, r.getDerivedStateFromProps = function(f, v) {
    var m = v.children, y = v.handleExited, b = v.firstRender;
    return {
      children: b ? NU(f, y) : $U(f, m, y),
      firstRender: !1
    };
  }, s.handleExited = function(f, v) {
    var m = T1(this.props.children);
    f.key in m || (f.props.onExited && f.props.onExited(v), this.mounted && this.setState(function(y) {
      var b = C({}, y.children);
      return delete b[f.key], {
        children: b
      };
    }));
  }, s.render = function() {
    var f = this.props, v = f.component, m = f.childFactory, y = me(f, ["component", "childFactory"]), b = this.state.contextValue, S = MU(this.state.children).map(m);
    return delete y.appear, delete y.enter, delete y.exit, v === null ? /* @__PURE__ */ ai.createElement(d0.Provider, {
      value: b
    }, S) : /* @__PURE__ */ ai.createElement(d0.Provider, {
      value: b
    }, /* @__PURE__ */ ai.createElement(v, y, S));
  }, r;
}(ai.Component);
E1.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: n.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: n.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: n.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: n.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: n.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: n.func
} : {};
E1.defaultProps = DU;
const PU = E1, M0 = (e) => e.scrollTop;
function Ui(e, r) {
  var s, u;
  const {
    timeout: f,
    easing: v,
    style: m = {}
  } = e;
  return {
    duration: (s = m.transitionDuration) != null ? s : typeof f == "number" ? f : f[r.mode] || 0,
    easing: (u = m.transitionTimingFunction) != null ? u : typeof v == "object" ? v[r.mode] : v,
    delay: m.transitionDelay
  };
}
function LU(e) {
  return je("MuiCollapse", e);
}
const IU = He("MuiCollapse", ["root", "horizontal", "vertical", "entered", "hidden", "wrapper", "wrapperInner"]), FJ = IU, _U = ["addEndListener", "children", "className", "collapsedSize", "component", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "orientation", "style", "timeout", "TransitionComponent"], AU = (e) => {
  const {
    orientation: r,
    classes: s
  } = e, u = {
    root: ["root", `${r}`],
    entered: ["entered"],
    hidden: ["hidden"],
    wrapper: ["wrapper", `${r}`],
    wrapperInner: ["wrapperInner", `${r}`]
  };
  return Ue(u, LU, s);
}, BU = Z("div", {
  name: "MuiCollapse",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[s.orientation], s.state === "entered" && r.entered, s.state === "exited" && !s.in && s.collapsedSize === "0px" && r.hidden];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  height: 0,
  overflow: "hidden",
  transition: e.transitions.create("height")
}, r.orientation === "horizontal" && {
  height: "auto",
  width: 0,
  transition: e.transitions.create("width")
}, r.state === "entered" && C({
  height: "auto",
  overflow: "visible"
}, r.orientation === "horizontal" && {
  width: "auto"
}), r.state === "exited" && !r.in && r.collapsedSize === "0px" && {
  visibility: "hidden"
})), zU = Z("div", {
  name: "MuiCollapse",
  slot: "Wrapper",
  overridesResolver: (e, r) => r.wrapper
})(({
  ownerState: e
}) => C({
  // Hack to get children with a negative margin to not falsify the height computation.
  display: "flex",
  width: "100%"
}, e.orientation === "horizontal" && {
  width: "auto",
  height: "100%"
})), FU = Z("div", {
  name: "MuiCollapse",
  slot: "WrapperInner",
  overridesResolver: (e, r) => r.wrapperInner
})(({
  ownerState: e
}) => C({
  width: "100%"
}, e.orientation === "horizontal" && {
  width: "auto",
  height: "100%"
})), R1 = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiCollapse"
  }), {
    addEndListener: f,
    children: v,
    className: m,
    collapsedSize: y = "0px",
    component: b,
    easing: S,
    in: E,
    onEnter: k,
    onEntered: D,
    onEntering: M,
    onExit: P,
    onExited: L,
    onExiting: w,
    orientation: _ = "vertical",
    style: V,
    timeout: A = qN.standard,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: j = Th
  } = u, U = me(u, _U), $ = C({}, u, {
    orientation: _,
    collapsedSize: y
  }), F = AU($), G = to(), Y = El(), Q = O.useRef(null), q = O.useRef(), re = typeof y == "number" ? `${y}px` : y, ee = _ === "horizontal", J = ee ? "width" : "height", ce = O.useRef(null), de = yn(s, ce), fe = (ke) => (lt) => {
    if (ke) {
      const xe = ce.current;
      lt === void 0 ? ke(xe) : ke(xe, lt);
    }
  }, K = () => Q.current ? Q.current[ee ? "clientWidth" : "clientHeight"] : 0, ne = fe((ke, lt) => {
    Q.current && ee && (Q.current.style.position = "absolute"), ke.style[J] = re, k && k(ke, lt);
  }), ve = fe((ke, lt) => {
    const xe = K();
    Q.current && ee && (Q.current.style.position = "");
    const {
      duration: ze,
      easing: ut
    } = Ui({
      style: V,
      timeout: A,
      easing: S
    }, {
      mode: "enter"
    });
    if (A === "auto") {
      const Xe = G.transitions.getAutoHeightDuration(xe);
      ke.style.transitionDuration = `${Xe}ms`, q.current = Xe;
    } else
      ke.style.transitionDuration = typeof ze == "string" ? ze : `${ze}ms`;
    ke.style[J] = `${xe}px`, ke.style.transitionTimingFunction = ut, M && M(ke, lt);
  }), Ke = fe((ke, lt) => {
    ke.style[J] = "auto", D && D(ke, lt);
  }), tt = fe((ke) => {
    ke.style[J] = `${K()}px`, P && P(ke);
  }), Ie = fe(L), De = fe((ke) => {
    const lt = K(), {
      duration: xe,
      easing: ze
    } = Ui({
      style: V,
      timeout: A,
      easing: S
    }, {
      mode: "exit"
    });
    if (A === "auto") {
      const ut = G.transitions.getAutoHeightDuration(lt);
      ke.style.transitionDuration = `${ut}ms`, q.current = ut;
    } else
      ke.style.transitionDuration = typeof xe == "string" ? xe : `${xe}ms`;
    ke.style[J] = re, ke.style.transitionTimingFunction = ze, w && w(ke);
  });
  return /* @__PURE__ */ z(j, C({
    in: E,
    onEnter: ne,
    onEntered: Ke,
    onEntering: ve,
    onExit: tt,
    onExited: Ie,
    onExiting: De,
    addEndListener: (ke) => {
      A === "auto" && Y.start(q.current || 0, ke), f && f(ce.current, ke);
    },
    nodeRef: ce,
    timeout: A === "auto" ? null : A
  }, U, {
    children: (ke, lt) => /* @__PURE__ */ z(BU, C({
      as: b,
      className: pe(F.root, m, {
        entered: F.entered,
        exited: !E && re === "0px" && F.hidden
      }[ke]),
      style: C({
        [ee ? "minWidth" : "minHeight"]: re
      }, V),
      ref: de
    }, lt, {
      // `ownerState` is set after `childProps` to override any existing `ownerState` property in `childProps`
      // that might have been forwarded from the Transition component.
      ownerState: C({}, $, {
        state: ke
      }),
      children: /* @__PURE__ */ z(zU, {
        ownerState: C({}, $, {
          state: ke
        }),
        className: F.wrapper,
        ref: Q,
        children: /* @__PURE__ */ z(FU, {
          ownerState: C({}, $, {
            state: ke
          }),
          className: F.wrapperInner,
          children: v
        })
      })
    }))
  }));
});
process.env.NODE_ENV !== "production" && (R1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: n.func,
  /**
   * The content node to be collapsed.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The width (horizontal) or height (vertical) of the container when collapsed.
   * @default '0px'
   */
  collapsedSize: n.oneOfType([n.number, n.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: jc,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: n.oneOfType([n.shape({
    enter: n.string,
    exit: n.string
  }), n.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: n.bool,
  /**
   * @ignore
   */
  onEnter: n.func,
  /**
   * @ignore
   */
  onEntered: n.func,
  /**
   * @ignore
   */
  onEntering: n.func,
  /**
   * @ignore
   */
  onExit: n.func,
  /**
   * @ignore
   */
  onExited: n.func,
  /**
   * @ignore
   */
  onExiting: n.func,
  /**
   * The transition orientation.
   * @default 'vertical'
   */
  orientation: n.oneOf(["horizontal", "vertical"]),
  /**
   * @ignore
   */
  style: n.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default duration.standard
   */
  timeout: n.oneOfType([n.oneOf(["auto"]), n.number, n.shape({
    appear: n.number,
    enter: n.number,
    exit: n.number
  })])
});
R1.muiSupportAuto = !0;
const O1 = R1;
function jU(e) {
  return je("MuiPaper", e);
}
const UU = He("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]), jJ = UU, VU = ["className", "component", "elevation", "square", "variant"], HU = (e) => {
  const {
    square: r,
    elevation: s,
    variant: u,
    classes: f
  } = e, v = {
    root: ["root", u, !r && "rounded", u === "elevation" && `elevation${s}`]
  };
  return Ue(v, jU, f);
}, WU = Z("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[s.variant], !s.square && r.rounded, s.variant === "elevation" && r[`elevation${s.elevation}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => {
  var s;
  return C({
    backgroundColor: (e.vars || e).palette.background.paper,
    color: (e.vars || e).palette.text.primary,
    transition: e.transitions.create("box-shadow")
  }, !r.square && {
    borderRadius: e.shape.borderRadius
  }, r.variant === "outlined" && {
    border: `1px solid ${(e.vars || e).palette.divider}`
  }, r.variant === "elevation" && C({
    boxShadow: (e.vars || e).shadows[r.elevation]
  }, !e.vars && e.palette.mode === "dark" && {
    backgroundImage: `linear-gradient(${Ut("#fff", c0(r.elevation))}, ${Ut("#fff", c0(r.elevation))})`
  }, e.vars && {
    backgroundImage: (s = e.vars.overlays) == null ? void 0 : s[r.elevation]
  }));
}), E$ = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiPaper"
  }), {
    className: f,
    component: v = "div",
    elevation: m = 1,
    square: y = !1,
    variant: b = "elevation"
  } = u, S = me(u, VU), E = C({}, u, {
    component: v,
    elevation: m,
    square: y,
    variant: b
  }), k = HU(E);
  return process.env.NODE_ENV !== "production" && to().shadows[m] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${m}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${m}]\` is defined.`].join(`
`)), /* @__PURE__ */ z(WU, C({
    as: v,
    ownerState: E,
    className: pe(k.root, f),
    ref: s
  }, S));
});
process.env.NODE_ENV !== "production" && (E$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: jo(Co, (e) => {
    const {
      elevation: r,
      variant: s
    } = e;
    return r > 0 && s === "outlined" ? new Error(`MUI: Combining \`elevation={${r}}\` with \`variant="${s}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: n.oneOfType([n.oneOf(["elevation", "outlined"]), n.string])
});
const ui = E$, R$ = /* @__PURE__ */ O.createContext({});
process.env.NODE_ENV !== "production" && (R$.displayName = "AccordionContext");
const O$ = R$;
function Fi(e) {
  return typeof e == "string";
}
function cf(e, r, s) {
  return e === void 0 || Fi(e) ? r : C({}, r, {
    ownerState: C({}, r.ownerState, s)
  });
}
function GU(e, r, s = (u, f) => u === f) {
  return e.length === r.length && e.every((u, f) => s(u, r[f]));
}
const qU = {
  disableDefaultClasses: !1
}, w$ = /* @__PURE__ */ O.createContext(qU);
process.env.NODE_ENV !== "production" && (w$.displayName = "ClassNameConfiguratorContext");
function YU(e) {
  const {
    disableDefaultClasses: r
  } = O.useContext(w$);
  return (s) => r ? "" : e(s);
}
function id(e, r = []) {
  if (e === void 0)
    return {};
  const s = {};
  return Object.keys(e).filter((u) => u.match(/^on[A-Z]/) && typeof e[u] == "function" && !r.includes(u)).forEach((u) => {
    s[u] = e[u];
  }), s;
}
function k$(e, r, s) {
  return typeof e == "function" ? e(r, s) : e;
}
function dk(e) {
  if (e === void 0)
    return {};
  const r = {};
  return Object.keys(e).filter((s) => !(s.match(/^on[A-Z]/) && typeof e[s] == "function")).forEach((s) => {
    r[s] = e[s];
  }), r;
}
function N$(e) {
  const {
    getSlotProps: r,
    additionalProps: s,
    externalSlotProps: u,
    externalForwardedProps: f,
    className: v
  } = e;
  if (!r) {
    const M = pe(s == null ? void 0 : s.className, v, f == null ? void 0 : f.className, u == null ? void 0 : u.className), P = C({}, s == null ? void 0 : s.style, f == null ? void 0 : f.style, u == null ? void 0 : u.style), L = C({}, s, f, u);
    return M.length > 0 && (L.className = M), Object.keys(P).length > 0 && (L.style = P), {
      props: L,
      internalRef: void 0
    };
  }
  const m = id(C({}, f, u)), y = dk(u), b = dk(f), S = r(m), E = pe(S == null ? void 0 : S.className, s == null ? void 0 : s.className, v, f == null ? void 0 : f.className, u == null ? void 0 : u.className), k = C({}, S == null ? void 0 : S.style, s == null ? void 0 : s.style, f == null ? void 0 : f.style, u == null ? void 0 : u.style), D = C({}, S, s, b, y);
  return E.length > 0 && (D.className = E), Object.keys(k).length > 0 && (D.style = k), {
    props: D,
    internalRef: S.ref
  };
}
const KU = ["elementType", "externalSlotProps", "ownerState", "skipResolvingSlotProps"];
function po(e) {
  var r;
  const {
    elementType: s,
    externalSlotProps: u,
    ownerState: f,
    skipResolvingSlotProps: v = !1
  } = e, m = me(e, KU), y = v ? {} : k$(u, f), {
    props: b,
    internalRef: S
  } = N$(C({}, m, {
    externalSlotProps: y
  })), E = yn(S, y == null ? void 0 : y.ref, (r = e.additionalProps) == null ? void 0 : r.ref);
  return cf(s, C({}, b, {
    ref: E
  }), f);
}
const XU = ["className", "elementType", "ownerState", "externalForwardedProps", "getSlotOwnerState", "internalForwardedProps"], QU = ["component", "slots", "slotProps"], ZU = ["component"];
function p0(e, r) {
  const {
    className: s,
    elementType: u,
    ownerState: f,
    externalForwardedProps: v,
    getSlotOwnerState: m,
    internalForwardedProps: y
  } = r, b = me(r, XU), {
    component: S,
    slots: E = {
      [e]: void 0
    },
    slotProps: k = {
      [e]: void 0
    }
  } = v, D = me(v, QU), M = E[e] || u, P = k$(k[e], f), L = N$(C({
    className: s
  }, b, {
    externalForwardedProps: e === "root" ? D : void 0,
    externalSlotProps: P
  })), {
    props: {
      component: w
    },
    internalRef: _
  } = L, V = me(L.props, ZU), A = yn(_, P == null ? void 0 : P.ref, r.ref), j = m ? m(V) : {}, U = C({}, f, j), $ = e === "root" ? w || S : w, F = cf(M, C({}, e === "root" && !S && !E[e] && y, e !== "root" && !E[e] && y, V, $ && {
    as: $
  }, {
    ref: A
  }), U);
  return Object.keys(j).forEach((G) => {
    delete F[G];
  }), [M, F];
}
function JU(e) {
  return je("MuiAccordion", e);
}
const eV = He("MuiAccordion", ["root", "rounded", "expanded", "disabled", "gutters", "region"]), Pb = eV, tV = ["children", "className", "defaultExpanded", "disabled", "disableGutters", "expanded", "onChange", "square", "slots", "slotProps", "TransitionComponent", "TransitionProps"], nV = (e) => {
  const {
    classes: r,
    square: s,
    expanded: u,
    disabled: f,
    disableGutters: v
  } = e;
  return Ue({
    root: ["root", !s && "rounded", u && "expanded", f && "disabled", !v && "gutters"],
    region: ["region"]
  }, JU, r);
}, oV = Z(ui, {
  name: "MuiAccordion",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [{
      [`& .${Pb.region}`]: r.region
    }, r.root, !s.square && r.rounded, !s.disableGutters && r.gutters];
  }
})(({
  theme: e
}) => {
  const r = {
    duration: e.transitions.duration.shortest
  };
  return {
    position: "relative",
    transition: e.transitions.create(["margin"], r),
    overflowAnchor: "none",
    // Keep the same scrolling position
    "&::before": {
      position: "absolute",
      left: 0,
      top: -1,
      right: 0,
      height: 1,
      content: '""',
      opacity: 1,
      backgroundColor: (e.vars || e).palette.divider,
      transition: e.transitions.create(["opacity", "background-color"], r)
    },
    "&:first-of-type": {
      "&::before": {
        display: "none"
      }
    },
    [`&.${Pb.expanded}`]: {
      "&::before": {
        opacity: 0
      },
      "&:first-of-type": {
        marginTop: 0
      },
      "&:last-of-type": {
        marginBottom: 0
      },
      "& + &": {
        "&::before": {
          display: "none"
        }
      }
    },
    [`&.${Pb.disabled}`]: {
      backgroundColor: (e.vars || e).palette.action.disabledBackground
    }
  };
}, ({
  theme: e,
  ownerState: r
}) => C({}, !r.square && {
  borderRadius: 0,
  "&:first-of-type": {
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius
  },
  "&:last-of-type": {
    borderBottomLeftRadius: (e.vars || e).shape.borderRadius,
    borderBottomRightRadius: (e.vars || e).shape.borderRadius,
    // Fix a rendering issue on Edge
    "@supports (-ms-ime-align: auto)": {
      borderBottomLeftRadius: 0,
      borderBottomRightRadius: 0
    }
  }
}, !r.disableGutters && {
  [`&.${Pb.expanded}`]: {
    margin: "16px 0"
  }
})), $$ = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiAccordion"
  }), {
    children: f,
    className: v,
    defaultExpanded: m = !1,
    disabled: y = !1,
    disableGutters: b = !1,
    expanded: S,
    onChange: E,
    square: k = !1,
    slots: D = {},
    slotProps: M = {},
    TransitionComponent: P,
    TransitionProps: L
  } = u, w = me(u, tV), [_, V] = za({
    controlled: S,
    default: m,
    name: "Accordion",
    state: "expanded"
  }), A = O.useCallback((ee) => {
    V(!_), E && E(ee, !_);
  }, [_, E, V]), [j, ...U] = O.Children.toArray(f), $ = O.useMemo(() => ({
    expanded: _,
    disabled: y,
    disableGutters: b,
    toggle: A
  }), [_, y, b, A]), F = C({}, u, {
    square: k,
    disabled: y,
    disableGutters: b,
    expanded: _
  }), G = nV(F), Y = C({
    transition: P
  }, D), Q = C({
    transition: L
  }, M), [q, re] = p0("transition", {
    elementType: O1,
    externalForwardedProps: {
      slots: Y,
      slotProps: Q
    },
    ownerState: F
  });
  return /* @__PURE__ */ gt(oV, C({
    className: pe(G.root, v),
    ref: s,
    ownerState: F,
    square: k
  }, w, {
    children: [/* @__PURE__ */ z(O$.Provider, {
      value: $,
      children: j
    }), /* @__PURE__ */ z(q, C({
      in: _,
      timeout: "auto"
    }, re, {
      children: /* @__PURE__ */ z("div", {
        "aria-labelledby": j.props.id,
        id: j.props["aria-controls"],
        role: "region",
        className: G.region,
        children: U
      })
    }))]
  }));
});
process.env.NODE_ENV !== "production" && ($$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: jo(n.node.isRequired, (e) => {
    const r = O.Children.toArray(e.children)[0];
    return Hi.isFragment(r) ? new Error("MUI: The Accordion doesn't accept a Fragment as a child. Consider providing an array instead.") : /* @__PURE__ */ O.isValidElement(r) ? null : new Error("MUI: Expected the first child of Accordion to be a valid element.");
  }),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * If `true`, expands the accordion by default.
   * @default false
   */
  defaultExpanded: n.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * If `true`, it removes the margin between two expanded accordion items and the increase of height.
   * @default false
   */
  disableGutters: n.bool,
  /**
   * If `true`, expands the accordion, otherwise collapse it.
   * Setting this prop enables control over the accordion.
   */
  expanded: n.bool,
  /**
   * Callback fired when the expand/collapse state is changed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {boolean} expanded The `expanded` state of the accordion.
   */
  onChange: n.func,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: n.shape({
    transition: n.oneOfType([n.func, n.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: n.shape({
    transition: n.elementType
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated Use `slots.transition` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   */
  TransitionComponent: n.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated Use `slotProps.transition` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   */
  TransitionProps: n.object
});
const UJ = $$;
function rV(e) {
  return je("MuiAccordionActions", e);
}
const aV = He("MuiAccordionActions", ["root", "spacing"]), VJ = aV, iV = ["className", "disableSpacing"], sV = (e) => {
  const {
    classes: r,
    disableSpacing: s
  } = e;
  return Ue({
    root: ["root", !s && "spacing"]
  }, rV, r);
}, lV = Z("div", {
  name: "MuiAccordionActions",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, !s.disableSpacing && r.spacing];
  }
})(({
  ownerState: e
}) => C({
  display: "flex",
  alignItems: "center",
  padding: 8,
  justifyContent: "flex-end"
}, !e.disableSpacing && {
  "& > :not(style) ~ :not(style)": {
    marginLeft: 8
  }
})), M$ = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiAccordionActions"
  }), {
    className: f,
    disableSpacing: v = !1
  } = u, m = me(u, iV), y = C({}, u, {
    disableSpacing: v
  }), b = sV(y);
  return /* @__PURE__ */ z(lV, C({
    className: pe(b.root, f),
    ref: s,
    ownerState: y
  }, m));
});
process.env.NODE_ENV !== "production" && (M$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const HJ = M$;
function cV(e) {
  return je("MuiAccordionDetails", e);
}
const uV = He("MuiAccordionDetails", ["root"]), WJ = uV, dV = ["className"], pV = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"]
  }, cV, r);
}, fV = Z("div", {
  name: "MuiAccordionDetails",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})(({
  theme: e
}) => ({
  padding: e.spacing(1, 2, 2)
})), D$ = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiAccordionDetails"
  }), {
    className: f
  } = u, v = me(u, dV), m = u, y = pV(m);
  return /* @__PURE__ */ z(fV, C({
    className: pe(y.root, f),
    ref: s,
    ownerState: m
  }, v));
});
process.env.NODE_ENV !== "production" && (D$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const GJ = D$;
function P$(e) {
  const {
    className: r,
    classes: s,
    pulsate: u = !1,
    rippleX: f,
    rippleY: v,
    rippleSize: m,
    in: y,
    onExited: b,
    timeout: S
  } = e, [E, k] = O.useState(!1), D = pe(r, s.ripple, s.rippleVisible, u && s.ripplePulsate), M = {
    width: m,
    height: m,
    top: -(m / 2) + v,
    left: -(m / 2) + f
  }, P = pe(s.child, E && s.childLeaving, u && s.childPulsate);
  return !y && !E && k(!0), O.useEffect(() => {
    if (!y && b != null) {
      const L = setTimeout(b, S);
      return () => {
        clearTimeout(L);
      };
    }
  }, [b, y, S]), /* @__PURE__ */ z("span", {
    className: D,
    style: M,
    children: /* @__PURE__ */ z("span", {
      className: P
    })
  });
}
process.env.NODE_ENV !== "production" && (P$.propTypes = {
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object.isRequired,
  className: n.string,
  /**
   * @ignore - injected from TransitionGroup
   */
  in: n.bool,
  /**
   * @ignore - injected from TransitionGroup
   */
  onExited: n.func,
  /**
   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
   */
  pulsate: n.bool,
  /**
   * Diameter of the ripple.
   */
  rippleSize: n.number,
  /**
   * Horizontal position of the ripple center.
   */
  rippleX: n.number,
  /**
   * Vertical position of the ripple center.
   */
  rippleY: n.number,
  /**
   * exit delay
   */
  timeout: n.number.isRequired
});
function qJ(e) {
  return je("MuiTouchRipple", e);
}
const mV = He("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]), ri = mV, vV = ["center", "classes", "className"];
let D0 = (e) => e, pk, fk, mk, vk;
const t1 = 550, hV = 80, gV = Vi(pk || (pk = D0`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`)), yV = Vi(fk || (fk = D0`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`)), bV = Vi(mk || (mk = D0`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`)), CV = Z("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
}), xV = Z(P$, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})(vk || (vk = D0`
  opacity: 0;
  position: absolute;

  &.${0} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  &.${0} {
    animation-duration: ${0}ms;
  }

  & .${0} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${0} {
    opacity: 0;
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  & .${0} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${0};
    animation-duration: 2500ms;
    animation-timing-function: ${0};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`), ri.rippleVisible, gV, t1, ({
  theme: e
}) => e.transitions.easing.easeInOut, ri.ripplePulsate, ({
  theme: e
}) => e.transitions.duration.shorter, ri.child, ri.childLeaving, yV, t1, ({
  theme: e
}) => e.transitions.easing.easeInOut, ri.childPulsate, bV, ({
  theme: e
}) => e.transitions.easing.easeInOut), L$ = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiTouchRipple"
  }), {
    center: f = !1,
    classes: v = {},
    className: m
  } = u, y = me(u, vV), [b, S] = O.useState([]), E = O.useRef(0), k = O.useRef(null);
  O.useEffect(() => {
    k.current && (k.current(), k.current = null);
  }, [b]);
  const D = O.useRef(!1), M = El(), P = O.useRef(null), L = O.useRef(null), w = O.useCallback((j) => {
    const {
      pulsate: U,
      rippleX: $,
      rippleY: F,
      rippleSize: G,
      cb: Y
    } = j;
    S((Q) => [...Q, /* @__PURE__ */ z(xV, {
      classes: {
        ripple: pe(v.ripple, ri.ripple),
        rippleVisible: pe(v.rippleVisible, ri.rippleVisible),
        ripplePulsate: pe(v.ripplePulsate, ri.ripplePulsate),
        child: pe(v.child, ri.child),
        childLeaving: pe(v.childLeaving, ri.childLeaving),
        childPulsate: pe(v.childPulsate, ri.childPulsate)
      },
      timeout: t1,
      pulsate: U,
      rippleX: $,
      rippleY: F,
      rippleSize: G
    }, E.current)]), E.current += 1, k.current = Y;
  }, [v]), _ = O.useCallback((j = {}, U = {}, $ = () => {
  }) => {
    const {
      pulsate: F = !1,
      center: G = f || U.pulsate,
      fakeElement: Y = !1
      // For test purposes
    } = U;
    if ((j == null ? void 0 : j.type) === "mousedown" && D.current) {
      D.current = !1;
      return;
    }
    (j == null ? void 0 : j.type) === "touchstart" && (D.current = !0);
    const Q = Y ? null : L.current, q = Q ? Q.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let re, ee, J;
    if (G || j === void 0 || j.clientX === 0 && j.clientY === 0 || !j.clientX && !j.touches)
      re = Math.round(q.width / 2), ee = Math.round(q.height / 2);
    else {
      const {
        clientX: ce,
        clientY: de
      } = j.touches && j.touches.length > 0 ? j.touches[0] : j;
      re = Math.round(ce - q.left), ee = Math.round(de - q.top);
    }
    if (G)
      J = Math.sqrt((2 * q.width ** 2 + q.height ** 2) / 3), J % 2 === 0 && (J += 1);
    else {
      const ce = Math.max(Math.abs((Q ? Q.clientWidth : 0) - re), re) * 2 + 2, de = Math.max(Math.abs((Q ? Q.clientHeight : 0) - ee), ee) * 2 + 2;
      J = Math.sqrt(ce ** 2 + de ** 2);
    }
    j != null && j.touches ? P.current === null && (P.current = () => {
      w({
        pulsate: F,
        rippleX: re,
        rippleY: ee,
        rippleSize: J,
        cb: $
      });
    }, M.start(hV, () => {
      P.current && (P.current(), P.current = null);
    })) : w({
      pulsate: F,
      rippleX: re,
      rippleY: ee,
      rippleSize: J,
      cb: $
    });
  }, [f, w, M]), V = O.useCallback(() => {
    _({}, {
      pulsate: !0
    });
  }, [_]), A = O.useCallback((j, U) => {
    if (M.clear(), (j == null ? void 0 : j.type) === "touchend" && P.current) {
      P.current(), P.current = null, M.start(0, () => {
        A(j, U);
      });
      return;
    }
    P.current = null, S(($) => $.length > 0 ? $.slice(1) : $), k.current = U;
  }, [M]);
  return O.useImperativeHandle(s, () => ({
    pulsate: V,
    start: _,
    stop: A
  }), [V, _, A]), /* @__PURE__ */ z(CV, C({
    className: pe(ri.root, v.root, m),
    ref: L
  }, y, {
    children: /* @__PURE__ */ z(PU, {
      component: null,
      exit: !0,
      children: b
    })
  }));
});
process.env.NODE_ENV !== "production" && (L$.propTypes = {
  /**
   * If `true`, the ripple starts at the center of the component
   * rather than at the point of interaction.
   */
  center: n.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string
});
const SV = L$;
function TV(e) {
  return je("MuiButtonBase", e);
}
const EV = He("MuiButtonBase", ["root", "disabled", "focusVisible"]), RV = EV, OV = ["action", "centerRipple", "children", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "LinkComponent", "onBlur", "onClick", "onContextMenu", "onDragLeave", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "tabIndex", "TouchRippleProps", "touchRippleRef", "type"], wV = (e) => {
  const {
    disabled: r,
    focusVisible: s,
    focusVisibleClassName: u,
    classes: f
  } = e, m = Ue({
    root: ["root", r && "disabled", s && "focusVisible"]
  }, TV, f);
  return s && u && (m.root += ` ${u}`), m;
}, kV = Z("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  textDecoration: "none",
  // So we take precedent over the style of a native <a /> element.
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${RV.disabled}`]: {
    pointerEvents: "none",
    // Disable link interactions
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
}), I$ = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiButtonBase"
  }), {
    action: f,
    centerRipple: v = !1,
    children: m,
    className: y,
    component: b = "button",
    disabled: S = !1,
    disableRipple: E = !1,
    disableTouchRipple: k = !1,
    focusRipple: D = !1,
    LinkComponent: M = "a",
    onBlur: P,
    onClick: L,
    onContextMenu: w,
    onDragLeave: _,
    onFocus: V,
    onFocusVisible: A,
    onKeyDown: j,
    onKeyUp: U,
    onMouseDown: $,
    onMouseLeave: F,
    onMouseUp: G,
    onTouchEnd: Y,
    onTouchMove: Q,
    onTouchStart: q,
    tabIndex: re = 0,
    TouchRippleProps: ee,
    touchRippleRef: J,
    type: ce
  } = u, de = me(u, OV), fe = O.useRef(null), K = O.useRef(null), ne = yn(K, J), {
    isFocusVisibleRef: ve,
    onFocus: Ke,
    onBlur: tt,
    ref: Ie
  } = bh(), [De, Ye] = O.useState(!1);
  S && De && Ye(!1), O.useImperativeHandle(f, () => ({
    focusVisible: () => {
      Ye(!0), fe.current.focus();
    }
  }), []);
  const [ke, lt] = O.useState(!1);
  O.useEffect(() => {
    lt(!0);
  }, []);
  const xe = ke && !E && !S;
  O.useEffect(() => {
    De && D && !E && ke && K.current.pulsate();
  }, [E, D, De, ke]);
  function ze(he, Qe, Me = k) {
    return so((et) => (Qe && Qe(et), !Me && K.current && K.current[he](et), !0));
  }
  const ut = ze("start", $), Xe = ze("stop", w), rt = ze("stop", _), nt = ze("stop", G), le = ze("stop", (he) => {
    De && he.preventDefault(), F && F(he);
  }), $e = ze("start", q), Oe = ze("stop", Y), dt = ze("stop", Q), it = ze("stop", (he) => {
    tt(he), ve.current === !1 && Ye(!1), P && P(he);
  }, !1), zt = so((he) => {
    fe.current || (fe.current = he.currentTarget), Ke(he), ve.current === !0 && (Ye(!0), A && A(he)), V && V(he);
  }), Dt = () => {
    const he = fe.current;
    return b && b !== "button" && !(he.tagName === "A" && he.href);
  }, ht = O.useRef(!1), Tt = so((he) => {
    D && !ht.current && De && K.current && he.key === " " && (ht.current = !0, K.current.stop(he, () => {
      K.current.start(he);
    })), he.target === he.currentTarget && Dt() && he.key === " " && he.preventDefault(), j && j(he), he.target === he.currentTarget && Dt() && he.key === "Enter" && !S && (he.preventDefault(), L && L(he));
  }), Lt = so((he) => {
    D && he.key === " " && K.current && De && !he.defaultPrevented && (ht.current = !1, K.current.stop(he, () => {
      K.current.pulsate(he);
    })), U && U(he), L && he.target === he.currentTarget && Dt() && he.key === " " && !he.defaultPrevented && L(he);
  });
  let At = b;
  At === "button" && (de.href || de.to) && (At = M);
  const tn = {};
  At === "button" ? (tn.type = ce === void 0 ? "button" : ce, tn.disabled = S) : (!de.href && !de.to && (tn.role = "button"), S && (tn["aria-disabled"] = S));
  const an = yn(s, Ie, fe);
  process.env.NODE_ENV !== "production" && O.useEffect(() => {
    xe && !K.current && console.error(["MUI: The `component` prop provided to ButtonBase is invalid.", "Please make sure the children prop is rendered in this custom component."].join(`
`));
  }, [xe]);
  const Qt = C({}, u, {
    centerRipple: v,
    component: b,
    disabled: S,
    disableRipple: E,
    disableTouchRipple: k,
    focusRipple: D,
    tabIndex: re,
    focusVisible: De
  }), Ce = wV(Qt);
  return /* @__PURE__ */ gt(kV, C({
    as: At,
    className: pe(Ce.root, y),
    ownerState: Qt,
    onBlur: it,
    onClick: L,
    onContextMenu: Xe,
    onFocus: zt,
    onKeyDown: Tt,
    onKeyUp: Lt,
    onMouseDown: ut,
    onMouseLeave: le,
    onMouseUp: nt,
    onDragLeave: rt,
    onTouchEnd: Oe,
    onTouchMove: dt,
    onTouchStart: $e,
    ref: an,
    tabIndex: S ? -1 : re,
    type: ce
  }, tn, de, {
    children: [m, xe ? (
      /* TouchRipple is only needed client-side, x2 boost on the server. */
      /* @__PURE__ */ z(SV, C({
        ref: ne,
        center: v
      }, ee))
    ) : null]
  }));
});
process.env.NODE_ENV !== "production" && (I$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: Tr,
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: n.bool,
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: jc,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: n.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: n.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: n.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: n.string,
  /**
   * @ignore
   */
  href: n.any,
  /**
   * The component used to render a link when the `href` prop is provided.
   * @default 'a'
   */
  LinkComponent: n.elementType,
  /**
   * @ignore
   */
  onBlur: n.func,
  /**
   * @ignore
   */
  onClick: n.func,
  /**
   * @ignore
   */
  onContextMenu: n.func,
  /**
   * @ignore
   */
  onDragLeave: n.func,
  /**
   * @ignore
   */
  onFocus: n.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: n.func,
  /**
   * @ignore
   */
  onKeyDown: n.func,
  /**
   * @ignore
   */
  onKeyUp: n.func,
  /**
   * @ignore
   */
  onMouseDown: n.func,
  /**
   * @ignore
   */
  onMouseLeave: n.func,
  /**
   * @ignore
   */
  onMouseUp: n.func,
  /**
   * @ignore
   */
  onTouchEnd: n.func,
  /**
   * @ignore
   */
  onTouchMove: n.func,
  /**
   * @ignore
   */
  onTouchStart: n.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * @default 0
   */
  tabIndex: n.number,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: n.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: n.oneOfType([n.func, n.shape({
    current: n.shape({
      pulsate: n.func.isRequired,
      start: n.func.isRequired,
      stop: n.func.isRequired
    })
  })]),
  /**
   * @ignore
   */
  type: n.oneOfType([n.oneOf(["button", "reset", "submit"]), n.string])
});
const er = I$;
function NV(e) {
  return je("MuiAccordionSummary", e);
}
const $V = He("MuiAccordionSummary", ["root", "expanded", "focusVisible", "disabled", "gutters", "contentGutters", "content", "expandIconWrapper"]), uf = $V, MV = ["children", "className", "expandIcon", "focusVisibleClassName", "onClick"], DV = (e) => {
  const {
    classes: r,
    expanded: s,
    disabled: u,
    disableGutters: f
  } = e;
  return Ue({
    root: ["root", s && "expanded", u && "disabled", !f && "gutters"],
    focusVisible: ["focusVisible"],
    content: ["content", s && "expanded", !f && "contentGutters"],
    expandIconWrapper: ["expandIconWrapper", s && "expanded"]
  }, NV, r);
}, PV = Z(er, {
  name: "MuiAccordionSummary",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})(({
  theme: e,
  ownerState: r
}) => {
  const s = {
    duration: e.transitions.duration.shortest
  };
  return C({
    display: "flex",
    minHeight: 48,
    padding: e.spacing(0, 2),
    transition: e.transitions.create(["min-height", "background-color"], s),
    [`&.${uf.focusVisible}`]: {
      backgroundColor: (e.vars || e).palette.action.focus
    },
    [`&.${uf.disabled}`]: {
      opacity: (e.vars || e).palette.action.disabledOpacity
    },
    [`&:hover:not(.${uf.disabled})`]: {
      cursor: "pointer"
    }
  }, !r.disableGutters && {
    [`&.${uf.expanded}`]: {
      minHeight: 64
    }
  });
}), LV = Z("div", {
  name: "MuiAccordionSummary",
  slot: "Content",
  overridesResolver: (e, r) => r.content
})(({
  theme: e,
  ownerState: r
}) => C({
  display: "flex",
  flexGrow: 1,
  margin: "12px 0"
}, !r.disableGutters && {
  transition: e.transitions.create(["margin"], {
    duration: e.transitions.duration.shortest
  }),
  [`&.${uf.expanded}`]: {
    margin: "20px 0"
  }
})), IV = Z("div", {
  name: "MuiAccordionSummary",
  slot: "ExpandIconWrapper",
  overridesResolver: (e, r) => r.expandIconWrapper
})(({
  theme: e
}) => ({
  display: "flex",
  color: (e.vars || e).palette.action.active,
  transform: "rotate(0deg)",
  transition: e.transitions.create("transform", {
    duration: e.transitions.duration.shortest
  }),
  [`&.${uf.expanded}`]: {
    transform: "rotate(180deg)"
  }
})), _$ = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiAccordionSummary"
  }), {
    children: f,
    className: v,
    expandIcon: m,
    focusVisibleClassName: y,
    onClick: b
  } = u, S = me(u, MV), {
    disabled: E = !1,
    disableGutters: k,
    expanded: D,
    toggle: M
  } = O.useContext(O$), P = (_) => {
    M && M(_), b && b(_);
  }, L = C({}, u, {
    expanded: D,
    disabled: E,
    disableGutters: k
  }), w = DV(L);
  return /* @__PURE__ */ gt(PV, C({
    focusRipple: !1,
    disableRipple: !0,
    disabled: E,
    component: "div",
    "aria-expanded": D,
    className: pe(w.root, v),
    focusVisibleClassName: pe(w.focusVisible, y),
    onClick: P,
    ref: s,
    ownerState: L
  }, S, {
    children: [/* @__PURE__ */ z(LV, {
      className: w.content,
      ownerState: L,
      children: f
    }), m && /* @__PURE__ */ z(IV, {
      className: w.expandIconWrapper,
      ownerState: L,
      children: m
    })]
  }));
});
process.env.NODE_ENV !== "production" && (_$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The icon to display as the expand indicator.
   */
  expandIcon: n.node,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: n.string,
  /**
   * @ignore
   */
  onClick: n.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const YJ = _$;
function _V(e) {
  const {
    badgeContent: r,
    invisible: s = !1,
    max: u = 99,
    showZero: f = !1
  } = e, v = v1({
    badgeContent: r,
    max: u
  });
  let m = s;
  s === !1 && r === 0 && !f && (m = !0);
  const {
    badgeContent: y,
    max: b = u
  } = m ? v : e, S = y && Number(y) > b ? `${b}+` : y;
  return {
    badgeContent: y,
    invisible: m,
    max: b,
    displayValue: S
  };
}
const A$ = "base";
function AV(e) {
  return `${A$}--${e}`;
}
function BV(e, r) {
  return `${A$}-${e}-${r}`;
}
function B$(e, r) {
  const s = sz[r];
  return s ? AV(s) : BV(e, r);
}
function zV(e, r) {
  const s = {};
  return r.forEach((u) => {
    s[u] = B$(e, u);
  }), s;
}
function hk(e) {
  return e.substring(2).toLowerCase();
}
function FV(e, r) {
  return r.documentElement.clientWidth < e.clientX || r.documentElement.clientHeight < e.clientY;
}
function f0(e) {
  const {
    children: r,
    disableReactTree: s = !1,
    mouseEvent: u = "onClick",
    onClickAway: f,
    touchEvent: v = "onTouchEnd"
  } = e, m = O.useRef(!1), y = O.useRef(null), b = O.useRef(!1), S = O.useRef(!1);
  O.useEffect(() => (setTimeout(() => {
    b.current = !0;
  }, 0), () => {
    b.current = !1;
  }), []);
  const E = yn(
    // @ts-expect-error TODO upstream fix
    r.ref,
    y
  ), k = so((P) => {
    const L = S.current;
    S.current = !1;
    const w = Wn(y.current);
    if (!b.current || !y.current || "clientX" in P && FV(P, w))
      return;
    if (m.current) {
      m.current = !1;
      return;
    }
    let _;
    P.composedPath ? _ = P.composedPath().indexOf(y.current) > -1 : _ = !w.documentElement.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      P.target
    ) || y.current.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      P.target
    ), !_ && (s || !L) && f(P);
  }), D = (P) => (L) => {
    S.current = !0;
    const w = r.props[P];
    w && w(L);
  }, M = {
    ref: E
  };
  return v !== !1 && (M[v] = D(v)), O.useEffect(() => {
    if (v !== !1) {
      const P = hk(v), L = Wn(y.current), w = () => {
        m.current = !0;
      };
      return L.addEventListener(P, k), L.addEventListener("touchmove", w), () => {
        L.removeEventListener(P, k), L.removeEventListener("touchmove", w);
      };
    }
  }, [k, v]), u !== !1 && (M[u] = D(u)), O.useEffect(() => {
    if (u !== !1) {
      const P = hk(u), L = Wn(y.current);
      return L.addEventListener(P, k), () => {
        L.removeEventListener(P, k);
      };
    }
  }, [k, u]), /* @__PURE__ */ z(O.Fragment, {
    children: /* @__PURE__ */ O.cloneElement(r, M)
  });
}
process.env.NODE_ENV !== "production" && (f0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The wrapped element.
   */
  children: Uc.isRequired,
  /**
   * If `true`, the React tree is ignored and only the DOM tree is considered.
   * This prop changes how portaled elements are handled.
   * @default false
   */
  disableReactTree: n.bool,
  /**
   * The mouse event to listen to. You can disable the listener by providing `false`.
   * @default 'onClick'
   */
  mouseEvent: n.oneOf(["onClick", "onMouseDown", "onMouseUp", "onPointerDown", "onPointerUp", !1]),
  /**
   * Callback fired when a "click away" event is detected.
   */
  onClickAway: n.func.isRequired,
  /**
   * The touch event to listen to. You can disable the listener by providing `false`.
   * @default 'onTouchEnd'
   */
  touchEvent: n.oneOf(["onTouchEnd", "onTouchStart", !1])
});
process.env.NODE_ENV !== "production" && (f0["propTypes"] = cd(f0.propTypes));
const jV = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function UV(e) {
  const r = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(r) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : r;
}
function VV(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const r = (u) => e.ownerDocument.querySelector(`input[type="radio"]${u}`);
  let s = r(`[name="${e.name}"]:checked`);
  return s || (s = r(`[name="${e.name}"]`)), s !== e;
}
function HV(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || VV(e));
}
function WV(e) {
  const r = [], s = [];
  return Array.from(e.querySelectorAll(jV)).forEach((u, f) => {
    const v = UV(u);
    v === -1 || !HV(u) || (v === 0 ? r.push(u) : s.push({
      documentOrder: f,
      tabIndex: v,
      node: u
    }));
  }), s.sort((u, f) => u.tabIndex === f.tabIndex ? u.documentOrder - f.documentOrder : u.tabIndex - f.tabIndex).map((u) => u.node).concat(r);
}
function GV() {
  return !0;
}
function m0(e) {
  const {
    children: r,
    disableAutoFocus: s = !1,
    disableEnforceFocus: u = !1,
    disableRestoreFocus: f = !1,
    getTabbable: v = WV,
    isEnabled: m = GV,
    open: y
  } = e, b = O.useRef(!1), S = O.useRef(null), E = O.useRef(null), k = O.useRef(null), D = O.useRef(null), M = O.useRef(!1), P = O.useRef(null), L = yn(r.ref, P), w = O.useRef(null);
  O.useEffect(() => {
    !y || !P.current || (M.current = !s);
  }, [s, y]), O.useEffect(() => {
    if (!y || !P.current)
      return;
    const A = Wn(P.current);
    return P.current.contains(A.activeElement) || (P.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), P.current.setAttribute("tabIndex", "-1")), M.current && P.current.focus()), () => {
      f || (k.current && k.current.focus && (b.current = !0, k.current.focus()), k.current = null);
    };
  }, [y]), O.useEffect(() => {
    if (!y || !P.current)
      return;
    const A = Wn(P.current), j = (F) => {
      w.current = F, !(u || !m() || F.key !== "Tab") && A.activeElement === P.current && F.shiftKey && (b.current = !0, E.current && E.current.focus());
    }, U = () => {
      const F = P.current;
      if (F === null)
        return;
      if (!A.hasFocus() || !m() || b.current) {
        b.current = !1;
        return;
      }
      if (F.contains(A.activeElement) || u && A.activeElement !== S.current && A.activeElement !== E.current)
        return;
      if (A.activeElement !== D.current)
        D.current = null;
      else if (D.current !== null)
        return;
      if (!M.current)
        return;
      let G = [];
      if ((A.activeElement === S.current || A.activeElement === E.current) && (G = v(P.current)), G.length > 0) {
        var Y, Q;
        const q = !!((Y = w.current) != null && Y.shiftKey && ((Q = w.current) == null ? void 0 : Q.key) === "Tab"), re = G[0], ee = G[G.length - 1];
        typeof re != "string" && typeof ee != "string" && (q ? ee.focus() : re.focus());
      } else
        F.focus();
    };
    A.addEventListener("focusin", U), A.addEventListener("keydown", j, !0);
    const $ = setInterval(() => {
      A.activeElement && A.activeElement.tagName === "BODY" && U();
    }, 50);
    return () => {
      clearInterval($), A.removeEventListener("focusin", U), A.removeEventListener("keydown", j, !0);
    };
  }, [s, u, f, m, y, v]);
  const _ = (A) => {
    k.current === null && (k.current = A.relatedTarget), M.current = !0, D.current = A.target;
    const j = r.props.onFocus;
    j && j(A);
  }, V = (A) => {
    k.current === null && (k.current = A.relatedTarget), M.current = !0;
  };
  return /* @__PURE__ */ gt(O.Fragment, {
    children: [/* @__PURE__ */ z("div", {
      tabIndex: y ? 0 : -1,
      onFocus: V,
      ref: S,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ O.cloneElement(r, {
      ref: L,
      onFocus: _
    }), /* @__PURE__ */ z("div", {
      tabIndex: y ? 0 : -1,
      onFocus: V,
      ref: E,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (m0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: Uc,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: n.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: n.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: n.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: n.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: n.func,
  /**
   * If `true`, focus is locked.
   */
  open: n.bool.isRequired
});
process.env.NODE_ENV !== "production" && (m0["propTypes"] = cd(m0.propTypes));
function qV(e) {
  return typeof e == "function" ? e() : e;
}
const ch = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const {
    children: u,
    container: f,
    disablePortal: v = !1
  } = r, [m, y] = O.useState(null), b = yn(/* @__PURE__ */ O.isValidElement(u) ? u.ref : null, s);
  if (ur(() => {
    v || y(qV(f) || document.body);
  }, [f, v]), ur(() => {
    if (m && !v)
      return s0(s, m), () => {
        s0(s, null);
      };
  }, [s, m, v]), v) {
    if (/* @__PURE__ */ O.isValidElement(u)) {
      const S = {
        ref: b
      };
      return /* @__PURE__ */ O.cloneElement(u, S);
    }
    return /* @__PURE__ */ z(O.Fragment, {
      children: u
    });
  }
  return /* @__PURE__ */ z(O.Fragment, {
    children: m && /* @__PURE__ */ u0.createPortal(u, m)
  });
});
process.env.NODE_ENV !== "production" && (ch.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: n.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: n.oneOfType([$s, n.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: n.bool
});
process.env.NODE_ENV !== "production" && (ch["propTypes"] = cd(ch.propTypes));
function YV(e) {
  const r = Wn(e);
  return r.body === e ? ta(e).innerWidth > r.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function Jv(e, r) {
  r ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function gk(e) {
  return parseInt(ta(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function KV(e) {
  const s = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].indexOf(e.tagName) !== -1, u = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return s || u;
}
function yk(e, r, s, u, f) {
  const v = [r, s, ...u];
  [].forEach.call(e.children, (m) => {
    const y = v.indexOf(m) === -1, b = !KV(m);
    y && b && Jv(m, f);
  });
}
function kT(e, r) {
  let s = -1;
  return e.some((u, f) => r(u) ? (s = f, !0) : !1), s;
}
function XV(e, r) {
  const s = [], u = e.container;
  if (!r.disableScrollLock) {
    if (YV(u)) {
      const m = o$(Wn(u));
      s.push({
        value: u.style.paddingRight,
        property: "padding-right",
        el: u
      }), u.style.paddingRight = `${gk(u) + m}px`;
      const y = Wn(u).querySelectorAll(".mui-fixed");
      [].forEach.call(y, (b) => {
        s.push({
          value: b.style.paddingRight,
          property: "padding-right",
          el: b
        }), b.style.paddingRight = `${gk(b) + m}px`;
      });
    }
    let v;
    if (u.parentNode instanceof DocumentFragment)
      v = Wn(u).body;
    else {
      const m = u.parentElement, y = ta(u);
      v = (m == null ? void 0 : m.nodeName) === "HTML" && y.getComputedStyle(m).overflowY === "scroll" ? m : u;
    }
    s.push({
      value: v.style.overflow,
      property: "overflow",
      el: v
    }, {
      value: v.style.overflowX,
      property: "overflow-x",
      el: v
    }, {
      value: v.style.overflowY,
      property: "overflow-y",
      el: v
    }), v.style.overflow = "hidden";
  }
  return () => {
    s.forEach(({
      value: v,
      el: m,
      property: y
    }) => {
      v ? m.style.setProperty(y, v) : m.style.removeProperty(y);
    });
  };
}
function QV(e) {
  const r = [];
  return [].forEach.call(e.children, (s) => {
    s.getAttribute("aria-hidden") === "true" && r.push(s);
  }), r;
}
class ZV {
  constructor() {
    this.containers = void 0, this.modals = void 0, this.modals = [], this.containers = [];
  }
  add(r, s) {
    let u = this.modals.indexOf(r);
    if (u !== -1)
      return u;
    u = this.modals.length, this.modals.push(r), r.modalRef && Jv(r.modalRef, !1);
    const f = QV(s);
    yk(s, r.mount, r.modalRef, f, !0);
    const v = kT(this.containers, (m) => m.container === s);
    return v !== -1 ? (this.containers[v].modals.push(r), u) : (this.containers.push({
      modals: [r],
      container: s,
      restore: null,
      hiddenSiblings: f
    }), u);
  }
  mount(r, s) {
    const u = kT(this.containers, (v) => v.modals.indexOf(r) !== -1), f = this.containers[u];
    f.restore || (f.restore = XV(f, s));
  }
  remove(r, s = !0) {
    const u = this.modals.indexOf(r);
    if (u === -1)
      return u;
    const f = kT(this.containers, (m) => m.modals.indexOf(r) !== -1), v = this.containers[f];
    if (v.modals.splice(v.modals.indexOf(r), 1), this.modals.splice(u, 1), v.modals.length === 0)
      v.restore && v.restore(), r.modalRef && Jv(r.modalRef, s), yk(v.container, r.mount, r.modalRef, v.hiddenSiblings, !1), this.containers.splice(f, 1);
    else {
      const m = v.modals[v.modals.length - 1];
      m.modalRef && Jv(m.modalRef, !1);
    }
    return u;
  }
  isTopModal(r) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === r;
  }
}
function JV(e) {
  return typeof e == "function" ? e() : e;
}
function e4(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const t4 = new ZV();
function n4(e) {
  const {
    container: r,
    disableEscapeKeyDown: s = !1,
    disableScrollLock: u = !1,
    // @ts-ignore internal logic - Base UI supports the manager as a prop too
    manager: f = t4,
    closeAfterTransition: v = !1,
    onTransitionEnter: m,
    onTransitionExited: y,
    children: b,
    onClose: S,
    open: E,
    rootRef: k
  } = e, D = O.useRef({}), M = O.useRef(null), P = O.useRef(null), L = yn(P, k), [w, _] = O.useState(!E), V = e4(b);
  let A = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (A = !1);
  const j = () => Wn(M.current), U = () => (D.current.modalRef = P.current, D.current.mount = M.current, D.current), $ = () => {
    f.mount(U(), {
      disableScrollLock: u
    }), P.current && (P.current.scrollTop = 0);
  }, F = so(() => {
    const de = JV(r) || j().body;
    f.add(U(), de), P.current && $();
  }), G = O.useCallback(() => f.isTopModal(U()), [f]), Y = so((de) => {
    M.current = de, de && (E && G() ? $() : P.current && Jv(P.current, A));
  }), Q = O.useCallback(() => {
    f.remove(U(), A);
  }, [A, f]);
  O.useEffect(() => () => {
    Q();
  }, [Q]), O.useEffect(() => {
    E ? F() : (!V || !v) && Q();
  }, [E, Q, V, v, F]);
  const q = (de) => (fe) => {
    var K;
    (K = de.onKeyDown) == null || K.call(de, fe), !(fe.key !== "Escape" || fe.which === 229 || // Wait until IME is settled.
    !G()) && (s || (fe.stopPropagation(), S && S(fe, "escapeKeyDown")));
  }, re = (de) => (fe) => {
    var K;
    (K = de.onClick) == null || K.call(de, fe), fe.target === fe.currentTarget && S && S(fe, "backdropClick");
  };
  return {
    getRootProps: (de = {}) => {
      const fe = id(e);
      delete fe.onTransitionEnter, delete fe.onTransitionExited;
      const K = C({}, fe, de);
      return C({
        role: "presentation"
      }, K, {
        onKeyDown: q(K),
        ref: L
      });
    },
    getBackdropProps: (de = {}) => {
      const fe = de;
      return C({
        "aria-hidden": !0
      }, fe, {
        onClick: re(fe),
        open: E
      });
    },
    getTransitionProps: () => {
      const de = () => {
        _(!1), m && m();
      }, fe = () => {
        _(!0), y && y(), v && Q();
      };
      return {
        onEnter: GT(de, b == null ? void 0 : b.props.onEnter),
        onExited: GT(fe, b == null ? void 0 : b.props.onExited)
      };
    },
    rootRef: L,
    portalRef: Y,
    isTopModal: G,
    exited: w,
    hasTransition: V
  };
}
function v0(e) {
  const {
    children: r,
    defer: s = !1,
    fallback: u = null
  } = e, [f, v] = O.useState(!1);
  return ur(() => {
    s || v(!0);
  }, [s]), O.useEffect(() => {
    s && v(!0);
  }, [s]), /* @__PURE__ */ z(O.Fragment, {
    children: f ? r : u
  });
}
process.env.NODE_ENV !== "production" && (v0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * You can wrap a node.
   */
  children: n.node,
  /**
   * If `true`, the component will not only prevent server-side rendering.
   * It will also defer the rendering of the children into a different screen frame.
   * @default false
   */
  defer: n.bool,
  /**
   * The fallback content to display.
   * @default null
   */
  fallback: n.node
});
process.env.NODE_ENV !== "production" && (v0["propTypes"] = cd(v0.propTypes));
var Ea = "top", li = "bottom", ci = "right", Ra = "left", w1 = "auto", Eh = [Ea, li, ci, Ra], ff = "start", uh = "end", o4 = "clippingParents", z$ = "viewport", Bv = "popper", r4 = "reference", bk = /* @__PURE__ */ Eh.reduce(function(e, r) {
  return e.concat([r + "-" + ff, r + "-" + uh]);
}, []), F$ = /* @__PURE__ */ [].concat(Eh, [w1]).reduce(function(e, r) {
  return e.concat([r, r + "-" + ff, r + "-" + uh]);
}, []), a4 = "beforeRead", i4 = "read", s4 = "afterRead", l4 = "beforeMain", c4 = "main", u4 = "afterMain", d4 = "beforeWrite", p4 = "write", f4 = "afterWrite", m4 = [a4, i4, s4, l4, c4, u4, d4, p4, f4];
function Ds(e) {
  return e ? (e.nodeName || "").toLowerCase() : null;
}
function Fa(e) {
  if (e == null)
    return window;
  if (e.toString() !== "[object Window]") {
    var r = e.ownerDocument;
    return r && r.defaultView || window;
  }
  return e;
}
function ld(e) {
  var r = Fa(e).Element;
  return e instanceof r || e instanceof Element;
}
function ii(e) {
  var r = Fa(e).HTMLElement;
  return e instanceof r || e instanceof HTMLElement;
}
function k1(e) {
  if (typeof ShadowRoot > "u")
    return !1;
  var r = Fa(e).ShadowRoot;
  return e instanceof r || e instanceof ShadowRoot;
}
function v4(e) {
  var r = e.state;
  Object.keys(r.elements).forEach(function(s) {
    var u = r.styles[s] || {}, f = r.attributes[s] || {}, v = r.elements[s];
    !ii(v) || !Ds(v) || (Object.assign(v.style, u), Object.keys(f).forEach(function(m) {
      var y = f[m];
      y === !1 ? v.removeAttribute(m) : v.setAttribute(m, y === !0 ? "" : y);
    }));
  });
}
function h4(e) {
  var r = e.state, s = {
    popper: {
      position: r.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  return Object.assign(r.elements.popper.style, s.popper), r.styles = s, r.elements.arrow && Object.assign(r.elements.arrow.style, s.arrow), function() {
    Object.keys(r.elements).forEach(function(u) {
      var f = r.elements[u], v = r.attributes[u] || {}, m = Object.keys(r.styles.hasOwnProperty(u) ? r.styles[u] : s[u]), y = m.reduce(function(b, S) {
        return b[S] = "", b;
      }, {});
      !ii(f) || !Ds(f) || (Object.assign(f.style, y), Object.keys(v).forEach(function(b) {
        f.removeAttribute(b);
      }));
    });
  };
}
const g4 = {
  name: "applyStyles",
  enabled: !0,
  phase: "write",
  fn: v4,
  effect: h4,
  requires: ["computeStyles"]
};
function ks(e) {
  return e.split("-")[0];
}
var sd = Math.max, h0 = Math.min, mf = Math.round;
function n1() {
  var e = navigator.userAgentData;
  return e != null && e.brands && Array.isArray(e.brands) ? e.brands.map(function(r) {
    return r.brand + "/" + r.version;
  }).join(" ") : navigator.userAgent;
}
function j$() {
  return !/^((?!chrome|android).)*safari/i.test(n1());
}
function vf(e, r, s) {
  r === void 0 && (r = !1), s === void 0 && (s = !1);
  var u = e.getBoundingClientRect(), f = 1, v = 1;
  r && ii(e) && (f = e.offsetWidth > 0 && mf(u.width) / e.offsetWidth || 1, v = e.offsetHeight > 0 && mf(u.height) / e.offsetHeight || 1);
  var m = ld(e) ? Fa(e) : window, y = m.visualViewport, b = !j$() && s, S = (u.left + (b && y ? y.offsetLeft : 0)) / f, E = (u.top + (b && y ? y.offsetTop : 0)) / v, k = u.width / f, D = u.height / v;
  return {
    width: k,
    height: D,
    top: E,
    right: S + k,
    bottom: E + D,
    left: S,
    x: S,
    y: E
  };
}
function N1(e) {
  var r = vf(e), s = e.offsetWidth, u = e.offsetHeight;
  return Math.abs(r.width - s) <= 1 && (s = r.width), Math.abs(r.height - u) <= 1 && (u = r.height), {
    x: e.offsetLeft,
    y: e.offsetTop,
    width: s,
    height: u
  };
}
function U$(e, r) {
  var s = r.getRootNode && r.getRootNode();
  if (e.contains(r))
    return !0;
  if (s && k1(s)) {
    var u = r;
    do {
      if (u && e.isSameNode(u))
        return !0;
      u = u.parentNode || u.host;
    } while (u);
  }
  return !1;
}
function kl(e) {
  return Fa(e).getComputedStyle(e);
}
function y4(e) {
  return ["table", "td", "th"].indexOf(Ds(e)) >= 0;
}
function Vc(e) {
  return ((ld(e) ? e.ownerDocument : (
    // $FlowFixMe[prop-missing]
    e.document
  )) || window.document).documentElement;
}
function P0(e) {
  return Ds(e) === "html" ? e : (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    e.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    e.parentNode || // DOM Element detected
    (k1(e) ? e.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    Vc(e)
  );
}
function Ck(e) {
  return !ii(e) || // https://github.com/popperjs/popper-core/issues/837
  kl(e).position === "fixed" ? null : e.offsetParent;
}
function b4(e) {
  var r = /firefox/i.test(n1()), s = /Trident/i.test(n1());
  if (s && ii(e)) {
    var u = kl(e);
    if (u.position === "fixed")
      return null;
  }
  var f = P0(e);
  for (k1(f) && (f = f.host); ii(f) && ["html", "body"].indexOf(Ds(f)) < 0; ) {
    var v = kl(f);
    if (v.transform !== "none" || v.perspective !== "none" || v.contain === "paint" || ["transform", "perspective"].indexOf(v.willChange) !== -1 || r && v.willChange === "filter" || r && v.filter && v.filter !== "none")
      return f;
    f = f.parentNode;
  }
  return null;
}
function Rh(e) {
  for (var r = Fa(e), s = Ck(e); s && y4(s) && kl(s).position === "static"; )
    s = Ck(s);
  return s && (Ds(s) === "html" || Ds(s) === "body" && kl(s).position === "static") ? r : s || b4(e) || r;
}
function $1(e) {
  return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y";
}
function eh(e, r, s) {
  return sd(e, h0(r, s));
}
function C4(e, r, s) {
  var u = eh(e, r, s);
  return u > s ? s : u;
}
function V$() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function H$(e) {
  return Object.assign({}, V$(), e);
}
function W$(e, r) {
  return r.reduce(function(s, u) {
    return s[u] = e, s;
  }, {});
}
var x4 = function(r, s) {
  return r = typeof r == "function" ? r(Object.assign({}, s.rects, {
    placement: s.placement
  })) : r, H$(typeof r != "number" ? r : W$(r, Eh));
};
function S4(e) {
  var r, s = e.state, u = e.name, f = e.options, v = s.elements.arrow, m = s.modifiersData.popperOffsets, y = ks(s.placement), b = $1(y), S = [Ra, ci].indexOf(y) >= 0, E = S ? "height" : "width";
  if (!(!v || !m)) {
    var k = x4(f.padding, s), D = N1(v), M = b === "y" ? Ea : Ra, P = b === "y" ? li : ci, L = s.rects.reference[E] + s.rects.reference[b] - m[b] - s.rects.popper[E], w = m[b] - s.rects.reference[b], _ = Rh(v), V = _ ? b === "y" ? _.clientHeight || 0 : _.clientWidth || 0 : 0, A = L / 2 - w / 2, j = k[M], U = V - D[E] - k[P], $ = V / 2 - D[E] / 2 + A, F = eh(j, $, U), G = b;
    s.modifiersData[u] = (r = {}, r[G] = F, r.centerOffset = F - $, r);
  }
}
function T4(e) {
  var r = e.state, s = e.options, u = s.element, f = u === void 0 ? "[data-popper-arrow]" : u;
  f != null && (typeof f == "string" && (f = r.elements.popper.querySelector(f), !f) || U$(r.elements.popper, f) && (r.elements.arrow = f));
}
const E4 = {
  name: "arrow",
  enabled: !0,
  phase: "main",
  fn: S4,
  effect: T4,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
function hf(e) {
  return e.split("-")[1];
}
var R4 = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function O4(e, r) {
  var s = e.x, u = e.y, f = r.devicePixelRatio || 1;
  return {
    x: mf(s * f) / f || 0,
    y: mf(u * f) / f || 0
  };
}
function xk(e) {
  var r, s = e.popper, u = e.popperRect, f = e.placement, v = e.variation, m = e.offsets, y = e.position, b = e.gpuAcceleration, S = e.adaptive, E = e.roundOffsets, k = e.isFixed, D = m.x, M = D === void 0 ? 0 : D, P = m.y, L = P === void 0 ? 0 : P, w = typeof E == "function" ? E({
    x: M,
    y: L
  }) : {
    x: M,
    y: L
  };
  M = w.x, L = w.y;
  var _ = m.hasOwnProperty("x"), V = m.hasOwnProperty("y"), A = Ra, j = Ea, U = window;
  if (S) {
    var $ = Rh(s), F = "clientHeight", G = "clientWidth";
    if ($ === Fa(s) && ($ = Vc(s), kl($).position !== "static" && y === "absolute" && (F = "scrollHeight", G = "scrollWidth")), $ = $, f === Ea || (f === Ra || f === ci) && v === uh) {
      j = li;
      var Y = k && $ === U && U.visualViewport ? U.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        $[F]
      );
      L -= Y - u.height, L *= b ? 1 : -1;
    }
    if (f === Ra || (f === Ea || f === li) && v === uh) {
      A = ci;
      var Q = k && $ === U && U.visualViewport ? U.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        $[G]
      );
      M -= Q - u.width, M *= b ? 1 : -1;
    }
  }
  var q = Object.assign({
    position: y
  }, S && R4), re = E === !0 ? O4({
    x: M,
    y: L
  }, Fa(s)) : {
    x: M,
    y: L
  };
  if (M = re.x, L = re.y, b) {
    var ee;
    return Object.assign({}, q, (ee = {}, ee[j] = V ? "0" : "", ee[A] = _ ? "0" : "", ee.transform = (U.devicePixelRatio || 1) <= 1 ? "translate(" + M + "px, " + L + "px)" : "translate3d(" + M + "px, " + L + "px, 0)", ee));
  }
  return Object.assign({}, q, (r = {}, r[j] = V ? L + "px" : "", r[A] = _ ? M + "px" : "", r.transform = "", r));
}
function w4(e) {
  var r = e.state, s = e.options, u = s.gpuAcceleration, f = u === void 0 ? !0 : u, v = s.adaptive, m = v === void 0 ? !0 : v, y = s.roundOffsets, b = y === void 0 ? !0 : y, S = {
    placement: ks(r.placement),
    variation: hf(r.placement),
    popper: r.elements.popper,
    popperRect: r.rects.popper,
    gpuAcceleration: f,
    isFixed: r.options.strategy === "fixed"
  };
  r.modifiersData.popperOffsets != null && (r.styles.popper = Object.assign({}, r.styles.popper, xk(Object.assign({}, S, {
    offsets: r.modifiersData.popperOffsets,
    position: r.options.strategy,
    adaptive: m,
    roundOffsets: b
  })))), r.modifiersData.arrow != null && (r.styles.arrow = Object.assign({}, r.styles.arrow, xk(Object.assign({}, S, {
    offsets: r.modifiersData.arrow,
    position: "absolute",
    adaptive: !1,
    roundOffsets: b
  })))), r.attributes.popper = Object.assign({}, r.attributes.popper, {
    "data-popper-placement": r.placement
  });
}
const k4 = {
  name: "computeStyles",
  enabled: !0,
  phase: "beforeWrite",
  fn: w4,
  data: {}
};
var Lb = {
  passive: !0
};
function N4(e) {
  var r = e.state, s = e.instance, u = e.options, f = u.scroll, v = f === void 0 ? !0 : f, m = u.resize, y = m === void 0 ? !0 : m, b = Fa(r.elements.popper), S = [].concat(r.scrollParents.reference, r.scrollParents.popper);
  return v && S.forEach(function(E) {
    E.addEventListener("scroll", s.update, Lb);
  }), y && b.addEventListener("resize", s.update, Lb), function() {
    v && S.forEach(function(E) {
      E.removeEventListener("scroll", s.update, Lb);
    }), y && b.removeEventListener("resize", s.update, Lb);
  };
}
const $4 = {
  name: "eventListeners",
  enabled: !0,
  phase: "write",
  fn: function() {
  },
  effect: N4,
  data: {}
};
var M4 = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function t0(e) {
  return e.replace(/left|right|bottom|top/g, function(r) {
    return M4[r];
  });
}
var D4 = {
  start: "end",
  end: "start"
};
function Sk(e) {
  return e.replace(/start|end/g, function(r) {
    return D4[r];
  });
}
function M1(e) {
  var r = Fa(e), s = r.pageXOffset, u = r.pageYOffset;
  return {
    scrollLeft: s,
    scrollTop: u
  };
}
function D1(e) {
  return vf(Vc(e)).left + M1(e).scrollLeft;
}
function P4(e, r) {
  var s = Fa(e), u = Vc(e), f = s.visualViewport, v = u.clientWidth, m = u.clientHeight, y = 0, b = 0;
  if (f) {
    v = f.width, m = f.height;
    var S = j$();
    (S || !S && r === "fixed") && (y = f.offsetLeft, b = f.offsetTop);
  }
  return {
    width: v,
    height: m,
    x: y + D1(e),
    y: b
  };
}
function L4(e) {
  var r, s = Vc(e), u = M1(e), f = (r = e.ownerDocument) == null ? void 0 : r.body, v = sd(s.scrollWidth, s.clientWidth, f ? f.scrollWidth : 0, f ? f.clientWidth : 0), m = sd(s.scrollHeight, s.clientHeight, f ? f.scrollHeight : 0, f ? f.clientHeight : 0), y = -u.scrollLeft + D1(e), b = -u.scrollTop;
  return kl(f || s).direction === "rtl" && (y += sd(s.clientWidth, f ? f.clientWidth : 0) - v), {
    width: v,
    height: m,
    x: y,
    y: b
  };
}
function P1(e) {
  var r = kl(e), s = r.overflow, u = r.overflowX, f = r.overflowY;
  return /auto|scroll|overlay|hidden/.test(s + f + u);
}
function G$(e) {
  return ["html", "body", "#document"].indexOf(Ds(e)) >= 0 ? e.ownerDocument.body : ii(e) && P1(e) ? e : G$(P0(e));
}
function th(e, r) {
  var s;
  r === void 0 && (r = []);
  var u = G$(e), f = u === ((s = e.ownerDocument) == null ? void 0 : s.body), v = Fa(u), m = f ? [v].concat(v.visualViewport || [], P1(u) ? u : []) : u, y = r.concat(m);
  return f ? y : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    y.concat(th(P0(m)))
  );
}
function o1(e) {
  return Object.assign({}, e, {
    left: e.x,
    top: e.y,
    right: e.x + e.width,
    bottom: e.y + e.height
  });
}
function I4(e, r) {
  var s = vf(e, !1, r === "fixed");
  return s.top = s.top + e.clientTop, s.left = s.left + e.clientLeft, s.bottom = s.top + e.clientHeight, s.right = s.left + e.clientWidth, s.width = e.clientWidth, s.height = e.clientHeight, s.x = s.left, s.y = s.top, s;
}
function Tk(e, r, s) {
  return r === z$ ? o1(P4(e, s)) : ld(r) ? I4(r, s) : o1(L4(Vc(e)));
}
function _4(e) {
  var r = th(P0(e)), s = ["absolute", "fixed"].indexOf(kl(e).position) >= 0, u = s && ii(e) ? Rh(e) : e;
  return ld(u) ? r.filter(function(f) {
    return ld(f) && U$(f, u) && Ds(f) !== "body";
  }) : [];
}
function A4(e, r, s, u) {
  var f = r === "clippingParents" ? _4(e) : [].concat(r), v = [].concat(f, [s]), m = v[0], y = v.reduce(function(b, S) {
    var E = Tk(e, S, u);
    return b.top = sd(E.top, b.top), b.right = h0(E.right, b.right), b.bottom = h0(E.bottom, b.bottom), b.left = sd(E.left, b.left), b;
  }, Tk(e, m, u));
  return y.width = y.right - y.left, y.height = y.bottom - y.top, y.x = y.left, y.y = y.top, y;
}
function q$(e) {
  var r = e.reference, s = e.element, u = e.placement, f = u ? ks(u) : null, v = u ? hf(u) : null, m = r.x + r.width / 2 - s.width / 2, y = r.y + r.height / 2 - s.height / 2, b;
  switch (f) {
    case Ea:
      b = {
        x: m,
        y: r.y - s.height
      };
      break;
    case li:
      b = {
        x: m,
        y: r.y + r.height
      };
      break;
    case ci:
      b = {
        x: r.x + r.width,
        y
      };
      break;
    case Ra:
      b = {
        x: r.x - s.width,
        y
      };
      break;
    default:
      b = {
        x: r.x,
        y: r.y
      };
  }
  var S = f ? $1(f) : null;
  if (S != null) {
    var E = S === "y" ? "height" : "width";
    switch (v) {
      case ff:
        b[S] = b[S] - (r[E] / 2 - s[E] / 2);
        break;
      case uh:
        b[S] = b[S] + (r[E] / 2 - s[E] / 2);
        break;
    }
  }
  return b;
}
function dh(e, r) {
  r === void 0 && (r = {});
  var s = r, u = s.placement, f = u === void 0 ? e.placement : u, v = s.strategy, m = v === void 0 ? e.strategy : v, y = s.boundary, b = y === void 0 ? o4 : y, S = s.rootBoundary, E = S === void 0 ? z$ : S, k = s.elementContext, D = k === void 0 ? Bv : k, M = s.altBoundary, P = M === void 0 ? !1 : M, L = s.padding, w = L === void 0 ? 0 : L, _ = H$(typeof w != "number" ? w : W$(w, Eh)), V = D === Bv ? r4 : Bv, A = e.rects.popper, j = e.elements[P ? V : D], U = A4(ld(j) ? j : j.contextElement || Vc(e.elements.popper), b, E, m), $ = vf(e.elements.reference), F = q$({
    reference: $,
    element: A,
    strategy: "absolute",
    placement: f
  }), G = o1(Object.assign({}, A, F)), Y = D === Bv ? G : $, Q = {
    top: U.top - Y.top + _.top,
    bottom: Y.bottom - U.bottom + _.bottom,
    left: U.left - Y.left + _.left,
    right: Y.right - U.right + _.right
  }, q = e.modifiersData.offset;
  if (D === Bv && q) {
    var re = q[f];
    Object.keys(Q).forEach(function(ee) {
      var J = [ci, li].indexOf(ee) >= 0 ? 1 : -1, ce = [Ea, li].indexOf(ee) >= 0 ? "y" : "x";
      Q[ee] += re[ce] * J;
    });
  }
  return Q;
}
function B4(e, r) {
  r === void 0 && (r = {});
  var s = r, u = s.placement, f = s.boundary, v = s.rootBoundary, m = s.padding, y = s.flipVariations, b = s.allowedAutoPlacements, S = b === void 0 ? F$ : b, E = hf(u), k = E ? y ? bk : bk.filter(function(P) {
    return hf(P) === E;
  }) : Eh, D = k.filter(function(P) {
    return S.indexOf(P) >= 0;
  });
  D.length === 0 && (D = k);
  var M = D.reduce(function(P, L) {
    return P[L] = dh(e, {
      placement: L,
      boundary: f,
      rootBoundary: v,
      padding: m
    })[ks(L)], P;
  }, {});
  return Object.keys(M).sort(function(P, L) {
    return M[P] - M[L];
  });
}
function z4(e) {
  if (ks(e) === w1)
    return [];
  var r = t0(e);
  return [Sk(e), r, Sk(r)];
}
function F4(e) {
  var r = e.state, s = e.options, u = e.name;
  if (!r.modifiersData[u]._skip) {
    for (var f = s.mainAxis, v = f === void 0 ? !0 : f, m = s.altAxis, y = m === void 0 ? !0 : m, b = s.fallbackPlacements, S = s.padding, E = s.boundary, k = s.rootBoundary, D = s.altBoundary, M = s.flipVariations, P = M === void 0 ? !0 : M, L = s.allowedAutoPlacements, w = r.options.placement, _ = ks(w), V = _ === w, A = b || (V || !P ? [t0(w)] : z4(w)), j = [w].concat(A).reduce(function(De, Ye) {
      return De.concat(ks(Ye) === w1 ? B4(r, {
        placement: Ye,
        boundary: E,
        rootBoundary: k,
        padding: S,
        flipVariations: P,
        allowedAutoPlacements: L
      }) : Ye);
    }, []), U = r.rects.reference, $ = r.rects.popper, F = /* @__PURE__ */ new Map(), G = !0, Y = j[0], Q = 0; Q < j.length; Q++) {
      var q = j[Q], re = ks(q), ee = hf(q) === ff, J = [Ea, li].indexOf(re) >= 0, ce = J ? "width" : "height", de = dh(r, {
        placement: q,
        boundary: E,
        rootBoundary: k,
        altBoundary: D,
        padding: S
      }), fe = J ? ee ? ci : Ra : ee ? li : Ea;
      U[ce] > $[ce] && (fe = t0(fe));
      var K = t0(fe), ne = [];
      if (v && ne.push(de[re] <= 0), y && ne.push(de[fe] <= 0, de[K] <= 0), ne.every(function(De) {
        return De;
      })) {
        Y = q, G = !1;
        break;
      }
      F.set(q, ne);
    }
    if (G)
      for (var ve = P ? 3 : 1, Ke = function(Ye) {
        var ke = j.find(function(lt) {
          var xe = F.get(lt);
          if (xe)
            return xe.slice(0, Ye).every(function(ze) {
              return ze;
            });
        });
        if (ke)
          return Y = ke, "break";
      }, tt = ve; tt > 0; tt--) {
        var Ie = Ke(tt);
        if (Ie === "break")
          break;
      }
    r.placement !== Y && (r.modifiersData[u]._skip = !0, r.placement = Y, r.reset = !0);
  }
}
const j4 = {
  name: "flip",
  enabled: !0,
  phase: "main",
  fn: F4,
  requiresIfExists: ["offset"],
  data: {
    _skip: !1
  }
};
function Ek(e, r, s) {
  return s === void 0 && (s = {
    x: 0,
    y: 0
  }), {
    top: e.top - r.height - s.y,
    right: e.right - r.width + s.x,
    bottom: e.bottom - r.height + s.y,
    left: e.left - r.width - s.x
  };
}
function Rk(e) {
  return [Ea, ci, li, Ra].some(function(r) {
    return e[r] >= 0;
  });
}
function U4(e) {
  var r = e.state, s = e.name, u = r.rects.reference, f = r.rects.popper, v = r.modifiersData.preventOverflow, m = dh(r, {
    elementContext: "reference"
  }), y = dh(r, {
    altBoundary: !0
  }), b = Ek(m, u), S = Ek(y, f, v), E = Rk(b), k = Rk(S);
  r.modifiersData[s] = {
    referenceClippingOffsets: b,
    popperEscapeOffsets: S,
    isReferenceHidden: E,
    hasPopperEscaped: k
  }, r.attributes.popper = Object.assign({}, r.attributes.popper, {
    "data-popper-reference-hidden": E,
    "data-popper-escaped": k
  });
}
const V4 = {
  name: "hide",
  enabled: !0,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: U4
};
function H4(e, r, s) {
  var u = ks(e), f = [Ra, Ea].indexOf(u) >= 0 ? -1 : 1, v = typeof s == "function" ? s(Object.assign({}, r, {
    placement: e
  })) : s, m = v[0], y = v[1];
  return m = m || 0, y = (y || 0) * f, [Ra, ci].indexOf(u) >= 0 ? {
    x: y,
    y: m
  } : {
    x: m,
    y
  };
}
function W4(e) {
  var r = e.state, s = e.options, u = e.name, f = s.offset, v = f === void 0 ? [0, 0] : f, m = F$.reduce(function(E, k) {
    return E[k] = H4(k, r.rects, v), E;
  }, {}), y = m[r.placement], b = y.x, S = y.y;
  r.modifiersData.popperOffsets != null && (r.modifiersData.popperOffsets.x += b, r.modifiersData.popperOffsets.y += S), r.modifiersData[u] = m;
}
const G4 = {
  name: "offset",
  enabled: !0,
  phase: "main",
  requires: ["popperOffsets"],
  fn: W4
};
function q4(e) {
  var r = e.state, s = e.name;
  r.modifiersData[s] = q$({
    reference: r.rects.reference,
    element: r.rects.popper,
    strategy: "absolute",
    placement: r.placement
  });
}
const Y4 = {
  name: "popperOffsets",
  enabled: !0,
  phase: "read",
  fn: q4,
  data: {}
};
function K4(e) {
  return e === "x" ? "y" : "x";
}
function X4(e) {
  var r = e.state, s = e.options, u = e.name, f = s.mainAxis, v = f === void 0 ? !0 : f, m = s.altAxis, y = m === void 0 ? !1 : m, b = s.boundary, S = s.rootBoundary, E = s.altBoundary, k = s.padding, D = s.tether, M = D === void 0 ? !0 : D, P = s.tetherOffset, L = P === void 0 ? 0 : P, w = dh(r, {
    boundary: b,
    rootBoundary: S,
    padding: k,
    altBoundary: E
  }), _ = ks(r.placement), V = hf(r.placement), A = !V, j = $1(_), U = K4(j), $ = r.modifiersData.popperOffsets, F = r.rects.reference, G = r.rects.popper, Y = typeof L == "function" ? L(Object.assign({}, r.rects, {
    placement: r.placement
  })) : L, Q = typeof Y == "number" ? {
    mainAxis: Y,
    altAxis: Y
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, Y), q = r.modifiersData.offset ? r.modifiersData.offset[r.placement] : null, re = {
    x: 0,
    y: 0
  };
  if ($) {
    if (v) {
      var ee, J = j === "y" ? Ea : Ra, ce = j === "y" ? li : ci, de = j === "y" ? "height" : "width", fe = $[j], K = fe + w[J], ne = fe - w[ce], ve = M ? -G[de] / 2 : 0, Ke = V === ff ? F[de] : G[de], tt = V === ff ? -G[de] : -F[de], Ie = r.elements.arrow, De = M && Ie ? N1(Ie) : {
        width: 0,
        height: 0
      }, Ye = r.modifiersData["arrow#persistent"] ? r.modifiersData["arrow#persistent"].padding : V$(), ke = Ye[J], lt = Ye[ce], xe = eh(0, F[de], De[de]), ze = A ? F[de] / 2 - ve - xe - ke - Q.mainAxis : Ke - xe - ke - Q.mainAxis, ut = A ? -F[de] / 2 + ve + xe + lt + Q.mainAxis : tt + xe + lt + Q.mainAxis, Xe = r.elements.arrow && Rh(r.elements.arrow), rt = Xe ? j === "y" ? Xe.clientTop || 0 : Xe.clientLeft || 0 : 0, nt = (ee = q == null ? void 0 : q[j]) != null ? ee : 0, le = fe + ze - nt - rt, $e = fe + ut - nt, Oe = eh(M ? h0(K, le) : K, fe, M ? sd(ne, $e) : ne);
      $[j] = Oe, re[j] = Oe - fe;
    }
    if (y) {
      var dt, it = j === "x" ? Ea : Ra, zt = j === "x" ? li : ci, Dt = $[U], ht = U === "y" ? "height" : "width", Tt = Dt + w[it], Lt = Dt - w[zt], At = [Ea, Ra].indexOf(_) !== -1, tn = (dt = q == null ? void 0 : q[U]) != null ? dt : 0, an = At ? Tt : Dt - F[ht] - G[ht] - tn + Q.altAxis, Qt = At ? Dt + F[ht] + G[ht] - tn - Q.altAxis : Lt, Ce = M && At ? C4(an, Dt, Qt) : eh(M ? an : Tt, Dt, M ? Qt : Lt);
      $[U] = Ce, re[U] = Ce - Dt;
    }
    r.modifiersData[u] = re;
  }
}
const Q4 = {
  name: "preventOverflow",
  enabled: !0,
  phase: "main",
  fn: X4,
  requiresIfExists: ["offset"]
};
function Z4(e) {
  return {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  };
}
function J4(e) {
  return e === Fa(e) || !ii(e) ? M1(e) : Z4(e);
}
function e5(e) {
  var r = e.getBoundingClientRect(), s = mf(r.width) / e.offsetWidth || 1, u = mf(r.height) / e.offsetHeight || 1;
  return s !== 1 || u !== 1;
}
function t5(e, r, s) {
  s === void 0 && (s = !1);
  var u = ii(r), f = ii(r) && e5(r), v = Vc(r), m = vf(e, f, s), y = {
    scrollLeft: 0,
    scrollTop: 0
  }, b = {
    x: 0,
    y: 0
  };
  return (u || !u && !s) && ((Ds(r) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
  P1(v)) && (y = J4(r)), ii(r) ? (b = vf(r, !0), b.x += r.clientLeft, b.y += r.clientTop) : v && (b.x = D1(v))), {
    x: m.left + y.scrollLeft - b.x,
    y: m.top + y.scrollTop - b.y,
    width: m.width,
    height: m.height
  };
}
function n5(e) {
  var r = /* @__PURE__ */ new Map(), s = /* @__PURE__ */ new Set(), u = [];
  e.forEach(function(v) {
    r.set(v.name, v);
  });
  function f(v) {
    s.add(v.name);
    var m = [].concat(v.requires || [], v.requiresIfExists || []);
    m.forEach(function(y) {
      if (!s.has(y)) {
        var b = r.get(y);
        b && f(b);
      }
    }), u.push(v);
  }
  return e.forEach(function(v) {
    s.has(v.name) || f(v);
  }), u;
}
function o5(e) {
  var r = n5(e);
  return m4.reduce(function(s, u) {
    return s.concat(r.filter(function(f) {
      return f.phase === u;
    }));
  }, []);
}
function r5(e) {
  var r;
  return function() {
    return r || (r = new Promise(function(s) {
      Promise.resolve().then(function() {
        r = void 0, s(e());
      });
    })), r;
  };
}
function a5(e) {
  var r = e.reduce(function(s, u) {
    var f = s[u.name];
    return s[u.name] = f ? Object.assign({}, f, u, {
      options: Object.assign({}, f.options, u.options),
      data: Object.assign({}, f.data, u.data)
    }) : u, s;
  }, {});
  return Object.keys(r).map(function(s) {
    return r[s];
  });
}
var Ok = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function wk() {
  for (var e = arguments.length, r = new Array(e), s = 0; s < e; s++)
    r[s] = arguments[s];
  return !r.some(function(u) {
    return !(u && typeof u.getBoundingClientRect == "function");
  });
}
function i5(e) {
  e === void 0 && (e = {});
  var r = e, s = r.defaultModifiers, u = s === void 0 ? [] : s, f = r.defaultOptions, v = f === void 0 ? Ok : f;
  return function(y, b, S) {
    S === void 0 && (S = v);
    var E = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, Ok, v),
      modifiersData: {},
      elements: {
        reference: y,
        popper: b
      },
      attributes: {},
      styles: {}
    }, k = [], D = !1, M = {
      state: E,
      setOptions: function(_) {
        var V = typeof _ == "function" ? _(E.options) : _;
        L(), E.options = Object.assign({}, v, E.options, V), E.scrollParents = {
          reference: ld(y) ? th(y) : y.contextElement ? th(y.contextElement) : [],
          popper: th(b)
        };
        var A = o5(a5([].concat(u, E.options.modifiers)));
        return E.orderedModifiers = A.filter(function(j) {
          return j.enabled;
        }), P(), M.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function() {
        if (!D) {
          var _ = E.elements, V = _.reference, A = _.popper;
          if (wk(V, A)) {
            E.rects = {
              reference: t5(V, Rh(A), E.options.strategy === "fixed"),
              popper: N1(A)
            }, E.reset = !1, E.placement = E.options.placement, E.orderedModifiers.forEach(function(Q) {
              return E.modifiersData[Q.name] = Object.assign({}, Q.data);
            });
            for (var j = 0; j < E.orderedModifiers.length; j++) {
              if (E.reset === !0) {
                E.reset = !1, j = -1;
                continue;
              }
              var U = E.orderedModifiers[j], $ = U.fn, F = U.options, G = F === void 0 ? {} : F, Y = U.name;
              typeof $ == "function" && (E = $({
                state: E,
                options: G,
                name: Y,
                instance: M
              }) || E);
            }
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: r5(function() {
        return new Promise(function(w) {
          M.forceUpdate(), w(E);
        });
      }),
      destroy: function() {
        L(), D = !0;
      }
    };
    if (!wk(y, b))
      return M;
    M.setOptions(S).then(function(w) {
      !D && S.onFirstUpdate && S.onFirstUpdate(w);
    });
    function P() {
      E.orderedModifiers.forEach(function(w) {
        var _ = w.name, V = w.options, A = V === void 0 ? {} : V, j = w.effect;
        if (typeof j == "function") {
          var U = j({
            state: E,
            name: _,
            instance: M,
            options: A
          }), $ = function() {
          };
          k.push(U || $);
        }
      });
    }
    function L() {
      k.forEach(function(w) {
        return w();
      }), k = [];
    }
    return M;
  };
}
var s5 = [$4, Y4, k4, g4, G4, j4, Q4, E4, V4], l5 = /* @__PURE__ */ i5({
  defaultModifiers: s5
});
const Y$ = "Popper";
function c5(e) {
  return B$(Y$, e);
}
zV(Y$, ["root"]);
const u5 = ["anchorEl", "children", "direction", "disablePortal", "modifiers", "open", "placement", "popperOptions", "popperRef", "slotProps", "slots", "TransitionProps", "ownerState"], d5 = ["anchorEl", "children", "container", "direction", "disablePortal", "keepMounted", "modifiers", "open", "placement", "popperOptions", "popperRef", "style", "transition", "slotProps", "slots"];
function p5(e, r) {
  if (r === "ltr")
    return e;
  switch (e) {
    case "bottom-end":
      return "bottom-start";
    case "bottom-start":
      return "bottom-end";
    case "top-end":
      return "top-start";
    case "top-start":
      return "top-end";
    default:
      return e;
  }
}
function g0(e) {
  return typeof e == "function" ? e() : e;
}
function L0(e) {
  return e.nodeType !== void 0;
}
function f5(e) {
  return !L0(e);
}
const m5 = () => Ue({
  root: ["root"]
}, YU(c5)), v5 = {}, h5 = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u;
  const {
    anchorEl: f,
    children: v,
    direction: m,
    disablePortal: y,
    modifiers: b,
    open: S,
    placement: E,
    popperOptions: k,
    popperRef: D,
    slotProps: M = {},
    slots: P = {},
    TransitionProps: L
    // @ts-ignore internal logic
    // prevent from spreading to DOM, it can come from the parent component e.g. Select.
  } = r, w = me(r, u5), _ = O.useRef(null), V = yn(_, s), A = O.useRef(null), j = yn(A, D), U = O.useRef(j);
  ur(() => {
    U.current = j;
  }, [j]), O.useImperativeHandle(D, () => A.current, []);
  const $ = p5(E, m), [F, G] = O.useState($), [Y, Q] = O.useState(g0(f));
  O.useEffect(() => {
    A.current && A.current.forceUpdate();
  }), O.useEffect(() => {
    f && Q(g0(f));
  }, [f]), ur(() => {
    if (!Y || !S)
      return;
    const ce = (K) => {
      G(K.placement);
    };
    if (process.env.NODE_ENV !== "production" && Y && L0(Y) && Y.nodeType === 1) {
      const K = Y.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && K.top === 0 && K.left === 0 && K.right === 0 && K.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    let de = [{
      name: "preventOverflow",
      options: {
        altBoundary: y
      }
    }, {
      name: "flip",
      options: {
        altBoundary: y
      }
    }, {
      name: "onUpdate",
      enabled: !0,
      phase: "afterWrite",
      fn: ({
        state: K
      }) => {
        ce(K);
      }
    }];
    b != null && (de = de.concat(b)), k && k.modifiers != null && (de = de.concat(k.modifiers));
    const fe = l5(Y, _.current, C({
      placement: $
    }, k, {
      modifiers: de
    }));
    return U.current(fe), () => {
      fe.destroy(), U.current(null);
    };
  }, [Y, y, b, S, k, $]);
  const q = {
    placement: F
  };
  L !== null && (q.TransitionProps = L);
  const re = m5(), ee = (u = P.root) != null ? u : "div", J = po({
    elementType: ee,
    externalSlotProps: M.root,
    externalForwardedProps: w,
    additionalProps: {
      role: "tooltip",
      ref: V
    },
    ownerState: r,
    className: re.root
  });
  return /* @__PURE__ */ z(ee, C({}, J, {
    children: typeof v == "function" ? v(q) : v
  }));
}), K$ = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const {
    anchorEl: u,
    children: f,
    container: v,
    direction: m = "ltr",
    disablePortal: y = !1,
    keepMounted: b = !1,
    modifiers: S,
    open: E,
    placement: k = "bottom",
    popperOptions: D = v5,
    popperRef: M,
    style: P,
    transition: L = !1,
    slotProps: w = {},
    slots: _ = {}
  } = r, V = me(r, d5), [A, j] = O.useState(!0), U = () => {
    j(!1);
  }, $ = () => {
    j(!0);
  };
  if (!b && !E && (!L || A))
    return null;
  let F;
  if (v)
    F = v;
  else if (u) {
    const Q = g0(u);
    F = Q && L0(Q) ? Wn(Q).body : Wn(null).body;
  }
  const G = !E && b && (!L || A) ? "none" : void 0, Y = L ? {
    in: E,
    onEnter: U,
    onExited: $
  } : void 0;
  return /* @__PURE__ */ z(ch, {
    disablePortal: y,
    container: F,
    children: /* @__PURE__ */ z(h5, C({
      anchorEl: u,
      direction: m,
      disablePortal: y,
      modifiers: S,
      ref: s,
      open: L ? !A : E,
      placement: k,
      popperOptions: D,
      popperRef: M,
      slotProps: w,
      slots: _
    }, V, {
      style: C({
        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
        position: "fixed",
        // Fix Popper.js display issue
        top: 0,
        left: 0,
        display: G
      }, P),
      TransitionProps: Y,
      children: f
    }))
  });
});
process.env.NODE_ENV !== "production" && (K$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: jo(n.oneOfType([$s, n.object, n.func]), (e) => {
    if (e.open) {
      const r = g0(e.anchorEl);
      if (r && L0(r) && r.nodeType === 1) {
        const s = r.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && s.top === 0 && s.left === 0 && s.right === 0 && s.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!r || typeof r.getBoundingClientRect != "function" || f5(r) && r.contextElement != null && r.contextElement.nodeType !== 1)
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "It should be an HTML element instance or a virtualElement ", "(https://popper.js.org/docs/v2/virtual-elements/)."].join(`
`));
    }
    return null;
  }),
  /**
   * Popper render function or node.
   */
  children: n.oneOfType([n.node, n.func]),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: n.oneOfType([$s, n.func]),
  /**
   * Direction of the text.
   * @default 'ltr'
   */
  direction: n.oneOf(["ltr", "rtl"]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: n.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: n.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: n.arrayOf(n.shape({
    data: n.object,
    effect: n.func,
    enabled: n.bool,
    fn: n.func,
    name: n.any,
    options: n.object,
    phase: n.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: n.arrayOf(n.string),
    requiresIfExists: n.arrayOf(n.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: n.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: n.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: n.shape({
    modifiers: n.array,
    onFirstUpdate: n.func,
    placement: n.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: n.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: Tr,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: n.shape({
    root: n.oneOfType([n.func, n.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: n.shape({
    root: n.elementType
  }),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: n.bool
});
const g5 = 2;
function X$(e, r) {
  return e - r;
}
function kk(e, r) {
  var s;
  const {
    index: u
  } = (s = e.reduce((f, v, m) => {
    const y = Math.abs(r - v);
    return f === null || y < f.distance || y === f.distance ? {
      distance: y,
      index: m
    } : f;
  }, null)) != null ? s : {};
  return u;
}
function Ib(e, r) {
  if (r.current !== void 0 && e.changedTouches) {
    const s = e;
    for (let u = 0; u < s.changedTouches.length; u += 1) {
      const f = s.changedTouches[u];
      if (f.identifier === r.current)
        return {
          x: f.clientX,
          y: f.clientY
        };
    }
    return !1;
  }
  return {
    x: e.clientX,
    y: e.clientY
  };
}
function y0(e, r, s) {
  return (e - r) * 100 / (s - r);
}
function y5(e, r, s) {
  return (s - r) * e + r;
}
function b5(e) {
  if (Math.abs(e) < 1) {
    const s = e.toExponential().split("e-"), u = s[0].split(".")[1];
    return (u ? u.length : 0) + parseInt(s[1], 10);
  }
  const r = e.toString().split(".")[1];
  return r ? r.length : 0;
}
function C5(e, r, s) {
  const u = Math.round((e - s) / r) * r + s;
  return Number(u.toFixed(b5(r)));
}
function Nk({
  values: e,
  newValue: r,
  index: s
}) {
  const u = e.slice();
  return u[s] = r, u.sort(X$);
}
function _b({
  sliderRef: e,
  activeIndex: r,
  setActive: s
}) {
  var u, f;
  const v = Wn(e.current);
  if (!((u = e.current) != null && u.contains(v.activeElement)) || Number(v == null || (f = v.activeElement) == null ? void 0 : f.getAttribute("data-index")) !== r) {
    var m;
    (m = e.current) == null || m.querySelector(`[type="range"][data-index="${r}"]`).focus();
  }
  s && s(r);
}
function Ab(e, r) {
  return typeof e == "number" && typeof r == "number" ? e === r : typeof e == "object" && typeof r == "object" ? GU(e, r) : !1;
}
const x5 = {
  horizontal: {
    offset: (e) => ({
      left: `${e}%`
    }),
    leap: (e) => ({
      width: `${e}%`
    })
  },
  "horizontal-reverse": {
    offset: (e) => ({
      right: `${e}%`
    }),
    leap: (e) => ({
      width: `${e}%`
    })
  },
  vertical: {
    offset: (e) => ({
      bottom: `${e}%`
    }),
    leap: (e) => ({
      height: `${e}%`
    })
  }
}, S5 = (e) => e;
let Bb;
function $k() {
  return Bb === void 0 && (typeof CSS < "u" && typeof CSS.supports == "function" ? Bb = CSS.supports("touch-action", "none") : Bb = !0), Bb;
}
function T5(e) {
  const {
    "aria-labelledby": r,
    defaultValue: s,
    disabled: u = !1,
    disableSwap: f = !1,
    isRtl: v = !1,
    marks: m = !1,
    max: y = 100,
    min: b = 0,
    name: S,
    onChange: E,
    onChangeCommitted: k,
    orientation: D = "horizontal",
    rootRef: M,
    scale: P = S5,
    step: L = 1,
    shiftStep: w = 10,
    tabIndex: _,
    value: V
  } = e, A = O.useRef(), [j, U] = O.useState(-1), [$, F] = O.useState(-1), [G, Y] = O.useState(!1), Q = O.useRef(0), [q, re] = za({
    controlled: V,
    default: s ?? b,
    name: "Slider"
  }), ee = E && ((Ce, he, Qe) => {
    const Me = Ce.nativeEvent || Ce, et = new Me.constructor(Me.type, Me);
    Object.defineProperty(et, "target", {
      writable: !0,
      value: {
        value: he,
        name: S
      }
    }), E(et, he, Qe);
  }), J = Array.isArray(q);
  let ce = J ? q.slice().sort(X$) : [q];
  ce = ce.map((Ce) => Ce == null ? b : Lc(Ce, b, y));
  const de = m === !0 && L !== null ? [...Array(Math.floor((y - b) / L) + 1)].map((Ce, he) => ({
    value: b + L * he
  })) : m || [], fe = de.map((Ce) => Ce.value), {
    isFocusVisibleRef: K,
    onBlur: ne,
    onFocus: ve,
    ref: Ke
  } = bh(), [tt, Ie] = O.useState(-1), De = O.useRef(), Ye = yn(Ke, De), ke = yn(M, Ye), lt = (Ce) => (he) => {
    var Qe;
    const Me = Number(he.currentTarget.getAttribute("data-index"));
    ve(he), K.current === !0 && Ie(Me), F(Me), Ce == null || (Qe = Ce.onFocus) == null || Qe.call(Ce, he);
  }, xe = (Ce) => (he) => {
    var Qe;
    ne(he), K.current === !1 && Ie(-1), F(-1), Ce == null || (Qe = Ce.onBlur) == null || Qe.call(Ce, he);
  }, ze = (Ce, he) => {
    const Qe = Number(Ce.currentTarget.getAttribute("data-index")), Me = ce[Qe], et = fe.indexOf(Me);
    let qe = he;
    if (de && L == null) {
      const We = fe[fe.length - 1];
      qe > We ? qe = We : qe < fe[0] ? qe = fe[0] : qe = qe < Me ? fe[et - 1] : fe[et + 1];
    }
    if (qe = Lc(qe, b, y), J) {
      f && (qe = Lc(qe, ce[Qe - 1] || -1 / 0, ce[Qe + 1] || 1 / 0));
      const We = qe;
      qe = Nk({
        values: ce,
        newValue: qe,
        index: Qe
      });
      let we = Qe;
      f || (we = qe.indexOf(We)), _b({
        sliderRef: De,
        activeIndex: we
      });
    }
    re(qe), Ie(Qe), ee && !Ab(qe, q) && ee(Ce, qe, Qe), k && k(Ce, qe);
  }, ut = (Ce) => (he) => {
    var Qe;
    if (L !== null) {
      const Me = Number(he.currentTarget.getAttribute("data-index")), et = ce[Me];
      let qe = null;
      (he.key === "ArrowLeft" || he.key === "ArrowDown") && he.shiftKey || he.key === "PageDown" ? qe = Math.max(et - w, b) : ((he.key === "ArrowRight" || he.key === "ArrowUp") && he.shiftKey || he.key === "PageUp") && (qe = Math.min(et + w, y)), qe !== null && (ze(he, qe), he.preventDefault());
    }
    Ce == null || (Qe = Ce.onKeyDown) == null || Qe.call(Ce, he);
  };
  ur(() => {
    if (u && De.current.contains(document.activeElement)) {
      var Ce;
      (Ce = document.activeElement) == null || Ce.blur();
    }
  }, [u]), u && j !== -1 && U(-1), u && tt !== -1 && Ie(-1);
  const Xe = (Ce) => (he) => {
    var Qe;
    (Qe = Ce.onChange) == null || Qe.call(Ce, he), ze(he, he.target.valueAsNumber);
  }, rt = O.useRef();
  let nt = D;
  v && D === "horizontal" && (nt += "-reverse");
  const le = ({
    finger: Ce,
    move: he = !1
  }) => {
    const {
      current: Qe
    } = De, {
      width: Me,
      height: et,
      bottom: qe,
      left: We
    } = Qe.getBoundingClientRect();
    let we;
    nt.indexOf("vertical") === 0 ? we = (qe - Ce.y) / et : we = (Ce.x - We) / Me, nt.indexOf("-reverse") !== -1 && (we = 1 - we);
    let Fe;
    if (Fe = y5(we, b, y), L)
      Fe = C5(Fe, L, b);
    else {
      const kt = kk(fe, Fe);
      Fe = fe[kt];
    }
    Fe = Lc(Fe, b, y);
    let st = 0;
    if (J) {
      he ? st = rt.current : st = kk(ce, Fe), f && (Fe = Lc(Fe, ce[st - 1] || -1 / 0, ce[st + 1] || 1 / 0));
      const kt = Fe;
      Fe = Nk({
        values: ce,
        newValue: Fe,
        index: st
      }), f && he || (st = Fe.indexOf(kt), rt.current = st);
    }
    return {
      newValue: Fe,
      activeIndex: st
    };
  }, $e = so((Ce) => {
    const he = Ib(Ce, A);
    if (!he)
      return;
    if (Q.current += 1, Ce.type === "mousemove" && Ce.buttons === 0) {
      Oe(Ce);
      return;
    }
    const {
      newValue: Qe,
      activeIndex: Me
    } = le({
      finger: he,
      move: !0
    });
    _b({
      sliderRef: De,
      activeIndex: Me,
      setActive: U
    }), re(Qe), !G && Q.current > g5 && Y(!0), ee && !Ab(Qe, q) && ee(Ce, Qe, Me);
  }), Oe = so((Ce) => {
    const he = Ib(Ce, A);
    if (Y(!1), !he)
      return;
    const {
      newValue: Qe
    } = le({
      finger: he,
      move: !0
    });
    U(-1), Ce.type === "touchend" && F(-1), k && k(Ce, Qe), A.current = void 0, it();
  }), dt = so((Ce) => {
    if (u)
      return;
    $k() || Ce.preventDefault();
    const he = Ce.changedTouches[0];
    he != null && (A.current = he.identifier);
    const Qe = Ib(Ce, A);
    if (Qe !== !1) {
      const {
        newValue: et,
        activeIndex: qe
      } = le({
        finger: Qe
      });
      _b({
        sliderRef: De,
        activeIndex: qe,
        setActive: U
      }), re(et), ee && !Ab(et, q) && ee(Ce, et, qe);
    }
    Q.current = 0;
    const Me = Wn(De.current);
    Me.addEventListener("touchmove", $e, {
      passive: !0
    }), Me.addEventListener("touchend", Oe, {
      passive: !0
    });
  }), it = O.useCallback(() => {
    const Ce = Wn(De.current);
    Ce.removeEventListener("mousemove", $e), Ce.removeEventListener("mouseup", Oe), Ce.removeEventListener("touchmove", $e), Ce.removeEventListener("touchend", Oe);
  }, [Oe, $e]);
  O.useEffect(() => {
    const {
      current: Ce
    } = De;
    return Ce.addEventListener("touchstart", dt, {
      passive: $k()
    }), () => {
      Ce.removeEventListener("touchstart", dt), it();
    };
  }, [it, dt]), O.useEffect(() => {
    u && it();
  }, [u, it]);
  const zt = (Ce) => (he) => {
    var Qe;
    if ((Qe = Ce.onMouseDown) == null || Qe.call(Ce, he), u || he.defaultPrevented || he.button !== 0)
      return;
    he.preventDefault();
    const Me = Ib(he, A);
    if (Me !== !1) {
      const {
        newValue: qe,
        activeIndex: We
      } = le({
        finger: Me
      });
      _b({
        sliderRef: De,
        activeIndex: We,
        setActive: U
      }), re(qe), ee && !Ab(qe, q) && ee(he, qe, We);
    }
    Q.current = 0;
    const et = Wn(De.current);
    et.addEventListener("mousemove", $e, {
      passive: !0
    }), et.addEventListener("mouseup", Oe);
  }, Dt = y0(J ? ce[0] : b, b, y), ht = y0(ce[ce.length - 1], b, y) - Dt, Tt = (Ce = {}) => {
    const he = id(Ce), Qe = {
      onMouseDown: zt(he || {})
    }, Me = C({}, he, Qe);
    return C({}, Ce, {
      ref: ke
    }, Me);
  }, Lt = (Ce) => (he) => {
    var Qe;
    (Qe = Ce.onMouseOver) == null || Qe.call(Ce, he);
    const Me = Number(he.currentTarget.getAttribute("data-index"));
    F(Me);
  }, At = (Ce) => (he) => {
    var Qe;
    (Qe = Ce.onMouseLeave) == null || Qe.call(Ce, he), F(-1);
  };
  return {
    active: j,
    axis: nt,
    axisProps: x5,
    dragging: G,
    focusedThumbIndex: tt,
    getHiddenInputProps: (Ce = {}) => {
      var he;
      const Qe = id(Ce), Me = {
        onChange: Xe(Qe || {}),
        onFocus: lt(Qe || {}),
        onBlur: xe(Qe || {}),
        onKeyDown: ut(Qe || {})
      }, et = C({}, Qe, Me);
      return C({
        tabIndex: _,
        "aria-labelledby": r,
        "aria-orientation": D,
        "aria-valuemax": P(y),
        "aria-valuemin": P(b),
        name: S,
        type: "range",
        min: e.min,
        max: e.max,
        step: e.step === null && e.marks ? "any" : (he = e.step) != null ? he : void 0,
        disabled: u
      }, Ce, et, {
        style: C({}, i$, {
          direction: v ? "rtl" : "ltr",
          // So that VoiceOver's focus indicator matches the thumb's dimensions
          width: "100%",
          height: "100%"
        })
      });
    },
    getRootProps: Tt,
    getThumbProps: (Ce = {}) => {
      const he = id(Ce), Qe = {
        onMouseOver: Lt(he || {}),
        onMouseLeave: At(he || {})
      };
      return C({}, Ce, he, Qe);
    },
    marks: de,
    open: $,
    range: J,
    rootRef: ke,
    trackLeap: ht,
    trackOffset: Dt,
    values: ce,
    getThumbStyle: (Ce) => ({
      // So the non active thumb doesn't show its label on hover.
      pointerEvents: j !== -1 && j !== Ce ? "none" : void 0
    })
  };
}
function E5(e = {}) {
  const {
    autoHideDuration: r = null,
    disableWindowBlurListener: s = !1,
    onClose: u,
    open: f,
    resumeHideDuration: v
  } = e, m = El();
  O.useEffect(() => {
    if (!f)
      return;
    function _(V) {
      V.defaultPrevented || (V.key === "Escape" || V.key === "Esc") && (u == null || u(V, "escapeKeyDown"));
    }
    return document.addEventListener("keydown", _), () => {
      document.removeEventListener("keydown", _);
    };
  }, [f, u]);
  const y = so((_, V) => {
    u == null || u(_, V);
  }), b = so((_) => {
    !u || _ == null || m.start(_, () => {
      y(null, "timeout");
    });
  });
  O.useEffect(() => (f && b(r), m.clear), [f, r, b, m]);
  const S = (_) => {
    u == null || u(_, "clickaway");
  }, E = m.clear, k = O.useCallback(() => {
    r != null && b(v ?? r * 0.5);
  }, [r, v, b]), D = (_) => (V) => {
    const A = _.onBlur;
    A == null || A(V), k();
  }, M = (_) => (V) => {
    const A = _.onFocus;
    A == null || A(V), E();
  }, P = (_) => (V) => {
    const A = _.onMouseEnter;
    A == null || A(V), E();
  }, L = (_) => (V) => {
    const A = _.onMouseLeave;
    A == null || A(V), k();
  };
  return O.useEffect(() => {
    if (!s && f)
      return window.addEventListener("focus", k), window.addEventListener("blur", E), () => {
        window.removeEventListener("focus", k), window.removeEventListener("blur", E);
      };
  }, [s, f, k, E]), {
    getRootProps: (_ = {}) => {
      const V = C({}, id(e), id(_));
      return C({
        // ClickAwayListener adds an `onClick` prop which results in the alert not being announced.
        // See https://github.com/mui/material-ui/issues/29080
        role: "presentation"
      }, _, V, {
        onBlur: D(V),
        onFocus: M(V),
        onMouseEnter: P(V),
        onMouseLeave: L(V)
      });
    },
    onClickAway: S
  };
}
const R5 = ["onChange", "maxRows", "minRows", "style", "value"];
function zb(e) {
  return parseInt(e, 10) || 0;
}
const O5 = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function w5(e) {
  return e == null || Object.keys(e).length === 0 || e.outerHeightStyle === 0 && !e.overflowing;
}
const Q$ = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const {
    onChange: u,
    maxRows: f,
    minRows: v = 1,
    style: m,
    value: y
  } = r, b = me(r, R5), {
    current: S
  } = O.useRef(y != null), E = O.useRef(null), k = yn(s, E), D = O.useRef(null), M = O.useCallback(() => {
    const w = E.current, V = ta(w).getComputedStyle(w);
    if (V.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    const A = D.current;
    A.style.width = V.width, A.value = w.value || r.placeholder || "x", A.value.slice(-1) === `
` && (A.value += " ");
    const j = V.boxSizing, U = zb(V.paddingBottom) + zb(V.paddingTop), $ = zb(V.borderBottomWidth) + zb(V.borderTopWidth), F = A.scrollHeight;
    A.value = "x";
    const G = A.scrollHeight;
    let Y = F;
    v && (Y = Math.max(Number(v) * G, Y)), f && (Y = Math.min(Number(f) * G, Y)), Y = Math.max(Y, G);
    const Q = Y + (j === "border-box" ? U + $ : 0), q = Math.abs(Y - F) <= 1;
    return {
      outerHeightStyle: Q,
      overflowing: q
    };
  }, [f, v, r.placeholder]), P = O.useCallback(() => {
    const w = M();
    if (w5(w))
      return;
    const _ = E.current;
    _.style.height = `${w.outerHeightStyle}px`, _.style.overflow = w.overflowing ? "hidden" : "";
  }, [M]);
  ur(() => {
    const w = () => {
      P();
    };
    let _;
    const V = () => {
      cancelAnimationFrame(_), _ = requestAnimationFrame(() => {
        w();
      });
    }, A = gh(w), j = E.current, U = ta(j);
    U.addEventListener("resize", A);
    let $;
    return typeof ResizeObserver < "u" && ($ = new ResizeObserver(process.env.NODE_ENV === "test" ? V : w), $.observe(j)), () => {
      A.clear(), cancelAnimationFrame(_), U.removeEventListener("resize", A), $ && $.disconnect();
    };
  }, [M, P]), ur(() => {
    P();
  });
  const L = (w) => {
    S || P(), u && u(w);
  };
  return /* @__PURE__ */ gt(O.Fragment, {
    children: [/* @__PURE__ */ z("textarea", C({
      value: y,
      onChange: L,
      ref: k,
      rows: v
    }, b)), /* @__PURE__ */ z("textarea", {
      "aria-hidden": !0,
      className: r.className,
      readOnly: !0,
      ref: D,
      tabIndex: -1,
      style: C({}, O5.shadow, m, {
        paddingTop: 0,
        paddingBottom: 0
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (Q$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: n.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: n.oneOfType([n.number, n.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: n.oneOfType([n.number, n.string]),
  /**
   * @ignore
   */
  onChange: n.func,
  /**
   * @ignore
   */
  placeholder: n.string,
  /**
   * @ignore
   */
  style: n.object,
  /**
   * @ignore
   */
  value: n.oneOfType([n.arrayOf(n.string), n.number, n.string])
});
function Mk(e) {
  return typeof e.normalize < "u" ? e.normalize("NFD").replace(/[\u0300-\u036f]/g, "") : e;
}
function k5(e = {}) {
  const {
    ignoreAccents: r = !0,
    ignoreCase: s = !0,
    limit: u,
    matchFrom: f = "any",
    stringify: v,
    trim: m = !1
  } = e;
  return (y, {
    inputValue: b,
    getOptionLabel: S
  }) => {
    let E = m ? b.trim() : b;
    s && (E = E.toLowerCase()), r && (E = Mk(E));
    const k = E ? y.filter((D) => {
      let M = (v || S)(D);
      return s && (M = M.toLowerCase()), r && (M = Mk(M)), f === "start" ? M.indexOf(E) === 0 : M.indexOf(E) > -1;
    }) : y;
    return typeof u == "number" ? k.slice(0, u) : k;
  };
}
function NT(e, r) {
  for (let s = 0; s < e.length; s += 1)
    if (r(e[s]))
      return s;
  return -1;
}
const N5 = k5(), Dk = 5, $5 = (e) => {
  var r;
  return e.current !== null && ((r = e.current.parentElement) == null ? void 0 : r.contains(document.activeElement));
};
function M5(e) {
  const {
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_isActiveElementInListbox: r = $5,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_classNamePrefix: s = "Mui",
    autoComplete: u = !1,
    autoHighlight: f = !1,
    autoSelect: v = !1,
    blurOnSelect: m = !1,
    clearOnBlur: y = !e.freeSolo,
    clearOnEscape: b = !1,
    componentName: S = "useAutocomplete",
    defaultValue: E = e.multiple ? [] : null,
    disableClearable: k = !1,
    disableCloseOnSelect: D = !1,
    disabled: M,
    disabledItemsFocusable: P = !1,
    disableListWrap: L = !1,
    filterOptions: w = N5,
    filterSelectedOptions: _ = !1,
    freeSolo: V = !1,
    getOptionDisabled: A,
    getOptionKey: j,
    getOptionLabel: U = (Ne) => {
      var ue;
      return (ue = Ne.label) != null ? ue : Ne;
    },
    groupBy: $,
    handleHomeEndKeys: F = !e.freeSolo,
    id: G,
    includeInputInList: Y = !1,
    inputValue: Q,
    isOptionEqualToValue: q = (Ne, ue) => Ne === ue,
    multiple: re = !1,
    onChange: ee,
    onClose: J,
    onHighlightChange: ce,
    onInputChange: de,
    onOpen: fe,
    open: K,
    openOnFocus: ne = !1,
    options: ve,
    readOnly: Ke = !1,
    selectOnFocus: tt = !e.freeSolo,
    value: Ie
  } = e, De = Ms(G);
  let Ye = U;
  Ye = (Ne) => {
    const ue = U(Ne);
    if (typeof ue != "string") {
      if (process.env.NODE_ENV !== "production") {
        const Ge = ue === void 0 ? "undefined" : `${typeof ue} (${ue})`;
        console.error(`MUI: The \`getOptionLabel\` method of ${S} returned ${Ge} instead of a string for ${JSON.stringify(Ne)}.`);
      }
      return String(ue);
    }
    return ue;
  };
  const ke = O.useRef(!1), lt = O.useRef(!0), xe = O.useRef(null), ze = O.useRef(null), [ut, Xe] = O.useState(null), [rt, nt] = O.useState(-1), le = f ? 0 : -1, $e = O.useRef(le), [Oe, dt] = za({
    controlled: Ie,
    default: E,
    name: S
  }), [it, zt] = za({
    controlled: Q,
    default: "",
    name: S,
    state: "inputValue"
  }), [Dt, ht] = O.useState(!1), Tt = O.useCallback((Ne, ue) => {
    if (!(re ? Oe.length < ue.length : ue !== null) && !y)
      return;
    let ft;
    if (re)
      ft = "";
    else if (ue == null)
      ft = "";
    else {
      const en = Ye(ue);
      ft = typeof en == "string" ? en : "";
    }
    it !== ft && (zt(ft), de && de(Ne, ft, "reset"));
  }, [Ye, it, re, de, zt, y, Oe]), [Lt, At] = za({
    controlled: K,
    default: !1,
    name: S,
    state: "open"
  }), [tn, an] = O.useState(!0), Qt = !re && Oe != null && it === Ye(Oe), Ce = Lt && !Ke, he = Ce ? w(
    ve.filter((Ne) => !(_ && (re ? Oe : [Oe]).some((ue) => ue !== null && q(Ne, ue)))),
    // we use the empty string to manipulate `filterOptions` to not filter any options
    // i.e. the filter predicate always returns true
    {
      inputValue: Qt && tn ? "" : it,
      getOptionLabel: Ye
    }
  ) : [], Qe = v1({
    filteredOptions: he,
    value: Oe,
    inputValue: it
  });
  O.useEffect(() => {
    const Ne = Oe !== Qe.value;
    Dt && !Ne || V && !Ne || Tt(null, Oe);
  }, [Oe, Tt, Dt, Qe.value, V]);
  const Me = Lt && he.length > 0 && !Ke;
  if (process.env.NODE_ENV !== "production" && Oe !== null && !V && ve.length > 0) {
    const Ne = (re ? Oe : [Oe]).filter((ue) => !ve.some((Ge) => q(Ge, ue)));
    Ne.length > 0 && console.warn([`MUI: The value provided to ${S} is invalid.`, `None of the options match with \`${Ne.length > 1 ? JSON.stringify(Ne) : JSON.stringify(Ne[0])}\`.`, "You can use the `isOptionEqualToValue` prop to customize the equality test."].join(`
`));
  }
  const et = so((Ne) => {
    Ne === -1 ? xe.current.focus() : ut.querySelector(`[data-tag-index="${Ne}"]`).focus();
  });
  O.useEffect(() => {
    re && rt > Oe.length - 1 && (nt(-1), et(-1));
  }, [Oe, re, rt, et]);
  function qe(Ne, ue) {
    if (!ze.current || Ne < 0 || Ne >= he.length)
      return -1;
    let Ge = Ne;
    for (; ; ) {
      const ft = ze.current.querySelector(`[data-option-index="${Ge}"]`), en = P ? !1 : !ft || ft.disabled || ft.getAttribute("aria-disabled") === "true";
      if (ft && ft.hasAttribute("tabindex") && !en)
        return Ge;
      if (ue === "next" ? Ge = (Ge + 1) % he.length : Ge = (Ge - 1 + he.length) % he.length, Ge === Ne)
        return -1;
    }
  }
  const We = so(({
    event: Ne,
    index: ue,
    reason: Ge = "auto"
  }) => {
    if ($e.current = ue, ue === -1 ? xe.current.removeAttribute("aria-activedescendant") : xe.current.setAttribute("aria-activedescendant", `${De}-option-${ue}`), ce && ce(Ne, ue === -1 ? null : he[ue], Ge), !ze.current)
      return;
    const ft = ze.current.querySelector(`[role="option"].${s}-focused`);
    ft && (ft.classList.remove(`${s}-focused`), ft.classList.remove(`${s}-focusVisible`));
    let en = ze.current;
    if (ze.current.getAttribute("role") !== "listbox" && (en = ze.current.parentElement.querySelector('[role="listbox"]')), !en)
      return;
    if (ue === -1) {
      en.scrollTop = 0;
      return;
    }
    const pt = ze.current.querySelector(`[data-option-index="${ue}"]`);
    if (pt && (pt.classList.add(`${s}-focused`), Ge === "keyboard" && pt.classList.add(`${s}-focusVisible`), en.scrollHeight > en.clientHeight && Ge !== "mouse" && Ge !== "touch")) {
      const sn = pt, tr = en.clientHeight + en.scrollTop, Ml = sn.offsetTop + sn.offsetHeight;
      Ml > tr ? en.scrollTop = Ml - en.clientHeight : sn.offsetTop - sn.offsetHeight * ($ ? 1.3 : 0) < en.scrollTop && (en.scrollTop = sn.offsetTop - sn.offsetHeight * ($ ? 1.3 : 0));
    }
  }), we = so(({
    event: Ne,
    diff: ue,
    direction: Ge = "next",
    reason: ft = "auto"
  }) => {
    if (!Ce)
      return;
    const pt = qe((() => {
      const sn = he.length - 1;
      if (ue === "reset")
        return le;
      if (ue === "start")
        return 0;
      if (ue === "end")
        return sn;
      const tr = $e.current + ue;
      return tr < 0 ? tr === -1 && Y ? -1 : L && $e.current !== -1 || Math.abs(ue) > 1 ? 0 : sn : tr > sn ? tr === sn + 1 && Y ? -1 : L || Math.abs(ue) > 1 ? sn : 0 : tr;
    })(), Ge);
    if (We({
      index: pt,
      reason: ft,
      event: Ne
    }), u && ue !== "reset")
      if (pt === -1)
        xe.current.value = it;
      else {
        const sn = Ye(he[pt]);
        xe.current.value = sn, sn.toLowerCase().indexOf(it.toLowerCase()) === 0 && it.length > 0 && xe.current.setSelectionRange(it.length, sn.length);
      }
  }), Fe = () => {
    const Ne = (ue, Ge) => {
      const ft = ue ? Ye(ue) : "", en = Ge ? Ye(Ge) : "";
      return ft === en;
    };
    if ($e.current !== -1 && Qe.filteredOptions && Qe.filteredOptions.length !== he.length && Qe.inputValue === it && (re ? Oe.length === Qe.value.length && Qe.value.every((ue, Ge) => Ye(Oe[Ge]) === Ye(ue)) : Ne(Qe.value, Oe))) {
      const ue = Qe.filteredOptions[$e.current];
      if (ue && he.some((ft) => Ye(ft) === Ye(ue)))
        return !0;
    }
    return !1;
  }, st = O.useCallback(() => {
    if (!Ce || Fe())
      return;
    const Ne = re ? Oe[0] : Oe;
    if (he.length === 0 || Ne == null) {
      we({
        diff: "reset"
      });
      return;
    }
    if (ze.current) {
      if (Ne != null) {
        const ue = he[$e.current];
        if (re && ue && NT(Oe, (ft) => q(ue, ft)) !== -1)
          return;
        const Ge = NT(he, (ft) => q(ft, Ne));
        Ge === -1 ? we({
          diff: "reset"
        }) : We({
          index: Ge
        });
        return;
      }
      if ($e.current >= he.length - 1) {
        We({
          index: he.length - 1
        });
        return;
      }
      We({
        index: $e.current
      });
    }
  }, [
    // Only sync the highlighted index when the option switch between empty and not
    he.length,
    // Don't sync the highlighted index with the value when multiple
    // eslint-disable-next-line react-hooks/exhaustive-deps
    re ? !1 : Oe,
    _,
    we,
    We,
    Ce,
    it,
    re
  ]), kt = so((Ne) => {
    s0(ze, Ne), Ne && st();
  });
  process.env.NODE_ENV !== "production" && O.useEffect(() => {
    (!xe.current || xe.current.nodeName !== "INPUT") && (xe.current && xe.current.nodeName === "TEXTAREA" ? console.warn([`A textarea element was provided to ${S} where input was expected.`, "This is not a supported scenario but it may work under certain conditions.", "A textarea keyboard navigation may conflict with Autocomplete controls (e.g. enter and arrow keys).", "Make sure to test keyboard navigation and add custom event handlers if necessary."].join(`
`)) : console.error([`MUI: Unable to find the input element. It was resolved to ${xe.current} while an HTMLInputElement was expected.`, `Instead, ${S} expects an input element.`, "", S === "useAutocomplete" ? "Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed." : "Make sure you have customized the input component correctly."].join(`
`)));
  }, [S]), O.useEffect(() => {
    st();
  }, [st]);
  const Nt = (Ne) => {
    Lt || (At(!0), an(!0), fe && fe(Ne));
  }, nn = (Ne, ue) => {
    Lt && (At(!1), J && J(Ne, ue));
  }, qt = (Ne, ue, Ge, ft) => {
    if (re) {
      if (Oe.length === ue.length && Oe.every((en, pt) => en === ue[pt]))
        return;
    } else if (Oe === ue)
      return;
    ee && ee(Ne, ue, Ge, ft), dt(ue);
  }, on = O.useRef(!1), _n = (Ne, ue, Ge = "selectOption", ft = "options") => {
    let en = Ge, pt = ue;
    if (re) {
      if (pt = Array.isArray(Oe) ? Oe.slice() : [], process.env.NODE_ENV !== "production") {
        const tr = pt.filter((Ml) => q(ue, Ml));
        tr.length > 1 && console.error([`MUI: The \`isOptionEqualToValue\` method of ${S} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${tr.length} matches.`].join(`
`));
      }
      const sn = NT(pt, (tr) => q(ue, tr));
      sn === -1 ? pt.push(ue) : ft !== "freeSolo" && (pt.splice(sn, 1), en = "removeOption");
    }
    Tt(Ne, pt), qt(Ne, pt, en, {
      option: ue
    }), !D && (!Ne || !Ne.ctrlKey && !Ne.metaKey) && nn(Ne, en), (m === !0 || m === "touch" && on.current || m === "mouse" && !on.current) && xe.current.blur();
  };
  function fo(Ne, ue) {
    if (Ne === -1)
      return -1;
    let Ge = Ne;
    for (; ; ) {
      if (ue === "next" && Ge === Oe.length || ue === "previous" && Ge === -1)
        return -1;
      const ft = ut.querySelector(`[data-tag-index="${Ge}"]`);
      if (!ft || !ft.hasAttribute("tabindex") || ft.disabled || ft.getAttribute("aria-disabled") === "true")
        Ge += ue === "next" ? 1 : -1;
      else
        return Ge;
    }
  }
  const dr = (Ne, ue) => {
    if (!re)
      return;
    it === "" && nn(Ne, "toggleInput");
    let Ge = rt;
    rt === -1 ? it === "" && ue === "previous" && (Ge = Oe.length - 1) : (Ge += ue === "next" ? 1 : -1, Ge < 0 && (Ge = 0), Ge === Oe.length && (Ge = -1)), Ge = fo(Ge, ue), nt(Ge), et(Ge);
  }, Fr = (Ne) => {
    ke.current = !0, zt(""), de && de(Ne, "", "clear"), qt(Ne, re ? [] : null, "clear");
  }, ja = (Ne) => (ue) => {
    if (Ne.onKeyDown && Ne.onKeyDown(ue), !ue.defaultMuiPrevented && (rt !== -1 && ["ArrowLeft", "ArrowRight"].indexOf(ue.key) === -1 && (nt(-1), et(-1)), ue.which !== 229))
      switch (ue.key) {
        case "Home":
          Ce && F && (ue.preventDefault(), we({
            diff: "start",
            direction: "next",
            reason: "keyboard",
            event: ue
          }));
          break;
        case "End":
          Ce && F && (ue.preventDefault(), we({
            diff: "end",
            direction: "previous",
            reason: "keyboard",
            event: ue
          }));
          break;
        case "PageUp":
          ue.preventDefault(), we({
            diff: -Dk,
            direction: "previous",
            reason: "keyboard",
            event: ue
          }), Nt(ue);
          break;
        case "PageDown":
          ue.preventDefault(), we({
            diff: Dk,
            direction: "next",
            reason: "keyboard",
            event: ue
          }), Nt(ue);
          break;
        case "ArrowDown":
          ue.preventDefault(), we({
            diff: 1,
            direction: "next",
            reason: "keyboard",
            event: ue
          }), Nt(ue);
          break;
        case "ArrowUp":
          ue.preventDefault(), we({
            diff: -1,
            direction: "previous",
            reason: "keyboard",
            event: ue
          }), Nt(ue);
          break;
        case "ArrowLeft":
          dr(ue, "previous");
          break;
        case "ArrowRight":
          dr(ue, "next");
          break;
        case "Enter":
          if ($e.current !== -1 && Ce) {
            const Ge = he[$e.current], ft = A ? A(Ge) : !1;
            if (ue.preventDefault(), ft)
              return;
            _n(ue, Ge, "selectOption"), u && xe.current.setSelectionRange(xe.current.value.length, xe.current.value.length);
          } else
            V && it !== "" && Qt === !1 && (re && ue.preventDefault(), _n(ue, it, "createOption", "freeSolo"));
          break;
        case "Escape":
          Ce ? (ue.preventDefault(), ue.stopPropagation(), nn(ue, "escape")) : b && (it !== "" || re && Oe.length > 0) && (ue.preventDefault(), ue.stopPropagation(), Fr(ue));
          break;
        case "Backspace":
          if (re && !Ke && it === "" && Oe.length > 0) {
            const Ge = rt === -1 ? Oe.length - 1 : rt, ft = Oe.slice();
            ft.splice(Ge, 1), qt(ue, ft, "removeOption", {
              option: Oe[Ge]
            });
          }
          break;
        case "Delete":
          if (re && !Ke && it === "" && Oe.length > 0 && rt !== -1) {
            const Ge = rt, ft = Oe.slice();
            ft.splice(Ge, 1), qt(ue, ft, "removeOption", {
              option: Oe[Ge]
            });
          }
          break;
      }
  }, jr = (Ne) => {
    ht(!0), ne && !ke.current && Nt(Ne);
  }, No = (Ne) => {
    if (r(ze)) {
      xe.current.focus();
      return;
    }
    ht(!1), lt.current = !0, ke.current = !1, v && $e.current !== -1 && Ce ? _n(Ne, he[$e.current], "blur") : v && V && it !== "" ? _n(Ne, it, "blur", "freeSolo") : y && Tt(Ne, Oe), nn(Ne, "blur");
  }, Rn = (Ne) => {
    const ue = Ne.target.value;
    it !== ue && (zt(ue), an(!1), de && de(Ne, ue, "input")), ue === "" ? !k && !re && qt(Ne, null, "clear") : Nt(Ne);
  }, bn = (Ne) => {
    const ue = Number(Ne.currentTarget.getAttribute("data-option-index"));
    $e.current !== ue && We({
      event: Ne,
      index: ue,
      reason: "mouse"
    });
  }, An = (Ne) => {
    We({
      event: Ne,
      index: Number(Ne.currentTarget.getAttribute("data-option-index")),
      reason: "touch"
    }), on.current = !0;
  }, Gn = (Ne) => {
    const ue = Number(Ne.currentTarget.getAttribute("data-option-index"));
    _n(Ne, he[ue], "selectOption"), on.current = !1;
  }, Xn = (Ne) => (ue) => {
    const Ge = Oe.slice();
    Ge.splice(Ne, 1), qt(ue, Ge, "removeOption", {
      option: Oe[Ne]
    });
  }, Uo = (Ne) => {
    Lt ? nn(Ne, "toggleInput") : Nt(Ne);
  }, $o = (Ne) => {
    Ne.currentTarget.contains(Ne.target) && Ne.target.getAttribute("id") !== De && Ne.preventDefault();
  }, Mo = (Ne) => {
    Ne.currentTarget.contains(Ne.target) && (xe.current.focus(), tt && lt.current && xe.current.selectionEnd - xe.current.selectionStart === 0 && xe.current.select(), lt.current = !1);
  }, Er = (Ne) => {
    !M && (it === "" || !Lt) && Uo(Ne);
  };
  let Do = V && it.length > 0;
  Do = Do || (re ? Oe.length > 0 : Oe !== null);
  let mo = he;
  if ($) {
    const Ne = /* @__PURE__ */ new Map();
    let ue = !1;
    mo = he.reduce((Ge, ft, en) => {
      const pt = $(ft);
      return Ge.length > 0 && Ge[Ge.length - 1].group === pt ? Ge[Ge.length - 1].options.push(ft) : (process.env.NODE_ENV !== "production" && (Ne.get(pt) && !ue && (console.warn(`MUI: The options provided combined with the \`groupBy\` method of ${S} returns duplicated headers.`, "You can solve the issue by sorting the options with the output of `groupBy`."), ue = !0), Ne.set(pt, !0)), Ge.push({
        key: en,
        index: en,
        group: pt,
        options: [ft]
      })), Ge;
    }, []);
  }
  return M && Dt && No(), {
    getRootProps: (Ne = {}) => C({
      "aria-owns": Me ? `${De}-listbox` : null
    }, Ne, {
      onKeyDown: ja(Ne),
      onMouseDown: $o,
      onClick: Mo
    }),
    getInputLabelProps: () => ({
      id: `${De}-label`,
      htmlFor: De
    }),
    getInputProps: () => ({
      id: De,
      value: it,
      onBlur: No,
      onFocus: jr,
      onChange: Rn,
      onMouseDown: Er,
      // if open then this is handled imperatively so don't let react override
      // only have an opinion about this when closed
      "aria-activedescendant": Ce ? "" : null,
      "aria-autocomplete": u ? "both" : "list",
      "aria-controls": Me ? `${De}-listbox` : void 0,
      "aria-expanded": Me,
      // Disable browser's suggestion that might overlap with the popup.
      // Handle autocomplete but not autofill.
      autoComplete: "off",
      ref: xe,
      autoCapitalize: "none",
      spellCheck: "false",
      role: "combobox",
      disabled: M
    }),
    getClearProps: () => ({
      tabIndex: -1,
      type: "button",
      onClick: Fr
    }),
    getPopupIndicatorProps: () => ({
      tabIndex: -1,
      type: "button",
      onClick: Uo
    }),
    getTagProps: ({
      index: Ne
    }) => C({
      key: Ne,
      "data-tag-index": Ne,
      tabIndex: -1
    }, !Ke && {
      onDelete: Xn(Ne)
    }),
    getListboxProps: () => ({
      role: "listbox",
      id: `${De}-listbox`,
      "aria-labelledby": `${De}-label`,
      ref: kt,
      onMouseDown: (Ne) => {
        Ne.preventDefault();
      }
    }),
    getOptionProps: ({
      index: Ne,
      option: ue
    }) => {
      var Ge;
      const ft = (re ? Oe : [Oe]).some((pt) => pt != null && q(ue, pt)), en = A ? A(ue) : !1;
      return {
        key: (Ge = j == null ? void 0 : j(ue)) != null ? Ge : Ye(ue),
        tabIndex: -1,
        role: "option",
        id: `${De}-option-${Ne}`,
        onMouseMove: bn,
        onClick: Gn,
        onTouchStart: An,
        "data-option-index": Ne,
        "aria-disabled": en,
        "aria-selected": ft
      };
    },
    id: De,
    inputValue: it,
    value: Oe,
    dirty: Do,
    expanded: Ce && ut,
    popupOpen: Ce,
    focused: Dt || rt !== -1,
    anchorEl: ut,
    setAnchorEl: Xe,
    focusedTag: rt,
    groupedOptions: mo
  };
}
function D5(e) {
  return je("MuiAlert", e);
}
const P5 = He("MuiAlert", ["root", "action", "icon", "message", "filled", "filledSuccess", "filledInfo", "filledWarning", "filledError", "outlined", "outlinedSuccess", "outlinedInfo", "outlinedWarning", "outlinedError", "standard", "standardSuccess", "standardInfo", "standardWarning", "standardError"]), Pk = P5;
function L5(e) {
  return je("MuiIconButton", e);
}
const I5 = He("MuiIconButton", ["root", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorError", "colorInfo", "colorSuccess", "colorWarning", "edgeStart", "edgeEnd", "sizeSmall", "sizeMedium", "sizeLarge"]), _5 = I5, A5 = ["edge", "children", "className", "color", "disabled", "disableFocusRipple", "size"], B5 = (e) => {
  const {
    classes: r,
    disabled: s,
    color: u,
    edge: f,
    size: v
  } = e, m = {
    root: ["root", s && "disabled", u !== "default" && `color${oe(u)}`, f && `edge${oe(f)}`, `size${oe(v)}`]
  };
  return Ue(m, L5, r);
}, z5 = Z(er, {
  name: "MuiIconButton",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.color !== "default" && r[`color${oe(s.color)}`], s.edge && r[`edge${oe(s.edge)}`], r[`size${oe(s.size)}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  textAlign: "center",
  flex: "0 0 auto",
  fontSize: e.typography.pxToRem(24),
  padding: 8,
  borderRadius: "50%",
  overflow: "visible",
  // Explicitly set the default value to solve a bug on IE11.
  color: (e.vars || e).palette.action.active,
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.shortest
  })
}, !r.disableRipple && {
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Ut(e.palette.action.active, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  }
}, r.edge === "start" && {
  marginLeft: r.size === "small" ? -3 : -12
}, r.edge === "end" && {
  marginRight: r.size === "small" ? -3 : -12
}), ({
  theme: e,
  ownerState: r
}) => {
  var s;
  const u = (s = (e.vars || e).palette) == null ? void 0 : s[r.color];
  return C({}, r.color === "inherit" && {
    color: "inherit"
  }, r.color !== "inherit" && r.color !== "default" && C({
    color: u == null ? void 0 : u.main
  }, !r.disableRipple && {
    "&:hover": C({}, u && {
      backgroundColor: e.vars ? `rgba(${u.mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Ut(u.main, e.palette.action.hoverOpacity)
    }, {
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    })
  }), r.size === "small" && {
    padding: 5,
    fontSize: e.typography.pxToRem(18)
  }, r.size === "large" && {
    padding: 12,
    fontSize: e.typography.pxToRem(28)
  }, {
    [`&.${_5.disabled}`]: {
      backgroundColor: "transparent",
      color: (e.vars || e).palette.action.disabled
    }
  });
}), Z$ = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiIconButton"
  }), {
    edge: f = !1,
    children: v,
    className: m,
    color: y = "default",
    disabled: b = !1,
    disableFocusRipple: S = !1,
    size: E = "medium"
  } = u, k = me(u, A5), D = C({}, u, {
    edge: f,
    color: y,
    disabled: b,
    disableFocusRipple: S,
    size: E
  }), M = B5(D);
  return /* @__PURE__ */ z(z5, C({
    className: pe(M.root, m),
    centerRipple: !0,
    focusRipple: !S,
    disabled: b,
    ref: s
  }, k, {
    ownerState: D,
    children: v
  }));
});
process.env.NODE_ENV !== "production" && (Z$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The icon to display.
   */
  children: jo(n.node, (e) => O.Children.toArray(e.children).some((s) => /* @__PURE__ */ O.isValidElement(s) && s.props.onClick) ? new Error(["MUI: You are providing an onClick event listener to a child of a button element.", "Prefer applying it to the IconButton directly.", "This guarantees that the whole <button> will be responsive to click events."].join(`
`)) : null),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: n.oneOfType([n.oneOf(["inherit", "default", "primary", "secondary", "error", "info", "success", "warning"]), n.string]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: n.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: n.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: n.oneOf(["end", "start", !1]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: n.oneOfType([n.oneOf(["small", "medium", "large"]), n.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const rd = Z$, F5 = Kn(/* @__PURE__ */ z("path", {
  d: "M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
}), "SuccessOutlined"), j5 = Kn(/* @__PURE__ */ z("path", {
  d: "M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z"
}), "ReportProblemOutlined"), U5 = Kn(/* @__PURE__ */ z("path", {
  d: "M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "ErrorOutline"), V5 = Kn(/* @__PURE__ */ z("path", {
  d: "M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z"
}), "InfoOutlined"), J$ = Kn(/* @__PURE__ */ z("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Close"), H5 = ["action", "children", "className", "closeText", "color", "components", "componentsProps", "icon", "iconMapping", "onClose", "role", "severity", "slotProps", "slots", "variant"], W5 = (e) => {
  const {
    variant: r,
    color: s,
    severity: u,
    classes: f
  } = e, v = {
    root: ["root", `${r}${oe(s || u)}`, `${r}`],
    icon: ["icon"],
    message: ["message"],
    action: ["action"]
  };
  return Ue(v, D5, f);
}, G5 = Z(ui, {
  name: "MuiAlert",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[s.variant], r[`${s.variant}${oe(s.color || s.severity)}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => {
  const s = e.palette.mode === "light" ? a0 : i0, u = e.palette.mode === "light" ? i0 : a0, f = r.color || r.severity;
  return C({}, e.typography.body2, {
    backgroundColor: "transparent",
    display: "flex",
    padding: "6px 16px"
  }, f && r.variant === "standard" && {
    color: e.vars ? e.vars.palette.Alert[`${f}Color`] : s(e.palette[f].light, 0.6),
    backgroundColor: e.vars ? e.vars.palette.Alert[`${f}StandardBg`] : u(e.palette[f].light, 0.9),
    [`& .${Pk.icon}`]: e.vars ? {
      color: e.vars.palette.Alert[`${f}IconColor`]
    } : {
      color: e.palette[f].main
    }
  }, f && r.variant === "outlined" && {
    color: e.vars ? e.vars.palette.Alert[`${f}Color`] : s(e.palette[f].light, 0.6),
    border: `1px solid ${(e.vars || e).palette[f].light}`,
    [`& .${Pk.icon}`]: e.vars ? {
      color: e.vars.palette.Alert[`${f}IconColor`]
    } : {
      color: e.palette[f].main
    }
  }, f && r.variant === "filled" && C({
    fontWeight: e.typography.fontWeightMedium
  }, e.vars ? {
    color: e.vars.palette.Alert[`${f}FilledColor`],
    backgroundColor: e.vars.palette.Alert[`${f}FilledBg`]
  } : {
    backgroundColor: e.palette.mode === "dark" ? e.palette[f].dark : e.palette[f].main,
    color: e.palette.getContrastText(e.palette[f].main)
  }));
}), q5 = Z("div", {
  name: "MuiAlert",
  slot: "Icon",
  overridesResolver: (e, r) => r.icon
})({
  marginRight: 12,
  padding: "7px 0",
  display: "flex",
  fontSize: 22,
  opacity: 0.9
}), Y5 = Z("div", {
  name: "MuiAlert",
  slot: "Message",
  overridesResolver: (e, r) => r.message
})({
  padding: "8px 0",
  minWidth: 0,
  overflow: "auto"
}), Lk = Z("div", {
  name: "MuiAlert",
  slot: "Action",
  overridesResolver: (e, r) => r.action
})({
  display: "flex",
  alignItems: "flex-start",
  padding: "4px 0 0 16px",
  marginLeft: "auto",
  marginRight: -8
}), Ik = {
  success: /* @__PURE__ */ z(F5, {
    fontSize: "inherit"
  }),
  warning: /* @__PURE__ */ z(j5, {
    fontSize: "inherit"
  }),
  error: /* @__PURE__ */ z(U5, {
    fontSize: "inherit"
  }),
  info: /* @__PURE__ */ z(V5, {
    fontSize: "inherit"
  })
}, eM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiAlert"
  }), {
    action: f,
    children: v,
    className: m,
    closeText: y = "Close",
    color: b,
    components: S = {},
    componentsProps: E = {},
    icon: k,
    iconMapping: D = Ik,
    onClose: M,
    role: P = "alert",
    severity: L = "success",
    slotProps: w = {},
    slots: _ = {},
    variant: V = "standard"
  } = u, A = me(u, H5), j = C({}, u, {
    color: b,
    severity: L,
    variant: V
  }), U = W5(j), $ = {
    slots: C({
      closeButton: S.CloseButton,
      closeIcon: S.CloseIcon
    }, _),
    slotProps: C({}, E, w)
  }, [F, G] = p0("closeButton", {
    elementType: rd,
    externalForwardedProps: $,
    ownerState: j
  }), [Y, Q] = p0("closeIcon", {
    elementType: J$,
    externalForwardedProps: $,
    ownerState: j
  });
  return /* @__PURE__ */ gt(G5, C({
    role: P,
    elevation: 0,
    ownerState: j,
    className: pe(U.root, m),
    ref: s
  }, A, {
    children: [k !== !1 ? /* @__PURE__ */ z(q5, {
      ownerState: j,
      className: U.icon,
      children: k || D[L] || Ik[L]
    }) : null, /* @__PURE__ */ z(Y5, {
      ownerState: j,
      className: U.message,
      children: v
    }), f != null ? /* @__PURE__ */ z(Lk, {
      ownerState: j,
      className: U.action,
      children: f
    }) : null, f == null && M ? /* @__PURE__ */ z(Lk, {
      ownerState: j,
      className: U.action,
      children: /* @__PURE__ */ z(F, C({
        size: "small",
        "aria-label": y,
        title: y,
        color: "inherit",
        onClick: M
      }, G, {
        children: /* @__PURE__ */ z(Y, C({
          fontSize: "small"
        }, Q))
      }))
    }) : null]
  }));
});
process.env.NODE_ENV !== "production" && (eM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The action to display. It renders after the message, at the end of the alert.
   */
  action: n.node,
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * Override the default label for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: n.string,
  /**
   * The color of the component. Unless provided, the value is taken from the `severity` prop.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: n.oneOfType([n.oneOf(["error", "info", "success", "warning"]), n.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   *
   * @default {}
   */
  components: n.shape({
    CloseButton: n.elementType,
    CloseIcon: n.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   *
   * @default {}
   */
  componentsProps: n.shape({
    closeButton: n.object,
    closeIcon: n.object
  }),
  /**
   * Override the icon displayed before the children.
   * Unless provided, the icon is mapped to the value of the `severity` prop.
   * Set to `false` to remove the `icon`.
   */
  icon: n.node,
  /**
   * The component maps the `severity` prop to a range of different icons,
   * for instance success to `<SuccessOutlined>`.
   * If you wish to change this mapping, you can provide your own.
   * Alternatively, you can use the `icon` prop to override the icon displayed.
   */
  iconMapping: n.shape({
    error: n.node,
    info: n.node,
    success: n.node,
    warning: n.node
  }),
  /**
   * Callback fired when the component requests to be closed.
   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: n.func,
  /**
   * The ARIA role attribute of the element.
   * @default 'alert'
   */
  role: n.string,
  /**
   * The severity of the alert. This defines the color and icon used.
   * @default 'success'
   */
  severity: n.oneOfType([n.oneOf(["error", "info", "success", "warning"]), n.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: n.shape({
    closeButton: n.oneOfType([n.func, n.object]),
    closeIcon: n.oneOfType([n.func, n.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: n.shape({
    closeButton: n.elementType,
    closeIcon: n.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: n.oneOfType([n.oneOf(["filled", "outlined", "standard"]), n.string])
});
const KJ = eM;
function K5(e) {
  return je("MuiTypography", e);
}
const X5 = He("MuiTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "inherit", "button", "caption", "overline", "alignLeft", "alignRight", "alignCenter", "alignJustify", "noWrap", "gutterBottom", "paragraph"]), XJ = X5, Q5 = ["align", "className", "component", "gutterBottom", "noWrap", "paragraph", "variant", "variantMapping"], Z5 = (e) => {
  const {
    align: r,
    gutterBottom: s,
    noWrap: u,
    paragraph: f,
    variant: v,
    classes: m
  } = e, y = {
    root: ["root", v, e.align !== "inherit" && `align${oe(r)}`, s && "gutterBottom", u && "noWrap", f && "paragraph"]
  };
  return Ue(y, K5, m);
}, J5 = Z("span", {
  name: "MuiTypography",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.variant && r[s.variant], s.align !== "inherit" && r[`align${oe(s.align)}`], s.noWrap && r.noWrap, s.gutterBottom && r.gutterBottom, s.paragraph && r.paragraph];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  margin: 0
}, r.variant === "inherit" && {
  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.
  font: "inherit"
}, r.variant !== "inherit" && e.typography[r.variant], r.align !== "inherit" && {
  textAlign: r.align
}, r.noWrap && {
  overflow: "hidden",
  textOverflow: "ellipsis",
  whiteSpace: "nowrap"
}, r.gutterBottom && {
  marginBottom: "0.35em"
}, r.paragraph && {
  marginBottom: 16
})), _k = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p",
  inherit: "p"
}, eH = {
  primary: "primary.main",
  textPrimary: "text.primary",
  secondary: "secondary.main",
  textSecondary: "text.secondary",
  error: "error.main"
}, tH = (e) => eH[e] || e, tM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiTypography"
  }), f = tH(u.color), v = mh(C({}, u, {
    color: f
  })), {
    align: m = "inherit",
    className: y,
    component: b,
    gutterBottom: S = !1,
    noWrap: E = !1,
    paragraph: k = !1,
    variant: D = "body1",
    variantMapping: M = _k
  } = v, P = me(v, Q5), L = C({}, v, {
    align: m,
    color: f,
    className: y,
    component: b,
    gutterBottom: S,
    noWrap: E,
    paragraph: k,
    variant: D,
    variantMapping: M
  }), w = b || (k ? "p" : M[D] || _k[D]) || "span", _ = Z5(L);
  return /* @__PURE__ */ z(J5, C({
    as: w,
    ref: s,
    ownerState: L,
    className: pe(_.root, y)
  }, P));
});
process.env.NODE_ENV !== "production" && (tM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the component.
   * @default 'inherit'
   */
  align: n.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * If `true`, the text will have a bottom margin.
   * @default false
   */
  gutterBottom: n.bool,
  /**
   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
   *
   * Note that text overflow can only happen with block or inline-block level elements
   * (the element needs to have a width in order to overflow).
   * @default false
   */
  noWrap: n.bool,
  /**
   * If `true`, the element will be a paragraph element.
   * @default false
   */
  paragraph: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * Applies the theme typography styles.
   * @default 'body1'
   */
  variant: n.oneOfType([n.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), n.string]),
  /**
   * The component maps the variant prop to a range of different HTML element types.
   * For instance, subtitle1 to `<h6>`.
   * If you wish to change that mapping, you can provide your own.
   * Alternatively, you can use the `component` prop.
   * @default {
   *   h1: 'h1',
   *   h2: 'h2',
   *   h3: 'h3',
   *   h4: 'h4',
   *   h5: 'h5',
   *   h6: 'h6',
   *   subtitle1: 'h6',
   *   subtitle2: 'h6',
   *   body1: 'p',
   *   body2: 'p',
   *   inherit: 'p',
   * }
   */
  variantMapping: n.object
});
const zr = tM;
function nH(e) {
  return je("MuiAlertTitle", e);
}
const oH = He("MuiAlertTitle", ["root"]), QJ = oH, rH = ["className"], aH = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"]
  }, nH, r);
}, iH = Z(zr, {
  name: "MuiAlertTitle",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})(({
  theme: e
}) => ({
  fontWeight: e.typography.fontWeightMedium,
  marginTop: -2
})), nM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiAlertTitle"
  }), {
    className: f
  } = u, v = me(u, rH), m = u, y = aH(m);
  return /* @__PURE__ */ z(iH, C({
    gutterBottom: !0,
    component: "div",
    ownerState: m,
    ref: s,
    className: pe(y.root, f)
  }, v));
});
process.env.NODE_ENV !== "production" && (nM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const ZJ = nM;
function sH(e) {
  return je("MuiAppBar", e);
}
const lH = He("MuiAppBar", ["root", "positionFixed", "positionAbsolute", "positionSticky", "positionStatic", "positionRelative", "colorDefault", "colorPrimary", "colorSecondary", "colorInherit", "colorTransparent", "colorError", "colorInfo", "colorSuccess", "colorWarning"]), JJ = lH, cH = ["className", "color", "enableColorOnDark", "position"], uH = (e) => {
  const {
    color: r,
    position: s,
    classes: u
  } = e, f = {
    root: ["root", `color${oe(r)}`, `position${oe(s)}`]
  };
  return Ue(f, sH, u);
}, Fb = (e, r) => e ? `${e == null ? void 0 : e.replace(")", "")}, ${r})` : r, dH = Z(ui, {
  name: "MuiAppBar",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[`position${oe(s.position)}`], r[`color${oe(s.color)}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => {
  const s = e.palette.mode === "light" ? e.palette.grey[100] : e.palette.grey[900];
  return C({
    display: "flex",
    flexDirection: "column",
    width: "100%",
    boxSizing: "border-box",
    // Prevent padding issue with the Modal and fixed positioned AppBar.
    flexShrink: 0
  }, r.position === "fixed" && {
    position: "fixed",
    zIndex: (e.vars || e).zIndex.appBar,
    top: 0,
    left: "auto",
    right: 0,
    "@media print": {
      // Prevent the app bar to be visible on each printed page.
      position: "absolute"
    }
  }, r.position === "absolute" && {
    position: "absolute",
    zIndex: (e.vars || e).zIndex.appBar,
    top: 0,
    left: "auto",
    right: 0
  }, r.position === "sticky" && {
    // ⚠️ sticky is not supported by IE11.
    position: "sticky",
    zIndex: (e.vars || e).zIndex.appBar,
    top: 0,
    left: "auto",
    right: 0
  }, r.position === "static" && {
    position: "static"
  }, r.position === "relative" && {
    position: "relative"
  }, !e.vars && C({}, r.color === "default" && {
    backgroundColor: s,
    color: e.palette.getContrastText(s)
  }, r.color && r.color !== "default" && r.color !== "inherit" && r.color !== "transparent" && {
    backgroundColor: e.palette[r.color].main,
    color: e.palette[r.color].contrastText
  }, r.color === "inherit" && {
    color: "inherit"
  }, e.palette.mode === "dark" && !r.enableColorOnDark && {
    backgroundColor: null,
    color: null
  }, r.color === "transparent" && C({
    backgroundColor: "transparent",
    color: "inherit"
  }, e.palette.mode === "dark" && {
    backgroundImage: "none"
  })), e.vars && C({}, r.color === "default" && {
    "--AppBar-background": r.enableColorOnDark ? e.vars.palette.AppBar.defaultBg : Fb(e.vars.palette.AppBar.darkBg, e.vars.palette.AppBar.defaultBg),
    "--AppBar-color": r.enableColorOnDark ? e.vars.palette.text.primary : Fb(e.vars.palette.AppBar.darkColor, e.vars.palette.text.primary)
  }, r.color && !r.color.match(/^(default|inherit|transparent)$/) && {
    "--AppBar-background": r.enableColorOnDark ? e.vars.palette[r.color].main : Fb(e.vars.palette.AppBar.darkBg, e.vars.palette[r.color].main),
    "--AppBar-color": r.enableColorOnDark ? e.vars.palette[r.color].contrastText : Fb(e.vars.palette.AppBar.darkColor, e.vars.palette[r.color].contrastText)
  }, {
    backgroundColor: "var(--AppBar-background)",
    color: r.color === "inherit" ? "inherit" : "var(--AppBar-color)"
  }, r.color === "transparent" && {
    backgroundImage: "none",
    backgroundColor: "transparent",
    color: "inherit"
  }));
}), oM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiAppBar"
  }), {
    className: f,
    color: v = "primary",
    enableColorOnDark: m = !1,
    position: y = "fixed"
  } = u, b = me(u, cH), S = C({}, u, {
    color: v,
    position: y,
    enableColorOnDark: m
  }), E = uH(S);
  return /* @__PURE__ */ z(dH, C({
    square: !0,
    component: "header",
    ownerState: S,
    elevation: 4,
    className: pe(E.root, f, y === "fixed" && "mui-fixed"),
    ref: s
  }, b));
});
process.env.NODE_ENV !== "production" && (oM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: n.oneOfType([n.oneOf(["default", "inherit", "primary", "secondary", "transparent", "error", "info", "success", "warning"]), n.string]),
  /**
   * If true, the `color` prop is applied in dark mode.
   * @default false
   */
  enableColorOnDark: n.bool,
  /**
   * The positioning type. The behavior of the different options is described
   * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning).
   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.
   * @default 'fixed'
   */
  position: n.oneOf(["absolute", "fixed", "relative", "static", "sticky"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const eee = oM;
var L1 = {};
Object.defineProperty(L1, "__esModule", {
  value: !0
});
var rM = L1.default = void 0, pH = mH(ai), fH = m$;
function aM(e) {
  if (typeof WeakMap != "function")
    return null;
  var r = /* @__PURE__ */ new WeakMap(), s = /* @__PURE__ */ new WeakMap();
  return (aM = function(u) {
    return u ? s : r;
  })(e);
}
function mH(e, r) {
  if (!r && e && e.__esModule)
    return e;
  if (e === null || typeof e != "object" && typeof e != "function")
    return { default: e };
  var s = aM(r);
  if (s && s.has(e))
    return s.get(e);
  var u = { __proto__: null }, f = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var v in e)
    if (v !== "default" && Object.prototype.hasOwnProperty.call(e, v)) {
      var m = f ? Object.getOwnPropertyDescriptor(e, v) : null;
      m && (m.get || m.set) ? Object.defineProperty(u, v, m) : u[v] = e[v];
    }
  return u.default = e, s && s.set(e, u), u;
}
function vH(e) {
  return Object.keys(e).length === 0;
}
function hH(e = null) {
  const r = pH.useContext(fH.ThemeContext);
  return !r || vH(r) ? e : r;
}
rM = L1.default = hH;
const gH = ["anchorEl", "component", "components", "componentsProps", "container", "disablePortal", "keepMounted", "modifiers", "open", "placement", "popperOptions", "popperRef", "transition", "slots", "slotProps"], yH = Z(K$, {
  name: "MuiPopper",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})({}), iM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u;
  const f = rM(), v = Ve({
    props: r,
    name: "MuiPopper"
  }), {
    anchorEl: m,
    component: y,
    components: b,
    componentsProps: S,
    container: E,
    disablePortal: k,
    keepMounted: D,
    modifiers: M,
    open: P,
    placement: L,
    popperOptions: w,
    popperRef: _,
    transition: V,
    slots: A,
    slotProps: j
  } = v, U = me(v, gH), $ = (u = A == null ? void 0 : A.root) != null ? u : b == null ? void 0 : b.Root, F = C({
    anchorEl: m,
    container: E,
    disablePortal: k,
    keepMounted: D,
    modifiers: M,
    open: P,
    placement: L,
    popperOptions: w,
    popperRef: _,
    transition: V
  }, U);
  return /* @__PURE__ */ z(yH, C({
    as: y,
    direction: f == null ? void 0 : f.direction,
    slots: {
      root: $
    },
    slotProps: j ?? S
  }, F, {
    ref: s
  }));
});
process.env.NODE_ENV !== "production" && (iM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: n.oneOfType([$s, n.object, n.func]),
  /**
   * Popper render function or node.
   */
  children: n.oneOfType([n.node, n.func]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  components: n.shape({
    Root: n.elementType
  }),
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  componentsProps: n.shape({
    root: n.oneOfType([n.func, n.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: n.oneOfType([$s, n.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: n.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: n.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: n.arrayOf(n.shape({
    data: n.object,
    effect: n.func,
    enabled: n.bool,
    fn: n.func,
    name: n.any,
    options: n.object,
    phase: n.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: n.arrayOf(n.string),
    requiresIfExists: n.arrayOf(n.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: n.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: n.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: n.shape({
    modifiers: n.array,
    onFirstUpdate: n.func,
    placement: n.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: n.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: Tr,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: n.shape({
    root: n.oneOfType([n.func, n.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: n.shape({
    root: n.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: n.bool
});
const I0 = iM;
function bH(e) {
  return je("MuiListSubheader", e);
}
const CH = He("MuiListSubheader", ["root", "colorPrimary", "colorInherit", "gutters", "inset", "sticky"]), tee = CH, xH = ["className", "color", "component", "disableGutters", "disableSticky", "inset"], SH = (e) => {
  const {
    classes: r,
    color: s,
    disableGutters: u,
    inset: f,
    disableSticky: v
  } = e, m = {
    root: ["root", s !== "default" && `color${oe(s)}`, !u && "gutters", f && "inset", !v && "sticky"]
  };
  return Ue(m, bH, r);
}, TH = Z("li", {
  name: "MuiListSubheader",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.color !== "default" && r[`color${oe(s.color)}`], !s.disableGutters && r.gutters, s.inset && r.inset, !s.disableSticky && r.sticky];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  boxSizing: "border-box",
  lineHeight: "48px",
  listStyle: "none",
  color: (e.vars || e).palette.text.secondary,
  fontFamily: e.typography.fontFamily,
  fontWeight: e.typography.fontWeightMedium,
  fontSize: e.typography.pxToRem(14)
}, r.color === "primary" && {
  color: (e.vars || e).palette.primary.main
}, r.color === "inherit" && {
  color: "inherit"
}, !r.disableGutters && {
  paddingLeft: 16,
  paddingRight: 16
}, r.inset && {
  paddingLeft: 72
}, !r.disableSticky && {
  position: "sticky",
  top: 0,
  zIndex: 1,
  backgroundColor: (e.vars || e).palette.background.paper
})), I1 = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiListSubheader"
  }), {
    className: f,
    color: v = "default",
    component: m = "li",
    disableGutters: y = !1,
    disableSticky: b = !1,
    inset: S = !1
  } = u, E = me(u, xH), k = C({}, u, {
    color: v,
    component: m,
    disableGutters: y,
    disableSticky: b,
    inset: S
  }), D = SH(k);
  return /* @__PURE__ */ z(TH, C({
    as: m,
    className: pe(D.root, f),
    ref: s,
    ownerState: k
  }, E));
});
I1.muiSkipListHighlight = !0;
process.env.NODE_ENV !== "production" && (I1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the component. It supports those theme colors that make sense for this component.
   * @default 'default'
   */
  color: n.oneOf(["default", "inherit", "primary"]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * If `true`, the List Subheader will not have gutters.
   * @default false
   */
  disableGutters: n.bool,
  /**
   * If `true`, the List Subheader will not stick to the top during scroll.
   * @default false
   */
  disableSticky: n.bool,
  /**
   * If `true`, the List Subheader is indented.
   * @default false
   */
  inset: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const EH = I1, RH = Kn(/* @__PURE__ */ z("path", {
  d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
}), "Cancel");
function OH(e) {
  return je("MuiChip", e);
}
const wH = He("MuiChip", ["root", "sizeSmall", "sizeMedium", "colorError", "colorInfo", "colorPrimary", "colorSecondary", "colorSuccess", "colorWarning", "disabled", "clickable", "clickableColorPrimary", "clickableColorSecondary", "deletable", "deletableColorPrimary", "deletableColorSecondary", "outlined", "filled", "outlinedPrimary", "outlinedSecondary", "filledPrimary", "filledSecondary", "avatar", "avatarSmall", "avatarMedium", "avatarColorPrimary", "avatarColorSecondary", "icon", "iconSmall", "iconMedium", "iconColorPrimary", "iconColorSecondary", "label", "labelSmall", "labelMedium", "deleteIcon", "deleteIconSmall", "deleteIconMedium", "deleteIconColorPrimary", "deleteIconColorSecondary", "deleteIconOutlinedColorPrimary", "deleteIconOutlinedColorSecondary", "deleteIconFilledColorPrimary", "deleteIconFilledColorSecondary", "focusVisible"]), Tn = wH, kH = ["avatar", "className", "clickable", "color", "component", "deleteIcon", "disabled", "icon", "label", "onClick", "onDelete", "onKeyDown", "onKeyUp", "size", "variant", "tabIndex", "skipFocusWhenDisabled"], NH = (e) => {
  const {
    classes: r,
    disabled: s,
    size: u,
    color: f,
    iconColor: v,
    onDelete: m,
    clickable: y,
    variant: b
  } = e, S = {
    root: ["root", b, s && "disabled", `size${oe(u)}`, `color${oe(f)}`, y && "clickable", y && `clickableColor${oe(f)}`, m && "deletable", m && `deletableColor${oe(f)}`, `${b}${oe(f)}`],
    label: ["label", `label${oe(u)}`],
    avatar: ["avatar", `avatar${oe(u)}`, `avatarColor${oe(f)}`],
    icon: ["icon", `icon${oe(u)}`, `iconColor${oe(v)}`],
    deleteIcon: ["deleteIcon", `deleteIcon${oe(u)}`, `deleteIconColor${oe(f)}`, `deleteIcon${oe(b)}Color${oe(f)}`]
  };
  return Ue(S, OH, r);
}, $H = Z("div", {
  name: "MuiChip",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e, {
      color: u,
      iconColor: f,
      clickable: v,
      onDelete: m,
      size: y,
      variant: b
    } = s;
    return [{
      [`& .${Tn.avatar}`]: r.avatar
    }, {
      [`& .${Tn.avatar}`]: r[`avatar${oe(y)}`]
    }, {
      [`& .${Tn.avatar}`]: r[`avatarColor${oe(u)}`]
    }, {
      [`& .${Tn.icon}`]: r.icon
    }, {
      [`& .${Tn.icon}`]: r[`icon${oe(y)}`]
    }, {
      [`& .${Tn.icon}`]: r[`iconColor${oe(f)}`]
    }, {
      [`& .${Tn.deleteIcon}`]: r.deleteIcon
    }, {
      [`& .${Tn.deleteIcon}`]: r[`deleteIcon${oe(y)}`]
    }, {
      [`& .${Tn.deleteIcon}`]: r[`deleteIconColor${oe(u)}`]
    }, {
      [`& .${Tn.deleteIcon}`]: r[`deleteIcon${oe(b)}Color${oe(u)}`]
    }, r.root, r[`size${oe(y)}`], r[`color${oe(u)}`], v && r.clickable, v && u !== "default" && r[`clickableColor${oe(u)})`], m && r.deletable, m && u !== "default" && r[`deletableColor${oe(u)}`], r[b], r[`${b}${oe(u)}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => {
  const s = e.palette.mode === "light" ? e.palette.grey[700] : e.palette.grey[300];
  return C({
    maxWidth: "100%",
    fontFamily: e.typography.fontFamily,
    fontSize: e.typography.pxToRem(13),
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    height: 32,
    color: (e.vars || e).palette.text.primary,
    backgroundColor: (e.vars || e).palette.action.selected,
    borderRadius: 32 / 2,
    whiteSpace: "nowrap",
    transition: e.transitions.create(["background-color", "box-shadow"]),
    // reset cursor explicitly in case ButtonBase is used
    cursor: "unset",
    // We disable the focus ring for mouse, touch and keyboard users.
    outline: 0,
    textDecoration: "none",
    border: 0,
    // Remove `button` border
    padding: 0,
    // Remove `button` padding
    verticalAlign: "middle",
    boxSizing: "border-box",
    [`&.${Tn.disabled}`]: {
      opacity: (e.vars || e).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`& .${Tn.avatar}`]: {
      marginLeft: 5,
      marginRight: -6,
      width: 24,
      height: 24,
      color: e.vars ? e.vars.palette.Chip.defaultAvatarColor : s,
      fontSize: e.typography.pxToRem(12)
    },
    [`& .${Tn.avatarColorPrimary}`]: {
      color: (e.vars || e).palette.primary.contrastText,
      backgroundColor: (e.vars || e).palette.primary.dark
    },
    [`& .${Tn.avatarColorSecondary}`]: {
      color: (e.vars || e).palette.secondary.contrastText,
      backgroundColor: (e.vars || e).palette.secondary.dark
    },
    [`& .${Tn.avatarSmall}`]: {
      marginLeft: 4,
      marginRight: -4,
      width: 18,
      height: 18,
      fontSize: e.typography.pxToRem(10)
    },
    [`& .${Tn.icon}`]: C({
      marginLeft: 5,
      marginRight: -6
    }, r.size === "small" && {
      fontSize: 18,
      marginLeft: 4,
      marginRight: -4
    }, r.iconColor === r.color && C({
      color: e.vars ? e.vars.palette.Chip.defaultIconColor : s
    }, r.color !== "default" && {
      color: "inherit"
    })),
    [`& .${Tn.deleteIcon}`]: C({
      WebkitTapHighlightColor: "transparent",
      color: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / 0.26)` : Ut(e.palette.text.primary, 0.26),
      fontSize: 22,
      cursor: "pointer",
      margin: "0 5px 0 -6px",
      "&:hover": {
        color: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / 0.4)` : Ut(e.palette.text.primary, 0.4)
      }
    }, r.size === "small" && {
      fontSize: 16,
      marginRight: 4,
      marginLeft: -4
    }, r.color !== "default" && {
      color: e.vars ? `rgba(${e.vars.palette[r.color].contrastTextChannel} / 0.7)` : Ut(e.palette[r.color].contrastText, 0.7),
      "&:hover, &:active": {
        color: (e.vars || e).palette[r.color].contrastText
      }
    })
  }, r.size === "small" && {
    height: 24
  }, r.color !== "default" && {
    backgroundColor: (e.vars || e).palette[r.color].main,
    color: (e.vars || e).palette[r.color].contrastText
  }, r.onDelete && {
    [`&.${Tn.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Ut(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
    }
  }, r.onDelete && r.color !== "default" && {
    [`&.${Tn.focusVisible}`]: {
      backgroundColor: (e.vars || e).palette[r.color].dark
    }
  });
}, ({
  theme: e,
  ownerState: r
}) => C({}, r.clickable && {
  userSelect: "none",
  WebkitTapHighlightColor: "transparent",
  cursor: "pointer",
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Ut(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity)
  },
  [`&.${Tn.focusVisible}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Ut(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
  },
  "&:active": {
    boxShadow: (e.vars || e).shadows[1]
  }
}, r.clickable && r.color !== "default" && {
  [`&:hover, &.${Tn.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette[r.color].dark
  }
}), ({
  theme: e,
  ownerState: r
}) => C({}, r.variant === "outlined" && {
  backgroundColor: "transparent",
  border: e.vars ? `1px solid ${e.vars.palette.Chip.defaultBorder}` : `1px solid ${e.palette.mode === "light" ? e.palette.grey[400] : e.palette.grey[700]}`,
  [`&.${Tn.clickable}:hover`]: {
    backgroundColor: (e.vars || e).palette.action.hover
  },
  [`&.${Tn.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette.action.focus
  },
  [`& .${Tn.avatar}`]: {
    marginLeft: 4
  },
  [`& .${Tn.avatarSmall}`]: {
    marginLeft: 2
  },
  [`& .${Tn.icon}`]: {
    marginLeft: 4
  },
  [`& .${Tn.iconSmall}`]: {
    marginLeft: 2
  },
  [`& .${Tn.deleteIcon}`]: {
    marginRight: 5
  },
  [`& .${Tn.deleteIconSmall}`]: {
    marginRight: 3
  }
}, r.variant === "outlined" && r.color !== "default" && {
  color: (e.vars || e).palette[r.color].main,
  border: `1px solid ${e.vars ? `rgba(${e.vars.palette[r.color].mainChannel} / 0.7)` : Ut(e.palette[r.color].main, 0.7)}`,
  [`&.${Tn.clickable}:hover`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette[r.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Ut(e.palette[r.color].main, e.palette.action.hoverOpacity)
  },
  [`&.${Tn.focusVisible}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette[r.color].mainChannel} / ${e.vars.palette.action.focusOpacity})` : Ut(e.palette[r.color].main, e.palette.action.focusOpacity)
  },
  [`& .${Tn.deleteIcon}`]: {
    color: e.vars ? `rgba(${e.vars.palette[r.color].mainChannel} / 0.7)` : Ut(e.palette[r.color].main, 0.7),
    "&:hover, &:active": {
      color: (e.vars || e).palette[r.color].main
    }
  }
})), MH = Z("span", {
  name: "MuiChip",
  slot: "Label",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e, {
      size: u
    } = s;
    return [r.label, r[`label${oe(u)}`]];
  }
})(({
  ownerState: e
}) => C({
  overflow: "hidden",
  textOverflow: "ellipsis",
  paddingLeft: 12,
  paddingRight: 12,
  whiteSpace: "nowrap"
}, e.variant === "outlined" && {
  paddingLeft: 11,
  paddingRight: 11
}, e.size === "small" && {
  paddingLeft: 8,
  paddingRight: 8
}, e.size === "small" && e.variant === "outlined" && {
  paddingLeft: 7,
  paddingRight: 7
}));
function Ak(e) {
  return e.key === "Backspace" || e.key === "Delete";
}
const sM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiChip"
  }), {
    avatar: f,
    className: v,
    clickable: m,
    color: y = "default",
    component: b,
    deleteIcon: S,
    disabled: E = !1,
    icon: k,
    label: D,
    onClick: M,
    onDelete: P,
    onKeyDown: L,
    onKeyUp: w,
    size: _ = "medium",
    variant: V = "filled",
    tabIndex: A,
    skipFocusWhenDisabled: j = !1
    // TODO v6: Rename to `focusableWhenDisabled`.
  } = u, U = me(u, kH), $ = O.useRef(null), F = yn($, s), G = (ne) => {
    ne.stopPropagation(), P && P(ne);
  }, Y = (ne) => {
    ne.currentTarget === ne.target && Ak(ne) && ne.preventDefault(), L && L(ne);
  }, Q = (ne) => {
    ne.currentTarget === ne.target && (P && Ak(ne) ? P(ne) : ne.key === "Escape" && $.current && $.current.blur()), w && w(ne);
  }, q = m !== !1 && M ? !0 : m, re = q || P ? er : b || "div", ee = C({}, u, {
    component: re,
    disabled: E,
    size: _,
    color: y,
    iconColor: /* @__PURE__ */ O.isValidElement(k) && k.props.color || y,
    onDelete: !!P,
    clickable: q,
    variant: V
  }), J = NH(ee), ce = re === er ? C({
    component: b || "div",
    focusVisibleClassName: J.focusVisible
  }, P && {
    disableRipple: !0
  }) : {};
  let de = null;
  P && (de = S && /* @__PURE__ */ O.isValidElement(S) ? /* @__PURE__ */ O.cloneElement(S, {
    className: pe(S.props.className, J.deleteIcon),
    onClick: G
  }) : /* @__PURE__ */ z(RH, {
    className: pe(J.deleteIcon),
    onClick: G
  }));
  let fe = null;
  f && /* @__PURE__ */ O.isValidElement(f) && (fe = /* @__PURE__ */ O.cloneElement(f, {
    className: pe(J.avatar, f.props.className)
  }));
  let K = null;
  return k && /* @__PURE__ */ O.isValidElement(k) && (K = /* @__PURE__ */ O.cloneElement(k, {
    className: pe(J.icon, k.props.className)
  })), process.env.NODE_ENV !== "production" && fe && K && console.error("MUI: The Chip component can not handle the avatar and the icon prop at the same time. Pick one."), /* @__PURE__ */ gt($H, C({
    as: re,
    className: pe(J.root, v),
    disabled: q && E ? !0 : void 0,
    onClick: M,
    onKeyDown: Y,
    onKeyUp: Q,
    ref: F,
    tabIndex: j && E ? -1 : A,
    ownerState: ee
  }, ce, U, {
    children: [fe || K, /* @__PURE__ */ z(MH, {
      className: pe(J.label),
      ownerState: ee,
      children: D
    }), de]
  }));
});
process.env.NODE_ENV !== "production" && (sM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The Avatar element to display.
   */
  avatar: n.element,
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: m1,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * If `true`, the chip will appear clickable, and will raise when pressed,
   * even if the onClick prop is not defined.
   * If `false`, the chip will not appear clickable, even if onClick prop is defined.
   * This can be used, for example,
   * along with the component prop to indicate an anchor Chip is clickable.
   * Note: this controls the UI and does not affect the onClick event.
   */
  clickable: n.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: n.oneOfType([n.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), n.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * Override the default delete icon element. Shown only if `onDelete` is set.
   */
  deleteIcon: n.element,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * Icon element.
   */
  icon: n.element,
  /**
   * The content of the component.
   */
  label: n.node,
  /**
   * @ignore
   */
  onClick: n.func,
  /**
   * Callback fired when the delete icon is clicked.
   * If set, the delete icon will be shown.
   */
  onDelete: n.func,
  /**
   * @ignore
   */
  onKeyDown: n.func,
  /**
   * @ignore
   */
  onKeyUp: n.func,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: n.oneOfType([n.oneOf(["medium", "small"]), n.string]),
  /**
   * If `true`, allows the disabled chip to escape focus.
   * If `false`, allows the disabled chip to receive focus.
   * @default false
   */
  skipFocusWhenDisabled: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * @ignore
   */
  tabIndex: n.number,
  /**
   * The variant to use.
   * @default 'filled'
   */
  variant: n.oneOfType([n.oneOf(["filled", "outlined"]), n.string])
});
const DH = sM;
function $l({
  props: e,
  states: r,
  muiFormControl: s
}) {
  return r.reduce((u, f) => (u[f] = e[f], s && typeof e[f] > "u" && (u[f] = s[f]), u), {});
}
const lM = /* @__PURE__ */ O.createContext(void 0);
process.env.NODE_ENV !== "production" && (lM.displayName = "FormControlContext");
const _0 = lM;
function Wi() {
  return O.useContext(_0);
}
function _1(e) {
  return /* @__PURE__ */ z(KN, C({}, e, {
    defaultTheme: $0,
    themeId: zc
  }));
}
process.env.NODE_ENV !== "production" && (_1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: n.oneOfType([n.array, n.func, n.number, n.object, n.string, n.bool])
});
function Bk(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function b0(e, r = !1) {
  return e && (Bk(e.value) && e.value !== "" || r && Bk(e.defaultValue) && e.defaultValue !== "");
}
function PH(e) {
  return e.startAdornment;
}
function LH(e) {
  return je("MuiInputBase", e);
}
const IH = He("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]), Aa = IH, _H = ["aria-describedby", "autoComplete", "autoFocus", "className", "color", "components", "componentsProps", "defaultValue", "disabled", "disableInjectingGlobalStyles", "endAdornment", "error", "fullWidth", "id", "inputComponent", "inputProps", "inputRef", "margin", "maxRows", "minRows", "multiline", "name", "onBlur", "onChange", "onClick", "onFocus", "onKeyDown", "onKeyUp", "placeholder", "readOnly", "renderSuffix", "rows", "size", "slotProps", "slots", "startAdornment", "type", "value"], A0 = (e, r) => {
  const {
    ownerState: s
  } = e;
  return [r.root, s.formControl && r.formControl, s.startAdornment && r.adornedStart, s.endAdornment && r.adornedEnd, s.error && r.error, s.size === "small" && r.sizeSmall, s.multiline && r.multiline, s.color && r[`color${oe(s.color)}`], s.fullWidth && r.fullWidth, s.hiddenLabel && r.hiddenLabel];
}, B0 = (e, r) => {
  const {
    ownerState: s
  } = e;
  return [r.input, s.size === "small" && r.inputSizeSmall, s.multiline && r.inputMultiline, s.type === "search" && r.inputTypeSearch, s.startAdornment && r.inputAdornedStart, s.endAdornment && r.inputAdornedEnd, s.hiddenLabel && r.inputHiddenLabel];
}, AH = (e) => {
  const {
    classes: r,
    color: s,
    disabled: u,
    error: f,
    endAdornment: v,
    focused: m,
    formControl: y,
    fullWidth: b,
    hiddenLabel: S,
    multiline: E,
    readOnly: k,
    size: D,
    startAdornment: M,
    type: P
  } = e, L = {
    root: ["root", `color${oe(s)}`, u && "disabled", f && "error", b && "fullWidth", m && "focused", y && "formControl", D && D !== "medium" && `size${oe(D)}`, E && "multiline", M && "adornedStart", v && "adornedEnd", S && "hiddenLabel", k && "readOnly"],
    input: ["input", u && "disabled", P === "search" && "inputTypeSearch", E && "inputMultiline", D === "small" && "inputSizeSmall", S && "inputHiddenLabel", M && "inputAdornedStart", v && "inputAdornedEnd", k && "readOnly"]
  };
  return Ue(L, LH, r);
}, z0 = Z("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: A0
})(({
  theme: e,
  ownerState: r
}) => C({}, e.typography.body1, {
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${Aa.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  }
}, r.multiline && C({
  padding: "4px 0 5px"
}, r.size === "small" && {
  paddingTop: 1
}), r.fullWidth && {
  width: "100%"
})), F0 = Z("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: B0
})(({
  theme: e,
  ownerState: r
}) => {
  const s = e.palette.mode === "light", u = C({
    color: "currentColor"
  }, e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: s ? 0.42 : 0.5
  }, {
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }), f = {
    opacity: "0 !important"
  }, v = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: s ? 0.42 : 0.5
  };
  return C({
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    // Fix IE11 width issue
    animationName: "mui-auto-fill-cancel",
    animationDuration: "10ms",
    "&::-webkit-input-placeholder": u,
    "&::-moz-placeholder": u,
    // Firefox 19+
    "&:-ms-input-placeholder": u,
    // IE11
    "&::-ms-input-placeholder": u,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${Aa.formControl} &`]: {
      "&::-webkit-input-placeholder": f,
      "&::-moz-placeholder": f,
      // Firefox 19+
      "&:-ms-input-placeholder": f,
      // IE11
      "&::-ms-input-placeholder": f,
      // Edge
      "&:focus::-webkit-input-placeholder": v,
      "&:focus::-moz-placeholder": v,
      // Firefox 19+
      "&:focus:-ms-input-placeholder": v,
      // IE11
      "&:focus::-ms-input-placeholder": v
      // Edge
    },
    [`&.${Aa.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    "&:-webkit-autofill": {
      animationDuration: "5000s",
      animationName: "mui-auto-fill"
    }
  }, r.size === "small" && {
    paddingTop: 1
  }, r.multiline && {
    height: "auto",
    resize: "none",
    padding: 0,
    paddingTop: 0
  }, r.type === "search" && {
    // Improve type search style.
    MozAppearance: "textfield"
  });
}), BH = /* @__PURE__ */ z(_1, {
  styles: {
    "@keyframes mui-auto-fill": {
      from: {
        display: "block"
      }
    },
    "@keyframes mui-auto-fill-cancel": {
      from: {
        display: "block"
      }
    }
  }
}), cM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u;
  const f = Ve({
    props: r,
    name: "MuiInputBase"
  }), {
    "aria-describedby": v,
    autoComplete: m,
    autoFocus: y,
    className: b,
    components: S = {},
    componentsProps: E = {},
    defaultValue: k,
    disabled: D,
    disableInjectingGlobalStyles: M,
    endAdornment: P,
    fullWidth: L = !1,
    id: w,
    inputComponent: _ = "input",
    inputProps: V = {},
    inputRef: A,
    maxRows: j,
    minRows: U,
    multiline: $ = !1,
    name: F,
    onBlur: G,
    onChange: Y,
    onClick: Q,
    onFocus: q,
    onKeyDown: re,
    onKeyUp: ee,
    placeholder: J,
    readOnly: ce,
    renderSuffix: de,
    rows: fe,
    slotProps: K = {},
    slots: ne = {},
    startAdornment: ve,
    type: Ke = "text",
    value: tt
  } = f, Ie = me(f, _H), De = V.value != null ? V.value : tt, {
    current: Ye
  } = O.useRef(De != null), ke = O.useRef(), lt = O.useCallback((Ce) => {
    process.env.NODE_ENV !== "production" && Ce && Ce.nodeName !== "INPUT" && !Ce.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), xe = yn(ke, A, V.ref, lt), [ze, ut] = O.useState(!1), Xe = Wi();
  process.env.NODE_ENV !== "production" && O.useEffect(() => {
    if (Xe)
      return Xe.registerEffect();
  }, [Xe]);
  const rt = $l({
    props: f,
    muiFormControl: Xe,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  rt.focused = Xe ? Xe.focused : ze, O.useEffect(() => {
    !Xe && D && ze && (ut(!1), G && G());
  }, [Xe, D, ze, G]);
  const nt = Xe && Xe.onFilled, le = Xe && Xe.onEmpty, $e = O.useCallback((Ce) => {
    b0(Ce) ? nt && nt() : le && le();
  }, [nt, le]);
  ur(() => {
    Ye && $e({
      value: De
    });
  }, [De, $e, Ye]);
  const Oe = (Ce) => {
    if (rt.disabled) {
      Ce.stopPropagation();
      return;
    }
    q && q(Ce), V.onFocus && V.onFocus(Ce), Xe && Xe.onFocus ? Xe.onFocus(Ce) : ut(!0);
  }, dt = (Ce) => {
    G && G(Ce), V.onBlur && V.onBlur(Ce), Xe && Xe.onBlur ? Xe.onBlur(Ce) : ut(!1);
  }, it = (Ce, ...he) => {
    if (!Ye) {
      const Qe = Ce.target || ke.current;
      if (Qe == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : Ns(1));
      $e({
        value: Qe.value
      });
    }
    V.onChange && V.onChange(Ce, ...he), Y && Y(Ce, ...he);
  };
  O.useEffect(() => {
    $e(ke.current);
  }, []);
  const zt = (Ce) => {
    ke.current && Ce.currentTarget === Ce.target && ke.current.focus(), Q && Q(Ce);
  };
  let Dt = _, ht = V;
  $ && Dt === "input" && (fe ? (process.env.NODE_ENV !== "production" && (U || j) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), ht = C({
    type: void 0,
    minRows: fe,
    maxRows: fe
  }, ht)) : ht = C({
    type: void 0,
    maxRows: j,
    minRows: U
  }, ht), Dt = Q$);
  const Tt = (Ce) => {
    $e(Ce.animationName === "mui-auto-fill-cancel" ? ke.current : {
      value: "x"
    });
  };
  O.useEffect(() => {
    Xe && Xe.setAdornedStart(!!ve);
  }, [Xe, ve]);
  const Lt = C({}, f, {
    color: rt.color || "primary",
    disabled: rt.disabled,
    endAdornment: P,
    error: rt.error,
    focused: rt.focused,
    formControl: Xe,
    fullWidth: L,
    hiddenLabel: rt.hiddenLabel,
    multiline: $,
    size: rt.size,
    startAdornment: ve,
    type: Ke
  }), At = AH(Lt), tn = ne.root || S.Root || z0, an = K.root || E.root || {}, Qt = ne.input || S.Input || F0;
  return ht = C({}, ht, (u = K.input) != null ? u : E.input), /* @__PURE__ */ gt(O.Fragment, {
    children: [!M && BH, /* @__PURE__ */ gt(tn, C({}, an, !Fi(tn) && {
      ownerState: C({}, Lt, an.ownerState)
    }, {
      ref: s,
      onClick: zt
    }, Ie, {
      className: pe(At.root, an.className, b, ce && "MuiInputBase-readOnly"),
      children: [ve, /* @__PURE__ */ z(_0.Provider, {
        value: null,
        children: /* @__PURE__ */ z(Qt, C({
          ownerState: Lt,
          "aria-invalid": rt.error,
          "aria-describedby": v,
          autoComplete: m,
          autoFocus: y,
          defaultValue: k,
          disabled: rt.disabled,
          id: w,
          onAnimationStart: Tt,
          name: F,
          placeholder: J,
          readOnly: ce,
          required: rt.required,
          rows: fe,
          value: De,
          onKeyDown: re,
          onKeyUp: ee,
          type: Ke
        }, ht, !Fi(Qt) && {
          as: Dt,
          ownerState: C({}, Lt, ht.ownerState)
        }, {
          ref: xe,
          className: pe(At.input, ht.className, ce && "MuiInputBase-readOnly"),
          onBlur: dt,
          onChange: it,
          onFocus: Oe
        }))
      }), P, de ? de(C({}, rt, {
        startAdornment: ve
      })) : null]
    }))]
  });
});
process.env.NODE_ENV !== "production" && (cM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": n.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: n.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: n.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: n.oneOfType([n.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), n.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: n.shape({
    Input: n.elementType,
    Root: n.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: n.shape({
    input: n.object,
    root: n.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: n.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: n.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: n.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: n.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: n.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: n.bool,
  /**
   * The id of the `input` element.
   */
  id: n.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: jc,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: n.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Tr,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: n.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: n.oneOfType([n.number, n.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: n.oneOfType([n.number, n.string]),
  /**
   * If `true`, a [TextareaAutosize](/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: n.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: n.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: n.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: n.func,
  /**
   * @ignore
   */
  onClick: n.func,
  /**
   * @ignore
   */
  onFocus: n.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: n.func,
  /**
   * @ignore
   */
  onKeyDown: n.func,
  /**
   * @ignore
   */
  onKeyUp: n.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: n.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: n.bool,
  /**
   * @ignore
   */
  renderSuffix: n.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: n.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: n.oneOfType([n.number, n.string]),
  /**
   * The size of the component.
   */
  size: n.oneOfType([n.oneOf(["medium", "small"]), n.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: n.shape({
    input: n.object,
    root: n.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: n.shape({
    input: n.elementType,
    root: n.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: n.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: n.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: n.any
});
const j0 = cM;
function zH(e) {
  return je("MuiInput", e);
}
const FH = C({}, Aa, He("MuiInput", ["root", "underline", "input"])), Ic = FH;
function jH(e) {
  return je("MuiOutlinedInput", e);
}
const UH = C({}, Aa, He("MuiOutlinedInput", ["root", "notchedOutline", "input"])), ws = UH;
function VH(e) {
  return je("MuiFilledInput", e);
}
const HH = C({}, Aa, He("MuiFilledInput", ["root", "underline", "input"])), Ba = HH, A1 = Kn(/* @__PURE__ */ z("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown");
function WH(e) {
  return je("MuiAutocomplete", e);
}
const GH = He("MuiAutocomplete", ["root", "expanded", "fullWidth", "focused", "focusVisible", "tag", "tagSizeSmall", "tagSizeMedium", "hasPopupIcon", "hasClearIcon", "inputRoot", "input", "inputFocused", "endAdornment", "clearIndicator", "popupIndicator", "popupIndicatorOpen", "popper", "popperDisablePortal", "paper", "listbox", "loading", "noOptions", "option", "groupLabel", "groupUl"]), mn = GH;
var zk, Fk;
const qH = ["autoComplete", "autoHighlight", "autoSelect", "blurOnSelect", "ChipProps", "className", "clearIcon", "clearOnBlur", "clearOnEscape", "clearText", "closeText", "componentsProps", "defaultValue", "disableClearable", "disableCloseOnSelect", "disabled", "disabledItemsFocusable", "disableListWrap", "disablePortal", "filterOptions", "filterSelectedOptions", "forcePopupIcon", "freeSolo", "fullWidth", "getLimitTagsText", "getOptionDisabled", "getOptionKey", "getOptionLabel", "isOptionEqualToValue", "groupBy", "handleHomeEndKeys", "id", "includeInputInList", "inputValue", "limitTags", "ListboxComponent", "ListboxProps", "loading", "loadingText", "multiple", "noOptionsText", "onChange", "onClose", "onHighlightChange", "onInputChange", "onOpen", "open", "openOnFocus", "openText", "options", "PaperComponent", "PopperComponent", "popupIcon", "readOnly", "renderGroup", "renderInput", "renderOption", "renderTags", "selectOnFocus", "size", "slotProps", "value"], YH = ["ref"], KH = (e) => {
  const {
    classes: r,
    disablePortal: s,
    expanded: u,
    focused: f,
    fullWidth: v,
    hasClearIcon: m,
    hasPopupIcon: y,
    inputFocused: b,
    popupOpen: S,
    size: E
  } = e, k = {
    root: ["root", u && "expanded", f && "focused", v && "fullWidth", m && "hasClearIcon", y && "hasPopupIcon"],
    inputRoot: ["inputRoot"],
    input: ["input", b && "inputFocused"],
    tag: ["tag", `tagSize${oe(E)}`],
    endAdornment: ["endAdornment"],
    clearIndicator: ["clearIndicator"],
    popupIndicator: ["popupIndicator", S && "popupIndicatorOpen"],
    popper: ["popper", s && "popperDisablePortal"],
    paper: ["paper"],
    listbox: ["listbox"],
    loading: ["loading"],
    noOptions: ["noOptions"],
    option: ["option"],
    groupLabel: ["groupLabel"],
    groupUl: ["groupUl"]
  };
  return Ue(k, WH, r);
}, XH = Z("div", {
  name: "MuiAutocomplete",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e, {
      fullWidth: u,
      hasClearIcon: f,
      hasPopupIcon: v,
      inputFocused: m,
      size: y
    } = s;
    return [{
      [`& .${mn.tag}`]: r.tag
    }, {
      [`& .${mn.tag}`]: r[`tagSize${oe(y)}`]
    }, {
      [`& .${mn.inputRoot}`]: r.inputRoot
    }, {
      [`& .${mn.input}`]: r.input
    }, {
      [`& .${mn.input}`]: m && r.inputFocused
    }, r.root, u && r.fullWidth, v && r.hasPopupIcon, f && r.hasClearIcon];
  }
})(({
  ownerState: e
}) => C({
  [`&.${mn.focused} .${mn.clearIndicator}`]: {
    visibility: "visible"
  },
  /* Avoid double tap issue on iOS */
  "@media (pointer: fine)": {
    [`&:hover .${mn.clearIndicator}`]: {
      visibility: "visible"
    }
  }
}, e.fullWidth && {
  width: "100%"
}, {
  [`& .${mn.tag}`]: C({
    margin: 3,
    maxWidth: "calc(100% - 6px)"
  }, e.size === "small" && {
    margin: 2,
    maxWidth: "calc(100% - 4px)"
  }),
  [`& .${mn.inputRoot}`]: {
    flexWrap: "wrap",
    [`.${mn.hasPopupIcon}&, .${mn.hasClearIcon}&`]: {
      paddingRight: 26 + 4
    },
    [`.${mn.hasPopupIcon}.${mn.hasClearIcon}&`]: {
      paddingRight: 52 + 4
    },
    [`& .${mn.input}`]: {
      width: 0,
      minWidth: 30
    }
  },
  [`& .${Ic.root}`]: {
    paddingBottom: 1,
    "& .MuiInput-input": {
      padding: "4px 4px 4px 0px"
    }
  },
  [`& .${Ic.root}.${Aa.sizeSmall}`]: {
    [`& .${Ic.input}`]: {
      padding: "2px 4px 3px 0"
    }
  },
  [`& .${ws.root}`]: {
    padding: 9,
    [`.${mn.hasPopupIcon}&, .${mn.hasClearIcon}&`]: {
      paddingRight: 26 + 4 + 9
    },
    [`.${mn.hasPopupIcon}.${mn.hasClearIcon}&`]: {
      paddingRight: 52 + 4 + 9
    },
    [`& .${mn.input}`]: {
      padding: "7.5px 4px 7.5px 5px"
    },
    [`& .${mn.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${ws.root}.${Aa.sizeSmall}`]: {
    // Don't specify paddingRight, as it overrides the default value set when there is only
    // one of the popup or clear icon as the specificity is equal so the latter one wins
    paddingTop: 6,
    paddingBottom: 6,
    paddingLeft: 6,
    [`& .${mn.input}`]: {
      padding: "2.5px 4px 2.5px 8px"
    }
  },
  [`& .${Ba.root}`]: {
    paddingTop: 19,
    paddingLeft: 8,
    [`.${mn.hasPopupIcon}&, .${mn.hasClearIcon}&`]: {
      paddingRight: 26 + 4 + 9
    },
    [`.${mn.hasPopupIcon}.${mn.hasClearIcon}&`]: {
      paddingRight: 52 + 4 + 9
    },
    [`& .${Ba.input}`]: {
      padding: "7px 4px"
    },
    [`& .${mn.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${Ba.root}.${Aa.sizeSmall}`]: {
    paddingBottom: 1,
    [`& .${Ba.input}`]: {
      padding: "2.5px 4px"
    }
  },
  [`& .${Aa.hiddenLabel}`]: {
    paddingTop: 8
  },
  [`& .${Ba.root}.${Aa.hiddenLabel}`]: {
    paddingTop: 0,
    paddingBottom: 0,
    [`& .${mn.input}`]: {
      paddingTop: 16,
      paddingBottom: 17
    }
  },
  [`& .${Ba.root}.${Aa.hiddenLabel}.${Aa.sizeSmall}`]: {
    [`& .${mn.input}`]: {
      paddingTop: 8,
      paddingBottom: 9
    }
  },
  [`& .${mn.input}`]: C({
    flexGrow: 1,
    textOverflow: "ellipsis",
    opacity: 0
  }, e.inputFocused && {
    opacity: 1
  })
})), QH = Z("div", {
  name: "MuiAutocomplete",
  slot: "EndAdornment",
  overridesResolver: (e, r) => r.endAdornment
})({
  // We use a position absolute to support wrapping tags.
  position: "absolute",
  right: 0,
  top: "50%",
  transform: "translate(0, -50%)"
}), ZH = Z(rd, {
  name: "MuiAutocomplete",
  slot: "ClearIndicator",
  overridesResolver: (e, r) => r.clearIndicator
})({
  marginRight: -2,
  padding: 4,
  visibility: "hidden"
}), JH = Z(rd, {
  name: "MuiAutocomplete",
  slot: "PopupIndicator",
  overridesResolver: ({
    ownerState: e
  }, r) => C({}, r.popupIndicator, e.popupOpen && r.popupIndicatorOpen)
})(({
  ownerState: e
}) => C({
  padding: 2,
  marginRight: -2
}, e.popupOpen && {
  transform: "rotate(180deg)"
})), e3 = Z(I0, {
  name: "MuiAutocomplete",
  slot: "Popper",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [{
      [`& .${mn.option}`]: r.option
    }, r.popper, s.disablePortal && r.popperDisablePortal];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  zIndex: (e.vars || e).zIndex.modal
}, r.disablePortal && {
  position: "absolute"
})), t3 = Z(ui, {
  name: "MuiAutocomplete",
  slot: "Paper",
  overridesResolver: (e, r) => r.paper
})(({
  theme: e
}) => C({}, e.typography.body1, {
  overflow: "auto"
})), n3 = Z("div", {
  name: "MuiAutocomplete",
  slot: "Loading",
  overridesResolver: (e, r) => r.loading
})(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  padding: "14px 16px"
})), o3 = Z("div", {
  name: "MuiAutocomplete",
  slot: "NoOptions",
  overridesResolver: (e, r) => r.noOptions
})(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  padding: "14px 16px"
})), r3 = Z("div", {
  name: "MuiAutocomplete",
  slot: "Listbox",
  overridesResolver: (e, r) => r.listbox
})(({
  theme: e
}) => ({
  listStyle: "none",
  margin: 0,
  padding: "8px 0",
  maxHeight: "40vh",
  overflow: "auto",
  position: "relative",
  [`& .${mn.option}`]: {
    minHeight: 48,
    display: "flex",
    overflow: "hidden",
    justifyContent: "flex-start",
    alignItems: "center",
    cursor: "pointer",
    paddingTop: 6,
    boxSizing: "border-box",
    outline: "0",
    WebkitTapHighlightColor: "transparent",
    paddingBottom: 6,
    paddingLeft: 16,
    paddingRight: 16,
    [e.breakpoints.up("sm")]: {
      minHeight: "auto"
    },
    [`&.${mn.focused}`]: {
      backgroundColor: (e.vars || e).palette.action.hover,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    '&[aria-disabled="true"]': {
      opacity: (e.vars || e).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`&.${mn.focusVisible}`]: {
      backgroundColor: (e.vars || e).palette.action.focus
    },
    '&[aria-selected="true"]': {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Ut(e.palette.primary.main, e.palette.action.selectedOpacity),
      [`&.${mn.focused}`]: {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Ut(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: (e.vars || e).palette.action.selected
        }
      },
      [`&.${mn.focusVisible}`]: {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Ut(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
      }
    }
  }
})), a3 = Z(EH, {
  name: "MuiAutocomplete",
  slot: "GroupLabel",
  overridesResolver: (e, r) => r.groupLabel
})(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  top: -8
})), i3 = Z("ul", {
  name: "MuiAutocomplete",
  slot: "GroupUl",
  overridesResolver: (e, r) => r.groupUl
})({
  padding: 0,
  [`& .${mn.option}`]: {
    paddingLeft: 24
  }
}), uM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u, f, v, m;
  const y = Ve({
    props: r,
    name: "MuiAutocomplete"
  }), {
    autoComplete: b = !1,
    autoHighlight: S = !1,
    autoSelect: E = !1,
    blurOnSelect: k = !1,
    ChipProps: D,
    className: M,
    clearIcon: P = zk || (zk = /* @__PURE__ */ z(J$, {
      fontSize: "small"
    })),
    clearOnBlur: L = !y.freeSolo,
    clearOnEscape: w = !1,
    clearText: _ = "Clear",
    closeText: V = "Close",
    componentsProps: A = {},
    defaultValue: j = y.multiple ? [] : null,
    disableClearable: U = !1,
    disableCloseOnSelect: $ = !1,
    disabled: F = !1,
    disabledItemsFocusable: G = !1,
    disableListWrap: Y = !1,
    disablePortal: Q = !1,
    filterSelectedOptions: q = !1,
    forcePopupIcon: re = "auto",
    freeSolo: ee = !1,
    fullWidth: J = !1,
    getLimitTagsText: ce = (ue) => `+${ue}`,
    getOptionLabel: de,
    groupBy: fe,
    handleHomeEndKeys: K = !y.freeSolo,
    includeInputInList: ne = !1,
    limitTags: ve = -1,
    ListboxComponent: Ke = "ul",
    ListboxProps: tt,
    loading: Ie = !1,
    loadingText: De = "Loading…",
    multiple: Ye = !1,
    noOptionsText: ke = "No options",
    openOnFocus: lt = !1,
    openText: xe = "Open",
    PaperComponent: ze = ui,
    PopperComponent: ut = I0,
    popupIcon: Xe = Fk || (Fk = /* @__PURE__ */ z(A1, {})),
    readOnly: rt = !1,
    renderGroup: nt,
    renderInput: le,
    renderOption: $e,
    renderTags: Oe,
    selectOnFocus: dt = !y.freeSolo,
    size: it = "medium",
    slotProps: zt = {}
  } = y, Dt = me(y, qH), {
    getRootProps: ht,
    getInputProps: Tt,
    getInputLabelProps: Lt,
    getPopupIndicatorProps: At,
    getClearProps: tn,
    getTagProps: an,
    getListboxProps: Qt,
    getOptionProps: Ce,
    value: he,
    dirty: Qe,
    expanded: Me,
    id: et,
    popupOpen: qe,
    focused: We,
    focusedTag: we,
    anchorEl: Fe,
    setAnchorEl: st,
    inputValue: kt,
    groupedOptions: Nt
  } = M5(C({}, y, {
    componentName: "Autocomplete"
  })), nn = !U && !F && Qe && !rt, qt = (!ee || re === !0) && re !== !1, {
    onMouseDown: on
  } = Tt(), {
    ref: _n
  } = tt ?? {}, fo = Qt(), {
    ref: dr
  } = fo, Fr = me(fo, YH), ja = yn(dr, _n), No = de || ((ue) => {
    var Ge;
    return (Ge = ue.label) != null ? Ge : ue;
  }), Rn = C({}, y, {
    disablePortal: Q,
    expanded: Me,
    focused: We,
    fullWidth: J,
    getOptionLabel: No,
    hasClearIcon: nn,
    hasPopupIcon: qt,
    inputFocused: we === -1,
    popupOpen: qe,
    size: it
  }), bn = KH(Rn);
  let An;
  if (Ye && he.length > 0) {
    const ue = (Ge) => C({
      className: bn.tag,
      disabled: F
    }, an(Ge));
    Oe ? An = Oe(he, ue, Rn) : An = he.map((Ge, ft) => /* @__PURE__ */ z(DH, C({
      label: No(Ge),
      size: it
    }, ue({
      index: ft
    }), D)));
  }
  if (ve > -1 && Array.isArray(An)) {
    const ue = An.length - ve;
    !We && ue > 0 && (An = An.splice(0, ve), An.push(/* @__PURE__ */ z("span", {
      className: bn.tag,
      children: ce(ue)
    }, An.length)));
  }
  const Xn = nt || ((ue) => /* @__PURE__ */ gt("li", {
    children: [/* @__PURE__ */ z(a3, {
      className: bn.groupLabel,
      ownerState: Rn,
      component: "div",
      children: ue.group
    }), /* @__PURE__ */ z(i3, {
      className: bn.groupUl,
      ownerState: Rn,
      children: ue.children
    })]
  }, ue.key)), $o = $e || ((ue, Ge) => /* @__PURE__ */ YN("li", C({}, ue, {
    key: ue.key
  }), No(Ge))), Mo = (ue, Ge) => {
    const ft = Ce({
      option: ue,
      index: Ge
    });
    return $o(C({}, ft, {
      className: bn.option
    }), ue, {
      selected: ft["aria-selected"],
      index: Ge,
      inputValue: kt
    }, Rn);
  }, Er = (u = zt.clearIndicator) != null ? u : A.clearIndicator, Do = (f = zt.paper) != null ? f : A.paper, mo = (v = zt.popper) != null ? v : A.popper, Ne = (m = zt.popupIndicator) != null ? m : A.popupIndicator;
  return /* @__PURE__ */ gt(O.Fragment, {
    children: [/* @__PURE__ */ z(XH, C({
      ref: s,
      className: pe(bn.root, M),
      ownerState: Rn
    }, ht(Dt), {
      children: le({
        id: et,
        disabled: F,
        fullWidth: !0,
        size: it === "small" ? "small" : void 0,
        InputLabelProps: Lt(),
        InputProps: C({
          ref: st,
          className: bn.inputRoot,
          startAdornment: An,
          onClick: (ue) => {
            ue.target === ue.currentTarget && on(ue);
          }
        }, (nn || qt) && {
          endAdornment: /* @__PURE__ */ gt(QH, {
            className: bn.endAdornment,
            ownerState: Rn,
            children: [nn ? /* @__PURE__ */ z(ZH, C({}, tn(), {
              "aria-label": _,
              title: _,
              ownerState: Rn
            }, Er, {
              className: pe(bn.clearIndicator, Er == null ? void 0 : Er.className),
              children: P
            })) : null, qt ? /* @__PURE__ */ z(JH, C({}, At(), {
              disabled: F,
              "aria-label": qe ? V : xe,
              title: qe ? V : xe,
              ownerState: Rn
            }, Ne, {
              className: pe(bn.popupIndicator, Ne == null ? void 0 : Ne.className),
              children: Xe
            })) : null]
          })
        }),
        inputProps: C({
          className: bn.input,
          disabled: F,
          readOnly: rt
        }, Tt())
      })
    })), Fe ? /* @__PURE__ */ z(e3, C({
      as: ut,
      disablePortal: Q,
      style: {
        width: Fe ? Fe.clientWidth : null
      },
      ownerState: Rn,
      role: "presentation",
      anchorEl: Fe,
      open: qe
    }, mo, {
      className: pe(bn.popper, mo == null ? void 0 : mo.className),
      children: /* @__PURE__ */ gt(t3, C({
        ownerState: Rn,
        as: ze
      }, Do, {
        className: pe(bn.paper, Do == null ? void 0 : Do.className),
        children: [Ie && Nt.length === 0 ? /* @__PURE__ */ z(n3, {
          className: bn.loading,
          ownerState: Rn,
          children: De
        }) : null, Nt.length === 0 && !ee && !Ie ? /* @__PURE__ */ z(o3, {
          className: bn.noOptions,
          ownerState: Rn,
          role: "presentation",
          onMouseDown: (ue) => {
            ue.preventDefault();
          },
          children: ke
        }) : null, Nt.length > 0 ? /* @__PURE__ */ z(r3, C({
          as: Ke,
          className: bn.listbox,
          ownerState: Rn
        }, Fr, tt, {
          ref: ja,
          children: Nt.map((ue, Ge) => fe ? Xn({
            key: ue.key,
            group: ue.group,
            children: ue.options.map((ft, en) => Mo(ft, ue.index + en))
          }) : Mo(ue, Ge))
        })) : null]
      }))
    })) : null]
  });
});
process.env.NODE_ENV !== "production" && (uM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the portion of the selected suggestion that the user hasn't typed,
   * known as the completion string, appears inline after the input cursor in the textbox.
   * The inline completion string is visually highlighted and has a selected state.
   * @default false
   */
  autoComplete: n.bool,
  /**
   * If `true`, the first option is automatically highlighted.
   * @default false
   */
  autoHighlight: n.bool,
  /**
   * If `true`, the selected option becomes the value of the input
   * when the Autocomplete loses focus unless the user chooses
   * a different option or changes the character string in the input.
   *
   * When using the `freeSolo` mode, the typed value will be the input value
   * if the Autocomplete loses focus without highlighting an option.
   * @default false
   */
  autoSelect: n.bool,
  /**
   * Control if the input should be blurred when an option is selected:
   *
   * - `false` the input is not blurred.
   * - `true` the input is always blurred.
   * - `touch` the input is blurred after a touch event.
   * - `mouse` the input is blurred after a mouse event.
   * @default false
   */
  blurOnSelect: n.oneOfType([n.oneOf(["mouse", "touch"]), n.bool]),
  /**
   * Props applied to the [`Chip`](/material-ui/api/chip/) element.
   */
  ChipProps: n.object,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The icon to display in place of the default clear icon.
   * @default <ClearIcon fontSize="small" />
   */
  clearIcon: n.node,
  /**
   * If `true`, the input's text is cleared on blur if no value is selected.
   *
   * Set it to `true` if you want to help the user enter a new value.
   * Set it to `false` if you want to help the user resume their search.
   * @default !props.freeSolo
   */
  clearOnBlur: n.bool,
  /**
   * If `true`, clear all values when the user presses escape and the popup is closed.
   * @default false
   */
  clearOnEscape: n.bool,
  /**
   * Override the default text for the *clear* icon button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Clear'
   */
  clearText: n.string,
  /**
   * Override the default text for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: n.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  componentsProps: n.shape({
    clearIndicator: n.object,
    paper: n.object,
    popper: n.object,
    popupIndicator: n.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   * @default props.multiple ? [] : null
   */
  defaultValue: jo(n.any, (e) => e.multiple && e.defaultValue !== void 0 && !Array.isArray(e.defaultValue) ? new Error(["MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.", `However, ${e.defaultValue} was provided.`].join(`
`)) : null),
  /**
   * If `true`, the input can't be cleared.
   * @default false
   */
  disableClearable: n.bool,
  /**
   * If `true`, the popup won't close when a value is selected.
   * @default false
   */
  disableCloseOnSelect: n.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: n.bool,
  /**
   * If `true`, the list box in the popup will not wrap focus.
   * @default false
   */
  disableListWrap: n.bool,
  /**
   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: n.bool,
  /**
   * A function that determines the filtered options to be rendered on search.
   *
   * @default createFilterOptions()
   * @param {Value[]} options The options to render.
   * @param {object} state The state of the component.
   * @returns {Value[]}
   */
  filterOptions: n.func,
  /**
   * If `true`, hide the selected options from the list box.
   * @default false
   */
  filterSelectedOptions: n.bool,
  /**
   * Force the visibility display of the popup icon.
   * @default 'auto'
   */
  forcePopupIcon: n.oneOfType([n.oneOf(["auto"]), n.bool]),
  /**
   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.
   * @default false
   */
  freeSolo: n.bool,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: n.bool,
  /**
   * The label to display when the tags are truncated (`limitTags`).
   *
   * @param {number} more The number of truncated tags.
   * @returns {ReactNode}
   * @default (more) => `+${more}`
   */
  getLimitTagsText: n.func,
  /**
   * Used to determine the disabled state for a given option.
   *
   * @param {Value} option The option to test.
   * @returns {boolean}
   */
  getOptionDisabled: n.func,
  /**
   * Used to determine the key for a given option.
   * This can be useful when the labels of options are not unique (since labels are used as keys by default).
   *
   * @param {Value} option The option to get the key for.
   * @returns {string | number}
   */
  getOptionKey: n.func,
  /**
   * Used to determine the string value for a given option.
   * It's used to fill the input (and the list box options if `renderOption` is not provided).
   *
   * If used in free solo mode, it must accept both the type of the options and a string.
   *
   * @param {Value} option
   * @returns {string}
   * @default (option) => option.label ?? option
   */
  getOptionLabel: n.func,
  /**
   * If provided, the options will be grouped under the returned string.
   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.
   *
   * @param {Value} options The options to group.
   * @returns {string}
   */
  groupBy: n.func,
  /**
   * If `true`, the component handles the "Home" and "End" keys when the popup is open.
   * It should move focus to the first option and last option, respectively.
   * @default !props.freeSolo
   */
  handleHomeEndKeys: n.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide an id it will fall back to a randomly generated one.
   */
  id: n.string,
  /**
   * If `true`, the highlight can move to the input.
   * @default false
   */
  includeInputInList: n.bool,
  /**
   * The input value.
   */
  inputValue: n.string,
  /**
   * Used to determine if the option represents the given value.
   * Uses strict equality by default.
   * ⚠️ Both arguments need to be handled, an option can only match with one value.
   *
   * @param {Value} option The option to test.
   * @param {Value} value The value to test against.
   * @returns {boolean}
   */
  isOptionEqualToValue: n.func,
  /**
   * The maximum number of tags that will be visible when not focused.
   * Set `-1` to disable the limit.
   * @default -1
   */
  limitTags: Co,
  /**
   * The component used to render the listbox.
   * @default 'ul'
   */
  ListboxComponent: n.elementType,
  /**
   * Props applied to the Listbox element.
   */
  ListboxProps: n.object,
  /**
   * If `true`, the component is in a loading state.
   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).
   * @default false
   */
  loading: n.bool,
  /**
   * Text to display when in a loading state.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Loading…'
   */
  loadingText: n.node,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: n.bool,
  /**
   * Text to display when there are no options.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'No options'
   */
  noOptionsText: n.node,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value|Value[]} value The new value of the component.
   * @param {string} reason One of "createOption", "selectOption", "removeOption", "blur" or "clear".
   * @param {string} [details]
   */
  onChange: n.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} reason Can be: `"toggleInput"`, `"escape"`, `"selectOption"`, `"removeOption"`, `"blur"`.
   */
  onClose: n.func,
  /**
   * Callback fired when the highlight option changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value} option The highlighted option.
   * @param {string} reason Can be: `"keyboard"`, `"auto"`, `"mouse"`, `"touch"`.
   */
  onHighlightChange: n.func,
  /**
   * Callback fired when the input value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} value The new value of the text input.
   * @param {string} reason Can be: `"input"` (user input), `"reset"` (programmatic change), `"clear"`.
   */
  onInputChange: n.func,
  /**
   * @ignore
   */
  onKeyDown: n.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: n.func,
  /**
   * If `true`, the component is shown.
   */
  open: n.bool,
  /**
   * If `true`, the popup will open on input focus.
   * @default false
   */
  openOnFocus: n.bool,
  /**
   * Override the default text for the *open popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Open'
   */
  openText: n.string,
  /**
   * Array of options.
   */
  options: n.array.isRequired,
  /**
   * The component used to render the body of the popup.
   * @default Paper
   */
  PaperComponent: n.elementType,
  /**
   * The component used to position the popup.
   * @default Popper
   */
  PopperComponent: n.elementType,
  /**
   * The icon to display in place of the default popup icon.
   * @default <ArrowDropDownIcon />
   */
  popupIcon: n.node,
  /**
   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.
   * @default false
   */
  readOnly: n.bool,
  /**
   * Render the group.
   *
   * @param {AutocompleteRenderGroupParams} params The group to render.
   * @returns {ReactNode}
   */
  renderGroup: n.func,
  /**
   * Render the input.
   *
   * @param {object} params
   * @returns {ReactNode}
   */
  renderInput: n.func.isRequired,
  /**
   * Render the option, use `getOptionLabel` by default.
   *
   * @param {object} props The props to apply on the li element.
   * @param {Value} option The option to render.
   * @param {object} state The state of each option.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderOption: n.func,
  /**
   * Render the selected value.
   *
   * @param {Value[]} value The `value` provided to the component.
   * @param {function} getTagProps A tag props getter.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderTags: n.func,
  /**
   * If `true`, the input's text is selected on focus.
   * It helps the user clear the selected value.
   * @default !props.freeSolo
   */
  selectOnFocus: n.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: n.oneOfType([n.oneOf(["small", "medium"]), n.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: n.shape({
    clearIndicator: n.object,
    paper: n.object,
    popper: n.object,
    popupIndicator: n.object
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The value of the autocomplete.
   *
   * The value must have reference equality with the option in order to be selected.
   * You can customize the equality behavior with the `isOptionEqualToValue` prop.
   */
  value: jo(n.any, (e) => e.multiple && e.value !== void 0 && !Array.isArray(e.value) ? new Error(["MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.", `However, ${e.value} was provided.`].join(`
`)) : null)
});
const nee = uM, s3 = Kn(/* @__PURE__ */ z("path", {
  d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
}), "Person");
function l3(e) {
  return je("MuiAvatar", e);
}
const c3 = He("MuiAvatar", ["root", "colorDefault", "circular", "rounded", "square", "img", "fallback"]), u3 = c3, d3 = ["alt", "children", "className", "component", "slots", "slotProps", "imgProps", "sizes", "src", "srcSet", "variant"], p3 = (e) => {
  const {
    classes: r,
    variant: s,
    colorDefault: u
  } = e;
  return Ue({
    root: ["root", s, u && "colorDefault"],
    img: ["img"],
    fallback: ["fallback"]
  }, l3, r);
}, f3 = Z("div", {
  name: "MuiAvatar",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[s.variant], s.colorDefault && r.colorDefault];
  }
})(({
  theme: e
}) => ({
  position: "relative",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  flexShrink: 0,
  width: 40,
  height: 40,
  fontFamily: e.typography.fontFamily,
  fontSize: e.typography.pxToRem(20),
  lineHeight: 1,
  borderRadius: "50%",
  overflow: "hidden",
  userSelect: "none",
  variants: [{
    props: {
      variant: "rounded"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius
    }
  }, {
    props: {
      variant: "square"
    },
    style: {
      borderRadius: 0
    }
  }, {
    props: {
      colorDefault: !0
    },
    style: C({
      color: (e.vars || e).palette.background.default
    }, e.vars ? {
      backgroundColor: e.vars.palette.Avatar.defaultBg
    } : C({
      backgroundColor: e.palette.grey[400]
    }, e.applyStyles("dark", {
      backgroundColor: e.palette.grey[600]
    })))
  }]
})), m3 = Z("img", {
  name: "MuiAvatar",
  slot: "Img",
  overridesResolver: (e, r) => r.img
})({
  width: "100%",
  height: "100%",
  textAlign: "center",
  // Handle non-square image. The property isn't supported by IE11.
  objectFit: "cover",
  // Hide alt text.
  color: "transparent",
  // Hide the image broken icon, only works on Chrome.
  textIndent: 1e4
}), v3 = Z(s3, {
  name: "MuiAvatar",
  slot: "Fallback",
  overridesResolver: (e, r) => r.fallback
})({
  width: "75%",
  height: "75%"
});
function h3({
  crossOrigin: e,
  referrerPolicy: r,
  src: s,
  srcSet: u
}) {
  const [f, v] = O.useState(!1);
  return O.useEffect(() => {
    if (!s && !u)
      return;
    v(!1);
    let m = !0;
    const y = new Image();
    return y.onload = () => {
      m && v("loaded");
    }, y.onerror = () => {
      m && v("error");
    }, y.crossOrigin = e, y.referrerPolicy = r, y.src = s, u && (y.srcset = u), () => {
      m = !1;
    };
  }, [e, r, s, u]), f;
}
const dM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiAvatar"
  }), {
    alt: f,
    children: v,
    className: m,
    component: y = "div",
    slots: b = {},
    slotProps: S = {},
    imgProps: E,
    sizes: k,
    src: D,
    srcSet: M,
    variant: P = "circular"
  } = u, L = me(u, d3);
  let w = null;
  const _ = h3(C({}, E, {
    src: D,
    srcSet: M
  })), V = D || M, A = V && _ !== "error", j = C({}, u, {
    colorDefault: !A,
    component: y,
    variant: P
  }), U = p3(j), [$, F] = p0("img", {
    className: U.img,
    elementType: m3,
    externalForwardedProps: {
      slots: b,
      slotProps: {
        img: C({}, E, S.img)
      }
    },
    additionalProps: {
      alt: f,
      src: D,
      srcSet: M,
      sizes: k
    },
    ownerState: j
  });
  return A ? w = /* @__PURE__ */ z($, C({}, F)) : v || v === 0 ? w = v : V && f ? w = f[0] : w = /* @__PURE__ */ z(v3, {
    ownerState: j,
    className: U.fallback
  }), /* @__PURE__ */ z(f3, C({
    as: y,
    ownerState: j,
    className: pe(U.root, m),
    ref: s
  }, L, {
    children: w
  }));
});
process.env.NODE_ENV !== "production" && (dM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Used in combination with `src` or `srcSet` to
   * provide an alt attribute for the rendered `img` element.
   */
  alt: n.string,
  /**
   * Used to render icon or text elements inside the Avatar if `src` is not set.
   * This can be an element, or just a string.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.
   * It can be used to listen for the loading error event.
   * @deprecated Use `slotProps.img` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   */
  imgProps: n.object,
  /**
   * The `sizes` attribute for the `img` element.
   */
  sizes: n.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: n.shape({
    img: n.oneOfType([n.func, n.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: n.shape({
    img: n.elementType
  }),
  /**
   * The `src` attribute for the `img` element.
   */
  src: n.string,
  /**
   * The `srcSet` attribute for the `img` element.
   * Use this attribute for responsive image display.
   */
  srcSet: n.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The shape of the avatar.
   * @default 'circular'
   */
  variant: n.oneOfType([n.oneOf(["circular", "rounded", "square"]), n.string])
});
const g3 = dM;
function y3(e) {
  return je("MuiAvatarGroup", e);
}
const b3 = He("MuiAvatarGroup", ["root", "avatar"]), C3 = b3, x3 = ["children", "className", "component", "componentsProps", "max", "renderSurplus", "slotProps", "spacing", "total", "variant"], jk = {
  small: -16,
  medium: null
}, S3 = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"],
    avatar: ["avatar"]
  }, y3, r);
}, T3 = Z("div", {
  name: "MuiAvatarGroup",
  slot: "Root",
  overridesResolver: (e, r) => C({
    [`& .${C3.avatar}`]: r.avatar
  }, r.root)
})(({
  theme: e,
  ownerState: r
}) => {
  const s = r.spacing && jk[r.spacing] !== void 0 ? jk[r.spacing] : -r.spacing;
  return {
    [`& .${u3.root}`]: {
      border: `2px solid ${(e.vars || e).palette.background.default}`,
      boxSizing: "content-box",
      marginLeft: s ?? -8,
      "&:last-child": {
        marginLeft: 0
      }
    },
    display: "flex",
    flexDirection: "row-reverse"
  };
}), pM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u;
  const f = Ve({
    props: r,
    name: "MuiAvatarGroup"
  }), {
    children: v,
    className: m,
    component: y = "div",
    componentsProps: b = {},
    max: S = 5,
    renderSurplus: E,
    slotProps: k = {},
    spacing: D = "medium",
    total: M,
    variant: P = "circular"
  } = f, L = me(f, x3);
  let w = S < 2 ? 2 : S;
  const _ = C({}, f, {
    max: S,
    spacing: D,
    component: y,
    variant: P
  }), V = S3(_), A = O.Children.toArray(v).filter((Y) => (process.env.NODE_ENV !== "production" && Hi.isFragment(Y) && console.error(["MUI: The AvatarGroup component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), /* @__PURE__ */ O.isValidElement(Y))), j = M || A.length;
  j === w && (w += 1), w = Math.min(j + 1, w);
  const U = Math.min(A.length, w - 1), $ = Math.max(j - w, j - U, 0), F = E ? E($) : `+${$}`, G = (u = k.additionalAvatar) != null ? u : b.additionalAvatar;
  return /* @__PURE__ */ gt(T3, C({
    as: y,
    ownerState: _,
    className: pe(V.root, m),
    ref: s
  }, L, {
    children: [$ ? /* @__PURE__ */ z(g3, C({
      variant: P
    }, G, {
      className: pe(V.avatar, G == null ? void 0 : G.className),
      children: F
    })) : null, A.slice(0, U).reverse().map((Y) => /* @__PURE__ */ O.cloneElement(Y, {
      className: pe(Y.props.className, V.avatar),
      variant: Y.props.variant || P
    }))]
  }));
});
process.env.NODE_ENV !== "production" && (pM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The avatars to stack.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: n.shape({
    additionalAvatar: n.object
  }),
  /**
   * Max avatars to show before +x.
   * @default 5
   */
  max: jo(n.number, (e) => e.max < 2 ? new Error(["MUI: The prop `max` should be equal to 2 or above.", "A value below is clamped to 2."].join(`
`)) : null),
  /**
   * custom renderer of extraAvatars
   * @param {number} surplus number of extra avatars
   * @returns {React.ReactNode} custom element to display
   */
  renderSurplus: n.func,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: n.shape({
    additionalAvatar: n.object
  }),
  /**
   * Spacing between avatars.
   * @default 'medium'
   */
  spacing: n.oneOfType([n.oneOf(["medium", "small"]), n.number]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The total number of avatars. Used for calculating the number of extra avatars.
   * @default children.length
   */
  total: n.number,
  /**
   * The variant to use.
   * @default 'circular'
   */
  variant: n.oneOfType([n.oneOf(["circular", "rounded", "square"]), n.string])
});
const oee = pM, E3 = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"], R3 = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, fM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = to(), f = {
    enter: u.transitions.duration.enteringScreen,
    exit: u.transitions.duration.leavingScreen
  }, {
    addEndListener: v,
    appear: m = !0,
    children: y,
    easing: b,
    in: S,
    onEnter: E,
    onEntered: k,
    onEntering: D,
    onExit: M,
    onExited: P,
    onExiting: L,
    style: w,
    timeout: _ = f,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: V = Th
  } = r, A = me(r, E3), j = O.useRef(null), U = yn(j, y.ref, s), $ = (J) => (ce) => {
    if (J) {
      const de = j.current;
      ce === void 0 ? J(de) : J(de, ce);
    }
  }, F = $(D), G = $((J, ce) => {
    M0(J);
    const de = Ui({
      style: w,
      timeout: _,
      easing: b
    }, {
      mode: "enter"
    });
    J.style.webkitTransition = u.transitions.create("opacity", de), J.style.transition = u.transitions.create("opacity", de), E && E(J, ce);
  }), Y = $(k), Q = $(L), q = $((J) => {
    const ce = Ui({
      style: w,
      timeout: _,
      easing: b
    }, {
      mode: "exit"
    });
    J.style.webkitTransition = u.transitions.create("opacity", ce), J.style.transition = u.transitions.create("opacity", ce), M && M(J);
  }), re = $(P);
  return /* @__PURE__ */ z(V, C({
    appear: m,
    in: S,
    nodeRef: j,
    onEnter: G,
    onEntered: Y,
    onEntering: F,
    onExit: q,
    onExited: re,
    onExiting: Q,
    addEndListener: (J) => {
      v && v(j.current, J);
    },
    timeout: _
  }, A, {
    children: (J, ce) => /* @__PURE__ */ O.cloneElement(y, C({
      style: C({
        opacity: 0,
        visibility: J === "exited" && !S ? "hidden" : void 0
      }, R3[J], w, y.props.style),
      ref: U
    }, ce))
  }));
});
process.env.NODE_ENV !== "production" && (fM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: n.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: n.bool,
  /**
   * A single child content element.
   */
  children: Uc.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: n.oneOfType([n.shape({
    enter: n.string,
    exit: n.string
  }), n.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: n.bool,
  /**
   * @ignore
   */
  onEnter: n.func,
  /**
   * @ignore
   */
  onEntered: n.func,
  /**
   * @ignore
   */
  onEntering: n.func,
  /**
   * @ignore
   */
  onExit: n.func,
  /**
   * @ignore
   */
  onExited: n.func,
  /**
   * @ignore
   */
  onExiting: n.func,
  /**
   * @ignore
   */
  style: n.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: n.oneOfType([n.number, n.shape({
    appear: n.number,
    enter: n.number,
    exit: n.number
  })])
});
const mM = fM;
function O3(e) {
  return je("MuiBackdrop", e);
}
const w3 = He("MuiBackdrop", ["root", "invisible"]), ree = w3, k3 = ["children", "className", "component", "components", "componentsProps", "invisible", "open", "slotProps", "slots", "TransitionComponent", "transitionDuration"], N3 = (e) => {
  const {
    classes: r,
    invisible: s
  } = e;
  return Ue({
    root: ["root", s && "invisible"]
  }, O3, r);
}, $3 = Z("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.invisible && r.invisible];
  }
})(({
  ownerState: e
}) => C({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent"
}, e.invisible && {
  backgroundColor: "transparent"
})), vM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u, f, v;
  const m = Ve({
    props: r,
    name: "MuiBackdrop"
  }), {
    children: y,
    className: b,
    component: S = "div",
    components: E = {},
    componentsProps: k = {},
    invisible: D = !1,
    open: M,
    slotProps: P = {},
    slots: L = {},
    TransitionComponent: w = mM,
    transitionDuration: _
  } = m, V = me(m, k3), A = C({}, m, {
    component: S,
    invisible: D
  }), j = N3(A), U = (u = P.root) != null ? u : k.root;
  return /* @__PURE__ */ z(w, C({
    in: M,
    timeout: _
  }, V, {
    children: /* @__PURE__ */ z($3, C({
      "aria-hidden": !0
    }, U, {
      as: (f = (v = L.root) != null ? v : E.Root) != null ? f : S,
      className: pe(j.root, b, U == null ? void 0 : U.className),
      ownerState: C({}, A, U == null ? void 0 : U.ownerState),
      classes: j,
      ref: s,
      children: y
    }))
  }));
});
process.env.NODE_ENV !== "production" && (vM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: n.shape({
    Root: n.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: n.shape({
    root: n.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: n.bool,
  /**
   * If `true`, the component is shown.
   */
  open: n.bool.isRequired,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: n.shape({
    root: n.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: n.shape({
    root: n.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   */
  TransitionComponent: n.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: n.oneOfType([n.number, n.shape({
    appear: n.number,
    enter: n.number,
    exit: n.number
  })])
});
const hM = vM;
function M3(e) {
  return Ve;
}
function D3(e) {
  return je("MuiBadge", e);
}
const P3 = He("MuiBadge", [
  "root",
  "badge",
  "dot",
  "standard",
  "anchorOriginTopRight",
  "anchorOriginBottomRight",
  "anchorOriginTopLeft",
  "anchorOriginBottomLeft",
  "invisible",
  "colorError",
  "colorInfo",
  "colorPrimary",
  "colorSecondary",
  "colorSuccess",
  "colorWarning",
  "overlapRectangular",
  "overlapCircular",
  // TODO: v6 remove the overlap value from these class keys
  "anchorOriginTopLeftCircular",
  "anchorOriginTopLeftRectangular",
  "anchorOriginTopRightCircular",
  "anchorOriginTopRightRectangular",
  "anchorOriginBottomLeftCircular",
  "anchorOriginBottomLeftRectangular",
  "anchorOriginBottomRightCircular",
  "anchorOriginBottomRightRectangular"
]), Mc = P3, L3 = ["anchorOrigin", "className", "classes", "component", "components", "componentsProps", "children", "overlap", "color", "invisible", "max", "badgeContent", "slots", "slotProps", "showZero", "variant"], $T = 10, MT = 4, I3 = M3(), _3 = (e) => {
  const {
    color: r,
    anchorOrigin: s,
    invisible: u,
    overlap: f,
    variant: v,
    classes: m = {}
  } = e, y = {
    root: ["root"],
    badge: ["badge", v, u && "invisible", `anchorOrigin${oe(s.vertical)}${oe(s.horizontal)}`, `anchorOrigin${oe(s.vertical)}${oe(s.horizontal)}${oe(f)}`, `overlap${oe(f)}`, r !== "default" && `color${oe(r)}`]
  };
  return Ue(y, D3, m);
}, A3 = Z("span", {
  name: "MuiBadge",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})({
  position: "relative",
  display: "inline-flex",
  // For correct alignment with the text.
  verticalAlign: "middle",
  flexShrink: 0
}), B3 = Z("span", {
  name: "MuiBadge",
  slot: "Badge",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.badge, r[s.variant], r[`anchorOrigin${oe(s.anchorOrigin.vertical)}${oe(s.anchorOrigin.horizontal)}${oe(s.overlap)}`], s.color !== "default" && r[`color${oe(s.color)}`], s.invisible && r.invisible];
  }
})(({
  theme: e
}) => {
  var r;
  return {
    display: "flex",
    flexDirection: "row",
    flexWrap: "wrap",
    justifyContent: "center",
    alignContent: "center",
    alignItems: "center",
    position: "absolute",
    boxSizing: "border-box",
    fontFamily: e.typography.fontFamily,
    fontWeight: e.typography.fontWeightMedium,
    fontSize: e.typography.pxToRem(12),
    minWidth: $T * 2,
    lineHeight: 1,
    padding: "0 6px",
    height: $T * 2,
    borderRadius: $T,
    zIndex: 1,
    // Render the badge on top of potential ripples.
    transition: e.transitions.create("transform", {
      easing: e.transitions.easing.easeInOut,
      duration: e.transitions.duration.enteringScreen
    }),
    variants: [...Object.keys(((r = e.vars) != null ? r : e).palette).filter((s) => {
      var u, f;
      return ((u = e.vars) != null ? u : e).palette[s].main && ((f = e.vars) != null ? f : e).palette[s].contrastText;
    }).map((s) => ({
      props: {
        color: s
      },
      style: {
        backgroundColor: (e.vars || e).palette[s].main,
        color: (e.vars || e).palette[s].contrastText
      }
    })), {
      props: {
        variant: "dot"
      },
      style: {
        borderRadius: MT,
        height: MT * 2,
        minWidth: MT * 2,
        padding: 0
      }
    }, {
      props: ({
        ownerState: s
      }) => s.anchorOrigin.vertical === "top" && s.anchorOrigin.horizontal === "right" && s.overlap === "rectangular",
      style: {
        top: 0,
        right: 0,
        transform: "scale(1) translate(50%, -50%)",
        transformOrigin: "100% 0%",
        [`&.${Mc.invisible}`]: {
          transform: "scale(0) translate(50%, -50%)"
        }
      }
    }, {
      props: ({
        ownerState: s
      }) => s.anchorOrigin.vertical === "bottom" && s.anchorOrigin.horizontal === "right" && s.overlap === "rectangular",
      style: {
        bottom: 0,
        right: 0,
        transform: "scale(1) translate(50%, 50%)",
        transformOrigin: "100% 100%",
        [`&.${Mc.invisible}`]: {
          transform: "scale(0) translate(50%, 50%)"
        }
      }
    }, {
      props: ({
        ownerState: s
      }) => s.anchorOrigin.vertical === "top" && s.anchorOrigin.horizontal === "left" && s.overlap === "rectangular",
      style: {
        top: 0,
        left: 0,
        transform: "scale(1) translate(-50%, -50%)",
        transformOrigin: "0% 0%",
        [`&.${Mc.invisible}`]: {
          transform: "scale(0) translate(-50%, -50%)"
        }
      }
    }, {
      props: ({
        ownerState: s
      }) => s.anchorOrigin.vertical === "bottom" && s.anchorOrigin.horizontal === "left" && s.overlap === "rectangular",
      style: {
        bottom: 0,
        left: 0,
        transform: "scale(1) translate(-50%, 50%)",
        transformOrigin: "0% 100%",
        [`&.${Mc.invisible}`]: {
          transform: "scale(0) translate(-50%, 50%)"
        }
      }
    }, {
      props: ({
        ownerState: s
      }) => s.anchorOrigin.vertical === "top" && s.anchorOrigin.horizontal === "right" && s.overlap === "circular",
      style: {
        top: "14%",
        right: "14%",
        transform: "scale(1) translate(50%, -50%)",
        transformOrigin: "100% 0%",
        [`&.${Mc.invisible}`]: {
          transform: "scale(0) translate(50%, -50%)"
        }
      }
    }, {
      props: ({
        ownerState: s
      }) => s.anchorOrigin.vertical === "bottom" && s.anchorOrigin.horizontal === "right" && s.overlap === "circular",
      style: {
        bottom: "14%",
        right: "14%",
        transform: "scale(1) translate(50%, 50%)",
        transformOrigin: "100% 100%",
        [`&.${Mc.invisible}`]: {
          transform: "scale(0) translate(50%, 50%)"
        }
      }
    }, {
      props: ({
        ownerState: s
      }) => s.anchorOrigin.vertical === "top" && s.anchorOrigin.horizontal === "left" && s.overlap === "circular",
      style: {
        top: "14%",
        left: "14%",
        transform: "scale(1) translate(-50%, -50%)",
        transformOrigin: "0% 0%",
        [`&.${Mc.invisible}`]: {
          transform: "scale(0) translate(-50%, -50%)"
        }
      }
    }, {
      props: ({
        ownerState: s
      }) => s.anchorOrigin.vertical === "bottom" && s.anchorOrigin.horizontal === "left" && s.overlap === "circular",
      style: {
        bottom: "14%",
        left: "14%",
        transform: "scale(1) translate(-50%, 50%)",
        transformOrigin: "0% 100%",
        [`&.${Mc.invisible}`]: {
          transform: "scale(0) translate(-50%, 50%)"
        }
      }
    }, {
      props: {
        invisible: !0
      },
      style: {
        transition: e.transitions.create("transform", {
          easing: e.transitions.easing.easeInOut,
          duration: e.transitions.duration.leavingScreen
        })
      }
    }]
  };
}), gM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u, f, v, m, y, b;
  const S = I3({
    props: r,
    name: "MuiBadge"
  }), {
    anchorOrigin: E = {
      vertical: "top",
      horizontal: "right"
    },
    className: k,
    component: D,
    components: M = {},
    componentsProps: P = {},
    children: L,
    overlap: w = "rectangular",
    color: _ = "default",
    invisible: V = !1,
    max: A = 99,
    badgeContent: j,
    slots: U,
    slotProps: $,
    showZero: F = !1,
    variant: G = "standard"
  } = S, Y = me(S, L3), {
    badgeContent: Q,
    invisible: q,
    max: re,
    displayValue: ee
  } = _V({
    max: A,
    invisible: V,
    badgeContent: j,
    showZero: F
  }), J = v1({
    anchorOrigin: E,
    color: _,
    overlap: w,
    variant: G,
    badgeContent: j
  }), ce = q || Q == null && G !== "dot", {
    color: de = _,
    overlap: fe = w,
    anchorOrigin: K = E,
    variant: ne = G
  } = ce ? J : S, ve = ne !== "dot" ? ee : void 0, Ke = C({}, S, {
    badgeContent: Q,
    invisible: ce,
    max: re,
    displayValue: ve,
    showZero: F,
    anchorOrigin: K,
    color: de,
    overlap: fe,
    variant: ne
  }), tt = _3(Ke), Ie = (u = (f = U == null ? void 0 : U.root) != null ? f : M.Root) != null ? u : A3, De = (v = (m = U == null ? void 0 : U.badge) != null ? m : M.Badge) != null ? v : B3, Ye = (y = $ == null ? void 0 : $.root) != null ? y : P.root, ke = (b = $ == null ? void 0 : $.badge) != null ? b : P.badge, lt = po({
    elementType: Ie,
    externalSlotProps: Ye,
    externalForwardedProps: Y,
    additionalProps: {
      ref: s,
      as: D
    },
    ownerState: Ke,
    className: pe(Ye == null ? void 0 : Ye.className, tt.root, k)
  }), xe = po({
    elementType: De,
    externalSlotProps: ke,
    ownerState: Ke,
    className: pe(tt.badge, ke == null ? void 0 : ke.className)
  });
  return /* @__PURE__ */ gt(Ie, C({}, lt, {
    children: [L, /* @__PURE__ */ z(De, C({}, xe, {
      children: ve
    }))]
  }));
});
process.env.NODE_ENV !== "production" && (gM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The anchor of the badge.
   * @default {
   *   vertical: 'top',
   *   horizontal: 'right',
   * }
   */
  anchorOrigin: n.shape({
    horizontal: n.oneOf(["left", "right"]).isRequired,
    vertical: n.oneOf(["bottom", "top"]).isRequired
  }),
  /**
   * The content rendered within the badge.
   */
  badgeContent: n.node,
  /**
   * The badge will be added relative to this node.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: n.oneOfType([n.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), n.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: n.shape({
    Badge: n.elementType,
    Root: n.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: n.shape({
    badge: n.oneOfType([n.func, n.object]),
    root: n.oneOfType([n.func, n.object])
  }),
  /**
   * If `true`, the badge is invisible.
   * @default false
   */
  invisible: n.bool,
  /**
   * Max count to show.
   * @default 99
   */
  max: n.number,
  /**
   * Wrapped shape the badge should overlap.
   * @default 'rectangular'
   */
  overlap: n.oneOf(["circular", "rectangular"]),
  /**
   * Controls whether the badge is hidden when `badgeContent` is zero.
   * @default false
   */
  showZero: n.bool,
  /**
   * The props used for each slot inside the Badge.
   * @default {}
   */
  slotProps: n.shape({
    badge: n.oneOfType([n.func, n.object]),
    root: n.oneOfType([n.func, n.object])
  }),
  /**
   * The components used for each slot inside the Badge.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: n.shape({
    badge: n.elementType,
    root: n.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: n.oneOfType([n.oneOf(["dot", "standard"]), n.string])
});
const aee = gM;
function z3(e) {
  return je("MuiBottomNavigation", e);
}
const F3 = He("MuiBottomNavigation", ["root"]), iee = F3, j3 = ["children", "className", "component", "onChange", "showLabels", "value"], U3 = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"]
  }, z3, r);
}, V3 = Z("div", {
  name: "MuiBottomNavigation",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})(({
  theme: e
}) => ({
  display: "flex",
  justifyContent: "center",
  height: 56,
  backgroundColor: (e.vars || e).palette.background.paper
})), yM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiBottomNavigation"
  }), {
    children: f,
    className: v,
    component: m = "div",
    onChange: y,
    showLabels: b = !1,
    value: S
  } = u, E = me(u, j3), k = C({}, u, {
    component: m,
    showLabels: b
  }), D = U3(k);
  return /* @__PURE__ */ z(V3, C({
    as: m,
    className: pe(D.root, v),
    ref: s,
    ownerState: k
  }, E, {
    children: O.Children.map(f, (M, P) => {
      if (!/* @__PURE__ */ O.isValidElement(M))
        return null;
      process.env.NODE_ENV !== "production" && Hi.isFragment(M) && console.error(["MUI: The BottomNavigation component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
      const L = M.props.value === void 0 ? P : M.props.value;
      return /* @__PURE__ */ O.cloneElement(M, {
        selected: L === S,
        showLabel: M.props.showLabel !== void 0 ? M.props.showLabel : b,
        value: L,
        onChange: y
      });
    })
  }));
});
process.env.NODE_ENV !== "production" && (yM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {any} value We default to the index of the child.
   */
  onChange: n.func,
  /**
   * If `true`, all `BottomNavigationAction`s will show their labels.
   * By default, only the selected `BottomNavigationAction` will show its label.
   * @default false
   */
  showLabels: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The value of the currently selected `BottomNavigationAction`.
   */
  value: n.any
});
const see = yM;
function H3(e) {
  return je("MuiBottomNavigationAction", e);
}
const W3 = He("MuiBottomNavigationAction", ["root", "iconOnly", "selected", "label"]), bM = W3, G3 = ["className", "icon", "label", "onChange", "onClick", "selected", "showLabel", "value"], q3 = (e) => {
  const {
    classes: r,
    showLabel: s,
    selected: u
  } = e;
  return Ue({
    root: ["root", !s && !u && "iconOnly", u && "selected"],
    label: ["label", !s && !u && "iconOnly", u && "selected"]
  }, H3, r);
}, Y3 = Z(er, {
  name: "MuiBottomNavigationAction",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, !s.showLabel && !s.selected && r.iconOnly];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  transition: e.transitions.create(["color", "padding-top"], {
    duration: e.transitions.duration.short
  }),
  padding: "0px 12px",
  minWidth: 80,
  maxWidth: 168,
  color: (e.vars || e).palette.text.secondary,
  flexDirection: "column",
  flex: "1"
}, !r.showLabel && !r.selected && {
  paddingTop: 14
}, !r.showLabel && !r.selected && !r.label && {
  paddingTop: 0
}, {
  [`&.${bM.selected}`]: {
    color: (e.vars || e).palette.primary.main
  }
})), K3 = Z("span", {
  name: "MuiBottomNavigationAction",
  slot: "Label",
  overridesResolver: (e, r) => r.label
})(({
  theme: e,
  ownerState: r
}) => C({
  fontFamily: e.typography.fontFamily,
  fontSize: e.typography.pxToRem(12),
  opacity: 1,
  transition: "font-size 0.2s, opacity 0.2s",
  transitionDelay: "0.1s"
}, !r.showLabel && !r.selected && {
  opacity: 0,
  transitionDelay: "0s"
}, {
  [`&.${bM.selected}`]: {
    fontSize: e.typography.pxToRem(14)
  }
})), CM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiBottomNavigationAction"
  }), {
    className: f,
    icon: v,
    label: m,
    onChange: y,
    onClick: b,
    value: S
  } = u, E = me(u, G3), k = u, D = q3(k), M = (P) => {
    y && y(P, S), b && b(P);
  };
  return /* @__PURE__ */ gt(Y3, C({
    ref: s,
    className: pe(D.root, f),
    focusRipple: !0,
    onClick: M,
    ownerState: k
  }, E, {
    children: [v, /* @__PURE__ */ z(K3, {
      className: D.label,
      ownerState: k,
      children: m
    })]
  }));
});
process.env.NODE_ENV !== "production" && (CM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: m1,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The icon to display.
   */
  icon: n.node,
  /**
   * The label element.
   */
  label: n.node,
  /**
   * @ignore
   */
  onChange: n.func,
  /**
   * @ignore
   */
  onClick: n.func,
  /**
   * If `true`, the `BottomNavigationAction` will show its label.
   * By default, only the selected `BottomNavigationAction`
   * inside `BottomNavigation` will show its label.
   *
   * The prop defaults to the value (`false`) inherited from the parent BottomNavigation component.
   */
  showLabel: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * You can provide your own value. Otherwise, we fallback to the child position index.
   */
  value: n.any
});
const lee = CM, X3 = Kn(/* @__PURE__ */ z("path", {
  d: "M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
}), "MoreHoriz"), Q3 = ["slots", "slotProps"], Z3 = Z(er)(({
  theme: e
}) => C({
  display: "flex",
  marginLeft: `calc(${e.spacing(1)} * 0.5)`,
  marginRight: `calc(${e.spacing(1)} * 0.5)`
}, e.palette.mode === "light" ? {
  backgroundColor: e.palette.grey[100],
  color: e.palette.grey[700]
} : {
  backgroundColor: e.palette.grey[700],
  color: e.palette.grey[100]
}, {
  borderRadius: 2,
  "&:hover, &:focus": C({}, e.palette.mode === "light" ? {
    backgroundColor: e.palette.grey[200]
  } : {
    backgroundColor: e.palette.grey[600]
  }),
  "&:active": C({
    boxShadow: e.shadows[0]
  }, e.palette.mode === "light" ? {
    backgroundColor: o0(e.palette.grey[200], 0.12)
  } : {
    backgroundColor: o0(e.palette.grey[600], 0.12)
  })
})), J3 = Z(X3)({
  width: 24,
  height: 16
});
function xM(e) {
  const {
    slots: r = {},
    slotProps: s = {}
  } = e, u = me(e, Q3), f = e;
  return /* @__PURE__ */ z("li", {
    children: /* @__PURE__ */ z(Z3, C({
      focusRipple: !0
    }, u, {
      ownerState: f,
      children: /* @__PURE__ */ z(J3, C({
        as: r.CollapsedIcon,
        ownerState: f
      }, s.collapsedIcon))
    }))
  });
}
process.env.NODE_ENV !== "production" && (xM.propTypes = {
  /**
   * The props used for the CollapsedIcon slot.
   * @default {}
   */
  slotProps: n.shape({
    collapsedIcon: n.oneOfType([n.func, n.object])
  }),
  /**
   * The components used for each slot inside the BreadcumbCollapsed.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: n.shape({
    CollapsedIcon: n.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.object
});
function e6(e) {
  return je("MuiBreadcrumbs", e);
}
const t6 = He("MuiBreadcrumbs", ["root", "ol", "li", "separator"]), n6 = t6, o6 = ["children", "className", "component", "slots", "slotProps", "expandText", "itemsAfterCollapse", "itemsBeforeCollapse", "maxItems", "separator"], r6 = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"],
    li: ["li"],
    ol: ["ol"],
    separator: ["separator"]
  }, e6, r);
}, a6 = Z(zr, {
  name: "MuiBreadcrumbs",
  slot: "Root",
  overridesResolver: (e, r) => [{
    [`& .${n6.li}`]: r.li
  }, r.root]
})({}), i6 = Z("ol", {
  name: "MuiBreadcrumbs",
  slot: "Ol",
  overridesResolver: (e, r) => r.ol
})({
  display: "flex",
  flexWrap: "wrap",
  alignItems: "center",
  padding: 0,
  margin: 0,
  listStyle: "none"
}), s6 = Z("li", {
  name: "MuiBreadcrumbs",
  slot: "Separator",
  overridesResolver: (e, r) => r.separator
})({
  display: "flex",
  userSelect: "none",
  marginLeft: 8,
  marginRight: 8
});
function l6(e, r, s, u) {
  return e.reduce((f, v, m) => (m < e.length - 1 ? f = f.concat(v, /* @__PURE__ */ z(s6, {
    "aria-hidden": !0,
    className: r,
    ownerState: u,
    children: s
  }, `separator-${m}`)) : f.push(v), f), []);
}
const SM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiBreadcrumbs"
  }), {
    children: f,
    className: v,
    component: m = "nav",
    slots: y = {},
    slotProps: b = {},
    expandText: S = "Show path",
    itemsAfterCollapse: E = 1,
    itemsBeforeCollapse: k = 1,
    maxItems: D = 8,
    separator: M = "/"
  } = u, P = me(u, o6), [L, w] = O.useState(!1), _ = C({}, u, {
    component: m,
    expanded: L,
    expandText: S,
    itemsAfterCollapse: E,
    itemsBeforeCollapse: k,
    maxItems: D,
    separator: M
  }), V = r6(_), A = po({
    elementType: y.CollapsedIcon,
    externalSlotProps: b.collapsedIcon,
    ownerState: _
  }), j = O.useRef(null), U = (F) => {
    const G = () => {
      w(!0);
      const Y = j.current.querySelector("a[href],button,[tabindex]");
      Y && Y.focus();
    };
    return k + E >= F.length ? (process.env.NODE_ENV !== "production" && console.error(["MUI: You have provided an invalid combination of props to the Breadcrumbs.", `itemsAfterCollapse={${E}} + itemsBeforeCollapse={${k}} >= maxItems={${D}}`].join(`
`)), F) : [...F.slice(0, k), /* @__PURE__ */ z(xM, {
      "aria-label": S,
      slots: {
        CollapsedIcon: y.CollapsedIcon
      },
      slotProps: {
        collapsedIcon: A
      },
      onClick: G
    }, "ellipsis"), ...F.slice(F.length - E, F.length)];
  }, $ = O.Children.toArray(f).filter((F) => (process.env.NODE_ENV !== "production" && Hi.isFragment(F) && console.error(["MUI: The Breadcrumbs component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), /* @__PURE__ */ O.isValidElement(F))).map((F, G) => /* @__PURE__ */ z("li", {
    className: V.li,
    children: F
  }, `child-${G}`));
  return /* @__PURE__ */ z(a6, C({
    ref: s,
    component: m,
    color: "text.secondary",
    className: pe(V.root, v),
    ownerState: _
  }, P, {
    children: /* @__PURE__ */ z(i6, {
      className: V.ol,
      ref: j,
      ownerState: _,
      children: l6(L || D && $.length <= D ? $ : U($), V.separator, M, _)
    })
  }));
});
process.env.NODE_ENV !== "production" && (SM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * Override the default label for the expand button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Show path'
   */
  expandText: n.string,
  /**
   * If max items is exceeded, the number of items to show after the ellipsis.
   * @default 1
   */
  itemsAfterCollapse: Co,
  /**
   * If max items is exceeded, the number of items to show before the ellipsis.
   * @default 1
   */
  itemsBeforeCollapse: Co,
  /**
   * Specifies the maximum number of breadcrumbs to display. When there are more
   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`
   * will be shown, with an ellipsis in between.
   * @default 8
   */
  maxItems: Co,
  /**
   * Custom separator node.
   * @default '/'
   */
  separator: n.node,
  /**
   * The props used for each slot inside the Breadcumb.
   * @default {}
   */
  slotProps: n.shape({
    collapsedIcon: n.oneOfType([n.func, n.object])
  }),
  /**
   * The components used for each slot inside the Breadcumb.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: n.shape({
    CollapsedIcon: n.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const cee = SM;
function c6(e) {
  return je("MuiButton", e);
}
const u6 = He("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge"]), jb = u6, TM = /* @__PURE__ */ O.createContext({});
process.env.NODE_ENV !== "production" && (TM.displayName = "ButtonGroupContext");
const EM = TM, RM = /* @__PURE__ */ O.createContext(void 0);
process.env.NODE_ENV !== "production" && (RM.displayName = "ButtonGroupButtonContext");
const OM = RM, d6 = ["children", "color", "component", "className", "disabled", "disableElevation", "disableFocusRipple", "endIcon", "focusVisibleClassName", "fullWidth", "size", "startIcon", "type", "variant"], p6 = (e) => {
  const {
    color: r,
    disableElevation: s,
    fullWidth: u,
    size: f,
    variant: v,
    classes: m
  } = e, y = {
    root: ["root", v, `${v}${oe(r)}`, `size${oe(f)}`, `${v}Size${oe(f)}`, r === "inherit" && "colorInherit", s && "disableElevation", u && "fullWidth"],
    label: ["label"],
    startIcon: ["startIcon", `iconSize${oe(f)}`],
    endIcon: ["endIcon", `iconSize${oe(f)}`]
  }, b = Ue(y, c6, m);
  return C({}, m, b);
}, wM = (e) => C({}, e.size === "small" && {
  "& > *:nth-of-type(1)": {
    fontSize: 18
  }
}, e.size === "medium" && {
  "& > *:nth-of-type(1)": {
    fontSize: 20
  }
}, e.size === "large" && {
  "& > *:nth-of-type(1)": {
    fontSize: 22
  }
}), f6 = Z(er, {
  shouldForwardProp: (e) => ko(e) || e === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[s.variant], r[`${s.variant}${oe(s.color)}`], r[`size${oe(s.size)}`], r[`${s.variant}Size${oe(s.size)}`], s.color === "inherit" && r.colorInherit, s.disableElevation && r.disableElevation, s.fullWidth && r.fullWidth];
  }
})(({
  theme: e,
  ownerState: r
}) => {
  var s, u;
  const f = e.palette.mode === "light" ? e.palette.grey[300] : e.palette.grey[800], v = e.palette.mode === "light" ? e.palette.grey.A100 : e.palette.grey[700];
  return C({}, e.typography.button, {
    minWidth: 64,
    padding: "6px 16px",
    borderRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: e.transitions.duration.short
    }),
    "&:hover": C({
      textDecoration: "none",
      backgroundColor: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : Ut(e.palette.text.primary, e.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, r.variant === "text" && r.color !== "inherit" && {
      backgroundColor: e.vars ? `rgba(${e.vars.palette[r.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Ut(e.palette[r.color].main, e.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, r.variant === "outlined" && r.color !== "inherit" && {
      border: `1px solid ${(e.vars || e).palette[r.color].main}`,
      backgroundColor: e.vars ? `rgba(${e.vars.palette[r.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Ut(e.palette[r.color].main, e.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, r.variant === "contained" && {
      backgroundColor: e.vars ? e.vars.palette.Button.inheritContainedHoverBg : v,
      boxShadow: (e.vars || e).shadows[4],
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        boxShadow: (e.vars || e).shadows[2],
        backgroundColor: (e.vars || e).palette.grey[300]
      }
    }, r.variant === "contained" && r.color !== "inherit" && {
      backgroundColor: (e.vars || e).palette[r.color].dark,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (e.vars || e).palette[r.color].main
      }
    }),
    "&:active": C({}, r.variant === "contained" && {
      boxShadow: (e.vars || e).shadows[8]
    }),
    [`&.${jb.focusVisible}`]: C({}, r.variant === "contained" && {
      boxShadow: (e.vars || e).shadows[6]
    }),
    [`&.${jb.disabled}`]: C({
      color: (e.vars || e).palette.action.disabled
    }, r.variant === "outlined" && {
      border: `1px solid ${(e.vars || e).palette.action.disabledBackground}`
    }, r.variant === "contained" && {
      color: (e.vars || e).palette.action.disabled,
      boxShadow: (e.vars || e).shadows[0],
      backgroundColor: (e.vars || e).palette.action.disabledBackground
    })
  }, r.variant === "text" && {
    padding: "6px 8px"
  }, r.variant === "text" && r.color !== "inherit" && {
    color: (e.vars || e).palette[r.color].main
  }, r.variant === "outlined" && {
    padding: "5px 15px",
    border: "1px solid currentColor"
  }, r.variant === "outlined" && r.color !== "inherit" && {
    color: (e.vars || e).palette[r.color].main,
    border: e.vars ? `1px solid rgba(${e.vars.palette[r.color].mainChannel} / 0.5)` : `1px solid ${Ut(e.palette[r.color].main, 0.5)}`
  }, r.variant === "contained" && {
    color: e.vars ? (
      // this is safe because grey does not change between default light/dark mode
      e.vars.palette.text.primary
    ) : (s = (u = e.palette).getContrastText) == null ? void 0 : s.call(u, e.palette.grey[300]),
    backgroundColor: e.vars ? e.vars.palette.Button.inheritContainedBg : f,
    boxShadow: (e.vars || e).shadows[2]
  }, r.variant === "contained" && r.color !== "inherit" && {
    color: (e.vars || e).palette[r.color].contrastText,
    backgroundColor: (e.vars || e).palette[r.color].main
  }, r.color === "inherit" && {
    color: "inherit",
    borderColor: "currentColor"
  }, r.size === "small" && r.variant === "text" && {
    padding: "4px 5px",
    fontSize: e.typography.pxToRem(13)
  }, r.size === "large" && r.variant === "text" && {
    padding: "8px 11px",
    fontSize: e.typography.pxToRem(15)
  }, r.size === "small" && r.variant === "outlined" && {
    padding: "3px 9px",
    fontSize: e.typography.pxToRem(13)
  }, r.size === "large" && r.variant === "outlined" && {
    padding: "7px 21px",
    fontSize: e.typography.pxToRem(15)
  }, r.size === "small" && r.variant === "contained" && {
    padding: "4px 10px",
    fontSize: e.typography.pxToRem(13)
  }, r.size === "large" && r.variant === "contained" && {
    padding: "8px 22px",
    fontSize: e.typography.pxToRem(15)
  }, r.fullWidth && {
    width: "100%"
  });
}, ({
  ownerState: e
}) => e.disableElevation && {
  boxShadow: "none",
  "&:hover": {
    boxShadow: "none"
  },
  [`&.${jb.focusVisible}`]: {
    boxShadow: "none"
  },
  "&:active": {
    boxShadow: "none"
  },
  [`&.${jb.disabled}`]: {
    boxShadow: "none"
  }
}), m6 = Z("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.startIcon, r[`iconSize${oe(s.size)}`]];
  }
})(({
  ownerState: e
}) => C({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4
}, e.size === "small" && {
  marginLeft: -2
}, wM(e))), v6 = Z("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.endIcon, r[`iconSize${oe(s.size)}`]];
  }
})(({
  ownerState: e
}) => C({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8
}, e.size === "small" && {
  marginRight: -2
}, wM(e))), kM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = O.useContext(EM), f = O.useContext(OM), v = k0(u, r), m = Ve({
    props: v,
    name: "MuiButton"
  }), {
    children: y,
    color: b = "primary",
    component: S = "button",
    className: E,
    disabled: k = !1,
    disableElevation: D = !1,
    disableFocusRipple: M = !1,
    endIcon: P,
    focusVisibleClassName: L,
    fullWidth: w = !1,
    size: _ = "medium",
    startIcon: V,
    type: A,
    variant: j = "text"
  } = m, U = me(m, d6), $ = C({}, m, {
    color: b,
    component: S,
    disabled: k,
    disableElevation: D,
    disableFocusRipple: M,
    fullWidth: w,
    size: _,
    type: A,
    variant: j
  }), F = p6($), G = V && /* @__PURE__ */ z(m6, {
    className: F.startIcon,
    ownerState: $,
    children: V
  }), Y = P && /* @__PURE__ */ z(v6, {
    className: F.endIcon,
    ownerState: $,
    children: P
  }), Q = f || "";
  return /* @__PURE__ */ gt(f6, C({
    ownerState: $,
    className: pe(u.className, F.root, E, Q),
    component: S,
    disabled: k,
    focusRipple: !M,
    focusVisibleClassName: pe(F.focusVisible, L),
    ref: s,
    type: A
  }, U, {
    classes: F,
    children: [G, y, Y]
  }));
});
process.env.NODE_ENV !== "production" && (kM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: n.oneOfType([n.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), n.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: n.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: n.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: n.bool,
  /**
   * Element placed after the children.
   */
  endIcon: n.node,
  /**
   * @ignore
   */
  focusVisibleClassName: n.string,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: n.bool,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: n.string,
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: n.oneOfType([n.oneOf(["small", "medium", "large"]), n.string]),
  /**
   * Element placed before the children.
   */
  startIcon: n.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * @ignore
   */
  type: n.oneOfType([n.oneOf(["button", "reset", "submit"]), n.string]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: n.oneOfType([n.oneOf(["contained", "outlined", "text"]), n.string])
});
const uee = kM;
function h6(e) {
  return je("MuiButtonGroup", e);
}
const g6 = He("MuiButtonGroup", ["root", "contained", "outlined", "text", "disableElevation", "disabled", "firstButton", "fullWidth", "vertical", "grouped", "groupedHorizontal", "groupedVertical", "groupedText", "groupedTextHorizontal", "groupedTextVertical", "groupedTextPrimary", "groupedTextSecondary", "groupedOutlined", "groupedOutlinedHorizontal", "groupedOutlinedVertical", "groupedOutlinedPrimary", "groupedOutlinedSecondary", "groupedContained", "groupedContainedHorizontal", "groupedContainedVertical", "groupedContainedPrimary", "groupedContainedSecondary", "lastButton", "middleButton"]), Sr = g6, y6 = ["children", "className", "color", "component", "disabled", "disableElevation", "disableFocusRipple", "disableRipple", "fullWidth", "orientation", "size", "variant"], b6 = (e, r) => {
  const {
    ownerState: s
  } = e;
  return [{
    [`& .${Sr.grouped}`]: r.grouped
  }, {
    [`& .${Sr.grouped}`]: r[`grouped${oe(s.orientation)}`]
  }, {
    [`& .${Sr.grouped}`]: r[`grouped${oe(s.variant)}`]
  }, {
    [`& .${Sr.grouped}`]: r[`grouped${oe(s.variant)}${oe(s.orientation)}`]
  }, {
    [`& .${Sr.grouped}`]: r[`grouped${oe(s.variant)}${oe(s.color)}`]
  }, {
    [`& .${Sr.firstButton}`]: r.firstButton
  }, {
    [`& .${Sr.lastButton}`]: r.lastButton
  }, {
    [`& .${Sr.middleButton}`]: r.middleButton
  }, r.root, r[s.variant], s.disableElevation === !0 && r.disableElevation, s.fullWidth && r.fullWidth, s.orientation === "vertical" && r.vertical];
}, C6 = (e) => {
  const {
    classes: r,
    color: s,
    disabled: u,
    disableElevation: f,
    fullWidth: v,
    orientation: m,
    variant: y
  } = e, b = {
    root: ["root", y, m === "vertical" && "vertical", v && "fullWidth", f && "disableElevation"],
    grouped: ["grouped", `grouped${oe(m)}`, `grouped${oe(y)}`, `grouped${oe(y)}${oe(m)}`, `grouped${oe(y)}${oe(s)}`, u && "disabled"],
    firstButton: ["firstButton"],
    lastButton: ["lastButton"],
    middleButton: ["middleButton"]
  };
  return Ue(b, h6, r);
}, x6 = Z("div", {
  name: "MuiButtonGroup",
  slot: "Root",
  overridesResolver: b6
})(({
  theme: e,
  ownerState: r
}) => C({
  display: "inline-flex",
  borderRadius: (e.vars || e).shape.borderRadius
}, r.variant === "contained" && {
  boxShadow: (e.vars || e).shadows[2]
}, r.disableElevation && {
  boxShadow: "none"
}, r.fullWidth && {
  width: "100%"
}, r.orientation === "vertical" && {
  flexDirection: "column"
}, {
  [`& .${Sr.grouped}`]: C({
    minWidth: 40,
    "&:hover": C({}, r.variant === "contained" && {
      boxShadow: "none"
    })
  }, r.variant === "contained" && {
    boxShadow: "none"
  }),
  [`& .${Sr.firstButton},& .${Sr.middleButton}`]: C({}, r.orientation === "horizontal" && {
    borderTopRightRadius: 0,
    borderBottomRightRadius: 0
  }, r.orientation === "vertical" && {
    borderBottomRightRadius: 0,
    borderBottomLeftRadius: 0
  }, r.variant === "text" && r.orientation === "horizontal" && {
    borderRight: e.vars ? `1px solid rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"}`,
    [`&.${Sr.disabled}`]: {
      borderRight: `1px solid ${(e.vars || e).palette.action.disabled}`
    }
  }, r.variant === "text" && r.orientation === "vertical" && {
    borderBottom: e.vars ? `1px solid rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"}`,
    [`&.${Sr.disabled}`]: {
      borderBottom: `1px solid ${(e.vars || e).palette.action.disabled}`
    }
  }, r.variant === "text" && r.color !== "inherit" && {
    borderColor: e.vars ? `rgba(${e.vars.palette[r.color].mainChannel} / 0.5)` : Ut(e.palette[r.color].main, 0.5)
  }, r.variant === "outlined" && r.orientation === "horizontal" && {
    borderRightColor: "transparent"
  }, r.variant === "outlined" && r.orientation === "vertical" && {
    borderBottomColor: "transparent"
  }, r.variant === "contained" && r.orientation === "horizontal" && {
    borderRight: `1px solid ${(e.vars || e).palette.grey[400]}`,
    [`&.${Sr.disabled}`]: {
      borderRight: `1px solid ${(e.vars || e).palette.action.disabled}`
    }
  }, r.variant === "contained" && r.orientation === "vertical" && {
    borderBottom: `1px solid ${(e.vars || e).palette.grey[400]}`,
    [`&.${Sr.disabled}`]: {
      borderBottom: `1px solid ${(e.vars || e).palette.action.disabled}`
    }
  }, r.variant === "contained" && r.color !== "inherit" && {
    borderColor: (e.vars || e).palette[r.color].dark
  }, {
    "&:hover": C({}, r.variant === "outlined" && r.orientation === "horizontal" && {
      borderRightColor: "currentColor"
    }, r.variant === "outlined" && r.orientation === "vertical" && {
      borderBottomColor: "currentColor"
    })
  }),
  [`& .${Sr.lastButton},& .${Sr.middleButton}`]: C({}, r.orientation === "horizontal" && {
    borderTopLeftRadius: 0,
    borderBottomLeftRadius: 0
  }, r.orientation === "vertical" && {
    borderTopRightRadius: 0,
    borderTopLeftRadius: 0
  }, r.variant === "outlined" && r.orientation === "horizontal" && {
    marginLeft: -1
  }, r.variant === "outlined" && r.orientation === "vertical" && {
    marginTop: -1
  })
})), NM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiButtonGroup"
  }), {
    children: f,
    className: v,
    color: m = "primary",
    component: y = "div",
    disabled: b = !1,
    disableElevation: S = !1,
    disableFocusRipple: E = !1,
    disableRipple: k = !1,
    fullWidth: D = !1,
    orientation: M = "horizontal",
    size: P = "medium",
    variant: L = "outlined"
  } = u, w = me(u, y6), _ = C({}, u, {
    color: m,
    component: y,
    disabled: b,
    disableElevation: S,
    disableFocusRipple: E,
    disableRipple: k,
    fullWidth: D,
    orientation: M,
    size: P,
    variant: L
  }), V = C6(_), A = O.useMemo(() => ({
    className: V.grouped,
    color: m,
    disabled: b,
    disableElevation: S,
    disableFocusRipple: E,
    disableRipple: k,
    fullWidth: D,
    size: P,
    variant: L
  }), [m, b, S, E, k, D, P, L, V.grouped]), j = a$(f), U = j.length, $ = (F) => {
    const G = F === 0, Y = F === U - 1;
    return G && Y ? "" : G ? V.firstButton : Y ? V.lastButton : V.middleButton;
  };
  return /* @__PURE__ */ z(x6, C({
    as: y,
    role: "group",
    className: pe(V.root, v),
    ref: s,
    ownerState: _
  }, w, {
    children: /* @__PURE__ */ z(EM.Provider, {
      value: A,
      children: j.map((F, G) => /* @__PURE__ */ z(OM.Provider, {
        value: $(G),
        children: F
      }, G))
    })
  }));
});
process.env.NODE_ENV !== "production" && (NM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: n.oneOfType([n.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), n.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: n.bool,
  /**
   * If `true`, the button keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: n.bool,
  /**
   * If `true`, the button ripple effect is disabled.
   * @default false
   */
  disableRipple: n.bool,
  /**
   * If `true`, the buttons will take up the full width of its container.
   * @default false
   */
  fullWidth: n.bool,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: n.oneOf(["horizontal", "vertical"]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: n.oneOfType([n.oneOf(["small", "medium", "large"]), n.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: n.oneOfType([n.oneOf(["contained", "outlined", "text"]), n.string])
});
const dee = NM;
function S6(e) {
  return je("MuiCard", e);
}
const T6 = He("MuiCard", ["root"]), pee = T6, E6 = ["className", "raised"], R6 = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"]
  }, S6, r);
}, O6 = Z(ui, {
  name: "MuiCard",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})(() => ({
  overflow: "hidden"
})), $M = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiCard"
  }), {
    className: f,
    raised: v = !1
  } = u, m = me(u, E6), y = C({}, u, {
    raised: v
  }), b = R6(y);
  return /* @__PURE__ */ z(O6, C({
    className: pe(b.root, f),
    elevation: v ? 8 : void 0,
    ref: s,
    ownerState: y
  }, m));
});
process.env.NODE_ENV !== "production" && ($M.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * If `true`, the card will use raised styling.
   * @default false
   */
  raised: jo(n.bool, (e) => e.raised && e.variant === "outlined" ? new Error('MUI: Combining `raised={true}` with `variant="outlined"` has no effect.') : null),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const fee = $M;
function w6(e) {
  return je("MuiCardActionArea", e);
}
const k6 = He("MuiCardActionArea", ["root", "focusVisible", "focusHighlight"]), DT = k6, N6 = ["children", "className", "focusVisibleClassName"], $6 = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"],
    focusHighlight: ["focusHighlight"]
  }, w6, r);
}, M6 = Z(er, {
  name: "MuiCardActionArea",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})(({
  theme: e
}) => ({
  display: "block",
  textAlign: "inherit",
  borderRadius: "inherit",
  // for Safari to work https://github.com/mui/material-ui/issues/36285.
  width: "100%",
  [`&:hover .${DT.focusHighlight}`]: {
    opacity: (e.vars || e).palette.action.hoverOpacity,
    "@media (hover: none)": {
      opacity: 0
    }
  },
  [`&.${DT.focusVisible} .${DT.focusHighlight}`]: {
    opacity: (e.vars || e).palette.action.focusOpacity
  }
})), D6 = Z("span", {
  name: "MuiCardActionArea",
  slot: "FocusHighlight",
  overridesResolver: (e, r) => r.focusHighlight
})(({
  theme: e
}) => ({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit",
  opacity: 0,
  backgroundColor: "currentcolor",
  transition: e.transitions.create("opacity", {
    duration: e.transitions.duration.short
  })
})), MM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiCardActionArea"
  }), {
    children: f,
    className: v,
    focusVisibleClassName: m
  } = u, y = me(u, N6), b = u, S = $6(b);
  return /* @__PURE__ */ gt(M6, C({
    className: pe(S.root, v),
    focusVisibleClassName: pe(m, S.focusVisible),
    ref: s,
    ownerState: b
  }, y, {
    children: [f, /* @__PURE__ */ z(D6, {
      className: S.focusHighlight,
      ownerState: b
    })]
  }));
});
process.env.NODE_ENV !== "production" && (MM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * @ignore
   */
  focusVisibleClassName: n.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const mee = MM;
function P6(e) {
  return je("MuiCardActions", e);
}
const L6 = He("MuiCardActions", ["root", "spacing"]), vee = L6, I6 = ["disableSpacing", "className"], _6 = (e) => {
  const {
    classes: r,
    disableSpacing: s
  } = e;
  return Ue({
    root: ["root", !s && "spacing"]
  }, P6, r);
}, A6 = Z("div", {
  name: "MuiCardActions",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, !s.disableSpacing && r.spacing];
  }
})(({
  ownerState: e
}) => C({
  display: "flex",
  alignItems: "center",
  padding: 8
}, !e.disableSpacing && {
  "& > :not(style) ~ :not(style)": {
    marginLeft: 8
  }
})), DM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiCardActions"
  }), {
    disableSpacing: f = !1,
    className: v
  } = u, m = me(u, I6), y = C({}, u, {
    disableSpacing: f
  }), b = _6(y);
  return /* @__PURE__ */ z(A6, C({
    className: pe(b.root, v),
    ownerState: y,
    ref: s
  }, m));
});
process.env.NODE_ENV !== "production" && (DM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const hee = DM;
function B6(e) {
  return je("MuiCardContent", e);
}
const z6 = He("MuiCardContent", ["root"]), gee = z6, F6 = ["className", "component"], j6 = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"]
  }, B6, r);
}, U6 = Z("div", {
  name: "MuiCardContent",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})(() => ({
  padding: 16,
  "&:last-child": {
    paddingBottom: 24
  }
})), PM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiCardContent"
  }), {
    className: f,
    component: v = "div"
  } = u, m = me(u, F6), y = C({}, u, {
    component: v
  }), b = j6(y);
  return /* @__PURE__ */ z(U6, C({
    as: v,
    className: pe(b.root, f),
    ownerState: y,
    ref: s
  }, m));
});
process.env.NODE_ENV !== "production" && (PM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const yee = PM;
function V6(e) {
  return je("MuiCardHeader", e);
}
const H6 = He("MuiCardHeader", ["root", "avatar", "action", "content", "title", "subheader"]), Uk = H6, W6 = ["action", "avatar", "className", "component", "disableTypography", "subheader", "subheaderTypographyProps", "title", "titleTypographyProps"], G6 = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"],
    avatar: ["avatar"],
    action: ["action"],
    content: ["content"],
    title: ["title"],
    subheader: ["subheader"]
  }, V6, r);
}, q6 = Z("div", {
  name: "MuiCardHeader",
  slot: "Root",
  overridesResolver: (e, r) => C({
    [`& .${Uk.title}`]: r.title,
    [`& .${Uk.subheader}`]: r.subheader
  }, r.root)
})({
  display: "flex",
  alignItems: "center",
  padding: 16
}), Y6 = Z("div", {
  name: "MuiCardHeader",
  slot: "Avatar",
  overridesResolver: (e, r) => r.avatar
})({
  display: "flex",
  flex: "0 0 auto",
  marginRight: 16
}), K6 = Z("div", {
  name: "MuiCardHeader",
  slot: "Action",
  overridesResolver: (e, r) => r.action
})({
  flex: "0 0 auto",
  alignSelf: "flex-start",
  marginTop: -4,
  marginRight: -8,
  marginBottom: -4
}), X6 = Z("div", {
  name: "MuiCardHeader",
  slot: "Content",
  overridesResolver: (e, r) => r.content
})({
  flex: "1 1 auto"
}), LM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiCardHeader"
  }), {
    action: f,
    avatar: v,
    className: m,
    component: y = "div",
    disableTypography: b = !1,
    subheader: S,
    subheaderTypographyProps: E,
    title: k,
    titleTypographyProps: D
  } = u, M = me(u, W6), P = C({}, u, {
    component: y,
    disableTypography: b
  }), L = G6(P);
  let w = k;
  w != null && w.type !== zr && !b && (w = /* @__PURE__ */ z(zr, C({
    variant: v ? "body2" : "h5",
    className: L.title,
    component: "span",
    display: "block"
  }, D, {
    children: w
  })));
  let _ = S;
  return _ != null && _.type !== zr && !b && (_ = /* @__PURE__ */ z(zr, C({
    variant: v ? "body2" : "body1",
    className: L.subheader,
    color: "text.secondary",
    component: "span",
    display: "block"
  }, E, {
    children: _
  }))), /* @__PURE__ */ gt(q6, C({
    className: pe(L.root, m),
    as: y,
    ref: s,
    ownerState: P
  }, M, {
    children: [v && /* @__PURE__ */ z(Y6, {
      className: L.avatar,
      ownerState: P,
      children: v
    }), /* @__PURE__ */ gt(X6, {
      className: L.content,
      ownerState: P,
      children: [w, _]
    }), f && /* @__PURE__ */ z(K6, {
      className: L.action,
      ownerState: P,
      children: f
    })]
  }));
});
process.env.NODE_ENV !== "production" && (LM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The action to display in the card header.
   */
  action: n.node,
  /**
   * The Avatar element to display.
   */
  avatar: n.node,
  /**
   * @ignore
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.
   * This can be useful to render an alternative Typography variant by wrapping
   * the `title` text, and optional `subheader` text
   * with the Typography component.
   * @default false
   */
  disableTypography: n.bool,
  /**
   * The content of the component.
   */
  subheader: n.node,
  /**
   * These props will be forwarded to the subheader
   * (as long as disableTypography is not `true`).
   */
  subheaderTypographyProps: n.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The content of the component.
   */
  title: n.node,
  /**
   * These props will be forwarded to the title
   * (as long as disableTypography is not `true`).
   */
  titleTypographyProps: n.object
});
const bee = LM;
function Q6(e) {
  return je("MuiCardMedia", e);
}
const Z6 = He("MuiCardMedia", ["root", "media", "img"]), Cee = Z6, J6 = ["children", "className", "component", "image", "src", "style"], e8 = (e) => {
  const {
    classes: r,
    isMediaComponent: s,
    isImageComponent: u
  } = e;
  return Ue({
    root: ["root", s && "media", u && "img"]
  }, Q6, r);
}, t8 = Z("div", {
  name: "MuiCardMedia",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e, {
      isMediaComponent: u,
      isImageComponent: f
    } = s;
    return [r.root, u && r.media, f && r.img];
  }
})(({
  ownerState: e
}) => C({
  display: "block",
  backgroundSize: "cover",
  backgroundRepeat: "no-repeat",
  backgroundPosition: "center"
}, e.isMediaComponent && {
  width: "100%"
}, e.isImageComponent && {
  // ⚠️ object-fit is not supported by IE11.
  objectFit: "cover"
})), n8 = ["video", "audio", "picture", "iframe", "img"], o8 = ["picture", "img"], IM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiCardMedia"
  }), {
    children: f,
    className: v,
    component: m = "div",
    image: y,
    src: b,
    style: S
  } = u, E = me(u, J6), k = n8.indexOf(m) !== -1, D = !k && y ? C({
    backgroundImage: `url("${y}")`
  }, S) : S, M = C({}, u, {
    component: m,
    isMediaComponent: k,
    isImageComponent: o8.indexOf(m) !== -1
  }), P = e8(M);
  return /* @__PURE__ */ z(t8, C({
    className: pe(P.root, v),
    as: m,
    role: !k && y ? "img" : void 0,
    ref: s,
    style: D,
    ownerState: M,
    src: k ? y || b : void 0
  }, E, {
    children: f
  }));
});
process.env.NODE_ENV !== "production" && (IM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: jo(n.node, (e) => !e.children && !e.image && !e.src && !e.component ? new Error("MUI: Either `children`, `image`, `src` or `component` prop must be specified.") : null),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * Image to be displayed as a background image.
   * Either `image` or `src` prop must be specified.
   * Note that caller must specify height otherwise the image will not be visible.
   */
  image: n.string,
  /**
   * An alias for `image` property.
   * Available only with media components.
   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.
   */
  src: n.string,
  /**
   * @ignore
   */
  style: n.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const xee = IM;
function r8(e) {
  return je("PrivateSwitchBase", e);
}
He("PrivateSwitchBase", ["root", "checked", "disabled", "input", "edgeStart", "edgeEnd"]);
const a8 = ["autoFocus", "checked", "checkedIcon", "className", "defaultChecked", "disabled", "disableFocusRipple", "edge", "icon", "id", "inputProps", "inputRef", "name", "onBlur", "onChange", "onFocus", "readOnly", "required", "tabIndex", "type", "value"], i8 = (e) => {
  const {
    classes: r,
    checked: s,
    disabled: u,
    edge: f
  } = e, v = {
    root: ["root", s && "checked", u && "disabled", f && `edge${oe(f)}`],
    input: ["input"]
  };
  return Ue(v, r8, r);
}, s8 = Z(er)(({
  ownerState: e
}) => C({
  padding: 9,
  borderRadius: "50%"
}, e.edge === "start" && {
  marginLeft: e.size === "small" ? -3 : -12
}, e.edge === "end" && {
  marginRight: e.size === "small" ? -3 : -12
})), l8 = Z("input", {
  shouldForwardProp: ko
})({
  cursor: "inherit",
  position: "absolute",
  opacity: 0,
  width: "100%",
  height: "100%",
  top: 0,
  left: 0,
  margin: 0,
  padding: 0,
  zIndex: 1
}), _M = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const {
    autoFocus: u,
    checked: f,
    checkedIcon: v,
    className: m,
    defaultChecked: y,
    disabled: b,
    disableFocusRipple: S = !1,
    edge: E = !1,
    icon: k,
    id: D,
    inputProps: M,
    inputRef: P,
    name: L,
    onBlur: w,
    onChange: _,
    onFocus: V,
    readOnly: A,
    required: j = !1,
    tabIndex: U,
    type: $,
    value: F
  } = r, G = me(r, a8), [Y, Q] = za({
    controlled: f,
    default: !!y,
    name: "SwitchBase",
    state: "checked"
  }), q = Wi(), re = (ne) => {
    V && V(ne), q && q.onFocus && q.onFocus(ne);
  }, ee = (ne) => {
    w && w(ne), q && q.onBlur && q.onBlur(ne);
  }, J = (ne) => {
    if (ne.nativeEvent.defaultPrevented)
      return;
    const ve = ne.target.checked;
    Q(ve), _ && _(ne, ve);
  };
  let ce = b;
  q && typeof ce > "u" && (ce = q.disabled);
  const de = $ === "checkbox" || $ === "radio", fe = C({}, r, {
    checked: Y,
    disabled: ce,
    disableFocusRipple: S,
    edge: E
  }), K = i8(fe);
  return /* @__PURE__ */ gt(s8, C({
    component: "span",
    className: pe(K.root, m),
    centerRipple: !0,
    focusRipple: !S,
    disabled: ce,
    tabIndex: null,
    role: void 0,
    onFocus: re,
    onBlur: ee,
    ownerState: fe,
    ref: s
  }, G, {
    children: [/* @__PURE__ */ z(l8, C({
      autoFocus: u,
      checked: f,
      defaultChecked: y,
      className: K.input,
      disabled: ce,
      id: de ? D : void 0,
      name: L,
      onChange: J,
      readOnly: A,
      ref: P,
      required: j,
      ownerState: fe,
      tabIndex: U,
      type: $
    }, $ === "checkbox" && F === void 0 ? {} : {
      value: F
    }, M)), Y ? v : k]
  }));
});
process.env.NODE_ENV !== "production" && (_M.propTypes = {
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: n.bool,
  /**
   * If `true`, the component is checked.
   */
  checked: n.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: n.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * @ignore
   */
  defaultChecked: n.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: n.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: n.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: n.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: n.node.isRequired,
  /**
   * The id of the `input` element.
   */
  id: n.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: n.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Tr,
  /*
   * @ignore
   */
  name: n.string,
  /**
   * @ignore
   */
  onBlur: n.func,
  /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: n.func,
  /**
   * @ignore
   */
  onFocus: n.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: n.bool,
  /**
   * If `true`, the `input` element is required.
   */
  required: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.object,
  /**
   * @ignore
   */
  tabIndex: n.oneOfType([n.number, n.string]),
  /**
   * The input component prop `type`.
   */
  type: n.string.isRequired,
  /**
   * The value of the component.
   */
  value: n.any
});
const B1 = _M, c8 = Kn(/* @__PURE__ */ z("path", {
  d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
}), "CheckBoxOutlineBlank"), u8 = Kn(/* @__PURE__ */ z("path", {
  d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckBox"), d8 = Kn(/* @__PURE__ */ z("path", {
  d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
}), "IndeterminateCheckBox");
function p8(e) {
  return je("MuiCheckbox", e);
}
const f8 = He("MuiCheckbox", ["root", "checked", "disabled", "indeterminate", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium"]), PT = f8, m8 = ["checkedIcon", "color", "icon", "indeterminate", "indeterminateIcon", "inputProps", "size", "className"], v8 = (e) => {
  const {
    classes: r,
    indeterminate: s,
    color: u,
    size: f
  } = e, v = {
    root: ["root", s && "indeterminate", `color${oe(u)}`, `size${oe(f)}`]
  }, m = Ue(v, p8, r);
  return C({}, r, m);
}, h8 = Z(B1, {
  shouldForwardProp: (e) => ko(e) || e === "classes",
  name: "MuiCheckbox",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.indeterminate && r.indeterminate, r[`size${oe(s.size)}`], s.color !== "default" && r[`color${oe(s.color)}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  color: (e.vars || e).palette.text.secondary
}, !r.disableRipple && {
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${r.color === "default" ? e.vars.palette.action.activeChannel : e.vars.palette[r.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Ut(r.color === "default" ? e.palette.action.active : e.palette[r.color].main, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  }
}, r.color !== "default" && {
  [`&.${PT.checked}, &.${PT.indeterminate}`]: {
    color: (e.vars || e).palette[r.color].main
  },
  [`&.${PT.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  }
})), g8 = /* @__PURE__ */ z(u8, {}), y8 = /* @__PURE__ */ z(c8, {}), b8 = /* @__PURE__ */ z(d8, {}), AM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u, f;
  const v = Ve({
    props: r,
    name: "MuiCheckbox"
  }), {
    checkedIcon: m = g8,
    color: y = "primary",
    icon: b = y8,
    indeterminate: S = !1,
    indeterminateIcon: E = b8,
    inputProps: k,
    size: D = "medium",
    className: M
  } = v, P = me(v, m8), L = S ? E : b, w = S ? E : m, _ = C({}, v, {
    color: y,
    indeterminate: S,
    size: D
  }), V = v8(_);
  return /* @__PURE__ */ z(h8, C({
    type: "checkbox",
    inputProps: C({
      "data-indeterminate": S
    }, k),
    icon: /* @__PURE__ */ O.cloneElement(L, {
      fontSize: (u = L.props.fontSize) != null ? u : D
    }),
    checkedIcon: /* @__PURE__ */ O.cloneElement(w, {
      fontSize: (f = w.props.fontSize) != null ? f : D
    }),
    ownerState: _,
    ref: s,
    className: pe(V.root, M)
  }, P, {
    classes: V
  }));
});
process.env.NODE_ENV !== "production" && (AM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: n.bool,
  /**
   * The icon to display when the component is checked.
   * @default <CheckBoxIcon />
   */
  checkedIcon: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: n.oneOfType([n.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), n.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: n.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: n.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <CheckBoxOutlineBlankIcon />
   */
  icon: n.node,
  /**
   * The id of the `input` element.
   */
  id: n.string,
  /**
   * If `true`, the component appears indeterminate.
   * This does not set the native input element to indeterminate due
   * to inconsistent behavior across browsers.
   * However, we set a `data-indeterminate` attribute on the `input`.
   * @default false
   */
  indeterminate: n.bool,
  /**
   * The icon to display when the component is indeterminate.
   * @default <IndeterminateCheckBoxIcon />
   */
  indeterminateIcon: n.node,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: n.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Tr,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: n.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: n.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense checkbox styling.
   * @default 'medium'
   */
  size: n.oneOfType([n.oneOf(["medium", "small"]), n.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: n.any
});
const See = AM;
function C8(e) {
  return je("MuiCircularProgress", e);
}
const x8 = He("MuiCircularProgress", ["root", "determinate", "indeterminate", "colorPrimary", "colorSecondary", "svg", "circle", "circleDeterminate", "circleIndeterminate", "circleDisableShrink"]), Tee = x8, S8 = ["className", "color", "disableShrink", "size", "style", "thickness", "value", "variant"];
let U0 = (e) => e, Vk, Hk, Wk, Gk;
const Dc = 44, T8 = Vi(Vk || (Vk = U0`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`)), E8 = Vi(Hk || (Hk = U0`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -125px;
  }
`)), R8 = (e) => {
  const {
    classes: r,
    variant: s,
    color: u,
    disableShrink: f
  } = e, v = {
    root: ["root", s, `color${oe(u)}`],
    svg: ["svg"],
    circle: ["circle", `circle${oe(s)}`, f && "circleDisableShrink"]
  };
  return Ue(v, C8, r);
}, O8 = Z("span", {
  name: "MuiCircularProgress",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[s.variant], r[`color${oe(s.color)}`]];
  }
})(({
  ownerState: e,
  theme: r
}) => C({
  display: "inline-block"
}, e.variant === "determinate" && {
  transition: r.transitions.create("transform")
}, e.color !== "inherit" && {
  color: (r.vars || r).palette[e.color].main
}), ({
  ownerState: e
}) => e.variant === "indeterminate" && Fc(Wk || (Wk = U0`
      animation: ${0} 1.4s linear infinite;
    `), T8)), w8 = Z("svg", {
  name: "MuiCircularProgress",
  slot: "Svg",
  overridesResolver: (e, r) => r.svg
})({
  display: "block"
  // Keeps the progress centered
}), k8 = Z("circle", {
  name: "MuiCircularProgress",
  slot: "Circle",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.circle, r[`circle${oe(s.variant)}`], s.disableShrink && r.circleDisableShrink];
  }
})(({
  ownerState: e,
  theme: r
}) => C({
  stroke: "currentColor"
}, e.variant === "determinate" && {
  transition: r.transitions.create("stroke-dashoffset")
}, e.variant === "indeterminate" && {
  // Some default value that looks fine waiting for the animation to kicks in.
  strokeDasharray: "80px, 200px",
  strokeDashoffset: 0
  // Add the unit to fix a Edge 16 and below bug.
}), ({
  ownerState: e
}) => e.variant === "indeterminate" && !e.disableShrink && Fc(Gk || (Gk = U0`
      animation: ${0} 1.4s ease-in-out infinite;
    `), E8)), BM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiCircularProgress"
  }), {
    className: f,
    color: v = "primary",
    disableShrink: m = !1,
    size: y = 40,
    style: b,
    thickness: S = 3.6,
    value: E = 0,
    variant: k = "indeterminate"
  } = u, D = me(u, S8), M = C({}, u, {
    color: v,
    disableShrink: m,
    size: y,
    thickness: S,
    value: E,
    variant: k
  }), P = R8(M), L = {}, w = {}, _ = {};
  if (k === "determinate") {
    const V = 2 * Math.PI * ((Dc - S) / 2);
    L.strokeDasharray = V.toFixed(3), _["aria-valuenow"] = Math.round(E), L.strokeDashoffset = `${((100 - E) / 100 * V).toFixed(3)}px`, w.transform = "rotate(-90deg)";
  }
  return /* @__PURE__ */ z(O8, C({
    className: pe(P.root, f),
    style: C({
      width: y,
      height: y
    }, w, b),
    ownerState: M,
    ref: s,
    role: "progressbar"
  }, _, D, {
    children: /* @__PURE__ */ z(w8, {
      className: P.svg,
      ownerState: M,
      viewBox: `${Dc / 2} ${Dc / 2} ${Dc} ${Dc}`,
      children: /* @__PURE__ */ z(k8, {
        className: P.circle,
        style: L,
        ownerState: M,
        cx: Dc,
        cy: Dc,
        r: (Dc - S) / 2,
        fill: "none",
        strokeWidth: S
      })
    })
  }));
});
process.env.NODE_ENV !== "production" && (BM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: n.oneOfType([n.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), n.string]),
  /**
   * If `true`, the shrink animation is disabled.
   * This only works if variant is `indeterminate`.
   * @default false
   */
  disableShrink: jo(n.bool, (e) => e.disableShrink && e.variant && e.variant !== "indeterminate" ? new Error("MUI: You have provided the `disableShrink` prop with a variant other than `indeterminate`. This will have no effect.") : null),
  /**
   * The size of the component.
   * If using a number, the pixel unit is assumed.
   * If using a string, you need to provide the CSS unit, e.g. '3rem'.
   * @default 40
   */
  size: n.oneOfType([n.number, n.string]),
  /**
   * @ignore
   */
  style: n.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The thickness of the circle.
   * @default 3.6
   */
  thickness: n.number,
  /**
   * The value of the progress indicator for the determinate variant.
   * Value between 0 and 100.
   * @default 0
   */
  value: n.number,
  /**
   * The variant to use.
   * Use indeterminate when there is no progress value.
   * @default 'indeterminate'
   */
  variant: n.oneOf(["determinate", "indeterminate"])
});
const Eee = BM, zM = YF({
  createStyledComponent: Z("div", {
    name: "MuiContainer",
    slot: "Root",
    overridesResolver: (e, r) => {
      const {
        ownerState: s
      } = e;
      return [r.root, r[`maxWidth${oe(String(s.maxWidth))}`], s.fixed && r.fixed, s.disableGutters && r.disableGutters];
    }
  }),
  useThemeProps: (e) => Ve({
    props: e,
    name: "MuiContainer"
  })
});
process.env.NODE_ENV !== "production" && (zM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: n.bool,
  /**
   * Set the max-width to match the min-width of the current breakpoint.
   * This is useful if you'd prefer to design for a fixed set of sizes
   * instead of trying to accommodate a fully fluid viewport.
   * It's fluid by default.
   * @default false
   */
  fixed: n.bool,
  /**
   * Determine the max-width of the container.
   * The container width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'lg'
   */
  maxWidth: n.oneOfType([n.oneOf(["xs", "sm", "md", "lg", "xl", !1]), n.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const Ree = zM;
function Oee(e) {
  return je("MuiContainer", e);
}
const N8 = He("MuiContainer", ["root", "disableGutters", "fixed", "maxWidthXs", "maxWidthSm", "maxWidthMd", "maxWidthLg", "maxWidthXl"]), wee = N8, FM = (e, r) => C({
  WebkitFontSmoothing: "antialiased",
  // Antialiasing.
  MozOsxFontSmoothing: "grayscale",
  // Antialiasing.
  // Change from `box-sizing: content-box` so that `width`
  // is not affected by `padding` or `border`.
  boxSizing: "border-box",
  // Fix font resize problem in iOS
  WebkitTextSizeAdjust: "100%"
}, r && !e.vars && {
  colorScheme: e.palette.mode
}), jM = (e) => C({
  color: (e.vars || e).palette.text.primary
}, e.typography.body1, {
  backgroundColor: (e.vars || e).palette.background.default,
  "@media print": {
    // Save printer ink.
    backgroundColor: (e.vars || e).palette.common.white
  }
}), $8 = (e, r = !1) => {
  var s;
  const u = {};
  r && e.colorSchemes && Object.entries(e.colorSchemes).forEach(([m, y]) => {
    var b;
    u[e.getColorSchemeSelector(m).replace(/\s*&/, "")] = {
      colorScheme: (b = y.palette) == null ? void 0 : b.mode
    };
  });
  let f = C({
    html: FM(e, r),
    "*, *::before, *::after": {
      boxSizing: "inherit"
    },
    "strong, b": {
      fontWeight: e.typography.fontWeightBold
    },
    body: C({
      margin: 0
    }, jM(e), {
      // Add support for document.body.requestFullScreen().
      // Other elements, if background transparent, are not supported.
      "&::backdrop": {
        backgroundColor: (e.vars || e).palette.background.default
      }
    })
  }, u);
  const v = (s = e.components) == null || (s = s.MuiCssBaseline) == null ? void 0 : s.styleOverrides;
  return v && (f = [f, v]), f;
};
function M8(e) {
  const r = Ve({
    props: e,
    name: "MuiCssBaseline"
  }), {
    children: s,
    enableColorScheme: u = !1
  } = r;
  return /* @__PURE__ */ gt(O.Fragment, {
    children: [/* @__PURE__ */ z(_1, {
      styles: (f) => $8(f, u)
    }), s]
  });
}
process.env.NODE_ENV !== "production" && (M8.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * You can wrap a node.
   */
  children: n.node,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   * @default false
   */
  enableColorScheme: n.bool
});
const D8 = {
  track: "#2b2b2b",
  thumb: "#6b6b6b",
  active: "#959595"
};
function kee(e = D8) {
  return {
    scrollbarColor: `${e.thumb} ${e.track}`,
    "&::-webkit-scrollbar, & *::-webkit-scrollbar": {
      backgroundColor: e.track
    },
    "&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb": {
      borderRadius: 8,
      backgroundColor: e.thumb,
      minHeight: 24,
      border: `3px solid ${e.track}`
    },
    "&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus": {
      backgroundColor: e.active
    },
    "&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active": {
      backgroundColor: e.active
    },
    "&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover": {
      backgroundColor: e.active
    },
    "&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner": {
      backgroundColor: e.track
    }
  };
}
function P8(e) {
  return je("MuiModal", e);
}
const L8 = He("MuiModal", ["root", "hidden", "backdrop"]), Nee = L8, I8 = ["BackdropComponent", "BackdropProps", "classes", "className", "closeAfterTransition", "children", "container", "component", "components", "componentsProps", "disableAutoFocus", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "disableScrollLock", "hideBackdrop", "keepMounted", "onBackdropClick", "onClose", "onTransitionEnter", "onTransitionExited", "open", "slotProps", "slots", "theme"], _8 = (e) => {
  const {
    open: r,
    exited: s,
    classes: u
  } = e;
  return Ue({
    root: ["root", !r && s && "hidden"],
    backdrop: ["backdrop"]
  }, P8, u);
}, A8 = Z("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, !s.open && s.exited && r.hidden];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0
}, !r.open && r.exited && {
  visibility: "hidden"
})), B8 = Z(hM, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, r) => r.backdrop
})({
  zIndex: -1
}), UM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u, f, v, m, y, b;
  const S = Ve({
    name: "MuiModal",
    props: r
  }), {
    BackdropComponent: E = B8,
    BackdropProps: k,
    className: D,
    closeAfterTransition: M = !1,
    children: P,
    container: L,
    component: w,
    components: _ = {},
    componentsProps: V = {},
    disableAutoFocus: A = !1,
    disableEnforceFocus: j = !1,
    disableEscapeKeyDown: U = !1,
    disablePortal: $ = !1,
    disableRestoreFocus: F = !1,
    disableScrollLock: G = !1,
    hideBackdrop: Y = !1,
    keepMounted: Q = !1,
    onBackdropClick: q,
    open: re,
    slotProps: ee,
    slots: J
    // eslint-disable-next-line react/prop-types
  } = S, ce = me(S, I8), de = C({}, S, {
    closeAfterTransition: M,
    disableAutoFocus: A,
    disableEnforceFocus: j,
    disableEscapeKeyDown: U,
    disablePortal: $,
    disableRestoreFocus: F,
    disableScrollLock: G,
    hideBackdrop: Y,
    keepMounted: Q
  }), {
    getRootProps: fe,
    getBackdropProps: K,
    getTransitionProps: ne,
    portalRef: ve,
    isTopModal: Ke,
    exited: tt,
    hasTransition: Ie
  } = n4(C({}, de, {
    rootRef: s
  })), De = C({}, de, {
    exited: tt
  }), Ye = _8(De), ke = {};
  if (P.props.tabIndex === void 0 && (ke.tabIndex = "-1"), Ie) {
    const {
      onEnter: nt,
      onExited: le
    } = ne();
    ke.onEnter = nt, ke.onExited = le;
  }
  const lt = (u = (f = J == null ? void 0 : J.root) != null ? f : _.Root) != null ? u : A8, xe = (v = (m = J == null ? void 0 : J.backdrop) != null ? m : _.Backdrop) != null ? v : E, ze = (y = ee == null ? void 0 : ee.root) != null ? y : V.root, ut = (b = ee == null ? void 0 : ee.backdrop) != null ? b : V.backdrop, Xe = po({
    elementType: lt,
    externalSlotProps: ze,
    externalForwardedProps: ce,
    getSlotProps: fe,
    additionalProps: {
      ref: s,
      as: w
    },
    ownerState: De,
    className: pe(D, ze == null ? void 0 : ze.className, Ye == null ? void 0 : Ye.root, !De.open && De.exited && (Ye == null ? void 0 : Ye.hidden))
  }), rt = po({
    elementType: xe,
    externalSlotProps: ut,
    additionalProps: k,
    getSlotProps: (nt) => K(C({}, nt, {
      onClick: (le) => {
        q && q(le), nt != null && nt.onClick && nt.onClick(le);
      }
    })),
    className: pe(ut == null ? void 0 : ut.className, k == null ? void 0 : k.className, Ye == null ? void 0 : Ye.backdrop),
    ownerState: De
  });
  return !Q && !re && (!Ie || tt) ? null : /* @__PURE__ */ z(ch, {
    ref: ve,
    container: L,
    disablePortal: $,
    children: /* @__PURE__ */ gt(lt, C({}, Xe, {
      children: [!Y && E ? /* @__PURE__ */ z(xe, C({}, rt)) : null, /* @__PURE__ */ z(m0, {
        disableEnforceFocus: j,
        disableAutoFocus: A,
        disableRestoreFocus: F,
        isEnabled: Ke,
        open: re,
        children: /* @__PURE__ */ O.cloneElement(P, ke)
      })]
    }))
  });
});
process.env.NODE_ENV !== "production" && (UM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: n.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: n.object,
  /**
   * A single child content element.
   */
  children: Uc.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: n.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: n.shape({
    Backdrop: n.elementType,
    Root: n.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: n.shape({
    backdrop: n.oneOfType([n.func, n.object]),
    root: n.oneOfType([n.func, n.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: n.oneOfType([$s, n.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: n.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: n.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: n.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: n.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: n.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: n.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: n.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: n.bool,
  /**
   * Callback fired when the backdrop is clicked.
   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.
   */
  onBackdropClick: n.func,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: n.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: n.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: n.func,
  /**
   * If `true`, the component is shown.
   */
  open: n.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: n.shape({
    backdrop: n.oneOfType([n.func, n.object]),
    root: n.oneOfType([n.func, n.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: n.shape({
    backdrop: n.elementType,
    root: n.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const z1 = UM;
function z8(e) {
  return je("MuiDialog", e);
}
const F8 = He("MuiDialog", ["root", "scrollPaper", "scrollBody", "container", "paper", "paperScrollPaper", "paperScrollBody", "paperWidthFalse", "paperWidthXs", "paperWidthSm", "paperWidthMd", "paperWidthLg", "paperWidthXl", "paperFullWidth", "paperFullScreen"]), LT = F8, VM = /* @__PURE__ */ O.createContext({});
process.env.NODE_ENV !== "production" && (VM.displayName = "DialogContext");
const HM = VM, j8 = ["aria-describedby", "aria-labelledby", "BackdropComponent", "BackdropProps", "children", "className", "disableEscapeKeyDown", "fullScreen", "fullWidth", "maxWidth", "onBackdropClick", "onClose", "open", "PaperComponent", "PaperProps", "scroll", "TransitionComponent", "transitionDuration", "TransitionProps"], U8 = Z(hM, {
  name: "MuiDialog",
  slot: "Backdrop",
  overrides: (e, r) => r.backdrop
})({
  // Improve scrollable dialog support.
  zIndex: -1
}), V8 = (e) => {
  const {
    classes: r,
    scroll: s,
    maxWidth: u,
    fullWidth: f,
    fullScreen: v
  } = e, m = {
    root: ["root"],
    container: ["container", `scroll${oe(s)}`],
    paper: ["paper", `paperScroll${oe(s)}`, `paperWidth${oe(String(u))}`, f && "paperFullWidth", v && "paperFullScreen"]
  };
  return Ue(m, z8, r);
}, H8 = Z(z1, {
  name: "MuiDialog",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})({
  "@media print": {
    // Use !important to override the Modal inline-style.
    position: "absolute !important"
  }
}), W8 = Z("div", {
  name: "MuiDialog",
  slot: "Container",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.container, r[`scroll${oe(s.scroll)}`]];
  }
})(({
  ownerState: e
}) => C({
  height: "100%",
  "@media print": {
    height: "auto"
  },
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}, e.scroll === "paper" && {
  display: "flex",
  justifyContent: "center",
  alignItems: "center"
}, e.scroll === "body" && {
  overflowY: "auto",
  overflowX: "hidden",
  textAlign: "center",
  "&::after": {
    content: '""',
    display: "inline-block",
    verticalAlign: "middle",
    height: "100%",
    width: "0"
  }
})), G8 = Z(ui, {
  name: "MuiDialog",
  slot: "Paper",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.paper, r[`scrollPaper${oe(s.scroll)}`], r[`paperWidth${oe(String(s.maxWidth))}`], s.fullWidth && r.paperFullWidth, s.fullScreen && r.paperFullScreen];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  margin: 32,
  position: "relative",
  overflowY: "auto",
  // Fix IE11 issue, to remove at some point.
  "@media print": {
    overflowY: "visible",
    boxShadow: "none"
  }
}, r.scroll === "paper" && {
  display: "flex",
  flexDirection: "column",
  maxHeight: "calc(100% - 64px)"
}, r.scroll === "body" && {
  display: "inline-block",
  verticalAlign: "middle",
  textAlign: "left"
  // 'initial' doesn't work on IE11
}, !r.maxWidth && {
  maxWidth: "calc(100% - 64px)"
}, r.maxWidth === "xs" && {
  maxWidth: e.breakpoints.unit === "px" ? Math.max(e.breakpoints.values.xs, 444) : `max(${e.breakpoints.values.xs}${e.breakpoints.unit}, 444px)`,
  [`&.${LT.paperScrollBody}`]: {
    [e.breakpoints.down(Math.max(e.breakpoints.values.xs, 444) + 32 * 2)]: {
      maxWidth: "calc(100% - 64px)"
    }
  }
}, r.maxWidth && r.maxWidth !== "xs" && {
  maxWidth: `${e.breakpoints.values[r.maxWidth]}${e.breakpoints.unit}`,
  [`&.${LT.paperScrollBody}`]: {
    [e.breakpoints.down(e.breakpoints.values[r.maxWidth] + 32 * 2)]: {
      maxWidth: "calc(100% - 64px)"
    }
  }
}, r.fullWidth && {
  width: "calc(100% - 64px)"
}, r.fullScreen && {
  margin: 0,
  width: "100%",
  maxWidth: "100%",
  height: "100%",
  maxHeight: "none",
  borderRadius: 0,
  [`&.${LT.paperScrollBody}`]: {
    margin: 0,
    maxWidth: "100%"
  }
})), WM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiDialog"
  }), f = to(), v = {
    enter: f.transitions.duration.enteringScreen,
    exit: f.transitions.duration.leavingScreen
  }, {
    "aria-describedby": m,
    "aria-labelledby": y,
    BackdropComponent: b,
    BackdropProps: S,
    children: E,
    className: k,
    disableEscapeKeyDown: D = !1,
    fullScreen: M = !1,
    fullWidth: P = !1,
    maxWidth: L = "sm",
    onBackdropClick: w,
    onClose: _,
    open: V,
    PaperComponent: A = ui,
    PaperProps: j = {},
    scroll: U = "paper",
    TransitionComponent: $ = mM,
    transitionDuration: F = v,
    TransitionProps: G
  } = u, Y = me(u, j8), Q = C({}, u, {
    disableEscapeKeyDown: D,
    fullScreen: M,
    fullWidth: P,
    maxWidth: L,
    scroll: U
  }), q = V8(Q), re = O.useRef(), ee = (fe) => {
    re.current = fe.target === fe.currentTarget;
  }, J = (fe) => {
    re.current && (re.current = null, w && w(fe), _ && _(fe, "backdropClick"));
  }, ce = Ms(y), de = O.useMemo(() => ({
    titleId: ce
  }), [ce]);
  return /* @__PURE__ */ z(H8, C({
    className: pe(q.root, k),
    closeAfterTransition: !0,
    components: {
      Backdrop: U8
    },
    componentsProps: {
      backdrop: C({
        transitionDuration: F,
        as: b
      }, S)
    },
    disableEscapeKeyDown: D,
    onClose: _,
    open: V,
    ref: s,
    onClick: J,
    ownerState: Q
  }, Y, {
    children: /* @__PURE__ */ z($, C({
      appear: !0,
      in: V,
      timeout: F,
      role: "presentation"
    }, G, {
      children: /* @__PURE__ */ z(W8, {
        className: pe(q.container),
        onMouseDown: ee,
        ownerState: Q,
        children: /* @__PURE__ */ z(G8, C({
          as: A,
          elevation: 24,
          role: "dialog",
          "aria-describedby": m,
          "aria-labelledby": ce
        }, j, {
          className: pe(q.paper, j.className),
          ownerState: Q,
          children: /* @__PURE__ */ z(HM.Provider, {
            value: de,
            children: E
          })
        }))
      })
    }))
  }));
});
process.env.NODE_ENV !== "production" && (WM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The id(s) of the element(s) that describe the dialog.
   */
  "aria-describedby": n.string,
  /**
   * The id(s) of the element(s) that label the dialog.
   */
  "aria-labelledby": n.string,
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: n.elementType,
  /**
   * @ignore
   */
  BackdropProps: n.object,
  /**
   * Dialog children, usually the included sub-components.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: n.bool,
  /**
   * If `true`, the dialog is full-screen.
   * @default false
   */
  fullScreen: n.bool,
  /**
   * If `true`, the dialog stretches to `maxWidth`.
   *
   * Notice that the dialog width grow is limited by the default margin.
   * @default false
   */
  fullWidth: n.bool,
  /**
   * Determine the max-width of the dialog.
   * The dialog width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'sm'
   */
  maxWidth: n.oneOfType([n.oneOf(["xs", "sm", "md", "lg", "xl", !1]), n.string]),
  /**
   * Callback fired when the backdrop is clicked.
   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.
   */
  onBackdropClick: n.func,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: n.func,
  /**
   * If `true`, the component is shown.
   */
  open: n.bool.isRequired,
  /**
   * The component used to render the body of the dialog.
   * @default Paper
   */
  PaperComponent: n.elementType,
  /**
   * Props applied to the [`Paper`](/material-ui/api/paper/) element.
   * @default {}
   */
  PaperProps: n.object,
  /**
   * Determine the container for scrolling the dialog.
   * @default 'paper'
   */
  scroll: n.oneOf(["body", "paper"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   */
  TransitionComponent: n.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: n.oneOfType([n.number, n.shape({
    appear: n.number,
    enter: n.number,
    exit: n.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: n.object
});
const $ee = WM;
function q8(e) {
  return je("MuiDialogActions", e);
}
const Y8 = He("MuiDialogActions", ["root", "spacing"]), Mee = Y8, K8 = ["className", "disableSpacing"], X8 = (e) => {
  const {
    classes: r,
    disableSpacing: s
  } = e;
  return Ue({
    root: ["root", !s && "spacing"]
  }, q8, r);
}, Q8 = Z("div", {
  name: "MuiDialogActions",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, !s.disableSpacing && r.spacing];
  }
})(({
  ownerState: e
}) => C({
  display: "flex",
  alignItems: "center",
  padding: 8,
  justifyContent: "flex-end",
  flex: "0 0 auto"
}, !e.disableSpacing && {
  "& > :not(style) ~ :not(style)": {
    marginLeft: 8
  }
})), GM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiDialogActions"
  }), {
    className: f,
    disableSpacing: v = !1
  } = u, m = me(u, K8), y = C({}, u, {
    disableSpacing: v
  }), b = X8(y);
  return /* @__PURE__ */ z(Q8, C({
    className: pe(b.root, f),
    ownerState: y,
    ref: s
  }, m));
});
process.env.NODE_ENV !== "production" && (GM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const Dee = GM;
function Z8(e) {
  return je("MuiDialogContent", e);
}
const J8 = He("MuiDialogContent", ["root", "dividers"]), Pee = J8;
function eW(e) {
  return je("MuiDialogTitle", e);
}
const tW = He("MuiDialogTitle", ["root"]), nW = tW, oW = ["className", "dividers"], rW = (e) => {
  const {
    classes: r,
    dividers: s
  } = e;
  return Ue({
    root: ["root", s && "dividers"]
  }, Z8, r);
}, aW = Z("div", {
  name: "MuiDialogContent",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.dividers && r.dividers];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  flex: "1 1 auto",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  overflowY: "auto",
  padding: "20px 24px"
}, r.dividers ? {
  padding: "16px 24px",
  borderTop: `1px solid ${(e.vars || e).palette.divider}`,
  borderBottom: `1px solid ${(e.vars || e).palette.divider}`
} : {
  [`.${nW.root} + &`]: {
    paddingTop: 0
  }
})), qM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiDialogContent"
  }), {
    className: f,
    dividers: v = !1
  } = u, m = me(u, oW), y = C({}, u, {
    dividers: v
  }), b = rW(y);
  return /* @__PURE__ */ z(aW, C({
    className: pe(b.root, f),
    ownerState: y,
    ref: s
  }, m));
});
process.env.NODE_ENV !== "production" && (qM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * Display the top and bottom dividers.
   * @default false
   */
  dividers: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const Lee = qM;
function iW(e) {
  return je("MuiDialogContentText", e);
}
const sW = He("MuiDialogContentText", ["root"]), Iee = sW, lW = ["children", "className"], cW = (e) => {
  const {
    classes: r
  } = e, u = Ue({
    root: ["root"]
  }, iW, r);
  return C({}, r, u);
}, uW = Z(zr, {
  shouldForwardProp: (e) => ko(e) || e === "classes",
  name: "MuiDialogContentText",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})({}), YM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiDialogContentText"
  }), {
    className: f
  } = u, v = me(u, lW), m = cW(v);
  return /* @__PURE__ */ z(uW, C({
    component: "p",
    variant: "body1",
    color: "text.secondary",
    ref: s,
    ownerState: v,
    className: pe(m.root, f)
  }, u, {
    classes: m
  }));
});
process.env.NODE_ENV !== "production" && (YM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const _ee = YM, dW = ["className", "id"], pW = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"]
  }, eW, r);
}, fW = Z(zr, {
  name: "MuiDialogTitle",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})({
  padding: "16px 24px",
  flex: "0 0 auto"
}), KM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiDialogTitle"
  }), {
    className: f,
    id: v
  } = u, m = me(u, dW), y = u, b = pW(y), {
    titleId: S = v
  } = O.useContext(HM);
  return /* @__PURE__ */ z(fW, C({
    component: "h2",
    className: pe(b.root, f),
    ownerState: y,
    ref: s,
    variant: "h6",
    id: v ?? S
  }, m));
});
process.env.NODE_ENV !== "production" && (KM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * @ignore
   */
  id: n.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const Aee = KM;
function mW(e) {
  return je("MuiDivider", e);
}
const vW = He("MuiDivider", ["root", "absolute", "fullWidth", "inset", "middle", "flexItem", "light", "vertical", "withChildren", "withChildrenVertical", "textAlignRight", "textAlignLeft", "wrapper", "wrapperVertical"]), qk = vW, hW = ["absolute", "children", "className", "component", "flexItem", "light", "orientation", "role", "textAlign", "variant"], gW = (e) => {
  const {
    absolute: r,
    children: s,
    classes: u,
    flexItem: f,
    light: v,
    orientation: m,
    textAlign: y,
    variant: b
  } = e;
  return Ue({
    root: ["root", r && "absolute", b, v && "light", m === "vertical" && "vertical", f && "flexItem", s && "withChildren", s && m === "vertical" && "withChildrenVertical", y === "right" && m !== "vertical" && "textAlignRight", y === "left" && m !== "vertical" && "textAlignLeft"],
    wrapper: ["wrapper", m === "vertical" && "wrapperVertical"]
  }, mW, u);
}, yW = Z("div", {
  name: "MuiDivider",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.absolute && r.absolute, r[s.variant], s.light && r.light, s.orientation === "vertical" && r.vertical, s.flexItem && r.flexItem, s.children && r.withChildren, s.children && s.orientation === "vertical" && r.withChildrenVertical, s.textAlign === "right" && s.orientation !== "vertical" && r.textAlignRight, s.textAlign === "left" && s.orientation !== "vertical" && r.textAlignLeft];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  margin: 0,
  // Reset browser default style.
  flexShrink: 0,
  borderWidth: 0,
  borderStyle: "solid",
  borderColor: (e.vars || e).palette.divider,
  borderBottomWidth: "thin"
}, r.absolute && {
  position: "absolute",
  bottom: 0,
  left: 0,
  width: "100%"
}, r.light && {
  borderColor: e.vars ? `rgba(${e.vars.palette.dividerChannel} / 0.08)` : Ut(e.palette.divider, 0.08)
}, r.variant === "inset" && {
  marginLeft: 72
}, r.variant === "middle" && r.orientation === "horizontal" && {
  marginLeft: e.spacing(2),
  marginRight: e.spacing(2)
}, r.variant === "middle" && r.orientation === "vertical" && {
  marginTop: e.spacing(1),
  marginBottom: e.spacing(1)
}, r.orientation === "vertical" && {
  height: "100%",
  borderBottomWidth: 0,
  borderRightWidth: "thin"
}, r.flexItem && {
  alignSelf: "stretch",
  height: "auto"
}), ({
  ownerState: e
}) => C({}, e.children && {
  display: "flex",
  whiteSpace: "nowrap",
  textAlign: "center",
  border: 0,
  "&::before, &::after": {
    content: '""',
    alignSelf: "center"
  }
}), ({
  theme: e,
  ownerState: r
}) => C({}, r.children && r.orientation !== "vertical" && {
  "&::before, &::after": {
    width: "100%",
    borderTop: `thin solid ${(e.vars || e).palette.divider}`
  }
}), ({
  theme: e,
  ownerState: r
}) => C({}, r.children && r.orientation === "vertical" && {
  flexDirection: "column",
  "&::before, &::after": {
    height: "100%",
    borderLeft: `thin solid ${(e.vars || e).palette.divider}`
  }
}), ({
  ownerState: e
}) => C({}, e.textAlign === "right" && e.orientation !== "vertical" && {
  "&::before": {
    width: "90%"
  },
  "&::after": {
    width: "10%"
  }
}, e.textAlign === "left" && e.orientation !== "vertical" && {
  "&::before": {
    width: "10%"
  },
  "&::after": {
    width: "90%"
  }
})), bW = Z("span", {
  name: "MuiDivider",
  slot: "Wrapper",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.wrapper, s.orientation === "vertical" && r.wrapperVertical];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  display: "inline-block",
  paddingLeft: `calc(${e.spacing(1)} * 1.2)`,
  paddingRight: `calc(${e.spacing(1)} * 1.2)`
}, r.orientation === "vertical" && {
  paddingTop: `calc(${e.spacing(1)} * 1.2)`,
  paddingBottom: `calc(${e.spacing(1)} * 1.2)`
})), F1 = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiDivider"
  }), {
    absolute: f = !1,
    children: v,
    className: m,
    component: y = v ? "div" : "hr",
    flexItem: b = !1,
    light: S = !1,
    orientation: E = "horizontal",
    role: k = y !== "hr" ? "separator" : void 0,
    textAlign: D = "center",
    variant: M = "fullWidth"
  } = u, P = me(u, hW), L = C({}, u, {
    absolute: f,
    component: y,
    flexItem: b,
    light: S,
    orientation: E,
    role: k,
    textAlign: D,
    variant: M
  }), w = gW(L);
  return /* @__PURE__ */ z(yW, C({
    as: y,
    className: pe(w.root, m),
    role: k,
    ref: s,
    ownerState: L
  }, P, {
    children: v ? /* @__PURE__ */ z(bW, {
      className: w.wrapper,
      ownerState: L,
      children: v
    }) : null
  }));
});
F1.muiSkipListHighlight = !0;
process.env.NODE_ENV !== "production" && (F1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Absolutely position the element.
   * @default false
   */
  absolute: n.bool,
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * If `true`, a vertical divider will have the correct height when used in flex container.
   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)
   * @default false
   */
  flexItem: n.bool,
  /**
   * If `true`, the divider will have a lighter color.
   * @default false
   * @deprecated Use <Divider sx={{ opacity: 0.6 }} /> (or any opacity or color) instead. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/)
   */
  light: n.bool,
  /**
   * The component orientation.
   * @default 'horizontal'
   */
  orientation: n.oneOf(["horizontal", "vertical"]),
  /**
   * @ignore
   */
  role: n.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The text alignment.
   * @default 'center'
   */
  textAlign: n.oneOf(["center", "left", "right"]),
  /**
   * The variant to use.
   * @default 'fullWidth'
   */
  variant: n.oneOfType([n.oneOf(["fullWidth", "inset", "middle"]), n.string])
});
const Bee = F1, CW = ["addEndListener", "appear", "children", "container", "direction", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];
function xW(e, r, s) {
  const u = r.getBoundingClientRect(), f = s && s.getBoundingClientRect(), v = ta(r);
  let m;
  if (r.fakeTransform)
    m = r.fakeTransform;
  else {
    const S = v.getComputedStyle(r);
    m = S.getPropertyValue("-webkit-transform") || S.getPropertyValue("transform");
  }
  let y = 0, b = 0;
  if (m && m !== "none" && typeof m == "string") {
    const S = m.split("(")[1].split(")")[0].split(",");
    y = parseInt(S[4], 10), b = parseInt(S[5], 10);
  }
  return e === "left" ? f ? `translateX(${f.right + y - u.left}px)` : `translateX(${v.innerWidth + y - u.left}px)` : e === "right" ? f ? `translateX(-${u.right - f.left - y}px)` : `translateX(-${u.left + u.width - y}px)` : e === "up" ? f ? `translateY(${f.bottom + b - u.top}px)` : `translateY(${v.innerHeight + b - u.top}px)` : f ? `translateY(-${u.top - f.top + u.height - b}px)` : `translateY(-${u.top + u.height - b}px)`;
}
function XM(e) {
  return typeof e == "function" ? e() : e;
}
function Ub(e, r, s) {
  const u = XM(s), f = xW(e, r, u);
  f && (r.style.webkitTransform = f, r.style.transform = f);
}
const QM = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = to(), f = {
    enter: u.transitions.easing.easeOut,
    exit: u.transitions.easing.sharp
  }, v = {
    enter: u.transitions.duration.enteringScreen,
    exit: u.transitions.duration.leavingScreen
  }, {
    addEndListener: m,
    appear: y = !0,
    children: b,
    container: S,
    direction: E = "down",
    easing: k = f,
    in: D,
    onEnter: M,
    onEntered: P,
    onEntering: L,
    onExit: w,
    onExited: _,
    onExiting: V,
    style: A,
    timeout: j = v,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: U = Th
  } = r, $ = me(r, CW), F = O.useRef(null), G = yn(b.ref, F, s), Y = (K) => (ne) => {
    K && (ne === void 0 ? K(F.current) : K(F.current, ne));
  }, Q = Y((K, ne) => {
    Ub(E, K, S), M0(K), M && M(K, ne);
  }), q = Y((K, ne) => {
    const ve = Ui({
      timeout: j,
      style: A,
      easing: k
    }, {
      mode: "enter"
    });
    K.style.webkitTransition = u.transitions.create("-webkit-transform", C({}, ve)), K.style.transition = u.transitions.create("transform", C({}, ve)), K.style.webkitTransform = "none", K.style.transform = "none", L && L(K, ne);
  }), re = Y(P), ee = Y(V), J = Y((K) => {
    const ne = Ui({
      timeout: j,
      style: A,
      easing: k
    }, {
      mode: "exit"
    });
    K.style.webkitTransition = u.transitions.create("-webkit-transform", ne), K.style.transition = u.transitions.create("transform", ne), Ub(E, K, S), w && w(K);
  }), ce = Y((K) => {
    K.style.webkitTransition = "", K.style.transition = "", _ && _(K);
  }), de = (K) => {
    m && m(F.current, K);
  }, fe = O.useCallback(() => {
    F.current && Ub(E, F.current, S);
  }, [E, S]);
  return O.useEffect(() => {
    if (D || E === "down" || E === "right")
      return;
    const K = gh(() => {
      F.current && Ub(E, F.current, S);
    }), ne = ta(F.current);
    return ne.addEventListener("resize", K), () => {
      K.clear(), ne.removeEventListener("resize", K);
    };
  }, [E, D, S]), O.useEffect(() => {
    D || fe();
  }, [D, fe]), /* @__PURE__ */ z(U, C({
    nodeRef: F,
    onEnter: Q,
    onEntered: re,
    onEntering: q,
    onExit: J,
    onExited: ce,
    onExiting: ee,
    addEndListener: de,
    appear: y,
    in: D,
    timeout: j
  }, $, {
    children: (K, ne) => /* @__PURE__ */ O.cloneElement(b, C({
      ref: G,
      style: C({
        visibility: K === "exited" && !D ? "hidden" : void 0
      }, A, b.props.style)
    }, ne))
  }));
});
process.env.NODE_ENV !== "production" && (QM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: n.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: n.bool,
  /**
   * A single child content element.
   */
  children: Uc.isRequired,
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the container the Slide is transitioning from.
   */
  container: jo(n.oneOfType([$s, n.func]), (e) => {
    if (e.open) {
      const r = XM(e.container);
      if (r && r.nodeType === 1) {
        const s = r.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && s.top === 0 && s.left === 0 && s.right === 0 && s.bottom === 0)
          return new Error(["MUI: The `container` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!r || typeof r.getBoundingClientRect != "function" || r.contextElement != null && r.contextElement.nodeType !== 1)
        return new Error(["MUI: The `container` prop provided to the component is invalid.", "It should be an HTML element instance."].join(`
`));
    }
    return null;
  }),
  /**
   * Direction the child node will enter from.
   * @default 'down'
   */
  direction: n.oneOf(["down", "left", "right", "up"]),
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   * @default {
   *   enter: theme.transitions.easing.easeOut,
   *   exit: theme.transitions.easing.sharp,
   * }
   */
  easing: n.oneOfType([n.shape({
    enter: n.string,
    exit: n.string
  }), n.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: n.bool,
  /**
   * @ignore
   */
  onEnter: n.func,
  /**
   * @ignore
   */
  onEntered: n.func,
  /**
   * @ignore
   */
  onEntering: n.func,
  /**
   * @ignore
   */
  onExit: n.func,
  /**
   * @ignore
   */
  onExited: n.func,
  /**
   * @ignore
   */
  onExiting: n.func,
  /**
   * @ignore
   */
  style: n.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: n.oneOfType([n.number, n.shape({
    appear: n.number,
    enter: n.number,
    exit: n.number
  })])
});
const SW = QM;
function TW(e) {
  return je("MuiDrawer", e);
}
const EW = He("MuiDrawer", ["root", "docked", "paper", "paperAnchorLeft", "paperAnchorRight", "paperAnchorTop", "paperAnchorBottom", "paperAnchorDockedLeft", "paperAnchorDockedRight", "paperAnchorDockedTop", "paperAnchorDockedBottom", "modal"]), zee = EW, RW = ["BackdropProps"], OW = ["anchor", "BackdropProps", "children", "className", "elevation", "hideBackdrop", "ModalProps", "onClose", "open", "PaperProps", "SlideProps", "TransitionComponent", "transitionDuration", "variant"], ZM = (e, r) => {
  const {
    ownerState: s
  } = e;
  return [r.root, (s.variant === "permanent" || s.variant === "persistent") && r.docked, r.modal];
}, wW = (e) => {
  const {
    classes: r,
    anchor: s,
    variant: u
  } = e, f = {
    root: ["root"],
    docked: [(u === "permanent" || u === "persistent") && "docked"],
    modal: ["modal"],
    paper: ["paper", `paperAnchor${oe(s)}`, u !== "temporary" && `paperAnchorDocked${oe(s)}`]
  };
  return Ue(f, TW, r);
}, kW = Z(z1, {
  name: "MuiDrawer",
  slot: "Root",
  overridesResolver: ZM
})(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.drawer
})), Yk = Z("div", {
  shouldForwardProp: ko,
  name: "MuiDrawer",
  slot: "Docked",
  skipVariantsResolver: !1,
  overridesResolver: ZM
})({
  flex: "0 0 auto"
}), NW = Z(ui, {
  name: "MuiDrawer",
  slot: "Paper",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.paper, r[`paperAnchor${oe(s.anchor)}`], s.variant !== "temporary" && r[`paperAnchorDocked${oe(s.anchor)}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  overflowY: "auto",
  display: "flex",
  flexDirection: "column",
  height: "100%",
  flex: "1 0 auto",
  zIndex: (e.vars || e).zIndex.drawer,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  // temporary style
  position: "fixed",
  top: 0,
  // We disable the focus ring for mouse, touch and keyboard users.
  // At some point, it would be better to keep it for keyboard users.
  // :focus-ring CSS pseudo-class will help.
  outline: 0
}, r.anchor === "left" && {
  left: 0
}, r.anchor === "top" && {
  top: 0,
  left: 0,
  right: 0,
  height: "auto",
  maxHeight: "100%"
}, r.anchor === "right" && {
  right: 0
}, r.anchor === "bottom" && {
  top: "auto",
  left: 0,
  bottom: 0,
  right: 0,
  height: "auto",
  maxHeight: "100%"
}, r.anchor === "left" && r.variant !== "temporary" && {
  borderRight: `1px solid ${(e.vars || e).palette.divider}`
}, r.anchor === "top" && r.variant !== "temporary" && {
  borderBottom: `1px solid ${(e.vars || e).palette.divider}`
}, r.anchor === "right" && r.variant !== "temporary" && {
  borderLeft: `1px solid ${(e.vars || e).palette.divider}`
}, r.anchor === "bottom" && r.variant !== "temporary" && {
  borderTop: `1px solid ${(e.vars || e).palette.divider}`
})), JM = {
  left: "right",
  right: "left",
  top: "down",
  bottom: "up"
};
function nd(e) {
  return ["left", "right"].indexOf(e) !== -1;
}
function Qv(e, r) {
  return e.direction === "rtl" && nd(r) ? JM[r] : r;
}
const eD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiDrawer"
  }), f = to(), v = {
    enter: f.transitions.duration.enteringScreen,
    exit: f.transitions.duration.leavingScreen
  }, {
    anchor: m = "left",
    BackdropProps: y,
    children: b,
    className: S,
    elevation: E = 16,
    hideBackdrop: k = !1,
    ModalProps: {
      BackdropProps: D
    } = {},
    onClose: M,
    open: P = !1,
    PaperProps: L = {},
    SlideProps: w,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: _ = SW,
    transitionDuration: V = v,
    variant: A = "temporary"
  } = u, j = me(u.ModalProps, RW), U = me(u, OW), $ = O.useRef(!1);
  O.useEffect(() => {
    $.current = !0;
  }, []);
  const F = Qv(f, m), Y = C({}, u, {
    anchor: m,
    elevation: E,
    open: P,
    variant: A
  }, U), Q = wW(Y), q = /* @__PURE__ */ z(NW, C({
    elevation: A === "temporary" ? E : 0,
    square: !0
  }, L, {
    className: pe(Q.paper, L.className),
    ownerState: Y,
    children: b
  }));
  if (A === "permanent")
    return /* @__PURE__ */ z(Yk, C({
      className: pe(Q.root, Q.docked, S),
      ownerState: Y,
      ref: s
    }, U, {
      children: q
    }));
  const re = /* @__PURE__ */ z(_, C({
    in: P,
    direction: JM[F],
    timeout: V,
    appear: $.current
  }, w, {
    children: q
  }));
  return A === "persistent" ? /* @__PURE__ */ z(Yk, C({
    className: pe(Q.root, Q.docked, S),
    ownerState: Y,
    ref: s
  }, U, {
    children: re
  })) : /* @__PURE__ */ z(kW, C({
    BackdropProps: C({}, y, D, {
      transitionDuration: V
    }),
    className: pe(Q.root, Q.modal, S),
    open: P,
    ownerState: Y,
    onClose: M,
    hideBackdrop: k,
    ref: s
  }, U, j, {
    children: re
  }));
});
process.env.NODE_ENV !== "production" && (eD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Side from which the drawer will appear.
   * @default 'left'
   */
  anchor: n.oneOf(["bottom", "left", "right", "top"]),
  /**
   * @ignore
   */
  BackdropProps: n.object,
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The elevation of the drawer.
   * @default 16
   */
  elevation: Co,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: n.bool,
  /**
   * Props applied to the [`Modal`](/material-ui/api/modal/) element.
   * @default {}
   */
  ModalProps: n.object,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: n.func,
  /**
   * If `true`, the component is shown.
   * @default false
   */
  open: n.bool,
  /**
   * Props applied to the [`Paper`](/material-ui/api/paper/) element.
   * @default {}
   */
  PaperProps: n.object,
  /**
   * Props applied to the [`Slide`](/material-ui/api/slide/) element.
   */
  SlideProps: n.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: n.oneOfType([n.number, n.shape({
    appear: n.number,
    enter: n.number,
    exit: n.number
  })]),
  /**
   * The variant to use.
   * @default 'temporary'
   */
  variant: n.oneOf(["permanent", "persistent", "temporary"])
});
const $W = eD;
function MW(e) {
  return je("MuiFab", e);
}
const DW = He("MuiFab", ["root", "primary", "secondary", "extended", "circular", "focusVisible", "disabled", "colorInherit", "sizeSmall", "sizeMedium", "sizeLarge", "info", "error", "warning", "success"]), Kk = DW, PW = ["children", "className", "color", "component", "disabled", "disableFocusRipple", "focusVisibleClassName", "size", "variant"], LW = (e) => {
  const {
    color: r,
    variant: s,
    classes: u,
    size: f
  } = e, v = {
    root: ["root", s, `size${oe(f)}`, r === "inherit" ? "colorInherit" : r]
  }, m = Ue(v, MW, u);
  return C({}, u, m);
}, IW = Z(er, {
  name: "MuiFab",
  slot: "Root",
  shouldForwardProp: (e) => ko(e) || e === "classes",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[s.variant], r[`size${oe(s.size)}`], s.color === "inherit" && r.colorInherit, r[oe(s.size)], r[s.color]];
  }
})(({
  theme: e,
  ownerState: r
}) => {
  var s, u;
  return C({}, e.typography.button, {
    minHeight: 36,
    transition: e.transitions.create(["background-color", "box-shadow", "border-color"], {
      duration: e.transitions.duration.short
    }),
    borderRadius: "50%",
    padding: 0,
    minWidth: 0,
    width: 56,
    height: 56,
    zIndex: (e.vars || e).zIndex.fab,
    boxShadow: (e.vars || e).shadows[6],
    "&:active": {
      boxShadow: (e.vars || e).shadows[12]
    },
    color: e.vars ? e.vars.palette.text.primary : (s = (u = e.palette).getContrastText) == null ? void 0 : s.call(u, e.palette.grey[300]),
    backgroundColor: (e.vars || e).palette.grey[300],
    "&:hover": {
      backgroundColor: (e.vars || e).palette.grey.A100,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (e.vars || e).palette.grey[300]
      },
      textDecoration: "none"
    },
    [`&.${Kk.focusVisible}`]: {
      boxShadow: (e.vars || e).shadows[6]
    }
  }, r.size === "small" && {
    width: 40,
    height: 40
  }, r.size === "medium" && {
    width: 48,
    height: 48
  }, r.variant === "extended" && {
    borderRadius: 48 / 2,
    padding: "0 16px",
    width: "auto",
    minHeight: "auto",
    minWidth: 48,
    height: 48
  }, r.variant === "extended" && r.size === "small" && {
    width: "auto",
    padding: "0 8px",
    borderRadius: 34 / 2,
    minWidth: 34,
    height: 34
  }, r.variant === "extended" && r.size === "medium" && {
    width: "auto",
    padding: "0 16px",
    borderRadius: 40 / 2,
    minWidth: 40,
    height: 40
  }, r.color === "inherit" && {
    color: "inherit"
  });
}, ({
  theme: e,
  ownerState: r
}) => C({}, r.color !== "inherit" && r.color !== "default" && (e.vars || e).palette[r.color] != null && {
  color: (e.vars || e).palette[r.color].contrastText,
  backgroundColor: (e.vars || e).palette[r.color].main,
  "&:hover": {
    backgroundColor: (e.vars || e).palette[r.color].dark,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: (e.vars || e).palette[r.color].main
    }
  }
}), ({
  theme: e
}) => ({
  [`&.${Kk.disabled}`]: {
    color: (e.vars || e).palette.action.disabled,
    boxShadow: (e.vars || e).shadows[0],
    backgroundColor: (e.vars || e).palette.action.disabledBackground
  }
})), tD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiFab"
  }), {
    children: f,
    className: v,
    color: m = "default",
    component: y = "button",
    disabled: b = !1,
    disableFocusRipple: S = !1,
    focusVisibleClassName: E,
    size: k = "large",
    variant: D = "circular"
  } = u, M = me(u, PW), P = C({}, u, {
    color: m,
    component: y,
    disabled: b,
    disableFocusRipple: S,
    size: k,
    variant: D
  }), L = LW(P);
  return /* @__PURE__ */ z(IW, C({
    className: pe(L.root, v),
    component: y,
    disabled: b,
    focusRipple: !S,
    focusVisibleClassName: pe(L.focusVisible, E),
    ownerState: P,
    ref: s
  }, M, {
    classes: L,
    children: f
  }));
});
process.env.NODE_ENV !== "production" && (tD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: n.oneOfType([n.oneOf(["default", "error", "info", "inherit", "primary", "secondary", "success", "warning"]), n.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: n.bool,
  /**
   * If `true`, the ripple effect is disabled.
   */
  disableRipple: n.bool,
  /**
   * @ignore
   */
  focusVisibleClassName: n.string,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: n.string,
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'large'
   */
  size: n.oneOfType([n.oneOf(["small", "medium", "large"]), n.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The variant to use.
   * @default 'circular'
   */
  variant: n.oneOfType([n.oneOf(["circular", "extended"]), n.string])
});
const nD = tD, _W = ["disableUnderline", "components", "componentsProps", "fullWidth", "hiddenLabel", "inputComponent", "multiline", "slotProps", "slots", "type"], AW = (e) => {
  const {
    classes: r,
    disableUnderline: s
  } = e, f = Ue({
    root: ["root", !s && "underline"],
    input: ["input"]
  }, VH, r);
  return C({}, r, f);
}, BW = Z(z0, {
  shouldForwardProp: (e) => ko(e) || e === "classes",
  name: "MuiFilledInput",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [...A0(e, r), !s.disableUnderline && r.underline];
  }
})(({
  theme: e,
  ownerState: r
}) => {
  var s;
  const u = e.palette.mode === "light", f = u ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)", v = u ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)", m = u ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)", y = u ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return C({
    position: "relative",
    backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : v,
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create("background-color", {
      duration: e.transitions.duration.shorter,
      easing: e.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.hoverBg : m,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : v
      }
    },
    [`&.${Ba.focused}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : v
    },
    [`&.${Ba.disabled}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.disabledBg : y
    }
  }, !r.disableUnderline && {
    "&::after": {
      borderBottom: `2px solid ${(s = (e.vars || e).palette[r.color || "primary"]) == null ? void 0 : s.main}`,
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '""',
      position: "absolute",
      right: 0,
      transform: "scaleX(0)",
      transition: e.transitions.create("transform", {
        duration: e.transitions.duration.shorter,
        easing: e.transitions.easing.easeOut
      }),
      pointerEvents: "none"
      // Transparent to the hover style.
    },
    [`&.${Ba.focused}:after`]: {
      // translateX(0) is a workaround for Safari transform scale bug
      // See https://github.com/mui/material-ui/issues/31766
      transform: "scaleX(1) translateX(0)"
    },
    [`&.${Ba.error}`]: {
      "&::before, &::after": {
        borderBottomColor: (e.vars || e).palette.error.main
      }
    },
    "&::before": {
      borderBottom: `1px solid ${e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})` : f}`,
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '"\\00a0"',
      position: "absolute",
      right: 0,
      transition: e.transitions.create("border-bottom-color", {
        duration: e.transitions.duration.shorter
      }),
      pointerEvents: "none"
      // Transparent to the hover style.
    },
    [`&:hover:not(.${Ba.disabled}, .${Ba.error}):before`]: {
      borderBottom: `1px solid ${(e.vars || e).palette.text.primary}`
    },
    [`&.${Ba.disabled}:before`]: {
      borderBottomStyle: "dotted"
    }
  }, r.startAdornment && {
    paddingLeft: 12
  }, r.endAdornment && {
    paddingRight: 12
  }, r.multiline && C({
    padding: "25px 12px 8px"
  }, r.size === "small" && {
    paddingTop: 21,
    paddingBottom: 4
  }, r.hiddenLabel && {
    paddingTop: 16,
    paddingBottom: 17
  }, r.hiddenLabel && r.size === "small" && {
    paddingTop: 8,
    paddingBottom: 9
  }));
}), zW = Z(F0, {
  name: "MuiFilledInput",
  slot: "Input",
  overridesResolver: B0
})(({
  theme: e,
  ownerState: r
}) => C({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12
}, !e.vars && {
  "&:-webkit-autofill": {
    WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
    WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
    caretColor: e.palette.mode === "light" ? null : "#fff",
    borderTopLeftRadius: "inherit",
    borderTopRightRadius: "inherit"
  }
}, e.vars && {
  "&:-webkit-autofill": {
    borderTopLeftRadius: "inherit",
    borderTopRightRadius: "inherit"
  },
  [e.getColorSchemeSelector("dark")]: {
    "&:-webkit-autofill": {
      WebkitBoxShadow: "0 0 0 100px #266798 inset",
      WebkitTextFillColor: "#fff",
      caretColor: "#fff"
    }
  }
}, r.size === "small" && {
  paddingTop: 21,
  paddingBottom: 4
}, r.hiddenLabel && {
  paddingTop: 16,
  paddingBottom: 17
}, r.startAdornment && {
  paddingLeft: 0
}, r.endAdornment && {
  paddingRight: 0
}, r.hiddenLabel && r.size === "small" && {
  paddingTop: 8,
  paddingBottom: 9
}, r.multiline && {
  paddingTop: 0,
  paddingBottom: 0,
  paddingLeft: 0,
  paddingRight: 0
})), j1 = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u, f, v, m;
  const y = Ve({
    props: r,
    name: "MuiFilledInput"
  }), {
    components: b = {},
    componentsProps: S,
    fullWidth: E = !1,
    // declare here to prevent spreading to DOM
    inputComponent: k = "input",
    multiline: D = !1,
    slotProps: M,
    slots: P = {},
    type: L = "text"
  } = y, w = me(y, _W), _ = C({}, y, {
    fullWidth: E,
    inputComponent: k,
    multiline: D,
    type: L
  }), V = AW(y), A = {
    root: {
      ownerState: _
    },
    input: {
      ownerState: _
    }
  }, j = M ?? S ? ji(A, M ?? S) : A, U = (u = (f = P.root) != null ? f : b.Root) != null ? u : BW, $ = (v = (m = P.input) != null ? m : b.Input) != null ? v : zW;
  return /* @__PURE__ */ z(j0, C({
    slots: {
      root: U,
      input: $
    },
    componentsProps: j,
    fullWidth: E,
    inputComponent: k,
    multiline: D,
    ref: s,
    type: L
  }, w, {
    classes: V
  }));
});
process.env.NODE_ENV !== "production" && (j1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: n.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: n.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: n.oneOfType([n.oneOf(["primary", "secondary"]), n.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: n.shape({
    Input: n.elementType,
    Root: n.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: n.shape({
    input: n.object,
    root: n.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: n.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: n.bool,
  /**
   * If `true`, the input will not have an underline.
   */
  disableUnderline: n.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: n.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: n.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: n.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: n.bool,
  /**
   * The id of the `input` element.
   */
  id: n.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: n.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: n.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Tr,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: n.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: n.oneOfType([n.number, n.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: n.oneOfType([n.number, n.string]),
  /**
   * If `true`, a [TextareaAutosize](/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: n.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: n.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: n.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: n.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: n.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: n.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: n.oneOfType([n.number, n.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: n.shape({
    input: n.object,
    root: n.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: n.shape({
    input: n.elementType,
    root: n.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: n.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: n.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: n.any
});
j1.muiName = "Input";
const oD = j1;
function FW(e) {
  return je("MuiFormControl", e);
}
const jW = He("MuiFormControl", ["root", "marginNone", "marginNormal", "marginDense", "fullWidth", "disabled"]), Fee = jW, UW = ["children", "className", "color", "component", "disabled", "error", "focused", "fullWidth", "hiddenLabel", "margin", "required", "size", "variant"], VW = (e) => {
  const {
    classes: r,
    margin: s,
    fullWidth: u
  } = e, f = {
    root: ["root", s !== "none" && `margin${oe(s)}`, u && "fullWidth"]
  };
  return Ue(f, FW, r);
}, HW = Z("div", {
  name: "MuiFormControl",
  slot: "Root",
  overridesResolver: ({
    ownerState: e
  }, r) => C({}, r.root, r[`margin${oe(e.margin)}`], e.fullWidth && r.fullWidth)
})(({
  ownerState: e
}) => C({
  display: "inline-flex",
  flexDirection: "column",
  position: "relative",
  // Reset fieldset default style.
  minWidth: 0,
  padding: 0,
  margin: 0,
  border: 0,
  verticalAlign: "top"
}, e.margin === "normal" && {
  marginTop: 16,
  marginBottom: 8
}, e.margin === "dense" && {
  marginTop: 8,
  marginBottom: 4
}, e.fullWidth && {
  width: "100%"
})), rD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiFormControl"
  }), {
    children: f,
    className: v,
    color: m = "primary",
    component: y = "div",
    disabled: b = !1,
    error: S = !1,
    focused: E,
    fullWidth: k = !1,
    hiddenLabel: D = !1,
    margin: M = "none",
    required: P = !1,
    size: L = "medium",
    variant: w = "outlined"
  } = u, _ = me(u, UW), V = C({}, u, {
    color: m,
    component: y,
    disabled: b,
    error: S,
    fullWidth: k,
    hiddenLabel: D,
    margin: M,
    required: P,
    size: L,
    variant: w
  }), A = VW(V), [j, U] = O.useState(() => {
    let ee = !1;
    return f && O.Children.forEach(f, (J) => {
      if (!Rl(J, ["Input", "Select"]))
        return;
      const ce = Rl(J, ["Select"]) ? J.props.input : J;
      ce && PH(ce.props) && (ee = !0);
    }), ee;
  }), [$, F] = O.useState(() => {
    let ee = !1;
    return f && O.Children.forEach(f, (J) => {
      Rl(J, ["Input", "Select"]) && (b0(J.props, !0) || b0(J.props.inputProps, !0)) && (ee = !0);
    }), ee;
  }), [G, Y] = O.useState(!1);
  b && G && Y(!1);
  const Q = E !== void 0 && !b ? E : G;
  let q;
  if (process.env.NODE_ENV !== "production") {
    const ee = O.useRef(!1);
    q = () => (ee.current && console.error(["MUI: There are multiple `InputBase` components inside a FormControl.", "This creates visual inconsistencies, only use one `InputBase`."].join(`
`)), ee.current = !0, () => {
      ee.current = !1;
    });
  }
  const re = O.useMemo(() => ({
    adornedStart: j,
    setAdornedStart: U,
    color: m,
    disabled: b,
    error: S,
    filled: $,
    focused: Q,
    fullWidth: k,
    hiddenLabel: D,
    size: L,
    onBlur: () => {
      Y(!1);
    },
    onEmpty: () => {
      F(!1);
    },
    onFilled: () => {
      F(!0);
    },
    onFocus: () => {
      Y(!0);
    },
    registerEffect: q,
    required: P,
    variant: w
  }), [j, m, b, S, $, Q, k, D, q, P, L, w]);
  return /* @__PURE__ */ z(_0.Provider, {
    value: re,
    children: /* @__PURE__ */ z(HW, C({
      as: y,
      ownerState: V,
      className: pe(A.root, v),
      ref: s
    }, _, {
      children: f
    }))
  });
});
process.env.NODE_ENV !== "production" && (rD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: n.oneOfType([n.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), n.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   * @default false
   */
  disabled: n.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: n.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: n.bool,
  /**
   * If `true`, the component will take up the full width of its container.
   * @default false
   */
  fullWidth: n.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: n.bool,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: n.oneOf(["dense", "none", "normal"]),
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: n.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: n.oneOfType([n.oneOf(["medium", "small"]), n.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: n.oneOf(["filled", "outlined", "standard"])
});
const WW = rD, aD = yj({
  createStyledComponent: Z("div", {
    name: "MuiStack",
    slot: "Root",
    overridesResolver: (e, r) => r.root
  }),
  useThemeProps: (e) => Ve({
    props: e,
    name: "MuiStack"
  })
});
process.env.NODE_ENV !== "production" && (aD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * Defines the `flex-direction` style property.
   * It is applied for all screen sizes.
   * @default 'column'
   */
  direction: n.oneOfType([n.oneOf(["column-reverse", "column", "row-reverse", "row"]), n.arrayOf(n.oneOf(["column-reverse", "column", "row-reverse", "row"])), n.object]),
  /**
   * Add an element between each child.
   */
  divider: n.node,
  /**
   * Defines the space between immediate children.
   * @default 0
   */
  spacing: n.oneOfType([n.arrayOf(n.oneOfType([n.number, n.string])), n.number, n.object, n.string]),
  /**
   * The system prop, which allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.
   *
   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),
   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.
   *
   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.
   * @default false
   */
  useFlexGap: n.bool
});
const GW = aD, qW = He("MuiStack", ["root"]), jee = qW;
function YW(e) {
  return je("MuiFormControlLabel", e);
}
const KW = He("MuiFormControlLabel", ["root", "labelPlacementStart", "labelPlacementTop", "labelPlacementBottom", "disabled", "label", "error", "required", "asterisk"]), Zv = KW, XW = ["checked", "className", "componentsProps", "control", "disabled", "disableTypography", "inputRef", "label", "labelPlacement", "name", "onChange", "required", "slotProps", "value"], QW = (e) => {
  const {
    classes: r,
    disabled: s,
    labelPlacement: u,
    error: f,
    required: v
  } = e, m = {
    root: ["root", s && "disabled", `labelPlacement${oe(u)}`, f && "error", v && "required"],
    label: ["label", s && "disabled"],
    asterisk: ["asterisk", f && "error"]
  };
  return Ue(m, YW, r);
}, ZW = Z("label", {
  name: "MuiFormControlLabel",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [{
      [`& .${Zv.label}`]: r.label
    }, r.root, r[`labelPlacement${oe(s.labelPlacement)}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  display: "inline-flex",
  alignItems: "center",
  cursor: "pointer",
  // For correct alignment with the text.
  verticalAlign: "middle",
  WebkitTapHighlightColor: "transparent",
  marginLeft: -11,
  marginRight: 16,
  // used for row presentation of radio/checkbox
  [`&.${Zv.disabled}`]: {
    cursor: "default"
  }
}, r.labelPlacement === "start" && {
  flexDirection: "row-reverse",
  marginLeft: 16,
  // used for row presentation of radio/checkbox
  marginRight: -11
}, r.labelPlacement === "top" && {
  flexDirection: "column-reverse",
  marginLeft: 16
}, r.labelPlacement === "bottom" && {
  flexDirection: "column",
  marginLeft: 16
}, {
  [`& .${Zv.label}`]: {
    [`&.${Zv.disabled}`]: {
      color: (e.vars || e).palette.text.disabled
    }
  }
})), JW = Z("span", {
  name: "MuiFormControlLabel",
  slot: "Asterisk",
  overridesResolver: (e, r) => r.asterisk
})(({
  theme: e
}) => ({
  [`&.${Zv.error}`]: {
    color: (e.vars || e).palette.error.main
  }
})), iD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u, f;
  const v = Ve({
    props: r,
    name: "MuiFormControlLabel"
  }), {
    className: m,
    componentsProps: y = {},
    control: b,
    disabled: S,
    disableTypography: E,
    label: k,
    labelPlacement: D = "end",
    required: M,
    slotProps: P = {}
  } = v, L = me(v, XW), w = Wi(), _ = (u = S ?? b.props.disabled) != null ? u : w == null ? void 0 : w.disabled, V = M ?? b.props.required, A = {
    disabled: _,
    required: V
  };
  ["checked", "name", "onChange", "value", "inputRef"].forEach((Y) => {
    typeof b.props[Y] > "u" && typeof v[Y] < "u" && (A[Y] = v[Y]);
  });
  const j = $l({
    props: v,
    muiFormControl: w,
    states: ["error"]
  }), U = C({}, v, {
    disabled: _,
    labelPlacement: D,
    required: V,
    error: j.error
  }), $ = QW(U), F = (f = P.typography) != null ? f : y.typography;
  let G = k;
  return G != null && G.type !== zr && !E && (G = /* @__PURE__ */ z(zr, C({
    component: "span"
  }, F, {
    className: pe($.label, F == null ? void 0 : F.className),
    children: G
  }))), /* @__PURE__ */ gt(ZW, C({
    className: pe($.root, m),
    ownerState: U,
    ref: s
  }, L, {
    children: [/* @__PURE__ */ O.cloneElement(b, A), V ? /* @__PURE__ */ gt(GW, {
      display: "block",
      children: [G, /* @__PURE__ */ gt(JW, {
        ownerState: U,
        "aria-hidden": !0,
        className: $.asterisk,
        children: [" ", "*"]
      })]
    }) : G]
  }));
});
process.env.NODE_ENV !== "production" && (iD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component appears selected.
   */
  checked: n.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  componentsProps: n.shape({
    typography: n.object
  }),
  /**
   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.
   */
  control: n.element.isRequired,
  /**
   * If `true`, the control is disabled.
   */
  disabled: n.bool,
  /**
   * If `true`, the label is rendered as it is passed without an additional typography node.
   */
  disableTypography: n.bool,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Tr,
  /**
   * A text or an element to be used in an enclosing label element.
   */
  label: n.node,
  /**
   * The position of the label.
   * @default 'end'
   */
  labelPlacement: n.oneOf(["bottom", "end", "start", "top"]),
  /**
   * @ignore
   */
  name: n.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: n.func,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: n.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: n.shape({
    typography: n.object
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The value of the component.
   */
  value: n.any
});
const Uee = iD;
function e9(e) {
  return je("MuiFormGroup", e);
}
const t9 = He("MuiFormGroup", ["root", "row", "error"]), Vee = t9, n9 = ["className", "row"], o9 = (e) => {
  const {
    classes: r,
    row: s,
    error: u
  } = e;
  return Ue({
    root: ["root", s && "row", u && "error"]
  }, e9, r);
}, r9 = Z("div", {
  name: "MuiFormGroup",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.row && r.row];
  }
})(({
  ownerState: e
}) => C({
  display: "flex",
  flexDirection: "column",
  flexWrap: "wrap"
}, e.row && {
  flexDirection: "row"
})), sD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiFormGroup"
  }), {
    className: f,
    row: v = !1
  } = u, m = me(u, n9), y = Wi(), b = $l({
    props: u,
    muiFormControl: y,
    states: ["error"]
  }), S = C({}, u, {
    row: v,
    error: b.error
  }), E = o9(S);
  return /* @__PURE__ */ z(r9, C({
    className: pe(E.root, f),
    ownerState: S,
    ref: s
  }, m));
});
process.env.NODE_ENV !== "production" && (sD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * Display group of elements in a compact row.
   * @default false
   */
  row: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const a9 = sD;
function i9(e) {
  return je("MuiFormHelperText", e);
}
const s9 = He("MuiFormHelperText", ["root", "error", "disabled", "sizeSmall", "sizeMedium", "contained", "focused", "filled", "required"]), Xk = s9;
var Qk;
const l9 = ["children", "className", "component", "disabled", "error", "filled", "focused", "margin", "required", "variant"], c9 = (e) => {
  const {
    classes: r,
    contained: s,
    size: u,
    disabled: f,
    error: v,
    filled: m,
    focused: y,
    required: b
  } = e, S = {
    root: ["root", f && "disabled", v && "error", u && `size${oe(u)}`, s && "contained", y && "focused", m && "filled", b && "required"]
  };
  return Ue(S, i9, r);
}, u9 = Z("p", {
  name: "MuiFormHelperText",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.size && r[`size${oe(s.size)}`], s.contained && r.contained, s.filled && r.filled];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  color: (e.vars || e).palette.text.secondary
}, e.typography.caption, {
  textAlign: "left",
  marginTop: 3,
  marginRight: 0,
  marginBottom: 0,
  marginLeft: 0,
  [`&.${Xk.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${Xk.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}, r.size === "small" && {
  marginTop: 4
}, r.contained && {
  marginLeft: 14,
  marginRight: 14
})), lD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiFormHelperText"
  }), {
    children: f,
    className: v,
    component: m = "p"
  } = u, y = me(u, l9), b = Wi(), S = $l({
    props: u,
    muiFormControl: b,
    states: ["variant", "size", "disabled", "error", "filled", "focused", "required"]
  }), E = C({}, u, {
    component: m,
    contained: S.variant === "filled" || S.variant === "outlined",
    variant: S.variant,
    size: S.size,
    disabled: S.disabled,
    error: S.error,
    filled: S.filled,
    focused: S.focused,
    required: S.required
  }), k = c9(E);
  return /* @__PURE__ */ z(u9, C({
    as: m,
    ownerState: E,
    className: pe(k.root, v),
    ref: s
  }, y, {
    children: f === " " ? (
      // notranslate needed while Google Translate will not fix zero-width space issue
      Qk || (Qk = /* @__PURE__ */ z("span", {
        className: "notranslate",
        children: "​"
      }))
    ) : f
  }));
});
process.env.NODE_ENV !== "production" && (lD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   *
   * If `' '` is provided, the component reserves one line height for displaying a future message.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * If `true`, the helper text should be displayed in a disabled state.
   */
  disabled: n.bool,
  /**
   * If `true`, helper text should be displayed in an error state.
   */
  error: n.bool,
  /**
   * If `true`, the helper text should use filled classes key.
   */
  filled: n.bool,
  /**
   * If `true`, the helper text should use focused classes key.
   */
  focused: n.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: n.oneOf(["dense"]),
  /**
   * If `true`, the helper text should use required classes key.
   */
  required: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The variant to use.
   */
  variant: n.oneOfType([n.oneOf(["filled", "outlined", "standard"]), n.string])
});
const d9 = lD;
function p9(e) {
  return je("MuiFormLabel", e);
}
const f9 = He("MuiFormLabel", ["root", "colorSecondary", "focused", "disabled", "error", "filled", "required", "asterisk"]), nh = f9, m9 = ["children", "className", "color", "component", "disabled", "error", "filled", "focused", "required"], v9 = (e) => {
  const {
    classes: r,
    color: s,
    focused: u,
    disabled: f,
    error: v,
    filled: m,
    required: y
  } = e, b = {
    root: ["root", `color${oe(s)}`, f && "disabled", v && "error", m && "filled", u && "focused", y && "required"],
    asterisk: ["asterisk", v && "error"]
  };
  return Ue(b, p9, r);
}, h9 = Z("label", {
  name: "MuiFormLabel",
  slot: "Root",
  overridesResolver: ({
    ownerState: e
  }, r) => C({}, r.root, e.color === "secondary" && r.colorSecondary, e.filled && r.filled)
})(({
  theme: e,
  ownerState: r
}) => C({
  color: (e.vars || e).palette.text.secondary
}, e.typography.body1, {
  lineHeight: "1.4375em",
  padding: 0,
  position: "relative",
  [`&.${nh.focused}`]: {
    color: (e.vars || e).palette[r.color].main
  },
  [`&.${nh.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${nh.error}`]: {
    color: (e.vars || e).palette.error.main
  }
})), g9 = Z("span", {
  name: "MuiFormLabel",
  slot: "Asterisk",
  overridesResolver: (e, r) => r.asterisk
})(({
  theme: e
}) => ({
  [`&.${nh.error}`]: {
    color: (e.vars || e).palette.error.main
  }
})), cD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiFormLabel"
  }), {
    children: f,
    className: v,
    component: m = "label"
  } = u, y = me(u, m9), b = Wi(), S = $l({
    props: u,
    muiFormControl: b,
    states: ["color", "required", "focused", "disabled", "error", "filled"]
  }), E = C({}, u, {
    color: S.color || "primary",
    component: m,
    disabled: S.disabled,
    error: S.error,
    filled: S.filled,
    focused: S.focused,
    required: S.required
  }), k = v9(E);
  return /* @__PURE__ */ gt(h9, C({
    as: m,
    ownerState: E,
    className: pe(k.root, v),
    ref: s
  }, y, {
    children: [f, S.required && /* @__PURE__ */ gt(g9, {
      ownerState: E,
      "aria-hidden": !0,
      className: k.asterisk,
      children: [" ", "*"]
    })]
  }));
});
process.env.NODE_ENV !== "production" && (cD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: n.oneOfType([n.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), n.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * If `true`, the label should be displayed in a disabled state.
   */
  disabled: n.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: n.bool,
  /**
   * If `true`, the label should use filled classes key.
   */
  filled: n.bool,
  /**
   * If `true`, the input of this label is focused (used by `FormGroup` components).
   */
  focused: n.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const y9 = cD, uD = /* @__PURE__ */ O.createContext();
process.env.NODE_ENV !== "production" && (uD.displayName = "GridContext");
const Zk = uD;
function b9(e) {
  return je("MuiGrid", e);
}
const C9 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], x9 = ["column-reverse", "column", "row-reverse", "row"], S9 = ["nowrap", "wrap-reverse", "wrap"], zv = ["auto", !0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], T9 = He("MuiGrid", [
  "root",
  "container",
  "item",
  "zeroMinWidth",
  // spacings
  ...C9.map((e) => `spacing-xs-${e}`),
  // direction values
  ...x9.map((e) => `direction-xs-${e}`),
  // wrap values
  ...S9.map((e) => `wrap-xs-${e}`),
  // grid sizes for all breakpoints
  ...zv.map((e) => `grid-xs-${e}`),
  ...zv.map((e) => `grid-sm-${e}`),
  ...zv.map((e) => `grid-md-${e}`),
  ...zv.map((e) => `grid-lg-${e}`),
  ...zv.map((e) => `grid-xl-${e}`)
]), ph = T9, E9 = ["className", "columns", "columnSpacing", "component", "container", "direction", "item", "rowSpacing", "spacing", "wrap", "zeroMinWidth"];
function pf(e) {
  const r = parseFloat(e);
  return `${r}${String(e).replace(String(r), "") || "px"}`;
}
function R9({
  theme: e,
  ownerState: r
}) {
  let s;
  return e.breakpoints.keys.reduce((u, f) => {
    let v = {};
    if (r[f] && (s = r[f]), !s)
      return u;
    if (s === !0)
      v = {
        flexBasis: 0,
        flexGrow: 1,
        maxWidth: "100%"
      };
    else if (s === "auto")
      v = {
        flexBasis: "auto",
        flexGrow: 0,
        flexShrink: 0,
        maxWidth: "none",
        width: "auto"
      };
    else {
      const m = ad({
        values: r.columns,
        breakpoints: e.breakpoints.values
      }), y = typeof m == "object" ? m[f] : m;
      if (y == null)
        return u;
      const b = `${Math.round(s / y * 1e8) / 1e6}%`;
      let S = {};
      if (r.container && r.item && r.columnSpacing !== 0) {
        const E = e.spacing(r.columnSpacing);
        if (E !== "0px") {
          const k = `calc(${b} + ${pf(E)})`;
          S = {
            flexBasis: k,
            maxWidth: k
          };
        }
      }
      v = C({
        flexBasis: b,
        flexGrow: 0,
        maxWidth: b
      }, S);
    }
    return e.breakpoints.values[f] === 0 ? Object.assign(u, v) : u[e.breakpoints.up(f)] = v, u;
  }, {});
}
function O9({
  theme: e,
  ownerState: r
}) {
  const s = ad({
    values: r.direction,
    breakpoints: e.breakpoints.values
  });
  return ah({
    theme: e
  }, s, (u) => {
    const f = {
      flexDirection: u
    };
    return u.indexOf("column") === 0 && (f[`& > .${ph.item}`] = {
      maxWidth: "none"
    }), f;
  });
}
function dD({
  breakpoints: e,
  values: r
}) {
  let s = "";
  Object.keys(r).forEach((f) => {
    s === "" && r[f] !== 0 && (s = f);
  });
  const u = Object.keys(e).sort((f, v) => e[f] - e[v]);
  return u.slice(0, u.indexOf(s));
}
function w9({
  theme: e,
  ownerState: r
}) {
  const {
    container: s,
    rowSpacing: u
  } = r;
  let f = {};
  if (s && u !== 0) {
    const v = ad({
      values: u,
      breakpoints: e.breakpoints.values
    });
    let m;
    typeof v == "object" && (m = dD({
      breakpoints: e.breakpoints.values,
      values: v
    })), f = ah({
      theme: e
    }, v, (y, b) => {
      var S;
      const E = e.spacing(y);
      return E !== "0px" ? {
        marginTop: `-${pf(E)}`,
        [`& > .${ph.item}`]: {
          paddingTop: pf(E)
        }
      } : (S = m) != null && S.includes(b) ? {} : {
        marginTop: 0,
        [`& > .${ph.item}`]: {
          paddingTop: 0
        }
      };
    });
  }
  return f;
}
function k9({
  theme: e,
  ownerState: r
}) {
  const {
    container: s,
    columnSpacing: u
  } = r;
  let f = {};
  if (s && u !== 0) {
    const v = ad({
      values: u,
      breakpoints: e.breakpoints.values
    });
    let m;
    typeof v == "object" && (m = dD({
      breakpoints: e.breakpoints.values,
      values: v
    })), f = ah({
      theme: e
    }, v, (y, b) => {
      var S;
      const E = e.spacing(y);
      return E !== "0px" ? {
        width: `calc(100% + ${pf(E)})`,
        marginLeft: `-${pf(E)}`,
        [`& > .${ph.item}`]: {
          paddingLeft: pf(E)
        }
      } : (S = m) != null && S.includes(b) ? {} : {
        width: "100%",
        marginLeft: 0,
        [`& > .${ph.item}`]: {
          paddingLeft: 0
        }
      };
    });
  }
  return f;
}
function N9(e, r, s = {}) {
  if (!e || e <= 0)
    return [];
  if (typeof e == "string" && !Number.isNaN(Number(e)) || typeof e == "number")
    return [s[`spacing-xs-${String(e)}`]];
  const u = [];
  return r.forEach((f) => {
    const v = e[f];
    Number(v) > 0 && u.push(s[`spacing-${f}-${String(v)}`]);
  }), u;
}
const $9 = Z("div", {
  name: "MuiGrid",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e, {
      container: u,
      direction: f,
      item: v,
      spacing: m,
      wrap: y,
      zeroMinWidth: b,
      breakpoints: S
    } = s;
    let E = [];
    u && (E = N9(m, S, r));
    const k = [];
    return S.forEach((D) => {
      const M = s[D];
      M && k.push(r[`grid-${D}-${String(M)}`]);
    }), [r.root, u && r.container, v && r.item, b && r.zeroMinWidth, ...E, f !== "row" && r[`direction-xs-${String(f)}`], y !== "wrap" && r[`wrap-xs-${String(y)}`], ...k];
  }
})(({
  ownerState: e
}) => C({
  boxSizing: "border-box"
}, e.container && {
  display: "flex",
  flexWrap: "wrap",
  width: "100%"
}, e.item && {
  margin: 0
  // For instance, it's useful when used with a `figure` element.
}, e.zeroMinWidth && {
  minWidth: 0
}, e.wrap !== "wrap" && {
  flexWrap: e.wrap
}), O9, w9, k9, R9);
function M9(e, r) {
  if (!e || e <= 0)
    return [];
  if (typeof e == "string" && !Number.isNaN(Number(e)) || typeof e == "number")
    return [`spacing-xs-${String(e)}`];
  const s = [];
  return r.forEach((u) => {
    const f = e[u];
    if (Number(f) > 0) {
      const v = `spacing-${u}-${String(f)}`;
      s.push(v);
    }
  }), s;
}
const D9 = (e) => {
  const {
    classes: r,
    container: s,
    direction: u,
    item: f,
    spacing: v,
    wrap: m,
    zeroMinWidth: y,
    breakpoints: b
  } = e;
  let S = [];
  s && (S = M9(v, b));
  const E = [];
  b.forEach((D) => {
    const M = e[D];
    M && E.push(`grid-${D}-${String(M)}`);
  });
  const k = {
    root: ["root", s && "container", f && "item", y && "zeroMinWidth", ...S, u !== "row" && `direction-xs-${String(u)}`, m !== "wrap" && `wrap-xs-${String(m)}`, ...E]
  };
  return Ue(k, b9, r);
}, oh = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiGrid"
  }), {
    breakpoints: f
  } = to(), v = mh(u), {
    className: m,
    columns: y,
    columnSpacing: b,
    component: S = "div",
    container: E = !1,
    direction: k = "row",
    item: D = !1,
    rowSpacing: M,
    spacing: P = 0,
    wrap: L = "wrap",
    zeroMinWidth: w = !1
  } = v, _ = me(v, E9), V = M || P, A = b || P, j = O.useContext(Zk), U = E ? y || 12 : j, $ = {}, F = C({}, _);
  f.keys.forEach((Q) => {
    _[Q] != null && ($[Q] = _[Q], delete F[Q]);
  });
  const G = C({}, v, {
    columns: U,
    container: E,
    direction: k,
    item: D,
    rowSpacing: V,
    columnSpacing: A,
    wrap: L,
    zeroMinWidth: w,
    spacing: P
  }, $, {
    breakpoints: f.keys
  }), Y = D9(G);
  return /* @__PURE__ */ z(Zk.Provider, {
    value: U,
    children: /* @__PURE__ */ z($9, C({
      ownerState: G,
      className: pe(Y.root, m),
      as: S,
      ref: s
    }, F))
  });
});
process.env.NODE_ENV !== "production" && (oh.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The number of columns.
   * @default 12
   */
  columns: n.oneOfType([n.arrayOf(n.number), n.number, n.object]),
  /**
   * Defines the horizontal space between the type `item` components.
   * It overrides the value of the `spacing` prop.
   */
  columnSpacing: n.oneOfType([n.arrayOf(n.oneOfType([n.number, n.string])), n.number, n.object, n.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * If `true`, the component will have the flex *container* behavior.
   * You should be wrapping *items* with a *container*.
   * @default false
   */
  container: n.bool,
  /**
   * Defines the `flex-direction` style property.
   * It is applied for all screen sizes.
   * @default 'row'
   */
  direction: n.oneOfType([n.oneOf(["column-reverse", "column", "row-reverse", "row"]), n.arrayOf(n.oneOf(["column-reverse", "column", "row-reverse", "row"])), n.object]),
  /**
   * If `true`, the component will have the flex *item* behavior.
   * You should be wrapping *items* with a *container*.
   * @default false
   */
  item: n.bool,
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `lg` breakpoint and wider screens if not overridden.
   * @default false
   */
  lg: n.oneOfType([n.oneOf(["auto"]), n.number, n.bool]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `md` breakpoint and wider screens if not overridden.
   * @default false
   */
  md: n.oneOfType([n.oneOf(["auto"]), n.number, n.bool]),
  /**
   * Defines the vertical space between the type `item` components.
   * It overrides the value of the `spacing` prop.
   */
  rowSpacing: n.oneOfType([n.arrayOf(n.oneOfType([n.number, n.string])), n.number, n.object, n.string]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `sm` breakpoint and wider screens if not overridden.
   * @default false
   */
  sm: n.oneOfType([n.oneOf(["auto"]), n.number, n.bool]),
  /**
   * Defines the space between the type `item` components.
   * It can only be used on a type `container` component.
   * @default 0
   */
  spacing: n.oneOfType([n.arrayOf(n.oneOfType([n.number, n.string])), n.number, n.object, n.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * Defines the `flex-wrap` style property.
   * It's applied for all screen sizes.
   * @default 'wrap'
   */
  wrap: n.oneOf(["nowrap", "wrap-reverse", "wrap"]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `xl` breakpoint and wider screens if not overridden.
   * @default false
   */
  xl: n.oneOfType([n.oneOf(["auto"]), n.number, n.bool]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for all the screen sizes with the lowest priority.
   * @default false
   */
  xs: n.oneOfType([n.oneOf(["auto"]), n.number, n.bool]),
  /**
   * If `true`, it sets `min-width: 0` on the item.
   * Refer to the limitations section of the documentation to better understand the use case.
   * @default false
   */
  zeroMinWidth: n.bool
});
if (process.env.NODE_ENV !== "production") {
  const e = cF("Grid", oh);
  oh["propTypes"] = C({}, oh.propTypes, {
    direction: e("container"),
    lg: e("item"),
    md: e("item"),
    sm: e("item"),
    spacing: e("container"),
    wrap: e("container"),
    xs: e("item"),
    zeroMinWidth: e("item")
  });
}
const Hee = oh, pD = uj({
  createStyledComponent: Z("div", {
    name: "MuiGrid2",
    slot: "Root",
    overridesResolver: (e, r) => r.root
  }),
  componentName: "MuiGrid2",
  useThemeProps: (e) => Ve({
    props: e,
    name: "MuiGrid2"
  })
});
process.env.NODE_ENV !== "production" && (pD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * @ignore
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const Wee = pD;
function Gee(e) {
  return je("MuiGrid2", e);
}
const P9 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], L9 = ["column-reverse", "column", "row-reverse", "row"], I9 = ["nowrap", "wrap-reverse", "wrap"], Fv = ["auto", !0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], _9 = He("MuiGrid2", [
  "root",
  "container",
  "item",
  "zeroMinWidth",
  // spacings
  ...P9.map((e) => `spacing-xs-${e}`),
  // direction values
  ...L9.map((e) => `direction-xs-${e}`),
  // wrap values
  ...I9.map((e) => `wrap-xs-${e}`),
  // grid sizes for all breakpoints
  ...Fv.map((e) => `grid-xs-${e}`),
  ...Fv.map((e) => `grid-sm-${e}`),
  ...Fv.map((e) => `grid-md-${e}`),
  ...Fv.map((e) => `grid-lg-${e}`),
  ...Fv.map((e) => `grid-xl-${e}`)
]), qee = _9, A9 = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];
function r1(e) {
  return `scale(${e}, ${e ** 2})`;
}
const B9 = {
  entering: {
    opacity: 1,
    transform: r1(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, IT = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), U1 = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const {
    addEndListener: u,
    appear: f = !0,
    children: v,
    easing: m,
    in: y,
    onEnter: b,
    onEntered: S,
    onEntering: E,
    onExit: k,
    onExited: D,
    onExiting: M,
    style: P,
    timeout: L = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: w = Th
  } = r, _ = me(r, A9), V = El(), A = O.useRef(), j = to(), U = O.useRef(null), $ = yn(U, v.ref, s), F = (ce) => (de) => {
    if (ce) {
      const fe = U.current;
      de === void 0 ? ce(fe) : ce(fe, de);
    }
  }, G = F(E), Y = F((ce, de) => {
    M0(ce);
    const {
      duration: fe,
      delay: K,
      easing: ne
    } = Ui({
      style: P,
      timeout: L,
      easing: m
    }, {
      mode: "enter"
    });
    let ve;
    L === "auto" ? (ve = j.transitions.getAutoHeightDuration(ce.clientHeight), A.current = ve) : ve = fe, ce.style.transition = [j.transitions.create("opacity", {
      duration: ve,
      delay: K
    }), j.transitions.create("transform", {
      duration: IT ? ve : ve * 0.666,
      delay: K,
      easing: ne
    })].join(","), b && b(ce, de);
  }), Q = F(S), q = F(M), re = F((ce) => {
    const {
      duration: de,
      delay: fe,
      easing: K
    } = Ui({
      style: P,
      timeout: L,
      easing: m
    }, {
      mode: "exit"
    });
    let ne;
    L === "auto" ? (ne = j.transitions.getAutoHeightDuration(ce.clientHeight), A.current = ne) : ne = de, ce.style.transition = [j.transitions.create("opacity", {
      duration: ne,
      delay: fe
    }), j.transitions.create("transform", {
      duration: IT ? ne : ne * 0.666,
      delay: IT ? fe : fe || ne * 0.333,
      easing: K
    })].join(","), ce.style.opacity = 0, ce.style.transform = r1(0.75), k && k(ce);
  }), ee = F(D);
  return /* @__PURE__ */ z(w, C({
    appear: f,
    in: y,
    nodeRef: U,
    onEnter: Y,
    onEntered: Q,
    onEntering: G,
    onExit: re,
    onExited: ee,
    onExiting: q,
    addEndListener: (ce) => {
      L === "auto" && V.start(A.current || 0, ce), u && u(U.current, ce);
    },
    timeout: L === "auto" ? null : L
  }, _, {
    children: (ce, de) => /* @__PURE__ */ O.cloneElement(v, C({
      style: C({
        opacity: 0,
        transform: r1(0.75),
        visibility: ce === "exited" && !y ? "hidden" : void 0
      }, B9[ce], P, v.props.style),
      ref: $
    }, de))
  }));
});
process.env.NODE_ENV !== "production" && (U1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: n.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: n.bool,
  /**
   * A single child content element.
   */
  children: Uc.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: n.oneOfType([n.shape({
    enter: n.string,
    exit: n.string
  }), n.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: n.bool,
  /**
   * @ignore
   */
  onEnter: n.func,
  /**
   * @ignore
   */
  onEntered: n.func,
  /**
   * @ignore
   */
  onEntering: n.func,
  /**
   * @ignore
   */
  onExit: n.func,
  /**
   * @ignore
   */
  onExited: n.func,
  /**
   * @ignore
   */
  onExiting: n.func,
  /**
   * @ignore
   */
  style: n.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: n.oneOfType([n.oneOf(["auto"]), n.number, n.shape({
    appear: n.number,
    enter: n.number,
    exit: n.number
  })])
});
U1.muiSupportAuto = !0;
const C0 = U1, z9 = ["initialWidth", "width"], _c = ["xs", "sm", "md", "lg", "xl"], F9 = (e, r, s = !0) => s ? _c.indexOf(e) <= _c.indexOf(r) : _c.indexOf(e) < _c.indexOf(r), j9 = (e, r, s = !1) => s ? _c.indexOf(r) <= _c.indexOf(e) : _c.indexOf(r) < _c.indexOf(e), U9 = (e = {}) => (r) => {
  const {
    withTheme: s = !1,
    noSSR: u = !1,
    initialWidth: f
  } = e;
  function v(m) {
    const y = to(), b = m.theme || y, S = p1({
      theme: b,
      name: "MuiWithWidth",
      props: m
    }), {
      initialWidth: E,
      width: k
    } = S, D = me(S, z9), [M, P] = O.useState(!1);
    ur(() => {
      P(!0);
    }, []);
    const w = b.breakpoints.keys.slice().reverse().reduce((V, A) => {
      const j = Jz(b.breakpoints.up(A));
      return !V && j ? A : V;
    }, null), _ = C({
      width: k || (M || u ? w : void 0) || E || f
    }, s ? {
      theme: b
    } : {}, D);
    return _.width === void 0 ? null : /* @__PURE__ */ z(r, C({}, _));
  }
  return process.env.NODE_ENV !== "production" && (v.propTypes = {
    /**
     * As `window.innerWidth` is unavailable on the server,
     * we default to rendering an empty component during the first mount.
     * You might want to use a heuristic to approximate
     * the screen width of the client browser screen width.
     *
     * For instance, you could be using the user-agent or the client-hints.
     * https://caniuse.com/#search=client%20hint
     */
    initialWidth: n.oneOf(["xs", "sm", "md", "lg", "xl"]),
    /**
     * @ignore
     */
    theme: n.object,
    /**
     * Bypass the width calculation logic.
     */
    width: n.oneOf(["xs", "sm", "md", "lg", "xl"])
  }), process.env.NODE_ENV !== "production" && (v.displayName = `WithWidth(${u1(r)})`), v;
}, V9 = U9;
function x0(e) {
  const {
    children: r,
    only: s,
    width: u
  } = e, f = to();
  let v = !0;
  if (s)
    if (Array.isArray(s))
      for (let m = 0; m < s.length; m += 1) {
        const y = s[m];
        if (u === y) {
          v = !1;
          break;
        }
      }
    else
      s && u === s && (v = !1);
  if (v)
    for (let m = 0; m < f.breakpoints.keys.length; m += 1) {
      const y = f.breakpoints.keys[m], b = e[`${y}Up`], S = e[`${y}Down`];
      if (b && F9(y, u) || S && j9(y, u)) {
        v = !1;
        break;
      }
    }
  return v ? /* @__PURE__ */ z(O.Fragment, {
    children: r
  }) : null;
}
process.env.NODE_ENV !== "production" && (x0.propTypes = {
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  lgDown: n.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  lgUp: n.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  mdDown: n.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  mdUp: n.bool,
  /**
   * Hide the given breakpoint(s).
   */
  only: n.oneOfType([n.oneOf(["xs", "sm", "md", "lg", "xl"]), n.arrayOf(n.oneOf(["xs", "sm", "md", "lg", "xl"]))]),
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  smDown: n.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  smUp: n.bool,
  /**
   * @ignore
   * width prop provided by withWidth decorator.
   */
  width: n.string.isRequired,
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  xlDown: n.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  xlUp: n.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  xsDown: n.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  xsUp: n.bool
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (x0.propTypes = cd(x0.propTypes));
const H9 = V9()(x0);
function W9(e) {
  return je("PrivateHiddenCss", e);
}
He("PrivateHiddenCss", ["root", "xlDown", "xlUp", "onlyXl", "lgDown", "lgUp", "onlyLg", "mdDown", "mdUp", "onlyMd", "smDown", "smUp", "onlySm", "xsDown", "xsUp", "onlyXs"]);
const G9 = ["children", "className", "only"], q9 = (e) => {
  const {
    classes: r,
    breakpoints: s
  } = e, u = {
    root: ["root", ...s.map(({
      breakpoint: f,
      dir: v
    }) => v === "only" ? `${v}${oe(f)}` : `${f}${oe(v)}`)]
  };
  return Ue(u, W9, r);
}, Y9 = Z("div", {
  name: "PrivateHiddenCss",
  slot: "Root"
})(({
  theme: e,
  ownerState: r
}) => {
  const s = {
    display: "none"
  };
  return C({}, r.breakpoints.map(({
    breakpoint: u,
    dir: f
  }) => f === "only" ? {
    [e.breakpoints.only(u)]: s
  } : f === "up" ? {
    [e.breakpoints.up(u)]: s
  } : {
    [e.breakpoints.down(u)]: s
  }).reduce((u, f) => (Object.keys(f).forEach((v) => {
    u[v] = f[v];
  }), u), {}));
});
function fD(e) {
  const {
    children: r,
    className: s,
    only: u
  } = e, f = me(e, G9), v = to();
  if (process.env.NODE_ENV !== "production") {
    const S = Object.keys(f).filter((E) => {
      const k = !v.breakpoints.keys.some((D) => `${D}Up` === E || `${D}Down` === E);
      return !["classes", "theme", "isRtl", "sx"].includes(E) && k;
    });
    S.length > 0 && console.error(`MUI: Unsupported props received by \`<Hidden implementation="css" />\`: ${S.join(", ")}. Did you forget to wrap this component in a ThemeProvider declaring these breakpoints?`);
  }
  const m = [];
  for (let S = 0; S < v.breakpoints.keys.length; S += 1) {
    const E = v.breakpoints.keys[S], k = f[`${E}Up`], D = f[`${E}Down`];
    k && m.push({
      breakpoint: E,
      dir: "up"
    }), D && m.push({
      breakpoint: E,
      dir: "down"
    });
  }
  u && (Array.isArray(u) ? u : [u]).forEach((E) => {
    m.push({
      breakpoint: E,
      dir: "only"
    });
  });
  const y = C({}, e, {
    breakpoints: m
  }), b = q9(y);
  return /* @__PURE__ */ z(Y9, {
    className: pe(b.root, s),
    ownerState: y,
    children: r
  });
}
process.env.NODE_ENV !== "production" && (fD.propTypes = {
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * Specify which implementation to use.  'js' is the default, 'css' works better for
   * server-side rendering.
   */
  implementation: n.oneOf(["js", "css"]),
  /**
   * If `true`, screens this size and down are hidden.
   */
  lgDown: n.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  lgUp: n.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  mdDown: n.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  mdUp: n.bool,
  /**
   * Hide the given breakpoint(s).
   */
  only: n.oneOfType([n.oneOf(["xs", "sm", "md", "lg", "xl"]), n.arrayOf(n.oneOf(["xs", "sm", "md", "lg", "xl"]))]),
  /**
   * If `true`, screens this size and down are hidden.
   */
  smDown: n.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  smUp: n.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  xlDown: n.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  xlUp: n.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  xsDown: n.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  xsUp: n.bool
});
const K9 = ["implementation", "lgDown", "lgUp", "mdDown", "mdUp", "smDown", "smUp", "xlDown", "xlUp", "xsDown", "xsUp"];
function X9(e) {
  const {
    implementation: r = "js",
    lgDown: s = !1,
    lgUp: u = !1,
    mdDown: f = !1,
    mdUp: v = !1,
    smDown: m = !1,
    smUp: y = !1,
    xlDown: b = !1,
    xlUp: S = !1,
    xsDown: E = !1,
    xsUp: k = !1
  } = e, D = me(e, K9);
  return r === "js" ? /* @__PURE__ */ z(H9, C({
    lgDown: s,
    lgUp: u,
    mdDown: f,
    mdUp: v,
    smDown: m,
    smUp: y,
    xlDown: b,
    xlUp: S,
    xsDown: E,
    xsUp: k
  }, D)) : /* @__PURE__ */ z(fD, C({
    lgDown: s,
    lgUp: u,
    mdDown: f,
    mdUp: v,
    smDown: m,
    smUp: y,
    xlDown: b,
    xlUp: S,
    xsDown: E,
    xsUp: k
  }, D));
}
process.env.NODE_ENV !== "production" && (X9.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Specify which implementation to use.  'js' is the default, 'css' works better for
   * server-side rendering.
   * @default 'js'
   */
  implementation: n.oneOf(["css", "js"]),
  /**
   * You can use this prop when choosing the `js` implementation with server-side rendering.
   *
   * As `window.innerWidth` is unavailable on the server,
   * we default to rendering an empty component during the first mount.
   * You might want to use a heuristic to approximate
   * the screen width of the client browser screen width.
   *
   * For instance, you could be using the user-agent or the client-hints.
   * https://caniuse.com/#search=client%20hint
   */
  initialWidth: n.oneOf(["xs", "sm", "md", "lg", "xl"]),
  /**
   * If `true`, component is hidden on screens below (but not including) this size.
   * @default false
   */
  lgDown: n.bool,
  /**
   * If `true`, component is hidden on screens this size and above.
   * @default false
   */
  lgUp: n.bool,
  /**
   * If `true`, component is hidden on screens below (but not including) this size.
   * @default false
   */
  mdDown: n.bool,
  /**
   * If `true`, component is hidden on screens this size and above.
   * @default false
   */
  mdUp: n.bool,
  /**
   * Hide the given breakpoint(s).
   */
  only: n.oneOfType([n.oneOf(["xs", "sm", "md", "lg", "xl"]), n.arrayOf(n.oneOf(["xs", "sm", "md", "lg", "xl"]).isRequired)]),
  /**
   * If `true`, component is hidden on screens below (but not including) this size.
   * @default false
   */
  smDown: n.bool,
  /**
   * If `true`, component is hidden on screens this size and above.
   * @default false
   */
  smUp: n.bool,
  /**
   * If `true`, component is hidden on screens below (but not including) this size.
   * @default false
   */
  xlDown: n.bool,
  /**
   * If `true`, component is hidden on screens this size and above.
   * @default false
   */
  xlUp: n.bool,
  /**
   * If `true`, component is hidden on screens below (but not including) this size.
   * @default false
   */
  xsDown: n.bool,
  /**
   * If `true`, component is hidden on screens this size and above.
   * @default false
   */
  xsUp: n.bool
});
function Q9(e) {
  return je("MuiIcon", e);
}
const Z9 = He("MuiIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]), Yee = Z9, J9 = ["baseClassName", "className", "color", "component", "fontSize"], e7 = (e) => {
  const {
    color: r,
    fontSize: s,
    classes: u
  } = e, f = {
    root: ["root", r !== "inherit" && `color${oe(r)}`, `fontSize${oe(s)}`]
  };
  return Ue(f, Q9, u);
}, t7 = Z("span", {
  name: "MuiIcon",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.color !== "inherit" && r[`color${oe(s.color)}`], r[`fontSize${oe(s.fontSize)}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => ({
  userSelect: "none",
  width: "1em",
  height: "1em",
  // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541
  // To remove at some point.
  overflow: "hidden",
  display: "inline-block",
  // allow overflow hidden to take action
  textAlign: "center",
  // support non-square icon
  flexShrink: 0,
  fontSize: {
    inherit: "inherit",
    small: e.typography.pxToRem(20),
    medium: e.typography.pxToRem(24),
    large: e.typography.pxToRem(36)
  }[r.fontSize],
  // TODO v5 deprecate, v6 remove for sx
  color: {
    primary: (e.vars || e).palette.primary.main,
    secondary: (e.vars || e).palette.secondary.main,
    info: (e.vars || e).palette.info.main,
    success: (e.vars || e).palette.success.main,
    warning: (e.vars || e).palette.warning.main,
    action: (e.vars || e).palette.action.active,
    error: (e.vars || e).palette.error.main,
    disabled: (e.vars || e).palette.action.disabled,
    inherit: void 0
  }[r.color]
})), V1 = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiIcon"
  }), {
    baseClassName: f = "material-icons",
    className: v,
    color: m = "inherit",
    component: y = "span",
    fontSize: b = "medium"
  } = u, S = me(u, J9), E = C({}, u, {
    baseClassName: f,
    color: m,
    component: y,
    fontSize: b
  }), k = e7(E);
  return /* @__PURE__ */ z(t7, C({
    as: y,
    className: pe(
      f,
      // Prevent the translation of the text content.
      // The font relies on the exact text content to render the icon.
      "notranslate",
      k.root,
      v
    ),
    ownerState: E,
    "aria-hidden": !0,
    ref: s
  }, S));
});
process.env.NODE_ENV !== "production" && (V1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The base class applied to the icon. Defaults to 'material-icons', but can be changed to any
   * other base class that suits the icon font you're using (e.g. material-icons-rounded, fas, etc).
   * @default 'material-icons'
   */
  baseClassName: n.string,
  /**
   * The name of the icon font ligature.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'inherit'
   */
  color: n.oneOfType([n.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), n.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: n.oneOfType([n.oneOf(["inherit", "large", "medium", "small"]), n.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
V1.muiName = "Icon";
const Kee = V1;
function n7(e) {
  return je("MuiImageList", e);
}
const o7 = He("MuiImageList", ["root", "masonry", "quilted", "standard", "woven"]), Xee = o7, mD = /* @__PURE__ */ O.createContext({});
process.env.NODE_ENV !== "production" && (mD.displayName = "ImageListContext");
const vD = mD, r7 = ["children", "className", "cols", "component", "rowHeight", "gap", "style", "variant"], a7 = (e) => {
  const {
    classes: r,
    variant: s
  } = e;
  return Ue({
    root: ["root", s]
  }, n7, r);
}, i7 = Z("ul", {
  name: "MuiImageList",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[s.variant]];
  }
})(({
  ownerState: e
}) => C({
  display: "grid",
  overflowY: "auto",
  listStyle: "none",
  padding: 0,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
}, e.variant === "masonry" && {
  display: "block"
})), hD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiImageList"
  }), {
    children: f,
    className: v,
    cols: m = 2,
    component: y = "ul",
    rowHeight: b = "auto",
    gap: S = 4,
    style: E,
    variant: k = "standard"
  } = u, D = me(u, r7), M = O.useMemo(() => ({
    rowHeight: b,
    gap: S,
    variant: k
  }), [b, S, k]);
  O.useEffect(() => {
    process.env.NODE_ENV !== "production" && document !== void 0 && !("objectFit" in document.documentElement.style) && console.error(["MUI: ImageList v5+ no longer natively supports Internet Explorer.", "Use v4 of this component instead, or polyfill CSS object-fit."].join(`
`));
  }, []);
  const P = k === "masonry" ? C({
    columnCount: m,
    columnGap: S
  }, E) : C({
    gridTemplateColumns: `repeat(${m}, 1fr)`,
    gap: S
  }, E), L = C({}, u, {
    component: y,
    gap: S,
    rowHeight: b,
    variant: k
  }), w = a7(L);
  return /* @__PURE__ */ z(i7, C({
    as: y,
    className: pe(w.root, w[k], v),
    ref: s,
    style: P,
    ownerState: L
  }, D, {
    children: /* @__PURE__ */ z(vD.Provider, {
      value: M,
      children: f
    })
  }));
});
process.env.NODE_ENV !== "production" && (hD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `ImageListItem`s.
   */
  children: n.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * Number of columns.
   * @default 2
   */
  cols: Co,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * The gap between items in px.
   * @default 4
   */
  gap: n.number,
  /**
   * The height of one row in px.
   * @default 'auto'
   */
  rowHeight: n.oneOfType([n.oneOf(["auto"]), n.number]),
  /**
   * @ignore
   */
  style: n.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: n.oneOfType([n.oneOf(["masonry", "quilted", "standard", "woven"]), n.string])
});
const Qee = hD;
function s7(e) {
  return je("MuiImageListItem", e);
}
const l7 = He("MuiImageListItem", ["root", "img", "standard", "woven", "masonry", "quilted"]), Jk = l7, c7 = ["children", "className", "cols", "component", "rows", "style"], u7 = (e) => {
  const {
    classes: r,
    variant: s
  } = e;
  return Ue({
    root: ["root", s],
    img: ["img"]
  }, s7, r);
}, d7 = Z("li", {
  name: "MuiImageListItem",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [{
      [`& .${Jk.img}`]: r.img
    }, r.root, r[s.variant]];
  }
})(({
  ownerState: e
}) => C({
  display: "block",
  position: "relative"
}, e.variant === "standard" && {
  // For titlebar under list item
  display: "flex",
  flexDirection: "column"
}, e.variant === "woven" && {
  height: "100%",
  alignSelf: "center",
  "&:nth-of-type(even)": {
    height: "70%"
  }
}, {
  [`& .${Jk.img}`]: C({
    objectFit: "cover",
    width: "100%",
    height: "100%",
    display: "block"
  }, e.variant === "standard" && {
    height: "auto",
    flexGrow: 1
  })
})), gD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiImageListItem"
  }), {
    children: f,
    className: v,
    cols: m = 1,
    component: y = "li",
    rows: b = 1,
    style: S
  } = u, E = me(u, c7), {
    rowHeight: k = "auto",
    gap: D,
    variant: M
  } = O.useContext(vD);
  let P = "auto";
  M === "woven" ? P = void 0 : k !== "auto" && (P = k * b + D * (b - 1));
  const L = C({}, u, {
    cols: m,
    component: y,
    gap: D,
    rowHeight: k,
    rows: b,
    variant: M
  }), w = u7(L);
  return /* @__PURE__ */ z(d7, C({
    as: y,
    className: pe(w.root, w[M], v),
    ref: s,
    style: C({
      height: P,
      gridColumnEnd: M !== "masonry" ? `span ${m}` : void 0,
      gridRowEnd: M !== "masonry" ? `span ${b}` : void 0,
      marginBottom: M === "masonry" ? D : void 0,
      breakInside: M === "masonry" ? "avoid" : void 0
    }, S),
    ownerState: L
  }, E, {
    children: O.Children.map(f, (_) => /* @__PURE__ */ O.isValidElement(_) ? (process.env.NODE_ENV !== "production" && Hi.isFragment(_) && console.error(["MUI: The ImageListItem component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), _.type === "img" || Rl(_, ["Image"]) ? /* @__PURE__ */ O.cloneElement(_, {
      className: pe(w.img, _.props.className)
    }) : _) : null)
  }));
});
process.env.NODE_ENV !== "production" && (gD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally an `<img>`.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * Width of the item in number of grid columns.
   * @default 1
   */
  cols: Co,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * Height of the item in number of grid rows.
   * @default 1
   */
  rows: Co,
  /**
   * @ignore
   */
  style: n.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const Zee = gD;
function p7(e) {
  return je("MuiImageListItemBar", e);
}
const f7 = He("MuiImageListItemBar", ["root", "positionBottom", "positionTop", "positionBelow", "titleWrap", "titleWrapBottom", "titleWrapTop", "titleWrapBelow", "titleWrapActionPosLeft", "titleWrapActionPosRight", "title", "subtitle", "actionIcon", "actionIconActionPosLeft", "actionIconActionPosRight"]), Jee = f7, m7 = ["actionIcon", "actionPosition", "className", "subtitle", "title", "position"], v7 = (e) => {
  const {
    classes: r,
    position: s,
    actionIcon: u,
    actionPosition: f
  } = e, v = {
    root: ["root", `position${oe(s)}`],
    titleWrap: ["titleWrap", `titleWrap${oe(s)}`, u && `titleWrapActionPos${oe(f)}`],
    title: ["title"],
    subtitle: ["subtitle"],
    actionIcon: ["actionIcon", `actionIconActionPos${oe(f)}`]
  };
  return Ue(v, p7, r);
}, h7 = Z("div", {
  name: "MuiImageListItemBar",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[`position${oe(s.position)}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  position: "absolute",
  left: 0,
  right: 0,
  background: "rgba(0, 0, 0, 0.5)",
  display: "flex",
  alignItems: "center",
  fontFamily: e.typography.fontFamily
}, r.position === "bottom" && {
  bottom: 0
}, r.position === "top" && {
  top: 0
}, r.position === "below" && {
  position: "relative",
  background: "transparent",
  alignItems: "normal"
})), g7 = Z("div", {
  name: "MuiImageListItemBar",
  slot: "TitleWrap",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.titleWrap, r[`titleWrap${oe(s.position)}`], s.actionIcon && r[`titleWrapActionPos${oe(s.actionPosition)}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  flexGrow: 1,
  padding: "12px 16px",
  color: (e.vars || e).palette.common.white,
  overflow: "hidden"
}, r.position === "below" && {
  padding: "6px 0 12px",
  color: "inherit"
}, r.actionIcon && r.actionPosition === "left" && {
  paddingLeft: 0
}, r.actionIcon && r.actionPosition === "right" && {
  paddingRight: 0
})), y7 = Z("div", {
  name: "MuiImageListItemBar",
  slot: "Title",
  overridesResolver: (e, r) => r.title
})(({
  theme: e
}) => ({
  fontSize: e.typography.pxToRem(16),
  lineHeight: "24px",
  textOverflow: "ellipsis",
  overflow: "hidden",
  whiteSpace: "nowrap"
})), b7 = Z("div", {
  name: "MuiImageListItemBar",
  slot: "Subtitle",
  overridesResolver: (e, r) => r.subtitle
})(({
  theme: e
}) => ({
  fontSize: e.typography.pxToRem(12),
  lineHeight: 1,
  textOverflow: "ellipsis",
  overflow: "hidden",
  whiteSpace: "nowrap"
})), C7 = Z("div", {
  name: "MuiImageListItemBar",
  slot: "ActionIcon",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.actionIcon, r[`actionIconActionPos${oe(s.actionPosition)}`]];
  }
})(({
  ownerState: e
}) => C({}, e.actionPosition === "left" && {
  order: -1
})), yD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiImageListItemBar"
  }), {
    actionIcon: f,
    actionPosition: v = "right",
    className: m,
    subtitle: y,
    title: b,
    position: S = "bottom"
  } = u, E = me(u, m7), k = C({}, u, {
    position: S,
    actionPosition: v
  }), D = v7(k);
  return /* @__PURE__ */ gt(h7, C({
    ownerState: k,
    className: pe(D.root, m),
    ref: s
  }, E, {
    children: [/* @__PURE__ */ gt(g7, {
      ownerState: k,
      className: D.titleWrap,
      children: [/* @__PURE__ */ z(y7, {
        className: D.title,
        children: b
      }), y ? /* @__PURE__ */ z(b7, {
        className: D.subtitle,
        children: y
      }) : null]
    }), f ? /* @__PURE__ */ z(C7, {
      ownerState: k,
      className: D.actionIcon,
      children: f
    }) : null]
  }));
});
process.env.NODE_ENV !== "production" && (yD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An IconButton element to be used as secondary action target
   * (primary action target is the item itself).
   */
  actionIcon: n.node,
  /**
   * Position of secondary action IconButton.
   * @default 'right'
   */
  actionPosition: n.oneOf(["left", "right"]),
  /**
   * @ignore
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * Position of the title bar.
   * @default 'bottom'
   */
  position: n.oneOf(["below", "bottom", "top"]),
  /**
   * String or element serving as subtitle (support text).
   */
  subtitle: n.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * Title to be displayed.
   */
  title: n.node
});
const ete = yD, x7 = ["disableUnderline", "components", "componentsProps", "fullWidth", "inputComponent", "multiline", "slotProps", "slots", "type"], S7 = (e) => {
  const {
    classes: r,
    disableUnderline: s
  } = e, f = Ue({
    root: ["root", !s && "underline"],
    input: ["input"]
  }, zH, r);
  return C({}, r, f);
}, T7 = Z(z0, {
  shouldForwardProp: (e) => ko(e) || e === "classes",
  name: "MuiInput",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [...A0(e, r), !s.disableUnderline && r.underline];
  }
})(({
  theme: e,
  ownerState: r
}) => {
  let u = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return e.vars && (u = `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`), C({
    position: "relative"
  }, r.formControl && {
    "label + &": {
      marginTop: 16
    }
  }, !r.disableUnderline && {
    "&::after": {
      borderBottom: `2px solid ${(e.vars || e).palette[r.color].main}`,
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '""',
      position: "absolute",
      right: 0,
      transform: "scaleX(0)",
      transition: e.transitions.create("transform", {
        duration: e.transitions.duration.shorter,
        easing: e.transitions.easing.easeOut
      }),
      pointerEvents: "none"
      // Transparent to the hover style.
    },
    [`&.${Ic.focused}:after`]: {
      // translateX(0) is a workaround for Safari transform scale bug
      // See https://github.com/mui/material-ui/issues/31766
      transform: "scaleX(1) translateX(0)"
    },
    [`&.${Ic.error}`]: {
      "&::before, &::after": {
        borderBottomColor: (e.vars || e).palette.error.main
      }
    },
    "&::before": {
      borderBottom: `1px solid ${u}`,
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '"\\00a0"',
      position: "absolute",
      right: 0,
      transition: e.transitions.create("border-bottom-color", {
        duration: e.transitions.duration.shorter
      }),
      pointerEvents: "none"
      // Transparent to the hover style.
    },
    [`&:hover:not(.${Ic.disabled}, .${Ic.error}):before`]: {
      borderBottom: `2px solid ${(e.vars || e).palette.text.primary}`,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        borderBottom: `1px solid ${u}`
      }
    },
    [`&.${Ic.disabled}:before`]: {
      borderBottomStyle: "dotted"
    }
  });
}), E7 = Z(F0, {
  name: "MuiInput",
  slot: "Input",
  overridesResolver: B0
})({}), H1 = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u, f, v, m;
  const y = Ve({
    props: r,
    name: "MuiInput"
  }), {
    disableUnderline: b,
    components: S = {},
    componentsProps: E,
    fullWidth: k = !1,
    inputComponent: D = "input",
    multiline: M = !1,
    slotProps: P,
    slots: L = {},
    type: w = "text"
  } = y, _ = me(y, x7), V = S7(y), j = {
    root: {
      ownerState: {
        disableUnderline: b
      }
    }
  }, U = P ?? E ? ji(P ?? E, j) : j, $ = (u = (f = L.root) != null ? f : S.Root) != null ? u : T7, F = (v = (m = L.input) != null ? m : S.Input) != null ? v : E7;
  return /* @__PURE__ */ z(j0, C({
    slots: {
      root: $,
      input: F
    },
    slotProps: U,
    fullWidth: k,
    inputComponent: D,
    multiline: M,
    ref: s,
    type: w
  }, _, {
    classes: V
  }));
});
process.env.NODE_ENV !== "production" && (H1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: n.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: n.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: n.oneOfType([n.oneOf(["primary", "secondary"]), n.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: n.shape({
    Input: n.elementType,
    Root: n.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: n.shape({
    input: n.object,
    root: n.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: n.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: n.bool,
  /**
   * If `true`, the `input` will not have an underline.
   */
  disableUnderline: n.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: n.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: n.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: n.bool,
  /**
   * The id of the `input` element.
   */
  id: n.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: n.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: n.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Tr,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: n.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: n.oneOfType([n.number, n.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: n.oneOfType([n.number, n.string]),
  /**
   * If `true`, a [TextareaAutosize](/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: n.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: n.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: n.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: n.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: n.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: n.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: n.oneOfType([n.number, n.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: n.shape({
    input: n.object,
    root: n.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: n.shape({
    input: n.elementType,
    root: n.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: n.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: n.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: n.any
});
H1.muiName = "Input";
const W1 = H1;
function R7(e) {
  return je("MuiInputAdornment", e);
}
const O7 = He("MuiInputAdornment", ["root", "filled", "standard", "outlined", "positionStart", "positionEnd", "disablePointerEvents", "hiddenLabel", "sizeSmall"]), eN = O7;
var tN;
const w7 = ["children", "className", "component", "disablePointerEvents", "disableTypography", "position", "variant"], k7 = (e, r) => {
  const {
    ownerState: s
  } = e;
  return [r.root, r[`position${oe(s.position)}`], s.disablePointerEvents === !0 && r.disablePointerEvents, r[s.variant]];
}, N7 = (e) => {
  const {
    classes: r,
    disablePointerEvents: s,
    hiddenLabel: u,
    position: f,
    size: v,
    variant: m
  } = e, y = {
    root: ["root", s && "disablePointerEvents", f && `position${oe(f)}`, m, u && "hiddenLabel", v && `size${oe(v)}`]
  };
  return Ue(y, R7, r);
}, $7 = Z("div", {
  name: "MuiInputAdornment",
  slot: "Root",
  overridesResolver: k7
})(({
  theme: e,
  ownerState: r
}) => C({
  display: "flex",
  height: "0.01em",
  // Fix IE11 flexbox alignment. To remove at some point.
  maxHeight: "2em",
  alignItems: "center",
  whiteSpace: "nowrap",
  color: (e.vars || e).palette.action.active
}, r.variant === "filled" && {
  // Styles applied to the root element if `variant="filled"`.
  [`&.${eN.positionStart}&:not(.${eN.hiddenLabel})`]: {
    marginTop: 16
  }
}, r.position === "start" && {
  // Styles applied to the root element if `position="start"`.
  marginRight: 8
}, r.position === "end" && {
  // Styles applied to the root element if `position="end"`.
  marginLeft: 8
}, r.disablePointerEvents === !0 && {
  // Styles applied to the root element if `disablePointerEvents={true}`.
  pointerEvents: "none"
})), bD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiInputAdornment"
  }), {
    children: f,
    className: v,
    component: m = "div",
    disablePointerEvents: y = !1,
    disableTypography: b = !1,
    position: S,
    variant: E
  } = u, k = me(u, w7), D = Wi() || {};
  let M = E;
  E && D.variant && process.env.NODE_ENV !== "production" && E === D.variant && console.error("MUI: The `InputAdornment` variant infers the variant prop you do not have to provide one."), D && !M && (M = D.variant);
  const P = C({}, u, {
    hiddenLabel: D.hiddenLabel,
    size: D.size,
    disablePointerEvents: y,
    position: S,
    variant: M
  }), L = N7(P);
  return /* @__PURE__ */ z(_0.Provider, {
    value: null,
    children: /* @__PURE__ */ z($7, C({
      as: m,
      ownerState: P,
      className: pe(L.root, v),
      ref: s
    }, k, {
      children: typeof f == "string" && !b ? /* @__PURE__ */ z(zr, {
        color: "text.secondary",
        children: f
      }) : /* @__PURE__ */ gt(O.Fragment, {
        children: [S === "start" ? (
          /* notranslate needed while Google Translate will not fix zero-width space issue */
          tN || (tN = /* @__PURE__ */ z("span", {
            className: "notranslate",
            children: "​"
          }))
        ) : null, f]
      })
    }))
  });
});
process.env.NODE_ENV !== "production" && (bD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally an `IconButton` or string.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * Disable pointer events on the root.
   * This allows for the content of the adornment to focus the `input` on click.
   * @default false
   */
  disablePointerEvents: n.bool,
  /**
   * If children is a string then disable wrapping in a Typography component.
   * @default false
   */
  disableTypography: n.bool,
  /**
   * The position this adornment should appear relative to the `Input`.
   */
  position: n.oneOf(["end", "start"]).isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The variant to use.
   * Note: If you are using the `TextField` component or the `FormControl` component
   * you do not have to set this manually.
   */
  variant: n.oneOf(["filled", "outlined", "standard"])
});
const tte = bD;
function M7(e) {
  return je("MuiInputLabel", e);
}
const D7 = He("MuiInputLabel", ["root", "focused", "disabled", "error", "required", "asterisk", "formControl", "sizeSmall", "shrink", "animated", "standard", "filled", "outlined"]), nte = D7, P7 = ["disableAnimation", "margin", "shrink", "variant", "className"], L7 = (e) => {
  const {
    classes: r,
    formControl: s,
    size: u,
    shrink: f,
    disableAnimation: v,
    variant: m,
    required: y
  } = e, b = {
    root: ["root", s && "formControl", !v && "animated", f && "shrink", u && u !== "normal" && `size${oe(u)}`, m],
    asterisk: [y && "asterisk"]
  }, S = Ue(b, M7, r);
  return C({}, r, S);
}, I7 = Z(y9, {
  shouldForwardProp: (e) => ko(e) || e === "classes",
  name: "MuiInputLabel",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [{
      [`& .${nh.asterisk}`]: r.asterisk
    }, r.root, s.formControl && r.formControl, s.size === "small" && r.sizeSmall, s.shrink && r.shrink, !s.disableAnimation && r.animated, s.focused && r.focused, r[s.variant]];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  display: "block",
  transformOrigin: "top left",
  whiteSpace: "nowrap",
  overflow: "hidden",
  textOverflow: "ellipsis",
  maxWidth: "100%"
}, r.formControl && {
  position: "absolute",
  left: 0,
  top: 0,
  // slight alteration to spec spacing to match visual spec result
  transform: "translate(0, 20px) scale(1)"
}, r.size === "small" && {
  // Compensation for the `Input.inputSizeSmall` style.
  transform: "translate(0, 17px) scale(1)"
}, r.shrink && {
  transform: "translate(0, -1.5px) scale(0.75)",
  transformOrigin: "top left",
  maxWidth: "133%"
}, !r.disableAnimation && {
  transition: e.transitions.create(["color", "transform", "max-width"], {
    duration: e.transitions.duration.shorter,
    easing: e.transitions.easing.easeOut
  })
}, r.variant === "filled" && C({
  // Chrome's autofill feature gives the input field a yellow background.
  // Since the input field is behind the label in the HTML tree,
  // the input field is drawn last and hides the label with an opaque background color.
  // zIndex: 1 will raise the label above opaque background-colors of input.
  zIndex: 1,
  pointerEvents: "none",
  transform: "translate(12px, 16px) scale(1)",
  maxWidth: "calc(100% - 24px)"
}, r.size === "small" && {
  transform: "translate(12px, 13px) scale(1)"
}, r.shrink && C({
  userSelect: "none",
  pointerEvents: "auto",
  transform: "translate(12px, 7px) scale(0.75)",
  maxWidth: "calc(133% - 24px)"
}, r.size === "small" && {
  transform: "translate(12px, 4px) scale(0.75)"
})), r.variant === "outlined" && C({
  // see comment above on filled.zIndex
  zIndex: 1,
  pointerEvents: "none",
  transform: "translate(14px, 16px) scale(1)",
  maxWidth: "calc(100% - 24px)"
}, r.size === "small" && {
  transform: "translate(14px, 9px) scale(1)"
}, r.shrink && {
  userSelect: "none",
  pointerEvents: "auto",
  // Theoretically, we should have (8+5)*2/0.75 = 34px
  // but it feels a better when it bleeds a bit on the left, so 32px.
  maxWidth: "calc(133% - 32px)",
  transform: "translate(14px, -9px) scale(0.75)"
}))), CD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    name: "MuiInputLabel",
    props: r
  }), {
    disableAnimation: f = !1,
    shrink: v,
    className: m
  } = u, y = me(u, P7), b = Wi();
  let S = v;
  typeof S > "u" && b && (S = b.filled || b.focused || b.adornedStart);
  const E = $l({
    props: u,
    muiFormControl: b,
    states: ["size", "variant", "required", "focused"]
  }), k = C({}, u, {
    disableAnimation: f,
    formControl: b,
    shrink: S,
    size: E.size,
    variant: E.variant,
    required: E.required,
    focused: E.focused
  }), D = L7(k);
  return /* @__PURE__ */ z(I7, C({
    "data-shrink": S,
    ownerState: k,
    ref: s,
    className: pe(D.root, m)
  }, y, {
    classes: D
  }));
});
process.env.NODE_ENV !== "production" && (CD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: n.oneOfType([n.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), n.string]),
  /**
   * If `true`, the transition animation is disabled.
   * @default false
   */
  disableAnimation: n.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: n.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: n.bool,
  /**
   * If `true`, the `input` of this label is focused.
   */
  focused: n.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: n.oneOf(["dense"]),
  /**
   * if `true`, the label will indicate that the `input` is required.
   */
  required: n.bool,
  /**
   * If `true`, the label is shrunk.
   */
  shrink: n.bool,
  /**
   * The size of the component.
   * @default 'normal'
   */
  size: n.oneOfType([n.oneOf(["normal", "small"]), n.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The variant to use.
   */
  variant: n.oneOf(["filled", "outlined", "standard"])
});
const _7 = CD;
function A7(e) {
  return je("MuiLinearProgress", e);
}
const B7 = He("MuiLinearProgress", ["root", "colorPrimary", "colorSecondary", "determinate", "indeterminate", "buffer", "query", "dashed", "dashedColorPrimary", "dashedColorSecondary", "bar", "barColorPrimary", "barColorSecondary", "bar1Indeterminate", "bar1Determinate", "bar1Buffer", "bar2Indeterminate", "bar2Buffer"]), ote = B7, z7 = ["className", "color", "value", "valueBuffer", "variant"];
let Cf = (e) => e, nN, oN, rN, aN, iN, sN;
const a1 = 4, F7 = Vi(nN || (nN = Cf`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`)), j7 = Vi(oN || (oN = Cf`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`)), U7 = Vi(rN || (rN = Cf`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`)), V7 = (e) => {
  const {
    classes: r,
    variant: s,
    color: u
  } = e, f = {
    root: ["root", `color${oe(u)}`, s],
    dashed: ["dashed", `dashedColor${oe(u)}`],
    bar1: ["bar", `barColor${oe(u)}`, (s === "indeterminate" || s === "query") && "bar1Indeterminate", s === "determinate" && "bar1Determinate", s === "buffer" && "bar1Buffer"],
    bar2: ["bar", s !== "buffer" && `barColor${oe(u)}`, s === "buffer" && `color${oe(u)}`, (s === "indeterminate" || s === "query") && "bar2Indeterminate", s === "buffer" && "bar2Buffer"]
  };
  return Ue(f, A7, r);
}, G1 = (e, r) => r === "inherit" ? "currentColor" : e.vars ? e.vars.palette.LinearProgress[`${r}Bg`] : e.palette.mode === "light" ? O0(e.palette[r].main, 0.62) : w0(e.palette[r].main, 0.5), H7 = Z("span", {
  name: "MuiLinearProgress",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[`color${oe(s.color)}`], r[s.variant]];
  }
})(({
  ownerState: e,
  theme: r
}) => C({
  position: "relative",
  overflow: "hidden",
  display: "block",
  height: 4,
  zIndex: 0,
  // Fix Safari's bug during composition of different paint.
  "@media print": {
    colorAdjust: "exact"
  },
  backgroundColor: G1(r, e.color)
}, e.color === "inherit" && e.variant !== "buffer" && {
  backgroundColor: "none",
  "&::before": {
    content: '""',
    position: "absolute",
    left: 0,
    top: 0,
    right: 0,
    bottom: 0,
    backgroundColor: "currentColor",
    opacity: 0.3
  }
}, e.variant === "buffer" && {
  backgroundColor: "transparent"
}, e.variant === "query" && {
  transform: "rotate(180deg)"
})), W7 = Z("span", {
  name: "MuiLinearProgress",
  slot: "Dashed",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.dashed, r[`dashedColor${oe(s.color)}`]];
  }
})(({
  ownerState: e,
  theme: r
}) => {
  const s = G1(r, e.color);
  return C({
    position: "absolute",
    marginTop: 0,
    height: "100%",
    width: "100%"
  }, e.color === "inherit" && {
    opacity: 0.3
  }, {
    backgroundImage: `radial-gradient(${s} 0%, ${s} 16%, transparent 42%)`,
    backgroundSize: "10px 10px",
    backgroundPosition: "0 -23px"
  });
}, Fc(aN || (aN = Cf`
    animation: ${0} 3s infinite linear;
  `), U7)), G7 = Z("span", {
  name: "MuiLinearProgress",
  slot: "Bar1",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.bar, r[`barColor${oe(s.color)}`], (s.variant === "indeterminate" || s.variant === "query") && r.bar1Indeterminate, s.variant === "determinate" && r.bar1Determinate, s.variant === "buffer" && r.bar1Buffer];
  }
})(({
  ownerState: e,
  theme: r
}) => C({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  backgroundColor: e.color === "inherit" ? "currentColor" : (r.vars || r).palette[e.color].main
}, e.variant === "determinate" && {
  transition: `transform .${a1}s linear`
}, e.variant === "buffer" && {
  zIndex: 1,
  transition: `transform .${a1}s linear`
}), ({
  ownerState: e
}) => (e.variant === "indeterminate" || e.variant === "query") && Fc(iN || (iN = Cf`
      width: auto;
      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
    `), F7)), q7 = Z("span", {
  name: "MuiLinearProgress",
  slot: "Bar2",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.bar, r[`barColor${oe(s.color)}`], (s.variant === "indeterminate" || s.variant === "query") && r.bar2Indeterminate, s.variant === "buffer" && r.bar2Buffer];
  }
})(({
  ownerState: e,
  theme: r
}) => C({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left"
}, e.variant !== "buffer" && {
  backgroundColor: e.color === "inherit" ? "currentColor" : (r.vars || r).palette[e.color].main
}, e.color === "inherit" && {
  opacity: 0.3
}, e.variant === "buffer" && {
  backgroundColor: G1(r, e.color),
  transition: `transform .${a1}s linear`
}), ({
  ownerState: e
}) => (e.variant === "indeterminate" || e.variant === "query") && Fc(sN || (sN = Cf`
      width: auto;
      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
    `), j7)), xD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiLinearProgress"
  }), {
    className: f,
    color: v = "primary",
    value: m,
    valueBuffer: y,
    variant: b = "indeterminate"
  } = u, S = me(u, z7), E = C({}, u, {
    color: v,
    variant: b
  }), k = V7(E), D = to(), M = {}, P = {
    bar1: {},
    bar2: {}
  };
  if (b === "determinate" || b === "buffer")
    if (m !== void 0) {
      M["aria-valuenow"] = Math.round(m), M["aria-valuemin"] = 0, M["aria-valuemax"] = 100;
      let L = m - 100;
      D.direction === "rtl" && (L = -L), P.bar1.transform = `translateX(${L}%)`;
    } else
      process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a value prop when using the determinate or buffer variant of LinearProgress .");
  if (b === "buffer")
    if (y !== void 0) {
      let L = (y || 0) - 100;
      D.direction === "rtl" && (L = -L), P.bar2.transform = `translateX(${L}%)`;
    } else
      process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a valueBuffer prop when using the buffer variant of LinearProgress.");
  return /* @__PURE__ */ gt(H7, C({
    className: pe(k.root, f),
    ownerState: E,
    role: "progressbar"
  }, M, {
    ref: s
  }, S, {
    children: [b === "buffer" ? /* @__PURE__ */ z(W7, {
      className: k.dashed,
      ownerState: E
    }) : null, /* @__PURE__ */ z(G7, {
      className: k.bar1,
      ownerState: E,
      style: P.bar1
    }), b === "determinate" ? null : /* @__PURE__ */ z(q7, {
      className: k.bar2,
      ownerState: E,
      style: P.bar2
    })]
  }));
});
process.env.NODE_ENV !== "production" && (xD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: n.oneOfType([n.oneOf(["inherit", "primary", "secondary"]), n.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The value of the progress indicator for the determinate and buffer variants.
   * Value between 0 and 100.
   */
  value: n.number,
  /**
   * The value for the buffer variant.
   * Value between 0 and 100.
   */
  valueBuffer: n.number,
  /**
   * The variant to use.
   * Use indeterminate or query when there is no progress value.
   * @default 'indeterminate'
   */
  variant: n.oneOf(["buffer", "determinate", "indeterminate", "query"])
});
const Y7 = xD;
function K7(e) {
  return je("MuiLink", e);
}
const X7 = He("MuiLink", ["root", "underlineNone", "underlineHover", "underlineAlways", "button", "focusVisible"]), Q7 = X7, SD = {
  primary: "primary.main",
  textPrimary: "text.primary",
  secondary: "secondary.main",
  textSecondary: "text.secondary",
  error: "error.main"
}, Z7 = (e) => SD[e] || e, J7 = ({
  theme: e,
  ownerState: r
}) => {
  const s = Z7(r.color), u = zw(e, `palette.${s}`, !1) || r.color, f = zw(e, `palette.${s}Channel`);
  return "vars" in e && f ? `rgba(${f} / 0.4)` : Ut(u, 0.4);
}, eG = J7, tG = ["className", "color", "component", "onBlur", "onFocus", "TypographyClasses", "underline", "variant", "sx"], nG = (e) => {
  const {
    classes: r,
    component: s,
    focusVisible: u,
    underline: f
  } = e, v = {
    root: ["root", `underline${oe(f)}`, s === "button" && "button", u && "focusVisible"]
  };
  return Ue(v, K7, r);
}, oG = Z(zr, {
  name: "MuiLink",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[`underline${oe(s.underline)}`], s.component === "button" && r.button];
  }
})(({
  theme: e,
  ownerState: r
}) => C({}, r.underline === "none" && {
  textDecoration: "none"
}, r.underline === "hover" && {
  textDecoration: "none",
  "&:hover": {
    textDecoration: "underline"
  }
}, r.underline === "always" && C({
  textDecoration: "underline"
}, r.color !== "inherit" && {
  textDecorationColor: eG({
    theme: e,
    ownerState: r
  })
}, {
  "&:hover": {
    textDecorationColor: "inherit"
  }
}), r.component === "button" && {
  position: "relative",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${Q7.focusVisible}`]: {
    outline: "auto"
  }
})), TD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiLink"
  }), {
    className: f,
    color: v = "primary",
    component: m = "a",
    onBlur: y,
    onFocus: b,
    TypographyClasses: S,
    underline: E = "always",
    variant: k = "inherit",
    sx: D
  } = u, M = me(u, tG), {
    isFocusVisibleRef: P,
    onBlur: L,
    onFocus: w,
    ref: _
  } = bh(), [V, A] = O.useState(!1), j = yn(s, _), U = (Y) => {
    L(Y), P.current === !1 && A(!1), y && y(Y);
  }, $ = (Y) => {
    w(Y), P.current === !0 && A(!0), b && b(Y);
  }, F = C({}, u, {
    color: v,
    component: m,
    focusVisible: V,
    underline: E,
    variant: k
  }), G = nG(F);
  return /* @__PURE__ */ z(oG, C({
    color: v,
    className: pe(G.root, f),
    classes: S,
    component: m,
    onBlur: U,
    onFocus: $,
    ref: j,
    ownerState: F,
    variant: k,
    sx: [...Object.keys(SD).includes(v) ? [] : [{
      color: v
    }], ...Array.isArray(D) ? D : [D]]
  }, M));
});
process.env.NODE_ENV !== "production" && (TD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the link.
   * @default 'primary'
   */
  color: n.any,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: jc,
  /**
   * @ignore
   */
  onBlur: n.func,
  /**
   * @ignore
   */
  onFocus: n.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.
   */
  TypographyClasses: n.object,
  /**
   * Controls when the link should have an underline.
   * @default 'always'
   */
  underline: n.oneOf(["always", "hover", "none"]),
  /**
   * Applies the theme typography styles.
   * @default 'inherit'
   */
  variant: n.oneOfType([n.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), n.string])
});
const rte = TD, ED = /* @__PURE__ */ O.createContext({});
process.env.NODE_ENV !== "production" && (ED.displayName = "ListContext");
const si = ED;
function rG(e) {
  return je("MuiList", e);
}
const aG = He("MuiList", ["root", "padding", "dense", "subheader"]), ate = aG, iG = ["children", "className", "component", "dense", "disablePadding", "subheader"], sG = (e) => {
  const {
    classes: r,
    disablePadding: s,
    dense: u,
    subheader: f
  } = e;
  return Ue({
    root: ["root", !s && "padding", u && "dense", f && "subheader"]
  }, rG, r);
}, lG = Z("ul", {
  name: "MuiList",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, !s.disablePadding && r.padding, s.dense && r.dense, s.subheader && r.subheader];
  }
})(({
  ownerState: e
}) => C({
  listStyle: "none",
  margin: 0,
  padding: 0,
  position: "relative"
}, !e.disablePadding && {
  paddingTop: 8,
  paddingBottom: 8
}, e.subheader && {
  paddingTop: 0
})), RD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiList"
  }), {
    children: f,
    className: v,
    component: m = "ul",
    dense: y = !1,
    disablePadding: b = !1,
    subheader: S
  } = u, E = me(u, iG), k = O.useMemo(() => ({
    dense: y
  }), [y]), D = C({}, u, {
    component: m,
    dense: y,
    disablePadding: b
  }), M = sG(D);
  return /* @__PURE__ */ z(si.Provider, {
    value: k,
    children: /* @__PURE__ */ gt(lG, C({
      as: m,
      className: pe(M.root, v),
      ref: s,
      ownerState: D
    }, E, {
      children: [S, f]
    }))
  });
});
process.env.NODE_ENV !== "production" && (RD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: n.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: n.bool,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: n.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const cG = RD;
function uG(e) {
  return je("MuiListItem", e);
}
const dG = He("MuiListItem", ["root", "container", "focusVisible", "dense", "alignItemsFlexStart", "disabled", "divider", "gutters", "padding", "button", "secondaryAction", "selected"]), af = dG;
function pG(e) {
  return je("MuiListItemButton", e);
}
const fG = He("MuiListItemButton", ["root", "focusVisible", "dense", "alignItemsFlexStart", "disabled", "divider", "gutters", "selected"]), sf = fG, mG = ["alignItems", "autoFocus", "component", "children", "dense", "disableGutters", "divider", "focusVisibleClassName", "selected", "className"], vG = (e, r) => {
  const {
    ownerState: s
  } = e;
  return [r.root, s.dense && r.dense, s.alignItems === "flex-start" && r.alignItemsFlexStart, s.divider && r.divider, !s.disableGutters && r.gutters];
}, hG = (e) => {
  const {
    alignItems: r,
    classes: s,
    dense: u,
    disabled: f,
    disableGutters: v,
    divider: m,
    selected: y
  } = e, S = Ue({
    root: ["root", u && "dense", !v && "gutters", m && "divider", f && "disabled", r === "flex-start" && "alignItemsFlexStart", y && "selected"]
  }, pG, s);
  return C({}, s, S);
}, gG = Z(er, {
  shouldForwardProp: (e) => ko(e) || e === "classes",
  name: "MuiListItemButton",
  slot: "Root",
  overridesResolver: vG
})(({
  theme: e,
  ownerState: r
}) => C({
  display: "flex",
  flexGrow: 1,
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  minWidth: 0,
  boxSizing: "border-box",
  textAlign: "left",
  paddingTop: 8,
  paddingBottom: 8,
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.shortest
  }),
  "&:hover": {
    textDecoration: "none",
    backgroundColor: (e.vars || e).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${sf.selected}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Ut(e.palette.primary.main, e.palette.action.selectedOpacity),
    [`&.${sf.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Ut(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
    }
  },
  [`&.${sf.selected}:hover`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Ut(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Ut(e.palette.primary.main, e.palette.action.selectedOpacity)
    }
  },
  [`&.${sf.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette.action.focus
  },
  [`&.${sf.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  }
}, r.divider && {
  borderBottom: `1px solid ${(e.vars || e).palette.divider}`,
  backgroundClip: "padding-box"
}, r.alignItems === "flex-start" && {
  alignItems: "flex-start"
}, !r.disableGutters && {
  paddingLeft: 16,
  paddingRight: 16
}, r.dense && {
  paddingTop: 4,
  paddingBottom: 4
})), OD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiListItemButton"
  }), {
    alignItems: f = "center",
    autoFocus: v = !1,
    component: m = "div",
    children: y,
    dense: b = !1,
    disableGutters: S = !1,
    divider: E = !1,
    focusVisibleClassName: k,
    selected: D = !1,
    className: M
  } = u, P = me(u, mG), L = O.useContext(si), w = O.useMemo(() => ({
    dense: b || L.dense || !1,
    alignItems: f,
    disableGutters: S
  }), [f, L.dense, b, S]), _ = O.useRef(null);
  ur(() => {
    v && (_.current ? _.current.focus() : process.env.NODE_ENV !== "production" && console.error("MUI: Unable to set focus to a ListItemButton whose component has not been rendered."));
  }, [v]);
  const V = C({}, u, {
    alignItems: f,
    dense: w.dense,
    disableGutters: S,
    divider: E,
    selected: D
  }), A = hG(V), j = yn(_, s);
  return /* @__PURE__ */ z(si.Provider, {
    value: w,
    children: /* @__PURE__ */ z(gG, C({
      ref: j,
      href: P.href || P.to,
      component: (P.href || P.to) && m === "div" ? "button" : m,
      focusVisibleClassName: pe(A.focusVisible, k),
      ownerState: V,
      className: pe(A.root, M)
    }, P, {
      classes: A,
      children: y
    }))
  });
});
process.env.NODE_ENV !== "production" && (OD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Defines the `align-items` style property.
   * @default 'center'
   */
  alignItems: n.oneOf(["center", "flex-start"]),
  /**
   * If `true`, the list item is focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   * @default false
   */
  autoFocus: n.bool,
  /**
   * The content of the component if a `ListItemSecondaryAction` is used it must
   * be the last child.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent List component.
   * @default false
   */
  dense: n.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: n.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the list item.
   * @default false
   */
  divider: n.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: n.string,
  /**
   * @ignore
   */
  href: n.string,
  /**
   * Use to apply selected styling.
   * @default false
   */
  selected: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const ite = OD;
function yG(e) {
  return je("MuiListItemSecondaryAction", e);
}
const bG = He("MuiListItemSecondaryAction", ["root", "disableGutters"]), ste = bG, CG = ["className"], xG = (e) => {
  const {
    disableGutters: r,
    classes: s
  } = e;
  return Ue({
    root: ["root", r && "disableGutters"]
  }, yG, s);
}, SG = Z("div", {
  name: "MuiListItemSecondaryAction",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.disableGutters && r.disableGutters];
  }
})(({
  ownerState: e
}) => C({
  position: "absolute",
  right: 16,
  top: "50%",
  transform: "translateY(-50%)"
}, e.disableGutters && {
  right: 0
})), q1 = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiListItemSecondaryAction"
  }), {
    className: f
  } = u, v = me(u, CG), m = O.useContext(si), y = C({}, u, {
    disableGutters: m.disableGutters
  }), b = xG(y);
  return /* @__PURE__ */ z(SG, C({
    className: pe(b.root, f),
    ownerState: y,
    ref: s
  }, v));
});
process.env.NODE_ENV !== "production" && (q1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally an `IconButton` or selection control.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
q1.muiName = "ListItemSecondaryAction";
const TG = q1, EG = ["className"], RG = ["alignItems", "autoFocus", "button", "children", "className", "component", "components", "componentsProps", "ContainerComponent", "ContainerProps", "dense", "disabled", "disableGutters", "disablePadding", "divider", "focusVisibleClassName", "secondaryAction", "selected", "slotProps", "slots"], OG = (e, r) => {
  const {
    ownerState: s
  } = e;
  return [r.root, s.dense && r.dense, s.alignItems === "flex-start" && r.alignItemsFlexStart, s.divider && r.divider, !s.disableGutters && r.gutters, !s.disablePadding && r.padding, s.button && r.button, s.hasSecondaryAction && r.secondaryAction];
}, wG = (e) => {
  const {
    alignItems: r,
    button: s,
    classes: u,
    dense: f,
    disabled: v,
    disableGutters: m,
    disablePadding: y,
    divider: b,
    hasSecondaryAction: S,
    selected: E
  } = e;
  return Ue({
    root: ["root", f && "dense", !m && "gutters", !y && "padding", b && "divider", v && "disabled", s && "button", r === "flex-start" && "alignItemsFlexStart", S && "secondaryAction", E && "selected"],
    container: ["container"]
  }, uG, u);
}, kG = Z("div", {
  name: "MuiListItem",
  slot: "Root",
  overridesResolver: OG
})(({
  theme: e,
  ownerState: r
}) => C({
  display: "flex",
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  width: "100%",
  boxSizing: "border-box",
  textAlign: "left"
}, !r.disablePadding && C({
  paddingTop: 8,
  paddingBottom: 8
}, r.dense && {
  paddingTop: 4,
  paddingBottom: 4
}, !r.disableGutters && {
  paddingLeft: 16,
  paddingRight: 16
}, !!r.secondaryAction && {
  // Add some space to avoid collision as `ListItemSecondaryAction`
  // is absolutely positioned.
  paddingRight: 48
}), !!r.secondaryAction && {
  [`& > .${sf.root}`]: {
    paddingRight: 48
  }
}, {
  [`&.${af.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette.action.focus
  },
  [`&.${af.selected}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Ut(e.palette.primary.main, e.palette.action.selectedOpacity),
    [`&.${af.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Ut(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
    }
  },
  [`&.${af.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  }
}, r.alignItems === "flex-start" && {
  alignItems: "flex-start"
}, r.divider && {
  borderBottom: `1px solid ${(e.vars || e).palette.divider}`,
  backgroundClip: "padding-box"
}, r.button && {
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.shortest
  }),
  "&:hover": {
    textDecoration: "none",
    backgroundColor: (e.vars || e).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${af.selected}:hover`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Ut(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Ut(e.palette.primary.main, e.palette.action.selectedOpacity)
    }
  }
}, r.hasSecondaryAction && {
  // Add some space to avoid collision as `ListItemSecondaryAction`
  // is absolutely positioned.
  paddingRight: 48
})), NG = Z("li", {
  name: "MuiListItem",
  slot: "Container",
  overridesResolver: (e, r) => r.container
})({
  position: "relative"
}), wD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiListItem"
  }), {
    alignItems: f = "center",
    autoFocus: v = !1,
    button: m = !1,
    children: y,
    className: b,
    component: S,
    components: E = {},
    componentsProps: k = {},
    ContainerComponent: D = "li",
    ContainerProps: {
      className: M
    } = {},
    dense: P = !1,
    disabled: L = !1,
    disableGutters: w = !1,
    disablePadding: _ = !1,
    divider: V = !1,
    focusVisibleClassName: A,
    secondaryAction: j,
    selected: U = !1,
    slotProps: $ = {},
    slots: F = {}
  } = u, G = me(u.ContainerProps, EG), Y = me(u, RG), Q = O.useContext(si), q = O.useMemo(() => ({
    dense: P || Q.dense || !1,
    alignItems: f,
    disableGutters: w
  }), [f, Q.dense, P, w]), re = O.useRef(null);
  ur(() => {
    v && (re.current ? re.current.focus() : process.env.NODE_ENV !== "production" && console.error("MUI: Unable to set focus to a ListItem whose component has not been rendered."));
  }, [v]);
  const ee = O.Children.toArray(y), J = ee.length && Rl(ee[ee.length - 1], ["ListItemSecondaryAction"]), ce = C({}, u, {
    alignItems: f,
    autoFocus: v,
    button: m,
    dense: q.dense,
    disabled: L,
    disableGutters: w,
    disablePadding: _,
    divider: V,
    hasSecondaryAction: J,
    selected: U
  }), de = wG(ce), fe = yn(re, s), K = F.root || E.Root || kG, ne = $.root || k.root || {}, ve = C({
    className: pe(de.root, ne.className, b),
    disabled: L
  }, Y);
  let Ke = S || "li";
  return m && (ve.component = S || "div", ve.focusVisibleClassName = pe(af.focusVisible, A), Ke = er), J ? (Ke = !ve.component && !S ? "div" : Ke, D === "li" && (Ke === "li" ? Ke = "div" : ve.component === "li" && (ve.component = "div")), /* @__PURE__ */ z(si.Provider, {
    value: q,
    children: /* @__PURE__ */ gt(NG, C({
      as: D,
      className: pe(de.container, M),
      ref: fe,
      ownerState: ce
    }, G, {
      children: [/* @__PURE__ */ z(K, C({}, ne, !Fi(K) && {
        as: Ke,
        ownerState: C({}, ce, ne.ownerState)
      }, ve, {
        children: ee
      })), ee.pop()]
    }))
  })) : /* @__PURE__ */ z(si.Provider, {
    value: q,
    children: /* @__PURE__ */ gt(K, C({}, ne, {
      as: Ke,
      ref: fe
    }, !Fi(K) && {
      ownerState: C({}, ce, ne.ownerState)
    }, ve, {
      children: [ee, j && /* @__PURE__ */ z(TG, {
        children: j
      })]
    }))
  });
});
process.env.NODE_ENV !== "production" && (wD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Defines the `align-items` style property.
   * @default 'center'
   */
  alignItems: n.oneOf(["center", "flex-start"]),
  /**
   * If `true`, the list item is focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   * @default false
   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead
   */
  autoFocus: n.bool,
  /**
   * If `true`, the list item is a button (using `ButtonBase`). Props intended
   * for `ButtonBase` can then be applied to `ListItem`.
   * @default false
   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead
   */
  button: n.bool,
  /**
   * The content of the component if a `ListItemSecondaryAction` is used it must
   * be the last child.
   */
  children: jo(n.node, (e) => {
    const r = O.Children.toArray(e.children);
    let s = -1;
    for (let u = r.length - 1; u >= 0; u -= 1) {
      const f = r[u];
      if (Rl(f, ["ListItemSecondaryAction"])) {
        s = u;
        break;
      }
    }
    return s !== -1 && s !== r.length - 1 ? new Error("MUI: You used an element after ListItemSecondaryAction. For ListItem to detect that it has a secondary action you must pass it as the last child to ListItem.") : null;
  }),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: n.shape({
    Root: n.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: n.shape({
    root: n.object
  }),
  /**
   * The container component used when a `ListItemSecondaryAction` is the last child.
   * @default 'li'
   * @deprecated
   */
  ContainerComponent: jc,
  /**
   * Props applied to the container component if used.
   * @default {}
   * @deprecated
   */
  ContainerProps: n.object,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent List component.
   * @default false
   */
  dense: n.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead
   */
  disabled: n.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: n.bool,
  /**
   * If `true`, all padding is removed.
   * @default false
   */
  disablePadding: n.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the list item.
   * @default false
   */
  divider: n.bool,
  /**
   * @ignore
   */
  focusVisibleClassName: n.string,
  /**
   * The element to display at the end of ListItem.
   */
  secondaryAction: n.node,
  /**
   * Use to apply selected styling.
   * @default false
   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead
   */
  selected: n.bool,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: n.shape({
    root: n.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: n.shape({
    root: n.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const lte = wD;
function $G(e) {
  return je("MuiListItemAvatar", e);
}
const MG = He("MuiListItemAvatar", ["root", "alignItemsFlexStart"]), cte = MG, DG = ["className"], PG = (e) => {
  const {
    alignItems: r,
    classes: s
  } = e;
  return Ue({
    root: ["root", r === "flex-start" && "alignItemsFlexStart"]
  }, $G, s);
}, LG = Z("div", {
  name: "MuiListItemAvatar",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.alignItems === "flex-start" && r.alignItemsFlexStart];
  }
})(({
  ownerState: e
}) => C({
  minWidth: 56,
  flexShrink: 0
}, e.alignItems === "flex-start" && {
  marginTop: 8
})), kD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiListItemAvatar"
  }), {
    className: f
  } = u, v = me(u, DG), m = O.useContext(si), y = C({}, u, {
    alignItems: m.alignItems
  }), b = PG(y);
  return /* @__PURE__ */ z(LG, C({
    className: pe(b.root, f),
    ownerState: y,
    ref: s
  }, v));
});
process.env.NODE_ENV !== "production" && (kD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally an `Avatar`.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const ute = kD;
function IG(e) {
  return je("MuiListItemIcon", e);
}
const _G = He("MuiListItemIcon", ["root", "alignItemsFlexStart"]), lN = _G, AG = ["className"], BG = (e) => {
  const {
    alignItems: r,
    classes: s
  } = e;
  return Ue({
    root: ["root", r === "flex-start" && "alignItemsFlexStart"]
  }, IG, s);
}, zG = Z("div", {
  name: "MuiListItemIcon",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.alignItems === "flex-start" && r.alignItemsFlexStart];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  minWidth: 56,
  color: (e.vars || e).palette.action.active,
  flexShrink: 0,
  display: "inline-flex"
}, r.alignItems === "flex-start" && {
  marginTop: 8
})), ND = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiListItemIcon"
  }), {
    className: f
  } = u, v = me(u, AG), m = O.useContext(si), y = C({}, u, {
    alignItems: m.alignItems
  }), b = BG(y);
  return /* @__PURE__ */ z(zG, C({
    className: pe(b.root, f),
    ownerState: y,
    ref: s
  }, v));
});
process.env.NODE_ENV !== "production" && (ND.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `Icon`, `SvgIcon`,
   * or a `@mui/icons-material` SVG icon element.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const dte = ND;
function FG(e) {
  return je("MuiListItemText", e);
}
const jG = He("MuiListItemText", ["root", "multiline", "dense", "inset", "primary", "secondary"]), S0 = jG, UG = ["children", "className", "disableTypography", "inset", "primary", "primaryTypographyProps", "secondary", "secondaryTypographyProps"], VG = (e) => {
  const {
    classes: r,
    inset: s,
    primary: u,
    secondary: f,
    dense: v
  } = e;
  return Ue({
    root: ["root", s && "inset", v && "dense", u && f && "multiline"],
    primary: ["primary"],
    secondary: ["secondary"]
  }, FG, r);
}, HG = Z("div", {
  name: "MuiListItemText",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [{
      [`& .${S0.primary}`]: r.primary
    }, {
      [`& .${S0.secondary}`]: r.secondary
    }, r.root, s.inset && r.inset, s.primary && s.secondary && r.multiline, s.dense && r.dense];
  }
})(({
  ownerState: e
}) => C({
  flex: "1 1 auto",
  minWidth: 0,
  marginTop: 4,
  marginBottom: 4
}, e.primary && e.secondary && {
  marginTop: 6,
  marginBottom: 6
}, e.inset && {
  paddingLeft: 56
})), $D = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiListItemText"
  }), {
    children: f,
    className: v,
    disableTypography: m = !1,
    inset: y = !1,
    primary: b,
    primaryTypographyProps: S,
    secondary: E,
    secondaryTypographyProps: k
  } = u, D = me(u, UG), {
    dense: M
  } = O.useContext(si);
  let P = b ?? f, L = E;
  const w = C({}, u, {
    disableTypography: m,
    inset: y,
    primary: !!P,
    secondary: !!L,
    dense: M
  }), _ = VG(w);
  return P != null && P.type !== zr && !m && (P = /* @__PURE__ */ z(zr, C({
    variant: M ? "body2" : "body1",
    className: _.primary,
    component: S != null && S.variant ? void 0 : "span",
    display: "block"
  }, S, {
    children: P
  }))), L != null && L.type !== zr && !m && (L = /* @__PURE__ */ z(zr, C({
    variant: "body2",
    className: _.secondary,
    color: "text.secondary",
    display: "block"
  }, k, {
    children: L
  }))), /* @__PURE__ */ gt(HG, C({
    className: pe(_.root, v),
    ownerState: w,
    ref: s
  }, D, {
    children: [P, L]
  }));
});
process.env.NODE_ENV !== "production" && ($D.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Alias for the `primary` prop.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * If `true`, the children won't be wrapped by a Typography component.
   * This can be useful to render an alternative Typography variant by wrapping
   * the `children` (or `primary`) text, and optional `secondary` text
   * with the Typography component.
   * @default false
   */
  disableTypography: n.bool,
  /**
   * If `true`, the children are indented.
   * This should be used if there is no left avatar or left icon.
   * @default false
   */
  inset: n.bool,
  /**
   * The main content element.
   */
  primary: n.node,
  /**
   * These props will be forwarded to the primary typography component
   * (as long as disableTypography is not `true`).
   */
  primaryTypographyProps: n.object,
  /**
   * The secondary content element.
   */
  secondary: n.node,
  /**
   * These props will be forwarded to the secondary typography component
   * (as long as disableTypography is not `true`).
   */
  secondaryTypographyProps: n.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const pte = $D, WG = ["actions", "autoFocus", "autoFocusItem", "children", "className", "disabledItemsFocusable", "disableListWrap", "onKeyDown", "variant"];
function _T(e, r, s) {
  return e === r ? e.firstChild : r && r.nextElementSibling ? r.nextElementSibling : s ? null : e.firstChild;
}
function cN(e, r, s) {
  return e === r ? s ? e.firstChild : e.lastChild : r && r.previousElementSibling ? r.previousElementSibling : s ? null : e.lastChild;
}
function MD(e, r) {
  if (r === void 0)
    return !0;
  let s = e.innerText;
  return s === void 0 && (s = e.textContent), s = s.trim().toLowerCase(), s.length === 0 ? !1 : r.repeating ? s[0] === r.keys[0] : s.indexOf(r.keys.join("")) === 0;
}
function jv(e, r, s, u, f, v) {
  let m = !1, y = f(e, r, r ? s : !1);
  for (; y; ) {
    if (y === e.firstChild) {
      if (m)
        return !1;
      m = !0;
    }
    const b = u ? !1 : y.disabled || y.getAttribute("aria-disabled") === "true";
    if (!y.hasAttribute("tabindex") || !MD(y, v) || b)
      y = f(e, y, s);
    else
      return y.focus(), !0;
  }
  return !1;
}
const DD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: u,
    autoFocus: f = !1,
    autoFocusItem: v = !1,
    children: m,
    className: y,
    disabledItemsFocusable: b = !1,
    disableListWrap: S = !1,
    onKeyDown: E,
    variant: k = "selectedMenu"
  } = r, D = me(r, WG), M = O.useRef(null), P = O.useRef({
    keys: [],
    repeating: !0,
    previousKeyMatched: !0,
    lastTime: null
  });
  ur(() => {
    f && M.current.focus();
  }, [f]), O.useImperativeHandle(u, () => ({
    adjustStyleForScrollbar: (A, j) => {
      const U = !M.current.style.width;
      if (A.clientHeight < M.current.clientHeight && U) {
        const $ = `${o$(Wn(A))}px`;
        M.current.style[j.direction === "rtl" ? "paddingLeft" : "paddingRight"] = $, M.current.style.width = `calc(100% + ${$})`;
      }
      return M.current;
    }
  }), []);
  const L = (A) => {
    const j = M.current, U = A.key, $ = Wn(j).activeElement;
    if (U === "ArrowDown")
      A.preventDefault(), jv(j, $, S, b, _T);
    else if (U === "ArrowUp")
      A.preventDefault(), jv(j, $, S, b, cN);
    else if (U === "Home")
      A.preventDefault(), jv(j, null, S, b, _T);
    else if (U === "End")
      A.preventDefault(), jv(j, null, S, b, cN);
    else if (U.length === 1) {
      const F = P.current, G = U.toLowerCase(), Y = performance.now();
      F.keys.length > 0 && (Y - F.lastTime > 500 ? (F.keys = [], F.repeating = !0, F.previousKeyMatched = !0) : F.repeating && G !== F.keys[0] && (F.repeating = !1)), F.lastTime = Y, F.keys.push(G);
      const Q = $ && !F.repeating && MD($, F);
      F.previousKeyMatched && (Q || jv(j, $, !1, b, _T, F)) ? A.preventDefault() : F.previousKeyMatched = !1;
    }
    E && E(A);
  }, w = yn(M, s);
  let _ = -1;
  O.Children.forEach(m, (A, j) => {
    if (!/* @__PURE__ */ O.isValidElement(A)) {
      _ === j && (_ += 1, _ >= m.length && (_ = -1));
      return;
    }
    process.env.NODE_ENV !== "production" && Hi.isFragment(A) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), A.props.disabled || (k === "selectedMenu" && A.props.selected || _ === -1) && (_ = j), _ === j && (A.props.disabled || A.props.muiSkipListHighlight || A.type.muiSkipListHighlight) && (_ += 1, _ >= m.length && (_ = -1));
  });
  const V = O.Children.map(m, (A, j) => {
    if (j === _) {
      const U = {};
      return v && (U.autoFocus = !0), A.props.tabIndex === void 0 && k === "selectedMenu" && (U.tabIndex = 0), /* @__PURE__ */ O.cloneElement(A, U);
    }
    return A;
  });
  return /* @__PURE__ */ z(cG, C({
    role: "menu",
    ref: w,
    className: y,
    onKeyDown: L,
    tabIndex: f ? 0 : -1
  }, D, {
    children: V
  }));
});
process.env.NODE_ENV !== "production" && (DD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, will focus the `[role="menu"]` container and move into tab order.
   * @default false
   */
  autoFocus: n.bool,
  /**
   * If `true`, will focus the first menuitem if `variant="menu"` or selected item
   * if `variant="selectedMenu"`.
   * @default false
   */
  autoFocusItem: n.bool,
  /**
   * MenuList contents, normally `MenuItem`s.
   */
  children: n.node,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: n.bool,
  /**
   * If `true`, the menu items will not wrap focus.
   * @default false
   */
  disableListWrap: n.bool,
  /**
   * @ignore
   */
  onKeyDown: n.func,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   * @default 'selectedMenu'
   */
  variant: n.oneOf(["menu", "selectedMenu"])
});
const GG = DD;
function qG(e) {
  return je("MuiPopover", e);
}
const YG = He("MuiPopover", ["root", "paper"]), fte = YG, KG = ["onEntering"], XG = ["action", "anchorEl", "anchorOrigin", "anchorPosition", "anchorReference", "children", "className", "container", "elevation", "marginThreshold", "open", "PaperProps", "slots", "slotProps", "transformOrigin", "TransitionComponent", "transitionDuration", "TransitionProps", "disableScrollLock"], QG = ["slotProps"];
function uN(e, r) {
  let s = 0;
  return typeof r == "number" ? s = r : r === "center" ? s = e.height / 2 : r === "bottom" && (s = e.height), s;
}
function dN(e, r) {
  let s = 0;
  return typeof r == "number" ? s = r : r === "center" ? s = e.width / 2 : r === "right" && (s = e.width), s;
}
function pN(e) {
  return [e.horizontal, e.vertical].map((r) => typeof r == "number" ? `${r}px` : r).join(" ");
}
function n0(e) {
  return typeof e == "function" ? e() : e;
}
const ZG = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"],
    paper: ["paper"]
  }, qG, r);
}, JG = Z(z1, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})({}), PD = Z(ui, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, r) => r.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), LD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u, f, v;
  const m = Ve({
    props: r,
    name: "MuiPopover"
  }), {
    action: y,
    anchorEl: b,
    anchorOrigin: S = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: E,
    anchorReference: k = "anchorEl",
    children: D,
    className: M,
    container: P,
    elevation: L = 8,
    marginThreshold: w = 16,
    open: _,
    PaperProps: V = {},
    slots: A,
    slotProps: j,
    transformOrigin: U = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: $ = C0,
    transitionDuration: F = "auto",
    TransitionProps: {
      onEntering: G
    } = {},
    disableScrollLock: Y = !1
  } = m, Q = me(m.TransitionProps, KG), q = me(m, XG), re = (u = j == null ? void 0 : j.paper) != null ? u : V, ee = O.useRef(), J = yn(ee, re.ref), ce = C({}, m, {
    anchorOrigin: S,
    anchorReference: k,
    elevation: L,
    marginThreshold: w,
    externalPaperSlotProps: re,
    transformOrigin: U,
    TransitionComponent: $,
    transitionDuration: F,
    TransitionProps: Q
  }), de = ZG(ce), fe = O.useCallback(() => {
    if (k === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (E || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), E;
    const nt = n0(b), le = nt && nt.nodeType === 1 ? nt : Wn(ee.current).body, $e = le.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const Oe = le.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && Oe.top === 0 && Oe.left === 0 && Oe.right === 0 && Oe.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: $e.top + uN($e, S.vertical),
      left: $e.left + dN($e, S.horizontal)
    };
  }, [b, S.horizontal, S.vertical, E, k]), K = O.useCallback((nt) => ({
    vertical: uN(nt, U.vertical),
    horizontal: dN(nt, U.horizontal)
  }), [U.horizontal, U.vertical]), ne = O.useCallback((nt) => {
    const le = {
      width: nt.offsetWidth,
      height: nt.offsetHeight
    }, $e = K(le);
    if (k === "none")
      return {
        top: null,
        left: null,
        transformOrigin: pN($e)
      };
    const Oe = fe();
    let dt = Oe.top - $e.vertical, it = Oe.left - $e.horizontal;
    const zt = dt + le.height, Dt = it + le.width, ht = ta(n0(b)), Tt = ht.innerHeight - w, Lt = ht.innerWidth - w;
    if (w !== null && dt < w) {
      const At = dt - w;
      dt -= At, $e.vertical += At;
    } else if (w !== null && zt > Tt) {
      const At = zt - Tt;
      dt -= At, $e.vertical += At;
    }
    if (process.env.NODE_ENV !== "production" && le.height > Tt && le.height && Tt && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${le.height - Tt}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), w !== null && it < w) {
      const At = it - w;
      it -= At, $e.horizontal += At;
    } else if (Dt > Lt) {
      const At = Dt - Lt;
      it -= At, $e.horizontal += At;
    }
    return {
      top: `${Math.round(dt)}px`,
      left: `${Math.round(it)}px`,
      transformOrigin: pN($e)
    };
  }, [b, k, fe, K, w]), [ve, Ke] = O.useState(_), tt = O.useCallback(() => {
    const nt = ee.current;
    if (!nt)
      return;
    const le = ne(nt);
    le.top !== null && (nt.style.top = le.top), le.left !== null && (nt.style.left = le.left), nt.style.transformOrigin = le.transformOrigin, Ke(!0);
  }, [ne]);
  O.useEffect(() => (Y && window.addEventListener("scroll", tt), () => window.removeEventListener("scroll", tt)), [b, Y, tt]);
  const Ie = (nt, le) => {
    G && G(nt, le), tt();
  }, De = () => {
    Ke(!1);
  };
  O.useEffect(() => {
    _ && tt();
  }), O.useImperativeHandle(y, () => _ ? {
    updatePosition: () => {
      tt();
    }
  } : null, [_, tt]), O.useEffect(() => {
    if (!_)
      return;
    const nt = gh(() => {
      tt();
    }), le = ta(b);
    return le.addEventListener("resize", nt), () => {
      nt.clear(), le.removeEventListener("resize", nt);
    };
  }, [b, _, tt]);
  let Ye = F;
  F === "auto" && !$.muiSupportAuto && (Ye = void 0);
  const ke = P || (b ? Wn(n0(b)).body : void 0), lt = (f = A == null ? void 0 : A.root) != null ? f : JG, xe = (v = A == null ? void 0 : A.paper) != null ? v : PD, ze = po({
    elementType: xe,
    externalSlotProps: C({}, re, {
      style: ve ? re.style : C({}, re.style, {
        opacity: 0
      })
    }),
    additionalProps: {
      elevation: L,
      ref: J
    },
    ownerState: ce,
    className: pe(de.paper, re == null ? void 0 : re.className)
  }), ut = po({
    elementType: lt,
    externalSlotProps: (j == null ? void 0 : j.root) || {},
    externalForwardedProps: q,
    additionalProps: {
      ref: s,
      slotProps: {
        backdrop: {
          invisible: !0
        }
      },
      container: ke,
      open: _
    },
    ownerState: ce,
    className: pe(de.root, M)
  }), {
    slotProps: Xe
  } = ut, rt = me(ut, QG);
  return /* @__PURE__ */ z(lt, C({}, rt, !Fi(lt) && {
    slotProps: Xe,
    disableScrollLock: Y
  }, {
    children: /* @__PURE__ */ z($, C({
      appear: !0,
      in: _,
      onEntering: Ie,
      onExited: De,
      timeout: Ye
    }, Q, {
      children: /* @__PURE__ */ z(xe, C({}, ze, {
        children: D
      }))
    }))
  }));
});
process.env.NODE_ENV !== "production" && (LD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: Tr,
  /**
   * An HTML element, [PopoverVirtualElement](/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: jo(n.oneOfType([$s, n.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const r = n0(e.anchorEl);
      if (r && r.nodeType === 1) {
        const s = r.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && s.top === 0 && s.left === 0 && s.right === 0 && s.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${r}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: n.shape({
    horizontal: n.oneOfType([n.oneOf(["center", "left", "right"]), n.number]).isRequired,
    vertical: n.oneOfType([n.oneOf(["bottom", "center", "top"]), n.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: n.shape({
    left: n.number.isRequired,
    top: n.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: n.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: n.oneOfType([$s, n.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: n.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: Co,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: n.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: n.func,
  /**
   * If `true`, the component is shown.
   */
  open: n.bool.isRequired,
  /**
   * Props applied to the [`Paper`](/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: n.shape({
    component: jc
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @default {}
   */
  slotProps: n.shape({
    paper: n.oneOfType([n.func, n.object]),
    root: n.oneOfType([n.func, n.object])
  }),
  /**
   * The components used for each slot inside.
   *
   * @default {}
   */
  slots: n.shape({
    paper: n.elementType,
    root: n.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: n.shape({
    horizontal: n.oneOfType([n.oneOf(["center", "left", "right"]), n.number]).isRequired,
    vertical: n.oneOfType([n.oneOf(["bottom", "center", "top"]), n.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Grow
   */
  TransitionComponent: n.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: n.oneOfType([n.oneOf(["auto"]), n.number, n.shape({
    appear: n.number,
    enter: n.number,
    exit: n.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @default {}
   */
  TransitionProps: n.object
});
const eq = LD;
function tq(e) {
  return je("MuiMenu", e);
}
const nq = He("MuiMenu", ["root", "paper", "list"]), mte = nq, oq = ["onEntering"], rq = ["autoFocus", "children", "className", "disableAutoFocusItem", "MenuListProps", "onClose", "open", "PaperProps", "PopoverClasses", "transitionDuration", "TransitionProps", "variant", "slots", "slotProps"], aq = {
  vertical: "top",
  horizontal: "right"
}, iq = {
  vertical: "top",
  horizontal: "left"
}, sq = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"],
    paper: ["paper"],
    list: ["list"]
  }, tq, r);
}, lq = Z(eq, {
  shouldForwardProp: (e) => ko(e) || e === "classes",
  name: "MuiMenu",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})({}), cq = Z(PD, {
  name: "MuiMenu",
  slot: "Paper",
  overridesResolver: (e, r) => r.paper
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tappable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: "calc(100% - 96px)",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
}), uq = Z(GG, {
  name: "MuiMenu",
  slot: "List",
  overridesResolver: (e, r) => r.list
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), ID = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u, f;
  const v = Ve({
    props: r,
    name: "MuiMenu"
  }), {
    autoFocus: m = !0,
    children: y,
    className: b,
    disableAutoFocusItem: S = !1,
    MenuListProps: E = {},
    onClose: k,
    open: D,
    PaperProps: M = {},
    PopoverClasses: P,
    transitionDuration: L = "auto",
    TransitionProps: {
      onEntering: w
    } = {},
    variant: _ = "selectedMenu",
    slots: V = {},
    slotProps: A = {}
  } = v, j = me(v.TransitionProps, oq), U = me(v, rq), $ = to(), F = $.direction === "rtl", G = C({}, v, {
    autoFocus: m,
    disableAutoFocusItem: S,
    MenuListProps: E,
    onEntering: w,
    PaperProps: M,
    transitionDuration: L,
    TransitionProps: j,
    variant: _
  }), Y = sq(G), Q = m && !S && D, q = O.useRef(null), re = (ne, ve) => {
    q.current && q.current.adjustStyleForScrollbar(ne, $), w && w(ne, ve);
  }, ee = (ne) => {
    ne.key === "Tab" && (ne.preventDefault(), k && k(ne, "tabKeyDown"));
  };
  let J = -1;
  O.Children.map(y, (ne, ve) => {
    /* @__PURE__ */ O.isValidElement(ne) && (process.env.NODE_ENV !== "production" && Hi.isFragment(ne) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), ne.props.disabled || (_ === "selectedMenu" && ne.props.selected || J === -1) && (J = ve));
  });
  const ce = (u = V.paper) != null ? u : cq, de = (f = A.paper) != null ? f : M, fe = po({
    elementType: V.root,
    externalSlotProps: A.root,
    ownerState: G,
    className: [Y.root, b]
  }), K = po({
    elementType: ce,
    externalSlotProps: de,
    ownerState: G,
    className: Y.paper
  });
  return /* @__PURE__ */ z(lq, C({
    onClose: k,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: F ? "right" : "left"
    },
    transformOrigin: F ? aq : iq,
    slots: {
      paper: ce,
      root: V.root
    },
    slotProps: {
      root: fe,
      paper: K
    },
    open: D,
    ref: s,
    transitionDuration: L,
    TransitionProps: C({
      onEntering: re
    }, j),
    ownerState: G
  }, U, {
    classes: P,
    children: /* @__PURE__ */ z(uq, C({
      onKeyDown: ee,
      actions: q,
      autoFocus: m && (J === -1 || S),
      autoFocusItem: Q,
      variant: _
    }, E, {
      className: pe(Y.list, E.className),
      children: y
    }))
  }));
});
process.env.NODE_ENV !== "production" && (ID.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the position of the menu.
   */
  anchorEl: n.oneOfType([$s, n.func]),
  /**
   * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
   * children are not focusable. If you set this prop to `false` focus will be placed
   * on the parent modal container. This has severe accessibility implications
   * and should only be considered if you manage focus otherwise.
   * @default true
   */
  autoFocus: n.bool,
  /**
   * Menu contents, normally `MenuItem`s.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * When opening the menu will not focus the active item but the `[role="menu"]`
   * unless `autoFocus` is also set to `false`. Not using the default means not
   * following WAI-ARIA authoring practices. Please be considerate about possible
   * accessibility implications.
   * @default false
   */
  disableAutoFocusItem: n.bool,
  /**
   * Props applied to the [`MenuList`](/material-ui/api/menu-list/) element.
   * @default {}
   */
  MenuListProps: n.object,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
   */
  onClose: n.func,
  /**
   * If `true`, the component is shown.
   */
  open: n.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: n.object,
  /**
   * `classes` prop applied to the [`Popover`](/material-ui/api/popover/) element.
   */
  PopoverClasses: n.object,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @default {}
   */
  slotProps: n.shape({
    paper: n.oneOfType([n.func, n.object]),
    root: n.oneOfType([n.func, n.object])
  }),
  /**
   * The components used for each slot inside.
   *
   * @default {}
   */
  slots: n.shape({
    paper: n.elementType,
    root: n.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The length of the transition in `ms`, or 'auto'
   * @default 'auto'
   */
  transitionDuration: n.oneOfType([n.oneOf(["auto"]), n.number, n.shape({
    appear: n.number,
    enter: n.number,
    exit: n.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @default {}
   */
  TransitionProps: n.object,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.
   * @default 'selectedMenu'
   */
  variant: n.oneOf(["menu", "selectedMenu"])
});
const dq = ID;
function pq(e) {
  return je("MuiMenuItem", e);
}
const fq = He("MuiMenuItem", ["root", "focusVisible", "dense", "disabled", "divider", "gutters", "selected"]), Uv = fq, mq = ["autoFocus", "component", "dense", "divider", "disableGutters", "focusVisibleClassName", "role", "tabIndex", "className"], vq = (e, r) => {
  const {
    ownerState: s
  } = e;
  return [r.root, s.dense && r.dense, s.divider && r.divider, !s.disableGutters && r.gutters];
}, hq = (e) => {
  const {
    disabled: r,
    dense: s,
    divider: u,
    disableGutters: f,
    selected: v,
    classes: m
  } = e, b = Ue({
    root: ["root", s && "dense", r && "disabled", !f && "gutters", u && "divider", v && "selected"]
  }, pq, m);
  return C({}, m, b);
}, gq = Z(er, {
  shouldForwardProp: (e) => ko(e) || e === "classes",
  name: "MuiMenuItem",
  slot: "Root",
  overridesResolver: vq
})(({
  theme: e,
  ownerState: r
}) => C({}, e.typography.body1, {
  display: "flex",
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  minHeight: 48,
  paddingTop: 6,
  paddingBottom: 6,
  boxSizing: "border-box",
  whiteSpace: "nowrap"
}, !r.disableGutters && {
  paddingLeft: 16,
  paddingRight: 16
}, r.divider && {
  borderBottom: `1px solid ${(e.vars || e).palette.divider}`,
  backgroundClip: "padding-box"
}, {
  "&:hover": {
    textDecoration: "none",
    backgroundColor: (e.vars || e).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${Uv.selected}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Ut(e.palette.primary.main, e.palette.action.selectedOpacity),
    [`&.${Uv.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Ut(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
    }
  },
  [`&.${Uv.selected}:hover`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Ut(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Ut(e.palette.primary.main, e.palette.action.selectedOpacity)
    }
  },
  [`&.${Uv.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette.action.focus
  },
  [`&.${Uv.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  },
  [`& + .${qk.root}`]: {
    marginTop: e.spacing(1),
    marginBottom: e.spacing(1)
  },
  [`& + .${qk.inset}`]: {
    marginLeft: 52
  },
  [`& .${S0.root}`]: {
    marginTop: 0,
    marginBottom: 0
  },
  [`& .${S0.inset}`]: {
    paddingLeft: 36
  },
  [`& .${lN.root}`]: {
    minWidth: 36
  }
}, !r.dense && {
  [e.breakpoints.up("sm")]: {
    minHeight: "auto"
  }
}, r.dense && C({
  minHeight: 32,
  // https://m2.material.io/components/menus#specs > Dense
  paddingTop: 4,
  paddingBottom: 4
}, e.typography.body2, {
  [`& .${lN.root} svg`]: {
    fontSize: "1.25rem"
  }
}))), _D = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiMenuItem"
  }), {
    autoFocus: f = !1,
    component: v = "li",
    dense: m = !1,
    divider: y = !1,
    disableGutters: b = !1,
    focusVisibleClassName: S,
    role: E = "menuitem",
    tabIndex: k,
    className: D
  } = u, M = me(u, mq), P = O.useContext(si), L = O.useMemo(() => ({
    dense: m || P.dense || !1,
    disableGutters: b
  }), [P.dense, m, b]), w = O.useRef(null);
  ur(() => {
    f && (w.current ? w.current.focus() : process.env.NODE_ENV !== "production" && console.error("MUI: Unable to set focus to a MenuItem whose component has not been rendered."));
  }, [f]);
  const _ = C({}, u, {
    dense: L.dense,
    divider: y,
    disableGutters: b
  }), V = hq(u), A = yn(w, s);
  let j;
  return u.disabled || (j = k !== void 0 ? k : -1), /* @__PURE__ */ z(si.Provider, {
    value: L,
    children: /* @__PURE__ */ z(gq, C({
      ref: A,
      role: E,
      tabIndex: j,
      component: v,
      focusVisibleClassName: pe(V.focusVisible, S),
      className: pe(V.root, D)
    }, M, {
      ownerState: _,
      classes: V
    }))
  });
});
process.env.NODE_ENV !== "production" && (_D.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the list item is focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   * @default false
   */
  autoFocus: n.bool,
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent Menu component.
   * @default false
   */
  dense: n.bool,
  /**
   * @ignore
   */
  disabled: n.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: n.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the menu item.
   * @default false
   */
  divider: n.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: n.string,
  /**
   * @ignore
   */
  role: n.string,
  /**
   * If `true`, the component is selected.
   * @default false
   */
  selected: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * @default 0
   */
  tabIndex: n.number
});
const yq = _D;
function bq(e) {
  return je("MuiMobileStepper", e);
}
const Cq = He("MuiMobileStepper", ["root", "positionBottom", "positionTop", "positionStatic", "dots", "dot", "dotActive", "progress"]), vte = Cq, xq = ["activeStep", "backButton", "className", "LinearProgressProps", "nextButton", "position", "steps", "variant"], Sq = (e) => {
  const {
    classes: r,
    position: s
  } = e, u = {
    root: ["root", `position${oe(s)}`],
    dots: ["dots"],
    dot: ["dot"],
    dotActive: ["dotActive"],
    progress: ["progress"]
  };
  return Ue(u, bq, r);
}, Tq = Z(ui, {
  name: "MuiMobileStepper",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[`position${oe(s.position)}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  display: "flex",
  flexDirection: "row",
  justifyContent: "space-between",
  alignItems: "center",
  background: (e.vars || e).palette.background.default,
  padding: 8
}, r.position === "bottom" && {
  position: "fixed",
  bottom: 0,
  left: 0,
  right: 0,
  zIndex: (e.vars || e).zIndex.mobileStepper
}, r.position === "top" && {
  position: "fixed",
  top: 0,
  left: 0,
  right: 0,
  zIndex: (e.vars || e).zIndex.mobileStepper
})), Eq = Z("div", {
  name: "MuiMobileStepper",
  slot: "Dots",
  overridesResolver: (e, r) => r.dots
})(({
  ownerState: e
}) => C({}, e.variant === "dots" && {
  display: "flex",
  flexDirection: "row"
})), Rq = Z("div", {
  name: "MuiMobileStepper",
  slot: "Dot",
  shouldForwardProp: (e) => Sh(e) && e !== "dotActive",
  overridesResolver: (e, r) => {
    const {
      dotActive: s
    } = e;
    return [r.dot, s && r.dotActive];
  }
})(({
  theme: e,
  ownerState: r,
  dotActive: s
}) => C({}, r.variant === "dots" && C({
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.shortest
  }),
  backgroundColor: (e.vars || e).palette.action.disabled,
  borderRadius: "50%",
  width: 8,
  height: 8,
  margin: "0 2px"
}, s && {
  backgroundColor: (e.vars || e).palette.primary.main
}))), Oq = Z(Y7, {
  name: "MuiMobileStepper",
  slot: "Progress",
  overridesResolver: (e, r) => r.progress
})(({
  ownerState: e
}) => C({}, e.variant === "progress" && {
  width: "50%"
})), AD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiMobileStepper"
  }), {
    activeStep: f = 0,
    backButton: v,
    className: m,
    LinearProgressProps: y,
    nextButton: b,
    position: S = "bottom",
    steps: E,
    variant: k = "dots"
  } = u, D = me(u, xq), M = C({}, u, {
    activeStep: f,
    position: S,
    variant: k
  });
  let P;
  k === "progress" && (E === 1 ? P = 100 : P = Math.ceil(f / (E - 1) * 100));
  const L = Sq(M);
  return /* @__PURE__ */ gt(Tq, C({
    square: !0,
    elevation: 0,
    className: pe(L.root, m),
    ref: s,
    ownerState: M
  }, D, {
    children: [v, k === "text" && /* @__PURE__ */ gt(O.Fragment, {
      children: [f + 1, " / ", E]
    }), k === "dots" && /* @__PURE__ */ z(Eq, {
      ownerState: M,
      className: L.dots,
      children: [...new Array(E)].map((w, _) => /* @__PURE__ */ z(Rq, {
        className: pe(L.dot, _ === f && L.dotActive),
        ownerState: M,
        dotActive: _ === f
      }, _))
    }), k === "progress" && /* @__PURE__ */ z(Oq, C({
      ownerState: M,
      className: L.progress,
      variant: "determinate",
      value: P
    }, y)), b]
  }));
});
process.env.NODE_ENV !== "production" && (AD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the active step (zero based index).
   * Defines which dot is highlighted when the variant is 'dots'.
   * @default 0
   */
  activeStep: Co,
  /**
   * A back button element. For instance, it can be a `Button` or an `IconButton`.
   */
  backButton: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * Props applied to the `LinearProgress` element.
   */
  LinearProgressProps: n.object,
  /**
   * A next button element. For instance, it can be a `Button` or an `IconButton`.
   */
  nextButton: n.node,
  /**
   * Set the positioning type.
   * @default 'bottom'
   */
  position: n.oneOf(["bottom", "static", "top"]),
  /**
   * The total steps.
   */
  steps: Co.isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The variant to use.
   * @default 'dots'
   */
  variant: n.oneOf(["dots", "progress", "text"])
});
const hte = AD;
function BD(e) {
  return je("MuiNativeSelect", e);
}
const wq = He("MuiNativeSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]), Y1 = wq, kq = ["className", "disabled", "error", "IconComponent", "inputRef", "variant"], Nq = (e) => {
  const {
    classes: r,
    variant: s,
    disabled: u,
    multiple: f,
    open: v,
    error: m
  } = e, y = {
    select: ["select", s, u && "disabled", f && "multiple", m && "error"],
    icon: ["icon", `icon${oe(s)}`, v && "iconOpen", u && "disabled"]
  };
  return Ue(y, BD, r);
}, zD = ({
  ownerState: e,
  theme: r
}) => C({
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  // When interacting quickly, the text can end up selected.
  // Native select can't be selected either.
  userSelect: "none",
  borderRadius: 0,
  // Reset
  cursor: "pointer",
  "&:focus": C({}, r.vars ? {
    backgroundColor: `rgba(${r.vars.palette.common.onBackgroundChannel} / 0.05)`
  } : {
    backgroundColor: r.palette.mode === "light" ? "rgba(0, 0, 0, 0.05)" : "rgba(255, 255, 255, 0.05)"
  }, {
    borderRadius: 0
    // Reset Chrome style
  }),
  // Remove IE11 arrow
  "&::-ms-expand": {
    display: "none"
  },
  [`&.${Y1.disabled}`]: {
    cursor: "default"
  },
  "&[multiple]": {
    height: "auto"
  },
  "&:not([multiple]) option, &:not([multiple]) optgroup": {
    backgroundColor: (r.vars || r).palette.background.paper
  },
  // Bump specificity to allow extending custom inputs
  "&&&": {
    paddingRight: 24,
    minWidth: 16
    // So it doesn't collapse.
  }
}, e.variant === "filled" && {
  "&&&": {
    paddingRight: 32
  }
}, e.variant === "outlined" && {
  borderRadius: (r.vars || r).shape.borderRadius,
  "&:focus": {
    borderRadius: (r.vars || r).shape.borderRadius
    // Reset the reset for Chrome style
  },
  "&&&": {
    paddingRight: 32
  }
}), $q = Z("select", {
  name: "MuiNativeSelect",
  slot: "Select",
  shouldForwardProp: ko,
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.select, r[s.variant], s.error && r.error, {
      [`&.${Y1.multiple}`]: r.multiple
    }];
  }
})(zD), FD = ({
  ownerState: e,
  theme: r
}) => C({
  // We use a position absolute over a flexbox in order to forward the pointer events
  // to the input and to support wrapping tags..
  position: "absolute",
  right: 0,
  top: "calc(50% - .5em)",
  // Center vertically, height is 1em
  pointerEvents: "none",
  // Don't block pointer events on the select under the icon.
  color: (r.vars || r).palette.action.active,
  [`&.${Y1.disabled}`]: {
    color: (r.vars || r).palette.action.disabled
  }
}, e.open && {
  transform: "rotate(180deg)"
}, e.variant === "filled" && {
  right: 7
}, e.variant === "outlined" && {
  right: 7
}), Mq = Z("svg", {
  name: "MuiNativeSelect",
  slot: "Icon",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.icon, s.variant && r[`icon${oe(s.variant)}`], s.open && r.iconOpen];
  }
})(FD), jD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const {
    className: u,
    disabled: f,
    error: v,
    IconComponent: m,
    inputRef: y,
    variant: b = "standard"
  } = r, S = me(r, kq), E = C({}, r, {
    disabled: f,
    variant: b,
    error: v
  }), k = Nq(E);
  return /* @__PURE__ */ gt(O.Fragment, {
    children: [/* @__PURE__ */ z($q, C({
      ownerState: E,
      className: pe(k.select, u),
      disabled: f,
      ref: y || s
    }, S)), r.multiple ? null : /* @__PURE__ */ z(Mq, {
      as: m,
      ownerState: E,
      className: k.icon
    })]
  });
});
process.env.NODE_ENV !== "production" && (jD.propTypes = {
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * The CSS class name of the select element.
   */
  className: n.string,
  /**
   * If `true`, the select is disabled.
   */
  disabled: n.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: n.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: n.elementType.isRequired,
  /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */
  inputRef: Tr,
  /**
   * @ignore
   */
  multiple: n.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: n.string,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: n.func,
  /**
   * The input value.
   */
  value: n.any,
  /**
   * The variant to use.
   */
  variant: n.oneOf(["standard", "outlined", "filled"])
});
const UD = jD, Dq = ["className", "children", "classes", "IconComponent", "input", "inputProps", "variant"], Pq = ["root"], Lq = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"]
  }, BD, r);
}, Iq = /* @__PURE__ */ z(W1, {}), K1 = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    name: "MuiNativeSelect",
    props: r
  }), {
    className: f,
    children: v,
    classes: m = {},
    IconComponent: y = A1,
    input: b = Iq,
    inputProps: S
  } = u, E = me(u, Dq), k = Wi(), D = $l({
    props: u,
    muiFormControl: k,
    states: ["variant"]
  }), M = C({}, u, {
    classes: m
  }), P = Lq(M), L = me(m, Pq);
  return /* @__PURE__ */ z(O.Fragment, {
    children: /* @__PURE__ */ O.cloneElement(b, C({
      // Most of the logic is implemented in `NativeSelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: UD,
      inputProps: C({
        children: v,
        classes: L,
        IconComponent: y,
        variant: D.variant,
        type: void 0
      }, S, b ? b.props.inputProps : {}),
      ref: s
    }, E, {
      className: pe(P.root, b.props.className, f)
    }))
  });
});
process.env.NODE_ENV !== "production" && (K1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: n.elementType,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   * @default <Input />
   */
  input: n.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attributes) applied to the `select` element.
   */
  inputProps: n.object,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {React.ChangeEvent<HTMLSelectElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: n.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The `input` value. The DOM API casts this to a string.
   */
  value: n.any,
  /**
   * The variant to use.
   */
  variant: n.oneOf(["filled", "outlined", "standard"])
});
K1.muiName = "Select";
const gte = K1;
var fN;
const _q = ["children", "classes", "className", "label", "notched"], Aq = Z("fieldset", {
  shouldForwardProp: ko
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), Bq = Z("legend", {
  shouldForwardProp: ko
})(({
  ownerState: e,
  theme: r
}) => C({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden"
}, !e.withLabel && {
  padding: 0,
  lineHeight: "11px",
  // sync with `height` in `legend` styles
  transition: r.transitions.create("width", {
    duration: 150,
    easing: r.transitions.easing.easeOut
  })
}, e.withLabel && C({
  display: "block",
  // Fix conflict with normalize.css and sanitize.css
  padding: 0,
  height: 11,
  // sync with `lineHeight` in `legend` styles
  fontSize: "0.75em",
  visibility: "hidden",
  maxWidth: 0.01,
  transition: r.transitions.create("max-width", {
    duration: 50,
    easing: r.transitions.easing.easeOut
  }),
  whiteSpace: "nowrap",
  "& > span": {
    paddingLeft: 5,
    paddingRight: 5,
    display: "inline-block",
    opacity: 0,
    visibility: "visible"
  }
}, e.notched && {
  maxWidth: "100%",
  transition: r.transitions.create("max-width", {
    duration: 100,
    easing: r.transitions.easing.easeOut,
    delay: 50
  })
})));
function VD(e) {
  const {
    className: r,
    label: s,
    notched: u
  } = e, f = me(e, _q), v = s != null && s !== "", m = C({}, e, {
    notched: u,
    withLabel: v
  });
  return /* @__PURE__ */ z(Aq, C({
    "aria-hidden": !0,
    className: r,
    ownerState: m
  }, f, {
    children: /* @__PURE__ */ z(Bq, {
      ownerState: m,
      children: v ? /* @__PURE__ */ z("span", {
        children: s
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        fN || (fN = /* @__PURE__ */ z("span", {
          className: "notranslate",
          children: "​"
        }))
      )
    })
  }));
}
process.env.NODE_ENV !== "production" && (VD.propTypes = {
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The label.
   */
  label: n.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: n.bool.isRequired,
  /**
   * @ignore
   */
  style: n.object
});
const zq = ["components", "fullWidth", "inputComponent", "label", "multiline", "notched", "slots", "type"], Fq = (e) => {
  const {
    classes: r
  } = e, u = Ue({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, jH, r);
  return C({}, r, u);
}, jq = Z(z0, {
  shouldForwardProp: (e) => ko(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: A0
})(({
  theme: e,
  ownerState: r
}) => {
  const s = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return C({
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${ws.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${ws.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : s
      }
    },
    [`&.${ws.focused} .${ws.notchedOutline}`]: {
      borderColor: (e.vars || e).palette[r.color].main,
      borderWidth: 2
    },
    [`&.${ws.error} .${ws.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.error.main
    },
    [`&.${ws.disabled} .${ws.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.action.disabled
    }
  }, r.startAdornment && {
    paddingLeft: 14
  }, r.endAdornment && {
    paddingRight: 14
  }, r.multiline && C({
    padding: "16.5px 14px"
  }, r.size === "small" && {
    padding: "8.5px 14px"
  }));
}), Uq = Z(VD, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, r) => r.notchedOutline
})(({
  theme: e
}) => {
  const r = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : r
  };
}), Vq = Z(F0, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: B0
})(({
  theme: e,
  ownerState: r
}) => C({
  padding: "16.5px 14px"
}, !e.vars && {
  "&:-webkit-autofill": {
    WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
    WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
    caretColor: e.palette.mode === "light" ? null : "#fff",
    borderRadius: "inherit"
  }
}, e.vars && {
  "&:-webkit-autofill": {
    borderRadius: "inherit"
  },
  [e.getColorSchemeSelector("dark")]: {
    "&:-webkit-autofill": {
      WebkitBoxShadow: "0 0 0 100px #266798 inset",
      WebkitTextFillColor: "#fff",
      caretColor: "#fff"
    }
  }
}, r.size === "small" && {
  padding: "8.5px 14px"
}, r.multiline && {
  padding: 0
}, r.startAdornment && {
  paddingLeft: 0
}, r.endAdornment && {
  paddingRight: 0
})), X1 = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u, f, v, m, y;
  const b = Ve({
    props: r,
    name: "MuiOutlinedInput"
  }), {
    components: S = {},
    fullWidth: E = !1,
    inputComponent: k = "input",
    label: D,
    multiline: M = !1,
    notched: P,
    slots: L = {},
    type: w = "text"
  } = b, _ = me(b, zq), V = Fq(b), A = Wi(), j = $l({
    props: b,
    muiFormControl: A,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), U = C({}, b, {
    color: j.color || "primary",
    disabled: j.disabled,
    error: j.error,
    focused: j.focused,
    formControl: A,
    fullWidth: E,
    hiddenLabel: j.hiddenLabel,
    multiline: M,
    size: j.size,
    type: w
  }), $ = (u = (f = L.root) != null ? f : S.Root) != null ? u : jq, F = (v = (m = L.input) != null ? m : S.Input) != null ? v : Vq;
  return /* @__PURE__ */ z(j0, C({
    slots: {
      root: $,
      input: F
    },
    renderSuffix: (G) => /* @__PURE__ */ z(Uq, {
      ownerState: U,
      className: V.notchedOutline,
      label: D != null && D !== "" && j.required ? y || (y = /* @__PURE__ */ gt(O.Fragment, {
        children: [D, " ", "*"]
      })) : D,
      notched: typeof P < "u" ? P : !!(G.startAdornment || G.filled || G.focused)
    }),
    fullWidth: E,
    inputComponent: k,
    multiline: M,
    ref: s,
    type: w
  }, _, {
    classes: C({}, V, {
      notchedOutline: null
    })
  }));
});
process.env.NODE_ENV !== "production" && (X1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: n.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: n.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: n.oneOfType([n.oneOf(["primary", "secondary"]), n.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: n.shape({
    Input: n.elementType,
    Root: n.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: n.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: n.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: n.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: n.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: n.bool,
  /**
   * The id of the `input` element.
   */
  id: n.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: n.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: n.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Tr,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: n.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: n.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: n.oneOfType([n.number, n.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: n.oneOfType([n.number, n.string]),
  /**
   * If `true`, a [TextareaAutosize](/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: n.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: n.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: n.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: n.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: n.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: n.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: n.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: n.oneOfType([n.number, n.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: n.shape({
    input: n.elementType,
    root: n.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: n.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: n.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: n.any
});
X1.muiName = "Input";
const HD = X1;
function Hq(e) {
  return je("MuiPagination", e);
}
const Wq = He("MuiPagination", ["root", "ul", "outlined", "text"]), yte = Wq, Gq = ["boundaryCount", "componentName", "count", "defaultPage", "disabled", "hideNextButton", "hidePrevButton", "onChange", "page", "showFirstButton", "showLastButton", "siblingCount"];
function qq(e = {}) {
  const {
    boundaryCount: r = 1,
    componentName: s = "usePagination",
    count: u = 1,
    defaultPage: f = 1,
    disabled: v = !1,
    hideNextButton: m = !1,
    hidePrevButton: y = !1,
    onChange: b,
    page: S,
    showFirstButton: E = !1,
    showLastButton: k = !1,
    siblingCount: D = 1
  } = e, M = me(e, Gq), [P, L] = za({
    controlled: S,
    default: f,
    name: s,
    state: "page"
  }), w = (Y, Q) => {
    S || L(Q), b && b(Y, Q);
  }, _ = (Y, Q) => {
    const q = Q - Y + 1;
    return Array.from({
      length: q
    }, (re, ee) => Y + ee);
  }, V = _(1, Math.min(r, u)), A = _(Math.max(u - r + 1, r + 1), u), j = Math.max(
    Math.min(
      // Natural start
      P - D,
      // Lower boundary when page is high
      u - r - D * 2 - 1
    ),
    // Greater than startPages
    r + 2
  ), U = Math.min(
    Math.max(
      // Natural end
      P + D,
      // Upper boundary when page is low
      r + D * 2 + 2
    ),
    // Less than endPages
    A.length > 0 ? A[0] - 2 : u - 1
  ), $ = [
    ...E ? ["first"] : [],
    ...y ? [] : ["previous"],
    ...V,
    // Start ellipsis
    // eslint-disable-next-line no-nested-ternary
    ...j > r + 2 ? ["start-ellipsis"] : r + 1 < u - r ? [r + 1] : [],
    // Sibling pages
    ..._(j, U),
    // End ellipsis
    // eslint-disable-next-line no-nested-ternary
    ...U < u - r - 1 ? ["end-ellipsis"] : u - r > r ? [u - r] : [],
    ...A,
    ...m ? [] : ["next"],
    ...k ? ["last"] : []
  ], F = (Y) => {
    switch (Y) {
      case "first":
        return 1;
      case "previous":
        return P - 1;
      case "next":
        return P + 1;
      case "last":
        return u;
      default:
        return null;
    }
  }, G = $.map((Y) => typeof Y == "number" ? {
    onClick: (Q) => {
      w(Q, Y);
    },
    type: "page",
    page: Y,
    selected: Y === P,
    disabled: v,
    "aria-current": Y === P ? "true" : void 0
  } : {
    onClick: (Q) => {
      w(Q, F(Y));
    },
    type: Y,
    page: F(Y),
    selected: !1,
    disabled: v || Y.indexOf("ellipsis") === -1 && (Y === "next" || Y === "last" ? P >= u : P <= 1)
  });
  return C({
    items: G
  }, M);
}
function Yq(e) {
  return je("MuiPaginationItem", e);
}
const Kq = He("MuiPaginationItem", ["root", "page", "sizeSmall", "sizeLarge", "text", "textPrimary", "textSecondary", "outlined", "outlinedPrimary", "outlinedSecondary", "rounded", "ellipsis", "firstLast", "previousNext", "focusVisible", "disabled", "selected", "icon", "colorPrimary", "colorSecondary"]), ni = Kq, i1 = Kn(/* @__PURE__ */ z("path", {
  d: "M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"
}), "FirstPage"), s1 = Kn(/* @__PURE__ */ z("path", {
  d: "M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"
}), "LastPage"), mN = Kn(/* @__PURE__ */ z("path", {
  d: "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
}), "NavigateBefore"), vN = Kn(/* @__PURE__ */ z("path", {
  d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
}), "NavigateNext"), Xq = ["className", "color", "component", "components", "disabled", "page", "selected", "shape", "size", "slots", "type", "variant"], WD = (e, r) => {
  const {
    ownerState: s
  } = e;
  return [r.root, r[s.variant], r[`size${oe(s.size)}`], s.variant === "text" && r[`text${oe(s.color)}`], s.variant === "outlined" && r[`outlined${oe(s.color)}`], s.shape === "rounded" && r.rounded, s.type === "page" && r.page, (s.type === "start-ellipsis" || s.type === "end-ellipsis") && r.ellipsis, (s.type === "previous" || s.type === "next") && r.previousNext, (s.type === "first" || s.type === "last") && r.firstLast];
}, Qq = (e) => {
  const {
    classes: r,
    color: s,
    disabled: u,
    selected: f,
    size: v,
    shape: m,
    type: y,
    variant: b
  } = e, S = {
    root: ["root", `size${oe(v)}`, b, m, s !== "standard" && `color${oe(s)}`, s !== "standard" && `${b}${oe(s)}`, u && "disabled", f && "selected", {
      page: "page",
      first: "firstLast",
      last: "firstLast",
      "start-ellipsis": "ellipsis",
      "end-ellipsis": "ellipsis",
      previous: "previousNext",
      next: "previousNext"
    }[y]],
    icon: ["icon"]
  };
  return Ue(S, Yq, r);
}, Zq = Z("div", {
  name: "MuiPaginationItem",
  slot: "Root",
  overridesResolver: WD
})(({
  theme: e,
  ownerState: r
}) => C({}, e.typography.body2, {
  borderRadius: 32 / 2,
  textAlign: "center",
  boxSizing: "border-box",
  minWidth: 32,
  padding: "0 6px",
  margin: "0 3px",
  color: (e.vars || e).palette.text.primary,
  height: "auto",
  [`&.${ni.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  }
}, r.size === "small" && {
  minWidth: 26,
  borderRadius: 26 / 2,
  margin: "0 1px",
  padding: "0 4px"
}, r.size === "large" && {
  minWidth: 40,
  borderRadius: 40 / 2,
  padding: "0 10px",
  fontSize: e.typography.pxToRem(15)
})), Jq = Z(er, {
  name: "MuiPaginationItem",
  slot: "Root",
  overridesResolver: WD
})(({
  theme: e,
  ownerState: r
}) => C({}, e.typography.body2, {
  borderRadius: 32 / 2,
  textAlign: "center",
  boxSizing: "border-box",
  minWidth: 32,
  height: 32,
  padding: "0 6px",
  margin: "0 3px",
  color: (e.vars || e).palette.text.primary,
  [`&.${ni.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette.action.focus
  },
  [`&.${ni.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  },
  transition: e.transitions.create(["color", "background-color"], {
    duration: e.transitions.duration.short
  }),
  "&:hover": {
    backgroundColor: (e.vars || e).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${ni.selected}`]: {
    backgroundColor: (e.vars || e).palette.action.selected,
    "&:hover": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Ut(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (e.vars || e).palette.action.selected
      }
    },
    [`&.${ni.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Ut(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
    },
    [`&.${ni.disabled}`]: {
      opacity: 1,
      color: (e.vars || e).palette.action.disabled,
      backgroundColor: (e.vars || e).palette.action.selected
    }
  }
}, r.size === "small" && {
  minWidth: 26,
  height: 26,
  borderRadius: 26 / 2,
  margin: "0 1px",
  padding: "0 4px"
}, r.size === "large" && {
  minWidth: 40,
  height: 40,
  borderRadius: 40 / 2,
  padding: "0 10px",
  fontSize: e.typography.pxToRem(15)
}, r.shape === "rounded" && {
  borderRadius: (e.vars || e).shape.borderRadius
}), ({
  theme: e,
  ownerState: r
}) => C({}, r.variant === "text" && {
  [`&.${ni.selected}`]: C({}, r.color !== "standard" && {
    color: (e.vars || e).palette[r.color].contrastText,
    backgroundColor: (e.vars || e).palette[r.color].main,
    "&:hover": {
      backgroundColor: (e.vars || e).palette[r.color].dark,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (e.vars || e).palette[r.color].main
      }
    },
    [`&.${ni.focusVisible}`]: {
      backgroundColor: (e.vars || e).palette[r.color].dark
    }
  }, {
    [`&.${ni.disabled}`]: {
      color: (e.vars || e).palette.action.disabled
    }
  })
}, r.variant === "outlined" && {
  border: e.vars ? `1px solid rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"}`,
  [`&.${ni.selected}`]: C({}, r.color !== "standard" && {
    color: (e.vars || e).palette[r.color].main,
    border: `1px solid ${e.vars ? `rgba(${e.vars.palette[r.color].mainChannel} / 0.5)` : Ut(e.palette[r.color].main, 0.5)}`,
    backgroundColor: e.vars ? `rgba(${e.vars.palette[r.color].mainChannel} / ${e.vars.palette.action.activatedOpacity})` : Ut(e.palette[r.color].main, e.palette.action.activatedOpacity),
    "&:hover": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette[r.color].mainChannel} / calc(${e.vars.palette.action.activatedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Ut(e.palette[r.color].main, e.palette.action.activatedOpacity + e.palette.action.focusOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    [`&.${ni.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette[r.color].mainChannel} / calc(${e.vars.palette.action.activatedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Ut(e.palette[r.color].main, e.palette.action.activatedOpacity + e.palette.action.focusOpacity)
    }
  }, {
    [`&.${ni.disabled}`]: {
      borderColor: (e.vars || e).palette.action.disabledBackground,
      color: (e.vars || e).palette.action.disabled
    }
  })
})), eY = Z("div", {
  name: "MuiPaginationItem",
  slot: "Icon",
  overridesResolver: (e, r) => r.icon
})(({
  theme: e,
  ownerState: r
}) => C({
  fontSize: e.typography.pxToRem(20),
  margin: "0 -8px"
}, r.size === "small" && {
  fontSize: e.typography.pxToRem(18)
}, r.size === "large" && {
  fontSize: e.typography.pxToRem(22)
})), GD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiPaginationItem"
  }), {
    className: f,
    color: v = "standard",
    component: m,
    components: y = {},
    disabled: b = !1,
    page: S,
    selected: E = !1,
    shape: k = "circular",
    size: D = "medium",
    slots: M = {},
    type: P = "page",
    variant: L = "text"
  } = u, w = me(u, Xq), _ = C({}, u, {
    color: v,
    disabled: b,
    selected: E,
    shape: k,
    size: D,
    type: P,
    variant: L
  }), V = to(), A = Qq(_), U = (V.direction === "rtl" ? {
    previous: M.next || y.next || vN,
    next: M.previous || y.previous || mN,
    last: M.first || y.first || i1,
    first: M.last || y.last || s1
  } : {
    previous: M.previous || y.previous || mN,
    next: M.next || y.next || vN,
    first: M.first || y.first || i1,
    last: M.last || y.last || s1
  })[P];
  return P === "start-ellipsis" || P === "end-ellipsis" ? /* @__PURE__ */ z(Zq, {
    ref: s,
    ownerState: _,
    className: pe(A.root, f),
    children: "…"
  }) : /* @__PURE__ */ gt(Jq, C({
    ref: s,
    ownerState: _,
    component: m,
    disabled: b,
    className: pe(A.root, f)
  }, w, {
    children: [P === "page" && S, U ? /* @__PURE__ */ z(eY, {
      as: U,
      ownerState: _,
      className: A.icon
    }) : null]
  }));
});
process.env.NODE_ENV !== "production" && (GD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The active color.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'standard'
   */
  color: n.oneOfType([n.oneOf(["primary", "secondary", "standard"]), n.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: n.shape({
    first: n.elementType,
    last: n.elementType,
    next: n.elementType,
    previous: n.elementType
  }),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * The current page number.
   */
  page: n.node,
  /**
   * If `true` the pagination item is selected.
   * @default false
   */
  selected: n.bool,
  /**
   * The shape of the pagination item.
   * @default 'circular'
   */
  shape: n.oneOf(["circular", "rounded"]),
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: n.oneOfType([n.oneOf(["small", "medium", "large"]), n.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: n.shape({
    first: n.elementType,
    last: n.elementType,
    next: n.elementType,
    previous: n.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The type of pagination item.
   * @default 'page'
   */
  type: n.oneOf(["end-ellipsis", "first", "last", "next", "page", "previous", "start-ellipsis"]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: n.oneOfType([n.oneOf(["outlined", "text"]), n.string])
});
const tY = GD, nY = ["boundaryCount", "className", "color", "count", "defaultPage", "disabled", "getItemAriaLabel", "hideNextButton", "hidePrevButton", "onChange", "page", "renderItem", "shape", "showFirstButton", "showLastButton", "siblingCount", "size", "variant"], oY = (e) => {
  const {
    classes: r,
    variant: s
  } = e;
  return Ue({
    root: ["root", s],
    ul: ["ul"]
  }, Hq, r);
}, rY = Z("nav", {
  name: "MuiPagination",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[s.variant]];
  }
})({}), aY = Z("ul", {
  name: "MuiPagination",
  slot: "Ul",
  overridesResolver: (e, r) => r.ul
})({
  display: "flex",
  flexWrap: "wrap",
  alignItems: "center",
  padding: 0,
  margin: 0,
  listStyle: "none"
});
function iY(e, r, s) {
  return e === "page" ? `${s ? "" : "Go to "}page ${r}` : `Go to ${e} page`;
}
const qD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiPagination"
  }), {
    boundaryCount: f = 1,
    className: v,
    color: m = "standard",
    count: y = 1,
    defaultPage: b = 1,
    disabled: S = !1,
    getItemAriaLabel: E = iY,
    hideNextButton: k = !1,
    hidePrevButton: D = !1,
    renderItem: M = (G) => /* @__PURE__ */ z(tY, C({}, G)),
    shape: P = "circular",
    showFirstButton: L = !1,
    showLastButton: w = !1,
    siblingCount: _ = 1,
    size: V = "medium",
    variant: A = "text"
  } = u, j = me(u, nY), {
    items: U
  } = qq(C({}, u, {
    componentName: "Pagination"
  })), $ = C({}, u, {
    boundaryCount: f,
    color: m,
    count: y,
    defaultPage: b,
    disabled: S,
    getItemAriaLabel: E,
    hideNextButton: k,
    hidePrevButton: D,
    renderItem: M,
    shape: P,
    showFirstButton: L,
    showLastButton: w,
    siblingCount: _,
    size: V,
    variant: A
  }), F = oY($);
  return /* @__PURE__ */ z(rY, C({
    "aria-label": "pagination navigation",
    className: pe(F.root, v),
    ownerState: $,
    ref: s
  }, j, {
    children: /* @__PURE__ */ z(aY, {
      className: F.ul,
      ownerState: $,
      children: U.map((G, Y) => /* @__PURE__ */ z("li", {
        children: M(C({}, G, {
          color: m,
          "aria-label": E(G.type, G.page, G.selected),
          shape: P,
          size: V,
          variant: A
        }))
      }, Y))
    })
  }));
});
process.env.NODE_ENV !== "production" && (qD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Number of always visible pages at the beginning and end.
   * @default 1
   */
  boundaryCount: Co,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The active color.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'standard'
   */
  color: n.oneOfType([n.oneOf(["primary", "secondary", "standard"]), n.string]),
  /**
   * The total number of pages.
   * @default 1
   */
  count: Co,
  /**
   * The page selected by default when the component is uncontrolled.
   * @default 1
   */
  defaultPage: Co,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous' | 'start-ellipsis' | 'end-ellipsis'). Defaults to 'page'.
   * @param {number} page The page number to format.
   * @param {bool} selected If true, the current page is selected.
   * @returns {string}
   */
  getItemAriaLabel: n.func,
  /**
   * If `true`, hide the next-page button.
   * @default false
   */
  hideNextButton: n.bool,
  /**
   * If `true`, hide the previous-page button.
   * @default false
   */
  hidePrevButton: n.bool,
  /**
   * Callback fired when the page is changed.
   *
   * @param {React.ChangeEvent<unknown>} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onChange: n.func,
  /**
   * The current page.
   */
  page: Co,
  /**
   * Render the item.
   * @param {PaginationRenderItemParams} params The props to spread on a PaginationItem.
   * @returns {ReactNode}
   * @default (item) => <PaginationItem {...item} />
   */
  renderItem: n.func,
  /**
   * The shape of the pagination items.
   * @default 'circular'
   */
  shape: n.oneOf(["circular", "rounded"]),
  /**
   * If `true`, show the first-page button.
   * @default false
   */
  showFirstButton: n.bool,
  /**
   * If `true`, show the last-page button.
   * @default false
   */
  showLastButton: n.bool,
  /**
   * Number of always visible pages before and after the current page.
   * @default 1
   */
  siblingCount: Co,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: n.oneOfType([n.oneOf(["small", "medium", "large"]), n.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: n.oneOfType([n.oneOf(["outlined", "text"]), n.string])
});
const bte = qD, sY = Kn(/* @__PURE__ */ z("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "RadioButtonUnchecked"), lY = Kn(/* @__PURE__ */ z("path", {
  d: "M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
}), "RadioButtonChecked"), cY = Z("span", {
  shouldForwardProp: ko
})({
  position: "relative",
  display: "flex"
}), uY = Z(sY)({
  // Scale applied to prevent dot misalignment in Safari
  transform: "scale(1)"
}), dY = Z(lY)(({
  theme: e,
  ownerState: r
}) => C({
  left: 0,
  position: "absolute",
  transform: "scale(0)",
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeIn,
    duration: e.transitions.duration.shortest
  })
}, r.checked && {
  transform: "scale(1)",
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeOut,
    duration: e.transitions.duration.shortest
  })
}));
function Q1(e) {
  const {
    checked: r = !1,
    classes: s = {},
    fontSize: u
  } = e, f = C({}, e, {
    checked: r
  });
  return /* @__PURE__ */ gt(cY, {
    className: s.root,
    ownerState: f,
    children: [/* @__PURE__ */ z(uY, {
      fontSize: u,
      className: s.background,
      ownerState: f
    }), /* @__PURE__ */ z(dY, {
      fontSize: u,
      className: s.dot,
      ownerState: f
    })]
  });
}
process.env.NODE_ENV !== "production" && (Q1.propTypes = {
  /**
   * If `true`, the component is checked.
   */
  checked: n.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   */
  fontSize: n.oneOf(["small", "medium"])
});
const YD = /* @__PURE__ */ O.createContext(void 0);
process.env.NODE_ENV !== "production" && (YD.displayName = "RadioGroupContext");
const KD = YD;
function pY() {
  return O.useContext(KD);
}
function fY(e) {
  return je("MuiRadio", e);
}
const mY = He("MuiRadio", ["root", "checked", "disabled", "colorPrimary", "colorSecondary", "sizeSmall"]), hN = mY, vY = ["checked", "checkedIcon", "color", "icon", "name", "onChange", "size", "className"], hY = (e) => {
  const {
    classes: r,
    color: s,
    size: u
  } = e, f = {
    root: ["root", `color${oe(s)}`, u !== "medium" && `size${oe(u)}`]
  };
  return C({}, r, Ue(f, fY, r));
}, gY = Z(B1, {
  shouldForwardProp: (e) => ko(e) || e === "classes",
  name: "MuiRadio",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.size !== "medium" && r[`size${oe(s.size)}`], r[`color${oe(s.color)}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  color: (e.vars || e).palette.text.secondary
}, !r.disableRipple && {
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${r.color === "default" ? e.vars.palette.action.activeChannel : e.vars.palette[r.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Ut(r.color === "default" ? e.palette.action.active : e.palette[r.color].main, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  }
}, r.color !== "default" && {
  [`&.${hN.checked}`]: {
    color: (e.vars || e).palette[r.color].main
  }
}, {
  [`&.${hN.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  }
}));
function yY(e, r) {
  return typeof r == "object" && r !== null ? e === r : String(e) === String(r);
}
const gN = /* @__PURE__ */ z(Q1, {
  checked: !0
}), yN = /* @__PURE__ */ z(Q1, {}), XD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u, f;
  const v = Ve({
    props: r,
    name: "MuiRadio"
  }), {
    checked: m,
    checkedIcon: y = gN,
    color: b = "primary",
    icon: S = yN,
    name: E,
    onChange: k,
    size: D = "medium",
    className: M
  } = v, P = me(v, vY), L = C({}, v, {
    color: b,
    size: D
  }), w = hY(L), _ = pY();
  let V = m;
  const A = GT(k, _ && _.onChange);
  let j = E;
  return _ && (typeof V > "u" && (V = yY(_.value, v.value)), typeof j > "u" && (j = _.name)), /* @__PURE__ */ z(gY, C({
    type: "radio",
    icon: /* @__PURE__ */ O.cloneElement(S, {
      fontSize: (u = yN.props.fontSize) != null ? u : D
    }),
    checkedIcon: /* @__PURE__ */ O.cloneElement(y, {
      fontSize: (f = gN.props.fontSize) != null ? f : D
    }),
    ownerState: L,
    classes: w,
    name: j,
    checked: V,
    onChange: A,
    ref: s,
    className: pe(w.root, M)
  }, P));
});
process.env.NODE_ENV !== "production" && (XD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: n.bool,
  /**
   * The icon to display when the component is checked.
   * @default <RadioButtonIcon checked />
   */
  checkedIcon: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: n.oneOfType([n.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), n.string]),
  /**
   * If `true`, the component is disabled.
   */
  disabled: n.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: n.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <RadioButtonIcon />
   */
  icon: n.node,
  /**
   * The id of the `input` element.
   */
  id: n.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: n.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Tr,
  /**
   * Name attribute of the `input` element.
   */
  name: n.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: n.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: n.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   * @default 'medium'
   */
  size: n.oneOfType([n.oneOf(["medium", "small"]), n.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   */
  value: n.any
});
const Cte = XD, bY = ["actions", "children", "defaultValue", "name", "onChange", "value"], QD = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: u,
    children: f,
    defaultValue: v,
    name: m,
    onChange: y,
    value: b
  } = r, S = me(r, bY), E = O.useRef(null), [k, D] = za({
    controlled: b,
    default: v,
    name: "RadioGroup"
  });
  O.useImperativeHandle(u, () => ({
    focus: () => {
      let w = E.current.querySelector("input:not(:disabled):checked");
      w || (w = E.current.querySelector("input:not(:disabled)")), w && w.focus();
    }
  }), []);
  const M = yn(s, E), P = Ms(m), L = O.useMemo(() => ({
    name: P,
    onChange(w) {
      D(w.target.value), y && y(w, w.target.value);
    },
    value: k
  }), [P, y, D, k]);
  return /* @__PURE__ */ z(KD.Provider, {
    value: L,
    children: /* @__PURE__ */ z(a9, C({
      role: "radiogroup",
      ref: M
    }, S, {
      children: f
    }))
  });
});
process.env.NODE_ENV !== "production" && (QD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: n.any,
  /**
   * The name used to reference the value of the control.
   * If you don't provide this prop, it falls back to a randomly generated name.
   */
  name: n.string,
  /**
   * Callback fired when a radio button is selected.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * @param {string} value The value of the selected radio button.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: n.func,
  /**
   * Value of the selected radio button. The DOM API casts this to a string.
   */
  value: n.any
});
const xte = QD, CY = Kn(/* @__PURE__ */ z("path", {
  d: "M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
}), "Star"), xY = Kn(/* @__PURE__ */ z("path", {
  d: "M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
}), "StarBorder");
function SY(e) {
  return je("MuiRating", e);
}
const TY = He("MuiRating", ["root", "sizeSmall", "sizeMedium", "sizeLarge", "readOnly", "disabled", "focusVisible", "visuallyHidden", "pristine", "label", "labelEmptyValueActive", "icon", "iconEmpty", "iconFilled", "iconHover", "iconFocus", "iconActive", "decimal"]), Vv = TY, EY = ["value"], RY = ["className", "defaultValue", "disabled", "emptyIcon", "emptyLabelText", "getLabelText", "highlightSelectedOnly", "icon", "IconContainerComponent", "max", "name", "onChange", "onChangeActive", "onMouseLeave", "onMouseMove", "precision", "readOnly", "size", "value"];
function OY(e) {
  const r = e.toString().split(".")[1];
  return r ? r.length : 0;
}
function AT(e, r) {
  if (e == null)
    return e;
  const s = Math.round(e / r) * r;
  return Number(s.toFixed(OY(r)));
}
const wY = (e) => {
  const {
    classes: r,
    size: s,
    readOnly: u,
    disabled: f,
    emptyValueFocused: v,
    focusVisible: m
  } = e, y = {
    root: ["root", `size${oe(s)}`, f && "disabled", m && "focusVisible", u && "readOnly"],
    label: ["label", "pristine"],
    labelEmptyValue: [v && "labelEmptyValueActive"],
    icon: ["icon"],
    iconEmpty: ["iconEmpty"],
    iconFilled: ["iconFilled"],
    iconHover: ["iconHover"],
    iconFocus: ["iconFocus"],
    iconActive: ["iconActive"],
    decimal: ["decimal"],
    visuallyHidden: ["visuallyHidden"]
  };
  return Ue(y, SY, r);
}, kY = Z("span", {
  name: "MuiRating",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [{
      [`& .${Vv.visuallyHidden}`]: r.visuallyHidden
    }, r.root, r[`size${oe(s.size)}`], s.readOnly && r.readOnly];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  display: "inline-flex",
  // Required to position the pristine input absolutely
  position: "relative",
  fontSize: e.typography.pxToRem(24),
  color: "#faaf00",
  cursor: "pointer",
  textAlign: "left",
  width: "min-content",
  WebkitTapHighlightColor: "transparent",
  [`&.${Vv.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity,
    pointerEvents: "none"
  },
  [`&.${Vv.focusVisible} .${Vv.iconActive}`]: {
    outline: "1px solid #999"
  },
  [`& .${Vv.visuallyHidden}`]: i$
}, r.size === "small" && {
  fontSize: e.typography.pxToRem(18)
}, r.size === "large" && {
  fontSize: e.typography.pxToRem(30)
}, r.readOnly && {
  pointerEvents: "none"
})), ZD = Z("label", {
  name: "MuiRating",
  slot: "Label",
  overridesResolver: ({
    ownerState: e
  }, r) => [r.label, e.emptyValueFocused && r.labelEmptyValueActive]
})(({
  ownerState: e
}) => C({
  cursor: "inherit"
}, e.emptyValueFocused && {
  top: 0,
  bottom: 0,
  position: "absolute",
  outline: "1px solid #999",
  width: "100%"
})), NY = Z("span", {
  name: "MuiRating",
  slot: "Icon",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.icon, s.iconEmpty && r.iconEmpty, s.iconFilled && r.iconFilled, s.iconHover && r.iconHover, s.iconFocus && r.iconFocus, s.iconActive && r.iconActive];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  // Fit wrapper to actual icon size.
  display: "flex",
  transition: e.transitions.create("transform", {
    duration: e.transitions.duration.shortest
  }),
  // Fix mouseLeave issue.
  // https://github.com/facebook/react/issues/4492
  pointerEvents: "none"
}, r.iconActive && {
  transform: "scale(1.2)"
}, r.iconEmpty && {
  color: (e.vars || e).palette.action.disabled
})), $Y = Z("span", {
  name: "MuiRating",
  slot: "Decimal",
  shouldForwardProp: (e) => Sh(e) && e !== "iconActive",
  overridesResolver: (e, r) => {
    const {
      iconActive: s
    } = e;
    return [r.decimal, s && r.iconActive];
  }
})(({
  iconActive: e
}) => C({
  position: "relative"
}, e && {
  transform: "scale(1.2)"
}));
function JD(e) {
  const r = me(e, EY);
  return /* @__PURE__ */ z("span", C({}, r));
}
process.env.NODE_ENV !== "production" && (JD.propTypes = {
  value: n.number.isRequired
});
function l1(e) {
  const {
    classes: r,
    disabled: s,
    emptyIcon: u,
    focus: f,
    getLabelText: v,
    highlightSelectedOnly: m,
    hover: y,
    icon: b,
    IconContainerComponent: S,
    isActive: E,
    itemValue: k,
    labelProps: D,
    name: M,
    onBlur: P,
    onChange: L,
    onClick: w,
    onFocus: _,
    readOnly: V,
    ownerState: A,
    ratingValue: j,
    ratingValueRounded: U
  } = e, $ = m ? k === j : k <= j, F = k <= y, G = k <= f, Y = k === U, Q = Ms(), q = /* @__PURE__ */ z(NY, {
    as: S,
    value: k,
    className: pe(r.icon, $ ? r.iconFilled : r.iconEmpty, F && r.iconHover, G && r.iconFocus, E && r.iconActive),
    ownerState: C({}, A, {
      iconEmpty: !$,
      iconFilled: $,
      iconHover: F,
      iconFocus: G,
      iconActive: E
    }),
    children: u && !$ ? u : b
  });
  return V ? /* @__PURE__ */ z("span", C({}, D, {
    children: q
  })) : /* @__PURE__ */ gt(O.Fragment, {
    children: [/* @__PURE__ */ gt(ZD, C({
      ownerState: C({}, A, {
        emptyValueFocused: void 0
      }),
      htmlFor: Q
    }, D, {
      children: [q, /* @__PURE__ */ z("span", {
        className: r.visuallyHidden,
        children: v(k)
      })]
    })), /* @__PURE__ */ z("input", {
      className: r.visuallyHidden,
      onFocus: _,
      onBlur: P,
      onChange: L,
      onClick: w,
      disabled: s,
      value: k,
      id: Q,
      type: "radio",
      name: M,
      checked: Y
    })]
  });
}
process.env.NODE_ENV !== "production" && (l1.propTypes = {
  classes: n.object.isRequired,
  disabled: n.bool.isRequired,
  emptyIcon: n.node,
  focus: n.number.isRequired,
  getLabelText: n.func.isRequired,
  highlightSelectedOnly: n.bool.isRequired,
  hover: n.number.isRequired,
  icon: n.node,
  IconContainerComponent: n.elementType.isRequired,
  isActive: n.bool.isRequired,
  itemValue: n.number.isRequired,
  labelProps: n.object,
  name: n.string,
  onBlur: n.func.isRequired,
  onChange: n.func.isRequired,
  onClick: n.func.isRequired,
  onFocus: n.func.isRequired,
  ownerState: n.object.isRequired,
  ratingValue: n.number,
  ratingValueRounded: n.number,
  readOnly: n.bool.isRequired
});
const MY = /* @__PURE__ */ z(CY, {
  fontSize: "inherit"
}), DY = /* @__PURE__ */ z(xY, {
  fontSize: "inherit"
});
function PY(e) {
  return `${e} Star${e !== 1 ? "s" : ""}`;
}
const eP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    name: "MuiRating",
    props: r
  }), {
    className: f,
    defaultValue: v = null,
    disabled: m = !1,
    emptyIcon: y = DY,
    emptyLabelText: b = "Empty",
    getLabelText: S = PY,
    highlightSelectedOnly: E = !1,
    icon: k = MY,
    IconContainerComponent: D = JD,
    max: M = 5,
    name: P,
    onChange: L,
    onChangeActive: w,
    onMouseLeave: _,
    onMouseMove: V,
    precision: A = 1,
    readOnly: j = !1,
    size: U = "medium",
    value: $
  } = u, F = me(u, RY), G = Ms(P), [Y, Q] = za({
    controlled: $,
    default: v,
    name: "Rating"
  }), q = AT(Y, A), re = to(), [{
    hover: ee,
    focus: J
  }, ce] = O.useState({
    hover: -1,
    focus: -1
  });
  let de = q;
  ee !== -1 && (de = ee), J !== -1 && (de = J);
  const {
    isFocusVisibleRef: fe,
    onBlur: K,
    onFocus: ne,
    ref: ve
  } = bh(), [Ke, tt] = O.useState(!1), Ie = O.useRef(), De = yn(ve, Ie, s), Ye = ($e) => {
    V && V($e);
    const Oe = Ie.current, {
      right: dt,
      left: it,
      width: zt
    } = Oe.getBoundingClientRect();
    let Dt;
    re.direction === "rtl" ? Dt = (dt - $e.clientX) / zt : Dt = ($e.clientX - it) / zt;
    let ht = AT(M * Dt + A / 2, A);
    ht = Lc(ht, A, M), ce((Tt) => Tt.hover === ht && Tt.focus === ht ? Tt : {
      hover: ht,
      focus: ht
    }), tt(!1), w && ee !== ht && w($e, ht);
  }, ke = ($e) => {
    _ && _($e);
    const Oe = -1;
    ce({
      hover: Oe,
      focus: Oe
    }), w && ee !== Oe && w($e, Oe);
  }, lt = ($e) => {
    let Oe = $e.target.value === "" ? null : parseFloat($e.target.value);
    ee !== -1 && (Oe = ee), Q(Oe), L && L($e, Oe);
  }, xe = ($e) => {
    $e.clientX === 0 && $e.clientY === 0 || (ce({
      hover: -1,
      focus: -1
    }), Q(null), L && parseFloat($e.target.value) === q && L($e, null));
  }, ze = ($e) => {
    ne($e), fe.current === !0 && tt(!0);
    const Oe = parseFloat($e.target.value);
    ce((dt) => ({
      hover: dt.hover,
      focus: Oe
    }));
  }, ut = ($e) => {
    if (ee !== -1)
      return;
    K($e), fe.current === !1 && tt(!1);
    const Oe = -1;
    ce((dt) => ({
      hover: dt.hover,
      focus: Oe
    }));
  }, [Xe, rt] = O.useState(!1), nt = C({}, u, {
    defaultValue: v,
    disabled: m,
    emptyIcon: y,
    emptyLabelText: b,
    emptyValueFocused: Xe,
    focusVisible: Ke,
    getLabelText: S,
    icon: k,
    IconContainerComponent: D,
    max: M,
    precision: A,
    readOnly: j,
    size: U
  }), le = wY(nt);
  return /* @__PURE__ */ gt(kY, C({
    ref: De,
    onMouseMove: Ye,
    onMouseLeave: ke,
    className: pe(le.root, f, j && "MuiRating-readOnly"),
    ownerState: nt,
    role: j ? "img" : null,
    "aria-label": j ? S(de) : null
  }, F, {
    children: [Array.from(new Array(M)).map(($e, Oe) => {
      const dt = Oe + 1, it = {
        classes: le,
        disabled: m,
        emptyIcon: y,
        focus: J,
        getLabelText: S,
        highlightSelectedOnly: E,
        hover: ee,
        icon: k,
        IconContainerComponent: D,
        name: G,
        onBlur: ut,
        onChange: lt,
        onClick: xe,
        onFocus: ze,
        ratingValue: de,
        ratingValueRounded: q,
        readOnly: j,
        ownerState: nt
      }, zt = dt === Math.ceil(de) && (ee !== -1 || J !== -1);
      if (A < 1) {
        const Dt = Array.from(new Array(1 / A));
        return /* @__PURE__ */ z($Y, {
          className: pe(le.decimal, zt && le.iconActive),
          ownerState: nt,
          iconActive: zt,
          children: Dt.map((ht, Tt) => {
            const Lt = AT(dt - 1 + (Tt + 1) * A, A);
            return /* @__PURE__ */ z(l1, C({}, it, {
              // The icon is already displayed as active
              isActive: !1,
              itemValue: Lt,
              labelProps: {
                style: Dt.length - 1 === Tt ? {} : {
                  width: Lt === de ? `${(Tt + 1) * A * 100}%` : "0%",
                  overflow: "hidden",
                  position: "absolute"
                }
              }
            }), Lt);
          })
        }, dt);
      }
      return /* @__PURE__ */ z(l1, C({}, it, {
        isActive: zt,
        itemValue: dt
      }), dt);
    }), !j && !m && /* @__PURE__ */ gt(ZD, {
      className: pe(le.label, le.labelEmptyValue),
      ownerState: nt,
      children: [/* @__PURE__ */ z("input", {
        className: le.visuallyHidden,
        value: "",
        id: `${G}-empty`,
        type: "radio",
        name: G,
        checked: q == null,
        onFocus: () => rt(!0),
        onBlur: () => rt(!1),
        onChange: lt
      }), /* @__PURE__ */ z("span", {
        className: le.visuallyHidden,
        children: b
      })]
    })]
  }));
});
process.env.NODE_ENV !== "production" && (eP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The default value. Use when the component is not controlled.
   * @default null
   */
  defaultValue: n.number,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * The icon to display when empty.
   * @default <StarBorder fontSize="inherit" />
   */
  emptyIcon: n.node,
  /**
   * The label read when the rating input is empty.
   * @default 'Empty'
   */
  emptyLabelText: n.node,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the rating.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @param {number} value The rating label's value to format.
   * @returns {string}
   * @default function defaultLabelText(value) {
   *   return `${value} Star${value !== 1 ? 's' : ''}`;
   * }
   */
  getLabelText: n.func,
  /**
   * If `true`, only the selected icon will be highlighted.
   * @default false
   */
  highlightSelectedOnly: n.bool,
  /**
   * The icon to display.
   * @default <Star fontSize="inherit" />
   */
  icon: n.node,
  /**
   * The component containing the icon.
   * @default function IconContainer(props) {
   *   const { value, ...other } = props;
   *   return <span {...other} />;
   * }
   */
  IconContainerComponent: n.elementType,
  /**
   * Maximum rating.
   * @default 5
   */
  max: n.number,
  /**
   * The name attribute of the radio `input` elements.
   * This input `name` should be unique within the page.
   * Being unique within a form is insufficient since the `name` is used to generated IDs.
   */
  name: n.string,
  /**
   * Callback fired when the value changes.
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {number|null} value The new value.
   */
  onChange: n.func,
  /**
   * Callback function that is fired when the hover state changes.
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {number} value The new value.
   */
  onChangeActive: n.func,
  /**
   * @ignore
   */
  onMouseLeave: n.func,
  /**
   * @ignore
   */
  onMouseMove: n.func,
  /**
   * The minimum increment value change allowed.
   * @default 1
   */
  precision: jo(n.number, (e) => e.precision < 0.1 ? new Error(["MUI: The prop `precision` should be above 0.1.", "A value below this limit has an imperceptible impact."].join(`
`)) : null),
  /**
   * Removes all hover effects and pointer events.
   * @default false
   */
  readOnly: n.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: n.oneOfType([n.oneOf(["small", "medium", "large"]), n.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The rating value.
   */
  value: n.number
});
const Ste = eP;
function LY(e) {
  return je("MuiScopedCssBaseline", e);
}
const IY = He("MuiScopedCssBaseline", ["root"]), Tte = IY, _Y = ["className", "component", "enableColorScheme"], AY = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"]
  }, LY, r);
}, BY = Z("div", {
  name: "MuiScopedCssBaseline",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})(({
  theme: e,
  ownerState: r
}) => {
  const s = {};
  return r.enableColorScheme && e.colorSchemes && Object.entries(e.colorSchemes).forEach(([u, f]) => {
    var v;
    s[`&${e.getColorSchemeSelector(u).replace(/\s*&/, "")}`] = {
      colorScheme: (v = f.palette) == null ? void 0 : v.mode
    };
  }), C({}, FM(e, r.enableColorScheme), jM(e), {
    "& *, & *::before, & *::after": {
      boxSizing: "inherit"
    },
    "& strong, & b": {
      fontWeight: e.typography.fontWeightBold
    }
  }, s);
}), tP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiScopedCssBaseline"
  }), {
    className: f,
    component: v = "div"
  } = u, m = me(u, _Y), y = C({}, u, {
    component: v
  }), b = AY(y);
  return /* @__PURE__ */ z(BY, C({
    as: v,
    className: pe(b.root, f),
    ref: s,
    ownerState: y
  }, m));
});
process.env.NODE_ENV !== "production" && (tP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   */
  enableColorScheme: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const Ete = tP;
function zY(e) {
  return je("MuiSelect", e);
}
const FY = He("MuiSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "focused", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]), Hv = FY;
var bN;
const jY = ["aria-describedby", "aria-label", "autoFocus", "autoWidth", "children", "className", "defaultOpen", "defaultValue", "disabled", "displayEmpty", "error", "IconComponent", "inputRef", "labelId", "MenuProps", "multiple", "name", "onBlur", "onChange", "onClose", "onFocus", "onOpen", "open", "readOnly", "renderValue", "SelectDisplayProps", "tabIndex", "type", "value", "variant"], UY = Z("div", {
  name: "MuiSelect",
  slot: "Select",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [
      // Win specificity over the input base
      {
        [`&.${Hv.select}`]: r.select
      },
      {
        [`&.${Hv.select}`]: r[s.variant]
      },
      {
        [`&.${Hv.error}`]: r.error
      },
      {
        [`&.${Hv.multiple}`]: r.multiple
      }
    ];
  }
})(zD, {
  // Win specificity over the input base
  [`&.${Hv.select}`]: {
    height: "auto",
    // Resets for multiple select with chips
    minHeight: "1.4375em",
    // Required for select\text-field height consistency
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    overflow: "hidden"
  }
}), VY = Z("svg", {
  name: "MuiSelect",
  slot: "Icon",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.icon, s.variant && r[`icon${oe(s.variant)}`], s.open && r.iconOpen];
  }
})(FD), HY = Z("input", {
  shouldForwardProp: (e) => Sh(e) && e !== "classes",
  name: "MuiSelect",
  slot: "NativeInput",
  overridesResolver: (e, r) => r.nativeInput
})({
  bottom: 0,
  left: 0,
  position: "absolute",
  opacity: 0,
  pointerEvents: "none",
  width: "100%",
  boxSizing: "border-box"
});
function CN(e, r) {
  return typeof r == "object" && r !== null ? e === r : String(e) === String(r);
}
function WY(e) {
  return e == null || typeof e == "string" && !e.trim();
}
const GY = (e) => {
  const {
    classes: r,
    variant: s,
    disabled: u,
    multiple: f,
    open: v,
    error: m
  } = e, y = {
    select: ["select", s, u && "disabled", f && "multiple", m && "error"],
    icon: ["icon", `icon${oe(s)}`, v && "iconOpen", u && "disabled"],
    nativeInput: ["nativeInput"]
  };
  return Ue(y, zY, r);
}, nP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u;
  const {
    "aria-describedby": f,
    "aria-label": v,
    autoFocus: m,
    autoWidth: y,
    children: b,
    className: S,
    defaultOpen: E,
    defaultValue: k,
    disabled: D,
    displayEmpty: M,
    error: P = !1,
    IconComponent: L,
    inputRef: w,
    labelId: _,
    MenuProps: V = {},
    multiple: A,
    name: j,
    onBlur: U,
    onChange: $,
    onClose: F,
    onFocus: G,
    onOpen: Y,
    open: Q,
    readOnly: q,
    renderValue: re,
    SelectDisplayProps: ee = {},
    tabIndex: J,
    value: ce,
    variant: de = "standard"
  } = r, fe = me(r, jY), [K, ne] = za({
    controlled: ce,
    default: k,
    name: "Select"
  }), [ve, Ke] = za({
    controlled: Q,
    default: E,
    name: "Select"
  }), tt = O.useRef(null), Ie = O.useRef(null), [De, Ye] = O.useState(null), {
    current: ke
  } = O.useRef(Q != null), [lt, xe] = O.useState(), ze = yn(s, w), ut = O.useCallback((We) => {
    Ie.current = We, We && Ye(We);
  }, []), Xe = De == null ? void 0 : De.parentNode;
  O.useImperativeHandle(ze, () => ({
    focus: () => {
      Ie.current.focus();
    },
    node: tt.current,
    value: K
  }), [K]), O.useEffect(() => {
    E && ve && De && !ke && (xe(y ? null : Xe.clientWidth), Ie.current.focus());
  }, [De, y]), O.useEffect(() => {
    m && Ie.current.focus();
  }, [m]), O.useEffect(() => {
    if (!_)
      return;
    const We = Wn(Ie.current).getElementById(_);
    if (We) {
      const we = () => {
        getSelection().isCollapsed && Ie.current.focus();
      };
      return We.addEventListener("click", we), () => {
        We.removeEventListener("click", we);
      };
    }
  }, [_]);
  const rt = (We, we) => {
    We ? Y && Y(we) : F && F(we), ke || (xe(y ? null : Xe.clientWidth), Ke(We));
  }, nt = (We) => {
    We.button === 0 && (We.preventDefault(), Ie.current.focus(), rt(!0, We));
  }, le = (We) => {
    rt(!1, We);
  }, $e = O.Children.toArray(b), Oe = (We) => {
    const we = $e.find((Fe) => Fe.props.value === We.target.value);
    we !== void 0 && (ne(we.props.value), $ && $(We, we));
  }, dt = (We) => (we) => {
    let Fe;
    if (we.currentTarget.hasAttribute("tabindex")) {
      if (A) {
        Fe = Array.isArray(K) ? K.slice() : [];
        const st = K.indexOf(We.props.value);
        st === -1 ? Fe.push(We.props.value) : Fe.splice(st, 1);
      } else
        Fe = We.props.value;
      if (We.props.onClick && We.props.onClick(we), K !== Fe && (ne(Fe), $)) {
        const st = we.nativeEvent || we, kt = new st.constructor(st.type, st);
        Object.defineProperty(kt, "target", {
          writable: !0,
          value: {
            value: Fe,
            name: j
          }
        }), $(kt, We);
      }
      A || rt(!1, we);
    }
  }, it = (We) => {
    q || [
      " ",
      "ArrowUp",
      "ArrowDown",
      // The native select doesn't respond to enter on macOS, but it's recommended by
      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/
      "Enter"
    ].indexOf(We.key) !== -1 && (We.preventDefault(), rt(!0, We));
  }, zt = De !== null && ve, Dt = (We) => {
    !zt && U && (Object.defineProperty(We, "target", {
      writable: !0,
      value: {
        value: K,
        name: j
      }
    }), U(We));
  };
  delete fe["aria-invalid"];
  let ht, Tt;
  const Lt = [];
  let At = !1, tn = !1;
  (b0({
    value: K
  }) || M) && (re ? ht = re(K) : At = !0);
  const an = $e.map((We) => {
    if (!/* @__PURE__ */ O.isValidElement(We))
      return null;
    process.env.NODE_ENV !== "production" && Hi.isFragment(We) && console.error(["MUI: The Select component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    let we;
    if (A) {
      if (!Array.isArray(K))
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: The `value` prop must be an array when using the `Select` component with `multiple`." : Ns(2));
      we = K.some((Fe) => CN(Fe, We.props.value)), we && At && Lt.push(We.props.children);
    } else
      we = CN(K, We.props.value), we && At && (Tt = We.props.children);
    return we && (tn = !0), /* @__PURE__ */ O.cloneElement(We, {
      "aria-selected": we ? "true" : "false",
      onClick: dt(We),
      onKeyUp: (Fe) => {
        Fe.key === " " && Fe.preventDefault(), We.props.onKeyUp && We.props.onKeyUp(Fe);
      },
      role: "option",
      selected: we,
      value: void 0,
      // The value is most likely not a valid HTML attribute.
      "data-value": We.props.value
      // Instead, we provide it as a data attribute.
    });
  });
  process.env.NODE_ENV !== "production" && O.useEffect(() => {
    if (!tn && !A && K !== "") {
      const We = $e.map((we) => we.props.value);
      console.warn([`MUI: You have provided an out-of-range value \`${K}\` for the select ${j ? `(name="${j}") ` : ""}component.`, "Consider providing a value that matches one of the available options or ''.", `The available values are ${We.filter((we) => we != null).map((we) => `\`${we}\``).join(", ") || '""'}.`].join(`
`));
    }
  }, [tn, $e, A, j, K]), At && (A ? Lt.length === 0 ? ht = null : ht = Lt.reduce((We, we, Fe) => (We.push(we), Fe < Lt.length - 1 && We.push(", "), We), []) : ht = Tt);
  let Qt = lt;
  !y && ke && De && (Qt = Xe.clientWidth);
  let Ce;
  typeof J < "u" ? Ce = J : Ce = D ? null : 0;
  const he = ee.id || (j ? `mui-component-select-${j}` : void 0), Qe = C({}, r, {
    variant: de,
    value: K,
    open: zt,
    error: P
  }), Me = GY(Qe), et = C({}, V.PaperProps, (u = V.slotProps) == null ? void 0 : u.paper), qe = Ms();
  return /* @__PURE__ */ gt(O.Fragment, {
    children: [/* @__PURE__ */ z(UY, C({
      ref: ut,
      tabIndex: Ce,
      role: "combobox",
      "aria-controls": qe,
      "aria-disabled": D ? "true" : void 0,
      "aria-expanded": zt ? "true" : "false",
      "aria-haspopup": "listbox",
      "aria-label": v,
      "aria-labelledby": [_, he].filter(Boolean).join(" ") || void 0,
      "aria-describedby": f,
      onKeyDown: it,
      onMouseDown: D || q ? null : nt,
      onBlur: Dt,
      onFocus: G
    }, ee, {
      ownerState: Qe,
      className: pe(ee.className, Me.select, S),
      id: he,
      children: WY(ht) ? (
        // notranslate needed while Google Translate will not fix zero-width space issue
        bN || (bN = /* @__PURE__ */ z("span", {
          className: "notranslate",
          children: "​"
        }))
      ) : ht
    })), /* @__PURE__ */ z(HY, C({
      "aria-invalid": P,
      value: Array.isArray(K) ? K.join(",") : K,
      name: j,
      ref: tt,
      "aria-hidden": !0,
      onChange: Oe,
      tabIndex: -1,
      disabled: D,
      className: Me.nativeInput,
      autoFocus: m,
      ownerState: Qe
    }, fe)), /* @__PURE__ */ z(VY, {
      as: L,
      className: Me.icon,
      ownerState: Qe
    }), /* @__PURE__ */ z(dq, C({
      id: `menu-${j || ""}`,
      anchorEl: Xe,
      open: zt,
      onClose: le,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "center"
      },
      transformOrigin: {
        vertical: "top",
        horizontal: "center"
      }
    }, V, {
      MenuListProps: C({
        "aria-labelledby": _,
        role: "listbox",
        "aria-multiselectable": A ? "true" : void 0,
        disableListWrap: !0,
        id: qe
      }, V.MenuListProps),
      slotProps: C({}, V.slotProps, {
        paper: C({}, et, {
          style: C({
            minWidth: Qt
          }, et != null ? et.style : null)
        })
      }),
      children: an
    }))]
  });
});
process.env.NODE_ENV !== "production" && (nP.propTypes = {
  /**
   * @ignore
   */
  "aria-describedby": n.string,
  /**
   * @ignore
   */
  "aria-label": n.string,
  /**
   * @ignore
   */
  autoFocus: n.bool,
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */
  autoWidth: n.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `<MenuItem>` elements.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * The CSS class name of the select element.
   */
  className: n.string,
  /**
   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.
   * You can only use it when the `native` prop is `false` (default).
   */
  defaultOpen: n.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: n.any,
  /**
   * If `true`, the select is disabled.
   */
  disabled: n.bool,
  /**
   * If `true`, the selected item is displayed even if its value is empty.
   */
  displayEmpty: n.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: n.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: n.elementType.isRequired,
  /**
   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`
   * Equivalent to `ref`
   */
  inputRef: Tr,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: n.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: n.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */
  multiple: n.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: n.string,
  /**
   * @ignore
   */
  onBlur: n.func,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected.
   */
  onChange: n.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: n.func,
  /**
   * @ignore
   */
  onFocus: n.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: n.func,
  /**
   * If `true`, the component is shown.
   */
  open: n.bool,
  /**
   * @ignore
   */
  readOnly: n.bool,
  /**
   * Render the selected value.
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: n.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: n.object,
  /**
   * @ignore
   */
  tabIndex: n.oneOfType([n.number, n.string]),
  /**
   * @ignore
   */
  type: n.any,
  /**
   * The input value.
   */
  value: n.any,
  /**
   * The variant to use.
   */
  variant: n.oneOf(["standard", "outlined", "filled"])
});
const qY = nP, YY = ["autoWidth", "children", "classes", "className", "defaultOpen", "displayEmpty", "IconComponent", "id", "input", "inputProps", "label", "labelId", "MenuProps", "multiple", "native", "onClose", "onOpen", "open", "renderValue", "SelectDisplayProps", "variant"], KY = ["root"], XY = (e) => {
  const {
    classes: r
  } = e;
  return r;
}, Z1 = {
  name: "MuiSelect",
  overridesResolver: (e, r) => r.root,
  shouldForwardProp: (e) => ko(e) && e !== "variant",
  slot: "Root"
}, QY = Z(W1, Z1)(""), ZY = Z(HD, Z1)(""), JY = Z(oD, Z1)(""), J1 = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    name: "MuiSelect",
    props: r
  }), {
    autoWidth: f = !1,
    children: v,
    classes: m = {},
    className: y,
    defaultOpen: b = !1,
    displayEmpty: S = !1,
    IconComponent: E = A1,
    id: k,
    input: D,
    inputProps: M,
    label: P,
    labelId: L,
    MenuProps: w,
    multiple: _ = !1,
    native: V = !1,
    onClose: A,
    onOpen: j,
    open: U,
    renderValue: $,
    SelectDisplayProps: F,
    variant: G = "outlined"
  } = u, Y = me(u, YY), Q = V ? UD : qY, q = Wi(), re = $l({
    props: u,
    muiFormControl: q,
    states: ["variant", "error"]
  }), ee = re.variant || G, J = C({}, u, {
    variant: ee,
    classes: m
  }), ce = XY(J), de = me(ce, KY), fe = D || {
    standard: /* @__PURE__ */ z(QY, {
      ownerState: J
    }),
    outlined: /* @__PURE__ */ z(ZY, {
      label: P,
      ownerState: J
    }),
    filled: /* @__PURE__ */ z(JY, {
      ownerState: J
    })
  }[ee], K = yn(s, fe.ref);
  return /* @__PURE__ */ z(O.Fragment, {
    children: /* @__PURE__ */ O.cloneElement(fe, C({
      // Most of the logic is implemented in `SelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: Q,
      inputProps: C({
        children: v,
        error: re.error,
        IconComponent: E,
        variant: ee,
        type: void 0,
        // We render a select. We can ignore the type provided by the `Input`.
        multiple: _
      }, V ? {
        id: k
      } : {
        autoWidth: f,
        defaultOpen: b,
        displayEmpty: S,
        labelId: L,
        MenuProps: w,
        onClose: A,
        onOpen: j,
        open: U,
        renderValue: $,
        SelectDisplayProps: C({
          id: k
        }, F)
      }, M, {
        classes: M ? ji(de, M.classes) : de
      }, D ? D.props.inputProps : {})
    }, (_ && V || S) && ee === "outlined" ? {
      notched: !0
    } : {}, {
      ref: K,
      className: pe(fe.props.className, y, ce.root)
    }, !D && {
      variant: ee
    }, Y))
  });
});
process.env.NODE_ENV !== "production" && (J1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   * @default false
   */
  autoWidth: n.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
   *
   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * If `true`, the component is initially open. Use when the component open state is not controlled (i.e. the `open` prop is not defined).
   * You can only use it when the `native` prop is `false` (default).
   * @default false
   */
  defaultOpen: n.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: n.any,
  /**
   * If `true`, a value is displayed even if no items are selected.
   *
   * In order to display a meaningful value, a function can be passed to the `renderValue` prop which
   * returns the value to be displayed when no items are selected.
   *
   * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.
   * The label should either be hidden or forced to a shrunk state.
   * @default false
   */
  displayEmpty: n.bool,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: n.elementType,
  /**
   * The `id` of the wrapper element or the `select` element when `native`.
   */
  id: n.string,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */
  input: n.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * When `native` is `true`, the attributes are applied on the `select` element.
   */
  inputProps: n.object,
  /**
   * See [OutlinedInput#label](/material-ui/api/outlined-input/#props)
   */
  label: n.node,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: n.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: n.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: n.bool,
  /**
   * If `true`, the component uses a native `select` element.
   * @default false
   */
  native: n.bool,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {SelectChangeEvent<Value>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event, not a change event, unless the change event is caused by browser autofill.
   * @param {object} [child] The react element that was selected when `native` is `false` (default).
   */
  onChange: n.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select collapses).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: n.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select expands).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: n.func,
  /**
   * If `true`, the component is shown.
   * You can only use it when the `native` prop is `false` (default).
   */
  open: n.bool,
  /**
   * Render the selected value.
   * You can only use it when the `native` prop is `false` (default).
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: n.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: n.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The `input` value. Providing an empty string will select no options.
   * Set to an empty string `''` if you don't want any of the available options to be selected.
   *
   * If the value is an object it must have reference equality with the option in order to be selected.
   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
   */
  value: n.oneOfType([n.oneOf([""]), n.any]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: n.oneOf(["filled", "outlined", "standard"])
});
J1.muiName = "Select";
const oP = J1;
function eK(e) {
  return je("MuiSkeleton", e);
}
const tK = He("MuiSkeleton", ["root", "text", "rectangular", "rounded", "circular", "pulse", "wave", "withChildren", "fitContent", "heightAuto"]), Rte = tK, nK = ["animation", "className", "component", "height", "style", "variant", "width"];
let T0 = (e) => e, xN, SN, TN, EN;
const oK = (e) => {
  const {
    classes: r,
    variant: s,
    animation: u,
    hasChildren: f,
    width: v,
    height: m
  } = e;
  return Ue({
    root: ["root", s, u, f && "withChildren", f && !v && "fitContent", f && !m && "heightAuto"]
  }, eK, r);
}, rK = Vi(xN || (xN = T0`
  0% {
    opacity: 1;
  }

  50% {
    opacity: 0.4;
  }

  100% {
    opacity: 1;
  }
`)), aK = Vi(SN || (SN = T0`
  0% {
    transform: translateX(-100%);
  }

  50% {
    /* +0.5s of delay between each loop */
    transform: translateX(100%);
  }

  100% {
    transform: translateX(100%);
  }
`)), iK = Z("span", {
  name: "MuiSkeleton",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[s.variant], s.animation !== !1 && r[s.animation], s.hasChildren && r.withChildren, s.hasChildren && !s.width && r.fitContent, s.hasChildren && !s.height && r.heightAuto];
  }
})(({
  theme: e,
  ownerState: r
}) => {
  const s = x1(e.shape.borderRadius) || "px", u = Tl(e.shape.borderRadius);
  return C({
    display: "block",
    // Create a "on paper" color with sufficient contrast retaining the color
    backgroundColor: e.vars ? e.vars.palette.Skeleton.bg : lf(e.palette.text.primary, e.palette.mode === "light" ? 0.11 : 0.13),
    height: "1.2em"
  }, r.variant === "text" && {
    marginTop: 0,
    marginBottom: 0,
    height: "auto",
    transformOrigin: "0 55%",
    transform: "scale(1, 0.60)",
    borderRadius: `${u}${s}/${Math.round(u / 0.6 * 10) / 10}${s}`,
    "&:empty:before": {
      content: '"\\00a0"'
    }
  }, r.variant === "circular" && {
    borderRadius: "50%"
  }, r.variant === "rounded" && {
    borderRadius: (e.vars || e).shape.borderRadius
  }, r.hasChildren && {
    "& > *": {
      visibility: "hidden"
    }
  }, r.hasChildren && !r.width && {
    maxWidth: "fit-content"
  }, r.hasChildren && !r.height && {
    height: "auto"
  });
}, ({
  ownerState: e
}) => e.animation === "pulse" && Fc(TN || (TN = T0`
      animation: ${0} 2s ease-in-out 0.5s infinite;
    `), rK), ({
  ownerState: e,
  theme: r
}) => e.animation === "wave" && Fc(EN || (EN = T0`
      position: relative;
      overflow: hidden;

      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */
      -webkit-mask-image: -webkit-radial-gradient(white, black);

      &::after {
        animation: ${0} 2s linear 0.5s infinite;
        background: linear-gradient(
          90deg,
          transparent,
          ${0},
          transparent
        );
        content: '';
        position: absolute;
        transform: translateX(-100%); /* Avoid flash during server-side hydration */
        bottom: 0;
        left: 0;
        right: 0;
        top: 0;
      }
    `), aK, (r.vars || r).palette.action.hover)), rP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiSkeleton"
  }), {
    animation: f = "pulse",
    className: v,
    component: m = "span",
    height: y,
    style: b,
    variant: S = "text",
    width: E
  } = u, k = me(u, nK), D = C({}, u, {
    animation: f,
    component: m,
    variant: S,
    hasChildren: !!k.children
  }), M = oK(D);
  return /* @__PURE__ */ z(iK, C({
    as: m,
    ref: s,
    className: pe(M.root, v),
    ownerState: D
  }, k, {
    style: C({
      width: E,
      height: y
    }, b)
  }));
});
process.env.NODE_ENV !== "production" && (rP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The animation.
   * If `false` the animation effect is disabled.
   * @default 'pulse'
   */
  animation: n.oneOf(["pulse", "wave", !1]),
  /**
   * Optional children to infer width and height from.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * Height of the skeleton.
   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.
   */
  height: n.oneOfType([n.number, n.string]),
  /**
   * @ignore
   */
  style: n.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The type of content that will be rendered.
   * @default 'text'
   */
  variant: n.oneOfType([n.oneOf(["circular", "rectangular", "rounded", "text"]), n.string]),
  /**
   * Width of the skeleton.
   * Useful when the skeleton is inside an inline element with no width of its own.
   */
  width: n.oneOfType([n.number, n.string])
});
const Ote = rP, sK = (e) => !e || !Fi(e), lK = sK;
function cK(e) {
  return je("MuiSlider", e);
}
const uK = He("MuiSlider", ["root", "active", "colorPrimary", "colorSecondary", "colorError", "colorInfo", "colorSuccess", "colorWarning", "disabled", "dragging", "focusVisible", "mark", "markActive", "marked", "markLabel", "markLabelActive", "rail", "sizeSmall", "thumb", "thumbColorPrimary", "thumbColorSecondary", "thumbColorError", "thumbColorSuccess", "thumbColorInfo", "thumbColorWarning", "track", "trackInverted", "trackFalse", "thumbSizeSmall", "valueLabel", "valueLabelOpen", "valueLabelCircle", "valueLabelLabel", "vertical"]), zi = uK, dK = (e) => {
  const {
    open: r
  } = e;
  return {
    offset: pe(r && zi.valueLabelOpen),
    circle: zi.valueLabelCircle,
    label: zi.valueLabelLabel
  };
};
function aP(e) {
  const {
    children: r,
    className: s,
    value: u
  } = e, f = dK(e);
  return r ? /* @__PURE__ */ O.cloneElement(r, {
    className: pe(r.props.className)
  }, /* @__PURE__ */ gt(O.Fragment, {
    children: [r.props.children, /* @__PURE__ */ z("span", {
      className: pe(f.offset, s),
      "aria-hidden": !0,
      children: /* @__PURE__ */ z("span", {
        className: f.circle,
        children: /* @__PURE__ */ z("span", {
          className: f.label,
          children: u
        })
      })
    })]
  })) : null;
}
process.env.NODE_ENV !== "production" && (aP.propTypes = {
  children: n.element.isRequired,
  className: n.string,
  value: n.node
});
const pK = ["aria-label", "aria-valuetext", "aria-labelledby", "component", "components", "componentsProps", "color", "classes", "className", "disableSwap", "disabled", "getAriaLabel", "getAriaValueText", "marks", "max", "min", "name", "onChange", "onChangeCommitted", "orientation", "shiftStep", "size", "step", "scale", "slotProps", "slots", "tabIndex", "track", "value", "valueLabelDisplay", "valueLabelFormat"];
function RN(e) {
  return e;
}
const fK = Z("span", {
  name: "MuiSlider",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[`color${oe(s.color)}`], s.size !== "medium" && r[`size${oe(s.size)}`], s.marked && r.marked, s.orientation === "vertical" && r.vertical, s.track === "inverted" && r.trackInverted, s.track === !1 && r.trackFalse];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  borderRadius: 12,
  boxSizing: "content-box",
  display: "inline-block",
  position: "relative",
  cursor: "pointer",
  touchAction: "none",
  color: (e.vars || e).palette[r.color].main,
  WebkitTapHighlightColor: "transparent"
}, r.orientation === "horizontal" && C({
  height: 4,
  width: "100%",
  padding: "13px 0",
  // The primary input mechanism of the device includes a pointing device of limited accuracy.
  "@media (pointer: coarse)": {
    // Reach 42px touch target, about ~8mm on screen.
    padding: "20px 0"
  }
}, r.size === "small" && {
  height: 2
}, r.marked && {
  marginBottom: 20
}), r.orientation === "vertical" && C({
  height: "100%",
  width: 4,
  padding: "0 13px",
  // The primary input mechanism of the device includes a pointing device of limited accuracy.
  "@media (pointer: coarse)": {
    // Reach 42px touch target, about ~8mm on screen.
    padding: "0 20px"
  }
}, r.size === "small" && {
  width: 2
}, r.marked && {
  marginRight: 44
}), {
  "@media print": {
    colorAdjust: "exact"
  },
  [`&.${zi.disabled}`]: {
    pointerEvents: "none",
    cursor: "default",
    color: (e.vars || e).palette.grey[400]
  },
  [`&.${zi.dragging}`]: {
    [`& .${zi.thumb}, & .${zi.track}`]: {
      transition: "none"
    }
  }
})), mK = Z("span", {
  name: "MuiSlider",
  slot: "Rail",
  overridesResolver: (e, r) => r.rail
})(({
  ownerState: e
}) => C({
  display: "block",
  position: "absolute",
  borderRadius: "inherit",
  backgroundColor: "currentColor",
  opacity: 0.38
}, e.orientation === "horizontal" && {
  width: "100%",
  height: "inherit",
  top: "50%",
  transform: "translateY(-50%)"
}, e.orientation === "vertical" && {
  height: "100%",
  width: "inherit",
  left: "50%",
  transform: "translateX(-50%)"
}, e.track === "inverted" && {
  opacity: 1
})), vK = Z("span", {
  name: "MuiSlider",
  slot: "Track",
  overridesResolver: (e, r) => r.track
})(({
  theme: e,
  ownerState: r
}) => {
  const s = (
    // Same logic as the LinearProgress track color
    e.palette.mode === "light" ? O0(e.palette[r.color].main, 0.62) : w0(e.palette[r.color].main, 0.5)
  );
  return C({
    display: "block",
    position: "absolute",
    borderRadius: "inherit",
    border: "1px solid currentColor",
    backgroundColor: "currentColor",
    transition: e.transitions.create(["left", "width", "bottom", "height"], {
      duration: e.transitions.duration.shortest
    })
  }, r.size === "small" && {
    border: "none"
  }, r.orientation === "horizontal" && {
    height: "inherit",
    top: "50%",
    transform: "translateY(-50%)"
  }, r.orientation === "vertical" && {
    width: "inherit",
    left: "50%",
    transform: "translateX(-50%)"
  }, r.track === !1 && {
    display: "none"
  }, r.track === "inverted" && {
    backgroundColor: e.vars ? e.vars.palette.Slider[`${r.color}Track`] : s,
    borderColor: e.vars ? e.vars.palette.Slider[`${r.color}Track`] : s
  });
}), hK = Z("span", {
  name: "MuiSlider",
  slot: "Thumb",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.thumb, r[`thumbColor${oe(s.color)}`], s.size !== "medium" && r[`thumbSize${oe(s.size)}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  position: "absolute",
  width: 20,
  height: 20,
  boxSizing: "border-box",
  borderRadius: "50%",
  outline: 0,
  backgroundColor: "currentColor",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  transition: e.transitions.create(["box-shadow", "left", "bottom"], {
    duration: e.transitions.duration.shortest
  })
}, r.size === "small" && {
  width: 12,
  height: 12
}, r.orientation === "horizontal" && {
  top: "50%",
  transform: "translate(-50%, -50%)"
}, r.orientation === "vertical" && {
  left: "50%",
  transform: "translate(-50%, 50%)"
}, {
  "&::before": C({
    position: "absolute",
    content: '""',
    borderRadius: "inherit",
    width: "100%",
    height: "100%",
    boxShadow: (e.vars || e).shadows[2]
  }, r.size === "small" && {
    boxShadow: "none"
  }),
  "&::after": {
    position: "absolute",
    content: '""',
    borderRadius: "50%",
    // 42px is the hit target
    width: 42,
    height: 42,
    top: "50%",
    left: "50%",
    transform: "translate(-50%, -50%)"
  },
  [`&:hover, &.${zi.focusVisible}`]: {
    boxShadow: `0px 0px 0px 8px ${e.vars ? `rgba(${e.vars.palette[r.color].mainChannel} / 0.16)` : Ut(e.palette[r.color].main, 0.16)}`,
    "@media (hover: none)": {
      boxShadow: "none"
    }
  },
  [`&.${zi.active}`]: {
    boxShadow: `0px 0px 0px 14px ${e.vars ? `rgba(${e.vars.palette[r.color].mainChannel} / 0.16)` : Ut(e.palette[r.color].main, 0.16)}`
  },
  [`&.${zi.disabled}`]: {
    "&:hover": {
      boxShadow: "none"
    }
  }
})), gK = Z(aP, {
  name: "MuiSlider",
  slot: "ValueLabel",
  overridesResolver: (e, r) => r.valueLabel
})(({
  theme: e,
  ownerState: r
}) => C({
  [`&.${zi.valueLabelOpen}`]: {
    transform: `${r.orientation === "vertical" ? "translateY(-50%)" : "translateY(-100%)"} scale(1)`
  },
  zIndex: 1,
  whiteSpace: "nowrap"
}, e.typography.body2, {
  fontWeight: 500,
  transition: e.transitions.create(["transform"], {
    duration: e.transitions.duration.shortest
  }),
  transform: `${r.orientation === "vertical" ? "translateY(-50%)" : "translateY(-100%)"} scale(0)`,
  position: "absolute",
  backgroundColor: (e.vars || e).palette.grey[600],
  borderRadius: 2,
  color: (e.vars || e).palette.common.white,
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  padding: "0.25rem 0.75rem"
}, r.orientation === "horizontal" && {
  top: "-10px",
  transformOrigin: "bottom center",
  "&::before": {
    position: "absolute",
    content: '""',
    width: 8,
    height: 8,
    transform: "translate(-50%, 50%) rotate(45deg)",
    backgroundColor: "inherit",
    bottom: 0,
    left: "50%"
  }
}, r.orientation === "vertical" && {
  right: r.size === "small" ? "20px" : "30px",
  top: "50%",
  transformOrigin: "right center",
  "&::before": {
    position: "absolute",
    content: '""',
    width: 8,
    height: 8,
    transform: "translate(-50%, -50%) rotate(45deg)",
    backgroundColor: "inherit",
    right: -8,
    top: "50%"
  }
}, r.size === "small" && {
  fontSize: e.typography.pxToRem(12),
  padding: "0.25rem 0.5rem"
})), yK = Z("span", {
  name: "MuiSlider",
  slot: "Mark",
  shouldForwardProp: (e) => Sh(e) && e !== "markActive",
  overridesResolver: (e, r) => {
    const {
      markActive: s
    } = e;
    return [r.mark, s && r.markActive];
  }
})(({
  theme: e,
  ownerState: r,
  markActive: s
}) => C({
  position: "absolute",
  width: 2,
  height: 2,
  borderRadius: 1,
  backgroundColor: "currentColor"
}, r.orientation === "horizontal" && {
  top: "50%",
  transform: "translate(-1px, -50%)"
}, r.orientation === "vertical" && {
  left: "50%",
  transform: "translate(-50%, 1px)"
}, s && {
  backgroundColor: (e.vars || e).palette.background.paper,
  opacity: 0.8
})), bK = Z("span", {
  name: "MuiSlider",
  slot: "MarkLabel",
  shouldForwardProp: (e) => Sh(e) && e !== "markLabelActive",
  overridesResolver: (e, r) => r.markLabel
})(({
  theme: e,
  ownerState: r,
  markLabelActive: s
}) => C({}, e.typography.body2, {
  color: (e.vars || e).palette.text.secondary,
  position: "absolute",
  whiteSpace: "nowrap"
}, r.orientation === "horizontal" && {
  top: 30,
  transform: "translateX(-50%)",
  "@media (pointer: coarse)": {
    top: 40
  }
}, r.orientation === "vertical" && {
  left: 36,
  transform: "translateY(50%)",
  "@media (pointer: coarse)": {
    left: 44
  }
}, s && {
  color: (e.vars || e).palette.text.primary
})), CK = (e) => {
  const {
    disabled: r,
    dragging: s,
    marked: u,
    orientation: f,
    track: v,
    classes: m,
    color: y,
    size: b
  } = e, S = {
    root: ["root", r && "disabled", s && "dragging", u && "marked", f === "vertical" && "vertical", v === "inverted" && "trackInverted", v === !1 && "trackFalse", y && `color${oe(y)}`, b && `size${oe(b)}`],
    rail: ["rail"],
    track: ["track"],
    mark: ["mark"],
    markActive: ["markActive"],
    markLabel: ["markLabel"],
    markLabelActive: ["markLabelActive"],
    valueLabel: ["valueLabel"],
    thumb: ["thumb", r && "disabled", b && `thumbSize${oe(b)}`, y && `thumbColor${oe(y)}`],
    active: ["active"],
    disabled: ["disabled"],
    focusVisible: ["focusVisible"]
  };
  return Ue(S, cK, m);
}, xK = ({
  children: e
}) => e, iP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u, f, v, m, y, b, S, E, k, D, M, P, L, w, _, V, A, j, U, $, F, G, Y, Q;
  const q = Ve({
    props: r,
    name: "MuiSlider"
  }), ee = to().direction === "rtl", {
    "aria-label": J,
    "aria-valuetext": ce,
    "aria-labelledby": de,
    // eslint-disable-next-line react/prop-types
    component: fe = "span",
    components: K = {},
    componentsProps: ne = {},
    color: ve = "primary",
    classes: Ke,
    className: tt,
    disableSwap: Ie = !1,
    disabled: De = !1,
    getAriaLabel: Ye,
    getAriaValueText: ke,
    marks: lt = !1,
    max: xe = 100,
    min: ze = 0,
    orientation: ut = "horizontal",
    shiftStep: Xe = 10,
    size: rt = "medium",
    step: nt = 1,
    scale: le = RN,
    slotProps: $e,
    slots: Oe,
    track: dt = "normal",
    valueLabelDisplay: it = "off",
    valueLabelFormat: zt = RN
  } = q, Dt = me(q, pK), ht = C({}, q, {
    isRtl: ee,
    max: xe,
    min: ze,
    classes: Ke,
    disabled: De,
    disableSwap: Ie,
    orientation: ut,
    marks: lt,
    color: ve,
    size: rt,
    step: nt,
    shiftStep: Xe,
    scale: le,
    track: dt,
    valueLabelDisplay: it,
    valueLabelFormat: zt
  }), {
    axisProps: Tt,
    getRootProps: Lt,
    getHiddenInputProps: At,
    getThumbProps: tn,
    open: an,
    active: Qt,
    axis: Ce,
    focusedThumbIndex: he,
    range: Qe,
    dragging: Me,
    marks: et,
    values: qe,
    trackOffset: We,
    trackLeap: we,
    getThumbStyle: Fe
  } = T5(C({}, ht, {
    rootRef: s
  }));
  ht.marked = et.length > 0 && et.some((ue) => ue.label), ht.dragging = Me, ht.focusedThumbIndex = he;
  const st = CK(ht), kt = (u = (f = Oe == null ? void 0 : Oe.root) != null ? f : K.Root) != null ? u : fK, Nt = (v = (m = Oe == null ? void 0 : Oe.rail) != null ? m : K.Rail) != null ? v : mK, nn = (y = (b = Oe == null ? void 0 : Oe.track) != null ? b : K.Track) != null ? y : vK, qt = (S = (E = Oe == null ? void 0 : Oe.thumb) != null ? E : K.Thumb) != null ? S : hK, on = (k = (D = Oe == null ? void 0 : Oe.valueLabel) != null ? D : K.ValueLabel) != null ? k : gK, _n = (M = (P = Oe == null ? void 0 : Oe.mark) != null ? P : K.Mark) != null ? M : yK, fo = (L = (w = Oe == null ? void 0 : Oe.markLabel) != null ? w : K.MarkLabel) != null ? L : bK, dr = (_ = (V = Oe == null ? void 0 : Oe.input) != null ? V : K.Input) != null ? _ : "input", Fr = (A = $e == null ? void 0 : $e.root) != null ? A : ne.root, ja = (j = $e == null ? void 0 : $e.rail) != null ? j : ne.rail, jr = (U = $e == null ? void 0 : $e.track) != null ? U : ne.track, No = ($ = $e == null ? void 0 : $e.thumb) != null ? $ : ne.thumb, Rn = (F = $e == null ? void 0 : $e.valueLabel) != null ? F : ne.valueLabel, bn = (G = $e == null ? void 0 : $e.mark) != null ? G : ne.mark, An = (Y = $e == null ? void 0 : $e.markLabel) != null ? Y : ne.markLabel, Gn = (Q = $e == null ? void 0 : $e.input) != null ? Q : ne.input, Xn = po({
    elementType: kt,
    getSlotProps: Lt,
    externalSlotProps: Fr,
    externalForwardedProps: Dt,
    additionalProps: C({}, lK(kt) && {
      as: fe
    }),
    ownerState: C({}, ht, Fr == null ? void 0 : Fr.ownerState),
    className: [st.root, tt]
  }), Uo = po({
    elementType: Nt,
    externalSlotProps: ja,
    ownerState: ht,
    className: st.rail
  }), $o = po({
    elementType: nn,
    externalSlotProps: jr,
    additionalProps: {
      style: C({}, Tt[Ce].offset(We), Tt[Ce].leap(we))
    },
    ownerState: C({}, ht, jr == null ? void 0 : jr.ownerState),
    className: st.track
  }), Mo = po({
    elementType: qt,
    getSlotProps: tn,
    externalSlotProps: No,
    ownerState: C({}, ht, No == null ? void 0 : No.ownerState),
    className: st.thumb
  }), Er = po({
    elementType: on,
    externalSlotProps: Rn,
    ownerState: C({}, ht, Rn == null ? void 0 : Rn.ownerState),
    className: st.valueLabel
  }), Do = po({
    elementType: _n,
    externalSlotProps: bn,
    ownerState: ht,
    className: st.mark
  }), mo = po({
    elementType: fo,
    externalSlotProps: An,
    ownerState: ht,
    className: st.markLabel
  }), Ne = po({
    elementType: dr,
    getSlotProps: At,
    externalSlotProps: Gn,
    ownerState: ht
  });
  return /* @__PURE__ */ gt(kt, C({}, Xn, {
    children: [/* @__PURE__ */ z(Nt, C({}, Uo)), /* @__PURE__ */ z(nn, C({}, $o)), et.filter((ue) => ue.value >= ze && ue.value <= xe).map((ue, Ge) => {
      const ft = y0(ue.value, ze, xe), en = Tt[Ce].offset(ft);
      let pt;
      return dt === !1 ? pt = qe.indexOf(ue.value) !== -1 : pt = dt === "normal" && (Qe ? ue.value >= qe[0] && ue.value <= qe[qe.length - 1] : ue.value <= qe[0]) || dt === "inverted" && (Qe ? ue.value <= qe[0] || ue.value >= qe[qe.length - 1] : ue.value >= qe[0]), /* @__PURE__ */ gt(O.Fragment, {
        children: [/* @__PURE__ */ z(_n, C({
          "data-index": Ge
        }, Do, !Fi(_n) && {
          markActive: pt
        }, {
          style: C({}, en, Do.style),
          className: pe(Do.className, pt && st.markActive)
        })), ue.label != null ? /* @__PURE__ */ z(fo, C({
          "aria-hidden": !0,
          "data-index": Ge
        }, mo, !Fi(fo) && {
          markLabelActive: pt
        }, {
          style: C({}, en, mo.style),
          className: pe(st.markLabel, mo.className, pt && st.markLabelActive),
          children: ue.label
        })) : null]
      }, Ge);
    }), qe.map((ue, Ge) => {
      const ft = y0(ue, ze, xe), en = Tt[Ce].offset(ft), pt = it === "off" ? xK : on;
      return (
        /* TODO v6: Change component structure. It will help in avoiding the complicated React.cloneElement API added in SliderValueLabel component. Should be: Thumb -> Input, ValueLabel. Follow Joy UI's Slider structure. */
        /* @__PURE__ */ z(pt, C({}, !Fi(pt) && {
          valueLabelFormat: zt,
          valueLabelDisplay: it,
          value: typeof zt == "function" ? zt(le(ue), Ge) : zt,
          index: Ge,
          open: an === Ge || Qt === Ge || it === "on",
          disabled: De
        }, Er, {
          children: /* @__PURE__ */ z(qt, C({
            "data-index": Ge
          }, Mo, {
            className: pe(st.thumb, Mo.className, Qt === Ge && st.active, he === Ge && st.focusVisible),
            style: C({}, en, Fe(Ge), Mo.style),
            children: /* @__PURE__ */ z(dr, C({
              "data-index": Ge,
              "aria-label": Ye ? Ye(Ge) : J,
              "aria-valuenow": le(ue),
              "aria-labelledby": de,
              "aria-valuetext": ke ? ke(le(ue), Ge) : ce,
              value: qe[Ge]
            }, Ne))
          }))
        }), Ge)
      );
    })]
  }));
});
process.env.NODE_ENV !== "production" && (iP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The label of the slider.
   */
  "aria-label": jo(n.string, (e) => Array.isArray(e.value || e.defaultValue) && e["aria-label"] != null ? new Error("MUI: You need to use the `getAriaLabel` prop instead of `aria-label` when using a range slider.") : null),
  /**
   * The id of the element containing a label for the slider.
   */
  "aria-labelledby": n.string,
  /**
   * A string value that provides a user-friendly name for the current value of the slider.
   */
  "aria-valuetext": jo(n.string, (e) => Array.isArray(e.value || e.defaultValue) && e["aria-valuetext"] != null ? new Error("MUI: You need to use the `getAriaValueText` prop instead of `aria-valuetext` when using a range slider.") : null),
  /**
   * @ignore
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: n.oneOfType([n.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), n.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: n.shape({
    Input: n.elementType,
    Mark: n.elementType,
    MarkLabel: n.elementType,
    Rail: n.elementType,
    Root: n.elementType,
    Thumb: n.elementType,
    Track: n.elementType,
    ValueLabel: n.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: n.shape({
    input: n.oneOfType([n.func, n.object]),
    mark: n.oneOfType([n.func, n.object]),
    markLabel: n.oneOfType([n.func, n.object]),
    rail: n.oneOfType([n.func, n.object]),
    root: n.oneOfType([n.func, n.object]),
    thumb: n.oneOfType([n.func, n.object]),
    track: n.oneOfType([n.func, n.object]),
    valueLabel: n.oneOfType([n.func, n.shape({
      children: n.element,
      className: n.string,
      open: n.bool,
      style: n.object,
      value: n.number,
      valueLabelDisplay: n.oneOf(["auto", "off", "on"])
    })])
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: n.oneOfType([n.arrayOf(n.number), n.number]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * If `true`, the active thumb doesn't swap when moving pointer over a thumb while dragging another thumb.
   * @default false
   */
  disableSwap: n.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the thumb labels of the slider.
   * This is important for screen reader users.
   * @param {number} index The thumb label's index to format.
   * @returns {string}
   */
  getAriaLabel: n.func,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the slider.
   * This is important for screen reader users.
   * @param {number} value The thumb label's value to format.
   * @param {number} index The thumb label's index to format.
   * @returns {string}
   */
  getAriaValueText: n.func,
  /**
   * Marks indicate predetermined values to which the user can move the slider.
   * If `true` the marks are spaced according the value of the `step` prop.
   * If an array, it should contain objects with `value` and an optional `label` keys.
   * @default false
   */
  marks: n.oneOfType([n.arrayOf(n.shape({
    label: n.node,
    value: n.number.isRequired
  })), n.bool]),
  /**
   * The maximum allowed value of the slider.
   * Should not be equal to min.
   * @default 100
   */
  max: n.number,
  /**
   * The minimum allowed value of the slider.
   * Should not be equal to max.
   * @default 0
   */
  min: n.number,
  /**
   * Name attribute of the hidden `input` element.
   */
  name: n.string,
  /**
   * Callback function that is fired when the slider's value changed.
   *
   * @param {Event} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event not a change event.
   * @param {number | number[]} value The new value.
   * @param {number} activeThumb Index of the currently moved thumb.
   */
  onChange: n.func,
  /**
   * Callback function that is fired when the `mouseup` is triggered.
   *
   * @param {React.SyntheticEvent | Event} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {number | number[]} value The new value.
   */
  onChangeCommitted: n.func,
  /**
   * The component orientation.
   * @default 'horizontal'
   */
  orientation: n.oneOf(["horizontal", "vertical"]),
  /**
   * A transformation function, to change the scale of the slider.
   * @param {any} x
   * @returns {any}
   * @default function Identity(x) {
   *   return x;
   * }
   */
  scale: n.func,
  /**
   * The granularity with which the slider can step through values when using Page Up/Page Down or Shift + Arrow Up/Arrow Down.
   * @default 10
   */
  shiftStep: n.number,
  /**
   * The size of the slider.
   * @default 'medium'
   */
  size: n.oneOfType([n.oneOf(["small", "medium"]), n.string]),
  /**
   * The props used for each slot inside the Slider.
   * @default {}
   */
  slotProps: n.shape({
    input: n.oneOfType([n.func, n.object]),
    mark: n.oneOfType([n.func, n.object]),
    markLabel: n.oneOfType([n.func, n.object]),
    rail: n.oneOfType([n.func, n.object]),
    root: n.oneOfType([n.func, n.object]),
    thumb: n.oneOfType([n.func, n.object]),
    track: n.oneOfType([n.func, n.object]),
    valueLabel: n.oneOfType([n.func, n.shape({
      children: n.element,
      className: n.string,
      open: n.bool,
      style: n.object,
      value: n.number,
      valueLabelDisplay: n.oneOf(["auto", "off", "on"])
    })])
  }),
  /**
   * The components used for each slot inside the Slider.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: n.shape({
    input: n.elementType,
    mark: n.elementType,
    markLabel: n.elementType,
    rail: n.elementType,
    root: n.elementType,
    thumb: n.elementType,
    track: n.elementType,
    valueLabel: n.elementType
  }),
  /**
   * The granularity with which the slider can step through values. (A "discrete" slider.)
   * The `min` prop serves as the origin for the valid values.
   * We recommend (max - min) to be evenly divisible by the step.
   *
   * When step is `null`, the thumb can only be slid onto marks provided with the `marks` prop.
   * @default 1
   */
  step: n.number,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * Tab index attribute of the hidden `input` element.
   */
  tabIndex: n.number,
  /**
   * The track presentation:
   *
   * - `normal` the track will render a bar representing the slider value.
   * - `inverted` the track will render a bar representing the remaining slider value.
   * - `false` the track will render without a bar.
   * @default 'normal'
   */
  track: n.oneOf(["inverted", "normal", !1]),
  /**
   * The value of the slider.
   * For ranged sliders, provide an array with two values.
   */
  value: n.oneOfType([n.arrayOf(n.number), n.number]),
  /**
   * Controls when the value label is displayed:
   *
   * - `auto` the value label will display when the thumb is hovered or focused.
   * - `on` will display persistently.
   * - `off` will never display.
   * @default 'off'
   */
  valueLabelDisplay: n.oneOf(["auto", "off", "on"]),
  /**
   * The format function the value label's value.
   *
   * When a function is provided, it should have the following signature:
   *
   * - {number} value The value label's value to format
   * - {number} index The value label's index to format
   * @param {any} x
   * @returns {any}
   * @default function Identity(x) {
   *   return x;
   * }
   */
  valueLabelFormat: n.oneOfType([n.func, n.string])
});
const wte = iP;
function SK(e) {
  return je("MuiSnackbarContent", e);
}
const TK = He("MuiSnackbarContent", ["root", "message", "action"]), kte = TK, EK = ["action", "className", "message", "role"], RK = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"],
    action: ["action"],
    message: ["message"]
  }, SK, r);
}, OK = Z(ui, {
  name: "MuiSnackbarContent",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})(({
  theme: e
}) => {
  const r = e.palette.mode === "light" ? 0.8 : 0.98, s = o0(e.palette.background.default, r);
  return C({}, e.typography.body2, {
    color: e.vars ? e.vars.palette.SnackbarContent.color : e.palette.getContrastText(s),
    backgroundColor: e.vars ? e.vars.palette.SnackbarContent.bg : s,
    display: "flex",
    alignItems: "center",
    flexWrap: "wrap",
    padding: "6px 16px",
    borderRadius: (e.vars || e).shape.borderRadius,
    flexGrow: 1,
    [e.breakpoints.up("sm")]: {
      flexGrow: "initial",
      minWidth: 288
    }
  });
}), wK = Z("div", {
  name: "MuiSnackbarContent",
  slot: "Message",
  overridesResolver: (e, r) => r.message
})({
  padding: "8px 0"
}), kK = Z("div", {
  name: "MuiSnackbarContent",
  slot: "Action",
  overridesResolver: (e, r) => r.action
})({
  display: "flex",
  alignItems: "center",
  marginLeft: "auto",
  paddingLeft: 16,
  marginRight: -8
}), sP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiSnackbarContent"
  }), {
    action: f,
    className: v,
    message: m,
    role: y = "alert"
  } = u, b = me(u, EK), S = u, E = RK(S);
  return /* @__PURE__ */ gt(OK, C({
    role: y,
    square: !0,
    elevation: 6,
    className: pe(E.root, v),
    ownerState: S,
    ref: s
  }, b, {
    children: [/* @__PURE__ */ z(wK, {
      className: E.message,
      ownerState: S,
      children: m
    }), f ? /* @__PURE__ */ z(kK, {
      className: E.action,
      ownerState: S,
      children: f
    }) : null]
  }));
});
process.env.NODE_ENV !== "production" && (sP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The action to display. It renders after the message, at the end of the snackbar.
   */
  action: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The message to display.
   */
  message: n.node,
  /**
   * The ARIA role attribute of the element.
   * @default 'alert'
   */
  role: n.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const NK = sP;
function $K(e) {
  return je("MuiSnackbar", e);
}
const MK = He("MuiSnackbar", ["root", "anchorOriginTopCenter", "anchorOriginBottomCenter", "anchorOriginTopRight", "anchorOriginBottomRight", "anchorOriginTopLeft", "anchorOriginBottomLeft"]), Nte = MK, DK = ["onEnter", "onExited"], PK = ["action", "anchorOrigin", "autoHideDuration", "children", "className", "ClickAwayListenerProps", "ContentProps", "disableWindowBlurListener", "message", "onBlur", "onClose", "onFocus", "onMouseEnter", "onMouseLeave", "open", "resumeHideDuration", "TransitionComponent", "transitionDuration", "TransitionProps"], LK = (e) => {
  const {
    classes: r,
    anchorOrigin: s
  } = e, u = {
    root: ["root", `anchorOrigin${oe(s.vertical)}${oe(s.horizontal)}`]
  };
  return Ue(u, $K, r);
}, ON = Z("div", {
  name: "MuiSnackbar",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[`anchorOrigin${oe(s.anchorOrigin.vertical)}${oe(s.anchorOrigin.horizontal)}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => {
  const s = {
    left: "50%",
    right: "auto",
    transform: "translateX(-50%)"
  };
  return C({
    zIndex: (e.vars || e).zIndex.snackbar,
    position: "fixed",
    display: "flex",
    left: 8,
    right: 8,
    justifyContent: "center",
    alignItems: "center"
  }, r.anchorOrigin.vertical === "top" ? {
    top: 8
  } : {
    bottom: 8
  }, r.anchorOrigin.horizontal === "left" && {
    justifyContent: "flex-start"
  }, r.anchorOrigin.horizontal === "right" && {
    justifyContent: "flex-end"
  }, {
    [e.breakpoints.up("sm")]: C({}, r.anchorOrigin.vertical === "top" ? {
      top: 24
    } : {
      bottom: 24
    }, r.anchorOrigin.horizontal === "center" && s, r.anchorOrigin.horizontal === "left" && {
      left: 24,
      right: "auto"
    }, r.anchorOrigin.horizontal === "right" && {
      right: 24,
      left: "auto"
    })
  });
}), lP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiSnackbar"
  }), f = to(), v = {
    enter: f.transitions.duration.enteringScreen,
    exit: f.transitions.duration.leavingScreen
  }, {
    action: m,
    anchorOrigin: {
      vertical: y,
      horizontal: b
    } = {
      vertical: "bottom",
      horizontal: "left"
    },
    autoHideDuration: S = null,
    children: E,
    className: k,
    ClickAwayListenerProps: D,
    ContentProps: M,
    disableWindowBlurListener: P = !1,
    message: L,
    open: w,
    TransitionComponent: _ = C0,
    transitionDuration: V = v,
    TransitionProps: {
      onEnter: A,
      onExited: j
    } = {}
  } = u, U = me(u.TransitionProps, DK), $ = me(u, PK), F = C({}, u, {
    anchorOrigin: {
      vertical: y,
      horizontal: b
    },
    autoHideDuration: S,
    disableWindowBlurListener: P,
    TransitionComponent: _,
    transitionDuration: V
  }), G = LK(F), {
    getRootProps: Y,
    onClickAway: Q
  } = E5(C({}, F)), [q, re] = O.useState(!0), ee = po({
    elementType: ON,
    getSlotProps: Y,
    externalForwardedProps: $,
    ownerState: F,
    additionalProps: {
      ref: s
    },
    className: [G.root, k]
  }), J = (de) => {
    re(!0), j && j(de);
  }, ce = (de, fe) => {
    re(!1), A && A(de, fe);
  };
  return !w && q ? null : /* @__PURE__ */ z(f0, C({
    onClickAway: Q
  }, D, {
    children: /* @__PURE__ */ z(ON, C({}, ee, {
      children: /* @__PURE__ */ z(_, C({
        appear: !0,
        in: w,
        timeout: V,
        direction: y === "top" ? "down" : "up",
        onEnter: ce,
        onExited: J
      }, U, {
        children: E || /* @__PURE__ */ z(NK, C({
          message: L,
          action: m
        }, M))
      }))
    }))
  }));
});
process.env.NODE_ENV !== "production" && (lP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The action to display. It renders after the message, at the end of the snackbar.
   */
  action: n.node,
  /**
   * The anchor of the `Snackbar`.
   * On smaller screens, the component grows to occupy all the available width,
   * the horizontal alignment is ignored.
   * @default { vertical: 'bottom', horizontal: 'left' }
   */
  anchorOrigin: n.shape({
    horizontal: n.oneOf(["center", "left", "right"]).isRequired,
    vertical: n.oneOf(["bottom", "top"]).isRequired
  }),
  /**
   * The number of milliseconds to wait before automatically calling the
   * `onClose` function. `onClose` should then set the state of the `open`
   * prop to hide the Snackbar. This behavior is disabled by default with
   * the `null` value.
   * @default null
   */
  autoHideDuration: n.number,
  /**
   * Replace the `SnackbarContent` component.
   */
  children: n.element,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * Props applied to the `ClickAwayListener` element.
   */
  ClickAwayListenerProps: n.object,
  /**
   * Props applied to the [`SnackbarContent`](/material-ui/api/snackbar-content/) element.
   */
  ContentProps: n.object,
  /**
   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.
   * @default false
   */
  disableWindowBlurListener: n.bool,
  /**
   * When displaying multiple consecutive snackbars using a single parent-rendered
   * `<Snackbar/>`, add the `key` prop to ensure independent treatment of each message.
   * For instance, use `<Snackbar key={message} />`. Otherwise, messages might update
   * in place, and features like `autoHideDuration` could be affected.
   */
  key: () => null,
  /**
   * The message to display.
   */
  message: n.node,
  /**
   * @ignore
   */
  onBlur: n.func,
  /**
   * Callback fired when the component requests to be closed.
   * Typically `onClose` is used to set state in the parent component,
   * which is used to control the `Snackbar` `open` prop.
   * The `reason` parameter can optionally be used to control the response to `onClose`,
   * for example ignoring `clickaway`.
   *
   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.
   * @param {string} reason Can be: `"timeout"` (`autoHideDuration` expired), `"clickaway"`, or `"escapeKeyDown"`.
   */
  onClose: n.func,
  /**
   * @ignore
   */
  onFocus: n.func,
  /**
   * @ignore
   */
  onMouseEnter: n.func,
  /**
   * @ignore
   */
  onMouseLeave: n.func,
  /**
   * If `true`, the component is shown.
   */
  open: n.bool,
  /**
   * The number of milliseconds to wait before dismissing after user interaction.
   * If `autoHideDuration` prop isn't specified, it does nothing.
   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,
   * we default to `autoHideDuration / 2` ms.
   */
  resumeHideDuration: n.number,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Grow
   */
  TransitionComponent: n.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: n.oneOfType([n.number, n.shape({
    appear: n.number,
    enter: n.number,
    exit: n.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @default {}
   */
  TransitionProps: n.object
});
const $te = lP, IK = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"], _K = {
  entering: {
    transform: "none"
  },
  entered: {
    transform: "none"
  }
}, cP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = to(), f = {
    enter: u.transitions.duration.enteringScreen,
    exit: u.transitions.duration.leavingScreen
  }, {
    addEndListener: v,
    appear: m = !0,
    children: y,
    easing: b,
    in: S,
    onEnter: E,
    onEntered: k,
    onEntering: D,
    onExit: M,
    onExited: P,
    onExiting: L,
    style: w,
    timeout: _ = f,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: V = Th
  } = r, A = me(r, IK), j = O.useRef(null), U = yn(j, y.ref, s), $ = (J) => (ce) => {
    if (J) {
      const de = j.current;
      ce === void 0 ? J(de) : J(de, ce);
    }
  }, F = $(D), G = $((J, ce) => {
    M0(J);
    const de = Ui({
      style: w,
      timeout: _,
      easing: b
    }, {
      mode: "enter"
    });
    J.style.webkitTransition = u.transitions.create("transform", de), J.style.transition = u.transitions.create("transform", de), E && E(J, ce);
  }), Y = $(k), Q = $(L), q = $((J) => {
    const ce = Ui({
      style: w,
      timeout: _,
      easing: b
    }, {
      mode: "exit"
    });
    J.style.webkitTransition = u.transitions.create("transform", ce), J.style.transition = u.transitions.create("transform", ce), M && M(J);
  }), re = $(P);
  return /* @__PURE__ */ z(V, C({
    appear: m,
    in: S,
    nodeRef: j,
    onEnter: G,
    onEntered: Y,
    onEntering: F,
    onExit: q,
    onExited: re,
    onExiting: Q,
    addEndListener: (J) => {
      v && v(j.current, J);
    },
    timeout: _
  }, A, {
    children: (J, ce) => /* @__PURE__ */ O.cloneElement(y, C({
      style: C({
        transform: "scale(0)",
        visibility: J === "exited" && !S ? "hidden" : void 0
      }, _K[J], w, y.props.style),
      ref: U
    }, ce))
  }));
});
process.env.NODE_ENV !== "production" && (cP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: n.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: n.bool,
  /**
   * A single child content element.
   */
  children: Uc.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: n.oneOfType([n.shape({
    enter: n.string,
    exit: n.string
  }), n.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: n.bool,
  /**
   * @ignore
   */
  onEnter: n.func,
  /**
   * @ignore
   */
  onEntered: n.func,
  /**
   * @ignore
   */
  onEntering: n.func,
  /**
   * @ignore
   */
  onExit: n.func,
  /**
   * @ignore
   */
  onExited: n.func,
  /**
   * @ignore
   */
  onExiting: n.func,
  /**
   * @ignore
   */
  style: n.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: n.oneOfType([n.number, n.shape({
    appear: n.number,
    enter: n.number,
    exit: n.number
  })])
});
const AK = cP;
function BK(e) {
  return je("MuiSpeedDial", e);
}
const zK = He("MuiSpeedDial", ["root", "fab", "directionUp", "directionDown", "directionLeft", "directionRight", "actions", "actionsClosed"]), Vb = zK, FK = ["ref"], jK = ["ariaLabel", "FabProps", "children", "className", "direction", "hidden", "icon", "onBlur", "onClose", "onFocus", "onKeyDown", "onMouseEnter", "onMouseLeave", "onOpen", "open", "openIcon", "TransitionComponent", "transitionDuration", "TransitionProps"], UK = ["ref"], VK = (e) => {
  const {
    classes: r,
    open: s,
    direction: u
  } = e, f = {
    root: ["root", `direction${oe(u)}`],
    fab: ["fab"],
    actions: ["actions", !s && "actionsClosed"]
  };
  return Ue(f, BK, r);
};
function Wv(e) {
  if (e === "up" || e === "down")
    return "vertical";
  if (e === "right" || e === "left")
    return "horizontal";
}
const Pc = 32, Hb = 16, HK = Z("div", {
  name: "MuiSpeedDial",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[`direction${oe(s.direction)}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  zIndex: (e.vars || e).zIndex.speedDial,
  display: "flex",
  alignItems: "center",
  pointerEvents: "none"
}, r.direction === "up" && {
  flexDirection: "column-reverse",
  [`& .${Vb.actions}`]: {
    flexDirection: "column-reverse",
    marginBottom: -Pc,
    paddingBottom: Hb + Pc
  }
}, r.direction === "down" && {
  flexDirection: "column",
  [`& .${Vb.actions}`]: {
    flexDirection: "column",
    marginTop: -Pc,
    paddingTop: Hb + Pc
  }
}, r.direction === "left" && {
  flexDirection: "row-reverse",
  [`& .${Vb.actions}`]: {
    flexDirection: "row-reverse",
    marginRight: -Pc,
    paddingRight: Hb + Pc
  }
}, r.direction === "right" && {
  flexDirection: "row",
  [`& .${Vb.actions}`]: {
    flexDirection: "row",
    marginLeft: -Pc,
    paddingLeft: Hb + Pc
  }
})), WK = Z(nD, {
  name: "MuiSpeedDial",
  slot: "Fab",
  overridesResolver: (e, r) => r.fab
})(() => ({
  pointerEvents: "auto"
})), GK = Z("div", {
  name: "MuiSpeedDial",
  slot: "Actions",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.actions, !s.open && r.actionsClosed];
  }
})(({
  ownerState: e
}) => C({
  display: "flex",
  pointerEvents: "auto"
}, !e.open && {
  transition: "top 0s linear 0.2s",
  pointerEvents: "none"
})), uP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiSpeedDial"
  }), f = to(), v = {
    enter: f.transitions.duration.enteringScreen,
    exit: f.transitions.duration.leavingScreen
  }, {
    ariaLabel: m,
    FabProps: {
      ref: y
    } = {},
    children: b,
    className: S,
    direction: E = "up",
    hidden: k = !1,
    icon: D,
    onBlur: M,
    onClose: P,
    onFocus: L,
    onKeyDown: w,
    onMouseEnter: _,
    onMouseLeave: V,
    onOpen: A,
    open: j,
    TransitionComponent: U = AK,
    transitionDuration: $ = v,
    TransitionProps: F
  } = u, G = me(u.FabProps, FK), Y = me(u, jK), [Q, q] = za({
    controlled: j,
    default: !1,
    name: "SpeedDial",
    state: "open"
  }), re = C({}, u, {
    open: Q,
    direction: E
  }), ee = VK(re), J = El(), ce = O.useRef(0), de = O.useRef(), fe = O.useRef([]);
  fe.current = [fe.current[0]];
  const K = O.useCallback((xe) => {
    fe.current[0] = xe;
  }, []), ne = yn(y, K), ve = (xe, ze) => (ut) => {
    fe.current[xe + 1] = ut, ze && ze(ut);
  }, Ke = (xe) => {
    w && w(xe);
    const ze = xe.key.replace("Arrow", "").toLowerCase(), {
      current: ut = ze
    } = de;
    if (xe.key === "Escape") {
      q(!1), fe.current[0].focus(), P && P(xe, "escapeKeyDown");
      return;
    }
    if (Wv(ze) === Wv(ut) && Wv(ze) !== void 0) {
      xe.preventDefault();
      const Xe = ze === ut ? 1 : -1, rt = Lc(ce.current + Xe, 0, fe.current.length - 1);
      fe.current[rt].focus(), ce.current = rt, de.current = ut;
    }
  };
  O.useEffect(() => {
    Q || (ce.current = 0, de.current = void 0);
  }, [Q]);
  const tt = (xe) => {
    xe.type === "mouseleave" && V && V(xe), xe.type === "blur" && M && M(xe), J.clear(), xe.type === "blur" ? J.start(0, () => {
      q(!1), P && P(xe, "blur");
    }) : (q(!1), P && P(xe, "mouseLeave"));
  }, Ie = (xe) => {
    G.onClick && G.onClick(xe), J.clear(), Q ? (q(!1), P && P(xe, "toggle")) : (q(!0), A && A(xe, "toggle"));
  }, De = (xe) => {
    xe.type === "mouseenter" && _ && _(xe), xe.type === "focus" && L && L(xe), J.clear(), Q || J.start(0, () => {
      q(!0), A && A(xe, {
        focus: "focus",
        mouseenter: "mouseEnter"
      }[xe.type]);
    });
  }, Ye = m.replace(/^[^a-z]+|[^\w:.-]+/gi, ""), ke = O.Children.toArray(b).filter((xe) => (process.env.NODE_ENV !== "production" && Hi.isFragment(xe) && console.error(["MUI: The SpeedDial component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), /* @__PURE__ */ O.isValidElement(xe))), lt = ke.map((xe, ze) => {
    const ut = xe.props, {
      FabProps: {
        ref: Xe
      } = {},
      tooltipPlacement: rt
    } = ut, nt = me(ut.FabProps, UK), le = rt || (Wv(E) === "vertical" ? "left" : "top");
    return /* @__PURE__ */ O.cloneElement(xe, {
      FabProps: C({}, nt, {
        ref: ve(ze, Xe)
      }),
      delay: 30 * (Q ? ze : ke.length - ze),
      open: Q,
      tooltipPlacement: le,
      id: `${Ye}-action-${ze}`
    });
  });
  return /* @__PURE__ */ gt(HK, C({
    className: pe(ee.root, S),
    ref: s,
    role: "presentation",
    onKeyDown: Ke,
    onBlur: tt,
    onFocus: De,
    onMouseEnter: De,
    onMouseLeave: tt,
    ownerState: re
  }, Y, {
    children: [/* @__PURE__ */ z(U, C({
      in: !k,
      timeout: $,
      unmountOnExit: !0
    }, F, {
      children: /* @__PURE__ */ z(WK, C({
        color: "primary",
        "aria-label": m,
        "aria-haspopup": "true",
        "aria-expanded": Q,
        "aria-controls": `${Ye}-actions`
      }, G, {
        onClick: Ie,
        className: pe(ee.fab, G.className),
        ref: ne,
        ownerState: re,
        children: /* @__PURE__ */ O.isValidElement(D) && Rl(D, ["SpeedDialIcon"]) ? /* @__PURE__ */ O.cloneElement(D, {
          open: Q
        }) : D
      }))
    })), /* @__PURE__ */ z(GK, {
      id: `${Ye}-actions`,
      role: "menu",
      "aria-orientation": Wv(E),
      className: pe(ee.actions, !Q && ee.actionsClosed),
      ownerState: re,
      children: lt
    })]
  }));
});
process.env.NODE_ENV !== "production" && (uP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The aria-label of the button element.
   * Also used to provide the `id` for the `SpeedDial` element and its children.
   */
  ariaLabel: n.string.isRequired,
  /**
   * SpeedDialActions to display when the SpeedDial is `open`.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The direction the actions open relative to the floating action button.
   * @default 'up'
   */
  direction: n.oneOf(["down", "left", "right", "up"]),
  /**
   * Props applied to the [`Fab`](/material-ui/api/fab/) element.
   * @default {}
   */
  FabProps: n.object,
  /**
   * If `true`, the SpeedDial is hidden.
   * @default false
   */
  hidden: n.bool,
  /**
   * The icon to display in the SpeedDial Fab. The `SpeedDialIcon` component
   * provides a default Icon with animation.
   */
  icon: n.node,
  /**
   * @ignore
   */
  onBlur: n.func,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"toggle"`, `"blur"`, `"mouseLeave"`, `"escapeKeyDown"`.
   */
  onClose: n.func,
  /**
   * @ignore
   */
  onFocus: n.func,
  /**
   * @ignore
   */
  onKeyDown: n.func,
  /**
   * @ignore
   */
  onMouseEnter: n.func,
  /**
   * @ignore
   */
  onMouseLeave: n.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"toggle"`, `"focus"`, `"mouseEnter"`.
   */
  onOpen: n.func,
  /**
   * If `true`, the component is shown.
   */
  open: n.bool,
  /**
   * The icon to display in the SpeedDial Fab when the SpeedDial is open.
   */
  openIcon: n.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Zoom
   */
  TransitionComponent: n.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: n.oneOfType([n.number, n.shape({
    appear: n.number,
    enter: n.number,
    exit: n.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: n.object
});
const Mte = uP;
function qK(e) {
  return je("MuiTooltip", e);
}
const YK = He("MuiTooltip", ["popper", "popperInteractive", "popperArrow", "popperClose", "tooltip", "tooltipArrow", "touch", "tooltipPlacementLeft", "tooltipPlacementRight", "tooltipPlacementTop", "tooltipPlacementBottom", "arrow"]), Ac = YK, KK = ["arrow", "children", "classes", "components", "componentsProps", "describeChild", "disableFocusListener", "disableHoverListener", "disableInteractive", "disableTouchListener", "enterDelay", "enterNextDelay", "enterTouchDelay", "followCursor", "id", "leaveDelay", "leaveTouchDelay", "onClose", "onOpen", "open", "placement", "PopperComponent", "PopperProps", "slotProps", "slots", "title", "TransitionComponent", "TransitionProps"];
function XK(e) {
  return Math.round(e * 1e5) / 1e5;
}
const QK = (e) => {
  const {
    classes: r,
    disableInteractive: s,
    arrow: u,
    touch: f,
    placement: v
  } = e, m = {
    popper: ["popper", !s && "popperInteractive", u && "popperArrow"],
    tooltip: ["tooltip", u && "tooltipArrow", f && "touch", `tooltipPlacement${oe(v.split("-")[0])}`],
    arrow: ["arrow"]
  };
  return Ue(m, qK, r);
}, ZK = Z(I0, {
  name: "MuiTooltip",
  slot: "Popper",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.popper, !s.disableInteractive && r.popperInteractive, s.arrow && r.popperArrow, !s.open && r.popperClose];
  }
})(({
  theme: e,
  ownerState: r,
  open: s
}) => C({
  zIndex: (e.vars || e).zIndex.tooltip,
  pointerEvents: "none"
}, !r.disableInteractive && {
  pointerEvents: "auto"
}, !s && {
  pointerEvents: "none"
}, r.arrow && {
  [`&[data-popper-placement*="bottom"] .${Ac.arrow}`]: {
    top: 0,
    marginTop: "-0.71em",
    "&::before": {
      transformOrigin: "0 100%"
    }
  },
  [`&[data-popper-placement*="top"] .${Ac.arrow}`]: {
    bottom: 0,
    marginBottom: "-0.71em",
    "&::before": {
      transformOrigin: "100% 0"
    }
  },
  [`&[data-popper-placement*="right"] .${Ac.arrow}`]: C({}, r.isRtl ? {
    right: 0,
    marginRight: "-0.71em"
  } : {
    left: 0,
    marginLeft: "-0.71em"
  }, {
    height: "1em",
    width: "0.71em",
    "&::before": {
      transformOrigin: "100% 100%"
    }
  }),
  [`&[data-popper-placement*="left"] .${Ac.arrow}`]: C({}, r.isRtl ? {
    left: 0,
    marginLeft: "-0.71em"
  } : {
    right: 0,
    marginRight: "-0.71em"
  }, {
    height: "1em",
    width: "0.71em",
    "&::before": {
      transformOrigin: "0 0"
    }
  })
})), JK = Z("div", {
  name: "MuiTooltip",
  slot: "Tooltip",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.tooltip, s.touch && r.touch, s.arrow && r.tooltipArrow, r[`tooltipPlacement${oe(s.placement.split("-")[0])}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  backgroundColor: e.vars ? e.vars.palette.Tooltip.bg : Ut(e.palette.grey[700], 0.92),
  borderRadius: (e.vars || e).shape.borderRadius,
  color: (e.vars || e).palette.common.white,
  fontFamily: e.typography.fontFamily,
  padding: "4px 8px",
  fontSize: e.typography.pxToRem(11),
  maxWidth: 300,
  margin: 2,
  wordWrap: "break-word",
  fontWeight: e.typography.fontWeightMedium
}, r.arrow && {
  position: "relative",
  margin: 0
}, r.touch && {
  padding: "8px 16px",
  fontSize: e.typography.pxToRem(14),
  lineHeight: `${XK(16 / 14)}em`,
  fontWeight: e.typography.fontWeightRegular
}, {
  [`.${Ac.popper}[data-popper-placement*="left"] &`]: C({
    transformOrigin: "right center"
  }, r.isRtl ? C({
    marginLeft: "14px"
  }, r.touch && {
    marginLeft: "24px"
  }) : C({
    marginRight: "14px"
  }, r.touch && {
    marginRight: "24px"
  })),
  [`.${Ac.popper}[data-popper-placement*="right"] &`]: C({
    transformOrigin: "left center"
  }, r.isRtl ? C({
    marginRight: "14px"
  }, r.touch && {
    marginRight: "24px"
  }) : C({
    marginLeft: "14px"
  }, r.touch && {
    marginLeft: "24px"
  })),
  [`.${Ac.popper}[data-popper-placement*="top"] &`]: C({
    transformOrigin: "center bottom",
    marginBottom: "14px"
  }, r.touch && {
    marginBottom: "24px"
  }),
  [`.${Ac.popper}[data-popper-placement*="bottom"] &`]: C({
    transformOrigin: "center top",
    marginTop: "14px"
  }, r.touch && {
    marginTop: "24px"
  })
})), eX = Z("span", {
  name: "MuiTooltip",
  slot: "Arrow",
  overridesResolver: (e, r) => r.arrow
})(({
  theme: e
}) => ({
  overflow: "hidden",
  position: "absolute",
  width: "1em",
  height: "0.71em",
  boxSizing: "border-box",
  color: e.vars ? e.vars.palette.Tooltip.bg : Ut(e.palette.grey[700], 0.9),
  "&::before": {
    content: '""',
    margin: "auto",
    display: "block",
    width: "100%",
    height: "100%",
    backgroundColor: "currentColor",
    transform: "rotate(45deg)"
  }
}));
let Wb = !1;
const wN = new yh();
let Gv = {
  x: 0,
  y: 0
};
function Gb(e, r) {
  return (s) => {
    r && r(s), e(s);
  };
}
const dP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u, f, v, m, y, b, S, E, k, D, M, P, L, w, _, V, A, j, U;
  const $ = Ve({
    props: r,
    name: "MuiTooltip"
  }), {
    arrow: F = !1,
    children: G,
    components: Y = {},
    componentsProps: Q = {},
    describeChild: q = !1,
    disableFocusListener: re = !1,
    disableHoverListener: ee = !1,
    disableInteractive: J = !1,
    disableTouchListener: ce = !1,
    enterDelay: de = 100,
    enterNextDelay: fe = 0,
    enterTouchDelay: K = 700,
    followCursor: ne = !1,
    id: ve,
    leaveDelay: Ke = 0,
    leaveTouchDelay: tt = 1500,
    onClose: Ie,
    onOpen: De,
    open: Ye,
    placement: ke = "bottom",
    PopperComponent: lt,
    PopperProps: xe = {},
    slotProps: ze = {},
    slots: ut = {},
    title: Xe,
    TransitionComponent: rt = C0,
    TransitionProps: nt
  } = $, le = me($, KK), $e = /* @__PURE__ */ O.isValidElement(G) ? G : /* @__PURE__ */ z("span", {
    children: G
  }), Oe = to(), dt = Oe.direction === "rtl", [it, zt] = O.useState(), [Dt, ht] = O.useState(null), Tt = O.useRef(!1), Lt = J || ne, At = El(), tn = El(), an = El(), Qt = El(), [Ce, he] = za({
    controlled: Ye,
    default: !1,
    name: "Tooltip",
    state: "open"
  });
  let Qe = Ce;
  if (process.env.NODE_ENV !== "production") {
    const {
      current: pt
    } = O.useRef(Ye !== void 0);
    O.useEffect(() => {
      it && it.disabled && !pt && Xe !== "" && it.tagName.toLowerCase() === "button" && console.error(["MUI: You are providing a disabled `button` child to the Tooltip component.", "A disabled element does not fire events.", "Tooltip needs to listen to the child element's events to display the title.", "", "Add a simple wrapper element, such as a `span`."].join(`
`));
    }, [Xe, it, pt]);
  }
  const Me = Ms(ve), et = O.useRef(), qe = so(() => {
    et.current !== void 0 && (document.body.style.WebkitUserSelect = et.current, et.current = void 0), Qt.clear();
  });
  O.useEffect(() => qe, [qe]);
  const We = (pt) => {
    wN.clear(), Wb = !0, he(!0), De && !Qe && De(pt);
  }, we = so(
    /**
     * @param {React.SyntheticEvent | Event} event
     */
    (pt) => {
      wN.start(800 + Ke, () => {
        Wb = !1;
      }), he(!1), Ie && Qe && Ie(pt), At.start(Oe.transitions.duration.shortest, () => {
        Tt.current = !1;
      });
    }
  ), Fe = (pt) => {
    Tt.current && pt.type !== "touchstart" || (it && it.removeAttribute("title"), tn.clear(), an.clear(), de || Wb && fe ? tn.start(Wb ? fe : de, () => {
      We(pt);
    }) : We(pt));
  }, st = (pt) => {
    tn.clear(), an.start(Ke, () => {
      we(pt);
    });
  }, {
    isFocusVisibleRef: kt,
    onBlur: Nt,
    onFocus: nn,
    ref: qt
  } = bh(), [, on] = O.useState(!1), _n = (pt) => {
    Nt(pt), kt.current === !1 && (on(!1), st(pt));
  }, fo = (pt) => {
    it || zt(pt.currentTarget), nn(pt), kt.current === !0 && (on(!0), Fe(pt));
  }, dr = (pt) => {
    Tt.current = !0;
    const sn = $e.props;
    sn.onTouchStart && sn.onTouchStart(pt);
  }, Fr = (pt) => {
    dr(pt), an.clear(), At.clear(), qe(), et.current = document.body.style.WebkitUserSelect, document.body.style.WebkitUserSelect = "none", Qt.start(K, () => {
      document.body.style.WebkitUserSelect = et.current, Fe(pt);
    });
  }, ja = (pt) => {
    $e.props.onTouchEnd && $e.props.onTouchEnd(pt), qe(), an.start(tt, () => {
      we(pt);
    });
  };
  O.useEffect(() => {
    if (!Qe)
      return;
    function pt(sn) {
      (sn.key === "Escape" || sn.key === "Esc") && we(sn);
    }
    return document.addEventListener("keydown", pt), () => {
      document.removeEventListener("keydown", pt);
    };
  }, [we, Qe]);
  const jr = yn($e.ref, qt, zt, s);
  !Xe && Xe !== 0 && (Qe = !1);
  const No = O.useRef(), Rn = (pt) => {
    const sn = $e.props;
    sn.onMouseMove && sn.onMouseMove(pt), Gv = {
      x: pt.clientX,
      y: pt.clientY
    }, No.current && No.current.update();
  }, bn = {}, An = typeof Xe == "string";
  q ? (bn.title = !Qe && An && !ee ? Xe : null, bn["aria-describedby"] = Qe ? Me : null) : (bn["aria-label"] = An ? Xe : null, bn["aria-labelledby"] = Qe && !An ? Me : null);
  const Gn = C({}, bn, le, $e.props, {
    className: pe(le.className, $e.props.className),
    onTouchStart: dr,
    ref: jr
  }, ne ? {
    onMouseMove: Rn
  } : {});
  process.env.NODE_ENV !== "production" && (Gn["data-mui-internal-clone-element"] = !0, O.useEffect(() => {
    it && !it.getAttribute("data-mui-internal-clone-element") && console.error(["MUI: The `children` component of the Tooltip is not forwarding its props correctly.", "Please make sure that props are spread on the same element that the ref is applied to."].join(`
`));
  }, [it]));
  const Xn = {};
  ce || (Gn.onTouchStart = Fr, Gn.onTouchEnd = ja), ee || (Gn.onMouseOver = Gb(Fe, Gn.onMouseOver), Gn.onMouseLeave = Gb(st, Gn.onMouseLeave), Lt || (Xn.onMouseOver = Fe, Xn.onMouseLeave = st)), re || (Gn.onFocus = Gb(fo, Gn.onFocus), Gn.onBlur = Gb(_n, Gn.onBlur), Lt || (Xn.onFocus = fo, Xn.onBlur = _n)), process.env.NODE_ENV !== "production" && $e.props.title && console.error(["MUI: You have provided a `title` prop to the child of <Tooltip />.", `Remove this title prop \`${$e.props.title}\` or the Tooltip component.`].join(`
`));
  const Uo = O.useMemo(() => {
    var pt;
    let sn = [{
      name: "arrow",
      enabled: !!Dt,
      options: {
        element: Dt,
        padding: 4
      }
    }];
    return (pt = xe.popperOptions) != null && pt.modifiers && (sn = sn.concat(xe.popperOptions.modifiers)), C({}, xe.popperOptions, {
      modifiers: sn
    });
  }, [Dt, xe]), $o = C({}, $, {
    isRtl: dt,
    arrow: F,
    disableInteractive: Lt,
    placement: ke,
    PopperComponentProp: lt,
    touch: Tt.current
  }), Mo = QK($o), Er = (u = (f = ut.popper) != null ? f : Y.Popper) != null ? u : ZK, Do = (v = (m = (y = ut.transition) != null ? y : Y.Transition) != null ? m : rt) != null ? v : C0, mo = (b = (S = ut.tooltip) != null ? S : Y.Tooltip) != null ? b : JK, Ne = (E = (k = ut.arrow) != null ? k : Y.Arrow) != null ? E : eX, ue = cf(Er, C({}, xe, (D = ze.popper) != null ? D : Q.popper, {
    className: pe(Mo.popper, xe == null ? void 0 : xe.className, (M = (P = ze.popper) != null ? P : Q.popper) == null ? void 0 : M.className)
  }), $o), Ge = cf(Do, C({}, nt, (L = ze.transition) != null ? L : Q.transition), $o), ft = cf(mo, C({}, (w = ze.tooltip) != null ? w : Q.tooltip, {
    className: pe(Mo.tooltip, (_ = (V = ze.tooltip) != null ? V : Q.tooltip) == null ? void 0 : _.className)
  }), $o), en = cf(Ne, C({}, (A = ze.arrow) != null ? A : Q.arrow, {
    className: pe(Mo.arrow, (j = (U = ze.arrow) != null ? U : Q.arrow) == null ? void 0 : j.className)
  }), $o);
  return /* @__PURE__ */ gt(O.Fragment, {
    children: [/* @__PURE__ */ O.cloneElement($e, Gn), /* @__PURE__ */ z(Er, C({
      as: lt ?? I0,
      placement: ke,
      anchorEl: ne ? {
        getBoundingClientRect: () => ({
          top: Gv.y,
          left: Gv.x,
          right: Gv.x,
          bottom: Gv.y,
          width: 0,
          height: 0
        })
      } : it,
      popperRef: No,
      open: it ? Qe : !1,
      id: Me,
      transition: !0
    }, Xn, ue, {
      popperOptions: Uo,
      children: ({
        TransitionProps: pt
      }) => /* @__PURE__ */ z(Do, C({
        timeout: Oe.transitions.duration.shorter
      }, pt, Ge, {
        children: /* @__PURE__ */ gt(mo, C({}, ft, {
          children: [Xe, F ? /* @__PURE__ */ z(Ne, C({}, en, {
            ref: ht
          })) : null]
        }))
      }))
    }))]
  });
});
process.env.NODE_ENV !== "production" && (dP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, adds an arrow to the tooltip.
   * @default false
   */
  arrow: n.bool,
  /**
   * Tooltip reference element.
   */
  children: Uc.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: n.shape({
    Arrow: n.elementType,
    Popper: n.elementType,
    Tooltip: n.elementType,
    Transition: n.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: n.shape({
    arrow: n.object,
    popper: n.object,
    tooltip: n.object,
    transition: n.object
  }),
  /**
   * Set to `true` if the `title` acts as an accessible description.
   * By default the `title` acts as an accessible label for the child.
   * @default false
   */
  describeChild: n.bool,
  /**
   * Do not respond to focus-visible events.
   * @default false
   */
  disableFocusListener: n.bool,
  /**
   * Do not respond to hover events.
   * @default false
   */
  disableHoverListener: n.bool,
  /**
   * Makes a tooltip not interactive, i.e. it will close when the user
   * hovers over the tooltip before the `leaveDelay` is expired.
   * @default false
   */
  disableInteractive: n.bool,
  /**
   * Do not respond to long press touch events.
   * @default false
   */
  disableTouchListener: n.bool,
  /**
   * The number of milliseconds to wait before showing the tooltip.
   * This prop won't impact the enter touch delay (`enterTouchDelay`).
   * @default 100
   */
  enterDelay: n.number,
  /**
   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
   * @default 0
   */
  enterNextDelay: n.number,
  /**
   * The number of milliseconds a user must touch the element before showing the tooltip.
   * @default 700
   */
  enterTouchDelay: n.number,
  /**
   * If `true`, the tooltip follow the cursor over the wrapped element.
   * @default false
   */
  followCursor: n.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: n.string,
  /**
   * The number of milliseconds to wait before hiding the tooltip.
   * This prop won't impact the leave touch delay (`leaveTouchDelay`).
   * @default 0
   */
  leaveDelay: n.number,
  /**
   * The number of milliseconds after the user stops touching an element before hiding the tooltip.
   * @default 1500
   */
  leaveTouchDelay: n.number,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: n.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: n.func,
  /**
   * If `true`, the component is shown.
   */
  open: n.bool,
  /**
   * Tooltip placement.
   * @default 'bottom'
   */
  placement: n.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The component used for the popper.
   * @default Popper
   */
  PopperComponent: n.elementType,
  /**
   * Props applied to the [`Popper`](/material-ui/api/popper/) element.
   * @default {}
   */
  PopperProps: n.object,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: n.shape({
    arrow: n.object,
    popper: n.object,
    tooltip: n.object,
    transition: n.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: n.shape({
    arrow: n.elementType,
    popper: n.elementType,
    tooltip: n.elementType,
    transition: n.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * Tooltip title. Zero-length titles string, undefined, null and false are never displayed.
   */
  title: n.node,
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Grow
   */
  TransitionComponent: n.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: n.object
});
const tX = dP;
function nX(e) {
  return je("MuiSpeedDialAction", e);
}
const oX = He("MuiSpeedDialAction", ["fab", "fabClosed", "staticTooltip", "staticTooltipClosed", "staticTooltipLabel", "tooltipPlacementLeft", "tooltipPlacementRight"]), rX = oX, aX = ["className", "delay", "FabProps", "icon", "id", "open", "TooltipClasses", "tooltipOpen", "tooltipPlacement", "tooltipTitle"], iX = (e) => {
  const {
    open: r,
    tooltipPlacement: s,
    classes: u
  } = e, f = {
    fab: ["fab", !r && "fabClosed"],
    staticTooltip: ["staticTooltip", `tooltipPlacement${oe(s)}`, !r && "staticTooltipClosed"],
    staticTooltipLabel: ["staticTooltipLabel"]
  };
  return Ue(f, nX, u);
}, sX = Z(nD, {
  name: "MuiSpeedDialAction",
  slot: "Fab",
  skipVariantsResolver: !1,
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.fab, !s.open && r.fabClosed];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  margin: 8,
  color: (e.vars || e).palette.text.secondary,
  backgroundColor: (e.vars || e).palette.background.paper,
  "&:hover": {
    backgroundColor: e.vars ? e.vars.palette.SpeedDialAction.fabHoverBg : o0(e.palette.background.paper, 0.15)
  },
  transition: `${e.transitions.create("transform", {
    duration: e.transitions.duration.shorter
  })}, opacity 0.8s`,
  opacity: 1
}, !r.open && {
  opacity: 0,
  transform: "scale(0)"
})), lX = Z("span", {
  name: "MuiSpeedDialAction",
  slot: "StaticTooltip",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.staticTooltip, !s.open && r.staticTooltipClosed, r[`tooltipPlacement${oe(s.tooltipPlacement)}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => ({
  position: "relative",
  display: "flex",
  alignItems: "center",
  [`& .${rX.staticTooltipLabel}`]: C({
    transition: e.transitions.create(["transform", "opacity"], {
      duration: e.transitions.duration.shorter
    }),
    opacity: 1
  }, !r.open && {
    opacity: 0,
    transform: "scale(0.5)"
  }, r.tooltipPlacement === "left" && {
    transformOrigin: "100% 50%",
    right: "100%",
    marginRight: 8
  }, r.tooltipPlacement === "right" && {
    transformOrigin: "0% 50%",
    left: "100%",
    marginLeft: 8
  })
})), cX = Z("span", {
  name: "MuiSpeedDialAction",
  slot: "StaticTooltipLabel",
  overridesResolver: (e, r) => r.staticTooltipLabel
})(({
  theme: e
}) => C({
  position: "absolute"
}, e.typography.body1, {
  backgroundColor: (e.vars || e).palette.background.paper,
  borderRadius: (e.vars || e).shape.borderRadius,
  boxShadow: (e.vars || e).shadows[1],
  color: (e.vars || e).palette.text.secondary,
  padding: "4px 16px",
  wordBreak: "keep-all"
})), pP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiSpeedDialAction"
  }), {
    className: f,
    delay: v = 0,
    FabProps: m = {},
    icon: y,
    id: b,
    open: S,
    TooltipClasses: E,
    tooltipOpen: k = !1,
    tooltipPlacement: D = "left",
    tooltipTitle: M
  } = u, P = me(u, aX), L = C({}, u, {
    tooltipPlacement: D
  }), w = iX(L), [_, V] = O.useState(k), A = () => {
    V(!1);
  }, j = () => {
    V(!0);
  }, U = {
    transitionDelay: `${v}ms`
  }, $ = /* @__PURE__ */ z(sX, C({
    size: "small",
    className: pe(w.fab, f),
    tabIndex: -1,
    role: "menuitem",
    ownerState: L
  }, m, {
    style: C({}, U, m.style),
    children: y
  }));
  return k ? /* @__PURE__ */ gt(lX, C({
    id: b,
    ref: s,
    className: w.staticTooltip,
    ownerState: L
  }, P, {
    children: [/* @__PURE__ */ z(cX, {
      style: U,
      id: `${b}-label`,
      className: w.staticTooltipLabel,
      ownerState: L,
      children: M
    }), /* @__PURE__ */ O.cloneElement($, {
      "aria-labelledby": `${b}-label`
    })]
  })) : (!S && _ && V(!1), /* @__PURE__ */ z(tX, C({
    id: b,
    ref: s,
    title: M,
    placement: D,
    onClose: A,
    onOpen: j,
    open: S && _,
    classes: E
  }, P, {
    children: $
  })));
});
process.env.NODE_ENV !== "production" && (pP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * Adds a transition delay, to allow a series of SpeedDialActions to be animated.
   * @default 0
   */
  delay: n.number,
  /**
   * Props applied to the [`Fab`](/material-ui/api/fab/) component.
   * @default {}
   */
  FabProps: n.object,
  /**
   * The icon to display in the SpeedDial Fab.
   */
  icon: n.node,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: n.string,
  /**
   * If `true`, the component is shown.
   */
  open: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * `classes` prop applied to the [`Tooltip`](/material-ui/api/tooltip/) element.
   */
  TooltipClasses: n.object,
  /**
   * Make the tooltip always visible when the SpeedDial is open.
   * @default false
   */
  tooltipOpen: n.bool,
  /**
   * Placement of the tooltip.
   * @default 'left'
   */
  tooltipPlacement: n.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Label to display in the tooltip.
   */
  tooltipTitle: n.node
});
const Dte = pP, uX = Kn(/* @__PURE__ */ z("path", {
  d: "M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
}), "Add");
function dX(e) {
  return je("MuiSpeedDialIcon", e);
}
const pX = He("MuiSpeedDialIcon", ["root", "icon", "iconOpen", "iconWithOpenIconOpen", "openIcon", "openIconOpen"]), Zu = pX, fX = ["className", "icon", "open", "openIcon"], mX = (e) => {
  const {
    classes: r,
    open: s,
    openIcon: u
  } = e;
  return Ue({
    root: ["root"],
    icon: ["icon", s && "iconOpen", u && s && "iconWithOpenIconOpen"],
    openIcon: ["openIcon", s && "openIconOpen"]
  }, dX, r);
}, vX = Z("span", {
  name: "MuiSpeedDialIcon",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [{
      [`& .${Zu.icon}`]: r.icon
    }, {
      [`& .${Zu.icon}`]: s.open && r.iconOpen
    }, {
      [`& .${Zu.icon}`]: s.open && s.openIcon && r.iconWithOpenIconOpen
    }, {
      [`& .${Zu.openIcon}`]: r.openIcon
    }, {
      [`& .${Zu.openIcon}`]: s.open && r.openIconOpen
    }, r.root];
  }
})(({
  theme: e,
  ownerState: r
}) => ({
  height: 24,
  [`& .${Zu.icon}`]: C({
    transition: e.transitions.create(["transform", "opacity"], {
      duration: e.transitions.duration.short
    })
  }, r.open && C({
    transform: "rotate(45deg)"
  }, r.openIcon && {
    opacity: 0
  })),
  [`& .${Zu.openIcon}`]: C({
    position: "absolute",
    transition: e.transitions.create(["transform", "opacity"], {
      duration: e.transitions.duration.short
    }),
    opacity: 0,
    transform: "rotate(-45deg)"
  }, r.open && {
    transform: "rotate(0deg)",
    opacity: 1
  })
})), eE = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiSpeedDialIcon"
  }), {
    className: f,
    icon: v,
    openIcon: m
  } = u, y = me(u, fX), b = u, S = mX(b);
  function E(k, D) {
    return /* @__PURE__ */ O.isValidElement(k) ? /* @__PURE__ */ O.cloneElement(k, {
      className: D
    }) : k;
  }
  return /* @__PURE__ */ gt(vX, C({
    className: pe(S.root, f),
    ref: s,
    ownerState: b
  }, y, {
    children: [m ? E(m, S.openIcon) : null, v ? E(v, S.icon) : /* @__PURE__ */ z(uX, {
      className: S.icon
    })]
  }));
});
process.env.NODE_ENV !== "production" && (eE.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The icon to display.
   */
  icon: n.node,
  /**
   * @ignore
   * If `true`, the component is shown.
   */
  open: n.bool,
  /**
   * The icon to display in the SpeedDial Floating Action Button when the SpeedDial is open.
   */
  openIcon: n.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
eE.muiName = "SpeedDialIcon";
const Pte = eE, tE = /* @__PURE__ */ O.createContext({});
process.env.NODE_ENV !== "production" && (tE.displayName = "StepperContext");
function Lte() {
  return O.useContext(tE);
}
const xf = tE, nE = /* @__PURE__ */ O.createContext({});
process.env.NODE_ENV !== "production" && (nE.displayName = "StepContext");
function Ite() {
  return O.useContext(nE);
}
const Oh = nE;
function hX(e) {
  return je("MuiStep", e);
}
const gX = He("MuiStep", ["root", "horizontal", "vertical", "alternativeLabel", "completed"]), _te = gX, yX = ["active", "children", "className", "component", "completed", "disabled", "expanded", "index", "last"], bX = (e) => {
  const {
    classes: r,
    orientation: s,
    alternativeLabel: u,
    completed: f
  } = e;
  return Ue({
    root: ["root", s, u && "alternativeLabel", f && "completed"]
  }, hX, r);
}, CX = Z("div", {
  name: "MuiStep",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[s.orientation], s.alternativeLabel && r.alternativeLabel, s.completed && r.completed];
  }
})(({
  ownerState: e
}) => C({}, e.orientation === "horizontal" && {
  paddingLeft: 8,
  paddingRight: 8
}, e.alternativeLabel && {
  flex: 1,
  position: "relative"
})), fP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiStep"
  }), {
    active: f,
    children: v,
    className: m,
    component: y = "div",
    completed: b,
    disabled: S,
    expanded: E = !1,
    index: k,
    last: D
  } = u, M = me(u, yX), {
    activeStep: P,
    connector: L,
    alternativeLabel: w,
    orientation: _,
    nonLinear: V
  } = O.useContext(xf);
  let [A = !1, j = !1, U = !1] = [f, b, S];
  P === k ? A = f !== void 0 ? f : !0 : !V && P > k ? j = b !== void 0 ? b : !0 : !V && P < k && (U = S !== void 0 ? S : !0);
  const $ = O.useMemo(() => ({
    index: k,
    last: D,
    expanded: E,
    icon: k + 1,
    active: A,
    completed: j,
    disabled: U
  }), [k, D, E, A, j, U]), F = C({}, u, {
    active: A,
    orientation: _,
    alternativeLabel: w,
    completed: j,
    disabled: U,
    expanded: E,
    component: y
  }), G = bX(F), Y = /* @__PURE__ */ gt(CX, C({
    as: y,
    className: pe(G.root, m),
    ref: s,
    ownerState: F
  }, M, {
    children: [L && w && k !== 0 ? L : null, v]
  }));
  return /* @__PURE__ */ z(Oh.Provider, {
    value: $,
    children: L && !w && k !== 0 ? /* @__PURE__ */ gt(O.Fragment, {
      children: [L, Y]
    }) : Y
  });
});
process.env.NODE_ENV !== "production" && (fP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Sets the step as active. Is passed to child components.
   */
  active: n.bool,
  /**
   * Should be `Step` sub-components such as `StepLabel`, `StepContent`.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * Mark the step as completed. Is passed to child components.
   */
  completed: n.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * If `true`, the step is disabled, will also disable the button if
   * `StepButton` is a child of `Step`. Is passed to child components.
   */
  disabled: n.bool,
  /**
   * Expand the step.
   * @default false
   */
  expanded: n.bool,
  /**
   * The position of the step.
   * The prop defaults to the value inherited from the parent Stepper component.
   */
  index: Co,
  /**
   * If `true`, the Step is displayed as rendered last.
   * The prop defaults to the value inherited from the parent Stepper component.
   */
  last: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const Ate = fP, xX = Kn(/* @__PURE__ */ z("path", {
  d: "M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24zm-2 17l-5-5 1.4-1.4 3.6 3.6 7.6-7.6L19 8l-9 9z"
}), "CheckCircle"), SX = Kn(/* @__PURE__ */ z("path", {
  d: "M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"
}), "Warning");
function TX(e) {
  return je("MuiStepIcon", e);
}
const EX = He("MuiStepIcon", ["root", "active", "completed", "error", "text"]), BT = EX;
var kN;
const RX = ["active", "className", "completed", "error", "icon"], OX = (e) => {
  const {
    classes: r,
    active: s,
    completed: u,
    error: f
  } = e;
  return Ue({
    root: ["root", s && "active", u && "completed", f && "error"],
    text: ["text"]
  }, TX, r);
}, zT = Z(XT, {
  name: "MuiStepIcon",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})(({
  theme: e
}) => ({
  display: "block",
  transition: e.transitions.create("color", {
    duration: e.transitions.duration.shortest
  }),
  color: (e.vars || e).palette.text.disabled,
  [`&.${BT.completed}`]: {
    color: (e.vars || e).palette.primary.main
  },
  [`&.${BT.active}`]: {
    color: (e.vars || e).palette.primary.main
  },
  [`&.${BT.error}`]: {
    color: (e.vars || e).palette.error.main
  }
})), wX = Z("text", {
  name: "MuiStepIcon",
  slot: "Text",
  overridesResolver: (e, r) => r.text
})(({
  theme: e
}) => ({
  fill: (e.vars || e).palette.primary.contrastText,
  fontSize: e.typography.caption.fontSize,
  fontFamily: e.typography.fontFamily
})), mP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiStepIcon"
  }), {
    active: f = !1,
    className: v,
    completed: m = !1,
    error: y = !1,
    icon: b
  } = u, S = me(u, RX), E = C({}, u, {
    active: f,
    completed: m,
    error: y
  }), k = OX(E);
  if (typeof b == "number" || typeof b == "string") {
    const D = pe(v, k.root);
    return y ? /* @__PURE__ */ z(zT, C({
      as: SX,
      className: D,
      ref: s,
      ownerState: E
    }, S)) : m ? /* @__PURE__ */ z(zT, C({
      as: xX,
      className: D,
      ref: s,
      ownerState: E
    }, S)) : /* @__PURE__ */ gt(zT, C({
      className: D,
      ref: s,
      ownerState: E
    }, S, {
      children: [kN || (kN = /* @__PURE__ */ z("circle", {
        cx: "12",
        cy: "12",
        r: "12"
      })), /* @__PURE__ */ z(wX, {
        className: k.text,
        x: "12",
        y: "12",
        textAnchor: "middle",
        dominantBaseline: "central",
        ownerState: E,
        children: b
      })]
    }));
  }
  return b;
});
process.env.NODE_ENV !== "production" && (mP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Whether this step is active.
   * @default false
   */
  active: n.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * Mark the step as completed. Is passed to child components.
   * @default false
   */
  completed: n.bool,
  /**
   * If `true`, the step is marked as failed.
   * @default false
   */
  error: n.bool,
  /**
   * The label displayed in the step icon.
   */
  icon: n.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const kX = mP;
function NX(e) {
  return je("MuiStepLabel", e);
}
const $X = He("MuiStepLabel", ["root", "horizontal", "vertical", "label", "active", "completed", "error", "disabled", "iconContainer", "alternativeLabel", "labelContainer"]), Bc = $X, MX = ["children", "className", "componentsProps", "error", "icon", "optional", "slotProps", "StepIconComponent", "StepIconProps"], DX = (e) => {
  const {
    classes: r,
    orientation: s,
    active: u,
    completed: f,
    error: v,
    disabled: m,
    alternativeLabel: y
  } = e;
  return Ue({
    root: ["root", s, v && "error", m && "disabled", y && "alternativeLabel"],
    label: ["label", u && "active", f && "completed", v && "error", m && "disabled", y && "alternativeLabel"],
    iconContainer: ["iconContainer", u && "active", f && "completed", v && "error", m && "disabled", y && "alternativeLabel"],
    labelContainer: ["labelContainer", y && "alternativeLabel"]
  }, NX, r);
}, PX = Z("span", {
  name: "MuiStepLabel",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[s.orientation]];
  }
})(({
  ownerState: e
}) => C({
  display: "flex",
  alignItems: "center",
  [`&.${Bc.alternativeLabel}`]: {
    flexDirection: "column"
  },
  [`&.${Bc.disabled}`]: {
    cursor: "default"
  }
}, e.orientation === "vertical" && {
  textAlign: "left",
  padding: "8px 0"
})), LX = Z("span", {
  name: "MuiStepLabel",
  slot: "Label",
  overridesResolver: (e, r) => r.label
})(({
  theme: e
}) => C({}, e.typography.body2, {
  display: "block",
  transition: e.transitions.create("color", {
    duration: e.transitions.duration.shortest
  }),
  [`&.${Bc.active}`]: {
    color: (e.vars || e).palette.text.primary,
    fontWeight: 500
  },
  [`&.${Bc.completed}`]: {
    color: (e.vars || e).palette.text.primary,
    fontWeight: 500
  },
  [`&.${Bc.alternativeLabel}`]: {
    marginTop: 16
  },
  [`&.${Bc.error}`]: {
    color: (e.vars || e).palette.error.main
  }
})), IX = Z("span", {
  name: "MuiStepLabel",
  slot: "IconContainer",
  overridesResolver: (e, r) => r.iconContainer
})(() => ({
  flexShrink: 0,
  // Fix IE11 issue
  display: "flex",
  paddingRight: 8,
  [`&.${Bc.alternativeLabel}`]: {
    paddingRight: 0
  }
})), _X = Z("span", {
  name: "MuiStepLabel",
  slot: "LabelContainer",
  overridesResolver: (e, r) => r.labelContainer
})(({
  theme: e
}) => ({
  width: "100%",
  color: (e.vars || e).palette.text.secondary,
  [`&.${Bc.alternativeLabel}`]: {
    textAlign: "center"
  }
})), oE = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u;
  const f = Ve({
    props: r,
    name: "MuiStepLabel"
  }), {
    children: v,
    className: m,
    componentsProps: y = {},
    error: b = !1,
    icon: S,
    optional: E,
    slotProps: k = {},
    StepIconComponent: D,
    StepIconProps: M
  } = f, P = me(f, MX), {
    alternativeLabel: L,
    orientation: w
  } = O.useContext(xf), {
    active: _,
    disabled: V,
    completed: A,
    icon: j
  } = O.useContext(Oh), U = S || j;
  let $ = D;
  U && !$ && ($ = kX);
  const F = C({}, f, {
    active: _,
    alternativeLabel: L,
    completed: A,
    disabled: V,
    error: b,
    orientation: w
  }), G = DX(F), Y = (u = k.label) != null ? u : y.label;
  return /* @__PURE__ */ gt(PX, C({
    className: pe(G.root, m),
    ref: s,
    ownerState: F
  }, P, {
    children: [U || $ ? /* @__PURE__ */ z(IX, {
      className: G.iconContainer,
      ownerState: F,
      children: /* @__PURE__ */ z($, C({
        completed: A,
        active: _,
        error: b,
        icon: U
      }, M))
    }) : null, /* @__PURE__ */ gt(_X, {
      className: G.labelContainer,
      ownerState: F,
      children: [v ? /* @__PURE__ */ z(LX, C({
        ownerState: F
      }, Y, {
        className: pe(G.label, Y == null ? void 0 : Y.className),
        children: v
      })) : null, E]
    })]
  }));
});
process.env.NODE_ENV !== "production" && (oE.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * In most cases will simply be a string containing a title for the label.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  componentsProps: n.shape({
    label: n.object
  }),
  /**
   * If `true`, the step is marked as failed.
   * @default false
   */
  error: n.bool,
  /**
   * Override the default label of the step icon.
   */
  icon: n.node,
  /**
   * The optional node to display.
   */
  optional: n.node,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: n.shape({
    label: n.object
  }),
  /**
   * The component to render in place of the [`StepIcon`](/material-ui/api/step-icon/).
   */
  StepIconComponent: n.elementType,
  /**
   * Props applied to the [`StepIcon`](/material-ui/api/step-icon/) element.
   */
  StepIconProps: n.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
oE.muiName = "StepLabel";
const AX = oE;
function BX(e) {
  return je("MuiStepButton", e);
}
const zX = He("MuiStepButton", ["root", "horizontal", "vertical", "touchRipple"]), NN = zX, FX = ["children", "className", "icon", "optional"], jX = (e) => {
  const {
    classes: r,
    orientation: s
  } = e;
  return Ue({
    root: ["root", s],
    touchRipple: ["touchRipple"]
  }, BX, r);
}, UX = Z(er, {
  name: "MuiStepButton",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [{
      [`& .${NN.touchRipple}`]: r.touchRipple
    }, r.root, r[s.orientation]];
  }
})(({
  ownerState: e
}) => C({
  width: "100%",
  padding: "24px 16px",
  margin: "-24px -16px",
  boxSizing: "content-box"
}, e.orientation === "vertical" && {
  justifyContent: "flex-start",
  padding: "8px",
  margin: "-8px"
}, {
  [`& .${NN.touchRipple}`]: {
    color: "rgba(0, 0, 0, 0.3)"
  }
})), vP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiStepButton"
  }), {
    children: f,
    className: v,
    icon: m,
    optional: y
  } = u, b = me(u, FX), {
    disabled: S,
    active: E
  } = O.useContext(Oh), {
    orientation: k
  } = O.useContext(xf), D = C({}, u, {
    orientation: k
  }), M = jX(D), P = {
    icon: m,
    optional: y
  }, L = Rl(f, ["StepLabel"]) ? /* @__PURE__ */ O.cloneElement(f, P) : /* @__PURE__ */ z(AX, C({}, P, {
    children: f
  }));
  return /* @__PURE__ */ z(UX, C({
    focusRipple: !0,
    disabled: S,
    TouchRippleProps: {
      className: M.touchRipple
    },
    className: pe(M.root, v),
    ref: s,
    ownerState: D,
    "aria-current": E ? "step" : void 0
  }, b, {
    children: L
  }));
});
process.env.NODE_ENV !== "production" && (vP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Can be a `StepLabel` or a node to place inside `StepLabel` as children.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The icon displayed by the step label.
   */
  icon: n.node,
  /**
   * The optional node to display.
   */
  optional: n.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const Bte = vP;
function VX(e) {
  return je("MuiStepConnector", e);
}
const HX = He("MuiStepConnector", ["root", "horizontal", "vertical", "alternativeLabel", "active", "completed", "disabled", "line", "lineHorizontal", "lineVertical"]), zte = HX, WX = ["className"], GX = (e) => {
  const {
    classes: r,
    orientation: s,
    alternativeLabel: u,
    active: f,
    completed: v,
    disabled: m
  } = e, y = {
    root: ["root", s, u && "alternativeLabel", f && "active", v && "completed", m && "disabled"],
    line: ["line", `line${oe(s)}`]
  };
  return Ue(y, VX, r);
}, qX = Z("div", {
  name: "MuiStepConnector",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[s.orientation], s.alternativeLabel && r.alternativeLabel, s.completed && r.completed];
  }
})(({
  ownerState: e
}) => C({
  flex: "1 1 auto"
}, e.orientation === "vertical" && {
  marginLeft: 12
  // half icon
}, e.alternativeLabel && {
  position: "absolute",
  top: 8 + 4,
  left: "calc(-50% + 20px)",
  right: "calc(50% + 20px)"
})), YX = Z("span", {
  name: "MuiStepConnector",
  slot: "Line",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.line, r[`line${oe(s.orientation)}`]];
  }
})(({
  ownerState: e,
  theme: r
}) => {
  const s = r.palette.mode === "light" ? r.palette.grey[400] : r.palette.grey[600];
  return C({
    display: "block",
    borderColor: r.vars ? r.vars.palette.StepConnector.border : s
  }, e.orientation === "horizontal" && {
    borderTopStyle: "solid",
    borderTopWidth: 1
  }, e.orientation === "vertical" && {
    borderLeftStyle: "solid",
    borderLeftWidth: 1,
    minHeight: 24
  });
}), hP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiStepConnector"
  }), {
    className: f
  } = u, v = me(u, WX), {
    alternativeLabel: m,
    orientation: y = "horizontal"
  } = O.useContext(xf), {
    active: b,
    disabled: S,
    completed: E
  } = O.useContext(Oh), k = C({}, u, {
    alternativeLabel: m,
    orientation: y,
    active: b,
    completed: E,
    disabled: S
  }), D = GX(k);
  return /* @__PURE__ */ z(qX, C({
    className: pe(D.root, f),
    ref: s,
    ownerState: k
  }, v, {
    children: /* @__PURE__ */ z(YX, {
      className: D.line,
      ownerState: k
    })
  }));
});
process.env.NODE_ENV !== "production" && (hP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const KX = hP;
function XX(e) {
  return je("MuiStepContent", e);
}
const QX = He("MuiStepContent", ["root", "last", "transition"]), Fte = QX, ZX = ["children", "className", "TransitionComponent", "transitionDuration", "TransitionProps"], JX = (e) => {
  const {
    classes: r,
    last: s
  } = e;
  return Ue({
    root: ["root", s && "last"],
    transition: ["transition"]
  }, XX, r);
}, eQ = Z("div", {
  name: "MuiStepContent",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.last && r.last];
  }
})(({
  ownerState: e,
  theme: r
}) => C({
  marginLeft: 12,
  // half icon
  paddingLeft: 8 + 12,
  // margin + half icon
  paddingRight: 8,
  borderLeft: r.vars ? `1px solid ${r.vars.palette.StepContent.border}` : `1px solid ${r.palette.mode === "light" ? r.palette.grey[400] : r.palette.grey[600]}`
}, e.last && {
  borderLeft: "none"
})), tQ = Z(O1, {
  name: "MuiStepContent",
  slot: "Transition",
  overridesResolver: (e, r) => r.transition
})({}), gP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiStepContent"
  }), {
    children: f,
    className: v,
    TransitionComponent: m = O1,
    transitionDuration: y = "auto",
    TransitionProps: b
  } = u, S = me(u, ZX), {
    orientation: E
  } = O.useContext(xf), {
    active: k,
    last: D,
    expanded: M
  } = O.useContext(Oh), P = C({}, u, {
    last: D
  }), L = JX(P);
  process.env.NODE_ENV !== "production" && E !== "vertical" && console.error("MUI: <StepContent /> is only designed for use with the vertical stepper.");
  let w = y;
  return y === "auto" && !m.muiSupportAuto && (w = void 0), /* @__PURE__ */ z(eQ, C({
    className: pe(L.root, v),
    ref: s,
    ownerState: P
  }, S, {
    children: /* @__PURE__ */ z(tQ, C({
      as: m,
      in: k || M,
      className: L.transition,
      ownerState: P,
      timeout: w,
      unmountOnExit: !0
    }, b, {
      children: f
    }))
  }));
});
process.env.NODE_ENV !== "production" && (gP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Collapse
   */
  TransitionComponent: n.elementType,
  /**
   * Adjust the duration of the content expand transition.
   * Passed as a prop to the transition component.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: n.oneOfType([n.oneOf(["auto"]), n.number, n.shape({
    appear: n.number,
    enter: n.number,
    exit: n.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: n.object
});
const jte = gP;
function nQ(e) {
  return je("MuiStepper", e);
}
const oQ = He("MuiStepper", ["root", "horizontal", "vertical", "alternativeLabel"]), Ute = oQ, rQ = ["activeStep", "alternativeLabel", "children", "className", "component", "connector", "nonLinear", "orientation"], aQ = (e) => {
  const {
    orientation: r,
    alternativeLabel: s,
    classes: u
  } = e;
  return Ue({
    root: ["root", r, s && "alternativeLabel"]
  }, nQ, u);
}, iQ = Z("div", {
  name: "MuiStepper",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[s.orientation], s.alternativeLabel && r.alternativeLabel];
  }
})(({
  ownerState: e
}) => C({
  display: "flex"
}, e.orientation === "horizontal" && {
  flexDirection: "row",
  alignItems: "center"
}, e.orientation === "vertical" && {
  flexDirection: "column"
}, e.alternativeLabel && {
  alignItems: "flex-start"
})), sQ = /* @__PURE__ */ z(KX, {}), yP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiStepper"
  }), {
    activeStep: f = 0,
    alternativeLabel: v = !1,
    children: m,
    className: y,
    component: b = "div",
    connector: S = sQ,
    nonLinear: E = !1,
    orientation: k = "horizontal"
  } = u, D = me(u, rQ), M = C({}, u, {
    alternativeLabel: v,
    orientation: k,
    component: b
  }), P = aQ(M), L = O.Children.toArray(m).filter(Boolean), w = L.map((V, A) => /* @__PURE__ */ O.cloneElement(V, C({
    index: A,
    last: A + 1 === L.length
  }, V.props))), _ = O.useMemo(() => ({
    activeStep: f,
    alternativeLabel: v,
    connector: S,
    nonLinear: E,
    orientation: k
  }), [f, v, S, E, k]);
  return /* @__PURE__ */ z(xf.Provider, {
    value: _,
    children: /* @__PURE__ */ z(iQ, C({
      as: b,
      ownerState: M,
      className: pe(P.root, y),
      ref: s
    }, D, {
      children: w
    }))
  });
});
process.env.NODE_ENV !== "production" && (yP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the active step (zero based index).
   * Set to -1 to disable all the steps.
   * @default 0
   */
  activeStep: Co,
  /**
   * If set to 'true' and orientation is horizontal,
   * then the step label will be positioned under the icon.
   * @default false
   */
  alternativeLabel: n.bool,
  /**
   * Two or more `<Step />` components.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * An element to be placed between each step.
   * @default <StepConnector />
   */
  connector: n.element,
  /**
   * If set the `Stepper` will not assist in controlling steps for linear flow.
   * @default false
   */
  nonLinear: n.bool,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: n.oneOf(["horizontal", "vertical"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const Vte = yP, lQ = ["anchor", "classes", "className", "width", "style"], cQ = Z("div", {
  shouldForwardProp: ko
})(({
  theme: e,
  ownerState: r
}) => C({
  position: "fixed",
  top: 0,
  left: 0,
  bottom: 0,
  zIndex: e.zIndex.drawer - 1
}, r.anchor === "left" && {
  right: "auto"
}, r.anchor === "right" && {
  left: "auto",
  right: 0
}, r.anchor === "top" && {
  bottom: "auto",
  right: 0
}, r.anchor === "bottom" && {
  top: "auto",
  bottom: 0,
  right: 0
})), bP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const {
    anchor: u,
    classes: f = {},
    className: v,
    width: m,
    style: y
  } = r, b = me(r, lQ), S = r;
  return /* @__PURE__ */ z(cQ, C({
    className: pe("PrivateSwipeArea-root", f.root, f[`anchor${oe(u)}`], v),
    ref: s,
    style: C({
      [nd(u) ? "width" : "height"]: m
    }, y),
    ownerState: S
  }, b));
});
process.env.NODE_ENV !== "production" && (bP.propTypes = {
  /**
   * Side on which to attach the discovery area.
   */
  anchor: n.oneOf(["left", "top", "right", "bottom"]).isRequired,
  /**
   * @ignore
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * @ignore
   */
  style: n.object,
  /**
   * The width of the left most (or right most) area in `px` where the
   * drawer can be swiped open from.
   */
  width: n.number.isRequired
});
const uQ = bP, dQ = ["BackdropProps"], pQ = ["anchor", "disableBackdropTransition", "disableDiscovery", "disableSwipeToOpen", "hideBackdrop", "hysteresis", "allowSwipeInChildren", "minFlingVelocity", "ModalProps", "onClose", "onOpen", "open", "PaperProps", "SwipeAreaProps", "swipeAreaWidth", "transitionDuration", "variant"], qb = 3, FT = 20;
let Sl = null;
function jT(e, r, s) {
  return e === "right" ? s.body.offsetWidth - r[0].pageX : r[0].pageX;
}
function UT(e, r, s) {
  return e === "bottom" ? s.innerHeight - r[0].clientY : r[0].clientY;
}
function qv(e, r) {
  return e ? r.clientWidth : r.clientHeight;
}
function $N(e, r, s, u) {
  return Math.min(Math.max(s ? r - e : u + r - e, 0), u);
}
function fQ(e, r) {
  const s = [];
  for (; e && e !== r.parentElement; ) {
    const u = ta(r).getComputedStyle(e);
    // Ignore the scroll children if the element is absolute positioned.
    u.getPropertyValue("position") === "absolute" || // Ignore the scroll children if the element has an overflowX hidden
    u.getPropertyValue("overflow-x") === "hidden" || (e.clientWidth > 0 && e.scrollWidth > e.clientWidth || e.clientHeight > 0 && e.scrollHeight > e.clientHeight) && s.push(e), e = e.parentElement;
  }
  return s;
}
function mQ({
  domTreeShapes: e,
  start: r,
  current: s,
  anchor: u
}) {
  const f = {
    scrollPosition: {
      x: "scrollLeft",
      y: "scrollTop"
    },
    scrollLength: {
      x: "scrollWidth",
      y: "scrollHeight"
    },
    clientLength: {
      x: "clientWidth",
      y: "clientHeight"
    }
  };
  return e.some((v) => {
    let m = s >= r;
    (u === "top" || u === "left") && (m = !m);
    const y = u === "left" || u === "right" ? "x" : "y", b = Math.round(v[f.scrollPosition[y]]), S = b > 0, E = b + v[f.clientLength[y]] < v[f.scrollLength[y]];
    return !!(m && E || !m && S);
  });
}
const vQ = typeof navigator < "u" && /iPad|iPhone|iPod/.test(navigator.userAgent), CP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = vh({
    name: "MuiSwipeableDrawer",
    props: r
  }), f = to(), v = {
    enter: f.transitions.duration.enteringScreen,
    exit: f.transitions.duration.leavingScreen
  }, {
    anchor: m = "left",
    disableBackdropTransition: y = !1,
    disableDiscovery: b = !1,
    disableSwipeToOpen: S = vQ,
    hideBackdrop: E,
    hysteresis: k = 0.52,
    allowSwipeInChildren: D = !1,
    minFlingVelocity: M = 450,
    ModalProps: {
      BackdropProps: P
    } = {},
    onClose: L,
    onOpen: w,
    open: _ = !1,
    PaperProps: V = {},
    SwipeAreaProps: A,
    swipeAreaWidth: j = 20,
    transitionDuration: U = v,
    variant: $ = "temporary"
    // Mobile first.
  } = u, F = me(u.ModalProps, dQ), G = me(u, pQ), [Y, Q] = O.useState(!1), q = O.useRef({
    isSwiping: null
  }), re = O.useRef(), ee = O.useRef(), J = O.useRef(), ce = yn(V.ref, J), de = O.useRef(!1), fe = O.useRef();
  ur(() => {
    fe.current = null;
  }, [_]);
  const K = O.useCallback((Ie, De = {}) => {
    const {
      mode: Ye = null,
      changeTransition: ke = !0
    } = De, lt = Qv(f, m), xe = ["right", "bottom"].indexOf(lt) !== -1 ? 1 : -1, ze = nd(m), ut = ze ? `translate(${xe * Ie}px, 0)` : `translate(0, ${xe * Ie}px)`, Xe = J.current.style;
    Xe.webkitTransform = ut, Xe.transform = ut;
    let rt = "";
    if (Ye && (rt = f.transitions.create("all", Ui({
      easing: void 0,
      style: void 0,
      timeout: U
    }, {
      mode: Ye
    }))), ke && (Xe.webkitTransition = rt, Xe.transition = rt), !y && !E) {
      const nt = ee.current.style;
      nt.opacity = 1 - Ie / qv(ze, J.current), ke && (nt.webkitTransition = rt, nt.transition = rt);
    }
  }, [m, y, E, f, U]), ne = so((Ie) => {
    if (!de.current)
      return;
    if (Sl = null, de.current = !1, u0.flushSync(() => {
      Q(!1);
    }), !q.current.isSwiping) {
      q.current.isSwiping = null;
      return;
    }
    q.current.isSwiping = null;
    const De = Qv(f, m), Ye = nd(m);
    let ke;
    Ye ? ke = jT(De, Ie.changedTouches, Wn(Ie.currentTarget)) : ke = UT(De, Ie.changedTouches, ta(Ie.currentTarget));
    const lt = Ye ? q.current.startX : q.current.startY, xe = qv(Ye, J.current), ze = $N(ke, lt, _, xe), ut = ze / xe;
    if (Math.abs(q.current.velocity) > M && (fe.current = Math.abs((xe - ze) / q.current.velocity) * 1e3), _) {
      q.current.velocity > M || ut > k ? L() : K(0, {
        mode: "exit"
      });
      return;
    }
    q.current.velocity < -M || 1 - ut > k ? w() : K(qv(Ye, J.current), {
      mode: "enter"
    });
  }), ve = (Ie = !1) => {
    if (!Y) {
      (Ie || !(b && D)) && u0.flushSync(() => {
        Q(!0);
      });
      const De = nd(m);
      !_ && J.current && K(qv(De, J.current) + (b ? 15 : -FT), {
        changeTransition: !1
      }), q.current.velocity = 0, q.current.lastTime = null, q.current.lastTranslate = null, q.current.paperHit = !1, de.current = !0;
    }
  }, Ke = so((Ie) => {
    if (!J.current || !de.current || Sl !== null && Sl !== q.current)
      return;
    ve(!0);
    const De = Qv(f, m), Ye = nd(m), ke = jT(De, Ie.touches, Wn(Ie.currentTarget)), lt = UT(De, Ie.touches, ta(Ie.currentTarget));
    if (_ && J.current.contains(Ie.target) && Sl === null) {
      const rt = fQ(Ie.target, J.current);
      if (mQ({
        domTreeShapes: rt,
        start: Ye ? q.current.startX : q.current.startY,
        current: Ye ? ke : lt,
        anchor: m
      })) {
        Sl = !0;
        return;
      }
      Sl = q.current;
    }
    if (q.current.isSwiping == null) {
      const rt = Math.abs(ke - q.current.startX), nt = Math.abs(lt - q.current.startY), le = Ye ? rt > nt && rt > qb : nt > rt && nt > qb;
      if (le && Ie.cancelable && Ie.preventDefault(), le === !0 || (Ye ? nt > qb : rt > qb)) {
        if (q.current.isSwiping = le, !le) {
          ne(Ie);
          return;
        }
        q.current.startX = ke, q.current.startY = lt, !b && !_ && (Ye ? q.current.startX -= FT : q.current.startY -= FT);
      }
    }
    if (!q.current.isSwiping)
      return;
    const xe = qv(Ye, J.current);
    let ze = Ye ? q.current.startX : q.current.startY;
    _ && !q.current.paperHit && (ze = Math.min(ze, xe));
    const ut = $N(Ye ? ke : lt, ze, _, xe);
    if (_)
      if (q.current.paperHit)
        ut === 0 && (q.current.startX = ke, q.current.startY = lt);
      else if (Ye ? ke < xe : lt < xe)
        q.current.paperHit = !0, q.current.startX = ke, q.current.startY = lt;
      else
        return;
    q.current.lastTranslate === null && (q.current.lastTranslate = ut, q.current.lastTime = performance.now() + 1);
    const Xe = (ut - q.current.lastTranslate) / (performance.now() - q.current.lastTime) * 1e3;
    q.current.velocity = q.current.velocity * 0.4 + Xe * 0.6, q.current.lastTranslate = ut, q.current.lastTime = performance.now(), Ie.cancelable && Ie.preventDefault(), K(ut);
  }), tt = so((Ie) => {
    if (Ie.defaultPrevented || Ie.defaultMuiPrevented || _ && (E || !ee.current.contains(Ie.target)) && !J.current.contains(Ie.target))
      return;
    const De = Qv(f, m), Ye = nd(m), ke = jT(De, Ie.touches, Wn(Ie.currentTarget)), lt = UT(De, Ie.touches, ta(Ie.currentTarget));
    if (!_) {
      var xe;
      if (S || !(Ie.target === re.current || (xe = J.current) != null && xe.contains(Ie.target) && (typeof D == "function" ? D(Ie, re.current, J.current) : D)))
        return;
      if (Ye) {
        if (ke > j)
          return;
      } else if (lt > j)
        return;
    }
    Ie.defaultMuiPrevented = !0, Sl = null, q.current.startX = ke, q.current.startY = lt, ve();
  });
  return O.useEffect(() => {
    if ($ === "temporary") {
      const Ie = Wn(J.current);
      return Ie.addEventListener("touchstart", tt), Ie.addEventListener("touchmove", Ke, {
        passive: !_
      }), Ie.addEventListener("touchend", ne), () => {
        Ie.removeEventListener("touchstart", tt), Ie.removeEventListener("touchmove", Ke, {
          passive: !_
        }), Ie.removeEventListener("touchend", ne);
      };
    }
  }, [$, _, tt, Ke, ne]), O.useEffect(() => () => {
    Sl === q.current && (Sl = null);
  }, []), O.useEffect(() => {
    _ || Q(!1);
  }, [_]), /* @__PURE__ */ gt(O.Fragment, {
    children: [/* @__PURE__ */ z($W, C({
      open: $ === "temporary" && Y ? !0 : _,
      variant: $,
      ModalProps: C({
        BackdropProps: C({}, P, {
          ref: ee
        })
      }, $ === "temporary" && {
        keepMounted: !0
      }, F),
      hideBackdrop: E,
      PaperProps: C({}, V, {
        style: C({
          pointerEvents: $ === "temporary" && !_ && !D ? "none" : ""
        }, V.style),
        ref: ce
      }),
      anchor: m,
      transitionDuration: fe.current || U,
      onClose: L,
      ref: s
    }, G)), !S && $ === "temporary" && /* @__PURE__ */ z(v0, {
      children: /* @__PURE__ */ z(uQ, C({
        anchor: m,
        ref: re,
        width: j
      }, A))
    })]
  });
});
process.env.NODE_ENV !== "production" && (CP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If set to true, the swipe event will open the drawer even if the user begins the swipe on one of the drawer's children.
   * This can be useful in scenarios where the drawer is partially visible.
   * You can customize it further with a callback that determines which children the user can drag over to open the drawer
   * (for example, to ignore other elements that handle touch move events, like sliders).
   *
   * @param {TouchEvent} event The 'touchstart' event
   * @param {HTMLDivElement} swipeArea The swipe area element
   * @param {HTMLDivElement} paper The drawer's paper element
   *
   * @default false
   */
  allowSwipeInChildren: n.oneOfType([n.func, n.bool]),
  /**
   * @ignore
   */
  anchor: n.oneOf(["bottom", "left", "right", "top"]),
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Disable the backdrop transition.
   * This can improve the FPS on low-end devices.
   * @default false
   */
  disableBackdropTransition: n.bool,
  /**
   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit
   * to promote accidental discovery of the swipe gesture.
   * @default false
   */
  disableDiscovery: n.bool,
  /**
   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers
   * navigation actions. Swipe to open is disabled on iOS browsers by default.
   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)
   */
  disableSwipeToOpen: n.bool,
  /**
   * @ignore
   */
  hideBackdrop: n.bool,
  /**
   * Affects how far the drawer must be opened/closed to change its state.
   * Specified as percent (0-1) of the width of the drawer
   * @default 0.52
   */
  hysteresis: n.number,
  /**
   * Defines, from which (average) velocity on, the swipe is
   * defined as complete although hysteresis isn't reached.
   * Good threshold is between 250 - 1000 px/s
   * @default 450
   */
  minFlingVelocity: n.number,
  /**
   * @ignore
   */
  ModalProps: n.shape({
    BackdropProps: n.shape({
      component: jc
    })
  }),
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent<{}>} event The event source of the callback.
   */
  onClose: n.func.isRequired,
  /**
   * Callback fired when the component requests to be opened.
   *
   * @param {React.SyntheticEvent<{}>} event The event source of the callback.
   */
  onOpen: n.func.isRequired,
  /**
   * If `true`, the component is shown.
   * @default false
   */
  open: n.bool,
  /**
   * @ignore
   */
  PaperProps: n.shape({
    component: jc,
    style: n.object
  }),
  /**
   * The element is used to intercept the touch events on the edge.
   */
  SwipeAreaProps: n.object,
  /**
   * The width of the left most (or right most) area in `px` that
   * the drawer can be swiped open from.
   * @default 20
   */
  swipeAreaWidth: n.number,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: n.oneOfType([n.number, n.shape({
    appear: n.number,
    enter: n.number,
    exit: n.number
  })]),
  /**
   * @ignore
   */
  variant: n.oneOf(["permanent", "persistent", "temporary"])
});
const Hte = CP;
function hQ(e) {
  return je("MuiSwitch", e);
}
const gQ = He("MuiSwitch", ["root", "edgeStart", "edgeEnd", "switchBase", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium", "checked", "disabled", "input", "thumb", "track"]), ea = gQ, yQ = ["className", "color", "edge", "size", "sx"], bQ = (e) => {
  const {
    classes: r,
    edge: s,
    size: u,
    color: f,
    checked: v,
    disabled: m
  } = e, y = {
    root: ["root", s && `edge${oe(s)}`, `size${oe(u)}`],
    switchBase: ["switchBase", `color${oe(f)}`, v && "checked", m && "disabled"],
    thumb: ["thumb"],
    track: ["track"],
    input: ["input"]
  }, b = Ue(y, hQ, r);
  return C({}, r, b);
}, CQ = Z("span", {
  name: "MuiSwitch",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.edge && r[`edge${oe(s.edge)}`], r[`size${oe(s.size)}`]];
  }
})(({
  ownerState: e
}) => C({
  display: "inline-flex",
  width: 34 + 12 * 2,
  height: 14 + 12 * 2,
  overflow: "hidden",
  padding: 12,
  boxSizing: "border-box",
  position: "relative",
  flexShrink: 0,
  zIndex: 0,
  // Reset the stacking context.
  verticalAlign: "middle",
  // For correct alignment with the text.
  "@media print": {
    colorAdjust: "exact"
  }
}, e.edge === "start" && {
  marginLeft: -8
}, e.edge === "end" && {
  marginRight: -8
}, e.size === "small" && {
  width: 40,
  height: 24,
  padding: 7,
  [`& .${ea.thumb}`]: {
    width: 16,
    height: 16
  },
  [`& .${ea.switchBase}`]: {
    padding: 4,
    [`&.${ea.checked}`]: {
      transform: "translateX(16px)"
    }
  }
})), xQ = Z(B1, {
  name: "MuiSwitch",
  slot: "SwitchBase",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.switchBase, {
      [`& .${ea.input}`]: r.input
    }, s.color !== "default" && r[`color${oe(s.color)}`]];
  }
})(({
  theme: e
}) => ({
  position: "absolute",
  top: 0,
  left: 0,
  zIndex: 1,
  // Render above the focus ripple.
  color: e.vars ? e.vars.palette.Switch.defaultColor : `${e.palette.mode === "light" ? e.palette.common.white : e.palette.grey[300]}`,
  transition: e.transitions.create(["left", "transform"], {
    duration: e.transitions.duration.shortest
  }),
  [`&.${ea.checked}`]: {
    transform: "translateX(20px)"
  },
  [`&.${ea.disabled}`]: {
    color: e.vars ? e.vars.palette.Switch.defaultDisabledColor : `${e.palette.mode === "light" ? e.palette.grey[100] : e.palette.grey[600]}`
  },
  [`&.${ea.checked} + .${ea.track}`]: {
    opacity: 0.5
  },
  [`&.${ea.disabled} + .${ea.track}`]: {
    opacity: e.vars ? e.vars.opacity.switchTrackDisabled : `${e.palette.mode === "light" ? 0.12 : 0.2}`
  },
  [`& .${ea.input}`]: {
    left: "-100%",
    width: "300%"
  }
}), ({
  theme: e,
  ownerState: r
}) => C({
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Ut(e.palette.action.active, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  }
}, r.color !== "default" && {
  [`&.${ea.checked}`]: {
    color: (e.vars || e).palette[r.color].main,
    "&:hover": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette[r.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Ut(e.palette[r.color].main, e.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    [`&.${ea.disabled}`]: {
      color: e.vars ? e.vars.palette.Switch[`${r.color}DisabledColor`] : `${e.palette.mode === "light" ? O0(e.palette[r.color].main, 0.62) : w0(e.palette[r.color].main, 0.55)}`
    }
  },
  [`&.${ea.checked} + .${ea.track}`]: {
    backgroundColor: (e.vars || e).palette[r.color].main
  }
})), SQ = Z("span", {
  name: "MuiSwitch",
  slot: "Track",
  overridesResolver: (e, r) => r.track
})(({
  theme: e
}) => ({
  height: "100%",
  width: "100%",
  borderRadius: 14 / 2,
  zIndex: -1,
  transition: e.transitions.create(["opacity", "background-color"], {
    duration: e.transitions.duration.shortest
  }),
  backgroundColor: e.vars ? e.vars.palette.common.onBackground : `${e.palette.mode === "light" ? e.palette.common.black : e.palette.common.white}`,
  opacity: e.vars ? e.vars.opacity.switchTrack : `${e.palette.mode === "light" ? 0.38 : 0.3}`
})), TQ = Z("span", {
  name: "MuiSwitch",
  slot: "Thumb",
  overridesResolver: (e, r) => r.thumb
})(({
  theme: e
}) => ({
  boxShadow: (e.vars || e).shadows[1],
  backgroundColor: "currentColor",
  width: 20,
  height: 20,
  borderRadius: "50%"
})), xP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiSwitch"
  }), {
    className: f,
    color: v = "primary",
    edge: m = !1,
    size: y = "medium",
    sx: b
  } = u, S = me(u, yQ), E = C({}, u, {
    color: v,
    edge: m,
    size: y
  }), k = bQ(E), D = /* @__PURE__ */ z(TQ, {
    className: k.thumb,
    ownerState: E
  });
  return /* @__PURE__ */ gt(CQ, {
    className: pe(k.root, f),
    sx: b,
    ownerState: E,
    children: [/* @__PURE__ */ z(xQ, C({
      type: "checkbox",
      icon: D,
      checkedIcon: D,
      ref: s,
      ownerState: E
    }, S, {
      classes: C({}, k, {
        root: k.switchBase
      })
    })), /* @__PURE__ */ z(SQ, {
      className: k.track,
      ownerState: E
    })]
  });
});
process.env.NODE_ENV !== "production" && (xP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: n.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: n.oneOfType([n.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), n.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: n.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: n.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: n.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: n.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: n.node,
  /**
   * The id of the `input` element.
   */
  id: n.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: n.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Tr,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: n.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: n.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense switch styling.
   * @default 'medium'
   */
  size: n.oneOfType([n.oneOf(["medium", "small"]), n.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: n.any
});
const Wte = xP;
function EQ(e) {
  return je("MuiTab", e);
}
const RQ = He("MuiTab", ["root", "labelIcon", "textColorInherit", "textColorPrimary", "textColorSecondary", "selected", "disabled", "fullWidth", "wrapped", "iconWrapper"]), Ju = RQ, OQ = ["className", "disabled", "disableFocusRipple", "fullWidth", "icon", "iconPosition", "indicator", "label", "onChange", "onClick", "onFocus", "selected", "selectionFollowsFocus", "textColor", "value", "wrapped"], wQ = (e) => {
  const {
    classes: r,
    textColor: s,
    fullWidth: u,
    wrapped: f,
    icon: v,
    label: m,
    selected: y,
    disabled: b
  } = e, S = {
    root: ["root", v && m && "labelIcon", `textColor${oe(s)}`, u && "fullWidth", f && "wrapped", y && "selected", b && "disabled"],
    iconWrapper: ["iconWrapper"]
  };
  return Ue(S, EQ, r);
}, kQ = Z(er, {
  name: "MuiTab",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.label && s.icon && r.labelIcon, r[`textColor${oe(s.textColor)}`], s.fullWidth && r.fullWidth, s.wrapped && r.wrapped];
  }
})(({
  theme: e,
  ownerState: r
}) => C({}, e.typography.button, {
  maxWidth: 360,
  minWidth: 90,
  position: "relative",
  minHeight: 48,
  flexShrink: 0,
  padding: "12px 16px",
  overflow: "hidden",
  whiteSpace: "normal",
  textAlign: "center"
}, r.label && {
  flexDirection: r.iconPosition === "top" || r.iconPosition === "bottom" ? "column" : "row"
}, {
  lineHeight: 1.25
}, r.icon && r.label && {
  minHeight: 72,
  paddingTop: 9,
  paddingBottom: 9,
  [`& > .${Ju.iconWrapper}`]: C({}, r.iconPosition === "top" && {
    marginBottom: 6
  }, r.iconPosition === "bottom" && {
    marginTop: 6
  }, r.iconPosition === "start" && {
    marginRight: e.spacing(1)
  }, r.iconPosition === "end" && {
    marginLeft: e.spacing(1)
  })
}, r.textColor === "inherit" && {
  color: "inherit",
  opacity: 0.6,
  // same opacity as theme.palette.text.secondary
  [`&.${Ju.selected}`]: {
    opacity: 1
  },
  [`&.${Ju.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  }
}, r.textColor === "primary" && {
  color: (e.vars || e).palette.text.secondary,
  [`&.${Ju.selected}`]: {
    color: (e.vars || e).palette.primary.main
  },
  [`&.${Ju.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  }
}, r.textColor === "secondary" && {
  color: (e.vars || e).palette.text.secondary,
  [`&.${Ju.selected}`]: {
    color: (e.vars || e).palette.secondary.main
  },
  [`&.${Ju.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  }
}, r.fullWidth && {
  flexShrink: 1,
  flexGrow: 1,
  flexBasis: 0,
  maxWidth: "none"
}, r.wrapped && {
  fontSize: e.typography.pxToRem(12)
})), SP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiTab"
  }), {
    className: f,
    disabled: v = !1,
    disableFocusRipple: m = !1,
    // eslint-disable-next-line react/prop-types
    fullWidth: y,
    icon: b,
    iconPosition: S = "top",
    // eslint-disable-next-line react/prop-types
    indicator: E,
    label: k,
    onChange: D,
    onClick: M,
    onFocus: P,
    // eslint-disable-next-line react/prop-types
    selected: L,
    // eslint-disable-next-line react/prop-types
    selectionFollowsFocus: w,
    // eslint-disable-next-line react/prop-types
    textColor: _ = "inherit",
    value: V,
    wrapped: A = !1
  } = u, j = me(u, OQ), U = C({}, u, {
    disabled: v,
    disableFocusRipple: m,
    selected: L,
    icon: !!b,
    iconPosition: S,
    label: !!k,
    fullWidth: y,
    textColor: _,
    wrapped: A
  }), $ = wQ(U), F = b && k && /* @__PURE__ */ O.isValidElement(b) ? /* @__PURE__ */ O.cloneElement(b, {
    className: pe($.iconWrapper, b.props.className)
  }) : b, G = (Q) => {
    !L && D && D(Q, V), M && M(Q);
  }, Y = (Q) => {
    w && !L && D && D(Q, V), P && P(Q);
  };
  return /* @__PURE__ */ gt(kQ, C({
    focusRipple: !m,
    className: pe($.root, f),
    ref: s,
    role: "tab",
    "aria-selected": L,
    disabled: v,
    onClick: G,
    onFocus: Y,
    ownerState: U,
    tabIndex: L ? 0 : -1
  }, j, {
    children: [S === "top" || S === "start" ? /* @__PURE__ */ gt(O.Fragment, {
      children: [F, k]
    }) : /* @__PURE__ */ gt(O.Fragment, {
      children: [k, F]
    }), E]
  }));
});
process.env.NODE_ENV !== "production" && (SP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: m1,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: n.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: n.bool,
  /**
   * The icon to display.
   */
  icon: n.oneOfType([n.element, n.string]),
  /**
   * The position of the icon relative to the label.
   * @default 'top'
   */
  iconPosition: n.oneOf(["bottom", "end", "start", "top"]),
  /**
   * The label element.
   */
  label: n.node,
  /**
   * @ignore
   */
  onChange: n.func,
  /**
   * @ignore
   */
  onClick: n.func,
  /**
   * @ignore
   */
  onFocus: n.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * You can provide your own value. Otherwise, we fallback to the child position index.
   */
  value: n.any,
  /**
   * Tab labels appear in a single row.
   * They can use a second line if needed.
   * @default false
   */
  wrapped: n.bool
});
const Gte = SP, TP = /* @__PURE__ */ O.createContext();
process.env.NODE_ENV !== "production" && (TP.displayName = "TableContext");
const EP = TP;
function NQ(e) {
  return je("MuiTable", e);
}
const $Q = He("MuiTable", ["root", "stickyHeader"]), qte = $Q, MQ = ["className", "component", "padding", "size", "stickyHeader"], DQ = (e) => {
  const {
    classes: r,
    stickyHeader: s
  } = e;
  return Ue({
    root: ["root", s && "stickyHeader"]
  }, NQ, r);
}, PQ = Z("table", {
  name: "MuiTable",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.stickyHeader && r.stickyHeader];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  display: "table",
  width: "100%",
  borderCollapse: "collapse",
  borderSpacing: 0,
  "& caption": C({}, e.typography.body2, {
    padding: e.spacing(2),
    color: (e.vars || e).palette.text.secondary,
    textAlign: "left",
    captionSide: "bottom"
  })
}, r.stickyHeader && {
  borderCollapse: "separate"
})), MN = "table", RP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiTable"
  }), {
    className: f,
    component: v = MN,
    padding: m = "normal",
    size: y = "medium",
    stickyHeader: b = !1
  } = u, S = me(u, MQ), E = C({}, u, {
    component: v,
    padding: m,
    size: y,
    stickyHeader: b
  }), k = DQ(E), D = O.useMemo(() => ({
    padding: m,
    size: y,
    stickyHeader: b
  }), [m, y, b]);
  return /* @__PURE__ */ z(EP.Provider, {
    value: D,
    children: /* @__PURE__ */ z(PQ, C({
      as: v,
      role: v === MN ? null : "table",
      ref: s,
      className: pe(k.root, f),
      ownerState: E
    }, S))
  });
});
process.env.NODE_ENV !== "production" && (RP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the table, normally `TableHead` and `TableBody`.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * Allows TableCells to inherit padding of the Table.
   * @default 'normal'
   */
  padding: n.oneOf(["checkbox", "none", "normal"]),
  /**
   * Allows TableCells to inherit size of the Table.
   * @default 'medium'
   */
  size: n.oneOfType([n.oneOf(["medium", "small"]), n.string]),
  /**
   * Set the header sticky.
   *
   * ⚠️ It doesn't work with IE11.
   * @default false
   */
  stickyHeader: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const Yte = RP, OP = /* @__PURE__ */ O.createContext();
process.env.NODE_ENV !== "production" && (OP.displayName = "Tablelvl2Context");
const wh = OP;
function LQ(e) {
  return je("MuiTableBody", e);
}
const IQ = He("MuiTableBody", ["root"]), Kte = IQ, _Q = ["className", "component"], AQ = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"]
  }, LQ, r);
}, BQ = Z("tbody", {
  name: "MuiTableBody",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})({
  display: "table-row-group"
}), zQ = {
  variant: "body"
}, DN = "tbody", wP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiTableBody"
  }), {
    className: f,
    component: v = DN
  } = u, m = me(u, _Q), y = C({}, u, {
    component: v
  }), b = AQ(y);
  return /* @__PURE__ */ z(wh.Provider, {
    value: zQ,
    children: /* @__PURE__ */ z(BQ, C({
      className: pe(b.root, f),
      as: v,
      ref: s,
      role: v === DN ? null : "rowgroup",
      ownerState: y
    }, m))
  });
});
process.env.NODE_ENV !== "production" && (wP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `TableRow`.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const Xte = wP;
function FQ(e) {
  return je("MuiTableCell", e);
}
const jQ = He("MuiTableCell", ["root", "head", "body", "footer", "sizeSmall", "sizeMedium", "paddingCheckbox", "paddingNone", "alignLeft", "alignCenter", "alignRight", "alignJustify", "stickyHeader"]), UQ = jQ, VQ = ["align", "className", "component", "padding", "scope", "size", "sortDirection", "variant"], HQ = (e) => {
  const {
    classes: r,
    variant: s,
    align: u,
    padding: f,
    size: v,
    stickyHeader: m
  } = e, y = {
    root: ["root", s, m && "stickyHeader", u !== "inherit" && `align${oe(u)}`, f !== "normal" && `padding${oe(f)}`, `size${oe(v)}`]
  };
  return Ue(y, FQ, r);
}, WQ = Z("td", {
  name: "MuiTableCell",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[s.variant], r[`size${oe(s.size)}`], s.padding !== "normal" && r[`padding${oe(s.padding)}`], s.align !== "inherit" && r[`align${oe(s.align)}`], s.stickyHeader && r.stickyHeader];
  }
})(({
  theme: e,
  ownerState: r
}) => C({}, e.typography.body2, {
  display: "table-cell",
  verticalAlign: "inherit",
  // Workaround for a rendering bug with spanned columns in Chrome 62.0.
  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.
  borderBottom: e.vars ? `1px solid ${e.vars.palette.TableCell.border}` : `1px solid
    ${e.palette.mode === "light" ? O0(Ut(e.palette.divider, 1), 0.88) : w0(Ut(e.palette.divider, 1), 0.68)}`,
  textAlign: "left",
  padding: 16
}, r.variant === "head" && {
  color: (e.vars || e).palette.text.primary,
  lineHeight: e.typography.pxToRem(24),
  fontWeight: e.typography.fontWeightMedium
}, r.variant === "body" && {
  color: (e.vars || e).palette.text.primary
}, r.variant === "footer" && {
  color: (e.vars || e).palette.text.secondary,
  lineHeight: e.typography.pxToRem(21),
  fontSize: e.typography.pxToRem(12)
}, r.size === "small" && {
  padding: "6px 16px",
  [`&.${UQ.paddingCheckbox}`]: {
    width: 24,
    // prevent the checkbox column from growing
    padding: "0 12px 0 16px",
    "& > *": {
      padding: 0
    }
  }
}, r.padding === "checkbox" && {
  width: 48,
  // prevent the checkbox column from growing
  padding: "0 0 0 4px"
}, r.padding === "none" && {
  padding: 0
}, r.align === "left" && {
  textAlign: "left"
}, r.align === "center" && {
  textAlign: "center"
}, r.align === "right" && {
  textAlign: "right",
  flexDirection: "row-reverse"
}, r.align === "justify" && {
  textAlign: "justify"
}, r.stickyHeader && {
  position: "sticky",
  top: 0,
  zIndex: 2,
  backgroundColor: (e.vars || e).palette.background.default
})), kP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiTableCell"
  }), {
    align: f = "inherit",
    className: v,
    component: m,
    padding: y,
    scope: b,
    size: S,
    sortDirection: E,
    variant: k
  } = u, D = me(u, VQ), M = O.useContext(EP), P = O.useContext(wh), L = P && P.variant === "head";
  let w;
  m ? w = m : w = L ? "th" : "td";
  let _ = b;
  w === "td" ? _ = void 0 : !_ && L && (_ = "col");
  const V = k || P && P.variant, A = C({}, u, {
    align: f,
    component: w,
    padding: y || (M && M.padding ? M.padding : "normal"),
    size: S || (M && M.size ? M.size : "medium"),
    sortDirection: E,
    stickyHeader: V === "head" && M && M.stickyHeader,
    variant: V
  }), j = HQ(A);
  let U = null;
  return E && (U = E === "asc" ? "ascending" : "descending"), /* @__PURE__ */ z(WQ, C({
    as: w,
    ref: s,
    className: pe(j.root, v),
    "aria-sort": U,
    scope: _,
    ownerState: A
  }, D));
});
process.env.NODE_ENV !== "production" && (kP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the table cell content.
   *
   * Monetary or generally number fields **should be right aligned** as that allows
   * you to add them up quickly in your head without having to worry about decimals.
   * @default 'inherit'
   */
  align: n.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * Sets the padding applied to the cell.
   * The prop defaults to the value (`'default'`) inherited from the parent Table component.
   */
  padding: n.oneOf(["checkbox", "none", "normal"]),
  /**
   * Set scope attribute.
   */
  scope: n.string,
  /**
   * Specify the size of the cell.
   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.
   */
  size: n.oneOfType([n.oneOf(["medium", "small"]), n.string]),
  /**
   * Set aria-sort direction.
   */
  sortDirection: n.oneOf(["asc", "desc", !1]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * Specify the cell type.
   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.
   */
  variant: n.oneOfType([n.oneOf(["body", "footer", "head"]), n.string])
});
const c1 = kP;
function GQ(e) {
  return je("MuiTableContainer", e);
}
const qQ = He("MuiTableContainer", ["root"]), Qte = qQ, YQ = ["className", "component"], KQ = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"]
  }, GQ, r);
}, XQ = Z("div", {
  name: "MuiTableContainer",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})({
  width: "100%",
  overflowX: "auto"
}), NP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiTableContainer"
  }), {
    className: f,
    component: v = "div"
  } = u, m = me(u, YQ), y = C({}, u, {
    component: v
  }), b = KQ(y);
  return /* @__PURE__ */ z(XQ, C({
    ref: s,
    as: v,
    className: pe(b.root, f),
    ownerState: y
  }, m));
});
process.env.NODE_ENV !== "production" && (NP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `Table`.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const Zte = NP;
function QQ(e) {
  return je("MuiTableFooter", e);
}
const ZQ = He("MuiTableFooter", ["root"]), Jte = ZQ, JQ = ["className", "component"], eZ = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"]
  }, QQ, r);
}, tZ = Z("tfoot", {
  name: "MuiTableFooter",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})({
  display: "table-footer-group"
}), nZ = {
  variant: "footer"
}, PN = "tfoot", $P = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiTableFooter"
  }), {
    className: f,
    component: v = PN
  } = u, m = me(u, JQ), y = C({}, u, {
    component: v
  }), b = eZ(y);
  return /* @__PURE__ */ z(wh.Provider, {
    value: nZ,
    children: /* @__PURE__ */ z(tZ, C({
      as: v,
      className: pe(b.root, f),
      ref: s,
      role: v === PN ? null : "rowgroup",
      ownerState: y
    }, m))
  });
});
process.env.NODE_ENV !== "production" && ($P.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `TableRow`.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const ene = $P;
function oZ(e) {
  return je("MuiTableHead", e);
}
const rZ = He("MuiTableHead", ["root"]), tne = rZ, aZ = ["className", "component"], iZ = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"]
  }, oZ, r);
}, sZ = Z("thead", {
  name: "MuiTableHead",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})({
  display: "table-header-group"
}), lZ = {
  variant: "head"
}, LN = "thead", MP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiTableHead"
  }), {
    className: f,
    component: v = LN
  } = u, m = me(u, aZ), y = C({}, u, {
    component: v
  }), b = iZ(y);
  return /* @__PURE__ */ z(wh.Provider, {
    value: lZ,
    children: /* @__PURE__ */ z(sZ, C({
      as: v,
      className: pe(b.root, f),
      ref: s,
      role: v === LN ? null : "rowgroup",
      ownerState: y
    }, m))
  });
});
process.env.NODE_ENV !== "production" && (MP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `TableRow`.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const nne = MP;
function cZ(e) {
  return je("MuiToolbar", e);
}
const uZ = He("MuiToolbar", ["root", "gutters", "regular", "dense"]), one = uZ, dZ = ["className", "component", "disableGutters", "variant"], pZ = (e) => {
  const {
    classes: r,
    disableGutters: s,
    variant: u
  } = e;
  return Ue({
    root: ["root", !s && "gutters", u]
  }, cZ, r);
}, fZ = Z("div", {
  name: "MuiToolbar",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, !s.disableGutters && r.gutters, r[s.variant]];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  position: "relative",
  display: "flex",
  alignItems: "center"
}, !r.disableGutters && {
  paddingLeft: e.spacing(2),
  paddingRight: e.spacing(2),
  [e.breakpoints.up("sm")]: {
    paddingLeft: e.spacing(3),
    paddingRight: e.spacing(3)
  }
}, r.variant === "dense" && {
  minHeight: 48
}), ({
  theme: e,
  ownerState: r
}) => r.variant === "regular" && e.mixins.toolbar), DP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiToolbar"
  }), {
    className: f,
    component: v = "div",
    disableGutters: m = !1,
    variant: y = "regular"
  } = u, b = me(u, dZ), S = C({}, u, {
    component: v,
    disableGutters: m,
    variant: y
  }), E = pZ(S);
  return /* @__PURE__ */ z(fZ, C({
    as: v,
    className: pe(E.root, f),
    ref: s,
    ownerState: S
  }, b));
});
process.env.NODE_ENV !== "production" && (DP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.
   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * If `true`, disables gutter padding.
   * @default false
   */
  disableGutters: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The variant to use.
   * @default 'regular'
   */
  variant: n.oneOfType([n.oneOf(["dense", "regular"]), n.string])
});
const mZ = DP, PP = Kn(/* @__PURE__ */ z("path", {
  d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
}), "KeyboardArrowLeft"), LP = Kn(/* @__PURE__ */ z("path", {
  d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
}), "KeyboardArrowRight"), vZ = ["backIconButtonProps", "count", "disabled", "getItemAriaLabel", "nextIconButtonProps", "onPageChange", "page", "rowsPerPage", "showFirstButton", "showLastButton", "slots", "slotProps"], IP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u, f, v, m, y, b, S, E;
  const {
    backIconButtonProps: k,
    count: D,
    disabled: M = !1,
    getItemAriaLabel: P,
    nextIconButtonProps: L,
    onPageChange: w,
    page: _,
    rowsPerPage: V,
    showFirstButton: A,
    showLastButton: j,
    slots: U = {},
    slotProps: $ = {}
  } = r, F = me(r, vZ), G = to(), Y = (ze) => {
    w(ze, 0);
  }, Q = (ze) => {
    w(ze, _ - 1);
  }, q = (ze) => {
    w(ze, _ + 1);
  }, re = (ze) => {
    w(ze, Math.max(0, Math.ceil(D / V) - 1));
  }, ee = (u = U.firstButton) != null ? u : rd, J = (f = U.lastButton) != null ? f : rd, ce = (v = U.nextButton) != null ? v : rd, de = (m = U.previousButton) != null ? m : rd, fe = (y = U.firstButtonIcon) != null ? y : i1, K = (b = U.lastButtonIcon) != null ? b : s1, ne = (S = U.nextButtonIcon) != null ? S : LP, ve = (E = U.previousButtonIcon) != null ? E : PP, Ke = G.direction === "rtl" ? J : ee, tt = G.direction === "rtl" ? ce : de, Ie = G.direction === "rtl" ? de : ce, De = G.direction === "rtl" ? ee : J, Ye = G.direction === "rtl" ? $.lastButton : $.firstButton, ke = G.direction === "rtl" ? $.nextButton : $.previousButton, lt = G.direction === "rtl" ? $.previousButton : $.nextButton, xe = G.direction === "rtl" ? $.firstButton : $.lastButton;
  return /* @__PURE__ */ gt("div", C({
    ref: s
  }, F, {
    children: [A && /* @__PURE__ */ z(Ke, C({
      onClick: Y,
      disabled: M || _ === 0,
      "aria-label": P("first", _),
      title: P("first", _)
    }, Ye, {
      children: G.direction === "rtl" ? /* @__PURE__ */ z(K, C({}, $.lastButtonIcon)) : /* @__PURE__ */ z(fe, C({}, $.firstButtonIcon))
    })), /* @__PURE__ */ z(tt, C({
      onClick: Q,
      disabled: M || _ === 0,
      color: "inherit",
      "aria-label": P("previous", _),
      title: P("previous", _)
    }, ke ?? k, {
      children: G.direction === "rtl" ? /* @__PURE__ */ z(ne, C({}, $.nextButtonIcon)) : /* @__PURE__ */ z(ve, C({}, $.previousButtonIcon))
    })), /* @__PURE__ */ z(Ie, C({
      onClick: q,
      disabled: M || (D !== -1 ? _ >= Math.ceil(D / V) - 1 : !1),
      color: "inherit",
      "aria-label": P("next", _),
      title: P("next", _)
    }, lt ?? L, {
      children: G.direction === "rtl" ? /* @__PURE__ */ z(ve, C({}, $.previousButtonIcon)) : /* @__PURE__ */ z(ne, C({}, $.nextButtonIcon))
    })), j && /* @__PURE__ */ z(De, C({
      onClick: re,
      disabled: M || _ >= Math.ceil(D / V) - 1,
      "aria-label": P("last", _),
      title: P("last", _)
    }, xe, {
      children: G.direction === "rtl" ? /* @__PURE__ */ z(fe, C({}, $.firstButtonIcon)) : /* @__PURE__ */ z(K, C({}, $.lastButtonIcon))
    }))]
  }));
});
process.env.NODE_ENV !== "production" && (IP.propTypes = {
  /**
   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.
   */
  backIconButtonProps: n.object,
  /**
   * The total number of rows.
   */
  count: n.number.isRequired,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   *
   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.
   * @param {number} page The page number to format.
   * @returns {string}
   */
  getItemAriaLabel: n.func.isRequired,
  /**
   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.
   */
  nextIconButtonProps: n.object,
  /**
   * Callback fired when the page is changed.
   *
   * @param {object} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onPageChange: n.func.isRequired,
  /**
   * The zero-based index of the current page.
   */
  page: n.number.isRequired,
  /**
   * The number of rows per page.
   */
  rowsPerPage: n.number.isRequired,
  /**
   * If `true`, show the first-page button.
   */
  showFirstButton: n.bool.isRequired,
  /**
   * If `true`, show the last-page button.
   */
  showLastButton: n.bool.isRequired,
  /**
   * The props used for each slot inside the TablePaginationActions.
   * @default {}
   */
  slotProps: n.shape({
    firstButton: n.object,
    firstButtonIcon: n.object,
    lastButton: n.object,
    lastButtonIcon: n.object,
    nextButton: n.object,
    nextButtonIcon: n.object,
    previousButton: n.object,
    previousButtonIcon: n.object
  }),
  /**
   * The components used for each slot inside the TablePaginationActions.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: n.shape({
    firstButton: n.elementType,
    firstButtonIcon: n.elementType,
    lastButton: n.elementType,
    lastButtonIcon: n.elementType,
    nextButton: n.elementType,
    nextButtonIcon: n.elementType,
    previousButton: n.elementType,
    previousButtonIcon: n.elementType
  })
});
const hZ = IP;
function gZ(e) {
  return je("MuiTablePagination", e);
}
const yZ = He("MuiTablePagination", ["root", "toolbar", "spacer", "selectLabel", "selectRoot", "select", "selectIcon", "input", "menuItem", "displayedRows", "actions"]), rh = yZ;
var IN;
const bZ = ["ActionsComponent", "backIconButtonProps", "className", "colSpan", "component", "count", "disabled", "getItemAriaLabel", "labelDisplayedRows", "labelRowsPerPage", "nextIconButtonProps", "onPageChange", "onRowsPerPageChange", "page", "rowsPerPage", "rowsPerPageOptions", "SelectProps", "showFirstButton", "showLastButton", "slotProps", "slots"], CZ = Z(c1, {
  name: "MuiTablePagination",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})(({
  theme: e
}) => ({
  overflow: "auto",
  color: (e.vars || e).palette.text.primary,
  fontSize: e.typography.pxToRem(14),
  // Increase the specificity to override TableCell.
  "&:last-child": {
    padding: 0
  }
})), xZ = Z(mZ, {
  name: "MuiTablePagination",
  slot: "Toolbar",
  overridesResolver: (e, r) => C({
    [`& .${rh.actions}`]: r.actions
  }, r.toolbar)
})(({
  theme: e
}) => ({
  minHeight: 52,
  paddingRight: 2,
  [`${e.breakpoints.up("xs")} and (orientation: landscape)`]: {
    minHeight: 52
  },
  [e.breakpoints.up("sm")]: {
    minHeight: 52,
    paddingRight: 2
  },
  [`& .${rh.actions}`]: {
    flexShrink: 0,
    marginLeft: 20
  }
})), SZ = Z("div", {
  name: "MuiTablePagination",
  slot: "Spacer",
  overridesResolver: (e, r) => r.spacer
})({
  flex: "1 1 100%"
}), TZ = Z("p", {
  name: "MuiTablePagination",
  slot: "SelectLabel",
  overridesResolver: (e, r) => r.selectLabel
})(({
  theme: e
}) => C({}, e.typography.body2, {
  flexShrink: 0
})), EZ = Z(oP, {
  name: "MuiTablePagination",
  slot: "Select",
  overridesResolver: (e, r) => C({
    [`& .${rh.selectIcon}`]: r.selectIcon,
    [`& .${rh.select}`]: r.select
  }, r.input, r.selectRoot)
})({
  color: "inherit",
  fontSize: "inherit",
  flexShrink: 0,
  marginRight: 32,
  marginLeft: 8,
  [`& .${rh.select}`]: {
    paddingLeft: 8,
    paddingRight: 24,
    textAlign: "right",
    textAlignLast: "right"
    // Align <select> on Chrome.
  }
}), RZ = Z(yq, {
  name: "MuiTablePagination",
  slot: "MenuItem",
  overridesResolver: (e, r) => r.menuItem
})({}), OZ = Z("p", {
  name: "MuiTablePagination",
  slot: "DisplayedRows",
  overridesResolver: (e, r) => r.displayedRows
})(({
  theme: e
}) => C({}, e.typography.body2, {
  flexShrink: 0
}));
function wZ({
  from: e,
  to: r,
  count: s
}) {
  return `${e}–${r} of ${s !== -1 ? s : `more than ${r}`}`;
}
function kZ(e) {
  return `Go to ${e} page`;
}
const NZ = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"],
    toolbar: ["toolbar"],
    spacer: ["spacer"],
    selectLabel: ["selectLabel"],
    select: ["select"],
    input: ["input"],
    selectIcon: ["selectIcon"],
    menuItem: ["menuItem"],
    displayedRows: ["displayedRows"],
    actions: ["actions"]
  }, gZ, r);
}, _P = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u;
  const f = Ve({
    props: r,
    name: "MuiTablePagination"
  }), {
    ActionsComponent: v = hZ,
    backIconButtonProps: m,
    className: y,
    colSpan: b,
    component: S = c1,
    count: E,
    disabled: k = !1,
    getItemAriaLabel: D = kZ,
    labelDisplayedRows: M = wZ,
    labelRowsPerPage: P = "Rows per page:",
    nextIconButtonProps: L,
    onPageChange: w,
    onRowsPerPageChange: _,
    page: V,
    rowsPerPage: A,
    rowsPerPageOptions: j = [10, 25, 50, 100],
    SelectProps: U = {},
    showFirstButton: $ = !1,
    showLastButton: F = !1,
    slotProps: G = {},
    slots: Y = {}
  } = f, Q = me(f, bZ), q = f, re = NZ(q), ee = (u = G == null ? void 0 : G.select) != null ? u : U, J = ee.native ? "option" : RZ;
  let ce;
  (S === c1 || S === "td") && (ce = b || 1e3);
  const de = Ms(ee.id), fe = Ms(ee.labelId), K = () => E === -1 ? (V + 1) * A : A === -1 ? E : Math.min(E, (V + 1) * A);
  return /* @__PURE__ */ z(CZ, C({
    colSpan: ce,
    ref: s,
    as: S,
    ownerState: q,
    className: pe(re.root, y)
  }, Q, {
    children: /* @__PURE__ */ gt(xZ, {
      className: re.toolbar,
      children: [/* @__PURE__ */ z(SZ, {
        className: re.spacer
      }), j.length > 1 && /* @__PURE__ */ z(TZ, {
        className: re.selectLabel,
        id: fe,
        children: P
      }), j.length > 1 && /* @__PURE__ */ z(EZ, C({
        variant: "standard"
      }, !ee.variant && {
        input: IN || (IN = /* @__PURE__ */ z(j0, {}))
      }, {
        value: A,
        onChange: _,
        id: de,
        labelId: fe
      }, ee, {
        classes: C({}, ee.classes, {
          // TODO v5 remove `classes.input`
          root: pe(re.input, re.selectRoot, (ee.classes || {}).root),
          select: pe(re.select, (ee.classes || {}).select),
          // TODO v5 remove `selectIcon`
          icon: pe(re.selectIcon, (ee.classes || {}).icon)
        }),
        disabled: k,
        children: j.map((ne) => /* @__PURE__ */ YN(J, C({}, !Fi(J) && {
          ownerState: q
        }, {
          className: re.menuItem,
          key: ne.label ? ne.label : ne,
          value: ne.value ? ne.value : ne
        }), ne.label ? ne.label : ne))
      })), /* @__PURE__ */ z(OZ, {
        className: re.displayedRows,
        children: M({
          from: E === 0 ? 0 : V * A + 1,
          to: K(),
          count: E === -1 ? -1 : E,
          page: V
        })
      }), /* @__PURE__ */ z(v, {
        className: re.actions,
        backIconButtonProps: m,
        count: E,
        nextIconButtonProps: L,
        onPageChange: w,
        page: V,
        rowsPerPage: A,
        showFirstButton: $,
        showLastButton: F,
        slotProps: G.actions,
        slots: Y.actions,
        getItemAriaLabel: D,
        disabled: k
      })]
    })
  }));
});
process.env.NODE_ENV !== "production" && (_P.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The component used for displaying the actions.
   * Either a string to use a HTML element or a component.
   * @default TablePaginationActions
   */
  ActionsComponent: n.elementType,
  /**
   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) component.
   *
   * This prop is an alias for `slotProps.actions.previousButton` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.actions.previousButton` instead.
   */
  backIconButtonProps: n.object,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * @ignore
   */
  colSpan: n.number,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * The total number of rows.
   *
   * To enable server side pagination for an unknown number of items, provide -1.
   */
  count: Co.isRequired,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').
   * @returns {string}
   * @default function defaultGetAriaLabel(type) {
   *   return `Go to ${type} page`;
   * }
   */
  getItemAriaLabel: n.func,
  /**
   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`
   * object.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default function defaultLabelDisplayedRows({ from, to, count }) {
   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;
   * }
   */
  labelDisplayedRows: n.func,
  /**
   * Customize the rows per page label.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Rows per page:'
   */
  labelRowsPerPage: n.node,
  /**
   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.
   *
   * This prop is an alias for `slotProps.actions.nextButton` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.actions.nextButton` instead.
   */
  nextIconButtonProps: n.object,
  /**
   * Callback fired when the page is changed.
   *
   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onPageChange: n.func.isRequired,
  /**
   * Callback fired when the number of rows per page is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   */
  onRowsPerPageChange: n.func,
  /**
   * The zero-based index of the current page.
   */
  page: jo(Co.isRequired, (e) => {
    const {
      count: r,
      page: s,
      rowsPerPage: u
    } = e;
    if (r === -1)
      return null;
    const f = Math.max(0, Math.ceil(r / u) - 1);
    return s < 0 || s > f ? new Error(`MUI: The page prop of a TablePagination is out of range (0 to ${f}, but page is ${s}).`) : null;
  }),
  /**
   * The number of rows per page.
   *
   * Set -1 to display all the rows.
   */
  rowsPerPage: Co.isRequired,
  /**
   * Customizes the options of the rows per page select field. If less than two options are
   * available, no select field will be displayed.
   * Use -1 for the value with a custom label to show all the rows.
   * @default [10, 25, 50, 100]
   */
  rowsPerPageOptions: n.arrayOf(n.oneOfType([n.number, n.shape({
    label: n.string.isRequired,
    value: n.number.isRequired
  })]).isRequired),
  /**
   * Props applied to the rows per page [`Select`](/material-ui/api/select/) element.
   *
   * This prop is an alias for `slotProps.select` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.select` instead.
   *
   * @default {}
   */
  SelectProps: n.object,
  /**
   * If `true`, show the first-page button.
   * @default false
   */
  showFirstButton: n.bool,
  /**
   * If `true`, show the last-page button.
   * @default false
   */
  showLastButton: n.bool,
  /**
   * The props used for each slot inside the TablePagination.
   * @default {}
   */
  slotProps: n.shape({
    actions: n.shape({
      firstButton: n.object,
      firstButtonIcon: n.object,
      lastButton: n.object,
      lastButtonIcon: n.object,
      nextButton: n.object,
      nextButtonIcon: n.object,
      previousButton: n.object,
      previousButtonIcon: n.object
    }),
    select: n.object
  }),
  /**
   * The components used for each slot inside the TablePagination.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: n.shape({
    actions: n.shape({
      firstButton: n.elementType,
      firstButtonIcon: n.elementType,
      lastButton: n.elementType,
      lastButtonIcon: n.elementType,
      nextButton: n.elementType,
      nextButtonIcon: n.elementType,
      previousButton: n.elementType,
      previousButtonIcon: n.elementType
    })
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const rne = _P;
function $Z(e) {
  return je("MuiTableRow", e);
}
const MZ = He("MuiTableRow", ["root", "selected", "hover", "head", "footer"]), _N = MZ, DZ = ["className", "component", "hover", "selected"], PZ = (e) => {
  const {
    classes: r,
    selected: s,
    hover: u,
    head: f,
    footer: v
  } = e;
  return Ue({
    root: ["root", s && "selected", u && "hover", f && "head", v && "footer"]
  }, $Z, r);
}, LZ = Z("tr", {
  name: "MuiTableRow",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.head && r.head, s.footer && r.footer];
  }
})(({
  theme: e
}) => ({
  color: "inherit",
  display: "table-row",
  verticalAlign: "middle",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  [`&.${_N.hover}:hover`]: {
    backgroundColor: (e.vars || e).palette.action.hover
  },
  [`&.${_N.selected}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Ut(e.palette.primary.main, e.palette.action.selectedOpacity),
    "&:hover": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Ut(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity)
    }
  }
})), AN = "tr", AP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiTableRow"
  }), {
    className: f,
    component: v = AN,
    hover: m = !1,
    selected: y = !1
  } = u, b = me(u, DZ), S = O.useContext(wh), E = C({}, u, {
    component: v,
    hover: m,
    selected: y,
    head: S && S.variant === "head",
    footer: S && S.variant === "footer"
  }), k = PZ(E);
  return /* @__PURE__ */ z(LZ, C({
    as: v,
    ref: s,
    className: pe(k.root, f),
    role: v === AN ? null : "row",
    ownerState: E
  }, b));
});
process.env.NODE_ENV !== "production" && (AP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Should be valid `<tr>` children such as `TableCell`.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * If `true`, the table row will shade on hover.
   * @default false
   */
  hover: n.bool,
  /**
   * If `true`, the table row will have the selected shading.
   * @default false
   */
  selected: n.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const ane = AP, IZ = Kn(/* @__PURE__ */ z("path", {
  d: "M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
}), "ArrowDownward");
function _Z(e) {
  return je("MuiTableSortLabel", e);
}
const AZ = He("MuiTableSortLabel", ["root", "active", "icon", "iconDirectionDesc", "iconDirectionAsc"]), VT = AZ, BZ = ["active", "children", "className", "direction", "hideSortIcon", "IconComponent"], zZ = (e) => {
  const {
    classes: r,
    direction: s,
    active: u
  } = e, f = {
    root: ["root", u && "active"],
    icon: ["icon", `iconDirection${oe(s)}`]
  };
  return Ue(f, _Z, r);
}, FZ = Z(er, {
  name: "MuiTableSortLabel",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.active && r.active];
  }
})(({
  theme: e
}) => ({
  cursor: "pointer",
  display: "inline-flex",
  justifyContent: "flex-start",
  flexDirection: "inherit",
  alignItems: "center",
  "&:focus": {
    color: (e.vars || e).palette.text.secondary
  },
  "&:hover": {
    color: (e.vars || e).palette.text.secondary,
    [`& .${VT.icon}`]: {
      opacity: 0.5
    }
  },
  [`&.${VT.active}`]: {
    color: (e.vars || e).palette.text.primary,
    [`& .${VT.icon}`]: {
      opacity: 1,
      color: (e.vars || e).palette.text.secondary
    }
  }
})), jZ = Z("span", {
  name: "MuiTableSortLabel",
  slot: "Icon",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.icon, r[`iconDirection${oe(s.direction)}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => C({
  fontSize: 18,
  marginRight: 4,
  marginLeft: 4,
  opacity: 0,
  transition: e.transitions.create(["opacity", "transform"], {
    duration: e.transitions.duration.shorter
  }),
  userSelect: "none"
}, r.direction === "desc" && {
  transform: "rotate(0deg)"
}, r.direction === "asc" && {
  transform: "rotate(180deg)"
})), BP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiTableSortLabel"
  }), {
    active: f = !1,
    children: v,
    className: m,
    direction: y = "asc",
    hideSortIcon: b = !1,
    IconComponent: S = IZ
  } = u, E = me(u, BZ), k = C({}, u, {
    active: f,
    direction: y,
    hideSortIcon: b,
    IconComponent: S
  }), D = zZ(k);
  return /* @__PURE__ */ gt(FZ, C({
    className: pe(D.root, m),
    component: "span",
    disableRipple: !0,
    ownerState: k,
    ref: s
  }, E, {
    children: [v, b && !f ? null : /* @__PURE__ */ z(jZ, {
      as: S,
      className: pe(D.icon),
      ownerState: k
    })]
  }));
});
process.env.NODE_ENV !== "production" && (BP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the label will have the active styling (should be true for the sorted column).
   * @default false
   */
  active: n.bool,
  /**
   * Label contents, the arrow will be appended automatically.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The current sort direction.
   * @default 'asc'
   */
  direction: n.oneOf(["asc", "desc"]),
  /**
   * Hide sort icon when active is false.
   * @default false
   */
  hideSortIcon: n.bool,
  /**
   * Sort icon to use.
   * @default ArrowDownwardIcon
   */
  IconComponent: n.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const ine = BP;
function UZ(e) {
  return (1 + Math.sin(Math.PI * e - Math.PI / 2)) / 2;
}
function VZ(e, r, s, u = {}, f = () => {
}) {
  const {
    ease: v = UZ,
    duration: m = 300
    // standard
  } = u;
  let y = null;
  const b = r[e];
  let S = !1;
  const E = () => {
    S = !0;
  }, k = (D) => {
    if (S) {
      f(new Error("Animation cancelled"));
      return;
    }
    y === null && (y = D);
    const M = Math.min(1, (D - y) / m);
    if (r[e] = v(M) * (s - b) + b, M >= 1) {
      requestAnimationFrame(() => {
        f(null);
      });
      return;
    }
    requestAnimationFrame(k);
  };
  return b === s ? (f(new Error("Element already at target position")), E) : (requestAnimationFrame(k), E);
}
const HZ = ["onChange"], WZ = {
  width: 99,
  height: 99,
  position: "absolute",
  top: -9999,
  overflow: "scroll"
};
function zP(e) {
  const {
    onChange: r
  } = e, s = me(e, HZ), u = O.useRef(), f = O.useRef(null), v = () => {
    u.current = f.current.offsetHeight - f.current.clientHeight;
  };
  return ur(() => {
    const m = gh(() => {
      const b = u.current;
      v(), b !== u.current && r(u.current);
    }), y = ta(f.current);
    return y.addEventListener("resize", m), () => {
      m.clear(), y.removeEventListener("resize", m);
    };
  }, [r]), O.useEffect(() => {
    v(), r(u.current);
  }, [r]), /* @__PURE__ */ z("div", C({
    style: WZ,
    ref: f
  }, s));
}
process.env.NODE_ENV !== "production" && (zP.propTypes = {
  onChange: n.func.isRequired
});
function GZ(e) {
  return je("MuiTabScrollButton", e);
}
const qZ = He("MuiTabScrollButton", ["root", "vertical", "horizontal", "disabled"]), YZ = qZ, KZ = ["className", "slots", "slotProps", "direction", "orientation", "disabled"], XZ = (e) => {
  const {
    classes: r,
    orientation: s,
    disabled: u
  } = e;
  return Ue({
    root: ["root", s, u && "disabled"]
  }, GZ, r);
}, QZ = Z(er, {
  name: "MuiTabScrollButton",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, s.orientation && r[s.orientation]];
  }
})(({
  ownerState: e
}) => C({
  width: 40,
  flexShrink: 0,
  opacity: 0.8,
  [`&.${YZ.disabled}`]: {
    opacity: 0
  }
}, e.orientation === "vertical" && {
  width: "100%",
  height: 40,
  "& svg": {
    transform: `rotate(${e.isRtl ? -90 : 90}deg)`
  }
})), FP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  var u, f;
  const v = Ve({
    props: r,
    name: "MuiTabScrollButton"
  }), {
    className: m,
    slots: y = {},
    slotProps: b = {},
    direction: S
  } = v, E = me(v, KZ), D = to().direction === "rtl", M = C({
    isRtl: D
  }, v), P = XZ(M), L = (u = y.StartScrollButtonIcon) != null ? u : PP, w = (f = y.EndScrollButtonIcon) != null ? f : LP, _ = po({
    elementType: L,
    externalSlotProps: b.startScrollButtonIcon,
    additionalProps: {
      fontSize: "small"
    },
    ownerState: M
  }), V = po({
    elementType: w,
    externalSlotProps: b.endScrollButtonIcon,
    additionalProps: {
      fontSize: "small"
    },
    ownerState: M
  });
  return /* @__PURE__ */ z(QZ, C({
    component: "div",
    className: pe(P.root, m),
    ref: s,
    role: null,
    ownerState: M,
    tabIndex: null
  }, E, {
    children: S === "left" ? /* @__PURE__ */ z(L, C({}, _)) : /* @__PURE__ */ z(w, C({}, V))
  }));
});
process.env.NODE_ENV !== "production" && (FP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The direction the button should indicate.
   */
  direction: n.oneOf(["left", "right"]).isRequired,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * The component orientation (layout flow direction).
   */
  orientation: n.oneOf(["horizontal", "vertical"]).isRequired,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   * @default {}
   */
  slotProps: n.shape({
    endScrollButtonIcon: n.oneOfType([n.func, n.object]),
    startScrollButtonIcon: n.oneOfType([n.func, n.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: n.shape({
    EndScrollButtonIcon: n.elementType,
    StartScrollButtonIcon: n.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object])
});
const ZZ = FP;
function JZ(e) {
  return je("MuiTabs", e);
}
const eJ = He("MuiTabs", ["root", "vertical", "flexContainer", "flexContainerVertical", "centered", "scroller", "fixed", "scrollableX", "scrollableY", "hideScrollbar", "scrollButtons", "scrollButtonsHideMobile", "indicator"]), HT = eJ, tJ = ["aria-label", "aria-labelledby", "action", "centered", "children", "className", "component", "allowScrollButtonsMobile", "indicatorColor", "onChange", "orientation", "ScrollButtonComponent", "scrollButtons", "selectionFollowsFocus", "slots", "slotProps", "TabIndicatorProps", "TabScrollButtonProps", "textColor", "value", "variant", "visibleScrollbar"], BN = (e, r) => e === r ? e.firstChild : r && r.nextElementSibling ? r.nextElementSibling : e.firstChild, zN = (e, r) => e === r ? e.lastChild : r && r.previousElementSibling ? r.previousElementSibling : e.lastChild, Yb = (e, r, s) => {
  let u = !1, f = s(e, r);
  for (; f; ) {
    if (f === e.firstChild) {
      if (u)
        return;
      u = !0;
    }
    const v = f.disabled || f.getAttribute("aria-disabled") === "true";
    if (!f.hasAttribute("tabindex") || v)
      f = s(e, f);
    else {
      f.focus();
      return;
    }
  }
}, nJ = (e) => {
  const {
    vertical: r,
    fixed: s,
    hideScrollbar: u,
    scrollableX: f,
    scrollableY: v,
    centered: m,
    scrollButtonsHideMobile: y,
    classes: b
  } = e;
  return Ue({
    root: ["root", r && "vertical"],
    scroller: ["scroller", s && "fixed", u && "hideScrollbar", f && "scrollableX", v && "scrollableY"],
    flexContainer: ["flexContainer", r && "flexContainerVertical", m && "centered"],
    indicator: ["indicator"],
    scrollButtons: ["scrollButtons", y && "scrollButtonsHideMobile"],
    scrollableX: [f && "scrollableX"],
    hideScrollbar: [u && "hideScrollbar"]
  }, JZ, b);
}, oJ = Z("div", {
  name: "MuiTabs",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [{
      [`& .${HT.scrollButtons}`]: r.scrollButtons
    }, {
      [`& .${HT.scrollButtons}`]: s.scrollButtonsHideMobile && r.scrollButtonsHideMobile
    }, r.root, s.vertical && r.vertical];
  }
})(({
  ownerState: e,
  theme: r
}) => C({
  overflow: "hidden",
  minHeight: 48,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  display: "flex"
}, e.vertical && {
  flexDirection: "column"
}, e.scrollButtonsHideMobile && {
  [`& .${HT.scrollButtons}`]: {
    [r.breakpoints.down("sm")]: {
      display: "none"
    }
  }
})), rJ = Z("div", {
  name: "MuiTabs",
  slot: "Scroller",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.scroller, s.fixed && r.fixed, s.hideScrollbar && r.hideScrollbar, s.scrollableX && r.scrollableX, s.scrollableY && r.scrollableY];
  }
})(({
  ownerState: e
}) => C({
  position: "relative",
  display: "inline-block",
  flex: "1 1 auto",
  whiteSpace: "nowrap"
}, e.fixed && {
  overflowX: "hidden",
  width: "100%"
}, e.hideScrollbar && {
  // Hide dimensionless scrollbar on macOS
  scrollbarWidth: "none",
  // Firefox
  "&::-webkit-scrollbar": {
    display: "none"
    // Safari + Chrome
  }
}, e.scrollableX && {
  overflowX: "auto",
  overflowY: "hidden"
}, e.scrollableY && {
  overflowY: "auto",
  overflowX: "hidden"
})), aJ = Z("div", {
  name: "MuiTabs",
  slot: "FlexContainer",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.flexContainer, s.vertical && r.flexContainerVertical, s.centered && r.centered];
  }
})(({
  ownerState: e
}) => C({
  display: "flex"
}, e.vertical && {
  flexDirection: "column"
}, e.centered && {
  justifyContent: "center"
})), iJ = Z("span", {
  name: "MuiTabs",
  slot: "Indicator",
  overridesResolver: (e, r) => r.indicator
})(({
  ownerState: e,
  theme: r
}) => C({
  position: "absolute",
  height: 2,
  bottom: 0,
  width: "100%",
  transition: r.transitions.create()
}, e.indicatorColor === "primary" && {
  backgroundColor: (r.vars || r).palette.primary.main
}, e.indicatorColor === "secondary" && {
  backgroundColor: (r.vars || r).palette.secondary.main
}, e.vertical && {
  height: "100%",
  width: 2,
  right: 0
})), sJ = Z(zP)({
  overflowX: "auto",
  overflowY: "hidden",
  // Hide dimensionless scrollbar on macOS
  scrollbarWidth: "none",
  // Firefox
  "&::-webkit-scrollbar": {
    display: "none"
    // Safari + Chrome
  }
}), FN = {};
let jN = !1;
const jP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiTabs"
  }), f = to(), v = f.direction === "rtl", {
    "aria-label": m,
    "aria-labelledby": y,
    action: b,
    centered: S = !1,
    children: E,
    className: k,
    component: D = "div",
    allowScrollButtonsMobile: M = !1,
    indicatorColor: P = "primary",
    onChange: L,
    orientation: w = "horizontal",
    ScrollButtonComponent: _ = ZZ,
    scrollButtons: V = "auto",
    selectionFollowsFocus: A,
    slots: j = {},
    slotProps: U = {},
    TabIndicatorProps: $ = {},
    TabScrollButtonProps: F = {},
    textColor: G = "primary",
    value: Y,
    variant: Q = "standard",
    visibleScrollbar: q = !1
  } = u, re = me(u, tJ), ee = Q === "scrollable", J = w === "vertical", ce = J ? "scrollTop" : "scrollLeft", de = J ? "top" : "left", fe = J ? "bottom" : "right", K = J ? "clientHeight" : "clientWidth", ne = J ? "height" : "width", ve = C({}, u, {
    component: D,
    allowScrollButtonsMobile: M,
    indicatorColor: P,
    orientation: w,
    vertical: J,
    scrollButtons: V,
    textColor: G,
    variant: Q,
    visibleScrollbar: q,
    fixed: !ee,
    hideScrollbar: ee && !q,
    scrollableX: ee && !J,
    scrollableY: ee && J,
    centered: S && !ee,
    scrollButtonsHideMobile: !M
  }), Ke = nJ(ve), tt = po({
    elementType: j.StartScrollButtonIcon,
    externalSlotProps: U.startScrollButtonIcon,
    ownerState: ve
  }), Ie = po({
    elementType: j.EndScrollButtonIcon,
    externalSlotProps: U.endScrollButtonIcon,
    ownerState: ve
  });
  process.env.NODE_ENV !== "production" && S && ee && console.error('MUI: You can not use the `centered={true}` and `variant="scrollable"` properties at the same time on a `Tabs` component.');
  const [De, Ye] = O.useState(!1), [ke, lt] = O.useState(FN), [xe, ze] = O.useState(!1), [ut, Xe] = O.useState(!1), [rt, nt] = O.useState(!1), [le, $e] = O.useState({
    overflow: "hidden",
    scrollbarWidth: 0
  }), Oe = /* @__PURE__ */ new Map(), dt = O.useRef(null), it = O.useRef(null), zt = () => {
    const we = dt.current;
    let Fe;
    if (we) {
      const kt = we.getBoundingClientRect();
      Fe = {
        clientWidth: we.clientWidth,
        scrollLeft: we.scrollLeft,
        scrollTop: we.scrollTop,
        scrollLeftNormalized: xF(we, f.direction),
        scrollWidth: we.scrollWidth,
        top: kt.top,
        bottom: kt.bottom,
        left: kt.left,
        right: kt.right
      };
    }
    let st;
    if (we && Y !== !1) {
      const kt = it.current.children;
      if (kt.length > 0) {
        const Nt = kt[Oe.get(Y)];
        process.env.NODE_ENV !== "production" && (Nt || console.error(["MUI: The `value` provided to the Tabs component is invalid.", `None of the Tabs' children match with "${Y}".`, Oe.keys ? `You can provide one of the following values: ${Array.from(Oe.keys()).join(", ")}.` : null].join(`
`))), st = Nt ? Nt.getBoundingClientRect() : null, process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "test" && !jN && st && st.width === 0 && st.height === 0 && // if the whole Tabs component is hidden, don't warn
        Fe.clientWidth !== 0 && (Fe = null, console.error(["MUI: The `value` provided to the Tabs component is invalid.", `The Tab with this \`value\` ("${Y}") is not part of the document layout.`, "Make sure the tab item is present in the document or that it's not `display: none`."].join(`
`)), jN = !0);
      }
    }
    return {
      tabsMeta: Fe,
      tabMeta: st
    };
  }, Dt = so(() => {
    const {
      tabsMeta: we,
      tabMeta: Fe
    } = zt();
    let st = 0, kt;
    if (J)
      kt = "top", Fe && we && (st = Fe.top - we.top + we.scrollTop);
    else if (kt = v ? "right" : "left", Fe && we) {
      const nn = v ? we.scrollLeftNormalized + we.clientWidth - we.scrollWidth : we.scrollLeft;
      st = (v ? -1 : 1) * (Fe[kt] - we[kt] + nn);
    }
    const Nt = {
      [kt]: st,
      // May be wrong until the font is loaded.
      [ne]: Fe ? Fe[ne] : 0
    };
    if (isNaN(ke[kt]) || isNaN(ke[ne]))
      lt(Nt);
    else {
      const nn = Math.abs(ke[kt] - Nt[kt]), qt = Math.abs(ke[ne] - Nt[ne]);
      (nn >= 1 || qt >= 1) && lt(Nt);
    }
  }), ht = (we, {
    animation: Fe = !0
  } = {}) => {
    Fe ? VZ(ce, dt.current, we, {
      duration: f.transitions.duration.standard
    }) : dt.current[ce] = we;
  }, Tt = (we) => {
    let Fe = dt.current[ce];
    J ? Fe += we : (Fe += we * (v ? -1 : 1), Fe *= v && r$() === "reverse" ? -1 : 1), ht(Fe);
  }, Lt = () => {
    const we = dt.current[K];
    let Fe = 0;
    const st = Array.from(it.current.children);
    for (let kt = 0; kt < st.length; kt += 1) {
      const Nt = st[kt];
      if (Fe + Nt[K] > we) {
        kt === 0 && (Fe = we);
        break;
      }
      Fe += Nt[K];
    }
    return Fe;
  }, At = () => {
    Tt(-1 * Lt());
  }, tn = () => {
    Tt(Lt());
  }, an = O.useCallback((we) => {
    $e({
      overflow: null,
      scrollbarWidth: we
    });
  }, []), Qt = () => {
    const we = {};
    we.scrollbarSizeListener = ee ? /* @__PURE__ */ z(sJ, {
      onChange: an,
      className: pe(Ke.scrollableX, Ke.hideScrollbar)
    }) : null;
    const st = ee && (V === "auto" && (xe || ut) || V === !0);
    return we.scrollButtonStart = st ? /* @__PURE__ */ z(_, C({
      slots: {
        StartScrollButtonIcon: j.StartScrollButtonIcon
      },
      slotProps: {
        startScrollButtonIcon: tt
      },
      orientation: w,
      direction: v ? "right" : "left",
      onClick: At,
      disabled: !xe
    }, F, {
      className: pe(Ke.scrollButtons, F.className)
    })) : null, we.scrollButtonEnd = st ? /* @__PURE__ */ z(_, C({
      slots: {
        EndScrollButtonIcon: j.EndScrollButtonIcon
      },
      slotProps: {
        endScrollButtonIcon: Ie
      },
      orientation: w,
      direction: v ? "left" : "right",
      onClick: tn,
      disabled: !ut
    }, F, {
      className: pe(Ke.scrollButtons, F.className)
    })) : null, we;
  }, Ce = so((we) => {
    const {
      tabsMeta: Fe,
      tabMeta: st
    } = zt();
    if (!(!st || !Fe)) {
      if (st[de] < Fe[de]) {
        const kt = Fe[ce] + (st[de] - Fe[de]);
        ht(kt, {
          animation: we
        });
      } else if (st[fe] > Fe[fe]) {
        const kt = Fe[ce] + (st[fe] - Fe[fe]);
        ht(kt, {
          animation: we
        });
      }
    }
  }), he = so(() => {
    ee && V !== !1 && nt(!rt);
  });
  O.useEffect(() => {
    const we = gh(() => {
      dt.current && Dt();
    });
    let Fe;
    const st = (nn) => {
      nn.forEach((qt) => {
        qt.removedNodes.forEach((on) => {
          var _n;
          (_n = Fe) == null || _n.unobserve(on);
        }), qt.addedNodes.forEach((on) => {
          var _n;
          (_n = Fe) == null || _n.observe(on);
        });
      }), we(), he();
    }, kt = ta(dt.current);
    kt.addEventListener("resize", we);
    let Nt;
    return typeof ResizeObserver < "u" && (Fe = new ResizeObserver(we), Array.from(it.current.children).forEach((nn) => {
      Fe.observe(nn);
    })), typeof MutationObserver < "u" && (Nt = new MutationObserver(st), Nt.observe(it.current, {
      childList: !0
    })), () => {
      var nn, qt;
      we.clear(), kt.removeEventListener("resize", we), (nn = Nt) == null || nn.disconnect(), (qt = Fe) == null || qt.disconnect();
    };
  }, [Dt, he]), O.useEffect(() => {
    const we = Array.from(it.current.children), Fe = we.length;
    if (typeof IntersectionObserver < "u" && Fe > 0 && ee && V !== !1) {
      const st = we[0], kt = we[Fe - 1], Nt = {
        root: dt.current,
        threshold: 0.99
      }, nn = (fo) => {
        ze(!fo[0].isIntersecting);
      }, qt = new IntersectionObserver(nn, Nt);
      qt.observe(st);
      const on = (fo) => {
        Xe(!fo[0].isIntersecting);
      }, _n = new IntersectionObserver(on, Nt);
      return _n.observe(kt), () => {
        qt.disconnect(), _n.disconnect();
      };
    }
  }, [ee, V, rt, E == null ? void 0 : E.length]), O.useEffect(() => {
    Ye(!0);
  }, []), O.useEffect(() => {
    Dt();
  }), O.useEffect(() => {
    Ce(FN !== ke);
  }, [Ce, ke]), O.useImperativeHandle(b, () => ({
    updateIndicator: Dt,
    updateScrollButtons: he
  }), [Dt, he]);
  const Qe = /* @__PURE__ */ z(iJ, C({}, $, {
    className: pe(Ke.indicator, $.className),
    ownerState: ve,
    style: C({}, ke, $.style)
  }));
  let Me = 0;
  const et = O.Children.map(E, (we) => {
    if (!/* @__PURE__ */ O.isValidElement(we))
      return null;
    process.env.NODE_ENV !== "production" && Hi.isFragment(we) && console.error(["MUI: The Tabs component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    const Fe = we.props.value === void 0 ? Me : we.props.value;
    Oe.set(Fe, Me);
    const st = Fe === Y;
    return Me += 1, /* @__PURE__ */ O.cloneElement(we, C({
      fullWidth: Q === "fullWidth",
      indicator: st && !De && Qe,
      selected: st,
      selectionFollowsFocus: A,
      onChange: L,
      textColor: G,
      value: Fe
    }, Me === 1 && Y === !1 && !we.props.tabIndex ? {
      tabIndex: 0
    } : {}));
  }), qe = (we) => {
    const Fe = it.current, st = Wn(Fe).activeElement;
    if (st.getAttribute("role") !== "tab")
      return;
    let Nt = w === "horizontal" ? "ArrowLeft" : "ArrowUp", nn = w === "horizontal" ? "ArrowRight" : "ArrowDown";
    switch (w === "horizontal" && v && (Nt = "ArrowRight", nn = "ArrowLeft"), we.key) {
      case Nt:
        we.preventDefault(), Yb(Fe, st, zN);
        break;
      case nn:
        we.preventDefault(), Yb(Fe, st, BN);
        break;
      case "Home":
        we.preventDefault(), Yb(Fe, null, BN);
        break;
      case "End":
        we.preventDefault(), Yb(Fe, null, zN);
        break;
    }
  }, We = Qt();
  return /* @__PURE__ */ gt(oJ, C({
    className: pe(Ke.root, k),
    ownerState: ve,
    ref: s,
    as: D
  }, re, {
    children: [We.scrollButtonStart, We.scrollbarSizeListener, /* @__PURE__ */ gt(rJ, {
      className: Ke.scroller,
      ownerState: ve,
      style: {
        overflow: le.overflow,
        [J ? `margin${v ? "Left" : "Right"}` : "marginBottom"]: q ? void 0 : -le.scrollbarWidth
      },
      ref: dt,
      children: [/* @__PURE__ */ z(aJ, {
        "aria-label": m,
        "aria-labelledby": y,
        "aria-orientation": w === "vertical" ? "vertical" : null,
        className: Ke.flexContainer,
        ownerState: ve,
        onKeyDown: qe,
        ref: it,
        role: "tablist",
        children: et
      }), De && Qe]
    }), We.scrollButtonEnd]
  }));
});
process.env.NODE_ENV !== "production" && (jP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Callback fired when the component mounts.
   * This is useful when you want to trigger an action programmatically.
   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`
   *
   * @param {object} actions This object contains all possible actions
   * that can be triggered programmatically.
   */
  action: Tr,
  /**
   * If `true`, the scroll buttons aren't forced hidden on mobile.
   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.
   * @default false
   */
  allowScrollButtonsMobile: n.bool,
  /**
   * The label for the Tabs as a string.
   */
  "aria-label": n.string,
  /**
   * An id or list of ids separated by a space that label the Tabs.
   */
  "aria-labelledby": n.string,
  /**
   * If `true`, the tabs are centered.
   * This prop is intended for large views.
   * @default false
   */
  centered: n.bool,
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: n.elementType,
  /**
   * Determines the color of the indicator.
   * @default 'primary'
   */
  indicatorColor: n.oneOfType([n.oneOf(["primary", "secondary"]), n.string]),
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {any} value We default to the index of the child (number)
   */
  onChange: n.func,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: n.oneOf(["horizontal", "vertical"]),
  /**
   * The component used to render the scroll buttons.
   * @default TabScrollButton
   */
  ScrollButtonComponent: n.elementType,
  /**
   * Determine behavior of scroll buttons when tabs are set to scroll:
   *
   * - `auto` will only present them when not all the items are visible.
   * - `true` will always present them.
   * - `false` will never present them.
   *
   * By default the scroll buttons are hidden on mobile.
   * This behavior can be disabled with `allowScrollButtonsMobile`.
   * @default 'auto'
   */
  scrollButtons: n.oneOf(["auto", !1, !0]),
  /**
   * If `true` the selected tab changes on focus. Otherwise it only
   * changes on activation.
   */
  selectionFollowsFocus: n.bool,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   * @default {}
   */
  slotProps: n.shape({
    endScrollButtonIcon: n.oneOfType([n.func, n.object]),
    startScrollButtonIcon: n.oneOfType([n.func, n.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: n.shape({
    EndScrollButtonIcon: n.elementType,
    StartScrollButtonIcon: n.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * Props applied to the tab indicator element.
   * @default  {}
   */
  TabIndicatorProps: n.object,
  /**
   * Props applied to the [`TabScrollButton`](/material-ui/api/tab-scroll-button/) element.
   * @default {}
   */
  TabScrollButtonProps: n.object,
  /**
   * Determines the color of the `Tab`.
   * @default 'primary'
   */
  textColor: n.oneOf(["inherit", "primary", "secondary"]),
  /**
   * The value of the currently selected `Tab`.
   * If you don't want any selected `Tab`, you can set this prop to `false`.
   */
  value: n.any,
  /**
   * Determines additional display behavior of the tabs:
   *
   *  - `scrollable` will invoke scrolling properties and allow for horizontally
   *  scrolling (or swiping) of the tab bar.
   *  - `fullWidth` will make the tabs grow to use all the available space,
   *  which should be used for small views, like on mobile.
   *  - `standard` will render the default state.
   * @default 'standard'
   */
  variant: n.oneOf(["fullWidth", "scrollable", "standard"]),
  /**
   * If `true`, the scrollbar is visible. It can be useful when displaying
   * a long vertical list of tabs.
   * @default false
   */
  visibleScrollbar: n.bool
});
const sne = jP;
function lJ(e) {
  return je("MuiTextField", e);
}
const cJ = He("MuiTextField", ["root"]), lne = cJ, uJ = ["autoComplete", "autoFocus", "children", "className", "color", "defaultValue", "disabled", "error", "FormHelperTextProps", "fullWidth", "helperText", "id", "InputLabelProps", "inputProps", "InputProps", "inputRef", "label", "maxRows", "minRows", "multiline", "name", "onBlur", "onChange", "onFocus", "placeholder", "required", "rows", "select", "SelectProps", "type", "value", "variant"], dJ = {
  standard: W1,
  filled: oD,
  outlined: HD
}, pJ = (e) => {
  const {
    classes: r
  } = e;
  return Ue({
    root: ["root"]
  }, lJ, r);
}, fJ = Z(WW, {
  name: "MuiTextField",
  slot: "Root",
  overridesResolver: (e, r) => r.root
})({}), UP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiTextField"
  }), {
    autoComplete: f,
    autoFocus: v = !1,
    children: m,
    className: y,
    color: b = "primary",
    defaultValue: S,
    disabled: E = !1,
    error: k = !1,
    FormHelperTextProps: D,
    fullWidth: M = !1,
    helperText: P,
    id: L,
    InputLabelProps: w,
    inputProps: _,
    InputProps: V,
    inputRef: A,
    label: j,
    maxRows: U,
    minRows: $,
    multiline: F = !1,
    name: G,
    onBlur: Y,
    onChange: Q,
    onFocus: q,
    placeholder: re,
    required: ee = !1,
    rows: J,
    select: ce = !1,
    SelectProps: de,
    type: fe,
    value: K,
    variant: ne = "outlined"
  } = u, ve = me(u, uJ), Ke = C({}, u, {
    autoFocus: v,
    color: b,
    disabled: E,
    error: k,
    fullWidth: M,
    multiline: F,
    required: ee,
    select: ce,
    variant: ne
  }), tt = pJ(Ke);
  process.env.NODE_ENV !== "production" && ce && !m && console.error("MUI: `children` must be passed when using the `TextField` component with `select`.");
  const Ie = {};
  ne === "outlined" && (w && typeof w.shrink < "u" && (Ie.notched = w.shrink), Ie.label = j), ce && ((!de || !de.native) && (Ie.id = void 0), Ie["aria-describedby"] = void 0);
  const De = Ms(L), Ye = P && De ? `${De}-helper-text` : void 0, ke = j && De ? `${De}-label` : void 0, lt = dJ[ne], xe = /* @__PURE__ */ z(lt, C({
    "aria-describedby": Ye,
    autoComplete: f,
    autoFocus: v,
    defaultValue: S,
    fullWidth: M,
    multiline: F,
    name: G,
    rows: J,
    maxRows: U,
    minRows: $,
    type: fe,
    value: K,
    id: De,
    inputRef: A,
    onBlur: Y,
    onChange: Q,
    onFocus: q,
    placeholder: re,
    inputProps: _
  }, Ie, V));
  return /* @__PURE__ */ gt(fJ, C({
    className: pe(tt.root, y),
    disabled: E,
    error: k,
    fullWidth: M,
    ref: s,
    required: ee,
    color: b,
    variant: ne,
    ownerState: Ke
  }, ve, {
    children: [j != null && j !== "" && /* @__PURE__ */ z(_7, C({
      htmlFor: De,
      id: ke
    }, w, {
      children: j
    })), ce ? /* @__PURE__ */ z(oP, C({
      "aria-describedby": Ye,
      id: De,
      labelId: ke,
      value: K,
      input: xe
    }, de, {
      children: m
    })) : xe, P && /* @__PURE__ */ z(d9, C({
      id: Ye
    }, D, {
      children: P
    }))]
  }));
});
process.env.NODE_ENV !== "production" && (UP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: n.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: n.bool,
  /**
   * @ignore
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: n.oneOfType([n.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), n.string]),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: n.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: n.bool,
  /**
   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.
   */
  FormHelperTextProps: n.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: n.bool,
  /**
   * The helper text content.
   */
  helperText: n.node,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: n.string,
  /**
   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   */
  InputLabelProps: n.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: n.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](/material-ui/api/filled-input/),
   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)
   * component depending on the `variant` prop value.
   */
  InputProps: n.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Tr,
  /**
   * The label content.
   */
  label: n.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: n.oneOf(["dense", "none", "normal"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: n.oneOfType([n.number, n.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: n.oneOfType([n.number, n.string]),
  /**
   * If `true`, a `textarea` element is rendered instead of an input.
   * @default false
   */
  multiline: n.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: n.string,
  /**
   * @ignore
   */
  onBlur: n.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: n.func,
  /**
   * @ignore
   */
  onFocus: n.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: n.string,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: n.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: n.oneOfType([n.number, n.string]),
  /**
   * Render a [`Select`](/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.
   * If this option is set you must pass the options of the select as children.
   * @default false
   */
  select: n.bool,
  /**
   * Props applied to the [`Select`](/material-ui/api/select/) element.
   */
  SelectProps: n.object,
  /**
   * The size of the component.
   */
  size: n.oneOfType([n.oneOf(["medium", "small"]), n.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */
  type: n.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: n.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: n.oneOf(["filled", "outlined", "standard"])
});
const cne = UP;
function mJ(e) {
  return je("MuiToggleButton", e);
}
const vJ = He("MuiToggleButton", ["root", "disabled", "selected", "standard", "primary", "secondary", "sizeSmall", "sizeMedium", "sizeLarge", "fullWidth"]), df = vJ, VP = /* @__PURE__ */ O.createContext({});
process.env.NODE_ENV !== "production" && (VP.displayName = "ToggleButtonGroupContext");
const HP = VP, WP = /* @__PURE__ */ O.createContext(void 0);
process.env.NODE_ENV !== "production" && (WP.displayName = "ToggleButtonGroupButtonContext");
const GP = WP;
function hJ(e, r) {
  return r === void 0 || e === void 0 ? !1 : Array.isArray(r) ? r.indexOf(e) >= 0 : e === r;
}
const gJ = ["value"], yJ = ["children", "className", "color", "disabled", "disableFocusRipple", "fullWidth", "onChange", "onClick", "selected", "size", "value"], bJ = (e) => {
  const {
    classes: r,
    fullWidth: s,
    selected: u,
    disabled: f,
    size: v,
    color: m
  } = e, y = {
    root: ["root", u && "selected", f && "disabled", s && "fullWidth", `size${oe(v)}`, m]
  };
  return Ue(y, mJ, r);
}, CJ = Z(er, {
  name: "MuiToggleButton",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [r.root, r[`size${oe(s.size)}`]];
  }
})(({
  theme: e,
  ownerState: r
}) => {
  let s = r.color === "standard" ? e.palette.text.primary : e.palette[r.color].main, u;
  return e.vars && (s = r.color === "standard" ? e.vars.palette.text.primary : e.vars.palette[r.color].main, u = r.color === "standard" ? e.vars.palette.text.primaryChannel : e.vars.palette[r.color].mainChannel), C({}, e.typography.button, {
    borderRadius: (e.vars || e).shape.borderRadius,
    padding: 11,
    border: `1px solid ${(e.vars || e).palette.divider}`,
    color: (e.vars || e).palette.action.active
  }, r.fullWidth && {
    width: "100%"
  }, {
    [`&.${df.disabled}`]: {
      color: (e.vars || e).palette.action.disabled,
      border: `1px solid ${(e.vars || e).palette.action.disabledBackground}`
    },
    "&:hover": {
      textDecoration: "none",
      // Reset on mouse devices
      backgroundColor: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : lf(e.palette.text.primary, e.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    [`&.${df.selected}`]: {
      color: s,
      backgroundColor: e.vars ? `rgba(${u} / ${e.vars.palette.action.selectedOpacity})` : lf(s, e.palette.action.selectedOpacity),
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${u} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : lf(s, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: e.vars ? `rgba(${u} / ${e.vars.palette.action.selectedOpacity})` : lf(s, e.palette.action.selectedOpacity)
        }
      }
    }
  }, r.size === "small" && {
    padding: 7,
    fontSize: e.typography.pxToRem(13)
  }, r.size === "large" && {
    padding: 15,
    fontSize: e.typography.pxToRem(15)
  });
}), qP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = O.useContext(HP), {
    value: f
  } = u, v = me(u, gJ), m = O.useContext(GP), y = k0(C({}, v, {
    selected: hJ(r.value, f)
  }), r), b = Ve({
    props: y,
    name: "MuiToggleButton"
  }), {
    children: S,
    className: E,
    color: k = "standard",
    disabled: D = !1,
    disableFocusRipple: M = !1,
    fullWidth: P = !1,
    onChange: L,
    onClick: w,
    selected: _,
    size: V = "medium",
    value: A
  } = b, j = me(b, yJ), U = C({}, b, {
    color: k,
    disabled: D,
    disableFocusRipple: M,
    fullWidth: P,
    size: V
  }), $ = bJ(U), F = (Y) => {
    w && (w(Y, A), Y.defaultPrevented) || L && L(Y, A);
  }, G = m || "";
  return /* @__PURE__ */ z(CJ, C({
    className: pe(v.className, $.root, E, G),
    disabled: D,
    focusRipple: !M,
    ref: s,
    onClick: F,
    onChange: L,
    value: A,
    ownerState: U,
    "aria-pressed": _
  }, j, {
    children: S
  }));
});
process.env.NODE_ENV !== "production" && (qP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the button when it is in an active state.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'standard'
   */
  color: n.oneOfType([n.oneOf(["standard", "primary", "secondary", "error", "info", "success", "warning"]), n.string]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: n.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: n.bool,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: n.bool,
  /**
   * Callback fired when the state changes.
   *
   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.
   * @param {any} value of the selected button.
   */
  onChange: n.func,
  /**
   * Callback fired when the button is clicked.
   *
   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.
   * @param {any} value of the selected button.
   */
  onClick: n.func,
  /**
   * If `true`, the button is rendered in an active state.
   */
  selected: n.bool,
  /**
   * The size of the component.
   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.
   * @default 'medium'
   */
  size: n.oneOfType([n.oneOf(["small", "medium", "large"]), n.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The value to associate with the button when selected in a
   * ToggleButtonGroup.
   */
  value: n.any.isRequired
});
const une = qP;
function xJ(e) {
  return je("MuiToggleButtonGroup", e);
}
const SJ = He("MuiToggleButtonGroup", ["root", "selected", "vertical", "disabled", "grouped", "groupedHorizontal", "groupedVertical", "fullWidth", "firstButton", "lastButton", "middleButton"]), io = SJ, TJ = ["children", "className", "color", "disabled", "exclusive", "fullWidth", "onChange", "orientation", "size", "value"], EJ = (e) => {
  const {
    classes: r,
    orientation: s,
    fullWidth: u,
    disabled: f
  } = e, v = {
    root: ["root", s === "vertical" && "vertical", u && "fullWidth"],
    grouped: ["grouped", `grouped${oe(s)}`, f && "disabled"],
    firstButton: ["firstButton"],
    lastButton: ["lastButton"],
    middleButton: ["middleButton"]
  };
  return Ue(v, xJ, r);
}, RJ = Z("div", {
  name: "MuiToggleButtonGroup",
  slot: "Root",
  overridesResolver: (e, r) => {
    const {
      ownerState: s
    } = e;
    return [{
      [`& .${io.grouped}`]: r.grouped
    }, {
      [`& .${io.grouped}`]: r[`grouped${oe(s.orientation)}`]
    }, {
      [`& .${io.firstButton}`]: r.firstButton
    }, {
      [`& .${io.lastButton}`]: r.lastButton
    }, {
      [`& .${io.middleButton}`]: r.middleButton
    }, r.root, s.orientation === "vertical" && r.vertical, s.fullWidth && r.fullWidth];
  }
})(({
  ownerState: e,
  theme: r
}) => C({
  display: "inline-flex",
  borderRadius: (r.vars || r).shape.borderRadius
}, e.orientation === "vertical" && {
  flexDirection: "column"
}, e.fullWidth && {
  width: "100%"
}, {
  [`& .${io.grouped}`]: C({}, e.orientation === "horizontal" ? {
    [`&.${io.selected} + .${io.grouped}.${io.selected}`]: {
      borderLeft: 0,
      marginLeft: 0
    }
  } : {
    [`&.${io.selected} + .${io.grouped}.${io.selected}`]: {
      borderTop: 0,
      marginTop: 0
    }
  })
}, e.orientation === "horizontal" ? {
  [`& .${io.firstButton},& .${io.middleButton}`]: {
    borderTopRightRadius: 0,
    borderBottomRightRadius: 0
  },
  [`& .${io.lastButton},& .${io.middleButton}`]: {
    marginLeft: -1,
    borderLeft: "1px solid transparent",
    borderTopLeftRadius: 0,
    borderBottomLeftRadius: 0
  }
} : {
  [`& .${io.firstButton},& .${io.middleButton}`]: {
    borderBottomLeftRadius: 0,
    borderBottomRightRadius: 0
  },
  [`& .${io.lastButton},& .${io.middleButton}`]: {
    marginTop: -1,
    borderTop: "1px solid transparent",
    borderTopLeftRadius: 0,
    borderTopRightRadius: 0
  }
}, e.orientation === "horizontal" ? {
  [`& .${io.lastButton}.${df.disabled},& .${io.middleButton}.${df.disabled}`]: {
    borderLeft: "1px solid transparent"
  }
} : {
  [`& .${io.lastButton}.${df.disabled},& .${io.middleButton}.${df.disabled}`]: {
    borderTop: "1px solid transparent"
  }
})), YP = /* @__PURE__ */ O.forwardRef(function(r, s) {
  const u = Ve({
    props: r,
    name: "MuiToggleButtonGroup"
  }), {
    children: f,
    className: v,
    color: m = "standard",
    disabled: y = !1,
    exclusive: b = !1,
    fullWidth: S = !1,
    onChange: E,
    orientation: k = "horizontal",
    size: D = "medium",
    value: M
  } = u, P = me(u, TJ), L = C({}, u, {
    disabled: y,
    fullWidth: S,
    orientation: k,
    size: D
  }), w = EJ(L), _ = O.useCallback((F, G) => {
    if (!E)
      return;
    const Y = M && M.indexOf(G);
    let Q;
    M && Y >= 0 ? (Q = M.slice(), Q.splice(Y, 1)) : Q = M ? M.concat(G) : [G], E(F, Q);
  }, [E, M]), V = O.useCallback((F, G) => {
    E && E(F, M === G ? null : G);
  }, [E, M]), A = O.useMemo(() => ({
    className: w.grouped,
    onChange: b ? V : _,
    value: M,
    size: D,
    fullWidth: S,
    color: m,
    disabled: y
  }), [w.grouped, b, V, _, M, D, S, m, y]), j = a$(f), U = j.length, $ = (F) => {
    const G = F === 0, Y = F === U - 1;
    return G && Y ? "" : G ? w.firstButton : Y ? w.lastButton : w.middleButton;
  };
  return /* @__PURE__ */ z(RJ, C({
    role: "group",
    className: pe(w.root, v),
    ref: s,
    ownerState: L
  }, P, {
    children: /* @__PURE__ */ z(HP.Provider, {
      value: A,
      children: j.map((F, G) => (process.env.NODE_ENV !== "production" && Hi.isFragment(F) && console.error(["MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), /* @__PURE__ */ z(GP.Provider, {
        value: $(G),
        children: F
      }, G)))
    })
  }));
});
process.env.NODE_ENV !== "production" && (YP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: n.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: n.object,
  /**
   * @ignore
   */
  className: n.string,
  /**
   * The color of the button when it is selected.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'standard'
   */
  color: n.oneOfType([n.oneOf(["standard", "primary", "secondary", "error", "info", "success", "warning"]), n.string]),
  /**
   * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.
   * @default false
   */
  disabled: n.bool,
  /**
   * If `true`, only allow one of the child ToggleButton values to be selected.
   * @default false
   */
  exclusive: n.bool,
  /**
   * If `true`, the button group will take up the full width of its container.
   * @default false
   */
  fullWidth: n.bool,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.
   * @param {any} value of the selected buttons. When `exclusive` is true
   * this is a single value; when false an array of selected values. If no value
   * is selected and `exclusive` is true the value is null; when false an empty array.
   */
  onChange: n.func,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: n.oneOf(["horizontal", "vertical"]),
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: n.oneOfType([n.oneOf(["small", "medium", "large"]), n.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: n.oneOfType([n.arrayOf(n.oneOfType([n.func, n.object, n.bool])), n.func, n.object]),
  /**
   * The currently selected value within the group or an array of selected
   * values when `exclusive` is false.
   *
   * The value must have reference equality with the option in order to be selected.
   */
  value: n.any
});
const dne = YP, OJ = ["getTrigger", "target"];
function wJ(e, r) {
  const {
    disableHysteresis: s = !1,
    threshold: u = 100,
    target: f
  } = r, v = e.current;
  return f && (e.current = f.pageYOffset !== void 0 ? f.pageYOffset : f.scrollTop), !s && v !== void 0 && e.current < v ? !1 : e.current > u;
}
const kJ = typeof window < "u" ? window : null;
function pne(e = {}) {
  const {
    getTrigger: r = wJ,
    target: s = kJ
  } = e, u = me(e, OJ), f = O.useRef(), [v, m] = O.useState(() => r(f, u));
  return O.useEffect(() => {
    const y = () => {
      m(r(f, C({
        target: s
      }, u)));
    };
    return y(), s.addEventListener("scroll", y, {
      passive: !0
    }), () => {
      s.removeEventListener("scroll", y, {
        passive: !0
      });
    };
  }, [s, r, JSON.stringify(u)]), v;
}
export {
  UJ as Accordion,
  HJ as AccordionActions,
  GJ as AccordionDetails,
  YJ as AccordionSummary,
  KJ as Alert,
  ZJ as AlertTitle,
  eee as AppBar,
  nee as Autocomplete,
  g3 as Avatar,
  oee as AvatarGroup,
  hM as Backdrop,
  aee as Badge,
  see as BottomNavigation,
  lee as BottomNavigationAction,
  vne as Box,
  cee as Breadcrumbs,
  uee as Button,
  er as ButtonBase,
  dee as ButtonGroup,
  OM as ButtonGroupButtonContext,
  EM as ButtonGroupContext,
  fee as Card,
  mee as CardActionArea,
  hee as CardActions,
  yee as CardContent,
  bee as CardHeader,
  xee as CardMedia,
  See as Checkbox,
  DH as Chip,
  Eee as CircularProgress,
  f0 as ClickAwayListener,
  O1 as Collapse,
  Cne as Column,
  Ree as Container,
  M8 as CssBaseline,
  $ee as Dialog,
  Dee as DialogActions,
  Lee as DialogContent,
  _ee as DialogContentText,
  Aee as DialogTitle,
  Bee as Divider,
  $W as Drawer,
  uU as Experimental_CssVarsProvider,
  nD as Fab,
  mM as Fade,
  oD as FilledInput,
  WW as FormControl,
  Uee as FormControlLabel,
  a9 as FormGroup,
  d9 as FormHelperText,
  y9 as FormLabel,
  h9 as FormLabelRoot,
  _1 as GlobalStyles,
  Hee as Grid,
  C0 as Grow,
  X9 as Hidden,
  Kee as Icon,
  rd as IconButton,
  Qee as ImageList,
  Zee as ImageListItem,
  ete as ImageListItemBar,
  W1 as Input,
  tte as InputAdornment,
  j0 as InputBase,
  _7 as InputLabel,
  Y7 as LinearProgress,
  rte as Link,
  cG as List,
  lte as ListItem,
  ute as ListItemAvatar,
  ite as ListItemButton,
  dte as ListItemIcon,
  TG as ListItemSecondaryAction,
  pte as ListItemText,
  EH as ListSubheader,
  dq as Menu,
  yq as MenuItem,
  GG as MenuList,
  hte as MobileStepper,
  z1 as Modal,
  ZV as ModalManager,
  gte as NativeSelect,
  v0 as NoSsr,
  HD as OutlinedInput,
  bte as Pagination,
  tY as PaginationItem,
  ui as Paper,
  eq as Popover,
  PD as PopoverPaper,
  JG as PopoverRoot,
  I0 as Popper,
  ch as Portal,
  Cte as Radio,
  xte as RadioGroup,
  Ste as Rating,
  yne as Row,
  Ete as ScopedCssBaseline,
  oP as Select,
  Ote as Skeleton,
  SW as Slide,
  wte as Slider,
  yK as SliderMark,
  bK as SliderMarkLabel,
  mK as SliderRail,
  fK as SliderRoot,
  hK as SliderThumb,
  vK as SliderTrack,
  gK as SliderValueLabel,
  $te as Snackbar,
  NK as SnackbarContent,
  Mte as SpeedDial,
  Dte as SpeedDialAction,
  Pte as SpeedDialIcon,
  GW as Stack,
  Ate as Step,
  Bte as StepButton,
  KX as StepConnector,
  jte as StepContent,
  Oh as StepContext,
  kX as StepIcon,
  AX as StepLabel,
  Vte as Stepper,
  xf as StepperContext,
  tz as StyledEngineProvider,
  XT as SvgIcon,
  Hte as SwipeableDrawer,
  Wte as Switch,
  zc as THEME_ID,
  Gte as Tab,
  ZZ as TabScrollButton,
  Yte as Table,
  Xte as TableBody,
  c1 as TableCell,
  Zte as TableContainer,
  ene as TableFooter,
  nne as TableHead,
  rne as TablePagination,
  ane as TableRow,
  ine as TableSortLabel,
  sne as Tabs,
  cne as TextField,
  Q$ as TextareaAutosize,
  g$ as ThemeProvider,
  une as ToggleButton,
  dne as ToggleButtonGroup,
  mZ as Toolbar,
  tX as Tooltip,
  zr as Typography,
  Wee as Unstable_Grid2,
  m0 as Unstable_TrapFocus,
  AK as Zoom,
  VJ as accordionActionsClasses,
  Pb as accordionClasses,
  WJ as accordionDetailsClasses,
  uf as accordionSummaryClasses,
  xj as adaptV4Theme,
  Pk as alertClasses,
  QJ as alertTitleClasses,
  lf as alpha,
  JJ as appBarClasses,
  mn as autocompleteClasses,
  u3 as avatarClasses,
  C3 as avatarGroupClasses,
  ree as backdropClasses,
  Mc as badgeClasses,
  bM as bottomNavigationActionClasses,
  iee as bottomNavigationClasses,
  hne as boxClasses,
  n6 as breadcrumbsClasses,
  RV as buttonBaseClasses,
  jb as buttonClasses,
  Sr as buttonGroupClasses,
  oe as capitalize,
  DT as cardActionAreaClasses,
  vee as cardActionsClasses,
  pee as cardClasses,
  gee as cardContentClasses,
  Uk as cardHeaderClasses,
  Cee as cardMediaClasses,
  PT as checkboxClasses,
  Tn as chipClasses,
  Tee as circularProgressClasses,
  FJ as collapseClasses,
  IJ as colors,
  wee as containerClasses,
  GT as createChainedFunction,
  k5 as createFilterOptions,
  nz as createMuiTheme,
  Tj as createStyles,
  Kn as createSvgIcon,
  ih as createTheme,
  Fc as css,
  kee as darkScrollbar,
  a0 as darken,
  gh as debounce,
  Ol as decomposeColor,
  _J as deprecatedPropType,
  Mee as dialogActionsClasses,
  LT as dialogClasses,
  Pee as dialogContentClasses,
  Iee as dialogContentTextClasses,
  nW as dialogTitleClasses,
  qk as dividerClasses,
  zee as drawerClasses,
  qN as duration,
  oz as easing,
  oF as emphasize,
  Z as experimentalStyled,
  b$ as experimental_extendTheme,
  fU as experimental_sx,
  Kk as fabClasses,
  Ba as filledInputClasses,
  Fee as formControlClasses,
  Zv as formControlLabelClasses,
  Vee as formGroupClasses,
  Xk as formHelperTextClasses,
  nh as formLabelClasses,
  je as generateUtilityClass,
  He as generateUtilityClasses,
  rV as getAccordionActionsUtilityClass,
  cV as getAccordionDetailsUtilityClass,
  NV as getAccordionSummaryUtilityClass,
  JU as getAccordionUtilityClass,
  nH as getAlertTitleUtilityClass,
  D5 as getAlertUtilityClass,
  sH as getAppBarUtilityClass,
  WH as getAutocompleteUtilityClass,
  y3 as getAvatarGroupUtilityClass,
  l3 as getAvatarUtilityClass,
  O3 as getBackdropUtilityClass,
  D3 as getBadgeUtilityClass,
  H3 as getBottomNavigationActionUtilityClass,
  z3 as getBottomNavigationUtilityClass,
  e6 as getBreadcrumbsUtilityClass,
  TV as getButtonBaseUtilityClass,
  h6 as getButtonGroupUtilityClass,
  c6 as getButtonUtilityClass,
  w6 as getCardActionAreaUtilityClass,
  P6 as getCardActionsUtilityClass,
  B6 as getCardContentUtilityClass,
  V6 as getCardHeaderUtilityClass,
  Q6 as getCardMediaUtilityClass,
  S6 as getCardUtilityClass,
  p8 as getCheckboxUtilityClass,
  OH as getChipUtilityClass,
  C8 as getCircularProgressUtilityClass,
  LU as getCollapseUtilityClass,
  Oee as getContainerUtilityClass,
  nF as getContrastRatio,
  q8 as getDialogActionsUtilityClass,
  iW as getDialogContentTextUtilityClass,
  Z8 as getDialogContentUtilityClass,
  eW as getDialogTitleUtilityClass,
  z8 as getDialogUtilityClass,
  mW as getDividerUtilityClass,
  TW as getDrawerUtilityClass,
  MW as getFabUtilityClass,
  VH as getFilledInputUtilityClass,
  YW as getFormControlLabelUtilityClasses,
  FW as getFormControlUtilityClasses,
  e9 as getFormGroupUtilityClass,
  i9 as getFormHelperTextUtilityClasses,
  p9 as getFormLabelUtilityClasses,
  Gee as getGrid2UtilityClass,
  b9 as getGridUtilityClass,
  L5 as getIconButtonUtilityClass,
  Q9 as getIconUtilityClass,
  p7 as getImageListItemBarUtilityClass,
  s7 as getImageListItemUtilityClass,
  n7 as getImageListUtilityClass,
  pU as getInitColorSchemeScript,
  R7 as getInputAdornmentUtilityClass,
  LH as getInputBaseUtilityClass,
  M7 as getInputLabelUtilityClasses,
  zH as getInputUtilityClass,
  A7 as getLinearProgressUtilityClass,
  K7 as getLinkUtilityClass,
  $G as getListItemAvatarUtilityClass,
  pG as getListItemButtonUtilityClass,
  IG as getListItemIconUtilityClass,
  yG as getListItemSecondaryActionClassesUtilityClass,
  FG as getListItemTextUtilityClass,
  uG as getListItemUtilityClass,
  bH as getListSubheaderUtilityClass,
  rG as getListUtilityClass,
  r0 as getLuminance,
  pq as getMenuItemUtilityClass,
  tq as getMenuUtilityClass,
  bq as getMobileStepperUtilityClass,
  P8 as getModalUtilityClass,
  BD as getNativeSelectUtilityClasses,
  dN as getOffsetLeft,
  uN as getOffsetTop,
  jH as getOutlinedInputUtilityClass,
  c0 as getOverlayAlpha,
  Yq as getPaginationItemUtilityClass,
  Hq as getPaginationUtilityClass,
  jU as getPaperUtilityClass,
  qG as getPopoverUtilityClass,
  fY as getRadioUtilityClass,
  SY as getRatingUtilityClass,
  LY as getScopedCssBaselineUtilityClass,
  zY as getSelectUtilityClasses,
  eK as getSkeletonUtilityClass,
  cK as getSliderUtilityClass,
  SK as getSnackbarContentUtilityClass,
  $K as getSnackbarUtilityClass,
  nX as getSpeedDialActionUtilityClass,
  dX as getSpeedDialIconUtilityClass,
  BK as getSpeedDialUtilityClass,
  BX as getStepButtonUtilityClass,
  VX as getStepConnectorUtilityClass,
  XX as getStepContentUtilityClass,
  TX as getStepIconUtilityClass,
  NX as getStepLabelUtilityClass,
  hX as getStepUtilityClass,
  nQ as getStepperUtilityClass,
  mU as getSvgIconUtilityClass,
  hQ as getSwitchUtilityClass,
  GZ as getTabScrollButtonUtilityClass,
  EQ as getTabUtilityClass,
  LQ as getTableBodyUtilityClass,
  FQ as getTableCellUtilityClass,
  GQ as getTableContainerUtilityClass,
  QQ as getTableFooterUtilityClass,
  oZ as getTableHeadUtilityClass,
  gZ as getTablePaginationUtilityClass,
  $Z as getTableRowUtilityClass,
  _Z as getTableSortLabelUtilityClass,
  NQ as getTableUtilityClass,
  JZ as getTabsUtilityClass,
  lJ as getTextFieldUtilityClass,
  xJ as getToggleButtonGroupUtilityClass,
  mJ as getToggleButtonUtilityClass,
  cZ as getToolbarUtilityClass,
  qK as getTooltipUtilityClass,
  qJ as getTouchRippleUtilityClass,
  K5 as getTypographyUtilityClass,
  qee as grid2Classes,
  ph as gridClasses,
  JN as hexToRgb,
  e$ as hslToRgb,
  _5 as iconButtonClasses,
  Yee as iconClasses,
  Xee as imageListClasses,
  Jee as imageListItemBarClasses,
  Jk as imageListItemClasses,
  eN as inputAdornmentClasses,
  Aa as inputBaseClasses,
  Ic as inputClasses,
  nte as inputLabelClasses,
  Rl as isMuiElement,
  Vi as keyframes,
  i0 as lighten,
  ote as linearProgressClasses,
  Q7 as linkClasses,
  ate as listClasses,
  cte as listItemAvatarClasses,
  sf as listItemButtonClasses,
  af as listItemClasses,
  lN as listItemIconClasses,
  ste as listItemSecondaryActionClasses,
  S0 as listItemTextClasses,
  tee as listSubheaderClasses,
  Jj as makeStyles,
  mte as menuClasses,
  Uv as menuItemClasses,
  vte as mobileStepperClasses,
  Nee as modalClasses,
  Y1 as nativeSelectClasses,
  ws as outlinedInputClasses,
  Wn as ownerDocument,
  ta as ownerWindow,
  yte as paginationClasses,
  ni as paginationItemClasses,
  jJ as paperClasses,
  fte as popoverClasses,
  rz as private_createMixins,
  GN as private_createTypography,
  C$ as private_excludeVariablesFromRoot,
  hN as radioClasses,
  Vv as ratingClasses,
  hh as recomposeColor,
  cF as requirePropFactory,
  kj as responsiveFontSizes,
  tF as rgbToHex,
  Tte as scopedCssBaselineClasses,
  Hv as selectClasses,
  s0 as setRef,
  y$ as shouldSkipGeneratingVar,
  Rte as skeletonClasses,
  zi as sliderClasses,
  Nte as snackbarClasses,
  kte as snackbarContentClasses,
  rX as speedDialActionClasses,
  Vb as speedDialClasses,
  Zu as speedDialIconClasses,
  jee as stackClasses,
  NN as stepButtonClasses,
  _te as stepClasses,
  zte as stepConnectorClasses,
  Fte as stepContentClasses,
  BT as stepIconClasses,
  Bc as stepLabelClasses,
  Ute as stepperClasses,
  Z as styled,
  AJ as styles,
  BJ as svgIconClasses,
  ea as switchClasses,
  Ju as tabClasses,
  YZ as tabScrollButtonClasses,
  Kte as tableBodyClasses,
  UQ as tableCellClasses,
  qte as tableClasses,
  Qte as tableContainerClasses,
  Jte as tableFooterClasses,
  tne as tableHeadClasses,
  rh as tablePaginationClasses,
  _N as tableRowClasses,
  VT as tableSortLabelClasses,
  HT as tabsClasses,
  lne as textFieldClasses,
  df as toggleButtonClasses,
  io as toggleButtonGroupClasses,
  one as toolbarClasses,
  Ac as tooltipClasses,
  ri as touchRippleClasses,
  XJ as typographyClasses,
  zJ as unstable_ClassNameGenerator,
  Ue as unstable_composeClasses,
  Sj as unstable_createMuiStrictModeTheme,
  x1 as unstable_getUnit,
  Tl as unstable_toUnitless,
  ur as unstable_useEnhancedEffect,
  Ms as unstable_useId,
  m1 as unsupportedProp,
  M5 as useAutocomplete,
  dU as useColorScheme,
  za as useControlled,
  so as useEventCallback,
  yn as useForkRef,
  Wi as useFormControl,
  bh as useIsFocusVisible,
  Jz as useMediaQuery,
  qq as usePagination,
  pY as useRadioGroup,
  pne as useScrollTrigger,
  Ite as useStepContext,
  Lte as useStepperContext,
  to as useTheme,
  Ve as useThemeProps,
  eU as withStyles,
  tU as withTheme
};
