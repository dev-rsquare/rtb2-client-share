import { b as DV, c as MV, g as NV, a as PV, l as $V, o as IV, p as LV, r as AV, d as qi, i as eN, e as ce, f as Vv, h as tN, j as _V, u as Nf, G as wC, P as t, s as JC, k as Fv, m as BV, n as nN, q as zV, _ as ue, t as VV, v as x, w as oN, x as Bs, y as jc, T as FV, z as ve, A as We, C as kv, D as md, E as jV, F as UV, H as Ak, I as HV, J as Dv, K as Gc, L as Pf, M as WV, N as YV, O as GV, Q as Qn, R as Xn, S as Jb, U as eC, V as hv, W as qV, X as rN, Y as KV, Z as QV, $ as qc, a0 as aN, a1 as XV, a2 as Qi, a3 as ZV, a4 as Ge, a5 as JV, a6 as eF, a7 as Wt, a8 as tF, a9 as PC, aa as e0, ab as t0, ac as _k } from "./Box-ccaa8459.js";
import { B as Lse, ad as Ase } from "./Box-ccaa8459.js";
import * as w from "react";
import ka, { Children as nF, isValidElement as EC, cloneElement as RC, createElement as iN } from "react";
import { jsx as z, jsxs as ht } from "react/jsx-runtime";
import { Column as Bse } from "./components/Column/index.js";
import { Row as Vse } from "./components/Row/index.js";
const oF = {
  50: "#fce4ec",
  100: "#f8bbd0",
  200: "#f48fb1",
  300: "#f06292",
  400: "#ec407a",
  500: "#e91e63",
  600: "#d81b60",
  700: "#c2185b",
  800: "#ad1457",
  900: "#880e4f",
  A100: "#ff80ab",
  A200: "#ff4081",
  A400: "#f50057",
  A700: "#c51162"
}, rF = oF, aF = {
  50: "#ede7f6",
  100: "#d1c4e9",
  200: "#b39ddb",
  300: "#9575cd",
  400: "#7e57c2",
  500: "#673ab7",
  600: "#5e35b1",
  700: "#512da8",
  800: "#4527a0",
  900: "#311b92",
  A100: "#b388ff",
  A200: "#7c4dff",
  A400: "#651fff",
  A700: "#6200ea"
}, iF = aF, sF = {
  50: "#e8eaf6",
  100: "#c5cae9",
  200: "#9fa8da",
  300: "#7986cb",
  400: "#5c6bc0",
  500: "#3f51b5",
  600: "#3949ab",
  700: "#303f9f",
  800: "#283593",
  900: "#1a237e",
  A100: "#8c9eff",
  A200: "#536dfe",
  A400: "#3d5afe",
  A700: "#304ffe"
}, lF = sF, cF = {
  50: "#e0f7fa",
  100: "#b2ebf2",
  200: "#80deea",
  300: "#4dd0e1",
  400: "#26c6da",
  500: "#00bcd4",
  600: "#00acc1",
  700: "#0097a7",
  800: "#00838f",
  900: "#006064",
  A100: "#84ffff",
  A200: "#18ffff",
  A400: "#00e5ff",
  A700: "#00b8d4"
}, uF = cF, dF = {
  50: "#e0f2f1",
  100: "#b2dfdb",
  200: "#80cbc4",
  300: "#4db6ac",
  400: "#26a69a",
  500: "#009688",
  600: "#00897b",
  700: "#00796b",
  800: "#00695c",
  900: "#004d40",
  A100: "#a7ffeb",
  A200: "#64ffda",
  A400: "#1de9b6",
  A700: "#00bfa5"
}, pF = dF, fF = {
  50: "#f1f8e9",
  100: "#dcedc8",
  200: "#c5e1a5",
  300: "#aed581",
  400: "#9ccc65",
  500: "#8bc34a",
  600: "#7cb342",
  700: "#689f38",
  800: "#558b2f",
  900: "#33691e",
  A100: "#ccff90",
  A200: "#b2ff59",
  A400: "#76ff03",
  A700: "#64dd17"
}, mF = fF, hF = {
  50: "#f9fbe7",
  100: "#f0f4c3",
  200: "#e6ee9c",
  300: "#dce775",
  400: "#d4e157",
  500: "#cddc39",
  600: "#c0ca33",
  700: "#afb42b",
  800: "#9e9d24",
  900: "#827717",
  A100: "#f4ff81",
  A200: "#eeff41",
  A400: "#c6ff00",
  A700: "#aeea00"
}, vF = hF, gF = {
  50: "#fffde7",
  100: "#fff9c4",
  200: "#fff59d",
  300: "#fff176",
  400: "#ffee58",
  500: "#ffeb3b",
  600: "#fdd835",
  700: "#fbc02d",
  800: "#f9a825",
  900: "#f57f17",
  A100: "#ffff8d",
  A200: "#ffff00",
  A400: "#ffea00",
  A700: "#ffd600"
}, yF = gF, bF = {
  50: "#fff8e1",
  100: "#ffecb3",
  200: "#ffe082",
  300: "#ffd54f",
  400: "#ffca28",
  500: "#ffc107",
  600: "#ffb300",
  700: "#ffa000",
  800: "#ff8f00",
  900: "#ff6f00",
  A100: "#ffe57f",
  A200: "#ffd740",
  A400: "#ffc400",
  A700: "#ffab00"
}, CF = bF, xF = {
  50: "#fbe9e7",
  100: "#ffccbc",
  200: "#ffab91",
  300: "#ff8a65",
  400: "#ff7043",
  500: "#ff5722",
  600: "#f4511e",
  700: "#e64a19",
  800: "#d84315",
  900: "#bf360c",
  A100: "#ff9e80",
  A200: "#ff6e40",
  A400: "#ff3d00",
  A700: "#dd2c00"
}, SF = xF, TF = {
  50: "#efebe9",
  100: "#d7ccc8",
  200: "#bcaaa4",
  300: "#a1887f",
  400: "#8d6e63",
  500: "#795548",
  600: "#6d4c41",
  700: "#5d4037",
  800: "#4e342e",
  900: "#3e2723",
  A100: "#d7ccc8",
  A200: "#bcaaa4",
  A400: "#8d6e63",
  A700: "#5d4037"
}, wF = TF, EF = {
  50: "#eceff1",
  100: "#cfd8dc",
  200: "#b0bec5",
  300: "#90a4ae",
  400: "#78909c",
  500: "#607d8b",
  600: "#546e7a",
  700: "#455a64",
  800: "#37474f",
  900: "#263238",
  A100: "#cfd8dc",
  A200: "#b0bec5",
  A400: "#78909c",
  A700: "#455a64"
}, RF = EF, lae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  amber: CF,
  blue: DV,
  blueGrey: RF,
  brown: wF,
  common: MV,
  cyan: uF,
  deepOrange: SF,
  deepPurple: iF,
  green: NV,
  grey: PV,
  indigo: lF,
  lightBlue: $V,
  lightGreen: mF,
  lime: vF,
  orange: IV,
  pink: rF,
  purple: LV,
  red: AV,
  teal: pF,
  yellow: yF
}, Symbol.toStringTag, { value: "Module" })), OF = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: qi,
  isPlainObject: eN
}, Symbol.toStringTag, { value: "Module" })), kF = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ce
}, Symbol.toStringTag, { value: "Module" })), DF = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Vv,
  private_createBreakpoints: tN,
  unstable_applyStyles: _V
}, Symbol.toStringTag, { value: "Module" }));
function sN({
  styles: e,
  themeId: o,
  defaultTheme: i = {}
}) {
  const c = Nf(i), d = typeof e == "function" ? e(o && c[o] || c) : e;
  return /* @__PURE__ */ z(wC, {
    styles: d
  });
}
process.env.NODE_ENV !== "production" && (sN.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: t.object,
  /**
   * @ignore
   */
  styles: t.oneOfType([t.array, t.func, t.number, t.object, t.string, t.bool]),
  /**
   * @ignore
   */
  themeId: t.string
});
const MF = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: JC,
  extendSxProp: Fv,
  unstable_createStyleFunctionSx: BV,
  unstable_defaultSxConfig: nN
}, Symbol.toStringTag, { value: "Module" }));
var k1 = { exports: {} }, An = {};
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Bk;
function NF() {
  if (Bk)
    return An;
  Bk = 1;
  var e = Symbol.for("react.element"), o = Symbol.for("react.portal"), i = Symbol.for("react.fragment"), c = Symbol.for("react.strict_mode"), d = Symbol.for("react.profiler"), p = Symbol.for("react.provider"), f = Symbol.for("react.context"), v = Symbol.for("react.server_context"), g = Symbol.for("react.forward_ref"), b = Symbol.for("react.suspense"), S = Symbol.for("react.suspense_list"), R = Symbol.for("react.memo"), D = Symbol.for("react.lazy"), k = Symbol.for("react.offscreen"), $;
  $ = Symbol.for("react.module.reference");
  function P(O) {
    if (typeof O == "object" && O !== null) {
      var I = O.$$typeof;
      switch (I) {
        case e:
          switch (O = O.type, O) {
            case i:
            case d:
            case c:
            case b:
            case S:
              return O;
            default:
              switch (O = O && O.$$typeof, O) {
                case v:
                case f:
                case g:
                case D:
                case R:
                case p:
                  return O;
                default:
                  return I;
              }
          }
        case o:
          return I;
      }
    }
  }
  return An.ContextConsumer = f, An.ContextProvider = p, An.Element = e, An.ForwardRef = g, An.Fragment = i, An.Lazy = D, An.Memo = R, An.Portal = o, An.Profiler = d, An.StrictMode = c, An.Suspense = b, An.SuspenseList = S, An.isAsyncMode = function() {
    return !1;
  }, An.isConcurrentMode = function() {
    return !1;
  }, An.isContextConsumer = function(O) {
    return P(O) === f;
  }, An.isContextProvider = function(O) {
    return P(O) === p;
  }, An.isElement = function(O) {
    return typeof O == "object" && O !== null && O.$$typeof === e;
  }, An.isForwardRef = function(O) {
    return P(O) === g;
  }, An.isFragment = function(O) {
    return P(O) === i;
  }, An.isLazy = function(O) {
    return P(O) === D;
  }, An.isMemo = function(O) {
    return P(O) === R;
  }, An.isPortal = function(O) {
    return P(O) === o;
  }, An.isProfiler = function(O) {
    return P(O) === d;
  }, An.isStrictMode = function(O) {
    return P(O) === c;
  }, An.isSuspense = function(O) {
    return P(O) === b;
  }, An.isSuspenseList = function(O) {
    return P(O) === S;
  }, An.isValidElementType = function(O) {
    return typeof O == "string" || typeof O == "function" || O === i || O === d || O === c || O === b || O === S || O === k || typeof O == "object" && O !== null && (O.$$typeof === D || O.$$typeof === R || O.$$typeof === p || O.$$typeof === f || O.$$typeof === g || O.$$typeof === $ || O.getModuleId !== void 0);
  }, An.typeOf = P, An;
}
var _n = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var zk;
function PF() {
  return zk || (zk = 1, process.env.NODE_ENV !== "production" && function() {
    var e = Symbol.for("react.element"), o = Symbol.for("react.portal"), i = Symbol.for("react.fragment"), c = Symbol.for("react.strict_mode"), d = Symbol.for("react.profiler"), p = Symbol.for("react.provider"), f = Symbol.for("react.context"), v = Symbol.for("react.server_context"), g = Symbol.for("react.forward_ref"), b = Symbol.for("react.suspense"), S = Symbol.for("react.suspense_list"), R = Symbol.for("react.memo"), D = Symbol.for("react.lazy"), k = Symbol.for("react.offscreen"), $ = !1, P = !1, O = !1, I = !1, _ = !1, A;
    A = Symbol.for("react.module.reference");
    function V(ae) {
      return !!(typeof ae == "string" || typeof ae == "function" || ae === i || ae === d || _ || ae === c || ae === b || ae === S || I || ae === k || $ || P || O || typeof ae == "object" && ae !== null && (ae.$$typeof === D || ae.$$typeof === R || ae.$$typeof === p || ae.$$typeof === f || ae.$$typeof === g || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      ae.$$typeof === A || ae.getModuleId !== void 0));
    }
    function B(ae) {
      if (typeof ae == "object" && ae !== null) {
        var $e = ae.$$typeof;
        switch ($e) {
          case e:
            var Se = ae.type;
            switch (Se) {
              case i:
              case d:
              case c:
              case b:
              case S:
                return Se;
              default:
                var mt = Se && Se.$$typeof;
                switch (mt) {
                  case v:
                  case f:
                  case g:
                  case D:
                  case R:
                  case p:
                    return mt;
                  default:
                    return $e;
                }
            }
          case o:
            return $e;
        }
      }
    }
    var M = f, F = p, Y = e, H = g, J = i, W = D, te = R, Z = o, q = d, Q = c, re = b, ie = S, K = !1, ne = !1;
    function se(ae) {
      return K || (K = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function Fe(ae) {
      return ne || (ne = !0, console.warn("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function qe(ae) {
      return B(ae) === f;
    }
    function Me(ae) {
      return B(ae) === p;
    }
    function fe(ae) {
      return typeof ae == "object" && ae !== null && ae.$$typeof === e;
    }
    function De(ae) {
      return B(ae) === g;
    }
    function be(ae) {
      return B(ae) === i;
    }
    function Ce(ae) {
      return B(ae) === D;
    }
    function de(ae) {
      return B(ae) === R;
    }
    function Ae(ae) {
      return B(ae) === o;
    }
    function at(ae) {
      return B(ae) === d;
    }
    function Oe(ae) {
      return B(ae) === c;
    }
    function _e(ae) {
      return B(ae) === b;
    }
    function ye(ae) {
      return B(ae) === S;
    }
    _n.ContextConsumer = M, _n.ContextProvider = F, _n.Element = Y, _n.ForwardRef = H, _n.Fragment = J, _n.Lazy = W, _n.Memo = te, _n.Portal = Z, _n.Profiler = q, _n.StrictMode = Q, _n.Suspense = re, _n.SuspenseList = ie, _n.isAsyncMode = se, _n.isConcurrentMode = Fe, _n.isContextConsumer = qe, _n.isContextProvider = Me, _n.isElement = fe, _n.isForwardRef = De, _n.isFragment = be, _n.isLazy = Ce, _n.isMemo = de, _n.isPortal = Ae, _n.isProfiler = at, _n.isStrictMode = Oe, _n.isSuspense = _e, _n.isSuspenseList = ye, _n.isValidElementType = V, _n.typeOf = B;
  }()), _n;
}
process.env.NODE_ENV === "production" ? k1.exports = NF() : k1.exports = PF();
var Vk = k1.exports;
const $F = /^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;
function lN(e) {
  const o = `${e}`.match($F);
  return o && o[1] || "";
}
function cN(e, o = "") {
  return e.displayName || e.name || lN(e) || o;
}
function Fk(e, o, i) {
  const c = cN(o);
  return e.displayName || (c !== "" ? `${i}(${c})` : i);
}
function K1(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return cN(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case Vk.ForwardRef:
          return Fk(e, e.render, "ForwardRef");
        case Vk.Memo:
          return Fk(e, e.type, "memo");
        default:
          return;
      }
  }
}
const IF = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: K1,
  getFunctionName: lN
}, Symbol.toStringTag, { value: "Module" })), LF = ["ownerState"], AF = ["variants"], _F = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"];
function BF(e) {
  return Object.keys(e).length === 0;
}
function zF(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function t1(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const VF = Vv(), jk = (e) => e && e.charAt(0).toLowerCase() + e.slice(1);
function tC({
  defaultTheme: e,
  theme: o,
  themeId: i
}) {
  return BF(o) ? e : o[i] || o;
}
function FF(e) {
  return e ? (o, i) => i[e] : null;
}
function OC(e, o) {
  let {
    ownerState: i
  } = o, c = ue(o, LF);
  const d = typeof e == "function" ? e(x({
    ownerState: i
  }, c)) : e;
  if (Array.isArray(d))
    return d.flatMap((p) => OC(p, x({
      ownerState: i
    }, c)));
  if (d && typeof d == "object" && Array.isArray(d.variants)) {
    const {
      variants: p = []
    } = d;
    let v = ue(d, AF);
    return p.forEach((g) => {
      let b = !0;
      typeof g.props == "function" ? b = g.props(x({
        ownerState: i
      }, c, i)) : Object.keys(g.props).forEach((S) => {
        (i == null ? void 0 : i[S]) !== g.props[S] && c[S] !== g.props[S] && (b = !1);
      }), b && (Array.isArray(v) || (v = [v]), v.push(typeof g.style == "function" ? g.style(x({
        ownerState: i
      }, c, i)) : g.style));
    }), v;
  }
  return d;
}
function jF(e = {}) {
  const {
    themeId: o,
    defaultTheme: i = VF,
    rootShouldForwardProp: c = t1,
    slotShouldForwardProp: d = t1
  } = e, p = (f) => JC(x({}, f, {
    theme: tC(x({}, f, {
      defaultTheme: i,
      themeId: o
    }))
  }));
  return p.__mui_systemSx = !0, (f, v = {}) => {
    zV(f, (B) => B.filter((M) => !(M != null && M.__mui_systemSx)));
    const {
      name: g,
      slot: b,
      skipVariantsResolver: S,
      skipSx: R,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: D = FF(jk(b))
    } = v, k = ue(v, _F), $ = S !== void 0 ? S : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      b && b !== "Root" && b !== "root" || !1
    ), P = R || !1;
    let O;
    process.env.NODE_ENV !== "production" && g && (O = `${g}-${jk(b || "Root")}`);
    let I = t1;
    b === "Root" || b === "root" ? I = c : b ? I = d : zF(f) && (I = void 0);
    const _ = VV(f, x({
      shouldForwardProp: I,
      label: O
    }, k)), A = (B) => typeof B == "function" && B.__emotion_real !== B || eN(B) ? (M) => OC(B, x({}, M, {
      theme: tC({
        theme: M.theme,
        defaultTheme: i,
        themeId: o
      })
    })) : B, V = (B, ...M) => {
      let F = A(B);
      const Y = M ? M.map(A) : [];
      g && D && Y.push((W) => {
        const te = tC(x({}, W, {
          defaultTheme: i,
          themeId: o
        }));
        if (!te.components || !te.components[g] || !te.components[g].styleOverrides)
          return null;
        const Z = te.components[g].styleOverrides, q = {};
        return Object.entries(Z).forEach(([Q, re]) => {
          q[Q] = OC(re, x({}, W, {
            theme: te
          }));
        }), D(W, q);
      }), g && !$ && Y.push((W) => {
        var te;
        const Z = tC(x({}, W, {
          defaultTheme: i,
          themeId: o
        })), q = Z == null || (te = Z.components) == null || (te = te[g]) == null ? void 0 : te.variants;
        return OC({
          variants: q
        }, x({}, W, {
          theme: Z
        }));
      }), P || Y.push(p);
      const H = Y.length - M.length;
      if (Array.isArray(B) && H > 0) {
        const W = new Array(H).fill("");
        F = [...B, ...W], F.raw = [...B.raw, ...W];
      }
      const J = _(F, ...Y);
      if (process.env.NODE_ENV !== "production") {
        let W;
        g && (W = `${g}${ce(b || "")}`), W === void 0 && (W = `Styled(${K1(f)})`), J.displayName = W;
      }
      return f.muiName && (J.muiName = f.muiName), J;
    };
    return _.withConfig && (V.withConfig = _.withConfig), V;
  };
}
const UF = jF(), Q1 = UF;
function n0(e, o) {
  const i = x({}, o);
  return Object.keys(e).forEach((c) => {
    if (c.toString().match(/^(components|slots)$/))
      i[c] = x({}, e[c], i[c]);
    else if (c.toString().match(/^(componentsProps|slotProps)$/)) {
      const d = e[c] || {}, p = o[c];
      i[c] = {}, !p || !Object.keys(p) ? i[c] = d : !d || !Object.keys(d) ? i[c] = p : (i[c] = x({}, p), Object.keys(d).forEach((f) => {
        i[c][f] = n0(d[f], p[f]);
      }));
    } else
      i[c] === void 0 && (i[c] = e[c]);
  }), i;
}
function X1(e) {
  const {
    theme: o,
    name: i,
    props: c
  } = e;
  return !o || !o.components || !o.components[i] || !o.components[i].defaultProps ? c : n0(o.components[i].defaultProps, c);
}
function jv({
  props: e,
  name: o,
  defaultTheme: i,
  themeId: c
}) {
  let d = Nf(i);
  return c && (d = d[c] || d), X1({
    theme: d,
    name: o,
    props: e
  });
}
const HF = typeof window < "u" ? w.useLayoutEffect : w.useEffect, so = HF;
function WF(e, o, i, c, d) {
  const [p, f] = w.useState(() => d && i ? i(e).matches : c ? c(e).matches : o);
  return so(() => {
    let v = !0;
    if (!i)
      return;
    const g = i(e), b = () => {
      v && f(g.matches);
    };
    return b(), g.addListener(b), () => {
      v = !1, g.removeListener(b);
    };
  }, [e, i]), p;
}
const uN = w["useSyncExternalStore"];
function YF(e, o, i, c, d) {
  const p = w.useCallback(() => o, [o]), f = w.useMemo(() => {
    if (d && i)
      return () => i(e).matches;
    if (c !== null) {
      const {
        matches: S
      } = c(e);
      return () => S;
    }
    return p;
  }, [p, e, c, d, i]), [v, g] = w.useMemo(() => {
    if (i === null)
      return [p, () => () => {
      }];
    const S = i(e);
    return [() => S.matches, (R) => (S.addListener(R), () => {
      S.removeListener(R);
    })];
  }, [p, i, e]);
  return uN(g, v, f);
}
function Z1(e, o = {}) {
  const i = oN(), c = typeof window < "u" && typeof window.matchMedia < "u", {
    defaultMatches: d = !1,
    matchMedia: p = c ? window.matchMedia : null,
    ssrMatchMedia: f = null,
    noSsr: v = !1
  } = X1({
    name: "MuiUseMediaQuery",
    props: o,
    theme: i
  });
  process.env.NODE_ENV !== "production" && typeof e == "function" && i === null && console.error(["MUI: The `query` argument provided is invalid.", "You are providing a function without a theme in the context.", "One of the parent elements needs to use a ThemeProvider."].join(`
`));
  let g = typeof e == "function" ? e(i) : e;
  g = g.replace(/^@media( ?)/m, "");
  const S = (uN !== void 0 ? YF : WF)(g, d, p, f, v);
  return process.env.NODE_ENV !== "production" && w.useDebugValue({
    query: g,
    match: S
  }), S;
}
function J1(e, o = 0, i = 1) {
  return process.env.NODE_ENV !== "production" && (e < o || e > i) && console.error(`MUI: The value provided ${e} is out of range [${o}, ${i}].`), jc(e, o, i);
}
function dN(e) {
  e = e.slice(1);
  const o = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let i = e.match(o);
  return i && i[0].length === 1 && (i = i.map((c) => c + c)), i ? `rgb${i.length === 4 ? "a" : ""}(${i.map((c, d) => d < 3 ? parseInt(c, 16) : Math.round(parseInt(c, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function GF(e) {
  const o = e.toString(16);
  return o.length === 1 ? `0${o}` : o;
}
function $l(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return $l(dN(e));
  const o = e.indexOf("("), i = e.substring(0, o);
  if (["rgb", "rgba", "hsl", "hsla", "color"].indexOf(i) === -1)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : Bs(9, e));
  let c = e.substring(o + 1, e.length - 1), d;
  if (i === "color") {
    if (c = c.split(" "), d = c.shift(), c.length === 4 && c[3].charAt(0) === "/" && (c[3] = c[3].slice(1)), ["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].indexOf(d) === -1)
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${d}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : Bs(10, d));
  } else
    c = c.split(",");
  return c = c.map((p) => parseFloat(p)), {
    type: i,
    values: c,
    colorSpace: d
  };
}
function Uv(e) {
  const {
    type: o,
    colorSpace: i
  } = e;
  let {
    values: c
  } = e;
  return o.indexOf("rgb") !== -1 ? c = c.map((d, p) => p < 3 ? parseInt(d, 10) : d) : o.indexOf("hsl") !== -1 && (c[1] = `${c[1]}%`, c[2] = `${c[2]}%`), o.indexOf("color") !== -1 ? c = `${i} ${c.join(" ")}` : c = `${c.join(", ")}`, `${o}(${c})`;
}
function qF(e) {
  if (e.indexOf("#") === 0)
    return e;
  const {
    values: o
  } = $l(e);
  return `#${o.map((i, c) => GF(c === 3 ? Math.round(255 * i) : i)).join("")}`;
}
function pN(e) {
  e = $l(e);
  const {
    values: o
  } = e, i = o[0], c = o[1] / 100, d = o[2] / 100, p = c * Math.min(d, 1 - d), f = (b, S = (b + i / 30) % 12) => d - p * Math.max(Math.min(S - 3, 9 - S, 1), -1);
  let v = "rgb";
  const g = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];
  return e.type === "hsla" && (v += "a", g.push(o[3])), Uv({
    type: v,
    values: g
  });
}
function $C(e) {
  e = $l(e);
  let o = e.type === "hsl" || e.type === "hsla" ? $l(pN(e)).values : e.values;
  return o = o.map((i) => (e.type !== "color" && (i /= 255), i <= 0.03928 ? i / 12.92 : ((i + 0.055) / 1.055) ** 2.4)), Number((0.2126 * o[0] + 0.7152 * o[1] + 0.0722 * o[2]).toFixed(3));
}
function KF(e, o) {
  const i = $C(e), c = $C(o);
  return (Math.max(i, c) + 0.05) / (Math.min(i, c) + 0.05);
}
function di(e, o) {
  return e = $l(e), o = J1(o), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${o}` : e.values[3] = o, Uv(e);
}
function IC(e, o) {
  if (e = $l(e), o = J1(o), e.type.indexOf("hsl") !== -1)
    e.values[2] *= 1 - o;
  else if (e.type.indexOf("rgb") !== -1 || e.type.indexOf("color") !== -1)
    for (let i = 0; i < 3; i += 1)
      e.values[i] *= 1 - o;
  return Uv(e);
}
function LC(e, o) {
  if (e = $l(e), o = J1(o), e.type.indexOf("hsl") !== -1)
    e.values[2] += (100 - e.values[2]) * o;
  else if (e.type.indexOf("rgb") !== -1)
    for (let i = 0; i < 3; i += 1)
      e.values[i] += (255 - e.values[i]) * o;
  else if (e.type.indexOf("color") !== -1)
    for (let i = 0; i < 3; i += 1)
      e.values[i] += (1 - e.values[i]) * o;
  return Uv(e);
}
function QF(e, o = 0.15) {
  return $C(e) > 0.5 ? IC(e, o) : LC(e, o);
}
function Ko(e, o) {
  return process.env.NODE_ENV === "production" ? () => null : function(...c) {
    return e(...c) || o(...c);
  };
}
function XF(e) {
  const {
    prototype: o = {}
  } = e;
  return !!o.isReactComponent;
}
function fN(e, o, i, c, d) {
  const p = e[o], f = d || o;
  if (p == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let v;
  const g = p.type;
  return typeof g == "function" && !XF(g) && (v = "Did you accidentally use a plain function component for an element instead?"), v !== void 0 ? new Error(`Invalid ${c} \`${f}\` supplied to \`${i}\`. Expected an element that can hold a ref. ${v} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const mN = Ko(t.element, fN);
mN.isRequired = Ko(t.element.isRequired, fN);
const Qc = mN;
function ZF(e) {
  const {
    prototype: o = {}
  } = e;
  return !!o.isReactComponent;
}
function JF(e, o, i, c, d) {
  const p = e[o], f = d || o;
  if (p == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let v;
  return typeof p == "function" && !ZF(p) && (v = "Did you accidentally provide a plain function component instead?"), v !== void 0 ? new Error(`Invalid ${c} \`${f}\` supplied to \`${i}\`. Expected an element type that can hold a ref. ${v} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Kc = Ko(t.elementType, JF), ej = "exact-prop: ​";
function yd(e) {
  return process.env.NODE_ENV === "production" ? e : x({}, e, {
    [ej]: (o) => {
      const i = Object.keys(o).filter((c) => !e.hasOwnProperty(c));
      return i.length > 0 ? new Error(`The following props are not supported: ${i.map((c) => `\`${c}\``).join(", ")}. Please remove them.`) : null;
    }
  });
}
function zs(e, o, i, c, d) {
  if (process.env.NODE_ENV === "production")
    return null;
  const p = e[o], f = d || o;
  return p == null ? null : p && p.nodeType !== 1 ? new Error(`Invalid ${c} \`${f}\` supplied to \`${i}\`. Expected an HTMLElement.`) : null;
}
const tj = t.oneOfType([t.func, t.object]), Lo = tj;
function AC(...e) {
  return e.reduce((o, i) => i == null ? o : function(...d) {
    o.apply(this, d), i.apply(this, d);
  }, () => {
  });
}
function $f(e, o = 166) {
  let i;
  function c(...d) {
    const p = () => {
      e.apply(this, d);
    };
    clearTimeout(i), i = setTimeout(p, o);
  }
  return c.clear = () => {
    clearTimeout(i);
  }, c;
}
function nj(e, o) {
  return process.env.NODE_ENV === "production" ? () => null : (i, c, d, p, f) => {
    const v = d || "<<anonymous>>", g = f || c;
    return typeof i[c] < "u" ? new Error(`The ${p} \`${g}\` of \`${v}\` is deprecated. ${o}`) : null;
  };
}
function As(e, o) {
  var i, c;
  return /* @__PURE__ */ w.isValidElement(e) && o.indexOf(
    // For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    (i = e.type.muiName) != null ? i : (c = e.type) == null || (c = c._payload) == null || (c = c.value) == null ? void 0 : c.muiName
  ) !== -1;
}
function Dn(e) {
  return e && e.ownerDocument || document;
}
function Wr(e) {
  return Dn(e).defaultView || window;
}
function hN(e, o) {
  if (process.env.NODE_ENV === "production")
    return () => null;
  const i = o ? x({}, o.propTypes) : null;
  return (d) => (p, f, v, g, b, ...S) => {
    const R = b || f, D = i == null ? void 0 : i[R];
    if (D) {
      const k = D(p, f, v, g, b, ...S);
      if (k)
        return k;
    }
    return typeof p[f] < "u" && !p[d] ? new Error(`The prop \`${R}\` of \`${e}\` can only be used together with the \`${d}\` prop.`) : null;
  };
}
function Mv(e, o) {
  typeof e == "function" ? e(o) : e && (e.current = o);
}
let Uk = 0;
function oj(e) {
  const [o, i] = w.useState(e), c = e || o;
  return w.useEffect(() => {
    o == null && (Uk += 1, i(`mui-${Uk}`));
  }, [o]), c;
}
const Hk = w["useId".toString()];
function Na(e) {
  if (Hk !== void 0) {
    const o = Hk();
    return e ?? o;
  }
  return oj(e);
}
function o0(e, o, i, c, d) {
  if (process.env.NODE_ENV === "production")
    return null;
  const p = d || o;
  return typeof e[o] < "u" ? new Error(`The prop \`${p}\` is not supported. Please remove it.`) : null;
}
function Eo({
  controlled: e,
  default: o,
  name: i,
  state: c = "value"
}) {
  const {
    current: d
  } = w.useRef(e !== void 0), [p, f] = w.useState(o), v = d ? e : p;
  if (process.env.NODE_ENV !== "production") {
    w.useEffect(() => {
      d !== (e !== void 0) && console.error([`MUI: A component is changing the ${d ? "" : "un"}controlled ${c} state of ${i} to be ${d ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${i} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [c, i, e]);
    const {
      current: b
    } = w.useRef(o);
    w.useEffect(() => {
      !d && b !== o && console.error([`MUI: A component is changing the default ${c} state of an uncontrolled ${i} after being initialized. To suppress this warning opt to use a controlled ${i}.`].join(`
`));
    }, [JSON.stringify(o)]);
  }
  const g = w.useCallback((b) => {
    d || f(b);
  }, []);
  return [v, g];
}
function St(e) {
  const o = w.useRef(e);
  return so(() => {
    o.current = e;
  }), w.useRef((...i) => (
    // @ts-expect-error hide `this`
    (0, o.current)(...i)
  )).current;
}
function cn(...e) {
  return w.useMemo(() => e.every((o) => o == null) ? null : (o) => {
    e.forEach((i) => {
      Mv(i, o);
    });
  }, e);
}
const Wk = {};
function rj(e, o) {
  const i = w.useRef(Wk);
  return i.current === Wk && (i.current = e(o)), i;
}
const aj = [];
function ij(e) {
  w.useEffect(e, aj);
}
class Hv {
  constructor() {
    this.currentId = 0, this.clear = () => {
      this.currentId !== 0 && (clearTimeout(this.currentId), this.currentId = 0);
    }, this.disposeEffect = () => this.clear;
  }
  static create() {
    return new Hv();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(o, i) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = 0, i();
    }, o);
  }
}
function Pl() {
  const e = rj(Hv.create).current;
  return ij(e.disposeEffect), e;
}
let r0 = !0, D1 = !1;
const sj = new Hv(), lj = {
  text: !0,
  search: !0,
  url: !0,
  tel: !0,
  email: !0,
  password: !0,
  number: !0,
  date: !0,
  month: !0,
  week: !0,
  time: !0,
  datetime: !0,
  "datetime-local": !0
};
function cj(e) {
  const {
    type: o,
    tagName: i
  } = e;
  return !!(i === "INPUT" && lj[o] && !e.readOnly || i === "TEXTAREA" && !e.readOnly || e.isContentEditable);
}
function uj(e) {
  e.metaKey || e.altKey || e.ctrlKey || (r0 = !0);
}
function n1() {
  r0 = !1;
}
function dj() {
  this.visibilityState === "hidden" && D1 && (r0 = !0);
}
function pj(e) {
  e.addEventListener("keydown", uj, !0), e.addEventListener("mousedown", n1, !0), e.addEventListener("pointerdown", n1, !0), e.addEventListener("touchstart", n1, !0), e.addEventListener("visibilitychange", dj, !0);
}
function fj(e) {
  const {
    target: o
  } = e;
  try {
    return o.matches(":focus-visible");
  } catch {
  }
  return r0 || cj(o);
}
function If() {
  const e = w.useCallback((d) => {
    d != null && pj(d.ownerDocument);
  }, []), o = w.useRef(!1);
  function i() {
    return o.current ? (D1 = !0, sj.start(100, () => {
      D1 = !1;
    }), o.current = !1, !0) : !1;
  }
  function c(d) {
    return fj(d) ? (o.current = !0, !0) : !1;
  }
  return {
    isFocusVisibleRef: o,
    onFocus: c,
    onBlur: i,
    ref: e
  };
}
function vN(e) {
  const o = e.documentElement.clientWidth;
  return Math.abs(window.innerWidth - o);
}
let mf;
function gN() {
  if (mf)
    return mf;
  const e = document.createElement("div"), o = document.createElement("div");
  return o.style.width = "10px", o.style.height = "1px", e.appendChild(o), e.dir = "rtl", e.style.fontSize = "14px", e.style.width = "4px", e.style.height = "1px", e.style.position = "absolute", e.style.top = "-1000px", e.style.overflow = "scroll", document.body.appendChild(e), mf = "reverse", e.scrollLeft > 0 ? mf = "default" : (e.scrollLeft = 1, e.scrollLeft === 0 && (mf = "negative")), document.body.removeChild(e), mf;
}
function mj(e, o) {
  const i = e.scrollLeft;
  if (o !== "rtl")
    return i;
  switch (gN()) {
    case "negative":
      return e.scrollWidth - e.clientWidth + i;
    case "reverse":
      return e.scrollWidth - e.clientWidth - i;
    default:
      return i;
  }
}
const hj = (e) => {
  const o = w.useRef({});
  return w.useEffect(() => {
    o.current = e;
  }), o.current;
}, ew = hj;
function yN(e) {
  return w.Children.toArray(e).filter((o) => /* @__PURE__ */ w.isValidElement(o));
}
const vj = {
  border: 0,
  clip: "rect(0 0 0 0)",
  height: "1px",
  margin: -1,
  overflow: "hidden",
  padding: 0,
  position: "absolute",
  whiteSpace: "nowrap",
  width: "1px"
}, bN = vj;
function gj(e) {
  const o = typeof e;
  switch (o) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return o;
  }
}
function yj(e) {
  return typeof e == "number" && isFinite(e) && Math.floor(e) === e;
}
const bj = Number.isInteger || yj;
function CN(e, o, i, c) {
  const d = e[o];
  if (d == null || !bj(d)) {
    const p = gj(d);
    return new RangeError(`Invalid ${c} \`${o}\` of type \`${p}\` supplied to \`${i}\`, expected \`integer\`.`);
  }
  return null;
}
function xN(e, o, ...i) {
  return e[o] === void 0 ? null : CN(e, o, ...i);
}
function M1() {
  return null;
}
xN.isRequired = CN;
M1.isRequired = M1;
const To = process.env.NODE_ENV === "production" ? M1 : xN;
function Ye(e, o, i = void 0) {
  const c = {};
  return Object.keys(e).forEach(
    // `Object.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.
    // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208
    (d) => {
      c[d] = e[d].reduce((p, f) => {
        if (f) {
          const v = o(f);
          v !== "" && p.push(v), i && i[f] && p.push(i[f]);
        }
        return p;
      }, []).join(" ");
    }
  ), c;
}
const SN = /* @__PURE__ */ w.createContext(null);
process.env.NODE_ENV !== "production" && (SN.displayName = "ThemeContext");
const TN = SN;
function tw() {
  const e = w.useContext(TN);
  return process.env.NODE_ENV !== "production" && w.useDebugValue(e), e;
}
const Cj = typeof Symbol == "function" && Symbol.for, xj = Cj ? Symbol.for("mui.nested") : "__THEME_NESTED__";
function Sj(e, o) {
  if (typeof o == "function") {
    const i = o(e);
    return process.env.NODE_ENV !== "production" && (i || console.error(["MUI: You should return an object from your theme function, i.e.", "<ThemeProvider theme={() => ({})} />"].join(`
`))), i;
  }
  return x({}, e, o);
}
function _C(e) {
  const {
    children: o,
    theme: i
  } = e, c = tw();
  process.env.NODE_ENV !== "production" && c === null && typeof i == "function" && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const d = w.useMemo(() => {
    const p = c === null ? i : Sj(c, i);
    return p != null && (p[xj] = c !== null), p;
  }, [i, c]);
  return /* @__PURE__ */ z(TN.Provider, {
    value: d,
    children: o
  });
}
process.env.NODE_ENV !== "production" && (_C.propTypes = {
  /**
   * Your component tree.
   */
  children: t.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: t.oneOfType([t.object, t.func]).isRequired
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (_C.propTypes = yd(_C.propTypes));
const Yk = {};
function Gk(e, o, i, c = !1) {
  return w.useMemo(() => {
    const d = e && o[e] || o;
    if (typeof i == "function") {
      const p = i(d), f = e ? x({}, o, {
        [e]: p
      }) : p;
      return c ? () => f : f;
    }
    return e ? x({}, o, {
      [e]: i
    }) : x({}, o, i);
  }, [e, o, i, c]);
}
function Nv(e) {
  const {
    children: o,
    theme: i,
    themeId: c
  } = e, d = oN(Yk), p = tw() || Yk;
  process.env.NODE_ENV !== "production" && (d === null && typeof i == "function" || c && d && !d[c] && typeof i == "function") && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const f = Gk(c, d, i), v = Gk(c, p, i, !0);
  return /* @__PURE__ */ z(_C, {
    theme: v,
    children: /* @__PURE__ */ z(FV.Provider, {
      value: f,
      children: o
    })
  });
}
process.env.NODE_ENV !== "production" && (Nv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Your component tree.
   */
  children: t.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: t.oneOfType([t.func, t.object]).isRequired,
  /**
   * The design system's unique id for getting the corresponded theme when there are multiple design systems.
   */
  themeId: t.string
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (Nv.propTypes = yd(Nv.propTypes));
const nw = "mode", ow = "color-scheme", wN = "data-color-scheme";
function Tj(e) {
  const {
    defaultMode: o = "light",
    defaultLightColorScheme: i = "light",
    defaultDarkColorScheme: c = "dark",
    modeStorageKey: d = nw,
    colorSchemeStorageKey: p = ow,
    attribute: f = wN,
    colorSchemeNode: v = "document.documentElement"
  } = e || {};
  return /* @__PURE__ */ z("script", {
    // eslint-disable-next-line react/no-danger
    dangerouslySetInnerHTML: {
      __html: `(function() {
try {
  var mode = localStorage.getItem('${d}') || '${o}';
  var colorScheme = '';
  if (mode === 'system') {
    // handle system mode
    var mql = window.matchMedia('(prefers-color-scheme: dark)');
    if (mql.matches) {
      colorScheme = localStorage.getItem('${p}-dark') || '${c}';
    } else {
      colorScheme = localStorage.getItem('${p}-light') || '${i}';
    }
  }
  if (mode === 'light') {
    colorScheme = localStorage.getItem('${p}-light') || '${i}';
  }
  if (mode === 'dark') {
    colorScheme = localStorage.getItem('${p}-dark') || '${c}';
  }
  if (colorScheme) {
    ${v}.setAttribute('${f}', colorScheme);
  }
} catch(e){}})();`
    }
  }, "mui-color-scheme-init");
}
function qk(e) {
  if (typeof window < "u" && e === "system")
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
function EN(e, o) {
  if (e.mode === "light" || e.mode === "system" && e.systemMode === "light")
    return o("light");
  if (e.mode === "dark" || e.mode === "system" && e.systemMode === "dark")
    return o("dark");
}
function wj(e) {
  return EN(e, (o) => {
    if (o === "light")
      return e.lightColorScheme;
    if (o === "dark")
      return e.darkColorScheme;
  });
}
function o1(e, o) {
  if (typeof window > "u")
    return;
  let i;
  try {
    i = localStorage.getItem(e) || void 0, i || localStorage.setItem(e, o);
  } catch {
  }
  return i || o;
}
function Ej(e) {
  const {
    defaultMode: o = "light",
    defaultLightColorScheme: i,
    defaultDarkColorScheme: c,
    supportedColorSchemes: d = [],
    modeStorageKey: p = nw,
    colorSchemeStorageKey: f = ow,
    storageWindow: v = typeof window > "u" ? void 0 : window
  } = e, g = d.join(","), [b, S] = w.useState(() => {
    const O = o1(p, o), I = o1(`${f}-light`, i), _ = o1(`${f}-dark`, c);
    return {
      mode: O,
      systemMode: qk(O),
      lightColorScheme: I,
      darkColorScheme: _
    };
  }), R = wj(b), D = w.useCallback((O) => {
    S((I) => {
      if (O === I.mode)
        return I;
      const _ = O || o;
      try {
        localStorage.setItem(p, _);
      } catch {
      }
      return x({}, I, {
        mode: _,
        systemMode: qk(_)
      });
    });
  }, [p, o]), k = w.useCallback((O) => {
    O ? typeof O == "string" ? O && !g.includes(O) ? console.error(`\`${O}\` does not exist in \`theme.colorSchemes\`.`) : S((I) => {
      const _ = x({}, I);
      return EN(I, (A) => {
        try {
          localStorage.setItem(`${f}-${A}`, O);
        } catch {
        }
        A === "light" && (_.lightColorScheme = O), A === "dark" && (_.darkColorScheme = O);
      }), _;
    }) : S((I) => {
      const _ = x({}, I), A = O.light === null ? i : O.light, V = O.dark === null ? c : O.dark;
      if (A)
        if (!g.includes(A))
          console.error(`\`${A}\` does not exist in \`theme.colorSchemes\`.`);
        else {
          _.lightColorScheme = A;
          try {
            localStorage.setItem(`${f}-light`, A);
          } catch {
          }
        }
      if (V)
        if (!g.includes(V))
          console.error(`\`${V}\` does not exist in \`theme.colorSchemes\`.`);
        else {
          _.darkColorScheme = V;
          try {
            localStorage.setItem(`${f}-dark`, V);
          } catch {
          }
        }
      return _;
    }) : S((I) => {
      try {
        localStorage.setItem(`${f}-light`, i), localStorage.setItem(`${f}-dark`, c);
      } catch {
      }
      return x({}, I, {
        lightColorScheme: i,
        darkColorScheme: c
      });
    });
  }, [g, f, i, c]), $ = w.useCallback((O) => {
    b.mode === "system" && S((I) => x({}, I, {
      systemMode: O != null && O.matches ? "dark" : "light"
    }));
  }, [b.mode]), P = w.useRef($);
  return P.current = $, w.useEffect(() => {
    const O = (..._) => P.current(..._), I = window.matchMedia("(prefers-color-scheme: dark)");
    return I.addListener(O), O(I), () => I.removeListener(O);
  }, []), w.useEffect(() => {
    const O = (I) => {
      const _ = I.newValue;
      typeof I.key == "string" && I.key.startsWith(f) && (!_ || g.match(_)) && (I.key.endsWith("light") && k({
        light: _
      }), I.key.endsWith("dark") && k({
        dark: _
      })), I.key === p && (!_ || ["light", "dark", "system"].includes(_)) && D(_ || o);
    };
    if (v)
      return v.addEventListener("storage", O), () => v.removeEventListener("storage", O);
  }, [k, D, p, f, g, o, v]), x({}, b, {
    colorScheme: R,
    setMode: D,
    setColorScheme: k
  });
}
const Rj = ["colorSchemes", "components", "generateCssVars", "cssVarPrefix"], Oj = "*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
function kj(e) {
  const {
    themeId: o,
    /**
     * This `theme` object needs to follow a certain structure to
     * be used correctly by the finel `CssVarsProvider`. It should have a
     * `colorSchemes` key with the light and dark (and any other) palette.
     * It should also ideally have a vars object created using `prepareCssVars`.
     */
    theme: i = {},
    attribute: c = wN,
    modeStorageKey: d = nw,
    colorSchemeStorageKey: p = ow,
    defaultMode: f = "light",
    defaultColorScheme: v,
    disableTransitionOnChange: g = !1,
    resolveTheme: b,
    excludeVariablesFromRoot: S
  } = e;
  (!i.colorSchemes || typeof v == "string" && !i.colorSchemes[v] || typeof v == "object" && !i.colorSchemes[v == null ? void 0 : v.light] || typeof v == "object" && !i.colorSchemes[v == null ? void 0 : v.dark]) && console.error(`MUI: \`${v}\` does not exist in \`theme.colorSchemes\`.`);
  const R = /* @__PURE__ */ w.createContext(void 0);
  process.env.NODE_ENV !== "production" && (R.displayName = "ColorSchemeContext");
  const D = () => {
    const I = w.useContext(R);
    if (!I)
      throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `useColorScheme` must be called under <CssVarsProvider />" : Bs(19));
    return I;
  };
  function k({
    children: I,
    theme: _ = i,
    modeStorageKey: A = d,
    colorSchemeStorageKey: V = p,
    attribute: B = c,
    defaultMode: M = f,
    defaultColorScheme: F = v,
    disableTransitionOnChange: Y = g,
    storageWindow: H = typeof window > "u" ? void 0 : window,
    documentNode: J = typeof document > "u" ? void 0 : document,
    colorSchemeNode: W = typeof document > "u" ? void 0 : document.documentElement,
    colorSchemeSelector: te = ":root",
    disableNestedContext: Z = !1,
    disableStyleSheetGeneration: q = !1
  }) {
    const Q = w.useRef(!1), re = tw(), ie = w.useContext(R), K = !!ie && !Z, ne = _[o], se = ne || _, {
      colorSchemes: Fe = {},
      components: qe = {},
      generateCssVars: Me = () => ({
        vars: {},
        css: {}
      }),
      cssVarPrefix: fe
    } = se, De = ue(se, Rj), be = Object.keys(Fe), Ce = typeof F == "string" ? F : F.light, de = typeof F == "string" ? F : F.dark, {
      mode: Ae,
      setMode: at,
      systemMode: Oe,
      lightColorScheme: _e,
      darkColorScheme: ye,
      colorScheme: ae,
      setColorScheme: $e
    } = Ej({
      supportedColorSchemes: be,
      defaultLightColorScheme: Ce,
      defaultDarkColorScheme: de,
      modeStorageKey: A,
      colorSchemeStorageKey: V,
      defaultMode: M,
      storageWindow: H
    });
    let Se = Ae, mt = ae;
    K && (Se = ie.mode, mt = ie.colorScheme);
    const Be = (() => Se || (M === "system" ? f : M))(), ft = (() => mt || (Be === "dark" ? de : Ce))(), {
      css: je,
      vars: Ve
    } = Me(), st = x({}, De, {
      components: qe,
      colorSchemes: Fe,
      cssVarPrefix: fe,
      vars: Ve,
      getColorSchemeSelector: (Te) => `[${B}="${Te}"] &`
    }), gt = {}, Tt = {};
    Object.entries(Fe).forEach(([Te, xe]) => {
      const {
        css: ot,
        vars: He
      } = Me(Te);
      st.vars = qi(st.vars, He), Te === ft && (Object.keys(xe).forEach((Ze) => {
        xe[Ze] && typeof xe[Ze] == "object" ? st[Ze] = x({}, st[Ze], xe[Ze]) : st[Ze] = xe[Ze];
      }), st.palette && (st.palette.colorScheme = Te));
      const it = (() => typeof F == "string" ? F : M === "dark" ? F.dark : F.light)();
      if (Te === it) {
        if (S) {
          const Ze = {};
          S(fe).forEach((nt) => {
            Ze[nt] = ot[nt], delete ot[nt];
          }), gt[`[${B}="${Te}"]`] = Ze;
        }
        gt[`${te}, [${B}="${Te}"]`] = ot;
      } else
        Tt[`${te === ":root" ? "" : te}[${B}="${Te}"]`] = ot;
    }), st.vars = qi(st.vars, Ve), w.useEffect(() => {
      mt && W && W.setAttribute(B, mt);
    }, [mt, B, W]), w.useEffect(() => {
      let Te;
      if (Y && Q.current && J) {
        const xe = J.createElement("style");
        xe.appendChild(J.createTextNode(Oj)), J.head.appendChild(xe), window.getComputedStyle(J.body), Te = setTimeout(() => {
          J.head.removeChild(xe);
        }, 1);
      }
      return () => {
        clearTimeout(Te);
      };
    }, [mt, Y, J]), w.useEffect(() => (Q.current = !0, () => {
      Q.current = !1;
    }), []);
    const _t = w.useMemo(() => ({
      mode: Se,
      systemMode: Oe,
      setMode: at,
      lightColorScheme: _e,
      darkColorScheme: ye,
      colorScheme: mt,
      setColorScheme: $e,
      allColorSchemes: be
    }), [be, mt, ye, _e, Se, $e, at, Oe]);
    let Zt = !0;
    (q || K && (re == null ? void 0 : re.cssVarPrefix) === fe) && (Zt = !1);
    const Vt = /* @__PURE__ */ ht(w.Fragment, {
      children: [Zt && /* @__PURE__ */ ht(w.Fragment, {
        children: [/* @__PURE__ */ z(wC, {
          styles: {
            [te]: je
          }
        }), /* @__PURE__ */ z(wC, {
          styles: gt
        }), /* @__PURE__ */ z(wC, {
          styles: Tt
        })]
      }), /* @__PURE__ */ z(Nv, {
        themeId: ne ? o : void 0,
        theme: b ? b(st) : st,
        children: I
      })]
    });
    return K ? Vt : /* @__PURE__ */ z(R.Provider, {
      value: _t,
      children: Vt
    });
  }
  process.env.NODE_ENV !== "production" && (k.propTypes = {
    /**
     * The body attribute name to attach colorScheme.
     */
    attribute: t.string,
    /**
     * The component tree.
     */
    children: t.node,
    /**
     * The node used to attach the color-scheme attribute
     */
    colorSchemeNode: t.any,
    /**
     * The CSS selector for attaching the generated custom properties
     */
    colorSchemeSelector: t.string,
    /**
     * localStorage key used to store `colorScheme`
     */
    colorSchemeStorageKey: t.string,
    /**
     * The initial color scheme used.
     */
    defaultColorScheme: t.oneOfType([t.string, t.object]),
    /**
     * The initial mode used.
     */
    defaultMode: t.string,
    /**
     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.
     */
    disableNestedContext: t.bool,
    /**
     * If `true`, the style sheet won't be generated.
     *
     * This is useful for controlling nested CssVarsProvider behavior.
     */
    disableStyleSheetGeneration: t.bool,
    /**
     * Disable CSS transitions when switching between modes or color schemes.
     */
    disableTransitionOnChange: t.bool,
    /**
     * The document to attach the attribute to.
     */
    documentNode: t.any,
    /**
     * The key in the local storage used to store current color scheme.
     */
    modeStorageKey: t.string,
    /**
     * The window that attaches the 'storage' event listener.
     * @default window
     */
    storageWindow: t.any,
    /**
     * The calculated theme object that will be passed through context.
     */
    theme: t.object
  });
  const $ = typeof v == "string" ? v : v.light, P = typeof v == "string" ? v : v.dark;
  return {
    CssVarsProvider: k,
    useColorScheme: D,
    getInitColorSchemeScript: (I) => Tj(x({
      attribute: c,
      colorSchemeStorageKey: p,
      defaultMode: f,
      defaultLightColorScheme: $,
      defaultDarkColorScheme: P,
      modeStorageKey: d
    }, I))
  };
}
function Dj(e = "") {
  function o(...c) {
    if (!c.length)
      return "";
    const d = c[0];
    return typeof d == "string" && !d.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${d}${o(...c.slice(1))})` : `, ${d}`;
  }
  return (c, ...d) => `var(--${e ? `${e}-` : ""}${c}${o(...d)})`;
}
const Kk = (e, o, i, c = []) => {
  let d = e;
  o.forEach((p, f) => {
    f === o.length - 1 ? Array.isArray(d) ? d[Number(p)] = i : d && typeof d == "object" && (d[p] = i) : d && typeof d == "object" && (d[p] || (d[p] = c.includes(p) ? [] : {}), d = d[p]);
  });
}, Mj = (e, o, i) => {
  function c(d, p = [], f = []) {
    Object.entries(d).forEach(([v, g]) => {
      (!i || i && !i([...p, v])) && g != null && (typeof g == "object" && Object.keys(g).length > 0 ? c(g, [...p, v], Array.isArray(g) ? [...f, v] : f) : o([...p, v], g, f));
    });
  }
  c(e);
}, Nj = (e, o) => typeof o == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((c) => e.includes(c)) || e[e.length - 1].toLowerCase().indexOf("opacity") >= 0 ? o : `${o}px` : o;
function r1(e, o) {
  const {
    prefix: i,
    shouldSkipGeneratingVar: c
  } = o || {}, d = {}, p = {}, f = {};
  return Mj(
    e,
    (v, g, b) => {
      if ((typeof g == "string" || typeof g == "number") && (!c || !c(v, g))) {
        const S = `--${i ? `${i}-` : ""}${v.join("-")}`;
        Object.assign(d, {
          [S]: Nj(v, g)
        }), Kk(p, v, `var(${S})`, b), Kk(f, v, `var(${S}, ${g})`, b);
      }
    },
    (v) => v[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: d,
    vars: p,
    varsWithDefaults: f
  };
}
function Pv(e) {
  "@babel/helpers - typeof";
  return Pv = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o) {
    return typeof o;
  } : function(o) {
    return o && typeof Symbol == "function" && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, Pv(e);
}
function Pj(e, o) {
  if (Pv(e) != "object" || !e)
    return e;
  var i = e[Symbol.toPrimitive];
  if (i !== void 0) {
    var c = i.call(e, o || "default");
    if (Pv(c) != "object")
      return c;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (o === "string" ? String : Number)(e);
}
function $j(e) {
  var o = Pj(e, "string");
  return Pv(o) == "symbol" ? o : String(o);
}
const Ij = ["colorSchemes", "components", "defaultColorScheme"];
function Lj(e, o) {
  const {
    colorSchemes: i = {},
    defaultColorScheme: c = "light"
  } = e, d = ue(e, Ij), {
    vars: p,
    css: f,
    varsWithDefaults: v
  } = r1(d, o);
  let g = v;
  const b = {}, {
    [c]: S
  } = i, R = ue(i, [c].map($j));
  if (Object.entries(R || {}).forEach(([k, $]) => {
    const {
      vars: P,
      css: O,
      varsWithDefaults: I
    } = r1($, o);
    g = qi(g, I), b[k] = {
      css: O,
      vars: P
    };
  }), S) {
    const {
      css: k,
      vars: $,
      varsWithDefaults: P
    } = r1(S, o);
    g = qi(g, P), b[c] = {
      css: k,
      vars: $
    };
  }
  return {
    vars: g,
    generateCssVars: (k) => {
      var $;
      if (!k) {
        var P;
        const I = x({}, f);
        return {
          css: I,
          vars: p,
          selector: (o == null || (P = o.getSelector) == null ? void 0 : P.call(o, k, I)) || ":root"
        };
      }
      const O = x({}, b[k].css);
      return {
        css: O,
        vars: b[k].vars,
        selector: (o == null || ($ = o.getSelector) == null ? void 0 : $.call(o, k, O)) || ":root"
      };
    }
  };
}
const Aj = ["className", "component", "disableGutters", "fixed", "maxWidth", "classes"], _j = Vv(), Bj = Q1("div", {
  name: "MuiContainer",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[`maxWidth${ce(String(i.maxWidth))}`], i.fixed && o.fixed, i.disableGutters && o.disableGutters];
  }
}), zj = (e) => jv({
  props: e,
  name: "MuiContainer",
  defaultTheme: _j
}), Vj = (e, o) => {
  const i = (g) => We(o, g), {
    classes: c,
    fixed: d,
    disableGutters: p,
    maxWidth: f
  } = e, v = {
    root: ["root", f && `maxWidth${ce(String(f))}`, d && "fixed", p && "disableGutters"]
  };
  return Ye(v, i, c);
};
function Fj(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: o = Bj,
    useThemeProps: i = zj,
    componentName: c = "MuiContainer"
  } = e, d = o(({
    theme: f,
    ownerState: v
  }) => x({
    width: "100%",
    marginLeft: "auto",
    boxSizing: "border-box",
    marginRight: "auto",
    display: "block"
  }, !v.disableGutters && {
    paddingLeft: f.spacing(2),
    paddingRight: f.spacing(2),
    // @ts-ignore module augmentation fails if custom breakpoints are used
    [f.breakpoints.up("sm")]: {
      paddingLeft: f.spacing(3),
      paddingRight: f.spacing(3)
    }
  }), ({
    theme: f,
    ownerState: v
  }) => v.fixed && Object.keys(f.breakpoints.values).reduce((g, b) => {
    const S = b, R = f.breakpoints.values[S];
    return R !== 0 && (g[f.breakpoints.up(S)] = {
      maxWidth: `${R}${f.breakpoints.unit}`
    }), g;
  }, {}), ({
    theme: f,
    ownerState: v
  }) => x({}, v.maxWidth === "xs" && {
    // @ts-ignore module augmentation fails if custom breakpoints are used
    [f.breakpoints.up("xs")]: {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      maxWidth: Math.max(f.breakpoints.values.xs, 444)
    }
  }, v.maxWidth && // @ts-ignore module augmentation fails if custom breakpoints are used
  v.maxWidth !== "xs" && {
    // @ts-ignore module augmentation fails if custom breakpoints are used
    [f.breakpoints.up(v.maxWidth)]: {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      maxWidth: `${f.breakpoints.values[v.maxWidth]}${f.breakpoints.unit}`
    }
  })), p = /* @__PURE__ */ w.forwardRef(function(v, g) {
    const b = i(v), {
      className: S,
      component: R = "div",
      disableGutters: D = !1,
      fixed: k = !1,
      maxWidth: $ = "lg"
    } = b, P = ue(b, Aj), O = x({}, b, {
      component: R,
      disableGutters: D,
      fixed: k,
      maxWidth: $
    }), I = Vj(O, c);
    return (
      // @ts-ignore theme is injected by the styled util
      /* @__PURE__ */ z(d, x({
        as: R,
        ownerState: O,
        className: ve(I.root, S),
        ref: g
      }, P))
    );
  });
  return process.env.NODE_ENV !== "production" && (p.propTypes = {
    children: t.node,
    classes: t.object,
    className: t.string,
    component: t.elementType,
    disableGutters: t.bool,
    fixed: t.bool,
    maxWidth: t.oneOfType([t.oneOf(["xs", "sm", "md", "lg", "xl", !1]), t.string]),
    sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
  }), p;
}
const jj = (e, o) => e.filter((i) => o.includes(i)), Lf = (e, o, i) => {
  const c = e.keys[0];
  Array.isArray(o) ? o.forEach((d, p) => {
    i((f, v) => {
      p <= e.keys.length - 1 && (p === 0 ? Object.assign(f, v) : f[e.up(e.keys[p])] = v);
    }, d);
  }) : o && typeof o == "object" ? (Object.keys(o).length > e.keys.length ? e.keys : jj(e.keys, Object.keys(o))).forEach((p) => {
    if (e.keys.indexOf(p) !== -1) {
      const f = o[p];
      f !== void 0 && i((v, g) => {
        c === p ? Object.assign(v, g) : v[e.up(p)] = g;
      }, f);
    }
  }) : (typeof o == "number" || typeof o == "string") && i((d, p) => {
    Object.assign(d, p);
  }, o);
};
function Il(e) {
  return e ? `Level${e}` : "";
}
function Wv(e) {
  return e.unstable_level > 0 && e.container;
}
function RN(e) {
  return function(i) {
    return `var(--Grid-${i}Spacing${Il(e.unstable_level)})`;
  };
}
function rw(e) {
  return function(i) {
    return e.unstable_level === 0 ? `var(--Grid-${i}Spacing)` : `var(--Grid-${i}Spacing${Il(e.unstable_level - 1)})`;
  };
}
function aw(e) {
  return e.unstable_level === 0 ? "var(--Grid-columns)" : `var(--Grid-columns${Il(e.unstable_level - 1)})`;
}
const Uj = ({
  theme: e,
  ownerState: o
}) => {
  const i = RN(o), c = {};
  return Lf(e.breakpoints, o.gridSize, (d, p) => {
    let f = {};
    p === !0 && (f = {
      flexBasis: 0,
      flexGrow: 1,
      maxWidth: "100%"
    }), p === "auto" && (f = {
      flexBasis: "auto",
      flexGrow: 0,
      flexShrink: 0,
      maxWidth: "none",
      width: "auto"
    }), typeof p == "number" && (f = {
      flexGrow: 0,
      flexBasis: "auto",
      width: `calc(100% * ${p} / ${aw(o)}${Wv(o) ? ` + ${i("column")}` : ""})`
    }), d(c, f);
  }), c;
}, Hj = ({
  theme: e,
  ownerState: o
}) => {
  const i = {};
  return Lf(e.breakpoints, o.gridOffset, (c, d) => {
    let p = {};
    d === "auto" && (p = {
      marginLeft: "auto"
    }), typeof d == "number" && (p = {
      marginLeft: d === 0 ? "0px" : `calc(100% * ${d} / ${aw(o)})`
    }), c(i, p);
  }), i;
}, Wj = ({
  theme: e,
  ownerState: o
}) => {
  if (!o.container)
    return {};
  const i = Wv(o) ? {
    [`--Grid-columns${Il(o.unstable_level)}`]: aw(o)
  } : {
    "--Grid-columns": 12
  };
  return Lf(e.breakpoints, o.columns, (c, d) => {
    c(i, {
      [`--Grid-columns${Il(o.unstable_level)}`]: d
    });
  }), i;
}, Yj = ({
  theme: e,
  ownerState: o
}) => {
  if (!o.container)
    return {};
  const i = rw(o), c = Wv(o) ? {
    // Set the default spacing as its parent spacing.
    // It will be overridden if spacing props are provided
    [`--Grid-rowSpacing${Il(o.unstable_level)}`]: i("row")
  } : {};
  return Lf(e.breakpoints, o.rowSpacing, (d, p) => {
    var f;
    d(c, {
      [`--Grid-rowSpacing${Il(o.unstable_level)}`]: typeof p == "string" ? p : (f = e.spacing) == null ? void 0 : f.call(e, p)
    });
  }), c;
}, Gj = ({
  theme: e,
  ownerState: o
}) => {
  if (!o.container)
    return {};
  const i = rw(o), c = Wv(o) ? {
    // Set the default spacing as its parent spacing.
    // It will be overridden if spacing props are provided
    [`--Grid-columnSpacing${Il(o.unstable_level)}`]: i("column")
  } : {};
  return Lf(e.breakpoints, o.columnSpacing, (d, p) => {
    var f;
    d(c, {
      [`--Grid-columnSpacing${Il(o.unstable_level)}`]: typeof p == "string" ? p : (f = e.spacing) == null ? void 0 : f.call(e, p)
    });
  }), c;
}, qj = ({
  theme: e,
  ownerState: o
}) => {
  if (!o.container)
    return {};
  const i = {};
  return Lf(e.breakpoints, o.direction, (c, d) => {
    c(i, {
      flexDirection: d
    });
  }), i;
}, Kj = ({
  ownerState: e
}) => {
  const o = RN(e), i = rw(e);
  return x({
    minWidth: 0,
    boxSizing: "border-box"
  }, e.container && x({
    display: "flex",
    flexWrap: "wrap"
  }, e.wrap && e.wrap !== "wrap" && {
    flexWrap: e.wrap
  }, {
    margin: `calc(${o("row")} / -2) calc(${o("column")} / -2)`
  }, e.disableEqualOverflow && {
    margin: `calc(${o("row")} * -1) 0px 0px calc(${o("column")} * -1)`
  }), (!e.container || Wv(e)) && x({
    padding: `calc(${i("row")} / 2) calc(${i("column")} / 2)`
  }, (e.disableEqualOverflow || e.parentDisableEqualOverflow) && {
    padding: `${i("row")} 0px 0px ${i("column")}`
  }));
}, Qj = (e) => {
  const o = [];
  return Object.entries(e).forEach(([i, c]) => {
    c !== !1 && c !== void 0 && o.push(`grid-${i}-${String(c)}`);
  }), o;
}, Xj = (e, o = "xs") => {
  function i(c) {
    return c === void 0 ? !1 : typeof c == "string" && !Number.isNaN(Number(c)) || typeof c == "number" && c > 0;
  }
  if (i(e))
    return [`spacing-${o}-${String(e)}`];
  if (typeof e == "object" && !Array.isArray(e)) {
    const c = [];
    return Object.entries(e).forEach(([d, p]) => {
      i(p) && c.push(`spacing-${d}-${String(p)}`);
    }), c;
  }
  return [];
}, Zj = (e) => e === void 0 ? [] : typeof e == "object" ? Object.entries(e).map(([o, i]) => `direction-${o}-${i}`) : [`direction-xs-${String(e)}`], Jj = ["className", "children", "columns", "container", "component", "direction", "wrap", "spacing", "rowSpacing", "columnSpacing", "disableEqualOverflow", "unstable_level"], eU = Vv(), tU = Q1("div", {
  name: "MuiGrid",
  slot: "Root",
  overridesResolver: (e, o) => o.root
});
function nU(e) {
  return jv({
    props: e,
    name: "MuiGrid",
    defaultTheme: eU
  });
}
function oU(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: o = tU,
    useThemeProps: i = nU,
    componentName: c = "MuiGrid"
  } = e, d = /* @__PURE__ */ w.createContext(void 0);
  process.env.NODE_ENV !== "production" && (d.displayName = "GridOverflowContext");
  const p = (g, b) => {
    const {
      container: S,
      direction: R,
      spacing: D,
      wrap: k,
      gridSize: $
    } = g, P = {
      root: ["root", S && "container", k !== "wrap" && `wrap-xs-${String(k)}`, ...Zj(R), ...Qj($), ...S ? Xj(D, b.breakpoints.keys[0]) : []]
    };
    return Ye(P, (O) => We(c, O), {});
  }, f = o(Wj, Gj, Yj, Uj, qj, Kj, Hj), v = /* @__PURE__ */ w.forwardRef(function(b, S) {
    var R, D, k, $, P, O, I, _;
    const A = Nf(), V = i(b), B = Fv(V), M = w.useContext(d), {
      className: F,
      children: Y,
      columns: H = 12,
      container: J = !1,
      component: W = "div",
      direction: te = "row",
      wrap: Z = "wrap",
      spacing: q = 0,
      rowSpacing: Q = q,
      columnSpacing: re = q,
      disableEqualOverflow: ie,
      unstable_level: K = 0
    } = B, ne = ue(B, Jj);
    let se = ie;
    K && ie !== void 0 && (se = b.disableEqualOverflow);
    const Fe = {}, qe = {}, Me = {};
    Object.entries(ne).forEach(([Oe, _e]) => {
      A.breakpoints.values[Oe] !== void 0 ? Fe[Oe] = _e : A.breakpoints.values[Oe.replace("Offset", "")] !== void 0 ? qe[Oe.replace("Offset", "")] = _e : Me[Oe] = _e;
    });
    const fe = (R = b.columns) != null ? R : K ? void 0 : H, De = (D = b.spacing) != null ? D : K ? void 0 : q, be = (k = ($ = b.rowSpacing) != null ? $ : b.spacing) != null ? k : K ? void 0 : Q, Ce = (P = (O = b.columnSpacing) != null ? O : b.spacing) != null ? P : K ? void 0 : re, de = x({}, B, {
      level: K,
      columns: fe,
      container: J,
      direction: te,
      wrap: Z,
      spacing: De,
      rowSpacing: be,
      columnSpacing: Ce,
      gridSize: Fe,
      gridOffset: qe,
      disableEqualOverflow: (I = (_ = se) != null ? _ : M) != null ? I : !1,
      // use context value if exists.
      parentDisableEqualOverflow: M
      // for nested grid
    }), Ae = p(de, A);
    let at = /* @__PURE__ */ z(f, x({
      ref: S,
      as: W,
      ownerState: de,
      className: ve(Ae.root, F)
    }, Me, {
      children: w.Children.map(Y, (Oe) => {
        if (/* @__PURE__ */ w.isValidElement(Oe) && As(Oe, ["Grid"])) {
          var _e;
          return /* @__PURE__ */ w.cloneElement(Oe, {
            unstable_level: (_e = Oe.props.unstable_level) != null ? _e : K + 1
          });
        }
        return Oe;
      })
    }));
    return se !== void 0 && se !== (M ?? !1) && (at = /* @__PURE__ */ z(d.Provider, {
      value: se,
      children: at
    })), at;
  });
  return process.env.NODE_ENV !== "production" && (v.propTypes = {
    children: t.node,
    className: t.string,
    columns: t.oneOfType([t.arrayOf(t.number), t.number, t.object]),
    columnSpacing: t.oneOfType([t.arrayOf(t.oneOfType([t.number, t.string])), t.number, t.object, t.string]),
    component: t.elementType,
    container: t.bool,
    direction: t.oneOfType([t.oneOf(["column-reverse", "column", "row-reverse", "row"]), t.arrayOf(t.oneOf(["column-reverse", "column", "row-reverse", "row"])), t.object]),
    disableEqualOverflow: t.bool,
    lg: t.oneOfType([t.oneOf(["auto"]), t.number, t.bool]),
    lgOffset: t.oneOfType([t.oneOf(["auto"]), t.number]),
    md: t.oneOfType([t.oneOf(["auto"]), t.number, t.bool]),
    mdOffset: t.oneOfType([t.oneOf(["auto"]), t.number]),
    rowSpacing: t.oneOfType([t.arrayOf(t.oneOfType([t.number, t.string])), t.number, t.object, t.string]),
    sm: t.oneOfType([t.oneOf(["auto"]), t.number, t.bool]),
    smOffset: t.oneOfType([t.oneOf(["auto"]), t.number]),
    spacing: t.oneOfType([t.arrayOf(t.oneOfType([t.number, t.string])), t.number, t.object, t.string]),
    sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
    wrap: t.oneOf(["nowrap", "wrap-reverse", "wrap"]),
    xl: t.oneOfType([t.oneOf(["auto"]), t.number, t.bool]),
    xlOffset: t.oneOfType([t.oneOf(["auto"]), t.number]),
    xs: t.oneOfType([t.oneOf(["auto"]), t.number, t.bool]),
    xsOffset: t.oneOfType([t.oneOf(["auto"]), t.number])
  }), v.muiName = "Grid", v;
}
const rU = ["component", "direction", "spacing", "divider", "children", "className", "useFlexGap"], aU = Vv(), iU = Q1("div", {
  name: "MuiStack",
  slot: "Root",
  overridesResolver: (e, o) => o.root
});
function sU(e) {
  return jv({
    props: e,
    name: "MuiStack",
    defaultTheme: aU
  });
}
function lU(e, o) {
  const i = w.Children.toArray(e).filter(Boolean);
  return i.reduce((c, d, p) => (c.push(d), p < i.length - 1 && c.push(/* @__PURE__ */ w.cloneElement(o, {
    key: `separator-${p}`
  })), c), []);
}
const cU = (e) => ({
  row: "Left",
  "row-reverse": "Right",
  column: "Top",
  "column-reverse": "Bottom"
})[e], uU = ({
  ownerState: e,
  theme: o
}) => {
  let i = x({
    display: "flex",
    flexDirection: "column"
  }, kv({
    theme: o
  }, md({
    values: e.direction,
    breakpoints: o.breakpoints.values
  }), (c) => ({
    flexDirection: c
  })));
  if (e.spacing) {
    const c = jV(o), d = Object.keys(o.breakpoints.values).reduce((g, b) => ((typeof e.spacing == "object" && e.spacing[b] != null || typeof e.direction == "object" && e.direction[b] != null) && (g[b] = !0), g), {}), p = md({
      values: e.direction,
      base: d
    }), f = md({
      values: e.spacing,
      base: d
    });
    typeof p == "object" && Object.keys(p).forEach((g, b, S) => {
      if (!p[g]) {
        const D = b > 0 ? p[S[b - 1]] : "column";
        p[g] = D;
      }
    }), i = qi(i, kv({
      theme: o
    }, f, (g, b) => e.useFlexGap ? {
      gap: Ak(c, g)
    } : {
      // The useFlexGap={false} implement relies on each child to give up control of the margin.
      // We need to reset the margin to avoid double spacing.
      "& > :not(style):not(style)": {
        margin: 0
      },
      "& > :not(style) ~ :not(style)": {
        [`margin${cU(b ? p[b] : e.direction)}`]: Ak(c, g)
      }
    }));
  }
  return i = UV(o.breakpoints, i), i;
};
function dU(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: o = iU,
    useThemeProps: i = sU,
    componentName: c = "MuiStack"
  } = e, d = () => Ye({
    root: ["root"]
  }, (g) => We(c, g), {}), p = o(uU), f = /* @__PURE__ */ w.forwardRef(function(g, b) {
    const S = i(g), R = Fv(S), {
      component: D = "div",
      direction: k = "column",
      spacing: $ = 0,
      divider: P,
      children: O,
      className: I,
      useFlexGap: _ = !1
    } = R, A = ue(R, rU), V = {
      direction: k,
      spacing: $,
      useFlexGap: _
    }, B = d();
    return /* @__PURE__ */ z(p, x({
      as: D,
      ownerState: V,
      ref: b,
      className: ve(B.root, I)
    }, A, {
      children: P ? lU(O, P) : O
    }));
  });
  return process.env.NODE_ENV !== "production" && (f.propTypes = {
    children: t.node,
    direction: t.oneOfType([t.oneOf(["column-reverse", "column", "row-reverse", "row"]), t.arrayOf(t.oneOf(["column-reverse", "column", "row-reverse", "row"])), t.object]),
    divider: t.node,
    spacing: t.oneOfType([t.arrayOf(t.oneOfType([t.number, t.string])), t.number, t.object, t.string]),
    sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
  }), f;
}
const pU = ["defaultProps", "mixins", "overrides", "palette", "props", "styleOverrides"], fU = ["type", "mode"];
function mU(e) {
  process.env.NODE_ENV !== "production" && console.warn(["MUI: adaptV4Theme() is deprecated.", "Follow the upgrade guide on https://mui.com/r/migration-v4#theme."].join(`
`));
  const {
    defaultProps: o = {},
    mixins: i = {},
    overrides: c = {},
    palette: d = {},
    props: p = {},
    styleOverrides: f = {}
  } = e, v = ue(e, pU), g = x({}, v, {
    components: {}
  });
  Object.keys(o).forEach((P) => {
    const O = g.components[P] || {};
    O.defaultProps = o[P], g.components[P] = O;
  }), Object.keys(p).forEach((P) => {
    const O = g.components[P] || {};
    O.defaultProps = p[P], g.components[P] = O;
  }), Object.keys(f).forEach((P) => {
    const O = g.components[P] || {};
    O.styleOverrides = f[P], g.components[P] = O;
  }), Object.keys(c).forEach((P) => {
    const O = g.components[P] || {};
    O.styleOverrides = c[P], g.components[P] = O;
  }), g.spacing = HV(e.spacing);
  const b = tN(e.breakpoints || {}), S = g.spacing;
  g.mixins = x({
    gutters: (P = {}) => x({
      paddingLeft: S(2),
      paddingRight: S(2)
    }, P, {
      [b.up("sm")]: x({
        paddingLeft: S(3),
        paddingRight: S(3)
      }, P[b.up("sm")])
    })
  }, i);
  const {
    type: R,
    mode: D
  } = d, k = ue(d, fU), $ = D || R || "light";
  return g.palette = x({
    // theme.palette.text.hint
    text: {
      hint: $ === "dark" ? "rgba(255, 255, 255, 0.5)" : "rgba(0, 0, 0, 0.38)"
    },
    mode: $,
    type: $
  }, k), g;
}
function hU(e, ...o) {
  return Dv(qi({
    unstable_strictMode: !0
  }, e), ...o);
}
let Qk = !1;
function vU(e) {
  return Qk || (console.warn(["MUI: createStyles from @mui/material/styles is deprecated.", "Please use @mui/styles/createStyles"].join(`
`)), Qk = !0), e;
}
function Xk(e) {
  return String(parseFloat(e)).length === String(e).length;
}
function iw(e) {
  return String(e).match(/[\d.\-+]*\s*(.*)/)[1] || "";
}
function Nl(e) {
  return parseFloat(e);
}
function gU(e) {
  return (o, i) => {
    const c = iw(o);
    if (c === i)
      return o;
    let d = Nl(o);
    c !== "px" && (c === "em" || c === "rem") && (d = Nl(o) * Nl(e));
    let p = d;
    if (i !== "px")
      if (i === "em")
        p = d / Nl(e);
      else if (i === "rem")
        p = d / Nl(e);
      else
        return o;
    return parseFloat(p.toFixed(5)) + i;
  };
}
function yU({
  size: e,
  grid: o
}) {
  const i = e - e % o, c = i + o;
  return e - i < c - e ? i : c;
}
function bU({
  lineHeight: e,
  pixels: o,
  htmlFontSize: i
}) {
  return o / (e * i);
}
function CU({
  cssProperty: e,
  min: o,
  max: i,
  unit: c = "rem",
  breakpoints: d = [600, 900, 1200],
  transform: p = null
}) {
  const f = {
    [e]: `${o}${c}`
  }, v = (i - o) / d[d.length - 1];
  return d.forEach((g) => {
    let b = o + v * g;
    p !== null && (b = p(b)), f[`@media (min-width:${g}px)`] = {
      [e]: `${Math.round(b * 1e4) / 1e4}${c}`
    };
  }), f;
}
function xU(e, o = {}) {
  const {
    breakpoints: i = ["sm", "md", "lg"],
    disableAlign: c = !1,
    factor: d = 2,
    variants: p = ["h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "caption", "button", "overline"]
  } = o, f = x({}, e);
  f.typography = x({}, f.typography);
  const v = f.typography, g = gU(v.htmlFontSize), b = i.map((S) => f.breakpoints.values[S]);
  return p.forEach((S) => {
    const R = v[S], D = parseFloat(g(R.fontSize, "rem"));
    if (D <= 1)
      return;
    const k = D, $ = 1 + (k - 1) / d;
    let {
      lineHeight: P
    } = R;
    if (!Xk(P) && !c)
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported non-unitless line height with grid alignment.
Use unitless line heights instead.` : Bs(6));
    Xk(P) || (P = parseFloat(g(P, "rem")) / parseFloat(D));
    let O = null;
    c || (O = (I) => yU({
      size: I,
      grid: bU({
        pixels: 4,
        lineHeight: P,
        htmlFontSize: v.htmlFontSize
      })
    })), v[S] = x({}, R, CU({
      cssProperty: "fontSize",
      min: $,
      max: k,
      unit: "rem",
      breakpoints: b,
      transform: O
    }));
  }), f;
}
const SU = Dv(), a0 = SU;
function Mn() {
  const e = Nf(a0);
  return process.env.NODE_ENV !== "production" && w.useDebugValue(e), e[Gc] || e;
}
function Ue({
  props: e,
  name: o
}) {
  return jv({
    props: e,
    name: o,
    defaultTheme: a0,
    themeId: Gc
  });
}
var Yv = {}, a1 = { exports: {} }, Zk;
function TU() {
  return Zk || (Zk = 1, function(e) {
    function o(i, c) {
      if (i == null)
        return {};
      var d = {}, p = Object.keys(i), f, v;
      for (v = 0; v < p.length; v++)
        f = p[v], !(c.indexOf(f) >= 0) && (d[f] = i[f]);
      return d;
    }
    e.exports = o, e.exports.__esModule = !0, e.exports.default = e.exports;
  }(a1)), a1.exports;
}
const ON = /* @__PURE__ */ Pf(WV), wU = /* @__PURE__ */ Pf(OF), EU = /* @__PURE__ */ Pf(kF), RU = /* @__PURE__ */ Pf(IF), OU = /* @__PURE__ */ Pf(DF), kU = /* @__PURE__ */ Pf(MF);
var Af = GV;
Object.defineProperty(Yv, "__esModule", {
  value: !0
});
var DU = Yv.default = UU, kN = Yv.shouldForwardProp = kC;
Yv.systemDefaultTheme = void 0;
var ci = Af(YV()), N1 = Af(TU()), Jk = BU(ON), MU = wU, NU = Af(EU), PU = Af(RU), $U = Af(OU), IU = Af(kU);
const LU = ["ownerState"], AU = ["variants"], _U = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"];
function DN(e) {
  if (typeof WeakMap != "function")
    return null;
  var o = /* @__PURE__ */ new WeakMap(), i = /* @__PURE__ */ new WeakMap();
  return (DN = function(c) {
    return c ? i : o;
  })(e);
}
function BU(e, o) {
  if (!o && e && e.__esModule)
    return e;
  if (e === null || typeof e != "object" && typeof e != "function")
    return { default: e };
  var i = DN(o);
  if (i && i.has(e))
    return i.get(e);
  var c = { __proto__: null }, d = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var p in e)
    if (p !== "default" && Object.prototype.hasOwnProperty.call(e, p)) {
      var f = d ? Object.getOwnPropertyDescriptor(e, p) : null;
      f && (f.get || f.set) ? Object.defineProperty(c, p, f) : c[p] = e[p];
    }
  return c.default = e, i && i.set(e, c), c;
}
function zU(e) {
  return Object.keys(e).length === 0;
}
function VU(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function kC(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const FU = Yv.systemDefaultTheme = (0, $U.default)(), eD = (e) => e && e.charAt(0).toLowerCase() + e.slice(1);
function nC({
  defaultTheme: e,
  theme: o,
  themeId: i
}) {
  return zU(o) ? e : o[i] || o;
}
function jU(e) {
  return e ? (o, i) => i[e] : null;
}
function DC(e, o) {
  let {
    ownerState: i
  } = o, c = (0, N1.default)(o, LU);
  const d = typeof e == "function" ? e((0, ci.default)({
    ownerState: i
  }, c)) : e;
  if (Array.isArray(d))
    return d.flatMap((p) => DC(p, (0, ci.default)({
      ownerState: i
    }, c)));
  if (d && typeof d == "object" && Array.isArray(d.variants)) {
    const {
      variants: p = []
    } = d;
    let v = (0, N1.default)(d, AU);
    return p.forEach((g) => {
      let b = !0;
      typeof g.props == "function" ? b = g.props((0, ci.default)({
        ownerState: i
      }, c, i)) : Object.keys(g.props).forEach((S) => {
        (i == null ? void 0 : i[S]) !== g.props[S] && c[S] !== g.props[S] && (b = !1);
      }), b && (Array.isArray(v) || (v = [v]), v.push(typeof g.style == "function" ? g.style((0, ci.default)({
        ownerState: i
      }, c, i)) : g.style));
    }), v;
  }
  return d;
}
function UU(e = {}) {
  const {
    themeId: o,
    defaultTheme: i = FU,
    rootShouldForwardProp: c = kC,
    slotShouldForwardProp: d = kC
  } = e, p = (f) => (0, IU.default)((0, ci.default)({}, f, {
    theme: nC((0, ci.default)({}, f, {
      defaultTheme: i,
      themeId: o
    }))
  }));
  return p.__mui_systemSx = !0, (f, v = {}) => {
    (0, Jk.internal_processStyles)(f, (B) => B.filter((M) => !(M != null && M.__mui_systemSx)));
    const {
      name: g,
      slot: b,
      skipVariantsResolver: S,
      skipSx: R,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: D = jU(eD(b))
    } = v, k = (0, N1.default)(v, _U), $ = S !== void 0 ? S : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      b && b !== "Root" && b !== "root" || !1
    ), P = R || !1;
    let O;
    process.env.NODE_ENV !== "production" && g && (O = `${g}-${eD(b || "Root")}`);
    let I = kC;
    b === "Root" || b === "root" ? I = c : b ? I = d : VU(f) && (I = void 0);
    const _ = (0, Jk.default)(f, (0, ci.default)({
      shouldForwardProp: I,
      label: O
    }, k)), A = (B) => typeof B == "function" && B.__emotion_real !== B || (0, MU.isPlainObject)(B) ? (M) => DC(B, (0, ci.default)({}, M, {
      theme: nC({
        theme: M.theme,
        defaultTheme: i,
        themeId: o
      })
    })) : B, V = (B, ...M) => {
      let F = A(B);
      const Y = M ? M.map(A) : [];
      g && D && Y.push((W) => {
        const te = nC((0, ci.default)({}, W, {
          defaultTheme: i,
          themeId: o
        }));
        if (!te.components || !te.components[g] || !te.components[g].styleOverrides)
          return null;
        const Z = te.components[g].styleOverrides, q = {};
        return Object.entries(Z).forEach(([Q, re]) => {
          q[Q] = DC(re, (0, ci.default)({}, W, {
            theme: te
          }));
        }), D(W, q);
      }), g && !$ && Y.push((W) => {
        var te;
        const Z = nC((0, ci.default)({}, W, {
          defaultTheme: i,
          themeId: o
        })), q = Z == null || (te = Z.components) == null || (te = te[g]) == null ? void 0 : te.variants;
        return DC({
          variants: q
        }, (0, ci.default)({}, W, {
          theme: Z
        }));
      }), P || Y.push(p);
      const H = Y.length - M.length;
      if (Array.isArray(B) && H > 0) {
        const W = new Array(H).fill("");
        F = [...B, ...W], F.raw = [...B.raw, ...W];
      }
      const J = _(F, ...Y);
      if (process.env.NODE_ENV !== "production") {
        let W;
        g && (W = `${g}${(0, NU.default)(b || "")}`), W === void 0 && (W = `Styled(${(0, PU.default)(f)})`), J.displayName = W;
      }
      return f.muiName && (J.muiName = f.muiName), J;
    };
    return _.withConfig && (V.withConfig = _.withConfig), V;
  };
}
const Ao = (e) => kN(e) && e !== "classes", Gv = kN, HU = DU({
  themeId: Gc,
  defaultTheme: a0,
  rootShouldForwardProp: Ao
}), ee = HU, WU = ["theme"];
function MN(e) {
  let {
    theme: o
  } = e, i = ue(e, WU);
  const c = o[Gc];
  return /* @__PURE__ */ z(Nv, x({}, i, {
    themeId: c ? Gc : void 0,
    theme: c || o
  }));
}
process.env.NODE_ENV !== "production" && (MN.propTypes = {
  /**
   * Your component tree.
   */
  children: t.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: t.oneOfType([t.object, t.func]).isRequired
});
function YU() {
  throw new Error(process.env.NODE_ENV !== "production" ? `MUI: makeStyles is no longer exported from @mui/material/styles.
You have to import it from @mui/styles.
See https://mui.com/r/migration-v4/#mui-material-styles for more details.` : Bs(14));
}
function GU() {
  throw new Error(process.env.NODE_ENV !== "production" ? `MUI: withStyles is no longer exported from @mui/material/styles.
You have to import it from @mui/styles.
See https://mui.com/r/migration-v4/#mui-material-styles for more details.` : Bs(15));
}
function qU() {
  throw new Error(process.env.NODE_ENV !== "production" ? `MUI: withTheme is no longer exported from @mui/material/styles.
You have to import it from @mui/styles.
See https://mui.com/r/migration-v4/#mui-material-styles for more details.` : Bs(16));
}
function NN(e) {
  var o;
  return !!e[0].match(/(cssVarPrefix|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((o = e[1]) != null && o.match(/(mode|contrastThreshold|tonalOffset)/));
}
const KU = (e) => {
  let o;
  return e < 1 ? o = 5.11916 * e ** 2 : o = 4.5 * Math.log(e + 1) + 2, (o / 100).toFixed(2);
}, BC = KU, QU = ["colorSchemes", "cssVarPrefix", "shouldSkipGeneratingVar"], XU = ["palette"], ZU = [...Array(25)].map((e, o) => {
  if (o === 0)
    return;
  const i = BC(o);
  return `linear-gradient(rgba(255 255 255 / ${i}), rgba(255 255 255 / ${i}))`;
});
function JU(e, o) {
  o.forEach((i) => {
    e[i] || (e[i] = {});
  });
}
function Xe(e, o, i) {
  !e[o] && i && (e[o] = i);
}
function vv(e) {
  return !e || !e.startsWith("hsl") ? e : qV(e);
}
function Bc(e, o) {
  `${o}Channel` in e || (e[`${o}Channel`] = hv(vv(e[o]), `MUI: Can't create \`palette.${o}Channel\` because \`palette.${o}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${o}Channel\` as a string (in rgb format, e.g. "12 12 12") or undefined if you want to remove the channel token.`));
}
const $s = (e) => {
  try {
    return e();
  } catch {
  }
}, e4 = (e = "mui") => Dj(e);
function PN(e = {}, ...o) {
  var i, c, d, p, f, v;
  const {
    colorSchemes: g = {},
    cssVarPrefix: b = "mui",
    shouldSkipGeneratingVar: S = NN
  } = e, R = ue(e, QU), D = e4(b), k = Dv(x({}, R, g.light && {
    palette: (i = g.light) == null ? void 0 : i.palette
  })), {
    palette: $
  } = k, P = ue(k, XU), {
    palette: O
  } = Dv({
    palette: x({
      mode: "dark"
    }, (c = g.dark) == null ? void 0 : c.palette)
  });
  let I = x({}, P, {
    cssVarPrefix: b,
    getCssVar: D,
    colorSchemes: x({}, g, {
      light: x({}, g.light, {
        palette: $,
        opacity: x({
          inputPlaceholder: 0.42,
          inputUnderline: 0.42,
          switchTrackDisabled: 0.12,
          switchTrack: 0.38
        }, (d = g.light) == null ? void 0 : d.opacity),
        overlays: ((p = g.light) == null ? void 0 : p.overlays) || []
      }),
      dark: x({}, g.dark, {
        palette: O,
        opacity: x({
          inputPlaceholder: 0.5,
          inputUnderline: 0.7,
          switchTrackDisabled: 0.2,
          switchTrack: 0.3
        }, (f = g.dark) == null ? void 0 : f.opacity),
        overlays: ((v = g.dark) == null ? void 0 : v.overlays) || ZU
      })
    })
  });
  Object.keys(I.colorSchemes).forEach((B) => {
    const M = I.colorSchemes[B].palette, F = (Y) => {
      const H = Y.split("-"), J = H[1], W = H[2];
      return D(Y, M[J][W]);
    };
    if (B === "light" ? (Xe(M.common, "background", "#fff"), Xe(M.common, "onBackground", "#000")) : (Xe(M.common, "background", "#000"), Xe(M.common, "onBackground", "#fff")), JU(M, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), B === "light") {
      Xe(M.Alert, "errorColor", Qn(M.error.light, 0.6)), Xe(M.Alert, "infoColor", Qn(M.info.light, 0.6)), Xe(M.Alert, "successColor", Qn(M.success.light, 0.6)), Xe(M.Alert, "warningColor", Qn(M.warning.light, 0.6)), Xe(M.Alert, "errorFilledBg", F("palette-error-main")), Xe(M.Alert, "infoFilledBg", F("palette-info-main")), Xe(M.Alert, "successFilledBg", F("palette-success-main")), Xe(M.Alert, "warningFilledBg", F("palette-warning-main")), Xe(M.Alert, "errorFilledColor", $s(() => $.getContrastText(M.error.main))), Xe(M.Alert, "infoFilledColor", $s(() => $.getContrastText(M.info.main))), Xe(M.Alert, "successFilledColor", $s(() => $.getContrastText(M.success.main))), Xe(M.Alert, "warningFilledColor", $s(() => $.getContrastText(M.warning.main))), Xe(M.Alert, "errorStandardBg", Xn(M.error.light, 0.9)), Xe(M.Alert, "infoStandardBg", Xn(M.info.light, 0.9)), Xe(M.Alert, "successStandardBg", Xn(M.success.light, 0.9)), Xe(M.Alert, "warningStandardBg", Xn(M.warning.light, 0.9)), Xe(M.Alert, "errorIconColor", F("palette-error-main")), Xe(M.Alert, "infoIconColor", F("palette-info-main")), Xe(M.Alert, "successIconColor", F("palette-success-main")), Xe(M.Alert, "warningIconColor", F("palette-warning-main")), Xe(M.AppBar, "defaultBg", F("palette-grey-100")), Xe(M.Avatar, "defaultBg", F("palette-grey-400")), Xe(M.Button, "inheritContainedBg", F("palette-grey-300")), Xe(M.Button, "inheritContainedHoverBg", F("palette-grey-A100")), Xe(M.Chip, "defaultBorder", F("palette-grey-400")), Xe(M.Chip, "defaultAvatarColor", F("palette-grey-700")), Xe(M.Chip, "defaultIconColor", F("palette-grey-700")), Xe(M.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), Xe(M.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), Xe(M.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), Xe(M.LinearProgress, "primaryBg", Xn(M.primary.main, 0.62)), Xe(M.LinearProgress, "secondaryBg", Xn(M.secondary.main, 0.62)), Xe(M.LinearProgress, "errorBg", Xn(M.error.main, 0.62)), Xe(M.LinearProgress, "infoBg", Xn(M.info.main, 0.62)), Xe(M.LinearProgress, "successBg", Xn(M.success.main, 0.62)), Xe(M.LinearProgress, "warningBg", Xn(M.warning.main, 0.62)), Xe(M.Skeleton, "bg", `rgba(${F("palette-text-primaryChannel")} / 0.11)`), Xe(M.Slider, "primaryTrack", Xn(M.primary.main, 0.62)), Xe(M.Slider, "secondaryTrack", Xn(M.secondary.main, 0.62)), Xe(M.Slider, "errorTrack", Xn(M.error.main, 0.62)), Xe(M.Slider, "infoTrack", Xn(M.info.main, 0.62)), Xe(M.Slider, "successTrack", Xn(M.success.main, 0.62)), Xe(M.Slider, "warningTrack", Xn(M.warning.main, 0.62));
      const Y = Jb(M.background.default, 0.8);
      Xe(M.SnackbarContent, "bg", Y), Xe(M.SnackbarContent, "color", $s(() => $.getContrastText(Y))), Xe(M.SpeedDialAction, "fabHoverBg", Jb(M.background.paper, 0.15)), Xe(M.StepConnector, "border", F("palette-grey-400")), Xe(M.StepContent, "border", F("palette-grey-400")), Xe(M.Switch, "defaultColor", F("palette-common-white")), Xe(M.Switch, "defaultDisabledColor", F("palette-grey-100")), Xe(M.Switch, "primaryDisabledColor", Xn(M.primary.main, 0.62)), Xe(M.Switch, "secondaryDisabledColor", Xn(M.secondary.main, 0.62)), Xe(M.Switch, "errorDisabledColor", Xn(M.error.main, 0.62)), Xe(M.Switch, "infoDisabledColor", Xn(M.info.main, 0.62)), Xe(M.Switch, "successDisabledColor", Xn(M.success.main, 0.62)), Xe(M.Switch, "warningDisabledColor", Xn(M.warning.main, 0.62)), Xe(M.TableCell, "border", Xn(eC(M.divider, 1), 0.88)), Xe(M.Tooltip, "bg", eC(M.grey[700], 0.92));
    } else {
      Xe(M.Alert, "errorColor", Xn(M.error.light, 0.6)), Xe(M.Alert, "infoColor", Xn(M.info.light, 0.6)), Xe(M.Alert, "successColor", Xn(M.success.light, 0.6)), Xe(M.Alert, "warningColor", Xn(M.warning.light, 0.6)), Xe(M.Alert, "errorFilledBg", F("palette-error-dark")), Xe(M.Alert, "infoFilledBg", F("palette-info-dark")), Xe(M.Alert, "successFilledBg", F("palette-success-dark")), Xe(M.Alert, "warningFilledBg", F("palette-warning-dark")), Xe(M.Alert, "errorFilledColor", $s(() => O.getContrastText(M.error.dark))), Xe(M.Alert, "infoFilledColor", $s(() => O.getContrastText(M.info.dark))), Xe(M.Alert, "successFilledColor", $s(() => O.getContrastText(M.success.dark))), Xe(M.Alert, "warningFilledColor", $s(() => O.getContrastText(M.warning.dark))), Xe(M.Alert, "errorStandardBg", Qn(M.error.light, 0.9)), Xe(M.Alert, "infoStandardBg", Qn(M.info.light, 0.9)), Xe(M.Alert, "successStandardBg", Qn(M.success.light, 0.9)), Xe(M.Alert, "warningStandardBg", Qn(M.warning.light, 0.9)), Xe(M.Alert, "errorIconColor", F("palette-error-main")), Xe(M.Alert, "infoIconColor", F("palette-info-main")), Xe(M.Alert, "successIconColor", F("palette-success-main")), Xe(M.Alert, "warningIconColor", F("palette-warning-main")), Xe(M.AppBar, "defaultBg", F("palette-grey-900")), Xe(M.AppBar, "darkBg", F("palette-background-paper")), Xe(M.AppBar, "darkColor", F("palette-text-primary")), Xe(M.Avatar, "defaultBg", F("palette-grey-600")), Xe(M.Button, "inheritContainedBg", F("palette-grey-800")), Xe(M.Button, "inheritContainedHoverBg", F("palette-grey-700")), Xe(M.Chip, "defaultBorder", F("palette-grey-700")), Xe(M.Chip, "defaultAvatarColor", F("palette-grey-300")), Xe(M.Chip, "defaultIconColor", F("palette-grey-300")), Xe(M.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), Xe(M.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), Xe(M.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), Xe(M.LinearProgress, "primaryBg", Qn(M.primary.main, 0.5)), Xe(M.LinearProgress, "secondaryBg", Qn(M.secondary.main, 0.5)), Xe(M.LinearProgress, "errorBg", Qn(M.error.main, 0.5)), Xe(M.LinearProgress, "infoBg", Qn(M.info.main, 0.5)), Xe(M.LinearProgress, "successBg", Qn(M.success.main, 0.5)), Xe(M.LinearProgress, "warningBg", Qn(M.warning.main, 0.5)), Xe(M.Skeleton, "bg", `rgba(${F("palette-text-primaryChannel")} / 0.13)`), Xe(M.Slider, "primaryTrack", Qn(M.primary.main, 0.5)), Xe(M.Slider, "secondaryTrack", Qn(M.secondary.main, 0.5)), Xe(M.Slider, "errorTrack", Qn(M.error.main, 0.5)), Xe(M.Slider, "infoTrack", Qn(M.info.main, 0.5)), Xe(M.Slider, "successTrack", Qn(M.success.main, 0.5)), Xe(M.Slider, "warningTrack", Qn(M.warning.main, 0.5));
      const Y = Jb(M.background.default, 0.98);
      Xe(M.SnackbarContent, "bg", Y), Xe(M.SnackbarContent, "color", $s(() => O.getContrastText(Y))), Xe(M.SpeedDialAction, "fabHoverBg", Jb(M.background.paper, 0.15)), Xe(M.StepConnector, "border", F("palette-grey-600")), Xe(M.StepContent, "border", F("palette-grey-600")), Xe(M.Switch, "defaultColor", F("palette-grey-300")), Xe(M.Switch, "defaultDisabledColor", F("palette-grey-600")), Xe(M.Switch, "primaryDisabledColor", Qn(M.primary.main, 0.55)), Xe(M.Switch, "secondaryDisabledColor", Qn(M.secondary.main, 0.55)), Xe(M.Switch, "errorDisabledColor", Qn(M.error.main, 0.55)), Xe(M.Switch, "infoDisabledColor", Qn(M.info.main, 0.55)), Xe(M.Switch, "successDisabledColor", Qn(M.success.main, 0.55)), Xe(M.Switch, "warningDisabledColor", Qn(M.warning.main, 0.55)), Xe(M.TableCell, "border", Qn(eC(M.divider, 1), 0.68)), Xe(M.Tooltip, "bg", eC(M.grey[700], 0.92));
    }
    Bc(M.background, "default"), Bc(M.common, "background"), Bc(M.common, "onBackground"), Bc(M, "divider"), Object.keys(M).forEach((Y) => {
      const H = M[Y];
      H && typeof H == "object" && (H.main && Xe(M[Y], "mainChannel", hv(vv(H.main))), H.light && Xe(M[Y], "lightChannel", hv(vv(H.light))), H.dark && Xe(M[Y], "darkChannel", hv(vv(H.dark))), H.contrastText && Xe(M[Y], "contrastTextChannel", hv(vv(H.contrastText))), Y === "text" && (Bc(M[Y], "primary"), Bc(M[Y], "secondary")), Y === "action" && (H.active && Bc(M[Y], "active"), H.selected && Bc(M[Y], "selected")));
    });
  }), I = o.reduce((B, M) => qi(B, M), I);
  const _ = {
    prefix: b,
    shouldSkipGeneratingVar: S
  }, {
    vars: A,
    generateCssVars: V
  } = Lj(I, _);
  return I.vars = A, I.generateCssVars = V, I.shouldSkipGeneratingVar = S, I.unstable_sxConfig = x({}, nN, R == null ? void 0 : R.unstable_sxConfig), I.unstable_sx = function(M) {
    return JC({
      sx: M,
      theme: this
    });
  }, I;
}
const t4 = (e) => [...[...Array(24)].map((o, i) => `--${e ? `${e}-` : ""}overlays-${i + 1}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], $N = t4, n4 = PN(), {
  CssVarsProvider: o4,
  useColorScheme: r4,
  getInitColorSchemeScript: a4
} = kj({
  themeId: Gc,
  theme: n4,
  attribute: "data-mui-color-scheme",
  modeStorageKey: "mui-mode",
  colorSchemeStorageKey: "mui-color-scheme",
  defaultColorScheme: {
    light: "light",
    dark: "dark"
  },
  resolveTheme: (e) => {
    const o = x({}, e, {
      typography: rN(e.palette, e.typography)
    });
    return o.unstable_sx = function(c) {
      return JC({
        sx: c,
        theme: this
      });
    }, o;
  },
  excludeVariablesFromRoot: $N
});
function i4() {
  throw new Error(process.env.NODE_ENV !== "production" ? "MUI: The `experimental_sx` has been moved to `theme.unstable_sx`.For more details, see https://github.com/mui/material-ui/pull/35150." : Bs(20));
}
const cae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Experimental_CssVarsProvider: o4,
  StyledEngineProvider: KV,
  THEME_ID: Gc,
  ThemeProvider: MN,
  adaptV4Theme: mU,
  alpha: di,
  createMuiTheme: QV,
  createStyles: vU,
  createTheme: Dv,
  css: qc,
  darken: IC,
  decomposeColor: $l,
  duration: aN,
  easing: XV,
  emphasize: QF,
  experimentalStyled: ee,
  experimental_extendTheme: PN,
  experimental_sx: i4,
  getContrastRatio: KF,
  getInitColorSchemeScript: a4,
  getLuminance: $C,
  getOverlayAlpha: BC,
  hexToRgb: dN,
  hslToRgb: pN,
  keyframes: Qi,
  lighten: LC,
  makeStyles: YU,
  private_createMixins: ZV,
  private_createTypography: rN,
  private_excludeVariablesFromRoot: $N,
  recomposeColor: Uv,
  responsiveFontSizes: xU,
  rgbToHex: qF,
  shouldSkipGeneratingVar: NN,
  styled: ee,
  unstable_createMuiStrictModeTheme: hU,
  unstable_getUnit: iw,
  unstable_toUnitless: Nl,
  useColorScheme: r4,
  useTheme: Mn,
  useThemeProps: Ue,
  withStyles: GU,
  withTheme: qU
}, Symbol.toStringTag, { value: "Module" }));
function s4(e) {
  return We("MuiSvgIcon", e);
}
const l4 = Ge("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]), uae = l4, c4 = ["children", "className", "color", "component", "fontSize", "htmlColor", "inheritViewBox", "titleAccess", "viewBox"], u4 = (e) => {
  const {
    color: o,
    fontSize: i,
    classes: c
  } = e, d = {
    root: ["root", o !== "inherit" && `color${ce(o)}`, `fontSize${ce(i)}`]
  };
  return Ye(d, s4, c);
}, d4 = ee("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.color !== "inherit" && o[`color${ce(i.color)}`], o[`fontSize${ce(i.fontSize)}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => {
  var i, c, d, p, f, v, g, b, S, R, D, k, $;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    // the <svg> will define the property that has `currentColor`
    // e.g. heroicons uses fill="none" and stroke="currentColor"
    fill: o.hasSvgAsChild ? void 0 : "currentColor",
    flexShrink: 0,
    transition: (i = e.transitions) == null || (c = i.create) == null ? void 0 : c.call(i, "fill", {
      duration: (d = e.transitions) == null || (d = d.duration) == null ? void 0 : d.shorter
    }),
    fontSize: {
      inherit: "inherit",
      small: ((p = e.typography) == null || (f = p.pxToRem) == null ? void 0 : f.call(p, 20)) || "1.25rem",
      medium: ((v = e.typography) == null || (g = v.pxToRem) == null ? void 0 : g.call(v, 24)) || "1.5rem",
      large: ((b = e.typography) == null || (S = b.pxToRem) == null ? void 0 : S.call(b, 35)) || "2.1875rem"
    }[o.fontSize],
    // TODO v5 deprecate, v6 remove for sx
    color: (R = (D = (e.vars || e).palette) == null || (D = D[o.color]) == null ? void 0 : D.main) != null ? R : {
      action: (k = (e.vars || e).palette) == null || (k = k.action) == null ? void 0 : k.active,
      disabled: ($ = (e.vars || e).palette) == null || ($ = $.action) == null ? void 0 : $.disabled,
      inherit: void 0
    }[o.color]
  };
}), sw = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiSvgIcon"
  }), {
    children: d,
    className: p,
    color: f = "inherit",
    component: v = "svg",
    fontSize: g = "medium",
    htmlColor: b,
    inheritViewBox: S = !1,
    titleAccess: R,
    viewBox: D = "0 0 24 24"
  } = c, k = ue(c, c4), $ = /* @__PURE__ */ w.isValidElement(d) && d.type === "svg", P = x({}, c, {
    color: f,
    component: v,
    fontSize: g,
    instanceFontSize: o.fontSize,
    inheritViewBox: S,
    viewBox: D,
    hasSvgAsChild: $
  }), O = {};
  S || (O.viewBox = D);
  const I = u4(P);
  return /* @__PURE__ */ ht(d4, x({
    as: v,
    className: ve(I.root, p),
    focusable: "false",
    color: b,
    "aria-hidden": R ? void 0 : !0,
    role: R ? "img" : void 0,
    ref: i
  }, O, k, $ && d.props, {
    ownerState: P,
    children: [$ ? d.props.children : d, R ? /* @__PURE__ */ z("title", {
      children: R
    }) : null]
  }));
});
process.env.NODE_ENV !== "production" && (sw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: t.oneOfType([t.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: t.oneOfType([t.oneOf(["inherit", "large", "medium", "small"]), t.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: t.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: t.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: t.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: t.string
});
sw.muiName = "SvgIcon";
const P1 = sw;
function Cn(e, o) {
  function i(c, d) {
    return /* @__PURE__ */ z(P1, x({
      "data-testid": `${o}Icon`,
      ref: d
    }, c, {
      children: e
    }));
  }
  return process.env.NODE_ENV !== "production" && (i.displayName = `${o}Icon`), i.muiName = P1.muiName, /* @__PURE__ */ w.memo(/* @__PURE__ */ w.forwardRef(i));
}
const p4 = {
  configure: (e) => {
    process.env.NODE_ENV !== "production" && console.warn(["MUI: `ClassNameGenerator` import from `@mui/material/utils` is outdated and might cause unexpected issues.", "", "You should use `import { unstable_ClassNameGenerator } from '@mui/material/className'` instead", "", "The detail of the issue: https://github.com/mui/material-ui/issues/30011#issuecomment-1024993401", "", "The updated documentation: https://mui.com/guides/classname-generator/"].join(`
`)), JV.configure(e);
  }
}, dae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  capitalize: ce,
  createChainedFunction: AC,
  createSvgIcon: Cn,
  debounce: $f,
  deprecatedPropType: nj,
  isMuiElement: As,
  ownerDocument: Dn,
  ownerWindow: Wr,
  requirePropFactory: hN,
  setRef: Mv,
  unstable_ClassNameGenerator: p4,
  unstable_useEnhancedEffect: so,
  unstable_useId: Na,
  unsupportedProp: o0,
  useControlled: Eo,
  useEventCallback: St,
  useForkRef: cn,
  useIsFocusVisible: If
}, Symbol.toStringTag, { value: "Module" }));
var $1 = { exports: {} }, Bn = {};
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var tD;
function f4() {
  if (tD)
    return Bn;
  tD = 1;
  var e = Symbol.for("react.element"), o = Symbol.for("react.portal"), i = Symbol.for("react.fragment"), c = Symbol.for("react.strict_mode"), d = Symbol.for("react.profiler"), p = Symbol.for("react.provider"), f = Symbol.for("react.context"), v = Symbol.for("react.server_context"), g = Symbol.for("react.forward_ref"), b = Symbol.for("react.suspense"), S = Symbol.for("react.suspense_list"), R = Symbol.for("react.memo"), D = Symbol.for("react.lazy"), k = Symbol.for("react.offscreen"), $;
  $ = Symbol.for("react.module.reference");
  function P(O) {
    if (typeof O == "object" && O !== null) {
      var I = O.$$typeof;
      switch (I) {
        case e:
          switch (O = O.type, O) {
            case i:
            case d:
            case c:
            case b:
            case S:
              return O;
            default:
              switch (O = O && O.$$typeof, O) {
                case v:
                case f:
                case g:
                case D:
                case R:
                case p:
                  return O;
                default:
                  return I;
              }
          }
        case o:
          return I;
      }
    }
  }
  return Bn.ContextConsumer = f, Bn.ContextProvider = p, Bn.Element = e, Bn.ForwardRef = g, Bn.Fragment = i, Bn.Lazy = D, Bn.Memo = R, Bn.Portal = o, Bn.Profiler = d, Bn.StrictMode = c, Bn.Suspense = b, Bn.SuspenseList = S, Bn.isAsyncMode = function() {
    return !1;
  }, Bn.isConcurrentMode = function() {
    return !1;
  }, Bn.isContextConsumer = function(O) {
    return P(O) === f;
  }, Bn.isContextProvider = function(O) {
    return P(O) === p;
  }, Bn.isElement = function(O) {
    return typeof O == "object" && O !== null && O.$$typeof === e;
  }, Bn.isForwardRef = function(O) {
    return P(O) === g;
  }, Bn.isFragment = function(O) {
    return P(O) === i;
  }, Bn.isLazy = function(O) {
    return P(O) === D;
  }, Bn.isMemo = function(O) {
    return P(O) === R;
  }, Bn.isPortal = function(O) {
    return P(O) === o;
  }, Bn.isProfiler = function(O) {
    return P(O) === d;
  }, Bn.isStrictMode = function(O) {
    return P(O) === c;
  }, Bn.isSuspense = function(O) {
    return P(O) === b;
  }, Bn.isSuspenseList = function(O) {
    return P(O) === S;
  }, Bn.isValidElementType = function(O) {
    return typeof O == "string" || typeof O == "function" || O === i || O === d || O === c || O === b || O === S || O === k || typeof O == "object" && O !== null && (O.$$typeof === D || O.$$typeof === R || O.$$typeof === p || O.$$typeof === f || O.$$typeof === g || O.$$typeof === $ || O.getModuleId !== void 0);
  }, Bn.typeOf = P, Bn;
}
var zn = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var nD;
function m4() {
  return nD || (nD = 1, process.env.NODE_ENV !== "production" && function() {
    var e = Symbol.for("react.element"), o = Symbol.for("react.portal"), i = Symbol.for("react.fragment"), c = Symbol.for("react.strict_mode"), d = Symbol.for("react.profiler"), p = Symbol.for("react.provider"), f = Symbol.for("react.context"), v = Symbol.for("react.server_context"), g = Symbol.for("react.forward_ref"), b = Symbol.for("react.suspense"), S = Symbol.for("react.suspense_list"), R = Symbol.for("react.memo"), D = Symbol.for("react.lazy"), k = Symbol.for("react.offscreen"), $ = !1, P = !1, O = !1, I = !1, _ = !1, A;
    A = Symbol.for("react.module.reference");
    function V(ae) {
      return !!(typeof ae == "string" || typeof ae == "function" || ae === i || ae === d || _ || ae === c || ae === b || ae === S || I || ae === k || $ || P || O || typeof ae == "object" && ae !== null && (ae.$$typeof === D || ae.$$typeof === R || ae.$$typeof === p || ae.$$typeof === f || ae.$$typeof === g || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      ae.$$typeof === A || ae.getModuleId !== void 0));
    }
    function B(ae) {
      if (typeof ae == "object" && ae !== null) {
        var $e = ae.$$typeof;
        switch ($e) {
          case e:
            var Se = ae.type;
            switch (Se) {
              case i:
              case d:
              case c:
              case b:
              case S:
                return Se;
              default:
                var mt = Se && Se.$$typeof;
                switch (mt) {
                  case v:
                  case f:
                  case g:
                  case D:
                  case R:
                  case p:
                    return mt;
                  default:
                    return $e;
                }
            }
          case o:
            return $e;
        }
      }
    }
    var M = f, F = p, Y = e, H = g, J = i, W = D, te = R, Z = o, q = d, Q = c, re = b, ie = S, K = !1, ne = !1;
    function se(ae) {
      return K || (K = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function Fe(ae) {
      return ne || (ne = !0, console.warn("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function qe(ae) {
      return B(ae) === f;
    }
    function Me(ae) {
      return B(ae) === p;
    }
    function fe(ae) {
      return typeof ae == "object" && ae !== null && ae.$$typeof === e;
    }
    function De(ae) {
      return B(ae) === g;
    }
    function be(ae) {
      return B(ae) === i;
    }
    function Ce(ae) {
      return B(ae) === D;
    }
    function de(ae) {
      return B(ae) === R;
    }
    function Ae(ae) {
      return B(ae) === o;
    }
    function at(ae) {
      return B(ae) === d;
    }
    function Oe(ae) {
      return B(ae) === c;
    }
    function _e(ae) {
      return B(ae) === b;
    }
    function ye(ae) {
      return B(ae) === S;
    }
    zn.ContextConsumer = M, zn.ContextProvider = F, zn.Element = Y, zn.ForwardRef = H, zn.Fragment = J, zn.Lazy = W, zn.Memo = te, zn.Portal = Z, zn.Profiler = q, zn.StrictMode = Q, zn.Suspense = re, zn.SuspenseList = ie, zn.isAsyncMode = se, zn.isConcurrentMode = Fe, zn.isContextConsumer = qe, zn.isContextProvider = Me, zn.isElement = fe, zn.isForwardRef = De, zn.isFragment = be, zn.isLazy = Ce, zn.isMemo = de, zn.isPortal = Ae, zn.isProfiler = at, zn.isStrictMode = Oe, zn.isSuspense = _e, zn.isSuspenseList = ye, zn.isValidElementType = V, zn.typeOf = B;
  }()), zn;
}
process.env.NODE_ENV === "production" ? $1.exports = f4() : $1.exports = m4();
var Xi = $1.exports;
function I1(e, o) {
  return I1 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(c, d) {
    return c.__proto__ = d, c;
  }, I1(e, o);
}
function lw(e, o) {
  e.prototype = Object.create(o.prototype), e.prototype.constructor = e, I1(e, o);
}
function h4(e, o) {
  return e.classList ? !!o && e.classList.contains(o) : (" " + (e.className.baseVal || e.className) + " ").indexOf(" " + o + " ") !== -1;
}
function v4(e, o) {
  e.classList ? e.classList.add(o) : h4(e, o) || (typeof e.className == "string" ? e.className = e.className + " " + o : e.setAttribute("class", (e.className && e.className.baseVal || "") + " " + o));
}
function oD(e, o) {
  return e.replace(new RegExp("(^|\\s)" + o + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
}
function g4(e, o) {
  e.classList ? e.classList.remove(o) : typeof e.className == "string" ? e.className = oD(e.className, o) : e.setAttribute("class", oD(e.className && e.className.baseVal || "", o));
}
var L1 = { exports: {} }, Ra = {}, oC = { exports: {} }, i1 = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var rD;
function y4() {
  return rD || (rD = 1, function(e) {
    function o(K, ne) {
      var se = K.length;
      K.push(ne);
      e:
        for (; 0 < se; ) {
          var Fe = se - 1 >>> 1, qe = K[Fe];
          if (0 < d(qe, ne))
            K[Fe] = ne, K[se] = qe, se = Fe;
          else
            break e;
        }
    }
    function i(K) {
      return K.length === 0 ? null : K[0];
    }
    function c(K) {
      if (K.length === 0)
        return null;
      var ne = K[0], se = K.pop();
      if (se !== ne) {
        K[0] = se;
        e:
          for (var Fe = 0, qe = K.length, Me = qe >>> 1; Fe < Me; ) {
            var fe = 2 * (Fe + 1) - 1, De = K[fe], be = fe + 1, Ce = K[be];
            if (0 > d(De, se))
              be < qe && 0 > d(Ce, De) ? (K[Fe] = Ce, K[be] = se, Fe = be) : (K[Fe] = De, K[fe] = se, Fe = fe);
            else if (be < qe && 0 > d(Ce, se))
              K[Fe] = Ce, K[be] = se, Fe = be;
            else
              break e;
          }
      }
      return ne;
    }
    function d(K, ne) {
      var se = K.sortIndex - ne.sortIndex;
      return se !== 0 ? se : K.id - ne.id;
    }
    if (typeof performance == "object" && typeof performance.now == "function") {
      var p = performance;
      e.unstable_now = function() {
        return p.now();
      };
    } else {
      var f = Date, v = f.now();
      e.unstable_now = function() {
        return f.now() - v;
      };
    }
    var g = [], b = [], S = 1, R = null, D = 3, k = !1, $ = !1, P = !1, O = typeof setTimeout == "function" ? setTimeout : null, I = typeof clearTimeout == "function" ? clearTimeout : null, _ = typeof setImmediate < "u" ? setImmediate : null;
    typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
    function A(K) {
      for (var ne = i(b); ne !== null; ) {
        if (ne.callback === null)
          c(b);
        else if (ne.startTime <= K)
          c(b), ne.sortIndex = ne.expirationTime, o(g, ne);
        else
          break;
        ne = i(b);
      }
    }
    function V(K) {
      if (P = !1, A(K), !$)
        if (i(g) !== null)
          $ = !0, re(B);
        else {
          var ne = i(b);
          ne !== null && ie(V, ne.startTime - K);
        }
    }
    function B(K, ne) {
      $ = !1, P && (P = !1, I(Y), Y = -1), k = !0;
      var se = D;
      try {
        for (A(ne), R = i(g); R !== null && (!(R.expirationTime > ne) || K && !W()); ) {
          var Fe = R.callback;
          if (typeof Fe == "function") {
            R.callback = null, D = R.priorityLevel;
            var qe = Fe(R.expirationTime <= ne);
            ne = e.unstable_now(), typeof qe == "function" ? R.callback = qe : R === i(g) && c(g), A(ne);
          } else
            c(g);
          R = i(g);
        }
        if (R !== null)
          var Me = !0;
        else {
          var fe = i(b);
          fe !== null && ie(V, fe.startTime - ne), Me = !1;
        }
        return Me;
      } finally {
        R = null, D = se, k = !1;
      }
    }
    var M = !1, F = null, Y = -1, H = 5, J = -1;
    function W() {
      return !(e.unstable_now() - J < H);
    }
    function te() {
      if (F !== null) {
        var K = e.unstable_now();
        J = K;
        var ne = !0;
        try {
          ne = F(!0, K);
        } finally {
          ne ? Z() : (M = !1, F = null);
        }
      } else
        M = !1;
    }
    var Z;
    if (typeof _ == "function")
      Z = function() {
        _(te);
      };
    else if (typeof MessageChannel < "u") {
      var q = new MessageChannel(), Q = q.port2;
      q.port1.onmessage = te, Z = function() {
        Q.postMessage(null);
      };
    } else
      Z = function() {
        O(te, 0);
      };
    function re(K) {
      F = K, M || (M = !0, Z());
    }
    function ie(K, ne) {
      Y = O(function() {
        K(e.unstable_now());
      }, ne);
    }
    e.unstable_IdlePriority = 5, e.unstable_ImmediatePriority = 1, e.unstable_LowPriority = 4, e.unstable_NormalPriority = 3, e.unstable_Profiling = null, e.unstable_UserBlockingPriority = 2, e.unstable_cancelCallback = function(K) {
      K.callback = null;
    }, e.unstable_continueExecution = function() {
      $ || k || ($ = !0, re(B));
    }, e.unstable_forceFrameRate = function(K) {
      0 > K || 125 < K ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : H = 0 < K ? Math.floor(1e3 / K) : 5;
    }, e.unstable_getCurrentPriorityLevel = function() {
      return D;
    }, e.unstable_getFirstCallbackNode = function() {
      return i(g);
    }, e.unstable_next = function(K) {
      switch (D) {
        case 1:
        case 2:
        case 3:
          var ne = 3;
          break;
        default:
          ne = D;
      }
      var se = D;
      D = ne;
      try {
        return K();
      } finally {
        D = se;
      }
    }, e.unstable_pauseExecution = function() {
    }, e.unstable_requestPaint = function() {
    }, e.unstable_runWithPriority = function(K, ne) {
      switch (K) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          K = 3;
      }
      var se = D;
      D = K;
      try {
        return ne();
      } finally {
        D = se;
      }
    }, e.unstable_scheduleCallback = function(K, ne, se) {
      var Fe = e.unstable_now();
      switch (typeof se == "object" && se !== null ? (se = se.delay, se = typeof se == "number" && 0 < se ? Fe + se : Fe) : se = Fe, K) {
        case 1:
          var qe = -1;
          break;
        case 2:
          qe = 250;
          break;
        case 5:
          qe = 1073741823;
          break;
        case 4:
          qe = 1e4;
          break;
        default:
          qe = 5e3;
      }
      return qe = se + qe, K = { id: S++, callback: ne, priorityLevel: K, startTime: se, expirationTime: qe, sortIndex: -1 }, se > Fe ? (K.sortIndex = se, o(b, K), i(g) === null && K === i(b) && (P ? (I(Y), Y = -1) : P = !0, ie(V, se - Fe))) : (K.sortIndex = qe, o(g, K), $ || k || ($ = !0, re(B))), K;
    }, e.unstable_shouldYield = W, e.unstable_wrapCallback = function(K) {
      var ne = D;
      return function() {
        var se = D;
        D = ne;
        try {
          return K.apply(this, arguments);
        } finally {
          D = se;
        }
      };
    };
  }(i1)), i1;
}
var s1 = {};
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aD;
function b4() {
  return aD || (aD = 1, function(e) {
    process.env.NODE_ENV !== "production" && function() {
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var o = !1, i = !1, c = 5;
      function d(He, it) {
        var Ze = He.length;
        He.push(it), v(He, it, Ze);
      }
      function p(He) {
        return He.length === 0 ? null : He[0];
      }
      function f(He) {
        if (He.length === 0)
          return null;
        var it = He[0], Ze = He.pop();
        return Ze !== it && (He[0] = Ze, g(He, Ze, 0)), it;
      }
      function v(He, it, Ze) {
        for (var nt = Ze; nt > 0; ) {
          var Le = nt - 1 >>> 1, et = He[Le];
          if (b(et, it) > 0)
            He[Le] = it, He[nt] = et, nt = Le;
          else
            return;
        }
      }
      function g(He, it, Ze) {
        for (var nt = Ze, Le = He.length, et = Le >>> 1; nt < et; ) {
          var pt = (nt + 1) * 2 - 1, Dt = He[pt], Nt = pt + 1, Jt = He[Nt];
          if (b(Dt, it) < 0)
            Nt < Le && b(Jt, Dt) < 0 ? (He[nt] = Jt, He[Nt] = it, nt = Nt) : (He[nt] = Dt, He[pt] = it, nt = pt);
          else if (Nt < Le && b(Jt, it) < 0)
            He[nt] = Jt, He[Nt] = it, nt = Nt;
          else
            return;
        }
      }
      function b(He, it) {
        var Ze = He.sortIndex - it.sortIndex;
        return Ze !== 0 ? Ze : He.id - it.id;
      }
      var S = 1, R = 2, D = 3, k = 4, $ = 5;
      function P(He, it) {
      }
      var O = typeof performance == "object" && typeof performance.now == "function";
      if (O) {
        var I = performance;
        e.unstable_now = function() {
          return I.now();
        };
      } else {
        var _ = Date, A = _.now();
        e.unstable_now = function() {
          return _.now() - A;
        };
      }
      var V = 1073741823, B = -1, M = 250, F = 5e3, Y = 1e4, H = V, J = [], W = [], te = 1, Z = null, q = D, Q = !1, re = !1, ie = !1, K = typeof setTimeout == "function" ? setTimeout : null, ne = typeof clearTimeout == "function" ? clearTimeout : null, se = typeof setImmediate < "u" ? setImmediate : null;
      typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
      function Fe(He) {
        for (var it = p(W); it !== null; ) {
          if (it.callback === null)
            f(W);
          else if (it.startTime <= He)
            f(W), it.sortIndex = it.expirationTime, d(J, it);
          else
            return;
          it = p(W);
        }
      }
      function qe(He) {
        if (ie = !1, Fe(He), !re)
          if (p(J) !== null)
            re = !0, Zt(Me);
          else {
            var it = p(W);
            it !== null && Vt(qe, it.startTime - He);
          }
      }
      function Me(He, it) {
        re = !1, ie && (ie = !1, Te()), Q = !0;
        var Ze = q;
        try {
          var nt;
          if (!i)
            return fe(He, it);
        } finally {
          Z = null, q = Ze, Q = !1;
        }
      }
      function fe(He, it) {
        var Ze = it;
        for (Fe(Ze), Z = p(J); Z !== null && !o && !(Z.expirationTime > Ze && (!He || ft())); ) {
          var nt = Z.callback;
          if (typeof nt == "function") {
            Z.callback = null, q = Z.priorityLevel;
            var Le = Z.expirationTime <= Ze, et = nt(Le);
            Ze = e.unstable_now(), typeof et == "function" ? Z.callback = et : Z === p(J) && f(J), Fe(Ze);
          } else
            f(J);
          Z = p(J);
        }
        if (Z !== null)
          return !0;
        var pt = p(W);
        return pt !== null && Vt(qe, pt.startTime - Ze), !1;
      }
      function De(He, it) {
        switch (He) {
          case S:
          case R:
          case D:
          case k:
          case $:
            break;
          default:
            He = D;
        }
        var Ze = q;
        q = He;
        try {
          return it();
        } finally {
          q = Ze;
        }
      }
      function be(He) {
        var it;
        switch (q) {
          case S:
          case R:
          case D:
            it = D;
            break;
          default:
            it = q;
            break;
        }
        var Ze = q;
        q = it;
        try {
          return He();
        } finally {
          q = Ze;
        }
      }
      function Ce(He) {
        var it = q;
        return function() {
          var Ze = q;
          q = it;
          try {
            return He.apply(this, arguments);
          } finally {
            q = Ze;
          }
        };
      }
      function de(He, it, Ze) {
        var nt = e.unstable_now(), Le;
        if (typeof Ze == "object" && Ze !== null) {
          var et = Ze.delay;
          typeof et == "number" && et > 0 ? Le = nt + et : Le = nt;
        } else
          Le = nt;
        var pt;
        switch (He) {
          case S:
            pt = B;
            break;
          case R:
            pt = M;
            break;
          case $:
            pt = H;
            break;
          case k:
            pt = Y;
            break;
          case D:
          default:
            pt = F;
            break;
        }
        var Dt = Le + pt, Nt = {
          id: te++,
          callback: it,
          priorityLevel: He,
          startTime: Le,
          expirationTime: Dt,
          sortIndex: -1
        };
        return Le > nt ? (Nt.sortIndex = Le, d(W, Nt), p(J) === null && Nt === p(W) && (ie ? Te() : ie = !0, Vt(qe, Le - nt))) : (Nt.sortIndex = Dt, d(J, Nt), !re && !Q && (re = !0, Zt(Me))), Nt;
      }
      function Ae() {
      }
      function at() {
        !re && !Q && (re = !0, Zt(Me));
      }
      function Oe() {
        return p(J);
      }
      function _e(He) {
        He.callback = null;
      }
      function ye() {
        return q;
      }
      var ae = !1, $e = null, Se = -1, mt = c, Be = -1;
      function ft() {
        var He = e.unstable_now() - Be;
        return !(He < mt);
      }
      function je() {
      }
      function Ve(He) {
        if (He < 0 || He > 125) {
          console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
          return;
        }
        He > 0 ? mt = Math.floor(1e3 / He) : mt = c;
      }
      var st = function() {
        if ($e !== null) {
          var He = e.unstable_now();
          Be = He;
          var it = !0, Ze = !0;
          try {
            Ze = $e(it, He);
          } finally {
            Ze ? gt() : (ae = !1, $e = null);
          }
        } else
          ae = !1;
      }, gt;
      if (typeof se == "function")
        gt = function() {
          se(st);
        };
      else if (typeof MessageChannel < "u") {
        var Tt = new MessageChannel(), _t = Tt.port2;
        Tt.port1.onmessage = st, gt = function() {
          _t.postMessage(null);
        };
      } else
        gt = function() {
          K(st, 0);
        };
      function Zt(He) {
        $e = He, ae || (ae = !0, gt());
      }
      function Vt(He, it) {
        Se = K(function() {
          He(e.unstable_now());
        }, it);
      }
      function Te() {
        ne(Se), Se = -1;
      }
      var xe = je, ot = null;
      e.unstable_IdlePriority = $, e.unstable_ImmediatePriority = S, e.unstable_LowPriority = k, e.unstable_NormalPriority = D, e.unstable_Profiling = ot, e.unstable_UserBlockingPriority = R, e.unstable_cancelCallback = _e, e.unstable_continueExecution = at, e.unstable_forceFrameRate = Ve, e.unstable_getCurrentPriorityLevel = ye, e.unstable_getFirstCallbackNode = Oe, e.unstable_next = be, e.unstable_pauseExecution = Ae, e.unstable_requestPaint = xe, e.unstable_runWithPriority = De, e.unstable_scheduleCallback = de, e.unstable_shouldYield = ft, e.unstable_wrapCallback = Ce, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    }();
  }(s1)), s1;
}
var iD;
function IN() {
  return iD || (iD = 1, process.env.NODE_ENV === "production" ? oC.exports = y4() : oC.exports = b4()), oC.exports;
}
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var sD;
function C4() {
  if (sD)
    return Ra;
  sD = 1;
  var e = ka, o = IN();
  function i(a) {
    for (var s = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, m = 1; m < arguments.length; m++)
      s += "&args[]=" + encodeURIComponent(arguments[m]);
    return "Minified React error #" + a + "; visit " + s + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
  }
  var c = /* @__PURE__ */ new Set(), d = {};
  function p(a, s) {
    f(a, s), f(a + "Capture", s);
  }
  function f(a, s) {
    for (d[a] = s, a = 0; a < s.length; a++)
      c.add(s[a]);
  }
  var v = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u"), g = Object.prototype.hasOwnProperty, b = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, S = {}, R = {};
  function D(a) {
    return g.call(R, a) ? !0 : g.call(S, a) ? !1 : b.test(a) ? R[a] = !0 : (S[a] = !0, !1);
  }
  function k(a, s, m, y) {
    if (m !== null && m.type === 0)
      return !1;
    switch (typeof s) {
      case "function":
      case "symbol":
        return !0;
      case "boolean":
        return y ? !1 : m !== null ? !m.acceptsBooleans : (a = a.toLowerCase().slice(0, 5), a !== "data-" && a !== "aria-");
      default:
        return !1;
    }
  }
  function $(a, s, m, y) {
    if (s === null || typeof s > "u" || k(a, s, m, y))
      return !0;
    if (y)
      return !1;
    if (m !== null)
      switch (m.type) {
        case 3:
          return !s;
        case 4:
          return s === !1;
        case 5:
          return isNaN(s);
        case 6:
          return isNaN(s) || 1 > s;
      }
    return !1;
  }
  function P(a, s, m, y, T, N, U) {
    this.acceptsBooleans = s === 2 || s === 3 || s === 4, this.attributeName = y, this.attributeNamespace = T, this.mustUseProperty = m, this.propertyName = a, this.type = s, this.sanitizeURL = N, this.removeEmptyString = U;
  }
  var O = {};
  "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a) {
    O[a] = new P(a, 0, !1, a, null, !1, !1);
  }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a) {
    var s = a[0];
    O[s] = new P(s, 1, !1, a[1], null, !1, !1);
  }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a) {
    O[a] = new P(a, 2, !1, a.toLowerCase(), null, !1, !1);
  }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a) {
    O[a] = new P(a, 2, !1, a, null, !1, !1);
  }), "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a) {
    O[a] = new P(a, 3, !1, a.toLowerCase(), null, !1, !1);
  }), ["checked", "multiple", "muted", "selected"].forEach(function(a) {
    O[a] = new P(a, 3, !0, a, null, !1, !1);
  }), ["capture", "download"].forEach(function(a) {
    O[a] = new P(a, 4, !1, a, null, !1, !1);
  }), ["cols", "rows", "size", "span"].forEach(function(a) {
    O[a] = new P(a, 6, !1, a, null, !1, !1);
  }), ["rowSpan", "start"].forEach(function(a) {
    O[a] = new P(a, 5, !1, a.toLowerCase(), null, !1, !1);
  });
  var I = /[\-:]([a-z])/g;
  function _(a) {
    return a[1].toUpperCase();
  }
  "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a) {
    var s = a.replace(
      I,
      _
    );
    O[s] = new P(s, 1, !1, a, null, !1, !1);
  }), "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a) {
    var s = a.replace(I, _);
    O[s] = new P(s, 1, !1, a, "http://www.w3.org/1999/xlink", !1, !1);
  }), ["xml:base", "xml:lang", "xml:space"].forEach(function(a) {
    var s = a.replace(I, _);
    O[s] = new P(s, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1, !1);
  }), ["tabIndex", "crossOrigin"].forEach(function(a) {
    O[a] = new P(a, 1, !1, a.toLowerCase(), null, !1, !1);
  }), O.xlinkHref = new P("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1), ["src", "href", "action", "formAction"].forEach(function(a) {
    O[a] = new P(a, 1, !1, a.toLowerCase(), null, !0, !0);
  });
  function A(a, s, m, y) {
    var T = O.hasOwnProperty(s) ? O[s] : null;
    (T !== null ? T.type !== 0 : y || !(2 < s.length) || s[0] !== "o" && s[0] !== "O" || s[1] !== "n" && s[1] !== "N") && ($(s, m, T, y) && (m = null), y || T === null ? D(s) && (m === null ? a.removeAttribute(s) : a.setAttribute(s, "" + m)) : T.mustUseProperty ? a[T.propertyName] = m === null ? T.type === 3 ? !1 : "" : m : (s = T.attributeName, y = T.attributeNamespace, m === null ? a.removeAttribute(s) : (T = T.type, m = T === 3 || T === 4 && m === !0 ? "" : "" + m, y ? a.setAttributeNS(y, s, m) : a.setAttribute(s, m))));
  }
  var V = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, B = Symbol.for("react.element"), M = Symbol.for("react.portal"), F = Symbol.for("react.fragment"), Y = Symbol.for("react.strict_mode"), H = Symbol.for("react.profiler"), J = Symbol.for("react.provider"), W = Symbol.for("react.context"), te = Symbol.for("react.forward_ref"), Z = Symbol.for("react.suspense"), q = Symbol.for("react.suspense_list"), Q = Symbol.for("react.memo"), re = Symbol.for("react.lazy"), ie = Symbol.for("react.offscreen"), K = Symbol.iterator;
  function ne(a) {
    return a === null || typeof a != "object" ? null : (a = K && a[K] || a["@@iterator"], typeof a == "function" ? a : null);
  }
  var se = Object.assign, Fe;
  function qe(a) {
    if (Fe === void 0)
      try {
        throw Error();
      } catch (m) {
        var s = m.stack.trim().match(/\n( *(at )?)/);
        Fe = s && s[1] || "";
      }
    return `
` + Fe + a;
  }
  var Me = !1;
  function fe(a, s) {
    if (!a || Me)
      return "";
    Me = !0;
    var m = Error.prepareStackTrace;
    Error.prepareStackTrace = void 0;
    try {
      if (s)
        if (s = function() {
          throw Error();
        }, Object.defineProperty(s.prototype, "props", { set: function() {
          throw Error();
        } }), typeof Reflect == "object" && Reflect.construct) {
          try {
            Reflect.construct(s, []);
          } catch (Ie) {
            var y = Ie;
          }
          Reflect.construct(a, [], s);
        } else {
          try {
            s.call();
          } catch (Ie) {
            y = Ie;
          }
          a.call(s.prototype);
        }
      else {
        try {
          throw Error();
        } catch (Ie) {
          y = Ie;
        }
        a();
      }
    } catch (Ie) {
      if (Ie && y && typeof Ie.stack == "string") {
        for (var T = Ie.stack.split(`
`), N = y.stack.split(`
`), U = T.length - 1, oe = N.length - 1; 1 <= U && 0 <= oe && T[U] !== N[oe]; )
          oe--;
        for (; 1 <= U && 0 <= oe; U--, oe--)
          if (T[U] !== N[oe]) {
            if (U !== 1 || oe !== 1)
              do
                if (U--, oe--, 0 > oe || T[U] !== N[oe]) {
                  var le = `
` + T[U].replace(" at new ", " at ");
                  return a.displayName && le.includes("<anonymous>") && (le = le.replace("<anonymous>", a.displayName)), le;
                }
              while (1 <= U && 0 <= oe);
            break;
          }
      }
    } finally {
      Me = !1, Error.prepareStackTrace = m;
    }
    return (a = a ? a.displayName || a.name : "") ? qe(a) : "";
  }
  function De(a) {
    switch (a.tag) {
      case 5:
        return qe(a.type);
      case 16:
        return qe("Lazy");
      case 13:
        return qe("Suspense");
      case 19:
        return qe("SuspenseList");
      case 0:
      case 2:
      case 15:
        return a = fe(a.type, !1), a;
      case 11:
        return a = fe(a.type.render, !1), a;
      case 1:
        return a = fe(a.type, !0), a;
      default:
        return "";
    }
  }
  function be(a) {
    if (a == null)
      return null;
    if (typeof a == "function")
      return a.displayName || a.name || null;
    if (typeof a == "string")
      return a;
    switch (a) {
      case F:
        return "Fragment";
      case M:
        return "Portal";
      case H:
        return "Profiler";
      case Y:
        return "StrictMode";
      case Z:
        return "Suspense";
      case q:
        return "SuspenseList";
    }
    if (typeof a == "object")
      switch (a.$$typeof) {
        case W:
          return (a.displayName || "Context") + ".Consumer";
        case J:
          return (a._context.displayName || "Context") + ".Provider";
        case te:
          var s = a.render;
          return a = a.displayName, a || (a = s.displayName || s.name || "", a = a !== "" ? "ForwardRef(" + a + ")" : "ForwardRef"), a;
        case Q:
          return s = a.displayName || null, s !== null ? s : be(a.type) || "Memo";
        case re:
          s = a._payload, a = a._init;
          try {
            return be(a(s));
          } catch {
          }
      }
    return null;
  }
  function Ce(a) {
    var s = a.type;
    switch (a.tag) {
      case 24:
        return "Cache";
      case 9:
        return (s.displayName || "Context") + ".Consumer";
      case 10:
        return (s._context.displayName || "Context") + ".Provider";
      case 18:
        return "DehydratedFragment";
      case 11:
        return a = s.render, a = a.displayName || a.name || "", s.displayName || (a !== "" ? "ForwardRef(" + a + ")" : "ForwardRef");
      case 7:
        return "Fragment";
      case 5:
        return s;
      case 4:
        return "Portal";
      case 3:
        return "Root";
      case 6:
        return "Text";
      case 16:
        return be(s);
      case 8:
        return s === Y ? "StrictMode" : "Mode";
      case 22:
        return "Offscreen";
      case 12:
        return "Profiler";
      case 21:
        return "Scope";
      case 13:
        return "Suspense";
      case 19:
        return "SuspenseList";
      case 25:
        return "TracingMarker";
      case 1:
      case 0:
      case 17:
      case 2:
      case 14:
      case 15:
        if (typeof s == "function")
          return s.displayName || s.name || null;
        if (typeof s == "string")
          return s;
    }
    return null;
  }
  function de(a) {
    switch (typeof a) {
      case "boolean":
      case "number":
      case "string":
      case "undefined":
        return a;
      case "object":
        return a;
      default:
        return "";
    }
  }
  function Ae(a) {
    var s = a.type;
    return (a = a.nodeName) && a.toLowerCase() === "input" && (s === "checkbox" || s === "radio");
  }
  function at(a) {
    var s = Ae(a) ? "checked" : "value", m = Object.getOwnPropertyDescriptor(a.constructor.prototype, s), y = "" + a[s];
    if (!a.hasOwnProperty(s) && typeof m < "u" && typeof m.get == "function" && typeof m.set == "function") {
      var T = m.get, N = m.set;
      return Object.defineProperty(a, s, { configurable: !0, get: function() {
        return T.call(this);
      }, set: function(U) {
        y = "" + U, N.call(this, U);
      } }), Object.defineProperty(a, s, { enumerable: m.enumerable }), { getValue: function() {
        return y;
      }, setValue: function(U) {
        y = "" + U;
      }, stopTracking: function() {
        a._valueTracker = null, delete a[s];
      } };
    }
  }
  function Oe(a) {
    a._valueTracker || (a._valueTracker = at(a));
  }
  function _e(a) {
    if (!a)
      return !1;
    var s = a._valueTracker;
    if (!s)
      return !0;
    var m = s.getValue(), y = "";
    return a && (y = Ae(a) ? a.checked ? "true" : "false" : a.value), a = y, a !== m ? (s.setValue(a), !0) : !1;
  }
  function ye(a) {
    if (a = a || (typeof document < "u" ? document : void 0), typeof a > "u")
      return null;
    try {
      return a.activeElement || a.body;
    } catch {
      return a.body;
    }
  }
  function ae(a, s) {
    var m = s.checked;
    return se({}, s, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: m ?? a._wrapperState.initialChecked });
  }
  function $e(a, s) {
    var m = s.defaultValue == null ? "" : s.defaultValue, y = s.checked != null ? s.checked : s.defaultChecked;
    m = de(s.value != null ? s.value : m), a._wrapperState = { initialChecked: y, initialValue: m, controlled: s.type === "checkbox" || s.type === "radio" ? s.checked != null : s.value != null };
  }
  function Se(a, s) {
    s = s.checked, s != null && A(a, "checked", s, !1);
  }
  function mt(a, s) {
    Se(a, s);
    var m = de(s.value), y = s.type;
    if (m != null)
      y === "number" ? (m === 0 && a.value === "" || a.value != m) && (a.value = "" + m) : a.value !== "" + m && (a.value = "" + m);
    else if (y === "submit" || y === "reset") {
      a.removeAttribute("value");
      return;
    }
    s.hasOwnProperty("value") ? ft(a, s.type, m) : s.hasOwnProperty("defaultValue") && ft(a, s.type, de(s.defaultValue)), s.checked == null && s.defaultChecked != null && (a.defaultChecked = !!s.defaultChecked);
  }
  function Be(a, s, m) {
    if (s.hasOwnProperty("value") || s.hasOwnProperty("defaultValue")) {
      var y = s.type;
      if (!(y !== "submit" && y !== "reset" || s.value !== void 0 && s.value !== null))
        return;
      s = "" + a._wrapperState.initialValue, m || s === a.value || (a.value = s), a.defaultValue = s;
    }
    m = a.name, m !== "" && (a.name = ""), a.defaultChecked = !!a._wrapperState.initialChecked, m !== "" && (a.name = m);
  }
  function ft(a, s, m) {
    (s !== "number" || ye(a.ownerDocument) !== a) && (m == null ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + m && (a.defaultValue = "" + m));
  }
  var je = Array.isArray;
  function Ve(a, s, m, y) {
    if (a = a.options, s) {
      s = {};
      for (var T = 0; T < m.length; T++)
        s["$" + m[T]] = !0;
      for (m = 0; m < a.length; m++)
        T = s.hasOwnProperty("$" + a[m].value), a[m].selected !== T && (a[m].selected = T), T && y && (a[m].defaultSelected = !0);
    } else {
      for (m = "" + de(m), s = null, T = 0; T < a.length; T++) {
        if (a[T].value === m) {
          a[T].selected = !0, y && (a[T].defaultSelected = !0);
          return;
        }
        s !== null || a[T].disabled || (s = a[T]);
      }
      s !== null && (s.selected = !0);
    }
  }
  function st(a, s) {
    if (s.dangerouslySetInnerHTML != null)
      throw Error(i(91));
    return se({}, s, { value: void 0, defaultValue: void 0, children: "" + a._wrapperState.initialValue });
  }
  function gt(a, s) {
    var m = s.value;
    if (m == null) {
      if (m = s.children, s = s.defaultValue, m != null) {
        if (s != null)
          throw Error(i(92));
        if (je(m)) {
          if (1 < m.length)
            throw Error(i(93));
          m = m[0];
        }
        s = m;
      }
      s == null && (s = ""), m = s;
    }
    a._wrapperState = { initialValue: de(m) };
  }
  function Tt(a, s) {
    var m = de(s.value), y = de(s.defaultValue);
    m != null && (m = "" + m, m !== a.value && (a.value = m), s.defaultValue == null && a.defaultValue !== m && (a.defaultValue = m)), y != null && (a.defaultValue = "" + y);
  }
  function _t(a) {
    var s = a.textContent;
    s === a._wrapperState.initialValue && s !== "" && s !== null && (a.value = s);
  }
  function Zt(a) {
    switch (a) {
      case "svg":
        return "http://www.w3.org/2000/svg";
      case "math":
        return "http://www.w3.org/1998/Math/MathML";
      default:
        return "http://www.w3.org/1999/xhtml";
    }
  }
  function Vt(a, s) {
    return a == null || a === "http://www.w3.org/1999/xhtml" ? Zt(s) : a === "http://www.w3.org/2000/svg" && s === "foreignObject" ? "http://www.w3.org/1999/xhtml" : a;
  }
  var Te, xe = function(a) {
    return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(s, m, y, T) {
      MSApp.execUnsafeLocalFunction(function() {
        return a(s, m, y, T);
      });
    } : a;
  }(function(a, s) {
    if (a.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in a)
      a.innerHTML = s;
    else {
      for (Te = Te || document.createElement("div"), Te.innerHTML = "<svg>" + s.valueOf().toString() + "</svg>", s = Te.firstChild; a.firstChild; )
        a.removeChild(a.firstChild);
      for (; s.firstChild; )
        a.appendChild(s.firstChild);
    }
  });
  function ot(a, s) {
    if (s) {
      var m = a.firstChild;
      if (m && m === a.lastChild && m.nodeType === 3) {
        m.nodeValue = s;
        return;
      }
    }
    a.textContent = s;
  }
  var He = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0
  }, it = ["Webkit", "ms", "Moz", "O"];
  Object.keys(He).forEach(function(a) {
    it.forEach(function(s) {
      s = s + a.charAt(0).toUpperCase() + a.substring(1), He[s] = He[a];
    });
  });
  function Ze(a, s, m) {
    return s == null || typeof s == "boolean" || s === "" ? "" : m || typeof s != "number" || s === 0 || He.hasOwnProperty(a) && He[a] ? ("" + s).trim() : s + "px";
  }
  function nt(a, s) {
    a = a.style;
    for (var m in s)
      if (s.hasOwnProperty(m)) {
        var y = m.indexOf("--") === 0, T = Ze(m, s[m], y);
        m === "float" && (m = "cssFloat"), y ? a.setProperty(m, T) : a[m] = T;
      }
  }
  var Le = se({ menuitem: !0 }, { area: !0, base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 });
  function et(a, s) {
    if (s) {
      if (Le[a] && (s.children != null || s.dangerouslySetInnerHTML != null))
        throw Error(i(137, a));
      if (s.dangerouslySetInnerHTML != null) {
        if (s.children != null)
          throw Error(i(60));
        if (typeof s.dangerouslySetInnerHTML != "object" || !("__html" in s.dangerouslySetInnerHTML))
          throw Error(i(61));
      }
      if (s.style != null && typeof s.style != "object")
        throw Error(i(62));
    }
  }
  function pt(a, s) {
    if (a.indexOf("-") === -1)
      return typeof s.is == "string";
    switch (a) {
      case "annotation-xml":
      case "color-profile":
      case "font-face":
      case "font-face-src":
      case "font-face-uri":
      case "font-face-format":
      case "font-face-name":
      case "missing-glyph":
        return !1;
      default:
        return !0;
    }
  }
  var Dt = null;
  function Nt(a) {
    return a = a.target || a.srcElement || window, a.correspondingUseElement && (a = a.correspondingUseElement), a.nodeType === 3 ? a.parentNode : a;
  }
  var Jt = null, Yt = null, en = null;
  function Nn(a) {
    if (a = Cu(a)) {
      if (typeof Jt != "function")
        throw Error(i(280));
      var s = a.stateNode;
      s && (s = Ft(s), Jt(a.stateNode, a.type, s));
    }
  }
  function nn(a) {
    Yt ? en ? en.push(a) : en = [a] : Yt = a;
  }
  function Un() {
    if (Yt) {
      var a = Yt, s = en;
      if (en = Yt = null, Nn(a), s)
        for (a = 0; a < s.length; a++)
          Nn(s[a]);
    }
  }
  function Ro(a, s) {
    return a(s);
  }
  function Oo() {
  }
  var Yr = !1;
  function _o(a, s, m) {
    if (Yr)
      return a(s, m);
    Yr = !0;
    try {
      return Ro(a, s, m);
    } finally {
      Yr = !1, (Yt !== null || en !== null) && (Oo(), Un());
    }
  }
  function Pn(a, s) {
    var m = a.stateNode;
    if (m === null)
      return null;
    var y = Ft(m);
    if (y === null)
      return null;
    m = y[s];
    e:
      switch (s) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
          (y = !y.disabled) || (a = a.type, y = !(a === "button" || a === "input" || a === "select" || a === "textarea")), a = !y;
          break e;
        default:
          a = !1;
      }
    if (a)
      return null;
    if (m && typeof m != "function")
      throw Error(i(231, s, typeof m));
    return m;
  }
  var Tn = !1;
  if (v)
    try {
      var Hn = {};
      Object.defineProperty(Hn, "passive", { get: function() {
        Tn = !0;
      } }), window.addEventListener("test", Hn, Hn), window.removeEventListener("test", Hn, Hn);
    } catch {
      Tn = !1;
    }
  function Zn(a, s, m, y, T, N, U, oe, le) {
    var Ie = Array.prototype.slice.call(arguments, 3);
    try {
      s.apply(m, Ie);
    } catch (ct) {
      this.onError(ct);
    }
  }
  var no = !1, Xo = null, Bo = !1, zo = null, Dr = { onError: function(a) {
    no = !0, Xo = a;
  } };
  function Vo(a, s, m, y, T, N, U, oe, le) {
    no = !1, Xo = null, Zn.apply(Dr, arguments);
  }
  function go(a, s, m, y, T, N, U, oe, le) {
    if (Vo.apply(this, arguments), no) {
      if (no) {
        var Ie = Xo;
        no = !1, Xo = null;
      } else
        throw Error(i(198));
      Bo || (Bo = !0, zo = Ie);
    }
  }
  function ze(a) {
    var s = a, m = a;
    if (a.alternate)
      for (; s.return; )
        s = s.return;
    else {
      a = s;
      do
        s = a, s.flags & 4098 && (m = s.return), a = s.return;
      while (a);
    }
    return s.tag === 3 ? m : null;
  }
  function ge(a) {
    if (a.tag === 13) {
      var s = a.memoizedState;
      if (s === null && (a = a.alternate, a !== null && (s = a.memoizedState)), s !== null)
        return s.dehydrated;
    }
    return null;
  }
  function rt(a) {
    if (ze(a) !== a)
      throw Error(i(188));
  }
  function bt(a) {
    var s = a.alternate;
    if (!s) {
      if (s = ze(a), s === null)
        throw Error(i(188));
      return s !== a ? null : a;
    }
    for (var m = a, y = s; ; ) {
      var T = m.return;
      if (T === null)
        break;
      var N = T.alternate;
      if (N === null) {
        if (y = T.return, y !== null) {
          m = y;
          continue;
        }
        break;
      }
      if (T.child === N.child) {
        for (N = T.child; N; ) {
          if (N === m)
            return rt(T), a;
          if (N === y)
            return rt(T), s;
          N = N.sibling;
        }
        throw Error(i(188));
      }
      if (m.return !== y.return)
        m = T, y = N;
      else {
        for (var U = !1, oe = T.child; oe; ) {
          if (oe === m) {
            U = !0, m = T, y = N;
            break;
          }
          if (oe === y) {
            U = !0, y = T, m = N;
            break;
          }
          oe = oe.sibling;
        }
        if (!U) {
          for (oe = N.child; oe; ) {
            if (oe === m) {
              U = !0, m = N, y = T;
              break;
            }
            if (oe === y) {
              U = !0, y = N, m = T;
              break;
            }
            oe = oe.sibling;
          }
          if (!U)
            throw Error(i(189));
        }
      }
      if (m.alternate !== y)
        throw Error(i(190));
    }
    if (m.tag !== 3)
      throw Error(i(188));
    return m.stateNode.current === m ? a : s;
  }
  function sn(a) {
    return a = bt(a), a !== null ? yt(a) : null;
  }
  function yt(a) {
    if (a.tag === 5 || a.tag === 6)
      return a;
    for (a = a.child; a !== null; ) {
      var s = yt(a);
      if (s !== null)
        return s;
      a = a.sibling;
    }
    return null;
  }
  var dn = o.unstable_scheduleCallback, cr = o.unstable_cancelCallback, zl = o.unstable_shouldYield, T0 = o.unstable_requestPaint, lo = o.unstable_now, w0 = o.unstable_getCurrentPriorityLevel, gi = o.unstable_ImmediatePriority, pn = o.unstable_UserBlockingPriority, Ji = o.unstable_NormalPriority, eg = o.unstable_LowPriority, Vf = o.unstable_IdlePriority, Jc = null, Pa = null;
  function tg(a) {
    if (Pa && typeof Pa.onCommitFiberRoot == "function")
      try {
        Pa.onCommitFiberRoot(Jc, a, void 0, (a.current.flags & 128) === 128);
      } catch {
      }
  }
  var ia = Math.clz32 ? Math.clz32 : E0, ng = Math.log, og = Math.LN2;
  function E0(a) {
    return a >>>= 0, a === 0 ? 32 : 31 - (ng(a) / og | 0) | 0;
  }
  var xd = 64, Vl = 4194304;
  function Fs(a) {
    switch (a & -a) {
      case 1:
        return 1;
      case 2:
        return 2;
      case 4:
        return 4;
      case 8:
        return 8;
      case 16:
        return 16;
      case 32:
        return 32;
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return a & 4194240;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return a & 130023424;
      case 134217728:
        return 134217728;
      case 268435456:
        return 268435456;
      case 536870912:
        return 536870912;
      case 1073741824:
        return 1073741824;
      default:
        return a;
    }
  }
  function $a(a, s) {
    var m = a.pendingLanes;
    if (m === 0)
      return 0;
    var y = 0, T = a.suspendedLanes, N = a.pingedLanes, U = m & 268435455;
    if (U !== 0) {
      var oe = U & ~T;
      oe !== 0 ? y = Fs(oe) : (N &= U, N !== 0 && (y = Fs(N)));
    } else
      U = m & ~T, U !== 0 ? y = Fs(U) : N !== 0 && (y = Fs(N));
    if (y === 0)
      return 0;
    if (s !== 0 && s !== y && !(s & T) && (T = y & -y, N = s & -s, T >= N || T === 16 && (N & 4194240) !== 0))
      return s;
    if (y & 4 && (y |= m & 16), s = a.entangledLanes, s !== 0)
      for (a = a.entanglements, s &= y; 0 < s; )
        m = 31 - ia(s), T = 1 << m, y |= a[m], s &= ~T;
    return y;
  }
  function Ff(a, s) {
    switch (a) {
      case 1:
      case 2:
      case 4:
        return s + 250;
      case 8:
      case 16:
      case 32:
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return s + 5e3;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return -1;
      case 134217728:
      case 268435456:
      case 536870912:
      case 1073741824:
        return -1;
      default:
        return -1;
    }
  }
  function Sd(a, s) {
    for (var m = a.suspendedLanes, y = a.pingedLanes, T = a.expirationTimes, N = a.pendingLanes; 0 < N; ) {
      var U = 31 - ia(N), oe = 1 << U, le = T[U];
      le === -1 ? (!(oe & m) || oe & y) && (T[U] = Ff(oe, s)) : le <= s && (a.expiredLanes |= oe), N &= ~oe;
    }
  }
  function jf(a) {
    return a = a.pendingLanes & -1073741825, a !== 0 ? a : a & 1073741824 ? 1073741824 : 0;
  }
  function Td() {
    var a = xd;
    return xd <<= 1, !(xd & 4194240) && (xd = 64), a;
  }
  function Uf(a) {
    for (var s = [], m = 0; 31 > m; m++)
      s.push(a);
    return s;
  }
  function js(a, s, m) {
    a.pendingLanes |= s, s !== 536870912 && (a.suspendedLanes = 0, a.pingedLanes = 0), a = a.eventTimes, s = 31 - ia(s), a[s] = m;
  }
  function R0(a, s) {
    var m = a.pendingLanes & ~s;
    a.pendingLanes = s, a.suspendedLanes = 0, a.pingedLanes = 0, a.expiredLanes &= s, a.mutableReadLanes &= s, a.entangledLanes &= s, s = a.entanglements;
    var y = a.eventTimes;
    for (a = a.expirationTimes; 0 < m; ) {
      var T = 31 - ia(m), N = 1 << T;
      s[T] = 0, y[T] = -1, a[T] = -1, m &= ~N;
    }
  }
  function eu(a, s) {
    var m = a.entangledLanes |= s;
    for (a = a.entanglements; m; ) {
      var y = 31 - ia(m), T = 1 << y;
      T & s | a[y] & s && (a[y] |= s), m &= ~T;
    }
  }
  var kn = 0;
  function Hf(a) {
    return a &= -a, 1 < a ? 4 < a ? a & 268435455 ? 16 : 536870912 : 4 : 1;
  }
  var rg, wd, Vn, ag, Wf, on = !1, tu = [], yo = null, sa = null, la = null, nu = /* @__PURE__ */ new Map(), ko = /* @__PURE__ */ new Map(), $n = [], O0 = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
  function Ia(a, s) {
    switch (a) {
      case "focusin":
      case "focusout":
        yo = null;
        break;
      case "dragenter":
      case "dragleave":
        sa = null;
        break;
      case "mouseover":
      case "mouseout":
        la = null;
        break;
      case "pointerover":
      case "pointerout":
        nu.delete(s.pointerId);
        break;
      case "gotpointercapture":
      case "lostpointercapture":
        ko.delete(s.pointerId);
    }
  }
  function ur(a, s, m, y, T, N) {
    return a === null || a.nativeEvent !== N ? (a = { blockedOn: s, domEventName: m, eventSystemFlags: y, nativeEvent: N, targetContainers: [T] }, s !== null && (s = Cu(s), s !== null && wd(s)), a) : (a.eventSystemFlags |= y, s = a.targetContainers, T !== null && s.indexOf(T) === -1 && s.push(T), a);
  }
  function es(a, s, m, y, T) {
    switch (s) {
      case "focusin":
        return yo = ur(yo, a, s, m, y, T), !0;
      case "dragenter":
        return sa = ur(sa, a, s, m, y, T), !0;
      case "mouseover":
        return la = ur(la, a, s, m, y, T), !0;
      case "pointerover":
        var N = T.pointerId;
        return nu.set(N, ur(nu.get(N) || null, a, s, m, y, T)), !0;
      case "gotpointercapture":
        return N = T.pointerId, ko.set(N, ur(ko.get(N) || null, a, s, m, y, T)), !0;
    }
    return !1;
  }
  function ig(a) {
    var s = ua(a.target);
    if (s !== null) {
      var m = ze(s);
      if (m !== null) {
        if (s = m.tag, s === 13) {
          if (s = ge(m), s !== null) {
            a.blockedOn = s, Wf(a.priority, function() {
              Vn(m);
            });
            return;
          }
        } else if (s === 3 && m.stateNode.current.memoizedState.isDehydrated) {
          a.blockedOn = m.tag === 3 ? m.stateNode.containerInfo : null;
          return;
        }
      }
    }
    a.blockedOn = null;
  }
  function Fl(a) {
    if (a.blockedOn !== null)
      return !1;
    for (var s = a.targetContainers; 0 < s.length; ) {
      var m = Od(a.domEventName, a.eventSystemFlags, s[0], a.nativeEvent);
      if (m === null) {
        m = a.nativeEvent;
        var y = new m.constructor(m.type, m);
        Dt = y, m.target.dispatchEvent(y), Dt = null;
      } else
        return s = Cu(m), s !== null && wd(s), a.blockedOn = m, !1;
      s.shift();
    }
    return !0;
  }
  function Yf(a, s, m) {
    Fl(a) && m.delete(s);
  }
  function sg() {
    on = !1, yo !== null && Fl(yo) && (yo = null), sa !== null && Fl(sa) && (sa = null), la !== null && Fl(la) && (la = null), nu.forEach(Yf), ko.forEach(Yf);
  }
  function ou(a, s) {
    a.blockedOn === s && (a.blockedOn = null, on || (on = !0, o.unstable_scheduleCallback(o.unstable_NormalPriority, sg)));
  }
  function ru(a) {
    function s(T) {
      return ou(T, a);
    }
    if (0 < tu.length) {
      ou(tu[0], a);
      for (var m = 1; m < tu.length; m++) {
        var y = tu[m];
        y.blockedOn === a && (y.blockedOn = null);
      }
    }
    for (yo !== null && ou(yo, a), sa !== null && ou(sa, a), la !== null && ou(la, a), nu.forEach(s), ko.forEach(s), m = 0; m < $n.length; m++)
      y = $n[m], y.blockedOn === a && (y.blockedOn = null);
    for (; 0 < $n.length && (m = $n[0], m.blockedOn === null); )
      ig(m), m.blockedOn === null && $n.shift();
  }
  var jl = V.ReactCurrentBatchConfig, Us = !0;
  function lg(a, s, m, y) {
    var T = kn, N = jl.transition;
    jl.transition = null;
    try {
      kn = 1, Rd(a, s, m, y);
    } finally {
      kn = T, jl.transition = N;
    }
  }
  function Ed(a, s, m, y) {
    var T = kn, N = jl.transition;
    jl.transition = null;
    try {
      kn = 4, Rd(a, s, m, y);
    } finally {
      kn = T, jl.transition = N;
    }
  }
  function Rd(a, s, m, y) {
    if (Us) {
      var T = Od(a, s, m, y);
      if (T === null)
        zd(a, s, y, au, m), Ia(a, y);
      else if (es(T, a, s, m, y))
        y.stopPropagation();
      else if (Ia(a, y), s & 4 && -1 < O0.indexOf(a)) {
        for (; T !== null; ) {
          var N = Cu(T);
          if (N !== null && rg(N), N = Od(a, s, m, y), N === null && zd(a, s, y, au, m), N === T)
            break;
          T = N;
        }
        T !== null && y.stopPropagation();
      } else
        zd(a, s, y, null, m);
    }
  }
  var au = null;
  function Od(a, s, m, y) {
    if (au = null, a = Nt(y), a = ua(a), a !== null)
      if (s = ze(a), s === null)
        a = null;
      else if (m = s.tag, m === 13) {
        if (a = ge(s), a !== null)
          return a;
        a = null;
      } else if (m === 3) {
        if (s.stateNode.current.memoizedState.isDehydrated)
          return s.tag === 3 ? s.stateNode.containerInfo : null;
        a = null;
      } else
        s !== a && (a = null);
    return au = a, null;
  }
  function Gf(a) {
    switch (a) {
      case "cancel":
      case "click":
      case "close":
      case "contextmenu":
      case "copy":
      case "cut":
      case "auxclick":
      case "dblclick":
      case "dragend":
      case "dragstart":
      case "drop":
      case "focusin":
      case "focusout":
      case "input":
      case "invalid":
      case "keydown":
      case "keypress":
      case "keyup":
      case "mousedown":
      case "mouseup":
      case "paste":
      case "pause":
      case "play":
      case "pointercancel":
      case "pointerdown":
      case "pointerup":
      case "ratechange":
      case "reset":
      case "resize":
      case "seeked":
      case "submit":
      case "touchcancel":
      case "touchend":
      case "touchstart":
      case "volumechange":
      case "change":
      case "selectionchange":
      case "textInput":
      case "compositionstart":
      case "compositionend":
      case "compositionupdate":
      case "beforeblur":
      case "afterblur":
      case "beforeinput":
      case "blur":
      case "fullscreenchange":
      case "focus":
      case "hashchange":
      case "popstate":
      case "select":
      case "selectstart":
        return 1;
      case "drag":
      case "dragenter":
      case "dragexit":
      case "dragleave":
      case "dragover":
      case "mousemove":
      case "mouseout":
      case "mouseover":
      case "pointermove":
      case "pointerout":
      case "pointerover":
      case "scroll":
      case "toggle":
      case "touchmove":
      case "wheel":
      case "mouseenter":
      case "mouseleave":
      case "pointerenter":
      case "pointerleave":
        return 4;
      case "message":
        switch (w0()) {
          case gi:
            return 1;
          case pn:
            return 4;
          case Ji:
          case eg:
            return 16;
          case Vf:
            return 536870912;
          default:
            return 16;
        }
      default:
        return 16;
    }
  }
  var yi = null, iu = null, su = null;
  function qf() {
    if (su)
      return su;
    var a, s = iu, m = s.length, y, T = "value" in yi ? yi.value : yi.textContent, N = T.length;
    for (a = 0; a < m && s[a] === T[a]; a++)
      ;
    var U = m - a;
    for (y = 1; y <= U && s[m - y] === T[N - y]; y++)
      ;
    return su = T.slice(a, 1 < y ? 1 - y : void 0);
  }
  function Ul(a) {
    var s = a.keyCode;
    return "charCode" in a ? (a = a.charCode, a === 0 && s === 13 && (a = 13)) : a = s, a === 10 && (a = 13), 32 <= a || a === 13 ? a : 0;
  }
  function lu() {
    return !0;
  }
  function cg() {
    return !1;
  }
  function Gr(a) {
    function s(m, y, T, N, U) {
      this._reactName = m, this._targetInst = T, this.type = y, this.nativeEvent = N, this.target = U, this.currentTarget = null;
      for (var oe in a)
        a.hasOwnProperty(oe) && (m = a[oe], this[oe] = m ? m(N) : N[oe]);
      return this.isDefaultPrevented = (N.defaultPrevented != null ? N.defaultPrevented : N.returnValue === !1) ? lu : cg, this.isPropagationStopped = cg, this;
    }
    return se(s.prototype, { preventDefault: function() {
      this.defaultPrevented = !0;
      var m = this.nativeEvent;
      m && (m.preventDefault ? m.preventDefault() : typeof m.returnValue != "unknown" && (m.returnValue = !1), this.isDefaultPrevented = lu);
    }, stopPropagation: function() {
      var m = this.nativeEvent;
      m && (m.stopPropagation ? m.stopPropagation() : typeof m.cancelBubble != "unknown" && (m.cancelBubble = !0), this.isPropagationStopped = lu);
    }, persist: function() {
    }, isPersistent: lu }), s;
  }
  var ts = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(a) {
    return a.timeStamp || Date.now();
  }, defaultPrevented: 0, isTrusted: 0 }, kd = Gr(ts), Hl = se({}, ts, { view: 0, detail: 0 }), ug = Gr(Hl), Dd, Kf, cu, Fo = se({}, Hl, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: Jf, button: 0, buttons: 0, relatedTarget: function(a) {
    return a.relatedTarget === void 0 ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
  }, movementX: function(a) {
    return "movementX" in a ? a.movementX : (a !== cu && (cu && a.type === "mousemove" ? (Dd = a.screenX - cu.screenX, Kf = a.screenY - cu.screenY) : Kf = Dd = 0, cu = a), Dd);
  }, movementY: function(a) {
    return "movementY" in a ? a.movementY : Kf;
  } }), Md = Gr(Fo), dg = se({}, Fo, { dataTransfer: 0 }), pg = Gr(dg), k0 = se({}, Hl, { relatedTarget: 0 }), ns = Gr(k0), Qf = se({}, ts, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), fg = Gr(Qf), D0 = se({}, ts, { clipboardData: function(a) {
    return "clipboardData" in a ? a.clipboardData : window.clipboardData;
  } }), M0 = Gr(D0), N0 = se({}, ts, { data: 0 }), Xf = Gr(N0), Zf = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified"
  }, mg = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta"
  }, hg = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
  function vg(a) {
    var s = this.nativeEvent;
    return s.getModifierState ? s.getModifierState(a) : (a = hg[a]) ? !!s[a] : !1;
  }
  function Jf() {
    return vg;
  }
  var bi = se({}, Hl, { key: function(a) {
    if (a.key) {
      var s = Zf[a.key] || a.key;
      if (s !== "Unidentified")
        return s;
    }
    return a.type === "keypress" ? (a = Ul(a), a === 13 ? "Enter" : String.fromCharCode(a)) : a.type === "keydown" || a.type === "keyup" ? mg[a.keyCode] || "Unidentified" : "";
  }, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: Jf, charCode: function(a) {
    return a.type === "keypress" ? Ul(a) : 0;
  }, keyCode: function(a) {
    return a.type === "keydown" || a.type === "keyup" ? a.keyCode : 0;
  }, which: function(a) {
    return a.type === "keypress" ? Ul(a) : a.type === "keydown" || a.type === "keyup" ? a.keyCode : 0;
  } }), P0 = Gr(bi), em = se({}, Fo, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Nd = Gr(em), tm = se({}, Hl, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: Jf }), $0 = Gr(tm), Pd = se({}, ts, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), gg = Gr(Pd), Mr = se({}, Fo, {
    deltaX: function(a) {
      return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
    },
    deltaY: function(a) {
      return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
    },
    deltaZ: 0,
    deltaMode: 0
  }), Ci = Gr(Mr), bo = [9, 13, 27, 32], La = v && "CompositionEvent" in window, Hs = null;
  v && "documentMode" in document && (Hs = document.documentMode);
  var $d = v && "TextEvent" in window && !Hs, yg = v && (!La || Hs && 8 < Hs && 11 >= Hs), Wl = String.fromCharCode(32), bg = !1;
  function Cg(a, s) {
    switch (a) {
      case "keyup":
        return bo.indexOf(s.keyCode) !== -1;
      case "keydown":
        return s.keyCode !== 229;
      case "keypress":
      case "mousedown":
      case "focusout":
        return !0;
      default:
        return !1;
    }
  }
  function Id(a) {
    return a = a.detail, typeof a == "object" && "data" in a ? a.data : null;
  }
  var Yl = !1;
  function I0(a, s) {
    switch (a) {
      case "compositionend":
        return Id(s);
      case "keypress":
        return s.which !== 32 ? null : (bg = !0, Wl);
      case "textInput":
        return a = s.data, a === Wl && bg ? null : a;
      default:
        return null;
    }
  }
  function L0(a, s) {
    if (Yl)
      return a === "compositionend" || !La && Cg(a, s) ? (a = qf(), su = iu = yi = null, Yl = !1, a) : null;
    switch (a) {
      case "paste":
        return null;
      case "keypress":
        if (!(s.ctrlKey || s.altKey || s.metaKey) || s.ctrlKey && s.altKey) {
          if (s.char && 1 < s.char.length)
            return s.char;
          if (s.which)
            return String.fromCharCode(s.which);
        }
        return null;
      case "compositionend":
        return yg && s.locale !== "ko" ? null : s.data;
      default:
        return null;
    }
  }
  var xg = { color: !0, date: !0, datetime: !0, "datetime-local": !0, email: !0, month: !0, number: !0, password: !0, range: !0, search: !0, tel: !0, text: !0, time: !0, url: !0, week: !0 };
  function Sg(a) {
    var s = a && a.nodeName && a.nodeName.toLowerCase();
    return s === "input" ? !!xg[a.type] : s === "textarea";
  }
  function Tg(a, s, m, y) {
    nn(y), s = gu(s, "onChange"), 0 < s.length && (m = new kd("onChange", "change", null, m, y), a.push({ event: m, listeners: s }));
  }
  var uu = null, Gl = null;
  function ql(a) {
    Bd(a, 0);
  }
  function Kl(a) {
    var s = Xl(a);
    if (_e(s))
      return a;
  }
  function wg(a, s) {
    if (a === "change")
      return s;
  }
  var nm = !1;
  if (v) {
    var om;
    if (v) {
      var rm = "oninput" in document;
      if (!rm) {
        var Eg = document.createElement("div");
        Eg.setAttribute("oninput", "return;"), rm = typeof Eg.oninput == "function";
      }
      om = rm;
    } else
      om = !1;
    nm = om && (!document.documentMode || 9 < document.documentMode);
  }
  function Rg() {
    uu && (uu.detachEvent("onpropertychange", Og), Gl = uu = null);
  }
  function Og(a) {
    if (a.propertyName === "value" && Kl(Gl)) {
      var s = [];
      Tg(s, Gl, a, Nt(a)), _o(ql, s);
    }
  }
  function A0(a, s, m) {
    a === "focusin" ? (Rg(), uu = s, Gl = m, uu.attachEvent("onpropertychange", Og)) : a === "focusout" && Rg();
  }
  function _0(a) {
    if (a === "selectionchange" || a === "keyup" || a === "keydown")
      return Kl(Gl);
  }
  function B0(a, s) {
    if (a === "click")
      return Kl(s);
  }
  function kg(a, s) {
    if (a === "input" || a === "change")
      return Kl(s);
  }
  function z0(a, s) {
    return a === s && (a !== 0 || 1 / a === 1 / s) || a !== a && s !== s;
  }
  var ca = typeof Object.is == "function" ? Object.is : z0;
  function du(a, s) {
    if (ca(a, s))
      return !0;
    if (typeof a != "object" || a === null || typeof s != "object" || s === null)
      return !1;
    var m = Object.keys(a), y = Object.keys(s);
    if (m.length !== y.length)
      return !1;
    for (y = 0; y < m.length; y++) {
      var T = m[y];
      if (!g.call(s, T) || !ca(a[T], s[T]))
        return !1;
    }
    return !0;
  }
  function Dg(a) {
    for (; a && a.firstChild; )
      a = a.firstChild;
    return a;
  }
  function Mg(a, s) {
    var m = Dg(a);
    a = 0;
    for (var y; m; ) {
      if (m.nodeType === 3) {
        if (y = a + m.textContent.length, a <= s && y >= s)
          return { node: m, offset: s - a };
        a = y;
      }
      e: {
        for (; m; ) {
          if (m.nextSibling) {
            m = m.nextSibling;
            break e;
          }
          m = m.parentNode;
        }
        m = void 0;
      }
      m = Dg(m);
    }
  }
  function Ng(a, s) {
    return a && s ? a === s ? !0 : a && a.nodeType === 3 ? !1 : s && s.nodeType === 3 ? Ng(a, s.parentNode) : "contains" in a ? a.contains(s) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(s) & 16) : !1 : !1;
  }
  function Ld() {
    for (var a = window, s = ye(); s instanceof a.HTMLIFrameElement; ) {
      try {
        var m = typeof s.contentWindow.location.href == "string";
      } catch {
        m = !1;
      }
      if (m)
        a = s.contentWindow;
      else
        break;
      s = ye(a.document);
    }
    return s;
  }
  function xi(a) {
    var s = a && a.nodeName && a.nodeName.toLowerCase();
    return s && (s === "input" && (a.type === "text" || a.type === "search" || a.type === "tel" || a.type === "url" || a.type === "password") || s === "textarea" || a.contentEditable === "true");
  }
  function Ad(a) {
    var s = Ld(), m = a.focusedElem, y = a.selectionRange;
    if (s !== m && m && m.ownerDocument && Ng(m.ownerDocument.documentElement, m)) {
      if (y !== null && xi(m)) {
        if (s = y.start, a = y.end, a === void 0 && (a = s), "selectionStart" in m)
          m.selectionStart = s, m.selectionEnd = Math.min(a, m.value.length);
        else if (a = (s = m.ownerDocument || document) && s.defaultView || window, a.getSelection) {
          a = a.getSelection();
          var T = m.textContent.length, N = Math.min(y.start, T);
          y = y.end === void 0 ? N : Math.min(y.end, T), !a.extend && N > y && (T = y, y = N, N = T), T = Mg(m, N);
          var U = Mg(
            m,
            y
          );
          T && U && (a.rangeCount !== 1 || a.anchorNode !== T.node || a.anchorOffset !== T.offset || a.focusNode !== U.node || a.focusOffset !== U.offset) && (s = s.createRange(), s.setStart(T.node, T.offset), a.removeAllRanges(), N > y ? (a.addRange(s), a.extend(U.node, U.offset)) : (s.setEnd(U.node, U.offset), a.addRange(s)));
        }
      }
      for (s = [], a = m; a = a.parentNode; )
        a.nodeType === 1 && s.push({ element: a, left: a.scrollLeft, top: a.scrollTop });
      for (typeof m.focus == "function" && m.focus(), m = 0; m < s.length; m++)
        a = s[m], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;
    }
  }
  var Pg = v && "documentMode" in document && 11 >= document.documentMode, Aa = null, am = null, pu = null, im = !1;
  function $g(a, s, m) {
    var y = m.window === m ? m.document : m.nodeType === 9 ? m : m.ownerDocument;
    im || Aa == null || Aa !== ye(y) || (y = Aa, "selectionStart" in y && xi(y) ? y = { start: y.selectionStart, end: y.selectionEnd } : (y = (y.ownerDocument && y.ownerDocument.defaultView || window).getSelection(), y = { anchorNode: y.anchorNode, anchorOffset: y.anchorOffset, focusNode: y.focusNode, focusOffset: y.focusOffset }), pu && du(pu, y) || (pu = y, y = gu(am, "onSelect"), 0 < y.length && (s = new kd("onSelect", "select", null, s, m), a.push({ event: s, listeners: y }), s.target = Aa)));
  }
  function _d(a, s) {
    var m = {};
    return m[a.toLowerCase()] = s.toLowerCase(), m["Webkit" + a] = "webkit" + s, m["Moz" + a] = "moz" + s, m;
  }
  var Ws = { animationend: _d("Animation", "AnimationEnd"), animationiteration: _d("Animation", "AnimationIteration"), animationstart: _d("Animation", "AnimationStart"), transitionend: _d("Transition", "TransitionEnd") }, sm = {}, lm = {};
  v && (lm = document.createElement("div").style, "AnimationEvent" in window || (delete Ws.animationend.animation, delete Ws.animationiteration.animation, delete Ws.animationstart.animation), "TransitionEvent" in window || delete Ws.transitionend.transition);
  function jo(a) {
    if (sm[a])
      return sm[a];
    if (!Ws[a])
      return a;
    var s = Ws[a], m;
    for (m in s)
      if (s.hasOwnProperty(m) && m in lm)
        return sm[a] = s[m];
    return a;
  }
  var cm = jo("animationend"), Ig = jo("animationiteration"), Lg = jo("animationstart"), Ag = jo("transitionend"), _g = /* @__PURE__ */ new Map(), Bg = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
  function Si(a, s) {
    _g.set(a, s), p(s, [a]);
  }
  for (var fu = 0; fu < Bg.length; fu++) {
    var Ys = Bg[fu], V0 = Ys.toLowerCase(), mu = Ys[0].toUpperCase() + Ys.slice(1);
    Si(V0, "on" + mu);
  }
  Si(cm, "onAnimationEnd"), Si(Ig, "onAnimationIteration"), Si(Lg, "onAnimationStart"), Si("dblclick", "onDoubleClick"), Si("focusin", "onFocus"), Si("focusout", "onBlur"), Si(Ag, "onTransitionEnd"), f("onMouseEnter", ["mouseout", "mouseover"]), f("onMouseLeave", ["mouseout", "mouseover"]), f("onPointerEnter", ["pointerout", "pointerover"]), f("onPointerLeave", ["pointerout", "pointerover"]), p("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")), p("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")), p("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), p("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")), p("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")), p("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
  var hu = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), F0 = new Set("cancel close invalid load scroll toggle".split(" ").concat(hu));
  function zg(a, s, m) {
    var y = a.type || "unknown-event";
    a.currentTarget = m, go(y, s, void 0, a), a.currentTarget = null;
  }
  function Bd(a, s) {
    s = (s & 4) !== 0;
    for (var m = 0; m < a.length; m++) {
      var y = a[m], T = y.event;
      y = y.listeners;
      e: {
        var N = void 0;
        if (s)
          for (var U = y.length - 1; 0 <= U; U--) {
            var oe = y[U], le = oe.instance, Ie = oe.currentTarget;
            if (oe = oe.listener, le !== N && T.isPropagationStopped())
              break e;
            zg(T, oe, Ie), N = le;
          }
        else
          for (U = 0; U < y.length; U++) {
            if (oe = y[U], le = oe.instance, Ie = oe.currentTarget, oe = oe.listener, le !== N && T.isPropagationStopped())
              break e;
            zg(T, oe, Ie), N = le;
          }
      }
    }
    if (Bo)
      throw a = zo, Bo = !1, zo = null, a;
  }
  function Fn(a, s) {
    var m = s[vm];
    m === void 0 && (m = s[vm] = /* @__PURE__ */ new Set());
    var y = a + "__bubble";
    m.has(y) || (Vg(s, a, 2, !1), m.add(y));
  }
  function os(a, s, m) {
    var y = 0;
    s && (y |= 4), Vg(m, a, y, s);
  }
  var Ti = "_reactListening" + Math.random().toString(36).slice(2);
  function Ql(a) {
    if (!a[Ti]) {
      a[Ti] = !0, c.forEach(function(m) {
        m !== "selectionchange" && (F0.has(m) || os(m, !1, a), os(m, !0, a));
      });
      var s = a.nodeType === 9 ? a : a.ownerDocument;
      s === null || s[Ti] || (s[Ti] = !0, os("selectionchange", !1, s));
    }
  }
  function Vg(a, s, m, y) {
    switch (Gf(s)) {
      case 1:
        var T = lg;
        break;
      case 4:
        T = Ed;
        break;
      default:
        T = Rd;
    }
    m = T.bind(null, s, m, a), T = void 0, !Tn || s !== "touchstart" && s !== "touchmove" && s !== "wheel" || (T = !0), y ? T !== void 0 ? a.addEventListener(s, m, { capture: !0, passive: T }) : a.addEventListener(s, m, !0) : T !== void 0 ? a.addEventListener(s, m, { passive: T }) : a.addEventListener(s, m, !1);
  }
  function zd(a, s, m, y, T) {
    var N = y;
    if (!(s & 1) && !(s & 2) && y !== null)
      e:
        for (; ; ) {
          if (y === null)
            return;
          var U = y.tag;
          if (U === 3 || U === 4) {
            var oe = y.stateNode.containerInfo;
            if (oe === T || oe.nodeType === 8 && oe.parentNode === T)
              break;
            if (U === 4)
              for (U = y.return; U !== null; ) {
                var le = U.tag;
                if ((le === 3 || le === 4) && (le = U.stateNode.containerInfo, le === T || le.nodeType === 8 && le.parentNode === T))
                  return;
                U = U.return;
              }
            for (; oe !== null; ) {
              if (U = ua(oe), U === null)
                return;
              if (le = U.tag, le === 5 || le === 6) {
                y = N = U;
                continue e;
              }
              oe = oe.parentNode;
            }
          }
          y = y.return;
        }
    _o(function() {
      var Ie = N, ct = Nt(m), ut = [];
      e: {
        var lt = _g.get(a);
        if (lt !== void 0) {
          var Et = kd, Pt = a;
          switch (a) {
            case "keypress":
              if (Ul(m) === 0)
                break e;
            case "keydown":
            case "keyup":
              Et = P0;
              break;
            case "focusin":
              Pt = "focus", Et = ns;
              break;
            case "focusout":
              Pt = "blur", Et = ns;
              break;
            case "beforeblur":
            case "afterblur":
              Et = ns;
              break;
            case "click":
              if (m.button === 2)
                break e;
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
              Et = Md;
              break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
              Et = pg;
              break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
              Et = $0;
              break;
            case cm:
            case Ig:
            case Lg:
              Et = fg;
              break;
            case Ag:
              Et = gg;
              break;
            case "scroll":
              Et = ug;
              break;
            case "wheel":
              Et = Ci;
              break;
            case "copy":
            case "cut":
            case "paste":
              Et = M0;
              break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
              Et = Nd;
          }
          var Lt = (s & 4) !== 0, ho = !Lt && a === "scroll", we = Lt ? lt !== null ? lt + "Capture" : null : lt;
          Lt = [];
          for (var me = Ie, ke; me !== null; ) {
            ke = me;
            var vt = ke.stateNode;
            if (ke.tag === 5 && vt !== null && (ke = vt, we !== null && (vt = Pn(me, we), vt != null && Lt.push(vu(me, vt, ke)))), ho)
              break;
            me = me.return;
          }
          0 < Lt.length && (lt = new Et(lt, Pt, null, m, ct), ut.push({ event: lt, listeners: Lt }));
        }
      }
      if (!(s & 7)) {
        e: {
          if (lt = a === "mouseover" || a === "pointerover", Et = a === "mouseout" || a === "pointerout", lt && m !== Dt && (Pt = m.relatedTarget || m.fromElement) && (ua(Pt) || Pt[wi]))
            break e;
          if ((Et || lt) && (lt = ct.window === ct ? ct : (lt = ct.ownerDocument) ? lt.defaultView || lt.parentWindow : window, Et ? (Pt = m.relatedTarget || m.toElement, Et = Ie, Pt = Pt ? ua(Pt) : null, Pt !== null && (ho = ze(Pt), Pt !== ho || Pt.tag !== 5 && Pt.tag !== 6) && (Pt = null)) : (Et = null, Pt = Ie), Et !== Pt)) {
            if (Lt = Md, vt = "onMouseLeave", we = "onMouseEnter", me = "mouse", (a === "pointerout" || a === "pointerover") && (Lt = Nd, vt = "onPointerLeave", we = "onPointerEnter", me = "pointer"), ho = Et == null ? lt : Xl(Et), ke = Pt == null ? lt : Xl(Pt), lt = new Lt(vt, me + "leave", Et, m, ct), lt.target = ho, lt.relatedTarget = ke, vt = null, ua(ct) === Ie && (Lt = new Lt(we, me + "enter", Pt, m, ct), Lt.target = ke, Lt.relatedTarget = ho, vt = Lt), ho = vt, Et && Pt)
              t: {
                for (Lt = Et, we = Pt, me = 0, ke = Lt; ke; ke = Gs(ke))
                  me++;
                for (ke = 0, vt = we; vt; vt = Gs(vt))
                  ke++;
                for (; 0 < me - ke; )
                  Lt = Gs(Lt), me--;
                for (; 0 < ke - me; )
                  we = Gs(we), ke--;
                for (; me--; ) {
                  if (Lt === we || we !== null && Lt === we.alternate)
                    break t;
                  Lt = Gs(Lt), we = Gs(we);
                }
                Lt = null;
              }
            else
              Lt = null;
            Et !== null && um(ut, lt, Et, Lt, !1), Pt !== null && ho !== null && um(ut, ho, Pt, Lt, !0);
          }
        }
        e: {
          if (lt = Ie ? Xl(Ie) : window, Et = lt.nodeName && lt.nodeName.toLowerCase(), Et === "select" || Et === "input" && lt.type === "file")
            var At = wg;
          else if (Sg(lt))
            if (nm)
              At = kg;
            else {
              At = _0;
              var $t = A0;
            }
          else
            (Et = lt.nodeName) && Et.toLowerCase() === "input" && (lt.type === "checkbox" || lt.type === "radio") && (At = B0);
          if (At && (At = At(a, Ie))) {
            Tg(ut, At, m, ct);
            break e;
          }
          $t && $t(a, lt, Ie), a === "focusout" && ($t = lt._wrapperState) && $t.controlled && lt.type === "number" && ft(lt, "number", lt.value);
        }
        switch ($t = Ie ? Xl(Ie) : window, a) {
          case "focusin":
            (Sg($t) || $t.contentEditable === "true") && (Aa = $t, am = Ie, pu = null);
            break;
          case "focusout":
            pu = am = Aa = null;
            break;
          case "mousedown":
            im = !0;
            break;
          case "contextmenu":
          case "mouseup":
          case "dragend":
            im = !1, $g(ut, m, ct);
            break;
          case "selectionchange":
            if (Pg)
              break;
          case "keydown":
          case "keyup":
            $g(ut, m, ct);
        }
        var zt;
        if (La)
          e: {
            switch (a) {
              case "compositionstart":
                var Qt = "onCompositionStart";
                break e;
              case "compositionend":
                Qt = "onCompositionEnd";
                break e;
              case "compositionupdate":
                Qt = "onCompositionUpdate";
                break e;
            }
            Qt = void 0;
          }
        else
          Yl ? Cg(a, m) && (Qt = "onCompositionEnd") : a === "keydown" && m.keyCode === 229 && (Qt = "onCompositionStart");
        Qt && (yg && m.locale !== "ko" && (Yl || Qt !== "onCompositionStart" ? Qt === "onCompositionEnd" && Yl && (zt = qf()) : (yi = ct, iu = "value" in yi ? yi.value : yi.textContent, Yl = !0)), $t = gu(Ie, Qt), 0 < $t.length && (Qt = new Xf(Qt, a, null, m, ct), ut.push({ event: Qt, listeners: $t }), zt ? Qt.data = zt : (zt = Id(m), zt !== null && (Qt.data = zt)))), (zt = $d ? I0(a, m) : L0(a, m)) && (Ie = gu(Ie, "onBeforeInput"), 0 < Ie.length && (ct = new Xf("onBeforeInput", "beforeinput", null, m, ct), ut.push({ event: ct, listeners: Ie }), ct.data = zt));
      }
      Bd(ut, s);
    });
  }
  function vu(a, s, m) {
    return { instance: a, listener: s, currentTarget: m };
  }
  function gu(a, s) {
    for (var m = s + "Capture", y = []; a !== null; ) {
      var T = a, N = T.stateNode;
      T.tag === 5 && N !== null && (T = N, N = Pn(a, m), N != null && y.unshift(vu(a, N, T)), N = Pn(a, s), N != null && y.push(vu(a, N, T))), a = a.return;
    }
    return y;
  }
  function Gs(a) {
    if (a === null)
      return null;
    do
      a = a.return;
    while (a && a.tag !== 5);
    return a || null;
  }
  function um(a, s, m, y, T) {
    for (var N = s._reactName, U = []; m !== null && m !== y; ) {
      var oe = m, le = oe.alternate, Ie = oe.stateNode;
      if (le !== null && le === y)
        break;
      oe.tag === 5 && Ie !== null && (oe = Ie, T ? (le = Pn(m, N), le != null && U.unshift(vu(m, le, oe))) : T || (le = Pn(m, N), le != null && U.push(vu(m, le, oe)))), m = m.return;
    }
    U.length !== 0 && a.push({ event: s, listeners: U });
  }
  var dm = /\r\n?/g, j0 = /\u0000|\uFFFD/g;
  function pm(a) {
    return (typeof a == "string" ? a : "" + a).replace(dm, `
`).replace(j0, "");
  }
  function Vd(a, s, m) {
    if (s = pm(s), pm(a) !== s && m)
      throw Error(i(425));
  }
  function Fd() {
  }
  var fm = null, qs = null;
  function yu(a, s) {
    return a === "textarea" || a === "noscript" || typeof s.children == "string" || typeof s.children == "number" || typeof s.dangerouslySetInnerHTML == "object" && s.dangerouslySetInnerHTML !== null && s.dangerouslySetInnerHTML.__html != null;
  }
  var Ks = typeof setTimeout == "function" ? setTimeout : void 0, Fg = typeof clearTimeout == "function" ? clearTimeout : void 0, mm = typeof Promise == "function" ? Promise : void 0, hm = typeof queueMicrotask == "function" ? queueMicrotask : typeof mm < "u" ? function(a) {
    return mm.resolve(null).then(a).catch(U0);
  } : Ks;
  function U0(a) {
    setTimeout(function() {
      throw a;
    });
  }
  function rs(a, s) {
    var m = s, y = 0;
    do {
      var T = m.nextSibling;
      if (a.removeChild(m), T && T.nodeType === 8)
        if (m = T.data, m === "/$") {
          if (y === 0) {
            a.removeChild(T), ru(s);
            return;
          }
          y--;
        } else
          m !== "$" && m !== "$?" && m !== "$!" || y++;
      m = T;
    } while (m);
    ru(s);
  }
  function _a(a) {
    for (; a != null; a = a.nextSibling) {
      var s = a.nodeType;
      if (s === 1 || s === 3)
        break;
      if (s === 8) {
        if (s = a.data, s === "$" || s === "$!" || s === "$?")
          break;
        if (s === "/$")
          return null;
      }
    }
    return a;
  }
  function bu(a) {
    a = a.previousSibling;
    for (var s = 0; a; ) {
      if (a.nodeType === 8) {
        var m = a.data;
        if (m === "$" || m === "$!" || m === "$?") {
          if (s === 0)
            return a;
          s--;
        } else
          m === "/$" && s++;
      }
      a = a.previousSibling;
    }
    return null;
  }
  var as = Math.random().toString(36).slice(2), Ga = "__reactFiber$" + as, Qs = "__reactProps$" + as, wi = "__reactContainer$" + as, vm = "__reactEvents$" + as, H0 = "__reactListeners$" + as, gm = "__reactHandles$" + as;
  function ua(a) {
    var s = a[Ga];
    if (s)
      return s;
    for (var m = a.parentNode; m; ) {
      if (s = m[wi] || m[Ga]) {
        if (m = s.alternate, s.child !== null || m !== null && m.child !== null)
          for (a = bu(a); a !== null; ) {
            if (m = a[Ga])
              return m;
            a = bu(a);
          }
        return s;
      }
      a = m, m = a.parentNode;
    }
    return null;
  }
  function Cu(a) {
    return a = a[Ga] || a[wi], !a || a.tag !== 5 && a.tag !== 6 && a.tag !== 13 && a.tag !== 3 ? null : a;
  }
  function Xl(a) {
    if (a.tag === 5 || a.tag === 6)
      return a.stateNode;
    throw Error(i(33));
  }
  function Ft(a) {
    return a[Qs] || null;
  }
  var is = [], Wn = -1;
  function rn(a) {
    return { current: a };
  }
  function wn(a) {
    0 > Wn || (a.current = is[Wn], is[Wn] = null, Wn--);
  }
  function En(a, s) {
    Wn++, is[Wn] = a.current, a.current = s;
  }
  var qa = {}, Kt = rn(qa), co = rn(!1), Nr = qa;
  function da(a, s) {
    var m = a.type.contextTypes;
    if (!m)
      return qa;
    var y = a.stateNode;
    if (y && y.__reactInternalMemoizedUnmaskedChildContext === s)
      return y.__reactInternalMemoizedMaskedChildContext;
    var T = {}, N;
    for (N in m)
      T[N] = s[N];
    return y && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = s, a.__reactInternalMemoizedMaskedChildContext = T), T;
  }
  function Jn(a) {
    return a = a.childContextTypes, a != null;
  }
  function pa() {
    wn(co), wn(Kt);
  }
  function ss(a, s, m) {
    if (Kt.current !== qa)
      throw Error(i(168));
    En(Kt, s), En(co, m);
  }
  function xu(a, s, m) {
    var y = a.stateNode;
    if (s = s.childContextTypes, typeof y.getChildContext != "function")
      return m;
    y = y.getChildContext();
    for (var T in y)
      if (!(T in s))
        throw Error(i(108, Ce(a) || "Unknown", T));
    return se({}, m, y);
  }
  function jd(a) {
    return a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || qa, Nr = Kt.current, En(Kt, a), En(co, co.current), !0;
  }
  function jg(a, s, m) {
    var y = a.stateNode;
    if (!y)
      throw Error(i(169));
    m ? (a = xu(a, s, Nr), y.__reactInternalMemoizedMergedChildContext = a, wn(co), wn(Kt), En(Kt, a)) : wn(co), En(co, m);
  }
  var qr = null, Uo = !1, Su = !1;
  function ym(a) {
    qr === null ? qr = [a] : qr.push(a);
  }
  function bm(a) {
    Uo = !0, ym(a);
  }
  function Pr() {
    if (!Su && qr !== null) {
      Su = !0;
      var a = 0, s = kn;
      try {
        var m = qr;
        for (kn = 1; a < m.length; a++) {
          var y = m[a];
          do
            y = y(!0);
          while (y !== null);
        }
        qr = null, Uo = !1;
      } catch (T) {
        throw qr !== null && (qr = qr.slice(a + 1)), dn(gi, Pr), T;
      } finally {
        kn = s, Su = !1;
      }
    }
    return null;
  }
  var ls = [], $r = 0, Xs = null, Zl = 0, Ir = [], dr = 0, fa = null, Zo = 1, Ei = "";
  function Kr(a, s) {
    ls[$r++] = Zl, ls[$r++] = Xs, Xs = a, Zl = s;
  }
  function Cm(a, s, m) {
    Ir[dr++] = Zo, Ir[dr++] = Ei, Ir[dr++] = fa, fa = a;
    var y = Zo;
    a = Ei;
    var T = 32 - ia(y) - 1;
    y &= ~(1 << T), m += 1;
    var N = 32 - ia(s) + T;
    if (30 < N) {
      var U = T - T % 5;
      N = (y & (1 << U) - 1).toString(32), y >>= U, T -= U, Zo = 1 << 32 - ia(s) + T | m << T | y, Ei = N + a;
    } else
      Zo = 1 << N | m << T | y, Ei = a;
  }
  function Ud(a) {
    a.return !== null && (Kr(a, 1), Cm(a, 1, 0));
  }
  function xm(a) {
    for (; a === Xs; )
      Xs = ls[--$r], ls[$r] = null, Zl = ls[--$r], ls[$r] = null;
    for (; a === fa; )
      fa = Ir[--dr], Ir[dr] = null, Ei = Ir[--dr], Ir[dr] = null, Zo = Ir[--dr], Ir[dr] = null;
  }
  var Qr = null, Lr = null, Yn = !1, ma = null;
  function Sm(a, s) {
    var m = Ca(5, null, null, 0);
    m.elementType = "DELETED", m.stateNode = s, m.return = a, s = a.deletions, s === null ? (a.deletions = [m], a.flags |= 16) : s.push(m);
  }
  function Ug(a, s) {
    switch (a.tag) {
      case 5:
        var m = a.type;
        return s = s.nodeType !== 1 || m.toLowerCase() !== s.nodeName.toLowerCase() ? null : s, s !== null ? (a.stateNode = s, Qr = a, Lr = _a(s.firstChild), !0) : !1;
      case 6:
        return s = a.pendingProps === "" || s.nodeType !== 3 ? null : s, s !== null ? (a.stateNode = s, Qr = a, Lr = null, !0) : !1;
      case 13:
        return s = s.nodeType !== 8 ? null : s, s !== null ? (m = fa !== null ? { id: Zo, overflow: Ei } : null, a.memoizedState = { dehydrated: s, treeContext: m, retryLane: 1073741824 }, m = Ca(18, null, null, 0), m.stateNode = s, m.return = a, a.child = m, Qr = a, Lr = null, !0) : !1;
      default:
        return !1;
    }
  }
  function Hd(a) {
    return (a.mode & 1) !== 0 && (a.flags & 128) === 0;
  }
  function Wd(a) {
    if (Yn) {
      var s = Lr;
      if (s) {
        var m = s;
        if (!Ug(a, s)) {
          if (Hd(a))
            throw Error(i(418));
          s = _a(m.nextSibling);
          var y = Qr;
          s && Ug(a, s) ? Sm(y, m) : (a.flags = a.flags & -4097 | 2, Yn = !1, Qr = a);
        }
      } else {
        if (Hd(a))
          throw Error(i(418));
        a.flags = a.flags & -4097 | 2, Yn = !1, Qr = a;
      }
    }
  }
  function Hg(a) {
    for (a = a.return; a !== null && a.tag !== 5 && a.tag !== 3 && a.tag !== 13; )
      a = a.return;
    Qr = a;
  }
  function Yd(a) {
    if (a !== Qr)
      return !1;
    if (!Yn)
      return Hg(a), Yn = !0, !1;
    var s;
    if ((s = a.tag !== 3) && !(s = a.tag !== 5) && (s = a.type, s = s !== "head" && s !== "body" && !yu(a.type, a.memoizedProps)), s && (s = Lr)) {
      if (Hd(a))
        throw Wg(), Error(i(418));
      for (; s; )
        Sm(a, s), s = _a(s.nextSibling);
    }
    if (Hg(a), a.tag === 13) {
      if (a = a.memoizedState, a = a !== null ? a.dehydrated : null, !a)
        throw Error(i(317));
      e: {
        for (a = a.nextSibling, s = 0; a; ) {
          if (a.nodeType === 8) {
            var m = a.data;
            if (m === "/$") {
              if (s === 0) {
                Lr = _a(a.nextSibling);
                break e;
              }
              s--;
            } else
              m !== "$" && m !== "$!" && m !== "$?" || s++;
          }
          a = a.nextSibling;
        }
        Lr = null;
      }
    } else
      Lr = Qr ? _a(a.stateNode.nextSibling) : null;
    return !0;
  }
  function Wg() {
    for (var a = Lr; a; )
      a = _a(a.nextSibling);
  }
  function oo() {
    Lr = Qr = null, Yn = !1;
  }
  function Tm(a) {
    ma === null ? ma = [a] : ma.push(a);
  }
  var Gd = V.ReactCurrentBatchConfig;
  function Xr(a, s) {
    if (a && a.defaultProps) {
      s = se({}, s), a = a.defaultProps;
      for (var m in a)
        s[m] === void 0 && (s[m] = a[m]);
      return s;
    }
    return s;
  }
  var Ka = rn(null), qd = null, cs = null, wm = null;
  function Em() {
    wm = cs = qd = null;
  }
  function us(a) {
    var s = Ka.current;
    wn(Ka), a._currentValue = s;
  }
  function Ho(a, s, m) {
    for (; a !== null; ) {
      var y = a.alternate;
      if ((a.childLanes & s) !== s ? (a.childLanes |= s, y !== null && (y.childLanes |= s)) : y !== null && (y.childLanes & s) !== s && (y.childLanes |= s), a === m)
        break;
      a = a.return;
    }
  }
  function Ct(a, s) {
    qd = a, wm = cs = null, a = a.dependencies, a !== null && a.firstContext !== null && (a.lanes & s && (Co = !0), a.firstContext = null);
  }
  function mo(a) {
    var s = a._currentValue;
    if (wm !== a)
      if (a = { context: a, memoizedValue: s, next: null }, cs === null) {
        if (qd === null)
          throw Error(i(308));
        cs = a, qd.dependencies = { lanes: 0, firstContext: a };
      } else
        cs = cs.next = a;
    return s;
  }
  var Jo = null;
  function Rm(a) {
    Jo === null ? Jo = [a] : Jo.push(a);
  }
  function Yg(a, s, m, y) {
    var T = s.interleaved;
    return T === null ? (m.next = m, Rm(s)) : (m.next = T.next, T.next = m), s.interleaved = m, Ri(a, y);
  }
  function Ri(a, s) {
    a.lanes |= s;
    var m = a.alternate;
    for (m !== null && (m.lanes |= s), m = a, a = a.return; a !== null; )
      a.childLanes |= s, m = a.alternate, m !== null && (m.childLanes |= s), m = a, a = a.return;
    return m.tag === 3 ? m.stateNode : null;
  }
  var ds = !1;
  function Om(a) {
    a.updateQueue = { baseState: a.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
  }
  function Do(a, s) {
    a = a.updateQueue, s.updateQueue === a && (s.updateQueue = { baseState: a.baseState, firstBaseUpdate: a.firstBaseUpdate, lastBaseUpdate: a.lastBaseUpdate, shared: a.shared, effects: a.effects });
  }
  function Oi(a, s) {
    return { eventTime: a, lane: s, tag: 0, payload: null, callback: null, next: null };
  }
  function ps(a, s, m) {
    var y = a.updateQueue;
    if (y === null)
      return null;
    if (y = y.shared, fn & 2) {
      var T = y.pending;
      return T === null ? s.next = s : (s.next = T.next, T.next = s), y.pending = s, Ri(a, m);
    }
    return T = y.interleaved, T === null ? (s.next = s, Rm(y)) : (s.next = T.next, T.next = s), y.interleaved = s, Ri(a, m);
  }
  function Kd(a, s, m) {
    if (s = s.updateQueue, s !== null && (s = s.shared, (m & 4194240) !== 0)) {
      var y = s.lanes;
      y &= a.pendingLanes, m |= y, s.lanes = m, eu(a, m);
    }
  }
  function km(a, s) {
    var m = a.updateQueue, y = a.alternate;
    if (y !== null && (y = y.updateQueue, m === y)) {
      var T = null, N = null;
      if (m = m.firstBaseUpdate, m !== null) {
        do {
          var U = { eventTime: m.eventTime, lane: m.lane, tag: m.tag, payload: m.payload, callback: m.callback, next: null };
          N === null ? T = N = U : N = N.next = U, m = m.next;
        } while (m !== null);
        N === null ? T = N = s : N = N.next = s;
      } else
        T = N = s;
      m = { baseState: y.baseState, firstBaseUpdate: T, lastBaseUpdate: N, shared: y.shared, effects: y.effects }, a.updateQueue = m;
      return;
    }
    a = m.lastBaseUpdate, a === null ? m.firstBaseUpdate = s : a.next = s, m.lastBaseUpdate = s;
  }
  function fs(a, s, m, y) {
    var T = a.updateQueue;
    ds = !1;
    var N = T.firstBaseUpdate, U = T.lastBaseUpdate, oe = T.shared.pending;
    if (oe !== null) {
      T.shared.pending = null;
      var le = oe, Ie = le.next;
      le.next = null, U === null ? N = Ie : U.next = Ie, U = le;
      var ct = a.alternate;
      ct !== null && (ct = ct.updateQueue, oe = ct.lastBaseUpdate, oe !== U && (oe === null ? ct.firstBaseUpdate = Ie : oe.next = Ie, ct.lastBaseUpdate = le));
    }
    if (N !== null) {
      var ut = T.baseState;
      U = 0, ct = Ie = le = null, oe = N;
      do {
        var lt = oe.lane, Et = oe.eventTime;
        if ((y & lt) === lt) {
          ct !== null && (ct = ct.next = {
            eventTime: Et,
            lane: 0,
            tag: oe.tag,
            payload: oe.payload,
            callback: oe.callback,
            next: null
          });
          e: {
            var Pt = a, Lt = oe;
            switch (lt = s, Et = m, Lt.tag) {
              case 1:
                if (Pt = Lt.payload, typeof Pt == "function") {
                  ut = Pt.call(Et, ut, lt);
                  break e;
                }
                ut = Pt;
                break e;
              case 3:
                Pt.flags = Pt.flags & -65537 | 128;
              case 0:
                if (Pt = Lt.payload, lt = typeof Pt == "function" ? Pt.call(Et, ut, lt) : Pt, lt == null)
                  break e;
                ut = se({}, ut, lt);
                break e;
              case 2:
                ds = !0;
            }
          }
          oe.callback !== null && oe.lane !== 0 && (a.flags |= 64, lt = T.effects, lt === null ? T.effects = [oe] : lt.push(oe));
        } else
          Et = { eventTime: Et, lane: lt, tag: oe.tag, payload: oe.payload, callback: oe.callback, next: null }, ct === null ? (Ie = ct = Et, le = ut) : ct = ct.next = Et, U |= lt;
        if (oe = oe.next, oe === null) {
          if (oe = T.shared.pending, oe === null)
            break;
          lt = oe, oe = lt.next, lt.next = null, T.lastBaseUpdate = lt, T.shared.pending = null;
        }
      } while (1);
      if (ct === null && (le = ut), T.baseState = le, T.firstBaseUpdate = Ie, T.lastBaseUpdate = ct, s = T.shared.interleaved, s !== null) {
        T = s;
        do
          U |= T.lane, T = T.next;
        while (T !== s);
      } else
        N === null && (T.shared.lanes = 0);
      Ni |= U, a.lanes = U, a.memoizedState = ut;
    }
  }
  function Zs(a, s, m) {
    if (a = s.effects, s.effects = null, a !== null)
      for (s = 0; s < a.length; s++) {
        var y = a[s], T = y.callback;
        if (T !== null) {
          if (y.callback = null, y = m, typeof T != "function")
            throw Error(i(191, T));
          T.call(y);
        }
      }
  }
  var Gg = new e.Component().refs;
  function Dm(a, s, m, y) {
    s = a.memoizedState, m = m(y, s), m = m == null ? s : se({}, s, m), a.memoizedState = m, a.lanes === 0 && (a.updateQueue.baseState = m);
  }
  var Qd = { isMounted: function(a) {
    return (a = a._reactInternals) ? ze(a) === a : !1;
  }, enqueueSetState: function(a, s, m) {
    a = a._reactInternals;
    var y = hr(), T = xo(a), N = Oi(y, T);
    N.payload = s, m != null && (N.callback = m), s = ps(a, N, T), s !== null && (vr(s, a, T, y), Kd(s, a, T));
  }, enqueueReplaceState: function(a, s, m) {
    a = a._reactInternals;
    var y = hr(), T = xo(a), N = Oi(y, T);
    N.tag = 1, N.payload = s, m != null && (N.callback = m), s = ps(a, N, T), s !== null && (vr(s, a, T, y), Kd(s, a, T));
  }, enqueueForceUpdate: function(a, s) {
    a = a._reactInternals;
    var m = hr(), y = xo(a), T = Oi(m, y);
    T.tag = 2, s != null && (T.callback = s), s = ps(a, T, y), s !== null && (vr(s, a, y, m), Kd(s, a, y));
  } };
  function qg(a, s, m, y, T, N, U) {
    return a = a.stateNode, typeof a.shouldComponentUpdate == "function" ? a.shouldComponentUpdate(y, N, U) : s.prototype && s.prototype.isPureReactComponent ? !du(m, y) || !du(T, N) : !0;
  }
  function Kg(a, s, m) {
    var y = !1, T = qa, N = s.contextType;
    return typeof N == "object" && N !== null ? N = mo(N) : (T = Jn(s) ? Nr : Kt.current, y = s.contextTypes, N = (y = y != null) ? da(a, T) : qa), s = new s(m, N), a.memoizedState = s.state !== null && s.state !== void 0 ? s.state : null, s.updater = Qd, a.stateNode = s, s._reactInternals = a, y && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = T, a.__reactInternalMemoizedMaskedChildContext = N), s;
  }
  function Qg(a, s, m, y) {
    a = s.state, typeof s.componentWillReceiveProps == "function" && s.componentWillReceiveProps(m, y), typeof s.UNSAFE_componentWillReceiveProps == "function" && s.UNSAFE_componentWillReceiveProps(m, y), s.state !== a && Qd.enqueueReplaceState(s, s.state, null);
  }
  function Xd(a, s, m, y) {
    var T = a.stateNode;
    T.props = m, T.state = a.memoizedState, T.refs = Gg, Om(a);
    var N = s.contextType;
    typeof N == "object" && N !== null ? T.context = mo(N) : (N = Jn(s) ? Nr : Kt.current, T.context = da(a, N)), T.state = a.memoizedState, N = s.getDerivedStateFromProps, typeof N == "function" && (Dm(a, s, N, m), T.state = a.memoizedState), typeof s.getDerivedStateFromProps == "function" || typeof T.getSnapshotBeforeUpdate == "function" || typeof T.UNSAFE_componentWillMount != "function" && typeof T.componentWillMount != "function" || (s = T.state, typeof T.componentWillMount == "function" && T.componentWillMount(), typeof T.UNSAFE_componentWillMount == "function" && T.UNSAFE_componentWillMount(), s !== T.state && Qd.enqueueReplaceState(T, T.state, null), fs(a, m, T, y), T.state = a.memoizedState), typeof T.componentDidMount == "function" && (a.flags |= 4194308);
  }
  function Jl(a, s, m) {
    if (a = m.ref, a !== null && typeof a != "function" && typeof a != "object") {
      if (m._owner) {
        if (m = m._owner, m) {
          if (m.tag !== 1)
            throw Error(i(309));
          var y = m.stateNode;
        }
        if (!y)
          throw Error(i(147, a));
        var T = y, N = "" + a;
        return s !== null && s.ref !== null && typeof s.ref == "function" && s.ref._stringRef === N ? s.ref : (s = function(U) {
          var oe = T.refs;
          oe === Gg && (oe = T.refs = {}), U === null ? delete oe[N] : oe[N] = U;
        }, s._stringRef = N, s);
      }
      if (typeof a != "string")
        throw Error(i(284));
      if (!m._owner)
        throw Error(i(290, a));
    }
    return a;
  }
  function Zd(a, s) {
    throw a = Object.prototype.toString.call(s), Error(i(31, a === "[object Object]" ? "object with keys {" + Object.keys(s).join(", ") + "}" : a));
  }
  function Xg(a) {
    var s = a._init;
    return s(a._payload);
  }
  function Zg(a) {
    function s(we, me) {
      if (a) {
        var ke = we.deletions;
        ke === null ? (we.deletions = [me], we.flags |= 16) : ke.push(me);
      }
    }
    function m(we, me) {
      if (!a)
        return null;
      for (; me !== null; )
        s(we, me), me = me.sibling;
      return null;
    }
    function y(we, me) {
      for (we = /* @__PURE__ */ new Map(); me !== null; )
        me.key !== null ? we.set(me.key, me) : we.set(me.index, me), me = me.sibling;
      return we;
    }
    function T(we, me) {
      return we = xs(we, me), we.index = 0, we.sibling = null, we;
    }
    function N(we, me, ke) {
      return we.index = ke, a ? (ke = we.alternate, ke !== null ? (ke = ke.index, ke < me ? (we.flags |= 2, me) : ke) : (we.flags |= 2, me)) : (we.flags |= 1048576, me);
    }
    function U(we) {
      return a && we.alternate === null && (we.flags |= 2), we;
    }
    function oe(we, me, ke, vt) {
      return me === null || me.tag !== 6 ? (me = Fu(ke, we.mode, vt), me.return = we, me) : (me = T(me, ke), me.return = we, me);
    }
    function le(we, me, ke, vt) {
      var At = ke.type;
      return At === F ? ct(we, me, ke.props.children, vt, ke.key) : me !== null && (me.elementType === At || typeof At == "object" && At !== null && At.$$typeof === re && Xg(At) === me.type) ? (vt = T(me, ke.props), vt.ref = Jl(we, me, ke), vt.return = we, vt) : (vt = Mp(ke.type, ke.key, ke.props, null, we.mode, vt), vt.ref = Jl(we, me, ke), vt.return = we, vt);
    }
    function Ie(we, me, ke, vt) {
      return me === null || me.tag !== 4 || me.stateNode.containerInfo !== ke.containerInfo || me.stateNode.implementation !== ke.implementation ? (me = gl(ke, we.mode, vt), me.return = we, me) : (me = T(me, ke.children || []), me.return = we, me);
    }
    function ct(we, me, ke, vt, At) {
      return me === null || me.tag !== 7 ? (me = vl(ke, we.mode, vt, At), me.return = we, me) : (me = T(me, ke), me.return = we, me);
    }
    function ut(we, me, ke) {
      if (typeof me == "string" && me !== "" || typeof me == "number")
        return me = Fu("" + me, we.mode, ke), me.return = we, me;
      if (typeof me == "object" && me !== null) {
        switch (me.$$typeof) {
          case B:
            return ke = Mp(me.type, me.key, me.props, null, we.mode, ke), ke.ref = Jl(we, null, me), ke.return = we, ke;
          case M:
            return me = gl(me, we.mode, ke), me.return = we, me;
          case re:
            var vt = me._init;
            return ut(we, vt(me._payload), ke);
        }
        if (je(me) || ne(me))
          return me = vl(me, we.mode, ke, null), me.return = we, me;
        Zd(we, me);
      }
      return null;
    }
    function lt(we, me, ke, vt) {
      var At = me !== null ? me.key : null;
      if (typeof ke == "string" && ke !== "" || typeof ke == "number")
        return At !== null ? null : oe(we, me, "" + ke, vt);
      if (typeof ke == "object" && ke !== null) {
        switch (ke.$$typeof) {
          case B:
            return ke.key === At ? le(we, me, ke, vt) : null;
          case M:
            return ke.key === At ? Ie(we, me, ke, vt) : null;
          case re:
            return At = ke._init, lt(
              we,
              me,
              At(ke._payload),
              vt
            );
        }
        if (je(ke) || ne(ke))
          return At !== null ? null : ct(we, me, ke, vt, null);
        Zd(we, ke);
      }
      return null;
    }
    function Et(we, me, ke, vt, At) {
      if (typeof vt == "string" && vt !== "" || typeof vt == "number")
        return we = we.get(ke) || null, oe(me, we, "" + vt, At);
      if (typeof vt == "object" && vt !== null) {
        switch (vt.$$typeof) {
          case B:
            return we = we.get(vt.key === null ? ke : vt.key) || null, le(me, we, vt, At);
          case M:
            return we = we.get(vt.key === null ? ke : vt.key) || null, Ie(me, we, vt, At);
          case re:
            var $t = vt._init;
            return Et(we, me, ke, $t(vt._payload), At);
        }
        if (je(vt) || ne(vt))
          return we = we.get(ke) || null, ct(me, we, vt, At, null);
        Zd(me, vt);
      }
      return null;
    }
    function Pt(we, me, ke, vt) {
      for (var At = null, $t = null, zt = me, Qt = me = 0, Go = null; zt !== null && Qt < ke.length; Qt++) {
        zt.index > Qt ? (Go = zt, zt = null) : Go = zt.sibling;
        var bn = lt(we, zt, ke[Qt], vt);
        if (bn === null) {
          zt === null && (zt = Go);
          break;
        }
        a && zt && bn.alternate === null && s(we, zt), me = N(bn, me, Qt), $t === null ? At = bn : $t.sibling = bn, $t = bn, zt = Go;
      }
      if (Qt === ke.length)
        return m(we, zt), Yn && Kr(we, Qt), At;
      if (zt === null) {
        for (; Qt < ke.length; Qt++)
          zt = ut(we, ke[Qt], vt), zt !== null && (me = N(zt, me, Qt), $t === null ? At = zt : $t.sibling = zt, $t = zt);
        return Yn && Kr(we, Qt), At;
      }
      for (zt = y(we, zt); Qt < ke.length; Qt++)
        Go = Et(zt, we, Qt, ke[Qt], vt), Go !== null && (a && Go.alternate !== null && zt.delete(Go.key === null ? Qt : Go.key), me = N(Go, me, Qt), $t === null ? At = Go : $t.sibling = Go, $t = Go);
      return a && zt.forEach(function(Ss) {
        return s(we, Ss);
      }), Yn && Kr(we, Qt), At;
    }
    function Lt(we, me, ke, vt) {
      var At = ne(ke);
      if (typeof At != "function")
        throw Error(i(150));
      if (ke = At.call(ke), ke == null)
        throw Error(i(151));
      for (var $t = At = null, zt = me, Qt = me = 0, Go = null, bn = ke.next(); zt !== null && !bn.done; Qt++, bn = ke.next()) {
        zt.index > Qt ? (Go = zt, zt = null) : Go = zt.sibling;
        var Ss = lt(we, zt, bn.value, vt);
        if (Ss === null) {
          zt === null && (zt = Go);
          break;
        }
        a && zt && Ss.alternate === null && s(we, zt), me = N(Ss, me, Qt), $t === null ? At = Ss : $t.sibling = Ss, $t = Ss, zt = Go;
      }
      if (bn.done)
        return m(
          we,
          zt
        ), Yn && Kr(we, Qt), At;
      if (zt === null) {
        for (; !bn.done; Qt++, bn = ke.next())
          bn = ut(we, bn.value, vt), bn !== null && (me = N(bn, me, Qt), $t === null ? At = bn : $t.sibling = bn, $t = bn);
        return Yn && Kr(we, Qt), At;
      }
      for (zt = y(we, zt); !bn.done; Qt++, bn = ke.next())
        bn = Et(zt, we, Qt, bn.value, vt), bn !== null && (a && bn.alternate !== null && zt.delete(bn.key === null ? Qt : bn.key), me = N(bn, me, Qt), $t === null ? At = bn : $t.sibling = bn, $t = bn);
      return a && zt.forEach(function(ux) {
        return s(we, ux);
      }), Yn && Kr(we, Qt), At;
    }
    function ho(we, me, ke, vt) {
      if (typeof ke == "object" && ke !== null && ke.type === F && ke.key === null && (ke = ke.props.children), typeof ke == "object" && ke !== null) {
        switch (ke.$$typeof) {
          case B:
            e: {
              for (var At = ke.key, $t = me; $t !== null; ) {
                if ($t.key === At) {
                  if (At = ke.type, At === F) {
                    if ($t.tag === 7) {
                      m(we, $t.sibling), me = T($t, ke.props.children), me.return = we, we = me;
                      break e;
                    }
                  } else if ($t.elementType === At || typeof At == "object" && At !== null && At.$$typeof === re && Xg(At) === $t.type) {
                    m(we, $t.sibling), me = T($t, ke.props), me.ref = Jl(we, $t, ke), me.return = we, we = me;
                    break e;
                  }
                  m(we, $t);
                  break;
                } else
                  s(we, $t);
                $t = $t.sibling;
              }
              ke.type === F ? (me = vl(ke.props.children, we.mode, vt, ke.key), me.return = we, we = me) : (vt = Mp(ke.type, ke.key, ke.props, null, we.mode, vt), vt.ref = Jl(we, me, ke), vt.return = we, we = vt);
            }
            return U(we);
          case M:
            e: {
              for ($t = ke.key; me !== null; ) {
                if (me.key === $t)
                  if (me.tag === 4 && me.stateNode.containerInfo === ke.containerInfo && me.stateNode.implementation === ke.implementation) {
                    m(we, me.sibling), me = T(me, ke.children || []), me.return = we, we = me;
                    break e;
                  } else {
                    m(we, me);
                    break;
                  }
                else
                  s(we, me);
                me = me.sibling;
              }
              me = gl(ke, we.mode, vt), me.return = we, we = me;
            }
            return U(we);
          case re:
            return $t = ke._init, ho(we, me, $t(ke._payload), vt);
        }
        if (je(ke))
          return Pt(we, me, ke, vt);
        if (ne(ke))
          return Lt(we, me, ke, vt);
        Zd(we, ke);
      }
      return typeof ke == "string" && ke !== "" || typeof ke == "number" ? (ke = "" + ke, me !== null && me.tag === 6 ? (m(we, me.sibling), me = T(me, ke), me.return = we, we = me) : (m(we, me), me = Fu(ke, we.mode, vt), me.return = we, we = me), U(we)) : m(we, me);
    }
    return ho;
  }
  var ec = Zg(!0), Jg = Zg(!1), Tu = {}, Ba = rn(Tu), wu = rn(Tu), tc = rn(Tu);
  function Js(a) {
    if (a === Tu)
      throw Error(i(174));
    return a;
  }
  function Mm(a, s) {
    switch (En(tc, s), En(wu, a), En(Ba, Tu), a = s.nodeType, a) {
      case 9:
      case 11:
        s = (s = s.documentElement) ? s.namespaceURI : Vt(null, "");
        break;
      default:
        a = a === 8 ? s.parentNode : s, s = a.namespaceURI || null, a = a.tagName, s = Vt(s, a);
    }
    wn(Ba), En(Ba, s);
  }
  function ms() {
    wn(Ba), wn(wu), wn(tc);
  }
  function Ut(a) {
    Js(tc.current);
    var s = Js(Ba.current), m = Vt(s, a.type);
    s !== m && (En(wu, a), En(Ba, m));
  }
  function un(a) {
    wu.current === a && (wn(Ba), wn(wu));
  }
  var Ht = rn(0);
  function ro(a) {
    for (var s = a; s !== null; ) {
      if (s.tag === 13) {
        var m = s.memoizedState;
        if (m !== null && (m = m.dehydrated, m === null || m.data === "$?" || m.data === "$!"))
          return s;
      } else if (s.tag === 19 && s.memoizedProps.revealOrder !== void 0) {
        if (s.flags & 128)
          return s;
      } else if (s.child !== null) {
        s.child.return = s, s = s.child;
        continue;
      }
      if (s === a)
        break;
      for (; s.sibling === null; ) {
        if (s.return === null || s.return === a)
          return null;
        s = s.return;
      }
      s.sibling.return = s.return, s = s.sibling;
    }
    return null;
  }
  var ha = [];
  function Jd() {
    for (var a = 0; a < ha.length; a++)
      ha[a]._workInProgressVersionPrimary = null;
    ha.length = 0;
  }
  var ep = V.ReactCurrentDispatcher, Nm = V.ReactCurrentBatchConfig, el = 0, Gn = null, Je = null, hn = null, Gt = !1, Qa = !1, Zr = 0, tl = 0;
  function qn() {
    throw Error(i(321));
  }
  function nl(a, s) {
    if (s === null)
      return !1;
    for (var m = 0; m < s.length && m < a.length; m++)
      if (!ca(a[m], s[m]))
        return !1;
    return !0;
  }
  function hs(a, s, m, y, T, N) {
    if (el = N, Gn = s, s.memoizedState = null, s.updateQueue = null, s.lanes = 0, ep.current = a === null || a.memoizedState === null ? Y0 : G0, a = m(y, T), Qa) {
      N = 0;
      do {
        if (Qa = !1, Zr = 0, 25 <= N)
          throw Error(i(301));
        N += 1, hn = Je = null, s.updateQueue = null, ep.current = $m, a = m(y, T);
      } while (Qa);
    }
    if (ep.current = vp, s = Je !== null && Je.next !== null, el = 0, hn = Je = Gn = null, Gt = !1, s)
      throw Error(i(300));
    return a;
  }
  function ol() {
    var a = Zr !== 0;
    return Zr = 0, a;
  }
  function va() {
    var a = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
    return hn === null ? Gn.memoizedState = hn = a : hn = hn.next = a, hn;
  }
  function Ar() {
    if (Je === null) {
      var a = Gn.alternate;
      a = a !== null ? a.memoizedState : null;
    } else
      a = Je.next;
    var s = hn === null ? Gn.memoizedState : hn.next;
    if (s !== null)
      hn = s, Je = a;
    else {
      if (a === null)
        throw Error(i(310));
      Je = a, a = { memoizedState: Je.memoizedState, baseState: Je.baseState, baseQueue: Je.baseQueue, queue: Je.queue, next: null }, hn === null ? Gn.memoizedState = hn = a : hn = hn.next = a;
    }
    return hn;
  }
  function rl(a, s) {
    return typeof s == "function" ? s(a) : s;
  }
  function Eu(a) {
    var s = Ar(), m = s.queue;
    if (m === null)
      throw Error(i(311));
    m.lastRenderedReducer = a;
    var y = Je, T = y.baseQueue, N = m.pending;
    if (N !== null) {
      if (T !== null) {
        var U = T.next;
        T.next = N.next, N.next = U;
      }
      y.baseQueue = T = N, m.pending = null;
    }
    if (T !== null) {
      N = T.next, y = y.baseState;
      var oe = U = null, le = null, Ie = N;
      do {
        var ct = Ie.lane;
        if ((el & ct) === ct)
          le !== null && (le = le.next = { lane: 0, action: Ie.action, hasEagerState: Ie.hasEagerState, eagerState: Ie.eagerState, next: null }), y = Ie.hasEagerState ? Ie.eagerState : a(y, Ie.action);
        else {
          var ut = {
            lane: ct,
            action: Ie.action,
            hasEagerState: Ie.hasEagerState,
            eagerState: Ie.eagerState,
            next: null
          };
          le === null ? (oe = le = ut, U = y) : le = le.next = ut, Gn.lanes |= ct, Ni |= ct;
        }
        Ie = Ie.next;
      } while (Ie !== null && Ie !== N);
      le === null ? U = y : le.next = oe, ca(y, s.memoizedState) || (Co = !0), s.memoizedState = y, s.baseState = U, s.baseQueue = le, m.lastRenderedState = y;
    }
    if (a = m.interleaved, a !== null) {
      T = a;
      do
        N = T.lane, Gn.lanes |= N, Ni |= N, T = T.next;
      while (T !== a);
    } else
      T === null && (m.lanes = 0);
    return [s.memoizedState, m.dispatch];
  }
  function Ru(a) {
    var s = Ar(), m = s.queue;
    if (m === null)
      throw Error(i(311));
    m.lastRenderedReducer = a;
    var y = m.dispatch, T = m.pending, N = s.memoizedState;
    if (T !== null) {
      m.pending = null;
      var U = T = T.next;
      do
        N = a(N, U.action), U = U.next;
      while (U !== T);
      ca(N, s.memoizedState) || (Co = !0), s.memoizedState = N, s.baseQueue === null && (s.baseState = N), m.lastRenderedState = N;
    }
    return [N, y];
  }
  function tp() {
  }
  function np(a, s) {
    var m = Gn, y = Ar(), T = s(), N = !ca(y.memoizedState, T);
    if (N && (y.memoizedState = T, Co = !0), y = y.queue, Ou(ap.bind(null, m, y, a), [a]), y.getSnapshot !== s || N || hn !== null && hn.memoizedState.tag & 1) {
      if (m.flags |= 2048, al(9, rp.bind(null, m, y, T, s), void 0, null), ao === null)
        throw Error(i(349));
      el & 30 || op(m, s, T);
    }
    return T;
  }
  function op(a, s, m) {
    a.flags |= 16384, a = { getSnapshot: s, value: m }, s = Gn.updateQueue, s === null ? (s = { lastEffect: null, stores: null }, Gn.updateQueue = s, s.stores = [a]) : (m = s.stores, m === null ? s.stores = [a] : m.push(a));
  }
  function rp(a, s, m, y) {
    s.value = m, s.getSnapshot = y, ip(s) && sp(a);
  }
  function ap(a, s, m) {
    return m(function() {
      ip(s) && sp(a);
    });
  }
  function ip(a) {
    var s = a.getSnapshot;
    a = a.value;
    try {
      var m = s();
      return !ca(a, m);
    } catch {
      return !0;
    }
  }
  function sp(a) {
    var s = Ri(a, 1);
    s !== null && vr(s, a, 1, -1);
  }
  function lp(a) {
    var s = va();
    return typeof a == "function" && (a = a()), s.memoizedState = s.baseState = a, a = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: rl, lastRenderedState: a }, s.queue = a, a = a.dispatch = hp.bind(null, Gn, a), [s.memoizedState, a];
  }
  function al(a, s, m, y) {
    return a = { tag: a, create: s, destroy: m, deps: y, next: null }, s = Gn.updateQueue, s === null ? (s = { lastEffect: null, stores: null }, Gn.updateQueue = s, s.lastEffect = a.next = a) : (m = s.lastEffect, m === null ? s.lastEffect = a.next = a : (y = m.next, m.next = a, a.next = y, s.lastEffect = a)), a;
  }
  function cp() {
    return Ar().memoizedState;
  }
  function il(a, s, m, y) {
    var T = va();
    Gn.flags |= a, T.memoizedState = al(1 | s, m, void 0, y === void 0 ? null : y);
  }
  function ki(a, s, m, y) {
    var T = Ar();
    y = y === void 0 ? null : y;
    var N = void 0;
    if (Je !== null) {
      var U = Je.memoizedState;
      if (N = U.destroy, y !== null && nl(y, U.deps)) {
        T.memoizedState = al(s, m, N, y);
        return;
      }
    }
    Gn.flags |= a, T.memoizedState = al(1 | s, m, N, y);
  }
  function up(a, s) {
    return il(8390656, 8, a, s);
  }
  function Ou(a, s) {
    return ki(2048, 8, a, s);
  }
  function dp(a, s) {
    return ki(4, 2, a, s);
  }
  function pp(a, s) {
    return ki(4, 4, a, s);
  }
  function Pm(a, s) {
    if (typeof s == "function")
      return a = a(), s(a), function() {
        s(null);
      };
    if (s != null)
      return a = a(), s.current = a, function() {
        s.current = null;
      };
  }
  function nc(a, s, m) {
    return m = m != null ? m.concat([a]) : null, ki(4, 4, Pm.bind(null, s, a), m);
  }
  function fp() {
  }
  function oc(a, s) {
    var m = Ar();
    s = s === void 0 ? null : s;
    var y = m.memoizedState;
    return y !== null && s !== null && nl(s, y[1]) ? y[0] : (m.memoizedState = [a, s], a);
  }
  function vs(a, s) {
    var m = Ar();
    s = s === void 0 ? null : s;
    var y = m.memoizedState;
    return y !== null && s !== null && nl(s, y[1]) ? y[0] : (a = a(), m.memoizedState = [a, s], a);
  }
  function _r(a, s, m) {
    return el & 21 ? (ca(m, s) || (m = Td(), Gn.lanes |= m, Ni |= m, a.baseState = !0), s) : (a.baseState && (a.baseState = !1, Co = !0), a.memoizedState = m);
  }
  function W0(a, s) {
    var m = kn;
    kn = m !== 0 && 4 > m ? m : 4, a(!0);
    var y = Nm.transition;
    Nm.transition = {};
    try {
      a(!1), s();
    } finally {
      kn = m, Nm.transition = y;
    }
  }
  function jn() {
    return Ar().memoizedState;
  }
  function mp(a, s, m) {
    var y = xo(a);
    if (m = { lane: y, action: m, hasEagerState: !1, eagerState: null, next: null }, rc(a))
      ku(s, m);
    else if (m = Yg(a, s, m, y), m !== null) {
      var T = hr();
      vr(m, a, y, T), ey(m, s, y);
    }
  }
  function hp(a, s, m) {
    var y = xo(a), T = { lane: y, action: m, hasEagerState: !1, eagerState: null, next: null };
    if (rc(a))
      ku(s, T);
    else {
      var N = a.alternate;
      if (a.lanes === 0 && (N === null || N.lanes === 0) && (N = s.lastRenderedReducer, N !== null))
        try {
          var U = s.lastRenderedState, oe = N(U, m);
          if (T.hasEagerState = !0, T.eagerState = oe, ca(oe, U)) {
            var le = s.interleaved;
            le === null ? (T.next = T, Rm(s)) : (T.next = le.next, le.next = T), s.interleaved = T;
            return;
          }
        } catch {
        } finally {
        }
      m = Yg(a, s, T, y), m !== null && (T = hr(), vr(m, a, y, T), ey(m, s, y));
    }
  }
  function rc(a) {
    var s = a.alternate;
    return a === Gn || s !== null && s === Gn;
  }
  function ku(a, s) {
    Qa = Gt = !0;
    var m = a.pending;
    m === null ? s.next = s : (s.next = m.next, m.next = s), a.pending = s;
  }
  function ey(a, s, m) {
    if (m & 4194240) {
      var y = s.lanes;
      y &= a.pendingLanes, m |= y, s.lanes = m, eu(a, m);
    }
  }
  var vp = { readContext: mo, useCallback: qn, useContext: qn, useEffect: qn, useImperativeHandle: qn, useInsertionEffect: qn, useLayoutEffect: qn, useMemo: qn, useReducer: qn, useRef: qn, useState: qn, useDebugValue: qn, useDeferredValue: qn, useTransition: qn, useMutableSource: qn, useSyncExternalStore: qn, useId: qn, unstable_isNewReconciler: !1 }, Y0 = { readContext: mo, useCallback: function(a, s) {
    return va().memoizedState = [a, s === void 0 ? null : s], a;
  }, useContext: mo, useEffect: up, useImperativeHandle: function(a, s, m) {
    return m = m != null ? m.concat([a]) : null, il(
      4194308,
      4,
      Pm.bind(null, s, a),
      m
    );
  }, useLayoutEffect: function(a, s) {
    return il(4194308, 4, a, s);
  }, useInsertionEffect: function(a, s) {
    return il(4, 2, a, s);
  }, useMemo: function(a, s) {
    var m = va();
    return s = s === void 0 ? null : s, a = a(), m.memoizedState = [a, s], a;
  }, useReducer: function(a, s, m) {
    var y = va();
    return s = m !== void 0 ? m(s) : s, y.memoizedState = y.baseState = s, a = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: a, lastRenderedState: s }, y.queue = a, a = a.dispatch = mp.bind(null, Gn, a), [y.memoizedState, a];
  }, useRef: function(a) {
    var s = va();
    return a = { current: a }, s.memoizedState = a;
  }, useState: lp, useDebugValue: fp, useDeferredValue: function(a) {
    return va().memoizedState = a;
  }, useTransition: function() {
    var a = lp(!1), s = a[0];
    return a = W0.bind(null, a[1]), va().memoizedState = a, [s, a];
  }, useMutableSource: function() {
  }, useSyncExternalStore: function(a, s, m) {
    var y = Gn, T = va();
    if (Yn) {
      if (m === void 0)
        throw Error(i(407));
      m = m();
    } else {
      if (m = s(), ao === null)
        throw Error(i(349));
      el & 30 || op(y, s, m);
    }
    T.memoizedState = m;
    var N = { value: m, getSnapshot: s };
    return T.queue = N, up(ap.bind(
      null,
      y,
      N,
      a
    ), [a]), y.flags |= 2048, al(9, rp.bind(null, y, N, m, s), void 0, null), m;
  }, useId: function() {
    var a = va(), s = ao.identifierPrefix;
    if (Yn) {
      var m = Ei, y = Zo;
      m = (y & ~(1 << 32 - ia(y) - 1)).toString(32) + m, s = ":" + s + "R" + m, m = Zr++, 0 < m && (s += "H" + m.toString(32)), s += ":";
    } else
      m = tl++, s = ":" + s + "r" + m.toString(32) + ":";
    return a.memoizedState = s;
  }, unstable_isNewReconciler: !1 }, G0 = {
    readContext: mo,
    useCallback: oc,
    useContext: mo,
    useEffect: Ou,
    useImperativeHandle: nc,
    useInsertionEffect: dp,
    useLayoutEffect: pp,
    useMemo: vs,
    useReducer: Eu,
    useRef: cp,
    useState: function() {
      return Eu(rl);
    },
    useDebugValue: fp,
    useDeferredValue: function(a) {
      var s = Ar();
      return _r(s, Je.memoizedState, a);
    },
    useTransition: function() {
      var a = Eu(rl)[0], s = Ar().memoizedState;
      return [a, s];
    },
    useMutableSource: tp,
    useSyncExternalStore: np,
    useId: jn,
    unstable_isNewReconciler: !1
  }, $m = { readContext: mo, useCallback: oc, useContext: mo, useEffect: Ou, useImperativeHandle: nc, useInsertionEffect: dp, useLayoutEffect: pp, useMemo: vs, useReducer: Ru, useRef: cp, useState: function() {
    return Ru(rl);
  }, useDebugValue: fp, useDeferredValue: function(a) {
    var s = Ar();
    return Je === null ? s.memoizedState = a : _r(s, Je.memoizedState, a);
  }, useTransition: function() {
    var a = Ru(rl)[0], s = Ar().memoizedState;
    return [a, s];
  }, useMutableSource: tp, useSyncExternalStore: np, useId: jn, unstable_isNewReconciler: !1 };
  function ac(a, s) {
    try {
      var m = "", y = s;
      do
        m += De(y), y = y.return;
      while (y);
      var T = m;
    } catch (N) {
      T = `
Error generating stack: ` + N.message + `
` + N.stack;
    }
    return { value: a, source: s, stack: T, digest: null };
  }
  function Du(a, s, m) {
    return { value: a, source: null, stack: m ?? null, digest: s ?? null };
  }
  function gp(a, s) {
    try {
      console.error(s.value);
    } catch (m) {
      setTimeout(function() {
        throw m;
      });
    }
  }
  var q0 = typeof WeakMap == "function" ? WeakMap : Map;
  function ty(a, s, m) {
    m = Oi(-1, m), m.tag = 3, m.payload = { element: null };
    var y = s.value;
    return m.callback = function() {
      wp || (wp = !0, dl = y), gp(a, s);
    }, m;
  }
  function Mu(a, s, m) {
    m = Oi(-1, m), m.tag = 3;
    var y = a.type.getDerivedStateFromError;
    if (typeof y == "function") {
      var T = s.value;
      m.payload = function() {
        return y(T);
      }, m.callback = function() {
        gp(a, s);
      };
    }
    var N = a.stateNode;
    return N !== null && typeof N.componentDidCatch == "function" && (m.callback = function() {
      gp(a, s), typeof y != "function" && (Ja === null ? Ja = /* @__PURE__ */ new Set([this]) : Ja.add(this));
      var U = s.stack;
      this.componentDidCatch(s.value, { componentStack: U !== null ? U : "" });
    }), m;
  }
  function ny(a, s, m) {
    var y = a.pingCache;
    if (y === null) {
      y = a.pingCache = new q0();
      var T = /* @__PURE__ */ new Set();
      y.set(s, T);
    } else
      T = y.get(s), T === void 0 && (T = /* @__PURE__ */ new Set(), y.set(s, T));
    T.has(m) || (T.add(m), a = tx.bind(null, a, s, m), s.then(a, a));
  }
  function Im(a) {
    do {
      var s;
      if ((s = a.tag === 13) && (s = a.memoizedState, s = s !== null ? s.dehydrated !== null : !0), s)
        return a;
      a = a.return;
    } while (a !== null);
    return null;
  }
  function Lm(a, s, m, y, T) {
    return a.mode & 1 ? (a.flags |= 65536, a.lanes = T, a) : (a === s ? a.flags |= 65536 : (a.flags |= 128, m.flags |= 131072, m.flags &= -52805, m.tag === 1 && (m.alternate === null ? m.tag = 17 : (s = Oi(-1, 1), s.tag = 2, ps(m, s, 1))), m.lanes |= 1), a);
  }
  var K0 = V.ReactCurrentOwner, Co = !1;
  function Mo(a, s, m, y) {
    s.child = a === null ? Jg(s, null, m, y) : ec(s, a.child, m, y);
  }
  function gs(a, s, m, y, T) {
    m = m.render;
    var N = s.ref;
    return Ct(s, T), y = hs(a, s, m, y, N, T), m = ol(), a !== null && !Co ? (s.updateQueue = a.updateQueue, s.flags &= -2053, a.lanes &= ~T, er(a, s, T)) : (Yn && m && Ud(s), s.flags |= 1, Mo(a, s, y, T), s.child);
  }
  function yp(a, s, m, y, T) {
    if (a === null) {
      var N = m.type;
      return typeof N == "function" && !eh(N) && N.defaultProps === void 0 && m.compare === null && m.defaultProps === void 0 ? (s.tag = 15, s.type = N, Br(a, s, N, y, T)) : (a = Mp(m.type, null, y, s, s.mode, T), a.ref = s.ref, a.return = s, s.child = a);
    }
    if (N = a.child, !(a.lanes & T)) {
      var U = N.memoizedProps;
      if (m = m.compare, m = m !== null ? m : du, m(U, y) && a.ref === s.ref)
        return er(a, s, T);
    }
    return s.flags |= 1, a = xs(N, y), a.ref = s.ref, a.return = s, s.child = a;
  }
  function Br(a, s, m, y, T) {
    if (a !== null) {
      var N = a.memoizedProps;
      if (du(N, y) && a.ref === s.ref)
        if (Co = !1, s.pendingProps = y = N, (a.lanes & T) !== 0)
          a.flags & 131072 && (Co = !0);
        else
          return s.lanes = a.lanes, er(a, s, T);
    }
    return ic(a, s, m, y, T);
  }
  function sl(a, s, m) {
    var y = s.pendingProps, T = y.children, N = a !== null ? a.memoizedState : null;
    if (y.mode === "hidden")
      if (!(s.mode & 1))
        s.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, En(pc, Jr), Jr |= m;
      else {
        if (!(m & 1073741824))
          return a = N !== null ? N.baseLanes | m : m, s.lanes = s.childLanes = 1073741824, s.memoizedState = { baseLanes: a, cachePool: null, transitions: null }, s.updateQueue = null, En(pc, Jr), Jr |= a, null;
        s.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, y = N !== null ? N.baseLanes : m, En(pc, Jr), Jr |= y;
      }
    else
      N !== null ? (y = N.baseLanes | m, s.memoizedState = null) : y = m, En(pc, Jr), Jr |= y;
    return Mo(a, s, T, m), s.child;
  }
  function an(a, s) {
    var m = s.ref;
    (a === null && m !== null || a !== null && a.ref !== m) && (s.flags |= 512, s.flags |= 2097152);
  }
  function ic(a, s, m, y, T) {
    var N = Jn(m) ? Nr : Kt.current;
    return N = da(s, N), Ct(s, T), m = hs(a, s, m, y, N, T), y = ol(), a !== null && !Co ? (s.updateQueue = a.updateQueue, s.flags &= -2053, a.lanes &= ~T, er(a, s, T)) : (Yn && y && Ud(s), s.flags |= 1, Mo(a, s, m, T), s.child);
  }
  function Am(a, s, m, y, T) {
    if (Jn(m)) {
      var N = !0;
      jd(s);
    } else
      N = !1;
    if (Ct(s, T), s.stateNode === null)
      pr(a, s), Kg(s, m, y), Xd(s, m, y, T), y = !0;
    else if (a === null) {
      var U = s.stateNode, oe = s.memoizedProps;
      U.props = oe;
      var le = U.context, Ie = m.contextType;
      typeof Ie == "object" && Ie !== null ? Ie = mo(Ie) : (Ie = Jn(m) ? Nr : Kt.current, Ie = da(s, Ie));
      var ct = m.getDerivedStateFromProps, ut = typeof ct == "function" || typeof U.getSnapshotBeforeUpdate == "function";
      ut || typeof U.UNSAFE_componentWillReceiveProps != "function" && typeof U.componentWillReceiveProps != "function" || (oe !== y || le !== Ie) && Qg(s, U, y, Ie), ds = !1;
      var lt = s.memoizedState;
      U.state = lt, fs(s, y, U, T), le = s.memoizedState, oe !== y || lt !== le || co.current || ds ? (typeof ct == "function" && (Dm(s, m, ct, y), le = s.memoizedState), (oe = ds || qg(s, m, oe, y, lt, le, Ie)) ? (ut || typeof U.UNSAFE_componentWillMount != "function" && typeof U.componentWillMount != "function" || (typeof U.componentWillMount == "function" && U.componentWillMount(), typeof U.UNSAFE_componentWillMount == "function" && U.UNSAFE_componentWillMount()), typeof U.componentDidMount == "function" && (s.flags |= 4194308)) : (typeof U.componentDidMount == "function" && (s.flags |= 4194308), s.memoizedProps = y, s.memoizedState = le), U.props = y, U.state = le, U.context = Ie, y = oe) : (typeof U.componentDidMount == "function" && (s.flags |= 4194308), y = !1);
    } else {
      U = s.stateNode, Do(a, s), oe = s.memoizedProps, Ie = s.type === s.elementType ? oe : Xr(s.type, oe), U.props = Ie, ut = s.pendingProps, lt = U.context, le = m.contextType, typeof le == "object" && le !== null ? le = mo(le) : (le = Jn(m) ? Nr : Kt.current, le = da(s, le));
      var Et = m.getDerivedStateFromProps;
      (ct = typeof Et == "function" || typeof U.getSnapshotBeforeUpdate == "function") || typeof U.UNSAFE_componentWillReceiveProps != "function" && typeof U.componentWillReceiveProps != "function" || (oe !== ut || lt !== le) && Qg(s, U, y, le), ds = !1, lt = s.memoizedState, U.state = lt, fs(s, y, U, T);
      var Pt = s.memoizedState;
      oe !== ut || lt !== Pt || co.current || ds ? (typeof Et == "function" && (Dm(s, m, Et, y), Pt = s.memoizedState), (Ie = ds || qg(s, m, Ie, y, lt, Pt, le) || !1) ? (ct || typeof U.UNSAFE_componentWillUpdate != "function" && typeof U.componentWillUpdate != "function" || (typeof U.componentWillUpdate == "function" && U.componentWillUpdate(y, Pt, le), typeof U.UNSAFE_componentWillUpdate == "function" && U.UNSAFE_componentWillUpdate(y, Pt, le)), typeof U.componentDidUpdate == "function" && (s.flags |= 4), typeof U.getSnapshotBeforeUpdate == "function" && (s.flags |= 1024)) : (typeof U.componentDidUpdate != "function" || oe === a.memoizedProps && lt === a.memoizedState || (s.flags |= 4), typeof U.getSnapshotBeforeUpdate != "function" || oe === a.memoizedProps && lt === a.memoizedState || (s.flags |= 1024), s.memoizedProps = y, s.memoizedState = Pt), U.props = y, U.state = Pt, U.context = le, y = Ie) : (typeof U.componentDidUpdate != "function" || oe === a.memoizedProps && lt === a.memoizedState || (s.flags |= 4), typeof U.getSnapshotBeforeUpdate != "function" || oe === a.memoizedProps && lt === a.memoizedState || (s.flags |= 1024), y = !1);
    }
    return oy(a, s, m, y, N, T);
  }
  function oy(a, s, m, y, T, N) {
    an(a, s);
    var U = (s.flags & 128) !== 0;
    if (!y && !U)
      return T && jg(s, m, !1), er(a, s, N);
    y = s.stateNode, K0.current = s;
    var oe = U && typeof m.getDerivedStateFromError != "function" ? null : y.render();
    return s.flags |= 1, a !== null && U ? (s.child = ec(s, a.child, null, N), s.child = ec(s, null, oe, N)) : Mo(a, s, oe, N), s.memoizedState = y.state, T && jg(s, m, !0), s.child;
  }
  function ry(a) {
    var s = a.stateNode;
    s.pendingContext ? ss(a, s.pendingContext, s.pendingContext !== s.context) : s.context && ss(a, s.context, !1), Mm(a, s.containerInfo);
  }
  function bp(a, s, m, y, T) {
    return oo(), Tm(T), s.flags |= 256, Mo(a, s, m, y), s.child;
  }
  var ll = { dehydrated: null, treeContext: null, retryLane: 0 };
  function _m(a) {
    return { baseLanes: a, cachePool: null, transitions: null };
  }
  function Bm(a, s, m) {
    var y = s.pendingProps, T = Ht.current, N = !1, U = (s.flags & 128) !== 0, oe;
    if ((oe = U) || (oe = a !== null && a.memoizedState === null ? !1 : (T & 2) !== 0), oe ? (N = !0, s.flags &= -129) : (a === null || a.memoizedState !== null) && (T |= 1), En(Ht, T & 1), a === null)
      return Wd(s), a = s.memoizedState, a !== null && (a = a.dehydrated, a !== null) ? (s.mode & 1 ? a.data === "$!" ? s.lanes = 8 : s.lanes = 1073741824 : s.lanes = 1, null) : (U = y.children, a = y.fallback, N ? (y = s.mode, N = s.child, U = { mode: "hidden", children: U }, !(y & 1) && N !== null ? (N.childLanes = 0, N.pendingProps = U) : N = Vu(U, y, 0, null), a = vl(a, y, m, null), N.return = s, a.return = s, N.sibling = a, s.child = N, s.child.memoizedState = _m(m), s.memoizedState = ll, a) : zm(s, U));
    if (T = a.memoizedState, T !== null && (oe = T.dehydrated, oe !== null))
      return Q0(a, s, U, y, oe, T, m);
    if (N) {
      N = y.fallback, U = s.mode, T = a.child, oe = T.sibling;
      var le = { mode: "hidden", children: y.children };
      return !(U & 1) && s.child !== T ? (y = s.child, y.childLanes = 0, y.pendingProps = le, s.deletions = null) : (y = xs(T, le), y.subtreeFlags = T.subtreeFlags & 14680064), oe !== null ? N = xs(oe, N) : (N = vl(N, U, m, null), N.flags |= 2), N.return = s, y.return = s, y.sibling = N, s.child = y, y = N, N = s.child, U = a.child.memoizedState, U = U === null ? _m(m) : { baseLanes: U.baseLanes | m, cachePool: null, transitions: U.transitions }, N.memoizedState = U, N.childLanes = a.childLanes & ~m, s.memoizedState = ll, y;
    }
    return N = a.child, a = N.sibling, y = xs(N, { mode: "visible", children: y.children }), !(s.mode & 1) && (y.lanes = m), y.return = s, y.sibling = null, a !== null && (m = s.deletions, m === null ? (s.deletions = [a], s.flags |= 16) : m.push(a)), s.child = y, s.memoizedState = null, y;
  }
  function zm(a, s) {
    return s = Vu({ mode: "visible", children: s }, a.mode, 0, null), s.return = a, a.child = s;
  }
  function sc(a, s, m, y) {
    return y !== null && Tm(y), ec(s, a.child, null, m), a = zm(s, s.pendingProps.children), a.flags |= 2, s.memoizedState = null, a;
  }
  function Q0(a, s, m, y, T, N, U) {
    if (m)
      return s.flags & 256 ? (s.flags &= -257, y = Du(Error(i(422))), sc(a, s, U, y)) : s.memoizedState !== null ? (s.child = a.child, s.flags |= 128, null) : (N = y.fallback, T = s.mode, y = Vu({ mode: "visible", children: y.children }, T, 0, null), N = vl(N, T, U, null), N.flags |= 2, y.return = s, N.return = s, y.sibling = N, s.child = y, s.mode & 1 && ec(s, a.child, null, U), s.child.memoizedState = _m(U), s.memoizedState = ll, N);
    if (!(s.mode & 1))
      return sc(a, s, U, null);
    if (T.data === "$!") {
      if (y = T.nextSibling && T.nextSibling.dataset, y)
        var oe = y.dgst;
      return y = oe, N = Error(i(419)), y = Du(N, y, void 0), sc(a, s, U, y);
    }
    if (oe = (U & a.childLanes) !== 0, Co || oe) {
      if (y = ao, y !== null) {
        switch (U & -U) {
          case 4:
            T = 2;
            break;
          case 16:
            T = 8;
            break;
          case 64:
          case 128:
          case 256:
          case 512:
          case 1024:
          case 2048:
          case 4096:
          case 8192:
          case 16384:
          case 32768:
          case 65536:
          case 131072:
          case 262144:
          case 524288:
          case 1048576:
          case 2097152:
          case 4194304:
          case 8388608:
          case 16777216:
          case 33554432:
          case 67108864:
            T = 32;
            break;
          case 536870912:
            T = 268435456;
            break;
          default:
            T = 0;
        }
        T = T & (y.suspendedLanes | U) ? 0 : T, T !== 0 && T !== N.retryLane && (N.retryLane = T, Ri(a, T), vr(y, a, T, -1));
      }
      return Xm(), y = Du(Error(i(421))), sc(a, s, U, y);
    }
    return T.data === "$?" ? (s.flags |= 128, s.child = a.child, s = nx.bind(null, a), T._reactRetry = s, null) : (a = N.treeContext, Lr = _a(T.nextSibling), Qr = s, Yn = !0, ma = null, a !== null && (Ir[dr++] = Zo, Ir[dr++] = Ei, Ir[dr++] = fa, Zo = a.id, Ei = a.overflow, fa = s), s = zm(s, y.children), s.flags |= 4096, s);
  }
  function Vm(a, s, m) {
    a.lanes |= s;
    var y = a.alternate;
    y !== null && (y.lanes |= s), Ho(a.return, s, m);
  }
  function Cp(a, s, m, y, T) {
    var N = a.memoizedState;
    N === null ? a.memoizedState = { isBackwards: s, rendering: null, renderingStartTime: 0, last: y, tail: m, tailMode: T } : (N.isBackwards = s, N.rendering = null, N.renderingStartTime = 0, N.last = y, N.tail = m, N.tailMode = T);
  }
  function Fm(a, s, m) {
    var y = s.pendingProps, T = y.revealOrder, N = y.tail;
    if (Mo(a, s, y.children, m), y = Ht.current, y & 2)
      y = y & 1 | 2, s.flags |= 128;
    else {
      if (a !== null && a.flags & 128)
        e:
          for (a = s.child; a !== null; ) {
            if (a.tag === 13)
              a.memoizedState !== null && Vm(a, m, s);
            else if (a.tag === 19)
              Vm(a, m, s);
            else if (a.child !== null) {
              a.child.return = a, a = a.child;
              continue;
            }
            if (a === s)
              break e;
            for (; a.sibling === null; ) {
              if (a.return === null || a.return === s)
                break e;
              a = a.return;
            }
            a.sibling.return = a.return, a = a.sibling;
          }
      y &= 1;
    }
    if (En(Ht, y), !(s.mode & 1))
      s.memoizedState = null;
    else
      switch (T) {
        case "forwards":
          for (m = s.child, T = null; m !== null; )
            a = m.alternate, a !== null && ro(a) === null && (T = m), m = m.sibling;
          m = T, m === null ? (T = s.child, s.child = null) : (T = m.sibling, m.sibling = null), Cp(s, !1, T, m, N);
          break;
        case "backwards":
          for (m = null, T = s.child, s.child = null; T !== null; ) {
            if (a = T.alternate, a !== null && ro(a) === null) {
              s.child = T;
              break;
            }
            a = T.sibling, T.sibling = m, m = T, T = a;
          }
          Cp(s, !0, m, null, N);
          break;
        case "together":
          Cp(s, !1, null, null, void 0);
          break;
        default:
          s.memoizedState = null;
      }
    return s.child;
  }
  function pr(a, s) {
    !(s.mode & 1) && a !== null && (a.alternate = null, s.alternate = null, s.flags |= 2);
  }
  function er(a, s, m) {
    if (a !== null && (s.dependencies = a.dependencies), Ni |= s.lanes, !(m & s.childLanes))
      return null;
    if (a !== null && s.child !== a.child)
      throw Error(i(153));
    if (s.child !== null) {
      for (a = s.child, m = xs(a, a.pendingProps), s.child = m, m.return = s; a.sibling !== null; )
        a = a.sibling, m = m.sibling = xs(a, a.pendingProps), m.return = s;
      m.sibling = null;
    }
    return s.child;
  }
  function Di(a, s, m) {
    switch (s.tag) {
      case 3:
        ry(s), oo();
        break;
      case 5:
        Ut(s);
        break;
      case 1:
        Jn(s.type) && jd(s);
        break;
      case 4:
        Mm(s, s.stateNode.containerInfo);
        break;
      case 10:
        var y = s.type._context, T = s.memoizedProps.value;
        En(Ka, y._currentValue), y._currentValue = T;
        break;
      case 13:
        if (y = s.memoizedState, y !== null)
          return y.dehydrated !== null ? (En(Ht, Ht.current & 1), s.flags |= 128, null) : m & s.child.childLanes ? Bm(a, s, m) : (En(Ht, Ht.current & 1), a = er(a, s, m), a !== null ? a.sibling : null);
        En(Ht, Ht.current & 1);
        break;
      case 19:
        if (y = (m & s.childLanes) !== 0, a.flags & 128) {
          if (y)
            return Fm(a, s, m);
          s.flags |= 128;
        }
        if (T = s.memoizedState, T !== null && (T.rendering = null, T.tail = null, T.lastEffect = null), En(Ht, Ht.current), y)
          break;
        return null;
      case 22:
      case 23:
        return s.lanes = 0, sl(a, s, m);
    }
    return er(a, s, m);
  }
  var Nu, cl, ga, No;
  Nu = function(a, s) {
    for (var m = s.child; m !== null; ) {
      if (m.tag === 5 || m.tag === 6)
        a.appendChild(m.stateNode);
      else if (m.tag !== 4 && m.child !== null) {
        m.child.return = m, m = m.child;
        continue;
      }
      if (m === s)
        break;
      for (; m.sibling === null; ) {
        if (m.return === null || m.return === s)
          return;
        m = m.return;
      }
      m.sibling.return = m.return, m = m.sibling;
    }
  }, cl = function() {
  }, ga = function(a, s, m, y) {
    var T = a.memoizedProps;
    if (T !== y) {
      a = s.stateNode, Js(Ba.current);
      var N = null;
      switch (m) {
        case "input":
          T = ae(a, T), y = ae(a, y), N = [];
          break;
        case "select":
          T = se({}, T, { value: void 0 }), y = se({}, y, { value: void 0 }), N = [];
          break;
        case "textarea":
          T = st(a, T), y = st(a, y), N = [];
          break;
        default:
          typeof T.onClick != "function" && typeof y.onClick == "function" && (a.onclick = Fd);
      }
      et(m, y);
      var U;
      m = null;
      for (Ie in T)
        if (!y.hasOwnProperty(Ie) && T.hasOwnProperty(Ie) && T[Ie] != null)
          if (Ie === "style") {
            var oe = T[Ie];
            for (U in oe)
              oe.hasOwnProperty(U) && (m || (m = {}), m[U] = "");
          } else
            Ie !== "dangerouslySetInnerHTML" && Ie !== "children" && Ie !== "suppressContentEditableWarning" && Ie !== "suppressHydrationWarning" && Ie !== "autoFocus" && (d.hasOwnProperty(Ie) ? N || (N = []) : (N = N || []).push(Ie, null));
      for (Ie in y) {
        var le = y[Ie];
        if (oe = T != null ? T[Ie] : void 0, y.hasOwnProperty(Ie) && le !== oe && (le != null || oe != null))
          if (Ie === "style")
            if (oe) {
              for (U in oe)
                !oe.hasOwnProperty(U) || le && le.hasOwnProperty(U) || (m || (m = {}), m[U] = "");
              for (U in le)
                le.hasOwnProperty(U) && oe[U] !== le[U] && (m || (m = {}), m[U] = le[U]);
            } else
              m || (N || (N = []), N.push(
                Ie,
                m
              )), m = le;
          else
            Ie === "dangerouslySetInnerHTML" ? (le = le ? le.__html : void 0, oe = oe ? oe.__html : void 0, le != null && oe !== le && (N = N || []).push(Ie, le)) : Ie === "children" ? typeof le != "string" && typeof le != "number" || (N = N || []).push(Ie, "" + le) : Ie !== "suppressContentEditableWarning" && Ie !== "suppressHydrationWarning" && (d.hasOwnProperty(Ie) ? (le != null && Ie === "onScroll" && Fn("scroll", a), N || oe === le || (N = [])) : (N = N || []).push(Ie, le));
      }
      m && (N = N || []).push("style", m);
      var Ie = N;
      (s.updateQueue = Ie) && (s.flags |= 4);
    }
  }, No = function(a, s, m, y) {
    m !== y && (s.flags |= 4);
  };
  function Pu(a, s) {
    if (!Yn)
      switch (a.tailMode) {
        case "hidden":
          s = a.tail;
          for (var m = null; s !== null; )
            s.alternate !== null && (m = s), s = s.sibling;
          m === null ? a.tail = null : m.sibling = null;
          break;
        case "collapsed":
          m = a.tail;
          for (var y = null; m !== null; )
            m.alternate !== null && (y = m), m = m.sibling;
          y === null ? s || a.tail === null ? a.tail = null : a.tail.sibling = null : y.sibling = null;
      }
  }
  function fr(a) {
    var s = a.alternate !== null && a.alternate.child === a.child, m = 0, y = 0;
    if (s)
      for (var T = a.child; T !== null; )
        m |= T.lanes | T.childLanes, y |= T.subtreeFlags & 14680064, y |= T.flags & 14680064, T.return = a, T = T.sibling;
    else
      for (T = a.child; T !== null; )
        m |= T.lanes | T.childLanes, y |= T.subtreeFlags, y |= T.flags, T.return = a, T = T.sibling;
    return a.subtreeFlags |= y, a.childLanes = m, s;
  }
  function X0(a, s, m) {
    var y = s.pendingProps;
    switch (xm(s), s.tag) {
      case 2:
      case 16:
      case 15:
      case 0:
      case 11:
      case 7:
      case 8:
      case 12:
      case 9:
      case 14:
        return fr(s), null;
      case 1:
        return Jn(s.type) && pa(), fr(s), null;
      case 3:
        return y = s.stateNode, ms(), wn(co), wn(Kt), Jd(), y.pendingContext && (y.context = y.pendingContext, y.pendingContext = null), (a === null || a.child === null) && (Yd(s) ? s.flags |= 4 : a === null || a.memoizedState.isDehydrated && !(s.flags & 256) || (s.flags |= 1024, ma !== null && (zu(ma), ma = null))), cl(a, s), fr(s), null;
      case 5:
        un(s);
        var T = Js(tc.current);
        if (m = s.type, a !== null && s.stateNode != null)
          ga(a, s, m, y, T), a.ref !== s.ref && (s.flags |= 512, s.flags |= 2097152);
        else {
          if (!y) {
            if (s.stateNode === null)
              throw Error(i(166));
            return fr(s), null;
          }
          if (a = Js(Ba.current), Yd(s)) {
            y = s.stateNode, m = s.type;
            var N = s.memoizedProps;
            switch (y[Ga] = s, y[Qs] = N, a = (s.mode & 1) !== 0, m) {
              case "dialog":
                Fn("cancel", y), Fn("close", y);
                break;
              case "iframe":
              case "object":
              case "embed":
                Fn("load", y);
                break;
              case "video":
              case "audio":
                for (T = 0; T < hu.length; T++)
                  Fn(hu[T], y);
                break;
              case "source":
                Fn("error", y);
                break;
              case "img":
              case "image":
              case "link":
                Fn(
                  "error",
                  y
                ), Fn("load", y);
                break;
              case "details":
                Fn("toggle", y);
                break;
              case "input":
                $e(y, N), Fn("invalid", y);
                break;
              case "select":
                y._wrapperState = { wasMultiple: !!N.multiple }, Fn("invalid", y);
                break;
              case "textarea":
                gt(y, N), Fn("invalid", y);
            }
            et(m, N), T = null;
            for (var U in N)
              if (N.hasOwnProperty(U)) {
                var oe = N[U];
                U === "children" ? typeof oe == "string" ? y.textContent !== oe && (N.suppressHydrationWarning !== !0 && Vd(y.textContent, oe, a), T = ["children", oe]) : typeof oe == "number" && y.textContent !== "" + oe && (N.suppressHydrationWarning !== !0 && Vd(
                  y.textContent,
                  oe,
                  a
                ), T = ["children", "" + oe]) : d.hasOwnProperty(U) && oe != null && U === "onScroll" && Fn("scroll", y);
              }
            switch (m) {
              case "input":
                Oe(y), Be(y, N, !0);
                break;
              case "textarea":
                Oe(y), _t(y);
                break;
              case "select":
              case "option":
                break;
              default:
                typeof N.onClick == "function" && (y.onclick = Fd);
            }
            y = T, s.updateQueue = y, y !== null && (s.flags |= 4);
          } else {
            U = T.nodeType === 9 ? T : T.ownerDocument, a === "http://www.w3.org/1999/xhtml" && (a = Zt(m)), a === "http://www.w3.org/1999/xhtml" ? m === "script" ? (a = U.createElement("div"), a.innerHTML = "<script><\/script>", a = a.removeChild(a.firstChild)) : typeof y.is == "string" ? a = U.createElement(m, { is: y.is }) : (a = U.createElement(m), m === "select" && (U = a, y.multiple ? U.multiple = !0 : y.size && (U.size = y.size))) : a = U.createElementNS(a, m), a[Ga] = s, a[Qs] = y, Nu(a, s, !1, !1), s.stateNode = a;
            e: {
              switch (U = pt(m, y), m) {
                case "dialog":
                  Fn("cancel", a), Fn("close", a), T = y;
                  break;
                case "iframe":
                case "object":
                case "embed":
                  Fn("load", a), T = y;
                  break;
                case "video":
                case "audio":
                  for (T = 0; T < hu.length; T++)
                    Fn(hu[T], a);
                  T = y;
                  break;
                case "source":
                  Fn("error", a), T = y;
                  break;
                case "img":
                case "image":
                case "link":
                  Fn(
                    "error",
                    a
                  ), Fn("load", a), T = y;
                  break;
                case "details":
                  Fn("toggle", a), T = y;
                  break;
                case "input":
                  $e(a, y), T = ae(a, y), Fn("invalid", a);
                  break;
                case "option":
                  T = y;
                  break;
                case "select":
                  a._wrapperState = { wasMultiple: !!y.multiple }, T = se({}, y, { value: void 0 }), Fn("invalid", a);
                  break;
                case "textarea":
                  gt(a, y), T = st(a, y), Fn("invalid", a);
                  break;
                default:
                  T = y;
              }
              et(m, T), oe = T;
              for (N in oe)
                if (oe.hasOwnProperty(N)) {
                  var le = oe[N];
                  N === "style" ? nt(a, le) : N === "dangerouslySetInnerHTML" ? (le = le ? le.__html : void 0, le != null && xe(a, le)) : N === "children" ? typeof le == "string" ? (m !== "textarea" || le !== "") && ot(a, le) : typeof le == "number" && ot(a, "" + le) : N !== "suppressContentEditableWarning" && N !== "suppressHydrationWarning" && N !== "autoFocus" && (d.hasOwnProperty(N) ? le != null && N === "onScroll" && Fn("scroll", a) : le != null && A(a, N, le, U));
                }
              switch (m) {
                case "input":
                  Oe(a), Be(a, y, !1);
                  break;
                case "textarea":
                  Oe(a), _t(a);
                  break;
                case "option":
                  y.value != null && a.setAttribute("value", "" + de(y.value));
                  break;
                case "select":
                  a.multiple = !!y.multiple, N = y.value, N != null ? Ve(a, !!y.multiple, N, !1) : y.defaultValue != null && Ve(
                    a,
                    !!y.multiple,
                    y.defaultValue,
                    !0
                  );
                  break;
                default:
                  typeof T.onClick == "function" && (a.onclick = Fd);
              }
              switch (m) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                  y = !!y.autoFocus;
                  break e;
                case "img":
                  y = !0;
                  break e;
                default:
                  y = !1;
              }
            }
            y && (s.flags |= 4);
          }
          s.ref !== null && (s.flags |= 512, s.flags |= 2097152);
        }
        return fr(s), null;
      case 6:
        if (a && s.stateNode != null)
          No(a, s, a.memoizedProps, y);
        else {
          if (typeof y != "string" && s.stateNode === null)
            throw Error(i(166));
          if (m = Js(tc.current), Js(Ba.current), Yd(s)) {
            if (y = s.stateNode, m = s.memoizedProps, y[Ga] = s, (N = y.nodeValue !== m) && (a = Qr, a !== null))
              switch (a.tag) {
                case 3:
                  Vd(y.nodeValue, m, (a.mode & 1) !== 0);
                  break;
                case 5:
                  a.memoizedProps.suppressHydrationWarning !== !0 && Vd(y.nodeValue, m, (a.mode & 1) !== 0);
              }
            N && (s.flags |= 4);
          } else
            y = (m.nodeType === 9 ? m : m.ownerDocument).createTextNode(y), y[Ga] = s, s.stateNode = y;
        }
        return fr(s), null;
      case 13:
        if (wn(Ht), y = s.memoizedState, a === null || a.memoizedState !== null && a.memoizedState.dehydrated !== null) {
          if (Yn && Lr !== null && s.mode & 1 && !(s.flags & 128))
            Wg(), oo(), s.flags |= 98560, N = !1;
          else if (N = Yd(s), y !== null && y.dehydrated !== null) {
            if (a === null) {
              if (!N)
                throw Error(i(318));
              if (N = s.memoizedState, N = N !== null ? N.dehydrated : null, !N)
                throw Error(i(317));
              N[Ga] = s;
            } else
              oo(), !(s.flags & 128) && (s.memoizedState = null), s.flags |= 4;
            fr(s), N = !1;
          } else
            ma !== null && (zu(ma), ma = null), N = !0;
          if (!N)
            return s.flags & 65536 ? s : null;
        }
        return s.flags & 128 ? (s.lanes = m, s) : (y = y !== null, y !== (a !== null && a.memoizedState !== null) && y && (s.child.flags |= 8192, s.mode & 1 && (a === null || Ht.current & 1 ? $o === 0 && ($o = 3) : Xm())), s.updateQueue !== null && (s.flags |= 4), fr(s), null);
      case 4:
        return ms(), cl(a, s), a === null && Ql(s.stateNode.containerInfo), fr(s), null;
      case 10:
        return us(s.type._context), fr(s), null;
      case 17:
        return Jn(s.type) && pa(), fr(s), null;
      case 19:
        if (wn(Ht), N = s.memoizedState, N === null)
          return fr(s), null;
        if (y = (s.flags & 128) !== 0, U = N.rendering, U === null)
          if (y)
            Pu(N, !1);
          else {
            if ($o !== 0 || a !== null && a.flags & 128)
              for (a = s.child; a !== null; ) {
                if (U = ro(a), U !== null) {
                  for (s.flags |= 128, Pu(N, !1), y = U.updateQueue, y !== null && (s.updateQueue = y, s.flags |= 4), s.subtreeFlags = 0, y = m, m = s.child; m !== null; )
                    N = m, a = y, N.flags &= 14680066, U = N.alternate, U === null ? (N.childLanes = 0, N.lanes = a, N.child = null, N.subtreeFlags = 0, N.memoizedProps = null, N.memoizedState = null, N.updateQueue = null, N.dependencies = null, N.stateNode = null) : (N.childLanes = U.childLanes, N.lanes = U.lanes, N.child = U.child, N.subtreeFlags = 0, N.deletions = null, N.memoizedProps = U.memoizedProps, N.memoizedState = U.memoizedState, N.updateQueue = U.updateQueue, N.type = U.type, a = U.dependencies, N.dependencies = a === null ? null : { lanes: a.lanes, firstContext: a.firstContext }), m = m.sibling;
                  return En(Ht, Ht.current & 1 | 2), s.child;
                }
                a = a.sibling;
              }
            N.tail !== null && lo() > mc && (s.flags |= 128, y = !0, Pu(N, !1), s.lanes = 4194304);
          }
        else {
          if (!y)
            if (a = ro(U), a !== null) {
              if (s.flags |= 128, y = !0, m = a.updateQueue, m !== null && (s.updateQueue = m, s.flags |= 4), Pu(N, !0), N.tail === null && N.tailMode === "hidden" && !U.alternate && !Yn)
                return fr(s), null;
            } else
              2 * lo() - N.renderingStartTime > mc && m !== 1073741824 && (s.flags |= 128, y = !0, Pu(N, !1), s.lanes = 4194304);
          N.isBackwards ? (U.sibling = s.child, s.child = U) : (m = N.last, m !== null ? m.sibling = U : s.child = U, N.last = U);
        }
        return N.tail !== null ? (s = N.tail, N.rendering = s, N.tail = s.sibling, N.renderingStartTime = lo(), s.sibling = null, m = Ht.current, En(Ht, y ? m & 1 | 2 : m & 1), s) : (fr(s), null);
      case 22:
      case 23:
        return Qm(), y = s.memoizedState !== null, a !== null && a.memoizedState !== null !== y && (s.flags |= 8192), y && s.mode & 1 ? Jr & 1073741824 && (fr(s), s.subtreeFlags & 6 && (s.flags |= 8192)) : fr(s), null;
      case 24:
        return null;
      case 25:
        return null;
    }
    throw Error(i(156, s.tag));
  }
  function jm(a, s) {
    switch (xm(s), s.tag) {
      case 1:
        return Jn(s.type) && pa(), a = s.flags, a & 65536 ? (s.flags = a & -65537 | 128, s) : null;
      case 3:
        return ms(), wn(co), wn(Kt), Jd(), a = s.flags, a & 65536 && !(a & 128) ? (s.flags = a & -65537 | 128, s) : null;
      case 5:
        return un(s), null;
      case 13:
        if (wn(Ht), a = s.memoizedState, a !== null && a.dehydrated !== null) {
          if (s.alternate === null)
            throw Error(i(340));
          oo();
        }
        return a = s.flags, a & 65536 ? (s.flags = a & -65537 | 128, s) : null;
      case 19:
        return wn(Ht), null;
      case 4:
        return ms(), null;
      case 10:
        return us(s.type._context), null;
      case 22:
      case 23:
        return Qm(), null;
      case 24:
        return null;
      default:
        return null;
    }
  }
  var $u = !1, Po = !1, ay = typeof WeakSet == "function" ? WeakSet : Set, Mt = null;
  function lc(a, s) {
    var m = a.ref;
    if (m !== null)
      if (typeof m == "function")
        try {
          m(null);
        } catch (y) {
          po(a, s, y);
        }
      else
        m.current = null;
  }
  function Iu(a, s, m) {
    try {
      m();
    } catch (y) {
      po(a, s, y);
    }
  }
  var iy = !1;
  function sy(a, s) {
    if (fm = Us, a = Ld(), xi(a)) {
      if ("selectionStart" in a)
        var m = { start: a.selectionStart, end: a.selectionEnd };
      else
        e: {
          m = (m = a.ownerDocument) && m.defaultView || window;
          var y = m.getSelection && m.getSelection();
          if (y && y.rangeCount !== 0) {
            m = y.anchorNode;
            var T = y.anchorOffset, N = y.focusNode;
            y = y.focusOffset;
            try {
              m.nodeType, N.nodeType;
            } catch {
              m = null;
              break e;
            }
            var U = 0, oe = -1, le = -1, Ie = 0, ct = 0, ut = a, lt = null;
            t:
              for (; ; ) {
                for (var Et; ut !== m || T !== 0 && ut.nodeType !== 3 || (oe = U + T), ut !== N || y !== 0 && ut.nodeType !== 3 || (le = U + y), ut.nodeType === 3 && (U += ut.nodeValue.length), (Et = ut.firstChild) !== null; )
                  lt = ut, ut = Et;
                for (; ; ) {
                  if (ut === a)
                    break t;
                  if (lt === m && ++Ie === T && (oe = U), lt === N && ++ct === y && (le = U), (Et = ut.nextSibling) !== null)
                    break;
                  ut = lt, lt = ut.parentNode;
                }
                ut = Et;
              }
            m = oe === -1 || le === -1 ? null : { start: oe, end: le };
          } else
            m = null;
        }
      m = m || { start: 0, end: 0 };
    } else
      m = null;
    for (qs = { focusedElem: a, selectionRange: m }, Us = !1, Mt = s; Mt !== null; )
      if (s = Mt, a = s.child, (s.subtreeFlags & 1028) !== 0 && a !== null)
        a.return = s, Mt = a;
      else
        for (; Mt !== null; ) {
          s = Mt;
          try {
            var Pt = s.alternate;
            if (s.flags & 1024)
              switch (s.tag) {
                case 0:
                case 11:
                case 15:
                  break;
                case 1:
                  if (Pt !== null) {
                    var Lt = Pt.memoizedProps, ho = Pt.memoizedState, we = s.stateNode, me = we.getSnapshotBeforeUpdate(s.elementType === s.type ? Lt : Xr(s.type, Lt), ho);
                    we.__reactInternalSnapshotBeforeUpdate = me;
                  }
                  break;
                case 3:
                  var ke = s.stateNode.containerInfo;
                  ke.nodeType === 1 ? ke.textContent = "" : ke.nodeType === 9 && ke.documentElement && ke.removeChild(ke.documentElement);
                  break;
                case 5:
                case 6:
                case 4:
                case 17:
                  break;
                default:
                  throw Error(i(163));
              }
          } catch (vt) {
            po(s, s.return, vt);
          }
          if (a = s.sibling, a !== null) {
            a.return = s.return, Mt = a;
            break;
          }
          Mt = s.return;
        }
    return Pt = iy, iy = !1, Pt;
  }
  function Lu(a, s, m) {
    var y = s.updateQueue;
    if (y = y !== null ? y.lastEffect : null, y !== null) {
      var T = y = y.next;
      do {
        if ((T.tag & a) === a) {
          var N = T.destroy;
          T.destroy = void 0, N !== void 0 && Iu(s, m, N);
        }
        T = T.next;
      } while (T !== y);
    }
  }
  function Au(a, s) {
    if (s = s.updateQueue, s = s !== null ? s.lastEffect : null, s !== null) {
      var m = s = s.next;
      do {
        if ((m.tag & a) === a) {
          var y = m.create;
          m.destroy = y();
        }
        m = m.next;
      } while (m !== s);
    }
  }
  function Um(a) {
    var s = a.ref;
    if (s !== null) {
      var m = a.stateNode;
      switch (a.tag) {
        case 5:
          a = m;
          break;
        default:
          a = m;
      }
      typeof s == "function" ? s(a) : s.current = a;
    }
  }
  function Hm(a) {
    var s = a.alternate;
    s !== null && (a.alternate = null, Hm(s)), a.child = null, a.deletions = null, a.sibling = null, a.tag === 5 && (s = a.stateNode, s !== null && (delete s[Ga], delete s[Qs], delete s[vm], delete s[H0], delete s[gm])), a.stateNode = null, a.return = null, a.dependencies = null, a.memoizedProps = null, a.memoizedState = null, a.pendingProps = null, a.stateNode = null, a.updateQueue = null;
  }
  function ly(a) {
    return a.tag === 5 || a.tag === 3 || a.tag === 4;
  }
  function xp(a) {
    e:
      for (; ; ) {
        for (; a.sibling === null; ) {
          if (a.return === null || ly(a.return))
            return null;
          a = a.return;
        }
        for (a.sibling.return = a.return, a = a.sibling; a.tag !== 5 && a.tag !== 6 && a.tag !== 18; ) {
          if (a.flags & 2 || a.child === null || a.tag === 4)
            continue e;
          a.child.return = a, a = a.child;
        }
        if (!(a.flags & 2))
          return a.stateNode;
      }
  }
  function cc(a, s, m) {
    var y = a.tag;
    if (y === 5 || y === 6)
      a = a.stateNode, s ? m.nodeType === 8 ? m.parentNode.insertBefore(a, s) : m.insertBefore(a, s) : (m.nodeType === 8 ? (s = m.parentNode, s.insertBefore(a, m)) : (s = m, s.appendChild(a)), m = m._reactRootContainer, m != null || s.onclick !== null || (s.onclick = Fd));
    else if (y !== 4 && (a = a.child, a !== null))
      for (cc(a, s, m), a = a.sibling; a !== null; )
        cc(a, s, m), a = a.sibling;
  }
  function Xa(a, s, m) {
    var y = a.tag;
    if (y === 5 || y === 6)
      a = a.stateNode, s ? m.insertBefore(a, s) : m.appendChild(a);
    else if (y !== 4 && (a = a.child, a !== null))
      for (Xa(a, s, m), a = a.sibling; a !== null; )
        Xa(a, s, m), a = a.sibling;
  }
  var eo = null, Wo = !1;
  function ya(a, s, m) {
    for (m = m.child; m !== null; )
      uc(a, s, m), m = m.sibling;
  }
  function uc(a, s, m) {
    if (Pa && typeof Pa.onCommitFiberUnmount == "function")
      try {
        Pa.onCommitFiberUnmount(Jc, m);
      } catch {
      }
    switch (m.tag) {
      case 5:
        Po || lc(m, s);
      case 6:
        var y = eo, T = Wo;
        eo = null, ya(a, s, m), eo = y, Wo = T, eo !== null && (Wo ? (a = eo, m = m.stateNode, a.nodeType === 8 ? a.parentNode.removeChild(m) : a.removeChild(m)) : eo.removeChild(m.stateNode));
        break;
      case 18:
        eo !== null && (Wo ? (a = eo, m = m.stateNode, a.nodeType === 8 ? rs(a.parentNode, m) : a.nodeType === 1 && rs(a, m), ru(a)) : rs(eo, m.stateNode));
        break;
      case 4:
        y = eo, T = Wo, eo = m.stateNode.containerInfo, Wo = !0, ya(a, s, m), eo = y, Wo = T;
        break;
      case 0:
      case 11:
      case 14:
      case 15:
        if (!Po && (y = m.updateQueue, y !== null && (y = y.lastEffect, y !== null))) {
          T = y = y.next;
          do {
            var N = T, U = N.destroy;
            N = N.tag, U !== void 0 && (N & 2 || N & 4) && Iu(m, s, U), T = T.next;
          } while (T !== y);
        }
        ya(a, s, m);
        break;
      case 1:
        if (!Po && (lc(m, s), y = m.stateNode, typeof y.componentWillUnmount == "function"))
          try {
            y.props = m.memoizedProps, y.state = m.memoizedState, y.componentWillUnmount();
          } catch (oe) {
            po(m, s, oe);
          }
        ya(a, s, m);
        break;
      case 21:
        ya(a, s, m);
        break;
      case 22:
        m.mode & 1 ? (Po = (y = Po) || m.memoizedState !== null, ya(a, s, m), Po = y) : ya(a, s, m);
        break;
      default:
        ya(a, s, m);
    }
  }
  function Mi(a) {
    var s = a.updateQueue;
    if (s !== null) {
      a.updateQueue = null;
      var m = a.stateNode;
      m === null && (m = a.stateNode = new ay()), s.forEach(function(y) {
        var T = ox.bind(null, a, y);
        m.has(y) || (m.add(y), y.then(T, T));
      });
    }
  }
  function za(a, s) {
    var m = s.deletions;
    if (m !== null)
      for (var y = 0; y < m.length; y++) {
        var T = m[y];
        try {
          var N = a, U = s, oe = U;
          e:
            for (; oe !== null; ) {
              switch (oe.tag) {
                case 5:
                  eo = oe.stateNode, Wo = !1;
                  break e;
                case 3:
                  eo = oe.stateNode.containerInfo, Wo = !0;
                  break e;
                case 4:
                  eo = oe.stateNode.containerInfo, Wo = !0;
                  break e;
              }
              oe = oe.return;
            }
          if (eo === null)
            throw Error(i(160));
          uc(N, U, T), eo = null, Wo = !1;
          var le = T.alternate;
          le !== null && (le.return = null), T.return = null;
        } catch (Ie) {
          po(T, s, Ie);
        }
      }
    if (s.subtreeFlags & 12854)
      for (s = s.child; s !== null; )
        cy(s, a), s = s.sibling;
  }
  function cy(a, s) {
    var m = a.alternate, y = a.flags;
    switch (a.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        if (za(s, a), Za(a), y & 4) {
          try {
            Lu(3, a, a.return), Au(3, a);
          } catch (Lt) {
            po(a, a.return, Lt);
          }
          try {
            Lu(5, a, a.return);
          } catch (Lt) {
            po(a, a.return, Lt);
          }
        }
        break;
      case 1:
        za(s, a), Za(a), y & 512 && m !== null && lc(m, m.return);
        break;
      case 5:
        if (za(s, a), Za(a), y & 512 && m !== null && lc(m, m.return), a.flags & 32) {
          var T = a.stateNode;
          try {
            ot(T, "");
          } catch (Lt) {
            po(a, a.return, Lt);
          }
        }
        if (y & 4 && (T = a.stateNode, T != null)) {
          var N = a.memoizedProps, U = m !== null ? m.memoizedProps : N, oe = a.type, le = a.updateQueue;
          if (a.updateQueue = null, le !== null)
            try {
              oe === "input" && N.type === "radio" && N.name != null && Se(T, N), pt(oe, U);
              var Ie = pt(oe, N);
              for (U = 0; U < le.length; U += 2) {
                var ct = le[U], ut = le[U + 1];
                ct === "style" ? nt(T, ut) : ct === "dangerouslySetInnerHTML" ? xe(T, ut) : ct === "children" ? ot(T, ut) : A(T, ct, ut, Ie);
              }
              switch (oe) {
                case "input":
                  mt(T, N);
                  break;
                case "textarea":
                  Tt(T, N);
                  break;
                case "select":
                  var lt = T._wrapperState.wasMultiple;
                  T._wrapperState.wasMultiple = !!N.multiple;
                  var Et = N.value;
                  Et != null ? Ve(T, !!N.multiple, Et, !1) : lt !== !!N.multiple && (N.defaultValue != null ? Ve(
                    T,
                    !!N.multiple,
                    N.defaultValue,
                    !0
                  ) : Ve(T, !!N.multiple, N.multiple ? [] : "", !1));
              }
              T[Qs] = N;
            } catch (Lt) {
              po(a, a.return, Lt);
            }
        }
        break;
      case 6:
        if (za(s, a), Za(a), y & 4) {
          if (a.stateNode === null)
            throw Error(i(162));
          T = a.stateNode, N = a.memoizedProps;
          try {
            T.nodeValue = N;
          } catch (Lt) {
            po(a, a.return, Lt);
          }
        }
        break;
      case 3:
        if (za(s, a), Za(a), y & 4 && m !== null && m.memoizedState.isDehydrated)
          try {
            ru(s.containerInfo);
          } catch (Lt) {
            po(a, a.return, Lt);
          }
        break;
      case 4:
        za(s, a), Za(a);
        break;
      case 13:
        za(s, a), Za(a), T = a.child, T.flags & 8192 && (N = T.memoizedState !== null, T.stateNode.isHidden = N, !N || T.alternate !== null && T.alternate.memoizedState !== null || (Gm = lo())), y & 4 && Mi(a);
        break;
      case 22:
        if (ct = m !== null && m.memoizedState !== null, a.mode & 1 ? (Po = (Ie = Po) || ct, za(s, a), Po = Ie) : za(s, a), Za(a), y & 8192) {
          if (Ie = a.memoizedState !== null, (a.stateNode.isHidden = Ie) && !ct && a.mode & 1)
            for (Mt = a, ct = a.child; ct !== null; ) {
              for (ut = Mt = ct; Mt !== null; ) {
                switch (lt = Mt, Et = lt.child, lt.tag) {
                  case 0:
                  case 11:
                  case 14:
                  case 15:
                    Lu(4, lt, lt.return);
                    break;
                  case 1:
                    lc(lt, lt.return);
                    var Pt = lt.stateNode;
                    if (typeof Pt.componentWillUnmount == "function") {
                      y = lt, m = lt.return;
                      try {
                        s = y, Pt.props = s.memoizedProps, Pt.state = s.memoizedState, Pt.componentWillUnmount();
                      } catch (Lt) {
                        po(y, m, Lt);
                      }
                    }
                    break;
                  case 5:
                    lc(lt, lt.return);
                    break;
                  case 22:
                    if (lt.memoizedState !== null) {
                      Wm(ut);
                      continue;
                    }
                }
                Et !== null ? (Et.return = lt, Mt = Et) : Wm(ut);
              }
              ct = ct.sibling;
            }
          e:
            for (ct = null, ut = a; ; ) {
              if (ut.tag === 5) {
                if (ct === null) {
                  ct = ut;
                  try {
                    T = ut.stateNode, Ie ? (N = T.style, typeof N.setProperty == "function" ? N.setProperty("display", "none", "important") : N.display = "none") : (oe = ut.stateNode, le = ut.memoizedProps.style, U = le != null && le.hasOwnProperty("display") ? le.display : null, oe.style.display = Ze("display", U));
                  } catch (Lt) {
                    po(a, a.return, Lt);
                  }
                }
              } else if (ut.tag === 6) {
                if (ct === null)
                  try {
                    ut.stateNode.nodeValue = Ie ? "" : ut.memoizedProps;
                  } catch (Lt) {
                    po(a, a.return, Lt);
                  }
              } else if ((ut.tag !== 22 && ut.tag !== 23 || ut.memoizedState === null || ut === a) && ut.child !== null) {
                ut.child.return = ut, ut = ut.child;
                continue;
              }
              if (ut === a)
                break e;
              for (; ut.sibling === null; ) {
                if (ut.return === null || ut.return === a)
                  break e;
                ct === ut && (ct = null), ut = ut.return;
              }
              ct === ut && (ct = null), ut.sibling.return = ut.return, ut = ut.sibling;
            }
        }
        break;
      case 19:
        za(s, a), Za(a), y & 4 && Mi(a);
        break;
      case 21:
        break;
      default:
        za(
          s,
          a
        ), Za(a);
    }
  }
  function Za(a) {
    var s = a.flags;
    if (s & 2) {
      try {
        e: {
          for (var m = a.return; m !== null; ) {
            if (ly(m)) {
              var y = m;
              break e;
            }
            m = m.return;
          }
          throw Error(i(160));
        }
        switch (y.tag) {
          case 5:
            var T = y.stateNode;
            y.flags & 32 && (ot(T, ""), y.flags &= -33);
            var N = xp(a);
            Xa(a, N, T);
            break;
          case 3:
          case 4:
            var U = y.stateNode.containerInfo, oe = xp(a);
            cc(a, oe, U);
            break;
          default:
            throw Error(i(161));
        }
      } catch (le) {
        po(a, a.return, le);
      }
      a.flags &= -3;
    }
    s & 4096 && (a.flags &= -4097);
  }
  function uy(a, s, m) {
    Mt = a, dc(a);
  }
  function dc(a, s, m) {
    for (var y = (a.mode & 1) !== 0; Mt !== null; ) {
      var T = Mt, N = T.child;
      if (T.tag === 22 && y) {
        var U = T.memoizedState !== null || $u;
        if (!U) {
          var oe = T.alternate, le = oe !== null && oe.memoizedState !== null || Po;
          oe = $u;
          var Ie = Po;
          if ($u = U, (Po = le) && !Ie)
            for (Mt = T; Mt !== null; )
              U = Mt, le = U.child, U.tag === 22 && U.memoizedState !== null ? py(T) : le !== null ? (le.return = U, Mt = le) : py(T);
          for (; N !== null; )
            Mt = N, dc(N), N = N.sibling;
          Mt = T, $u = oe, Po = Ie;
        }
        dy(a);
      } else
        T.subtreeFlags & 8772 && N !== null ? (N.return = T, Mt = N) : dy(a);
    }
  }
  function dy(a) {
    for (; Mt !== null; ) {
      var s = Mt;
      if (s.flags & 8772) {
        var m = s.alternate;
        try {
          if (s.flags & 8772)
            switch (s.tag) {
              case 0:
              case 11:
              case 15:
                Po || Au(5, s);
                break;
              case 1:
                var y = s.stateNode;
                if (s.flags & 4 && !Po)
                  if (m === null)
                    y.componentDidMount();
                  else {
                    var T = s.elementType === s.type ? m.memoizedProps : Xr(s.type, m.memoizedProps);
                    y.componentDidUpdate(T, m.memoizedState, y.__reactInternalSnapshotBeforeUpdate);
                  }
                var N = s.updateQueue;
                N !== null && Zs(s, N, y);
                break;
              case 3:
                var U = s.updateQueue;
                if (U !== null) {
                  if (m = null, s.child !== null)
                    switch (s.child.tag) {
                      case 5:
                        m = s.child.stateNode;
                        break;
                      case 1:
                        m = s.child.stateNode;
                    }
                  Zs(s, U, m);
                }
                break;
              case 5:
                var oe = s.stateNode;
                if (m === null && s.flags & 4) {
                  m = oe;
                  var le = s.memoizedProps;
                  switch (s.type) {
                    case "button":
                    case "input":
                    case "select":
                    case "textarea":
                      le.autoFocus && m.focus();
                      break;
                    case "img":
                      le.src && (m.src = le.src);
                  }
                }
                break;
              case 6:
                break;
              case 4:
                break;
              case 12:
                break;
              case 13:
                if (s.memoizedState === null) {
                  var Ie = s.alternate;
                  if (Ie !== null) {
                    var ct = Ie.memoizedState;
                    if (ct !== null) {
                      var ut = ct.dehydrated;
                      ut !== null && ru(ut);
                    }
                  }
                }
                break;
              case 19:
              case 17:
              case 21:
              case 22:
              case 23:
              case 25:
                break;
              default:
                throw Error(i(163));
            }
          Po || s.flags & 512 && Um(s);
        } catch (lt) {
          po(s, s.return, lt);
        }
      }
      if (s === a) {
        Mt = null;
        break;
      }
      if (m = s.sibling, m !== null) {
        m.return = s.return, Mt = m;
        break;
      }
      Mt = s.return;
    }
  }
  function Wm(a) {
    for (; Mt !== null; ) {
      var s = Mt;
      if (s === a) {
        Mt = null;
        break;
      }
      var m = s.sibling;
      if (m !== null) {
        m.return = s.return, Mt = m;
        break;
      }
      Mt = s.return;
    }
  }
  function py(a) {
    for (; Mt !== null; ) {
      var s = Mt;
      try {
        switch (s.tag) {
          case 0:
          case 11:
          case 15:
            var m = s.return;
            try {
              Au(4, s);
            } catch (le) {
              po(s, m, le);
            }
            break;
          case 1:
            var y = s.stateNode;
            if (typeof y.componentDidMount == "function") {
              var T = s.return;
              try {
                y.componentDidMount();
              } catch (le) {
                po(s, T, le);
              }
            }
            var N = s.return;
            try {
              Um(s);
            } catch (le) {
              po(s, N, le);
            }
            break;
          case 5:
            var U = s.return;
            try {
              Um(s);
            } catch (le) {
              po(s, U, le);
            }
        }
      } catch (le) {
        po(s, s.return, le);
      }
      if (s === a) {
        Mt = null;
        break;
      }
      var oe = s.sibling;
      if (oe !== null) {
        oe.return = s.return, Mt = oe;
        break;
      }
      Mt = s.return;
    }
  }
  var Sp = Math.ceil, _u = V.ReactCurrentDispatcher, Ym = V.ReactCurrentOwner, mr = V.ReactCurrentBatchConfig, fn = 0, ao = null, uo = null, Yo = 0, Jr = 0, pc = rn(0), $o = 0, Bu = null, Ni = 0, Tp = 0, fc = 0, ul = null, yr = null, Gm = 0, mc = 1 / 0, Pi = null, wp = !1, dl = null, Ja = null, ys = !1, bs = null, Ep = 0, hc = 0, Rp = null, pl = -1, fl = 0;
  function hr() {
    return fn & 6 ? lo() : pl !== -1 ? pl : pl = lo();
  }
  function xo(a) {
    return a.mode & 1 ? fn & 2 && Yo !== 0 ? Yo & -Yo : Gd.transition !== null ? (fl === 0 && (fl = Td()), fl) : (a = kn, a !== 0 || (a = window.event, a = a === void 0 ? 16 : Gf(a.type)), a) : 1;
  }
  function vr(a, s, m, y) {
    if (50 < hc)
      throw hc = 0, Rp = null, Error(i(185));
    js(a, m, y), (!(fn & 2) || a !== ao) && (a === ao && (!(fn & 2) && (Tp |= m), $o === 4 && ba(a, Yo)), gr(a, y), m === 1 && fn === 0 && !(s.mode & 1) && (mc = lo() + 500, Uo && Pr()));
  }
  function gr(a, s) {
    var m = a.callbackNode;
    Sd(a, s);
    var y = $a(a, a === ao ? Yo : 0);
    if (y === 0)
      m !== null && cr(m), a.callbackNode = null, a.callbackPriority = 0;
    else if (s = y & -y, a.callbackPriority !== s) {
      if (m != null && cr(m), s === 1)
        a.tag === 0 ? bm(fy.bind(null, a)) : ym(fy.bind(null, a)), hm(function() {
          !(fn & 6) && Pr();
        }), m = null;
      else {
        switch (Hf(y)) {
          case 1:
            m = gi;
            break;
          case 4:
            m = pn;
            break;
          case 16:
            m = Ji;
            break;
          case 536870912:
            m = Vf;
            break;
          default:
            m = Ji;
        }
        m = Jm(m, vc.bind(null, a));
      }
      a.callbackPriority = s, a.callbackNode = m;
    }
  }
  function vc(a, s) {
    if (pl = -1, fl = 0, fn & 6)
      throw Error(i(327));
    var m = a.callbackNode;
    if (yc() && a.callbackNode !== m)
      return null;
    var y = $a(a, a === ao ? Yo : 0);
    if (y === 0)
      return null;
    if (y & 30 || y & a.expiredLanes || s)
      s = kp(a, y);
    else {
      s = y;
      var T = fn;
      fn |= 2;
      var N = Op();
      (ao !== a || Yo !== s) && (Pi = null, mc = lo() + 500, ml(a, s));
      do
        try {
          J0();
          break;
        } catch (oe) {
          my(a, oe);
        }
      while (1);
      Em(), _u.current = N, fn = T, uo !== null ? s = 0 : (ao = null, Yo = 0, s = $o);
    }
    if (s !== 0) {
      if (s === 2 && (T = jf(a), T !== 0 && (y = T, s = qm(a, T))), s === 1)
        throw m = Bu, ml(a, 0), ba(a, y), gr(a, lo()), m;
      if (s === 6)
        ba(a, y);
      else {
        if (T = a.current.alternate, !(y & 30) && !Km(T) && (s = kp(a, y), s === 2 && (N = jf(a), N !== 0 && (y = N, s = qm(a, N))), s === 1))
          throw m = Bu, ml(a, 0), ba(a, y), gr(a, lo()), m;
        switch (a.finishedWork = T, a.finishedLanes = y, s) {
          case 0:
          case 1:
            throw Error(i(345));
          case 2:
            hl(a, yr, Pi);
            break;
          case 3:
            if (ba(a, y), (y & 130023424) === y && (s = Gm + 500 - lo(), 10 < s)) {
              if ($a(a, 0) !== 0)
                break;
              if (T = a.suspendedLanes, (T & y) !== y) {
                hr(), a.pingedLanes |= a.suspendedLanes & T;
                break;
              }
              a.timeoutHandle = Ks(hl.bind(null, a, yr, Pi), s);
              break;
            }
            hl(a, yr, Pi);
            break;
          case 4:
            if (ba(a, y), (y & 4194240) === y)
              break;
            for (s = a.eventTimes, T = -1; 0 < y; ) {
              var U = 31 - ia(y);
              N = 1 << U, U = s[U], U > T && (T = U), y &= ~N;
            }
            if (y = T, y = lo() - y, y = (120 > y ? 120 : 480 > y ? 480 : 1080 > y ? 1080 : 1920 > y ? 1920 : 3e3 > y ? 3e3 : 4320 > y ? 4320 : 1960 * Sp(y / 1960)) - y, 10 < y) {
              a.timeoutHandle = Ks(hl.bind(null, a, yr, Pi), y);
              break;
            }
            hl(a, yr, Pi);
            break;
          case 5:
            hl(a, yr, Pi);
            break;
          default:
            throw Error(i(329));
        }
      }
    }
    return gr(a, lo()), a.callbackNode === m ? vc.bind(null, a) : null;
  }
  function qm(a, s) {
    var m = ul;
    return a.current.memoizedState.isDehydrated && (ml(a, s).flags |= 256), a = kp(a, s), a !== 2 && (s = yr, yr = m, s !== null && zu(s)), a;
  }
  function zu(a) {
    yr === null ? yr = a : yr.push.apply(yr, a);
  }
  function Km(a) {
    for (var s = a; ; ) {
      if (s.flags & 16384) {
        var m = s.updateQueue;
        if (m !== null && (m = m.stores, m !== null))
          for (var y = 0; y < m.length; y++) {
            var T = m[y], N = T.getSnapshot;
            T = T.value;
            try {
              if (!ca(N(), T))
                return !1;
            } catch {
              return !1;
            }
          }
      }
      if (m = s.child, s.subtreeFlags & 16384 && m !== null)
        m.return = s, s = m;
      else {
        if (s === a)
          break;
        for (; s.sibling === null; ) {
          if (s.return === null || s.return === a)
            return !0;
          s = s.return;
        }
        s.sibling.return = s.return, s = s.sibling;
      }
    }
    return !0;
  }
  function ba(a, s) {
    for (s &= ~fc, s &= ~Tp, a.suspendedLanes |= s, a.pingedLanes &= ~s, a = a.expirationTimes; 0 < s; ) {
      var m = 31 - ia(s), y = 1 << m;
      a[m] = -1, s &= ~y;
    }
  }
  function fy(a) {
    if (fn & 6)
      throw Error(i(327));
    yc();
    var s = $a(a, 0);
    if (!(s & 1))
      return gr(a, lo()), null;
    var m = kp(a, s);
    if (a.tag !== 0 && m === 2) {
      var y = jf(a);
      y !== 0 && (s = y, m = qm(a, y));
    }
    if (m === 1)
      throw m = Bu, ml(a, 0), ba(a, s), gr(a, lo()), m;
    if (m === 6)
      throw Error(i(345));
    return a.finishedWork = a.current.alternate, a.finishedLanes = s, hl(a, yr, Pi), gr(a, lo()), null;
  }
  function gc(a, s) {
    var m = fn;
    fn |= 1;
    try {
      return a(s);
    } finally {
      fn = m, fn === 0 && (mc = lo() + 500, Uo && Pr());
    }
  }
  function Cs(a) {
    bs !== null && bs.tag === 0 && !(fn & 6) && yc();
    var s = fn;
    fn |= 1;
    var m = mr.transition, y = kn;
    try {
      if (mr.transition = null, kn = 1, a)
        return a();
    } finally {
      kn = y, mr.transition = m, fn = s, !(fn & 6) && Pr();
    }
  }
  function Qm() {
    Jr = pc.current, wn(pc);
  }
  function ml(a, s) {
    a.finishedWork = null, a.finishedLanes = 0;
    var m = a.timeoutHandle;
    if (m !== -1 && (a.timeoutHandle = -1, Fg(m)), uo !== null)
      for (m = uo.return; m !== null; ) {
        var y = m;
        switch (xm(y), y.tag) {
          case 1:
            y = y.type.childContextTypes, y != null && pa();
            break;
          case 3:
            ms(), wn(co), wn(Kt), Jd();
            break;
          case 5:
            un(y);
            break;
          case 4:
            ms();
            break;
          case 13:
            wn(Ht);
            break;
          case 19:
            wn(Ht);
            break;
          case 10:
            us(y.type._context);
            break;
          case 22:
          case 23:
            Qm();
        }
        m = m.return;
      }
    if (ao = a, uo = a = xs(a.current, null), Yo = Jr = s, $o = 0, Bu = null, fc = Tp = Ni = 0, yr = ul = null, Jo !== null) {
      for (s = 0; s < Jo.length; s++)
        if (m = Jo[s], y = m.interleaved, y !== null) {
          m.interleaved = null;
          var T = y.next, N = m.pending;
          if (N !== null) {
            var U = N.next;
            N.next = T, y.next = U;
          }
          m.pending = y;
        }
      Jo = null;
    }
    return a;
  }
  function my(a, s) {
    do {
      var m = uo;
      try {
        if (Em(), ep.current = vp, Gt) {
          for (var y = Gn.memoizedState; y !== null; ) {
            var T = y.queue;
            T !== null && (T.pending = null), y = y.next;
          }
          Gt = !1;
        }
        if (el = 0, hn = Je = Gn = null, Qa = !1, Zr = 0, Ym.current = null, m === null || m.return === null) {
          $o = 1, Bu = s, uo = null;
          break;
        }
        e: {
          var N = a, U = m.return, oe = m, le = s;
          if (s = Yo, oe.flags |= 32768, le !== null && typeof le == "object" && typeof le.then == "function") {
            var Ie = le, ct = oe, ut = ct.tag;
            if (!(ct.mode & 1) && (ut === 0 || ut === 11 || ut === 15)) {
              var lt = ct.alternate;
              lt ? (ct.updateQueue = lt.updateQueue, ct.memoizedState = lt.memoizedState, ct.lanes = lt.lanes) : (ct.updateQueue = null, ct.memoizedState = null);
            }
            var Et = Im(U);
            if (Et !== null) {
              Et.flags &= -257, Lm(Et, U, oe, N, s), Et.mode & 1 && ny(N, Ie, s), s = Et, le = Ie;
              var Pt = s.updateQueue;
              if (Pt === null) {
                var Lt = /* @__PURE__ */ new Set();
                Lt.add(le), s.updateQueue = Lt;
              } else
                Pt.add(le);
              break e;
            } else {
              if (!(s & 1)) {
                ny(N, Ie, s), Xm();
                break e;
              }
              le = Error(i(426));
            }
          } else if (Yn && oe.mode & 1) {
            var ho = Im(U);
            if (ho !== null) {
              !(ho.flags & 65536) && (ho.flags |= 256), Lm(ho, U, oe, N, s), Tm(ac(le, oe));
              break e;
            }
          }
          N = le = ac(le, oe), $o !== 4 && ($o = 2), ul === null ? ul = [N] : ul.push(N), N = U;
          do {
            switch (N.tag) {
              case 3:
                N.flags |= 65536, s &= -s, N.lanes |= s;
                var we = ty(N, le, s);
                km(N, we);
                break e;
              case 1:
                oe = le;
                var me = N.type, ke = N.stateNode;
                if (!(N.flags & 128) && (typeof me.getDerivedStateFromError == "function" || ke !== null && typeof ke.componentDidCatch == "function" && (Ja === null || !Ja.has(ke)))) {
                  N.flags |= 65536, s &= -s, N.lanes |= s;
                  var vt = Mu(N, oe, s);
                  km(N, vt);
                  break e;
                }
            }
            N = N.return;
          } while (N !== null);
        }
        Zm(m);
      } catch (At) {
        s = At, uo === m && m !== null && (uo = m = m.return);
        continue;
      }
      break;
    } while (1);
  }
  function Op() {
    var a = _u.current;
    return _u.current = vp, a === null ? vp : a;
  }
  function Xm() {
    ($o === 0 || $o === 3 || $o === 2) && ($o = 4), ao === null || !(Ni & 268435455) && !(Tp & 268435455) || ba(ao, Yo);
  }
  function kp(a, s) {
    var m = fn;
    fn |= 2;
    var y = Op();
    (ao !== a || Yo !== s) && (Pi = null, ml(a, s));
    do
      try {
        Z0();
        break;
      } catch (T) {
        my(a, T);
      }
    while (1);
    if (Em(), fn = m, _u.current = y, uo !== null)
      throw Error(i(261));
    return ao = null, Yo = 0, $o;
  }
  function Z0() {
    for (; uo !== null; )
      hy(uo);
  }
  function J0() {
    for (; uo !== null && !zl(); )
      hy(uo);
  }
  function hy(a) {
    var s = gy(a.alternate, a, Jr);
    a.memoizedProps = a.pendingProps, s === null ? Zm(a) : uo = s, Ym.current = null;
  }
  function Zm(a) {
    var s = a;
    do {
      var m = s.alternate;
      if (a = s.return, s.flags & 32768) {
        if (m = jm(m, s), m !== null) {
          m.flags &= 32767, uo = m;
          return;
        }
        if (a !== null)
          a.flags |= 32768, a.subtreeFlags = 0, a.deletions = null;
        else {
          $o = 6, uo = null;
          return;
        }
      } else if (m = X0(m, s, Jr), m !== null) {
        uo = m;
        return;
      }
      if (s = s.sibling, s !== null) {
        uo = s;
        return;
      }
      uo = s = a;
    } while (s !== null);
    $o === 0 && ($o = 5);
  }
  function hl(a, s, m) {
    var y = kn, T = mr.transition;
    try {
      mr.transition = null, kn = 1, ex(a, s, m, y);
    } finally {
      mr.transition = T, kn = y;
    }
    return null;
  }
  function ex(a, s, m, y) {
    do
      yc();
    while (bs !== null);
    if (fn & 6)
      throw Error(i(327));
    m = a.finishedWork;
    var T = a.finishedLanes;
    if (m === null)
      return null;
    if (a.finishedWork = null, a.finishedLanes = 0, m === a.current)
      throw Error(i(177));
    a.callbackNode = null, a.callbackPriority = 0;
    var N = m.lanes | m.childLanes;
    if (R0(a, N), a === ao && (uo = ao = null, Yo = 0), !(m.subtreeFlags & 2064) && !(m.flags & 2064) || ys || (ys = !0, Jm(Ji, function() {
      return yc(), null;
    })), N = (m.flags & 15990) !== 0, m.subtreeFlags & 15990 || N) {
      N = mr.transition, mr.transition = null;
      var U = kn;
      kn = 1;
      var oe = fn;
      fn |= 4, Ym.current = null, sy(a, m), cy(m, a), Ad(qs), Us = !!fm, qs = fm = null, a.current = m, uy(m), T0(), fn = oe, kn = U, mr.transition = N;
    } else
      a.current = m;
    if (ys && (ys = !1, bs = a, Ep = T), N = a.pendingLanes, N === 0 && (Ja = null), tg(m.stateNode), gr(a, lo()), s !== null)
      for (y = a.onRecoverableError, m = 0; m < s.length; m++)
        T = s[m], y(T.value, { componentStack: T.stack, digest: T.digest });
    if (wp)
      throw wp = !1, a = dl, dl = null, a;
    return Ep & 1 && a.tag !== 0 && yc(), N = a.pendingLanes, N & 1 ? a === Rp ? hc++ : (hc = 0, Rp = a) : hc = 0, Pr(), null;
  }
  function yc() {
    if (bs !== null) {
      var a = Hf(Ep), s = mr.transition, m = kn;
      try {
        if (mr.transition = null, kn = 16 > a ? 16 : a, bs === null)
          var y = !1;
        else {
          if (a = bs, bs = null, Ep = 0, fn & 6)
            throw Error(i(331));
          var T = fn;
          for (fn |= 4, Mt = a.current; Mt !== null; ) {
            var N = Mt, U = N.child;
            if (Mt.flags & 16) {
              var oe = N.deletions;
              if (oe !== null) {
                for (var le = 0; le < oe.length; le++) {
                  var Ie = oe[le];
                  for (Mt = Ie; Mt !== null; ) {
                    var ct = Mt;
                    switch (ct.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Lu(8, ct, N);
                    }
                    var ut = ct.child;
                    if (ut !== null)
                      ut.return = ct, Mt = ut;
                    else
                      for (; Mt !== null; ) {
                        ct = Mt;
                        var lt = ct.sibling, Et = ct.return;
                        if (Hm(ct), ct === Ie) {
                          Mt = null;
                          break;
                        }
                        if (lt !== null) {
                          lt.return = Et, Mt = lt;
                          break;
                        }
                        Mt = Et;
                      }
                  }
                }
                var Pt = N.alternate;
                if (Pt !== null) {
                  var Lt = Pt.child;
                  if (Lt !== null) {
                    Pt.child = null;
                    do {
                      var ho = Lt.sibling;
                      Lt.sibling = null, Lt = ho;
                    } while (Lt !== null);
                  }
                }
                Mt = N;
              }
            }
            if (N.subtreeFlags & 2064 && U !== null)
              U.return = N, Mt = U;
            else
              e:
                for (; Mt !== null; ) {
                  if (N = Mt, N.flags & 2048)
                    switch (N.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Lu(9, N, N.return);
                    }
                  var we = N.sibling;
                  if (we !== null) {
                    we.return = N.return, Mt = we;
                    break e;
                  }
                  Mt = N.return;
                }
          }
          var me = a.current;
          for (Mt = me; Mt !== null; ) {
            U = Mt;
            var ke = U.child;
            if (U.subtreeFlags & 2064 && ke !== null)
              ke.return = U, Mt = ke;
            else
              e:
                for (U = me; Mt !== null; ) {
                  if (oe = Mt, oe.flags & 2048)
                    try {
                      switch (oe.tag) {
                        case 0:
                        case 11:
                        case 15:
                          Au(9, oe);
                      }
                    } catch (At) {
                      po(oe, oe.return, At);
                    }
                  if (oe === U) {
                    Mt = null;
                    break e;
                  }
                  var vt = oe.sibling;
                  if (vt !== null) {
                    vt.return = oe.return, Mt = vt;
                    break e;
                  }
                  Mt = oe.return;
                }
          }
          if (fn = T, Pr(), Pa && typeof Pa.onPostCommitFiberRoot == "function")
            try {
              Pa.onPostCommitFiberRoot(Jc, a);
            } catch {
            }
          y = !0;
        }
        return y;
      } finally {
        kn = m, mr.transition = s;
      }
    }
    return !1;
  }
  function vy(a, s, m) {
    s = ac(m, s), s = ty(a, s, 1), a = ps(a, s, 1), s = hr(), a !== null && (js(a, 1, s), gr(a, s));
  }
  function po(a, s, m) {
    if (a.tag === 3)
      vy(a, a, m);
    else
      for (; s !== null; ) {
        if (s.tag === 3) {
          vy(s, a, m);
          break;
        } else if (s.tag === 1) {
          var y = s.stateNode;
          if (typeof s.type.getDerivedStateFromError == "function" || typeof y.componentDidCatch == "function" && (Ja === null || !Ja.has(y))) {
            a = ac(m, a), a = Mu(s, a, 1), s = ps(s, a, 1), a = hr(), s !== null && (js(s, 1, a), gr(s, a));
            break;
          }
        }
        s = s.return;
      }
  }
  function tx(a, s, m) {
    var y = a.pingCache;
    y !== null && y.delete(s), s = hr(), a.pingedLanes |= a.suspendedLanes & m, ao === a && (Yo & m) === m && ($o === 4 || $o === 3 && (Yo & 130023424) === Yo && 500 > lo() - Gm ? ml(a, 0) : fc |= m), gr(a, s);
  }
  function Dp(a, s) {
    s === 0 && (a.mode & 1 ? (s = Vl, Vl <<= 1, !(Vl & 130023424) && (Vl = 4194304)) : s = 1);
    var m = hr();
    a = Ri(a, s), a !== null && (js(a, s, m), gr(a, m));
  }
  function nx(a) {
    var s = a.memoizedState, m = 0;
    s !== null && (m = s.retryLane), Dp(a, m);
  }
  function ox(a, s) {
    var m = 0;
    switch (a.tag) {
      case 13:
        var y = a.stateNode, T = a.memoizedState;
        T !== null && (m = T.retryLane);
        break;
      case 19:
        y = a.stateNode;
        break;
      default:
        throw Error(i(314));
    }
    y !== null && y.delete(s), Dp(a, m);
  }
  var gy;
  gy = function(a, s, m) {
    if (a !== null)
      if (a.memoizedProps !== s.pendingProps || co.current)
        Co = !0;
      else {
        if (!(a.lanes & m) && !(s.flags & 128))
          return Co = !1, Di(a, s, m);
        Co = !!(a.flags & 131072);
      }
    else
      Co = !1, Yn && s.flags & 1048576 && Cm(s, Zl, s.index);
    switch (s.lanes = 0, s.tag) {
      case 2:
        var y = s.type;
        pr(a, s), a = s.pendingProps;
        var T = da(s, Kt.current);
        Ct(s, m), T = hs(null, s, y, a, T, m);
        var N = ol();
        return s.flags |= 1, typeof T == "object" && T !== null && typeof T.render == "function" && T.$$typeof === void 0 ? (s.tag = 1, s.memoizedState = null, s.updateQueue = null, Jn(y) ? (N = !0, jd(s)) : N = !1, s.memoizedState = T.state !== null && T.state !== void 0 ? T.state : null, Om(s), T.updater = Qd, s.stateNode = T, T._reactInternals = s, Xd(s, y, a, m), s = oy(null, s, y, !0, N, m)) : (s.tag = 0, Yn && N && Ud(s), Mo(null, s, T, m), s = s.child), s;
      case 16:
        y = s.elementType;
        e: {
          switch (pr(a, s), a = s.pendingProps, T = y._init, y = T(y._payload), s.type = y, T = s.tag = ax(y), a = Xr(y, a), T) {
            case 0:
              s = ic(null, s, y, a, m);
              break e;
            case 1:
              s = Am(null, s, y, a, m);
              break e;
            case 11:
              s = gs(null, s, y, a, m);
              break e;
            case 14:
              s = yp(null, s, y, Xr(y.type, a), m);
              break e;
          }
          throw Error(i(
            306,
            y,
            ""
          ));
        }
        return s;
      case 0:
        return y = s.type, T = s.pendingProps, T = s.elementType === y ? T : Xr(y, T), ic(a, s, y, T, m);
      case 1:
        return y = s.type, T = s.pendingProps, T = s.elementType === y ? T : Xr(y, T), Am(a, s, y, T, m);
      case 3:
        e: {
          if (ry(s), a === null)
            throw Error(i(387));
          y = s.pendingProps, N = s.memoizedState, T = N.element, Do(a, s), fs(s, y, null, m);
          var U = s.memoizedState;
          if (y = U.element, N.isDehydrated)
            if (N = { element: y, isDehydrated: !1, cache: U.cache, pendingSuspenseBoundaries: U.pendingSuspenseBoundaries, transitions: U.transitions }, s.updateQueue.baseState = N, s.memoizedState = N, s.flags & 256) {
              T = ac(Error(i(423)), s), s = bp(a, s, y, m, T);
              break e;
            } else if (y !== T) {
              T = ac(Error(i(424)), s), s = bp(a, s, y, m, T);
              break e;
            } else
              for (Lr = _a(s.stateNode.containerInfo.firstChild), Qr = s, Yn = !0, ma = null, m = Jg(s, null, y, m), s.child = m; m; )
                m.flags = m.flags & -3 | 4096, m = m.sibling;
          else {
            if (oo(), y === T) {
              s = er(a, s, m);
              break e;
            }
            Mo(a, s, y, m);
          }
          s = s.child;
        }
        return s;
      case 5:
        return Ut(s), a === null && Wd(s), y = s.type, T = s.pendingProps, N = a !== null ? a.memoizedProps : null, U = T.children, yu(y, T) ? U = null : N !== null && yu(y, N) && (s.flags |= 32), an(a, s), Mo(a, s, U, m), s.child;
      case 6:
        return a === null && Wd(s), null;
      case 13:
        return Bm(a, s, m);
      case 4:
        return Mm(s, s.stateNode.containerInfo), y = s.pendingProps, a === null ? s.child = ec(s, null, y, m) : Mo(a, s, y, m), s.child;
      case 11:
        return y = s.type, T = s.pendingProps, T = s.elementType === y ? T : Xr(y, T), gs(a, s, y, T, m);
      case 7:
        return Mo(a, s, s.pendingProps, m), s.child;
      case 8:
        return Mo(a, s, s.pendingProps.children, m), s.child;
      case 12:
        return Mo(a, s, s.pendingProps.children, m), s.child;
      case 10:
        e: {
          if (y = s.type._context, T = s.pendingProps, N = s.memoizedProps, U = T.value, En(Ka, y._currentValue), y._currentValue = U, N !== null)
            if (ca(N.value, U)) {
              if (N.children === T.children && !co.current) {
                s = er(a, s, m);
                break e;
              }
            } else
              for (N = s.child, N !== null && (N.return = s); N !== null; ) {
                var oe = N.dependencies;
                if (oe !== null) {
                  U = N.child;
                  for (var le = oe.firstContext; le !== null; ) {
                    if (le.context === y) {
                      if (N.tag === 1) {
                        le = Oi(-1, m & -m), le.tag = 2;
                        var Ie = N.updateQueue;
                        if (Ie !== null) {
                          Ie = Ie.shared;
                          var ct = Ie.pending;
                          ct === null ? le.next = le : (le.next = ct.next, ct.next = le), Ie.pending = le;
                        }
                      }
                      N.lanes |= m, le = N.alternate, le !== null && (le.lanes |= m), Ho(
                        N.return,
                        m,
                        s
                      ), oe.lanes |= m;
                      break;
                    }
                    le = le.next;
                  }
                } else if (N.tag === 10)
                  U = N.type === s.type ? null : N.child;
                else if (N.tag === 18) {
                  if (U = N.return, U === null)
                    throw Error(i(341));
                  U.lanes |= m, oe = U.alternate, oe !== null && (oe.lanes |= m), Ho(U, m, s), U = N.sibling;
                } else
                  U = N.child;
                if (U !== null)
                  U.return = N;
                else
                  for (U = N; U !== null; ) {
                    if (U === s) {
                      U = null;
                      break;
                    }
                    if (N = U.sibling, N !== null) {
                      N.return = U.return, U = N;
                      break;
                    }
                    U = U.return;
                  }
                N = U;
              }
          Mo(a, s, T.children, m), s = s.child;
        }
        return s;
      case 9:
        return T = s.type, y = s.pendingProps.children, Ct(s, m), T = mo(T), y = y(T), s.flags |= 1, Mo(a, s, y, m), s.child;
      case 14:
        return y = s.type, T = Xr(y, s.pendingProps), T = Xr(y.type, T), yp(a, s, y, T, m);
      case 15:
        return Br(a, s, s.type, s.pendingProps, m);
      case 17:
        return y = s.type, T = s.pendingProps, T = s.elementType === y ? T : Xr(y, T), pr(a, s), s.tag = 1, Jn(y) ? (a = !0, jd(s)) : a = !1, Ct(s, m), Kg(s, y, T), Xd(s, y, T, m), oy(null, s, y, !0, a, m);
      case 19:
        return Fm(a, s, m);
      case 22:
        return sl(a, s, m);
    }
    throw Error(i(156, s.tag));
  };
  function Jm(a, s) {
    return dn(a, s);
  }
  function rx(a, s, m, y) {
    this.tag = a, this.key = m, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = s, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = y, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null;
  }
  function Ca(a, s, m, y) {
    return new rx(a, s, m, y);
  }
  function eh(a) {
    return a = a.prototype, !(!a || !a.isReactComponent);
  }
  function ax(a) {
    if (typeof a == "function")
      return eh(a) ? 1 : 0;
    if (a != null) {
      if (a = a.$$typeof, a === te)
        return 11;
      if (a === Q)
        return 14;
    }
    return 2;
  }
  function xs(a, s) {
    var m = a.alternate;
    return m === null ? (m = Ca(a.tag, s, a.key, a.mode), m.elementType = a.elementType, m.type = a.type, m.stateNode = a.stateNode, m.alternate = a, a.alternate = m) : (m.pendingProps = s, m.type = a.type, m.flags = 0, m.subtreeFlags = 0, m.deletions = null), m.flags = a.flags & 14680064, m.childLanes = a.childLanes, m.lanes = a.lanes, m.child = a.child, m.memoizedProps = a.memoizedProps, m.memoizedState = a.memoizedState, m.updateQueue = a.updateQueue, s = a.dependencies, m.dependencies = s === null ? null : { lanes: s.lanes, firstContext: s.firstContext }, m.sibling = a.sibling, m.index = a.index, m.ref = a.ref, m;
  }
  function Mp(a, s, m, y, T, N) {
    var U = 2;
    if (y = a, typeof a == "function")
      eh(a) && (U = 1);
    else if (typeof a == "string")
      U = 5;
    else
      e:
        switch (a) {
          case F:
            return vl(m.children, T, N, s);
          case Y:
            U = 8, T |= 8;
            break;
          case H:
            return a = Ca(12, m, s, T | 2), a.elementType = H, a.lanes = N, a;
          case Z:
            return a = Ca(13, m, s, T), a.elementType = Z, a.lanes = N, a;
          case q:
            return a = Ca(19, m, s, T), a.elementType = q, a.lanes = N, a;
          case ie:
            return Vu(m, T, N, s);
          default:
            if (typeof a == "object" && a !== null)
              switch (a.$$typeof) {
                case J:
                  U = 10;
                  break e;
                case W:
                  U = 9;
                  break e;
                case te:
                  U = 11;
                  break e;
                case Q:
                  U = 14;
                  break e;
                case re:
                  U = 16, y = null;
                  break e;
              }
            throw Error(i(130, a == null ? a : typeof a, ""));
        }
    return s = Ca(U, m, s, T), s.elementType = a, s.type = y, s.lanes = N, s;
  }
  function vl(a, s, m, y) {
    return a = Ca(7, a, y, s), a.lanes = m, a;
  }
  function Vu(a, s, m, y) {
    return a = Ca(22, a, y, s), a.elementType = ie, a.lanes = m, a.stateNode = { isHidden: !1 }, a;
  }
  function Fu(a, s, m) {
    return a = Ca(6, a, null, s), a.lanes = m, a;
  }
  function gl(a, s, m) {
    return s = Ca(4, a.children !== null ? a.children : [], a.key, s), s.lanes = m, s.stateNode = { containerInfo: a.containerInfo, pendingChildren: null, implementation: a.implementation }, s;
  }
  function ix(a, s, m, y, T) {
    this.tag = s, this.containerInfo = a, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = Uf(0), this.expirationTimes = Uf(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = Uf(0), this.identifierPrefix = y, this.onRecoverableError = T, this.mutableSourceEagerHydrationData = null;
  }
  function Np(a, s, m, y, T, N, U, oe, le) {
    return a = new ix(a, s, m, oe, le), s === 1 ? (s = 1, N === !0 && (s |= 8)) : s = 0, N = Ca(3, null, null, s), a.current = N, N.stateNode = a, N.memoizedState = { element: y, isDehydrated: m, cache: null, transitions: null, pendingSuspenseBoundaries: null }, Om(N), a;
  }
  function yy(a, s, m) {
    var y = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
    return { $$typeof: M, key: y == null ? null : "" + y, children: a, containerInfo: s, implementation: m };
  }
  function th(a) {
    if (!a)
      return qa;
    a = a._reactInternals;
    e: {
      if (ze(a) !== a || a.tag !== 1)
        throw Error(i(170));
      var s = a;
      do {
        switch (s.tag) {
          case 3:
            s = s.stateNode.context;
            break e;
          case 1:
            if (Jn(s.type)) {
              s = s.stateNode.__reactInternalMemoizedMergedChildContext;
              break e;
            }
        }
        s = s.return;
      } while (s !== null);
      throw Error(i(171));
    }
    if (a.tag === 1) {
      var m = a.type;
      if (Jn(m))
        return xu(a, m, s);
    }
    return s;
  }
  function by(a, s, m, y, T, N, U, oe, le) {
    return a = Np(m, y, !0, a, T, N, U, oe, le), a.context = th(null), m = a.current, y = hr(), T = xo(m), N = Oi(y, T), N.callback = s ?? null, ps(m, N, T), a.current.lanes = T, js(a, T, y), gr(a, y), a;
  }
  function ju(a, s, m, y) {
    var T = s.current, N = hr(), U = xo(T);
    return m = th(m), s.context === null ? s.context = m : s.pendingContext = m, s = Oi(N, U), s.payload = { element: a }, y = y === void 0 ? null : y, y !== null && (s.callback = y), a = ps(T, s, U), a !== null && (vr(a, T, U, N), Kd(a, T, U)), U;
  }
  function Pp(a) {
    if (a = a.current, !a.child)
      return null;
    switch (a.child.tag) {
      case 5:
        return a.child.stateNode;
      default:
        return a.child.stateNode;
    }
  }
  function Cy(a, s) {
    if (a = a.memoizedState, a !== null && a.dehydrated !== null) {
      var m = a.retryLane;
      a.retryLane = m !== 0 && m < s ? m : s;
    }
  }
  function nh(a, s) {
    Cy(a, s), (a = a.alternate) && Cy(a, s);
  }
  function xy() {
    return null;
  }
  var oh = typeof reportError == "function" ? reportError : function(a) {
    console.error(a);
  };
  function $p(a) {
    this._internalRoot = a;
  }
  $i.prototype.render = $p.prototype.render = function(a) {
    var s = this._internalRoot;
    if (s === null)
      throw Error(i(409));
    ju(a, s, null, null);
  }, $i.prototype.unmount = $p.prototype.unmount = function() {
    var a = this._internalRoot;
    if (a !== null) {
      this._internalRoot = null;
      var s = a.containerInfo;
      Cs(function() {
        ju(null, a, null, null);
      }), s[wi] = null;
    }
  };
  function $i(a) {
    this._internalRoot = a;
  }
  $i.prototype.unstable_scheduleHydration = function(a) {
    if (a) {
      var s = ag();
      a = { blockedOn: null, target: a, priority: s };
      for (var m = 0; m < $n.length && s !== 0 && s < $n[m].priority; m++)
        ;
      $n.splice(m, 0, a), m === 0 && ig(a);
    }
  };
  function rh(a) {
    return !(!a || a.nodeType !== 1 && a.nodeType !== 9 && a.nodeType !== 11);
  }
  function Ip(a) {
    return !(!a || a.nodeType !== 1 && a.nodeType !== 9 && a.nodeType !== 11 && (a.nodeType !== 8 || a.nodeValue !== " react-mount-point-unstable "));
  }
  function Sy() {
  }
  function sx(a, s, m, y, T) {
    if (T) {
      if (typeof y == "function") {
        var N = y;
        y = function() {
          var Ie = Pp(U);
          N.call(Ie);
        };
      }
      var U = by(s, y, a, 0, null, !1, !1, "", Sy);
      return a._reactRootContainer = U, a[wi] = U.current, Ql(a.nodeType === 8 ? a.parentNode : a), Cs(), U;
    }
    for (; T = a.lastChild; )
      a.removeChild(T);
    if (typeof y == "function") {
      var oe = y;
      y = function() {
        var Ie = Pp(le);
        oe.call(Ie);
      };
    }
    var le = Np(a, 0, !1, null, null, !1, !1, "", Sy);
    return a._reactRootContainer = le, a[wi] = le.current, Ql(a.nodeType === 8 ? a.parentNode : a), Cs(function() {
      ju(s, le, m, y);
    }), le;
  }
  function Lp(a, s, m, y, T) {
    var N = m._reactRootContainer;
    if (N) {
      var U = N;
      if (typeof T == "function") {
        var oe = T;
        T = function() {
          var le = Pp(U);
          oe.call(le);
        };
      }
      ju(s, U, a, T);
    } else
      U = sx(m, s, a, T, y);
    return Pp(U);
  }
  rg = function(a) {
    switch (a.tag) {
      case 3:
        var s = a.stateNode;
        if (s.current.memoizedState.isDehydrated) {
          var m = Fs(s.pendingLanes);
          m !== 0 && (eu(s, m | 1), gr(s, lo()), !(fn & 6) && (mc = lo() + 500, Pr()));
        }
        break;
      case 13:
        Cs(function() {
          var y = Ri(a, 1);
          if (y !== null) {
            var T = hr();
            vr(y, a, 1, T);
          }
        }), nh(a, 1);
    }
  }, wd = function(a) {
    if (a.tag === 13) {
      var s = Ri(a, 134217728);
      if (s !== null) {
        var m = hr();
        vr(s, a, 134217728, m);
      }
      nh(a, 134217728);
    }
  }, Vn = function(a) {
    if (a.tag === 13) {
      var s = xo(a), m = Ri(a, s);
      if (m !== null) {
        var y = hr();
        vr(m, a, s, y);
      }
      nh(a, s);
    }
  }, ag = function() {
    return kn;
  }, Wf = function(a, s) {
    var m = kn;
    try {
      return kn = a, s();
    } finally {
      kn = m;
    }
  }, Jt = function(a, s, m) {
    switch (s) {
      case "input":
        if (mt(a, m), s = m.name, m.type === "radio" && s != null) {
          for (m = a; m.parentNode; )
            m = m.parentNode;
          for (m = m.querySelectorAll("input[name=" + JSON.stringify("" + s) + '][type="radio"]'), s = 0; s < m.length; s++) {
            var y = m[s];
            if (y !== a && y.form === a.form) {
              var T = Ft(y);
              if (!T)
                throw Error(i(90));
              _e(y), mt(y, T);
            }
          }
        }
        break;
      case "textarea":
        Tt(a, m);
        break;
      case "select":
        s = m.value, s != null && Ve(a, !!m.multiple, s, !1);
    }
  }, Ro = gc, Oo = Cs;
  var lx = { usingClientEntryPoint: !1, Events: [Cu, Xl, Ft, nn, Un, gc] }, bc = { findFiberByHostInstance: ua, bundleType: 0, version: "18.2.0", rendererPackageName: "react-dom" }, cx = { bundleType: bc.bundleType, version: bc.version, rendererPackageName: bc.rendererPackageName, rendererConfig: bc.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: V.ReactCurrentDispatcher, findHostInstanceByFiber: function(a) {
    return a = sn(a), a === null ? null : a.stateNode;
  }, findFiberByHostInstance: bc.findFiberByHostInstance || xy, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.2.0-next-9e3b772b8-20220608" };
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
    var Ap = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!Ap.isDisabled && Ap.supportsFiber)
      try {
        Jc = Ap.inject(cx), Pa = Ap;
      } catch {
      }
  }
  return Ra.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = lx, Ra.createPortal = function(a, s) {
    var m = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
    if (!rh(s))
      throw Error(i(200));
    return yy(a, s, null, m);
  }, Ra.createRoot = function(a, s) {
    if (!rh(a))
      throw Error(i(299));
    var m = !1, y = "", T = oh;
    return s != null && (s.unstable_strictMode === !0 && (m = !0), s.identifierPrefix !== void 0 && (y = s.identifierPrefix), s.onRecoverableError !== void 0 && (T = s.onRecoverableError)), s = Np(a, 1, !1, null, null, m, !1, y, T), a[wi] = s.current, Ql(a.nodeType === 8 ? a.parentNode : a), new $p(s);
  }, Ra.findDOMNode = function(a) {
    if (a == null)
      return null;
    if (a.nodeType === 1)
      return a;
    var s = a._reactInternals;
    if (s === void 0)
      throw typeof a.render == "function" ? Error(i(188)) : (a = Object.keys(a).join(","), Error(i(268, a)));
    return a = sn(s), a = a === null ? null : a.stateNode, a;
  }, Ra.flushSync = function(a) {
    return Cs(a);
  }, Ra.hydrate = function(a, s, m) {
    if (!Ip(s))
      throw Error(i(200));
    return Lp(null, a, s, !0, m);
  }, Ra.hydrateRoot = function(a, s, m) {
    if (!rh(a))
      throw Error(i(405));
    var y = m != null && m.hydratedSources || null, T = !1, N = "", U = oh;
    if (m != null && (m.unstable_strictMode === !0 && (T = !0), m.identifierPrefix !== void 0 && (N = m.identifierPrefix), m.onRecoverableError !== void 0 && (U = m.onRecoverableError)), s = by(s, null, a, 1, m ?? null, T, !1, N, U), a[wi] = s.current, Ql(a), y)
      for (a = 0; a < y.length; a++)
        m = y[a], T = m._getVersion, T = T(m._source), s.mutableSourceEagerHydrationData == null ? s.mutableSourceEagerHydrationData = [m, T] : s.mutableSourceEagerHydrationData.push(
          m,
          T
        );
    return new $i(s);
  }, Ra.render = function(a, s, m) {
    if (!Ip(s))
      throw Error(i(200));
    return Lp(null, a, s, !1, m);
  }, Ra.unmountComponentAtNode = function(a) {
    if (!Ip(a))
      throw Error(i(40));
    return a._reactRootContainer ? (Cs(function() {
      Lp(null, null, a, !1, function() {
        a._reactRootContainer = null, a[wi] = null;
      });
    }), !0) : !1;
  }, Ra.unstable_batchedUpdates = gc, Ra.unstable_renderSubtreeIntoContainer = function(a, s, m, y) {
    if (!Ip(m))
      throw Error(i(200));
    if (a == null || a._reactInternals === void 0)
      throw Error(i(38));
    return Lp(a, s, m, !1, y);
  }, Ra.version = "18.2.0-next-9e3b772b8-20220608", Ra;
}
var Oa = {};
/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var lD;
function x4() {
  return lD || (lD = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var e = ka, o = IN(), i = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, c = !1;
    function d(n) {
      c = n;
    }
    function p(n) {
      if (!c) {
        for (var r = arguments.length, l = new Array(r > 1 ? r - 1 : 0), u = 1; u < r; u++)
          l[u - 1] = arguments[u];
        v("warn", n, l);
      }
    }
    function f(n) {
      if (!c) {
        for (var r = arguments.length, l = new Array(r > 1 ? r - 1 : 0), u = 1; u < r; u++)
          l[u - 1] = arguments[u];
        v("error", n, l);
      }
    }
    function v(n, r, l) {
      {
        var u = i.ReactDebugCurrentFrame, h = u.getStackAddendum();
        h !== "" && (r += "%s", l = l.concat([h]));
        var C = l.map(function(E) {
          return String(E);
        });
        C.unshift("Warning: " + r), Function.prototype.apply.call(console[n], console, C);
      }
    }
    var g = 0, b = 1, S = 2, R = 3, D = 4, k = 5, $ = 6, P = 7, O = 8, I = 9, _ = 10, A = 11, V = 12, B = 13, M = 14, F = 15, Y = 16, H = 17, J = 18, W = 19, te = 21, Z = 22, q = 23, Q = 24, re = 25, ie = !0, K = !1, ne = !1, se = !1, Fe = !1, qe = !0, Me = !1, fe = !1, De = !0, be = !0, Ce = !0, de = /* @__PURE__ */ new Set(), Ae = {}, at = {};
    function Oe(n, r) {
      _e(n, r), _e(n + "Capture", r);
    }
    function _e(n, r) {
      Ae[n] && f("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", n), Ae[n] = r;
      {
        var l = n.toLowerCase();
        at[l] = n, n === "onDoubleClick" && (at.ondblclick = n);
      }
      for (var u = 0; u < r.length; u++)
        de.add(r[u]);
    }
    var ye = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", ae = Object.prototype.hasOwnProperty;
    function $e(n) {
      {
        var r = typeof Symbol == "function" && Symbol.toStringTag, l = r && n[Symbol.toStringTag] || n.constructor.name || "Object";
        return l;
      }
    }
    function Se(n) {
      try {
        return mt(n), !1;
      } catch {
        return !0;
      }
    }
    function mt(n) {
      return "" + n;
    }
    function Be(n, r) {
      if (Se(n))
        return f("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", r, $e(n)), mt(n);
    }
    function ft(n) {
      if (Se(n))
        return f("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", $e(n)), mt(n);
    }
    function je(n, r) {
      if (Se(n))
        return f("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", r, $e(n)), mt(n);
    }
    function Ve(n, r) {
      if (Se(n))
        return f("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", r, $e(n)), mt(n);
    }
    function st(n) {
      if (Se(n))
        return f("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", $e(n)), mt(n);
    }
    function gt(n) {
      if (Se(n))
        return f("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before before using it here.", $e(n)), mt(n);
    }
    var Tt = 0, _t = 1, Zt = 2, Vt = 3, Te = 4, xe = 5, ot = 6, He = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD", it = He + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040", Ze = new RegExp("^[" + He + "][" + it + "]*$"), nt = {}, Le = {};
    function et(n) {
      return ae.call(Le, n) ? !0 : ae.call(nt, n) ? !1 : Ze.test(n) ? (Le[n] = !0, !0) : (nt[n] = !0, f("Invalid attribute name: `%s`", n), !1);
    }
    function pt(n, r, l) {
      return r !== null ? r.type === Tt : l ? !1 : n.length > 2 && (n[0] === "o" || n[0] === "O") && (n[1] === "n" || n[1] === "N");
    }
    function Dt(n, r, l, u) {
      if (l !== null && l.type === Tt)
        return !1;
      switch (typeof r) {
        case "function":
        case "symbol":
          return !0;
        case "boolean": {
          if (u)
            return !1;
          if (l !== null)
            return !l.acceptsBooleans;
          var h = n.toLowerCase().slice(0, 5);
          return h !== "data-" && h !== "aria-";
        }
        default:
          return !1;
      }
    }
    function Nt(n, r, l, u) {
      if (r === null || typeof r > "u" || Dt(n, r, l, u))
        return !0;
      if (u)
        return !1;
      if (l !== null)
        switch (l.type) {
          case Vt:
            return !r;
          case Te:
            return r === !1;
          case xe:
            return isNaN(r);
          case ot:
            return isNaN(r) || r < 1;
        }
      return !1;
    }
    function Jt(n) {
      return en.hasOwnProperty(n) ? en[n] : null;
    }
    function Yt(n, r, l, u, h, C, E) {
      this.acceptsBooleans = r === Zt || r === Vt || r === Te, this.attributeName = u, this.attributeNamespace = h, this.mustUseProperty = l, this.propertyName = n, this.type = r, this.sanitizeURL = C, this.removeEmptyString = E;
    }
    var en = {}, Nn = [
      "children",
      "dangerouslySetInnerHTML",
      // TODO: This prevents the assignment of defaultValue to regular
      // elements (not just inputs). Now that ReactDOMInput assigns to the
      // defaultValue property -- do we need this?
      "defaultValue",
      "defaultChecked",
      "innerHTML",
      "suppressContentEditableWarning",
      "suppressHydrationWarning",
      "style"
    ];
    Nn.forEach(function(n) {
      en[n] = new Yt(
        n,
        Tt,
        !1,
        // mustUseProperty
        n,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(n) {
      var r = n[0], l = n[1];
      en[r] = new Yt(
        r,
        _t,
        !1,
        // mustUseProperty
        l,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(n) {
      en[n] = new Yt(
        n,
        Zt,
        !1,
        // mustUseProperty
        n.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(n) {
      en[n] = new Yt(
        n,
        Zt,
        !1,
        // mustUseProperty
        n,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "allowFullScreen",
      "async",
      // Note: there is a special case that prevents it from being written to the DOM
      // on the client side because the browsers are inconsistent. Instead we call focus().
      "autoFocus",
      "autoPlay",
      "controls",
      "default",
      "defer",
      "disabled",
      "disablePictureInPicture",
      "disableRemotePlayback",
      "formNoValidate",
      "hidden",
      "loop",
      "noModule",
      "noValidate",
      "open",
      "playsInline",
      "readOnly",
      "required",
      "reversed",
      "scoped",
      "seamless",
      // Microdata
      "itemScope"
    ].forEach(function(n) {
      en[n] = new Yt(
        n,
        Vt,
        !1,
        // mustUseProperty
        n.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "checked",
      // Note: `option.selected` is not updated if `select.multiple` is
      // disabled with `removeAttribute`. We have special logic for handling this.
      "multiple",
      "muted",
      "selected"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(n) {
      en[n] = new Yt(
        n,
        Vt,
        !0,
        // mustUseProperty
        n,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "capture",
      "download"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(n) {
      en[n] = new Yt(
        n,
        Te,
        !1,
        // mustUseProperty
        n,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "cols",
      "rows",
      "size",
      "span"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(n) {
      en[n] = new Yt(
        n,
        ot,
        !1,
        // mustUseProperty
        n,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["rowSpan", "start"].forEach(function(n) {
      en[n] = new Yt(
        n,
        xe,
        !1,
        // mustUseProperty
        n.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    });
    var nn = /[\-\:]([a-z])/g, Un = function(n) {
      return n[1].toUpperCase();
    };
    [
      "accent-height",
      "alignment-baseline",
      "arabic-form",
      "baseline-shift",
      "cap-height",
      "clip-path",
      "clip-rule",
      "color-interpolation",
      "color-interpolation-filters",
      "color-profile",
      "color-rendering",
      "dominant-baseline",
      "enable-background",
      "fill-opacity",
      "fill-rule",
      "flood-color",
      "flood-opacity",
      "font-family",
      "font-size",
      "font-size-adjust",
      "font-stretch",
      "font-style",
      "font-variant",
      "font-weight",
      "glyph-name",
      "glyph-orientation-horizontal",
      "glyph-orientation-vertical",
      "horiz-adv-x",
      "horiz-origin-x",
      "image-rendering",
      "letter-spacing",
      "lighting-color",
      "marker-end",
      "marker-mid",
      "marker-start",
      "overline-position",
      "overline-thickness",
      "paint-order",
      "panose-1",
      "pointer-events",
      "rendering-intent",
      "shape-rendering",
      "stop-color",
      "stop-opacity",
      "strikethrough-position",
      "strikethrough-thickness",
      "stroke-dasharray",
      "stroke-dashoffset",
      "stroke-linecap",
      "stroke-linejoin",
      "stroke-miterlimit",
      "stroke-opacity",
      "stroke-width",
      "text-anchor",
      "text-decoration",
      "text-rendering",
      "underline-position",
      "underline-thickness",
      "unicode-bidi",
      "unicode-range",
      "units-per-em",
      "v-alphabetic",
      "v-hanging",
      "v-ideographic",
      "v-mathematical",
      "vector-effect",
      "vert-adv-y",
      "vert-origin-x",
      "vert-origin-y",
      "word-spacing",
      "writing-mode",
      "xmlns:xlink",
      "x-height"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(n) {
      var r = n.replace(nn, Un);
      en[r] = new Yt(
        r,
        _t,
        !1,
        // mustUseProperty
        n,
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "xlink:actuate",
      "xlink:arcrole",
      "xlink:role",
      "xlink:show",
      "xlink:title",
      "xlink:type"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(n) {
      var r = n.replace(nn, Un);
      en[r] = new Yt(
        r,
        _t,
        !1,
        // mustUseProperty
        n,
        "http://www.w3.org/1999/xlink",
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "xml:base",
      "xml:lang",
      "xml:space"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(n) {
      var r = n.replace(nn, Un);
      en[r] = new Yt(
        r,
        _t,
        !1,
        // mustUseProperty
        n,
        "http://www.w3.org/XML/1998/namespace",
        !1,
        // sanitizeURL
        !1
      );
    }), ["tabIndex", "crossOrigin"].forEach(function(n) {
      en[n] = new Yt(
        n,
        _t,
        !1,
        // mustUseProperty
        n.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    });
    var Ro = "xlinkHref";
    en[Ro] = new Yt(
      "xlinkHref",
      _t,
      !1,
      // mustUseProperty
      "xlink:href",
      "http://www.w3.org/1999/xlink",
      !0,
      // sanitizeURL
      !1
    ), ["src", "href", "action", "formAction"].forEach(function(n) {
      en[n] = new Yt(
        n,
        _t,
        !1,
        // mustUseProperty
        n.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !0,
        // sanitizeURL
        !0
      );
    });
    var Oo = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i, Yr = !1;
    function _o(n) {
      !Yr && Oo.test(n) && (Yr = !0, f("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(n)));
    }
    function Pn(n, r, l, u) {
      if (u.mustUseProperty) {
        var h = u.propertyName;
        return n[h];
      } else {
        Be(l, r), u.sanitizeURL && _o("" + l);
        var C = u.attributeName, E = null;
        if (u.type === Te) {
          if (n.hasAttribute(C)) {
            var L = n.getAttribute(C);
            return L === "" ? !0 : Nt(r, l, u, !1) ? L : L === "" + l ? l : L;
          }
        } else if (n.hasAttribute(C)) {
          if (Nt(r, l, u, !1))
            return n.getAttribute(C);
          if (u.type === Vt)
            return l;
          E = n.getAttribute(C);
        }
        return Nt(r, l, u, !1) ? E === null ? l : E : E === "" + l ? l : E;
      }
    }
    function Tn(n, r, l, u) {
      {
        if (!et(r))
          return;
        if (!n.hasAttribute(r))
          return l === void 0 ? void 0 : null;
        var h = n.getAttribute(r);
        return Be(l, r), h === "" + l ? l : h;
      }
    }
    function Hn(n, r, l, u) {
      var h = Jt(r);
      if (!pt(r, h, u)) {
        if (Nt(r, l, h, u) && (l = null), u || h === null) {
          if (et(r)) {
            var C = r;
            l === null ? n.removeAttribute(C) : (Be(l, r), n.setAttribute(C, "" + l));
          }
          return;
        }
        var E = h.mustUseProperty;
        if (E) {
          var L = h.propertyName;
          if (l === null) {
            var j = h.type;
            n[L] = j === Vt ? !1 : "";
          } else
            n[L] = l;
          return;
        }
        var G = h.attributeName, X = h.attributeNamespace;
        if (l === null)
          n.removeAttribute(G);
        else {
          var he = h.type, pe;
          he === Vt || he === Te && l === !0 ? pe = "" : (Be(l, G), pe = "" + l, h.sanitizeURL && _o(pe.toString())), X ? n.setAttributeNS(X, G, pe) : n.setAttribute(G, pe);
        }
      }
    }
    var Zn = Symbol.for("react.element"), no = Symbol.for("react.portal"), Xo = Symbol.for("react.fragment"), Bo = Symbol.for("react.strict_mode"), zo = Symbol.for("react.profiler"), Dr = Symbol.for("react.provider"), Vo = Symbol.for("react.context"), go = Symbol.for("react.forward_ref"), ze = Symbol.for("react.suspense"), ge = Symbol.for("react.suspense_list"), rt = Symbol.for("react.memo"), bt = Symbol.for("react.lazy"), sn = Symbol.for("react.scope"), yt = Symbol.for("react.debug_trace_mode"), dn = Symbol.for("react.offscreen"), cr = Symbol.for("react.legacy_hidden"), zl = Symbol.for("react.cache"), T0 = Symbol.for("react.tracing_marker"), lo = Symbol.iterator, w0 = "@@iterator";
    function gi(n) {
      if (n === null || typeof n != "object")
        return null;
      var r = lo && n[lo] || n[w0];
      return typeof r == "function" ? r : null;
    }
    var pn = Object.assign, Ji = 0, eg, Vf, Jc, Pa, tg, ia, ng;
    function og() {
    }
    og.__reactDisabledLog = !0;
    function E0() {
      {
        if (Ji === 0) {
          eg = console.log, Vf = console.info, Jc = console.warn, Pa = console.error, tg = console.group, ia = console.groupCollapsed, ng = console.groupEnd;
          var n = {
            configurable: !0,
            enumerable: !0,
            value: og,
            writable: !0
          };
          Object.defineProperties(console, {
            info: n,
            log: n,
            warn: n,
            error: n,
            group: n,
            groupCollapsed: n,
            groupEnd: n
          });
        }
        Ji++;
      }
    }
    function xd() {
      {
        if (Ji--, Ji === 0) {
          var n = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: pn({}, n, {
              value: eg
            }),
            info: pn({}, n, {
              value: Vf
            }),
            warn: pn({}, n, {
              value: Jc
            }),
            error: pn({}, n, {
              value: Pa
            }),
            group: pn({}, n, {
              value: tg
            }),
            groupCollapsed: pn({}, n, {
              value: ia
            }),
            groupEnd: pn({}, n, {
              value: ng
            })
          });
        }
        Ji < 0 && f("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var Vl = i.ReactCurrentDispatcher, Fs;
    function $a(n, r, l) {
      {
        if (Fs === void 0)
          try {
            throw Error();
          } catch (h) {
            var u = h.stack.trim().match(/\n( *(at )?)/);
            Fs = u && u[1] || "";
          }
        return `
` + Fs + n;
      }
    }
    var Ff = !1, Sd;
    {
      var jf = typeof WeakMap == "function" ? WeakMap : Map;
      Sd = new jf();
    }
    function Td(n, r) {
      if (!n || Ff)
        return "";
      {
        var l = Sd.get(n);
        if (l !== void 0)
          return l;
      }
      var u;
      Ff = !0;
      var h = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var C;
      C = Vl.current, Vl.current = null, E0();
      try {
        if (r) {
          var E = function() {
            throw Error();
          };
          if (Object.defineProperty(E.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(E, []);
            } catch (Pe) {
              u = Pe;
            }
            Reflect.construct(n, [], E);
          } else {
            try {
              E.call();
            } catch (Pe) {
              u = Pe;
            }
            n.call(E.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (Pe) {
            u = Pe;
          }
          n();
        }
      } catch (Pe) {
        if (Pe && u && typeof Pe.stack == "string") {
          for (var L = Pe.stack.split(`
`), j = u.stack.split(`
`), G = L.length - 1, X = j.length - 1; G >= 1 && X >= 0 && L[G] !== j[X]; )
            X--;
          for (; G >= 1 && X >= 0; G--, X--)
            if (L[G] !== j[X]) {
              if (G !== 1 || X !== 1)
                do
                  if (G--, X--, X < 0 || L[G] !== j[X]) {
                    var he = `
` + L[G].replace(" at new ", " at ");
                    return n.displayName && he.includes("<anonymous>") && (he = he.replace("<anonymous>", n.displayName)), typeof n == "function" && Sd.set(n, he), he;
                  }
                while (G >= 1 && X >= 0);
              break;
            }
        }
      } finally {
        Ff = !1, Vl.current = C, xd(), Error.prepareStackTrace = h;
      }
      var pe = n ? n.displayName || n.name : "", Ne = pe ? $a(pe) : "";
      return typeof n == "function" && Sd.set(n, Ne), Ne;
    }
    function Uf(n, r, l) {
      return Td(n, !0);
    }
    function js(n, r, l) {
      return Td(n, !1);
    }
    function R0(n) {
      var r = n.prototype;
      return !!(r && r.isReactComponent);
    }
    function eu(n, r, l) {
      if (n == null)
        return "";
      if (typeof n == "function")
        return Td(n, R0(n));
      if (typeof n == "string")
        return $a(n);
      switch (n) {
        case ze:
          return $a("Suspense");
        case ge:
          return $a("SuspenseList");
      }
      if (typeof n == "object")
        switch (n.$$typeof) {
          case go:
            return js(n.render);
          case rt:
            return eu(n.type, r, l);
          case bt: {
            var u = n, h = u._payload, C = u._init;
            try {
              return eu(C(h), r, l);
            } catch {
            }
          }
        }
      return "";
    }
    function kn(n) {
      switch (n._debugOwner && n._debugOwner.type, n._debugSource, n.tag) {
        case k:
          return $a(n.type);
        case Y:
          return $a("Lazy");
        case B:
          return $a("Suspense");
        case W:
          return $a("SuspenseList");
        case g:
        case S:
        case F:
          return js(n.type);
        case A:
          return js(n.type.render);
        case b:
          return Uf(n.type);
        default:
          return "";
      }
    }
    function Hf(n) {
      try {
        var r = "", l = n;
        do
          r += kn(l), l = l.return;
        while (l);
        return r;
      } catch (u) {
        return `
Error generating stack: ` + u.message + `
` + u.stack;
      }
    }
    function rg(n, r, l) {
      var u = n.displayName;
      if (u)
        return u;
      var h = r.displayName || r.name || "";
      return h !== "" ? l + "(" + h + ")" : l;
    }
    function wd(n) {
      return n.displayName || "Context";
    }
    function Vn(n) {
      if (n == null)
        return null;
      if (typeof n.tag == "number" && f("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof n == "function")
        return n.displayName || n.name || null;
      if (typeof n == "string")
        return n;
      switch (n) {
        case Xo:
          return "Fragment";
        case no:
          return "Portal";
        case zo:
          return "Profiler";
        case Bo:
          return "StrictMode";
        case ze:
          return "Suspense";
        case ge:
          return "SuspenseList";
      }
      if (typeof n == "object")
        switch (n.$$typeof) {
          case Vo:
            var r = n;
            return wd(r) + ".Consumer";
          case Dr:
            var l = n;
            return wd(l._context) + ".Provider";
          case go:
            return rg(n, n.render, "ForwardRef");
          case rt:
            var u = n.displayName || null;
            return u !== null ? u : Vn(n.type) || "Memo";
          case bt: {
            var h = n, C = h._payload, E = h._init;
            try {
              return Vn(E(C));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    function ag(n, r, l) {
      var u = r.displayName || r.name || "";
      return n.displayName || (u !== "" ? l + "(" + u + ")" : l);
    }
    function Wf(n) {
      return n.displayName || "Context";
    }
    function on(n) {
      var r = n.tag, l = n.type;
      switch (r) {
        case Q:
          return "Cache";
        case I:
          var u = l;
          return Wf(u) + ".Consumer";
        case _:
          var h = l;
          return Wf(h._context) + ".Provider";
        case J:
          return "DehydratedFragment";
        case A:
          return ag(l, l.render, "ForwardRef");
        case P:
          return "Fragment";
        case k:
          return l;
        case D:
          return "Portal";
        case R:
          return "Root";
        case $:
          return "Text";
        case Y:
          return Vn(l);
        case O:
          return l === Bo ? "StrictMode" : "Mode";
        case Z:
          return "Offscreen";
        case V:
          return "Profiler";
        case te:
          return "Scope";
        case B:
          return "Suspense";
        case W:
          return "SuspenseList";
        case re:
          return "TracingMarker";
        case b:
        case g:
        case H:
        case S:
        case M:
        case F:
          if (typeof l == "function")
            return l.displayName || l.name || null;
          if (typeof l == "string")
            return l;
          break;
      }
      return null;
    }
    var tu = i.ReactDebugCurrentFrame, yo = null, sa = !1;
    function la() {
      {
        if (yo === null)
          return null;
        var n = yo._debugOwner;
        if (n !== null && typeof n < "u")
          return on(n);
      }
      return null;
    }
    function nu() {
      return yo === null ? "" : Hf(yo);
    }
    function ko() {
      tu.getCurrentStack = null, yo = null, sa = !1;
    }
    function $n(n) {
      tu.getCurrentStack = n === null ? null : nu, yo = n, sa = !1;
    }
    function O0() {
      return yo;
    }
    function Ia(n) {
      sa = n;
    }
    function ur(n) {
      return "" + n;
    }
    function es(n) {
      switch (typeof n) {
        case "boolean":
        case "number":
        case "string":
        case "undefined":
          return n;
        case "object":
          return gt(n), n;
        default:
          return "";
      }
    }
    var ig = {
      button: !0,
      checkbox: !0,
      image: !0,
      hidden: !0,
      radio: !0,
      reset: !0,
      submit: !0
    };
    function Fl(n, r) {
      ig[r.type] || r.onChange || r.onInput || r.readOnly || r.disabled || r.value == null || f("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`."), r.onChange || r.readOnly || r.disabled || r.checked == null || f("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function Yf(n) {
      var r = n.type, l = n.nodeName;
      return l && l.toLowerCase() === "input" && (r === "checkbox" || r === "radio");
    }
    function sg(n) {
      return n._valueTracker;
    }
    function ou(n) {
      n._valueTracker = null;
    }
    function ru(n) {
      var r = "";
      return n && (Yf(n) ? r = n.checked ? "true" : "false" : r = n.value), r;
    }
    function jl(n) {
      var r = Yf(n) ? "checked" : "value", l = Object.getOwnPropertyDescriptor(n.constructor.prototype, r);
      gt(n[r]);
      var u = "" + n[r];
      if (!(n.hasOwnProperty(r) || typeof l > "u" || typeof l.get != "function" || typeof l.set != "function")) {
        var h = l.get, C = l.set;
        Object.defineProperty(n, r, {
          configurable: !0,
          get: function() {
            return h.call(this);
          },
          set: function(L) {
            gt(L), u = "" + L, C.call(this, L);
          }
        }), Object.defineProperty(n, r, {
          enumerable: l.enumerable
        });
        var E = {
          getValue: function() {
            return u;
          },
          setValue: function(L) {
            gt(L), u = "" + L;
          },
          stopTracking: function() {
            ou(n), delete n[r];
          }
        };
        return E;
      }
    }
    function Us(n) {
      sg(n) || (n._valueTracker = jl(n));
    }
    function lg(n) {
      if (!n)
        return !1;
      var r = sg(n);
      if (!r)
        return !0;
      var l = r.getValue(), u = ru(n);
      return u !== l ? (r.setValue(u), !0) : !1;
    }
    function Ed(n) {
      if (n = n || (typeof document < "u" ? document : void 0), typeof n > "u")
        return null;
      try {
        return n.activeElement || n.body;
      } catch {
        return n.body;
      }
    }
    var Rd = !1, au = !1, Od = !1, Gf = !1;
    function yi(n) {
      var r = n.type === "checkbox" || n.type === "radio";
      return r ? n.checked != null : n.value != null;
    }
    function iu(n, r) {
      var l = n, u = r.checked, h = pn({}, r, {
        defaultChecked: void 0,
        defaultValue: void 0,
        value: void 0,
        checked: u ?? l._wrapperState.initialChecked
      });
      return h;
    }
    function su(n, r) {
      Fl("input", r), r.checked !== void 0 && r.defaultChecked !== void 0 && !au && (f("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", la() || "A component", r.type), au = !0), r.value !== void 0 && r.defaultValue !== void 0 && !Rd && (f("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", la() || "A component", r.type), Rd = !0);
      var l = n, u = r.defaultValue == null ? "" : r.defaultValue;
      l._wrapperState = {
        initialChecked: r.checked != null ? r.checked : r.defaultChecked,
        initialValue: es(r.value != null ? r.value : u),
        controlled: yi(r)
      };
    }
    function qf(n, r) {
      var l = n, u = r.checked;
      u != null && Hn(l, "checked", u, !1);
    }
    function Ul(n, r) {
      var l = n;
      {
        var u = yi(r);
        !l._wrapperState.controlled && u && !Gf && (f("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components"), Gf = !0), l._wrapperState.controlled && !u && !Od && (f("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components"), Od = !0);
      }
      qf(n, r);
      var h = es(r.value), C = r.type;
      if (h != null)
        C === "number" ? (h === 0 && l.value === "" || // We explicitly want to coerce to number here if possible.
        // eslint-disable-next-line
        l.value != h) && (l.value = ur(h)) : l.value !== ur(h) && (l.value = ur(h));
      else if (C === "submit" || C === "reset") {
        l.removeAttribute("value");
        return;
      }
      r.hasOwnProperty("value") ? ts(l, r.type, h) : r.hasOwnProperty("defaultValue") && ts(l, r.type, es(r.defaultValue)), r.checked == null && r.defaultChecked != null && (l.defaultChecked = !!r.defaultChecked);
    }
    function lu(n, r, l) {
      var u = n;
      if (r.hasOwnProperty("value") || r.hasOwnProperty("defaultValue")) {
        var h = r.type, C = h === "submit" || h === "reset";
        if (C && (r.value === void 0 || r.value === null))
          return;
        var E = ur(u._wrapperState.initialValue);
        l || E !== u.value && (u.value = E), u.defaultValue = E;
      }
      var L = u.name;
      L !== "" && (u.name = ""), u.defaultChecked = !u.defaultChecked, u.defaultChecked = !!u._wrapperState.initialChecked, L !== "" && (u.name = L);
    }
    function cg(n, r) {
      var l = n;
      Ul(l, r), Gr(l, r);
    }
    function Gr(n, r) {
      var l = r.name;
      if (r.type === "radio" && l != null) {
        for (var u = n; u.parentNode; )
          u = u.parentNode;
        Be(l, "name");
        for (var h = u.querySelectorAll("input[name=" + JSON.stringify("" + l) + '][type="radio"]'), C = 0; C < h.length; C++) {
          var E = h[C];
          if (!(E === n || E.form !== n.form)) {
            var L = zy(E);
            if (!L)
              throw new Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
            lg(E), Ul(E, L);
          }
        }
      }
    }
    function ts(n, r, l) {
      // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
      (r !== "number" || Ed(n.ownerDocument) !== n) && (l == null ? n.defaultValue = ur(n._wrapperState.initialValue) : n.defaultValue !== ur(l) && (n.defaultValue = ur(l)));
    }
    var kd = !1, Hl = !1, ug = !1;
    function Dd(n, r) {
      r.value == null && (typeof r.children == "object" && r.children !== null ? e.Children.forEach(r.children, function(l) {
        l != null && (typeof l == "string" || typeof l == "number" || Hl || (Hl = !0, f("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.")));
      }) : r.dangerouslySetInnerHTML != null && (ug || (ug = !0, f("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.")))), r.selected != null && !kd && (f("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>."), kd = !0);
    }
    function Kf(n, r) {
      r.value != null && n.setAttribute("value", ur(es(r.value)));
    }
    var cu = Array.isArray;
    function Fo(n) {
      return cu(n);
    }
    var Md;
    Md = !1;
    function dg() {
      var n = la();
      return n ? `

Check the render method of \`` + n + "`." : "";
    }
    var pg = ["value", "defaultValue"];
    function k0(n) {
      {
        Fl("select", n);
        for (var r = 0; r < pg.length; r++) {
          var l = pg[r];
          if (n[l] != null) {
            var u = Fo(n[l]);
            n.multiple && !u ? f("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", l, dg()) : !n.multiple && u && f("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", l, dg());
          }
        }
      }
    }
    function ns(n, r, l, u) {
      var h = n.options;
      if (r) {
        for (var C = l, E = {}, L = 0; L < C.length; L++)
          E["$" + C[L]] = !0;
        for (var j = 0; j < h.length; j++) {
          var G = E.hasOwnProperty("$" + h[j].value);
          h[j].selected !== G && (h[j].selected = G), G && u && (h[j].defaultSelected = !0);
        }
      } else {
        for (var X = ur(es(l)), he = null, pe = 0; pe < h.length; pe++) {
          if (h[pe].value === X) {
            h[pe].selected = !0, u && (h[pe].defaultSelected = !0);
            return;
          }
          he === null && !h[pe].disabled && (he = h[pe]);
        }
        he !== null && (he.selected = !0);
      }
    }
    function Qf(n, r) {
      return pn({}, r, {
        value: void 0
      });
    }
    function fg(n, r) {
      var l = n;
      k0(r), l._wrapperState = {
        wasMultiple: !!r.multiple
      }, r.value !== void 0 && r.defaultValue !== void 0 && !Md && (f("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components"), Md = !0);
    }
    function D0(n, r) {
      var l = n;
      l.multiple = !!r.multiple;
      var u = r.value;
      u != null ? ns(l, !!r.multiple, u, !1) : r.defaultValue != null && ns(l, !!r.multiple, r.defaultValue, !0);
    }
    function M0(n, r) {
      var l = n, u = l._wrapperState.wasMultiple;
      l._wrapperState.wasMultiple = !!r.multiple;
      var h = r.value;
      h != null ? ns(l, !!r.multiple, h, !1) : u !== !!r.multiple && (r.defaultValue != null ? ns(l, !!r.multiple, r.defaultValue, !0) : ns(l, !!r.multiple, r.multiple ? [] : "", !1));
    }
    function N0(n, r) {
      var l = n, u = r.value;
      u != null && ns(l, !!r.multiple, u, !1);
    }
    var Xf = !1;
    function Zf(n, r) {
      var l = n;
      if (r.dangerouslySetInnerHTML != null)
        throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
      var u = pn({}, r, {
        value: void 0,
        defaultValue: void 0,
        children: ur(l._wrapperState.initialValue)
      });
      return u;
    }
    function mg(n, r) {
      var l = n;
      Fl("textarea", r), r.value !== void 0 && r.defaultValue !== void 0 && !Xf && (f("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", la() || "A component"), Xf = !0);
      var u = r.value;
      if (u == null) {
        var h = r.children, C = r.defaultValue;
        if (h != null) {
          f("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
          {
            if (C != null)
              throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
            if (Fo(h)) {
              if (h.length > 1)
                throw new Error("<textarea> can only have at most one child.");
              h = h[0];
            }
            C = h;
          }
        }
        C == null && (C = ""), u = C;
      }
      l._wrapperState = {
        initialValue: es(u)
      };
    }
    function hg(n, r) {
      var l = n, u = es(r.value), h = es(r.defaultValue);
      if (u != null) {
        var C = ur(u);
        C !== l.value && (l.value = C), r.defaultValue == null && l.defaultValue !== C && (l.defaultValue = C);
      }
      h != null && (l.defaultValue = ur(h));
    }
    function vg(n, r) {
      var l = n, u = l.textContent;
      u === l._wrapperState.initialValue && u !== "" && u !== null && (l.value = u);
    }
    function Jf(n, r) {
      hg(n, r);
    }
    var bi = "http://www.w3.org/1999/xhtml", P0 = "http://www.w3.org/1998/Math/MathML", em = "http://www.w3.org/2000/svg";
    function Nd(n) {
      switch (n) {
        case "svg":
          return em;
        case "math":
          return P0;
        default:
          return bi;
      }
    }
    function tm(n, r) {
      return n == null || n === bi ? Nd(r) : n === em && r === "foreignObject" ? bi : n;
    }
    var $0 = function(n) {
      return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(r, l, u, h) {
        MSApp.execUnsafeLocalFunction(function() {
          return n(r, l, u, h);
        });
      } : n;
    }, Pd, gg = $0(function(n, r) {
      if (n.namespaceURI === em && !("innerHTML" in n)) {
        Pd = Pd || document.createElement("div"), Pd.innerHTML = "<svg>" + r.valueOf().toString() + "</svg>";
        for (var l = Pd.firstChild; n.firstChild; )
          n.removeChild(n.firstChild);
        for (; l.firstChild; )
          n.appendChild(l.firstChild);
        return;
      }
      n.innerHTML = r;
    }), Mr = 1, Ci = 3, bo = 8, La = 9, Hs = 11, $d = function(n, r) {
      if (r) {
        var l = n.firstChild;
        if (l && l === n.lastChild && l.nodeType === Ci) {
          l.nodeValue = r;
          return;
        }
      }
      n.textContent = r;
    }, yg = {
      animation: ["animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationPlayState", "animationTimingFunction"],
      background: ["backgroundAttachment", "backgroundClip", "backgroundColor", "backgroundImage", "backgroundOrigin", "backgroundPositionX", "backgroundPositionY", "backgroundRepeat", "backgroundSize"],
      backgroundPosition: ["backgroundPositionX", "backgroundPositionY"],
      border: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderTopColor", "borderTopStyle", "borderTopWidth"],
      borderBlockEnd: ["borderBlockEndColor", "borderBlockEndStyle", "borderBlockEndWidth"],
      borderBlockStart: ["borderBlockStartColor", "borderBlockStartStyle", "borderBlockStartWidth"],
      borderBottom: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth"],
      borderColor: ["borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor"],
      borderImage: ["borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth"],
      borderInlineEnd: ["borderInlineEndColor", "borderInlineEndStyle", "borderInlineEndWidth"],
      borderInlineStart: ["borderInlineStartColor", "borderInlineStartStyle", "borderInlineStartWidth"],
      borderLeft: ["borderLeftColor", "borderLeftStyle", "borderLeftWidth"],
      borderRadius: ["borderBottomLeftRadius", "borderBottomRightRadius", "borderTopLeftRadius", "borderTopRightRadius"],
      borderRight: ["borderRightColor", "borderRightStyle", "borderRightWidth"],
      borderStyle: ["borderBottomStyle", "borderLeftStyle", "borderRightStyle", "borderTopStyle"],
      borderTop: ["borderTopColor", "borderTopStyle", "borderTopWidth"],
      borderWidth: ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopWidth"],
      columnRule: ["columnRuleColor", "columnRuleStyle", "columnRuleWidth"],
      columns: ["columnCount", "columnWidth"],
      flex: ["flexBasis", "flexGrow", "flexShrink"],
      flexFlow: ["flexDirection", "flexWrap"],
      font: ["fontFamily", "fontFeatureSettings", "fontKerning", "fontLanguageOverride", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition", "fontWeight", "lineHeight"],
      fontVariant: ["fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition"],
      gap: ["columnGap", "rowGap"],
      grid: ["gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
      gridArea: ["gridColumnEnd", "gridColumnStart", "gridRowEnd", "gridRowStart"],
      gridColumn: ["gridColumnEnd", "gridColumnStart"],
      gridColumnGap: ["columnGap"],
      gridGap: ["columnGap", "rowGap"],
      gridRow: ["gridRowEnd", "gridRowStart"],
      gridRowGap: ["rowGap"],
      gridTemplate: ["gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
      listStyle: ["listStyleImage", "listStylePosition", "listStyleType"],
      margin: ["marginBottom", "marginLeft", "marginRight", "marginTop"],
      marker: ["markerEnd", "markerMid", "markerStart"],
      mask: ["maskClip", "maskComposite", "maskImage", "maskMode", "maskOrigin", "maskPositionX", "maskPositionY", "maskRepeat", "maskSize"],
      maskPosition: ["maskPositionX", "maskPositionY"],
      outline: ["outlineColor", "outlineStyle", "outlineWidth"],
      overflow: ["overflowX", "overflowY"],
      padding: ["paddingBottom", "paddingLeft", "paddingRight", "paddingTop"],
      placeContent: ["alignContent", "justifyContent"],
      placeItems: ["alignItems", "justifyItems"],
      placeSelf: ["alignSelf", "justifySelf"],
      textDecoration: ["textDecorationColor", "textDecorationLine", "textDecorationStyle"],
      textEmphasis: ["textEmphasisColor", "textEmphasisStyle"],
      transition: ["transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction"],
      wordWrap: ["overflowWrap"]
    }, Wl = {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      // SVG-related properties
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0
    };
    function bg(n, r) {
      return n + r.charAt(0).toUpperCase() + r.substring(1);
    }
    var Cg = ["Webkit", "ms", "Moz", "O"];
    Object.keys(Wl).forEach(function(n) {
      Cg.forEach(function(r) {
        Wl[bg(r, n)] = Wl[n];
      });
    });
    function Id(n, r, l) {
      var u = r == null || typeof r == "boolean" || r === "";
      return u ? "" : !l && typeof r == "number" && r !== 0 && !(Wl.hasOwnProperty(n) && Wl[n]) ? r + "px" : (Ve(r, n), ("" + r).trim());
    }
    var Yl = /([A-Z])/g, I0 = /^ms-/;
    function L0(n) {
      return n.replace(Yl, "-$1").toLowerCase().replace(I0, "-ms-");
    }
    var xg = function() {
    };
    {
      var Sg = /^(?:webkit|moz|o)[A-Z]/, Tg = /^-ms-/, uu = /-(.)/g, Gl = /;\s*$/, ql = {}, Kl = {}, wg = !1, nm = !1, om = function(n) {
        return n.replace(uu, function(r, l) {
          return l.toUpperCase();
        });
      }, rm = function(n) {
        ql.hasOwnProperty(n) && ql[n] || (ql[n] = !0, f(
          "Unsupported style property %s. Did you mean %s?",
          n,
          // As Andi Smith suggests
          // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
          // is converted to lowercase `ms`.
          om(n.replace(Tg, "ms-"))
        ));
      }, Eg = function(n) {
        ql.hasOwnProperty(n) && ql[n] || (ql[n] = !0, f("Unsupported vendor-prefixed style property %s. Did you mean %s?", n, n.charAt(0).toUpperCase() + n.slice(1)));
      }, Rg = function(n, r) {
        Kl.hasOwnProperty(r) && Kl[r] || (Kl[r] = !0, f(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, n, r.replace(Gl, "")));
      }, Og = function(n, r) {
        wg || (wg = !0, f("`NaN` is an invalid value for the `%s` css style property.", n));
      }, A0 = function(n, r) {
        nm || (nm = !0, f("`Infinity` is an invalid value for the `%s` css style property.", n));
      };
      xg = function(n, r) {
        n.indexOf("-") > -1 ? rm(n) : Sg.test(n) ? Eg(n) : Gl.test(r) && Rg(n, r), typeof r == "number" && (isNaN(r) ? Og(n, r) : isFinite(r) || A0(n, r));
      };
    }
    var _0 = xg;
    function B0(n) {
      {
        var r = "", l = "";
        for (var u in n)
          if (n.hasOwnProperty(u)) {
            var h = n[u];
            if (h != null) {
              var C = u.indexOf("--") === 0;
              r += l + (C ? u : L0(u)) + ":", r += Id(u, h, C), l = ";";
            }
          }
        return r || null;
      }
    }
    function kg(n, r) {
      var l = n.style;
      for (var u in r)
        if (r.hasOwnProperty(u)) {
          var h = u.indexOf("--") === 0;
          h || _0(u, r[u]);
          var C = Id(u, r[u], h);
          u === "float" && (u = "cssFloat"), h ? l.setProperty(u, C) : l[u] = C;
        }
    }
    function z0(n) {
      return n == null || typeof n == "boolean" || n === "";
    }
    function ca(n) {
      var r = {};
      for (var l in n)
        for (var u = yg[l] || [l], h = 0; h < u.length; h++)
          r[u[h]] = l;
      return r;
    }
    function du(n, r) {
      {
        if (!r)
          return;
        var l = ca(n), u = ca(r), h = {};
        for (var C in l) {
          var E = l[C], L = u[C];
          if (L && E !== L) {
            var j = E + "," + L;
            if (h[j])
              continue;
            h[j] = !0, f("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", z0(n[E]) ? "Removing" : "Updating", E, L);
          }
        }
      }
    }
    var Dg = {
      area: !0,
      base: !0,
      br: !0,
      col: !0,
      embed: !0,
      hr: !0,
      img: !0,
      input: !0,
      keygen: !0,
      link: !0,
      meta: !0,
      param: !0,
      source: !0,
      track: !0,
      wbr: !0
      // NOTE: menuitem's close tag should be omitted, but that causes problems.
    }, Mg = pn({
      menuitem: !0
    }, Dg), Ng = "__html";
    function Ld(n, r) {
      if (r) {
        if (Mg[n] && (r.children != null || r.dangerouslySetInnerHTML != null))
          throw new Error(n + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
        if (r.dangerouslySetInnerHTML != null) {
          if (r.children != null)
            throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
          if (typeof r.dangerouslySetInnerHTML != "object" || !(Ng in r.dangerouslySetInnerHTML))
            throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        }
        if (!r.suppressContentEditableWarning && r.contentEditable && r.children != null && f("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional."), r.style != null && typeof r.style != "object")
          throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
      }
    }
    function xi(n, r) {
      if (n.indexOf("-") === -1)
        return typeof r.is == "string";
      switch (n) {
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return !1;
        default:
          return !0;
      }
    }
    var Ad = {
      // HTML
      accept: "accept",
      acceptcharset: "acceptCharset",
      "accept-charset": "acceptCharset",
      accesskey: "accessKey",
      action: "action",
      allowfullscreen: "allowFullScreen",
      alt: "alt",
      as: "as",
      async: "async",
      autocapitalize: "autoCapitalize",
      autocomplete: "autoComplete",
      autocorrect: "autoCorrect",
      autofocus: "autoFocus",
      autoplay: "autoPlay",
      autosave: "autoSave",
      capture: "capture",
      cellpadding: "cellPadding",
      cellspacing: "cellSpacing",
      challenge: "challenge",
      charset: "charSet",
      checked: "checked",
      children: "children",
      cite: "cite",
      class: "className",
      classid: "classID",
      classname: "className",
      cols: "cols",
      colspan: "colSpan",
      content: "content",
      contenteditable: "contentEditable",
      contextmenu: "contextMenu",
      controls: "controls",
      controlslist: "controlsList",
      coords: "coords",
      crossorigin: "crossOrigin",
      dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
      data: "data",
      datetime: "dateTime",
      default: "default",
      defaultchecked: "defaultChecked",
      defaultvalue: "defaultValue",
      defer: "defer",
      dir: "dir",
      disabled: "disabled",
      disablepictureinpicture: "disablePictureInPicture",
      disableremoteplayback: "disableRemotePlayback",
      download: "download",
      draggable: "draggable",
      enctype: "encType",
      enterkeyhint: "enterKeyHint",
      for: "htmlFor",
      form: "form",
      formmethod: "formMethod",
      formaction: "formAction",
      formenctype: "formEncType",
      formnovalidate: "formNoValidate",
      formtarget: "formTarget",
      frameborder: "frameBorder",
      headers: "headers",
      height: "height",
      hidden: "hidden",
      high: "high",
      href: "href",
      hreflang: "hrefLang",
      htmlfor: "htmlFor",
      httpequiv: "httpEquiv",
      "http-equiv": "httpEquiv",
      icon: "icon",
      id: "id",
      imagesizes: "imageSizes",
      imagesrcset: "imageSrcSet",
      innerhtml: "innerHTML",
      inputmode: "inputMode",
      integrity: "integrity",
      is: "is",
      itemid: "itemID",
      itemprop: "itemProp",
      itemref: "itemRef",
      itemscope: "itemScope",
      itemtype: "itemType",
      keyparams: "keyParams",
      keytype: "keyType",
      kind: "kind",
      label: "label",
      lang: "lang",
      list: "list",
      loop: "loop",
      low: "low",
      manifest: "manifest",
      marginwidth: "marginWidth",
      marginheight: "marginHeight",
      max: "max",
      maxlength: "maxLength",
      media: "media",
      mediagroup: "mediaGroup",
      method: "method",
      min: "min",
      minlength: "minLength",
      multiple: "multiple",
      muted: "muted",
      name: "name",
      nomodule: "noModule",
      nonce: "nonce",
      novalidate: "noValidate",
      open: "open",
      optimum: "optimum",
      pattern: "pattern",
      placeholder: "placeholder",
      playsinline: "playsInline",
      poster: "poster",
      preload: "preload",
      profile: "profile",
      radiogroup: "radioGroup",
      readonly: "readOnly",
      referrerpolicy: "referrerPolicy",
      rel: "rel",
      required: "required",
      reversed: "reversed",
      role: "role",
      rows: "rows",
      rowspan: "rowSpan",
      sandbox: "sandbox",
      scope: "scope",
      scoped: "scoped",
      scrolling: "scrolling",
      seamless: "seamless",
      selected: "selected",
      shape: "shape",
      size: "size",
      sizes: "sizes",
      span: "span",
      spellcheck: "spellCheck",
      src: "src",
      srcdoc: "srcDoc",
      srclang: "srcLang",
      srcset: "srcSet",
      start: "start",
      step: "step",
      style: "style",
      summary: "summary",
      tabindex: "tabIndex",
      target: "target",
      title: "title",
      type: "type",
      usemap: "useMap",
      value: "value",
      width: "width",
      wmode: "wmode",
      wrap: "wrap",
      // SVG
      about: "about",
      accentheight: "accentHeight",
      "accent-height": "accentHeight",
      accumulate: "accumulate",
      additive: "additive",
      alignmentbaseline: "alignmentBaseline",
      "alignment-baseline": "alignmentBaseline",
      allowreorder: "allowReorder",
      alphabetic: "alphabetic",
      amplitude: "amplitude",
      arabicform: "arabicForm",
      "arabic-form": "arabicForm",
      ascent: "ascent",
      attributename: "attributeName",
      attributetype: "attributeType",
      autoreverse: "autoReverse",
      azimuth: "azimuth",
      basefrequency: "baseFrequency",
      baselineshift: "baselineShift",
      "baseline-shift": "baselineShift",
      baseprofile: "baseProfile",
      bbox: "bbox",
      begin: "begin",
      bias: "bias",
      by: "by",
      calcmode: "calcMode",
      capheight: "capHeight",
      "cap-height": "capHeight",
      clip: "clip",
      clippath: "clipPath",
      "clip-path": "clipPath",
      clippathunits: "clipPathUnits",
      cliprule: "clipRule",
      "clip-rule": "clipRule",
      color: "color",
      colorinterpolation: "colorInterpolation",
      "color-interpolation": "colorInterpolation",
      colorinterpolationfilters: "colorInterpolationFilters",
      "color-interpolation-filters": "colorInterpolationFilters",
      colorprofile: "colorProfile",
      "color-profile": "colorProfile",
      colorrendering: "colorRendering",
      "color-rendering": "colorRendering",
      contentscripttype: "contentScriptType",
      contentstyletype: "contentStyleType",
      cursor: "cursor",
      cx: "cx",
      cy: "cy",
      d: "d",
      datatype: "datatype",
      decelerate: "decelerate",
      descent: "descent",
      diffuseconstant: "diffuseConstant",
      direction: "direction",
      display: "display",
      divisor: "divisor",
      dominantbaseline: "dominantBaseline",
      "dominant-baseline": "dominantBaseline",
      dur: "dur",
      dx: "dx",
      dy: "dy",
      edgemode: "edgeMode",
      elevation: "elevation",
      enablebackground: "enableBackground",
      "enable-background": "enableBackground",
      end: "end",
      exponent: "exponent",
      externalresourcesrequired: "externalResourcesRequired",
      fill: "fill",
      fillopacity: "fillOpacity",
      "fill-opacity": "fillOpacity",
      fillrule: "fillRule",
      "fill-rule": "fillRule",
      filter: "filter",
      filterres: "filterRes",
      filterunits: "filterUnits",
      floodopacity: "floodOpacity",
      "flood-opacity": "floodOpacity",
      floodcolor: "floodColor",
      "flood-color": "floodColor",
      focusable: "focusable",
      fontfamily: "fontFamily",
      "font-family": "fontFamily",
      fontsize: "fontSize",
      "font-size": "fontSize",
      fontsizeadjust: "fontSizeAdjust",
      "font-size-adjust": "fontSizeAdjust",
      fontstretch: "fontStretch",
      "font-stretch": "fontStretch",
      fontstyle: "fontStyle",
      "font-style": "fontStyle",
      fontvariant: "fontVariant",
      "font-variant": "fontVariant",
      fontweight: "fontWeight",
      "font-weight": "fontWeight",
      format: "format",
      from: "from",
      fx: "fx",
      fy: "fy",
      g1: "g1",
      g2: "g2",
      glyphname: "glyphName",
      "glyph-name": "glyphName",
      glyphorientationhorizontal: "glyphOrientationHorizontal",
      "glyph-orientation-horizontal": "glyphOrientationHorizontal",
      glyphorientationvertical: "glyphOrientationVertical",
      "glyph-orientation-vertical": "glyphOrientationVertical",
      glyphref: "glyphRef",
      gradienttransform: "gradientTransform",
      gradientunits: "gradientUnits",
      hanging: "hanging",
      horizadvx: "horizAdvX",
      "horiz-adv-x": "horizAdvX",
      horizoriginx: "horizOriginX",
      "horiz-origin-x": "horizOriginX",
      ideographic: "ideographic",
      imagerendering: "imageRendering",
      "image-rendering": "imageRendering",
      in2: "in2",
      in: "in",
      inlist: "inlist",
      intercept: "intercept",
      k1: "k1",
      k2: "k2",
      k3: "k3",
      k4: "k4",
      k: "k",
      kernelmatrix: "kernelMatrix",
      kernelunitlength: "kernelUnitLength",
      kerning: "kerning",
      keypoints: "keyPoints",
      keysplines: "keySplines",
      keytimes: "keyTimes",
      lengthadjust: "lengthAdjust",
      letterspacing: "letterSpacing",
      "letter-spacing": "letterSpacing",
      lightingcolor: "lightingColor",
      "lighting-color": "lightingColor",
      limitingconeangle: "limitingConeAngle",
      local: "local",
      markerend: "markerEnd",
      "marker-end": "markerEnd",
      markerheight: "markerHeight",
      markermid: "markerMid",
      "marker-mid": "markerMid",
      markerstart: "markerStart",
      "marker-start": "markerStart",
      markerunits: "markerUnits",
      markerwidth: "markerWidth",
      mask: "mask",
      maskcontentunits: "maskContentUnits",
      maskunits: "maskUnits",
      mathematical: "mathematical",
      mode: "mode",
      numoctaves: "numOctaves",
      offset: "offset",
      opacity: "opacity",
      operator: "operator",
      order: "order",
      orient: "orient",
      orientation: "orientation",
      origin: "origin",
      overflow: "overflow",
      overlineposition: "overlinePosition",
      "overline-position": "overlinePosition",
      overlinethickness: "overlineThickness",
      "overline-thickness": "overlineThickness",
      paintorder: "paintOrder",
      "paint-order": "paintOrder",
      panose1: "panose1",
      "panose-1": "panose1",
      pathlength: "pathLength",
      patterncontentunits: "patternContentUnits",
      patterntransform: "patternTransform",
      patternunits: "patternUnits",
      pointerevents: "pointerEvents",
      "pointer-events": "pointerEvents",
      points: "points",
      pointsatx: "pointsAtX",
      pointsaty: "pointsAtY",
      pointsatz: "pointsAtZ",
      prefix: "prefix",
      preservealpha: "preserveAlpha",
      preserveaspectratio: "preserveAspectRatio",
      primitiveunits: "primitiveUnits",
      property: "property",
      r: "r",
      radius: "radius",
      refx: "refX",
      refy: "refY",
      renderingintent: "renderingIntent",
      "rendering-intent": "renderingIntent",
      repeatcount: "repeatCount",
      repeatdur: "repeatDur",
      requiredextensions: "requiredExtensions",
      requiredfeatures: "requiredFeatures",
      resource: "resource",
      restart: "restart",
      result: "result",
      results: "results",
      rotate: "rotate",
      rx: "rx",
      ry: "ry",
      scale: "scale",
      security: "security",
      seed: "seed",
      shaperendering: "shapeRendering",
      "shape-rendering": "shapeRendering",
      slope: "slope",
      spacing: "spacing",
      specularconstant: "specularConstant",
      specularexponent: "specularExponent",
      speed: "speed",
      spreadmethod: "spreadMethod",
      startoffset: "startOffset",
      stddeviation: "stdDeviation",
      stemh: "stemh",
      stemv: "stemv",
      stitchtiles: "stitchTiles",
      stopcolor: "stopColor",
      "stop-color": "stopColor",
      stopopacity: "stopOpacity",
      "stop-opacity": "stopOpacity",
      strikethroughposition: "strikethroughPosition",
      "strikethrough-position": "strikethroughPosition",
      strikethroughthickness: "strikethroughThickness",
      "strikethrough-thickness": "strikethroughThickness",
      string: "string",
      stroke: "stroke",
      strokedasharray: "strokeDasharray",
      "stroke-dasharray": "strokeDasharray",
      strokedashoffset: "strokeDashoffset",
      "stroke-dashoffset": "strokeDashoffset",
      strokelinecap: "strokeLinecap",
      "stroke-linecap": "strokeLinecap",
      strokelinejoin: "strokeLinejoin",
      "stroke-linejoin": "strokeLinejoin",
      strokemiterlimit: "strokeMiterlimit",
      "stroke-miterlimit": "strokeMiterlimit",
      strokewidth: "strokeWidth",
      "stroke-width": "strokeWidth",
      strokeopacity: "strokeOpacity",
      "stroke-opacity": "strokeOpacity",
      suppresscontenteditablewarning: "suppressContentEditableWarning",
      suppresshydrationwarning: "suppressHydrationWarning",
      surfacescale: "surfaceScale",
      systemlanguage: "systemLanguage",
      tablevalues: "tableValues",
      targetx: "targetX",
      targety: "targetY",
      textanchor: "textAnchor",
      "text-anchor": "textAnchor",
      textdecoration: "textDecoration",
      "text-decoration": "textDecoration",
      textlength: "textLength",
      textrendering: "textRendering",
      "text-rendering": "textRendering",
      to: "to",
      transform: "transform",
      typeof: "typeof",
      u1: "u1",
      u2: "u2",
      underlineposition: "underlinePosition",
      "underline-position": "underlinePosition",
      underlinethickness: "underlineThickness",
      "underline-thickness": "underlineThickness",
      unicode: "unicode",
      unicodebidi: "unicodeBidi",
      "unicode-bidi": "unicodeBidi",
      unicoderange: "unicodeRange",
      "unicode-range": "unicodeRange",
      unitsperem: "unitsPerEm",
      "units-per-em": "unitsPerEm",
      unselectable: "unselectable",
      valphabetic: "vAlphabetic",
      "v-alphabetic": "vAlphabetic",
      values: "values",
      vectoreffect: "vectorEffect",
      "vector-effect": "vectorEffect",
      version: "version",
      vertadvy: "vertAdvY",
      "vert-adv-y": "vertAdvY",
      vertoriginx: "vertOriginX",
      "vert-origin-x": "vertOriginX",
      vertoriginy: "vertOriginY",
      "vert-origin-y": "vertOriginY",
      vhanging: "vHanging",
      "v-hanging": "vHanging",
      videographic: "vIdeographic",
      "v-ideographic": "vIdeographic",
      viewbox: "viewBox",
      viewtarget: "viewTarget",
      visibility: "visibility",
      vmathematical: "vMathematical",
      "v-mathematical": "vMathematical",
      vocab: "vocab",
      widths: "widths",
      wordspacing: "wordSpacing",
      "word-spacing": "wordSpacing",
      writingmode: "writingMode",
      "writing-mode": "writingMode",
      x1: "x1",
      x2: "x2",
      x: "x",
      xchannelselector: "xChannelSelector",
      xheight: "xHeight",
      "x-height": "xHeight",
      xlinkactuate: "xlinkActuate",
      "xlink:actuate": "xlinkActuate",
      xlinkarcrole: "xlinkArcrole",
      "xlink:arcrole": "xlinkArcrole",
      xlinkhref: "xlinkHref",
      "xlink:href": "xlinkHref",
      xlinkrole: "xlinkRole",
      "xlink:role": "xlinkRole",
      xlinkshow: "xlinkShow",
      "xlink:show": "xlinkShow",
      xlinktitle: "xlinkTitle",
      "xlink:title": "xlinkTitle",
      xlinktype: "xlinkType",
      "xlink:type": "xlinkType",
      xmlbase: "xmlBase",
      "xml:base": "xmlBase",
      xmllang: "xmlLang",
      "xml:lang": "xmlLang",
      xmlns: "xmlns",
      "xml:space": "xmlSpace",
      xmlnsxlink: "xmlnsXlink",
      "xmlns:xlink": "xmlnsXlink",
      xmlspace: "xmlSpace",
      y1: "y1",
      y2: "y2",
      y: "y",
      ychannelselector: "yChannelSelector",
      z: "z",
      zoomandpan: "zoomAndPan"
    }, Pg = {
      "aria-current": 0,
      // state
      "aria-description": 0,
      "aria-details": 0,
      "aria-disabled": 0,
      // state
      "aria-hidden": 0,
      // state
      "aria-invalid": 0,
      // state
      "aria-keyshortcuts": 0,
      "aria-label": 0,
      "aria-roledescription": 0,
      // Widget Attributes
      "aria-autocomplete": 0,
      "aria-checked": 0,
      "aria-expanded": 0,
      "aria-haspopup": 0,
      "aria-level": 0,
      "aria-modal": 0,
      "aria-multiline": 0,
      "aria-multiselectable": 0,
      "aria-orientation": 0,
      "aria-placeholder": 0,
      "aria-pressed": 0,
      "aria-readonly": 0,
      "aria-required": 0,
      "aria-selected": 0,
      "aria-sort": 0,
      "aria-valuemax": 0,
      "aria-valuemin": 0,
      "aria-valuenow": 0,
      "aria-valuetext": 0,
      // Live Region Attributes
      "aria-atomic": 0,
      "aria-busy": 0,
      "aria-live": 0,
      "aria-relevant": 0,
      // Drag-and-Drop Attributes
      "aria-dropeffect": 0,
      "aria-grabbed": 0,
      // Relationship Attributes
      "aria-activedescendant": 0,
      "aria-colcount": 0,
      "aria-colindex": 0,
      "aria-colspan": 0,
      "aria-controls": 0,
      "aria-describedby": 0,
      "aria-errormessage": 0,
      "aria-flowto": 0,
      "aria-labelledby": 0,
      "aria-owns": 0,
      "aria-posinset": 0,
      "aria-rowcount": 0,
      "aria-rowindex": 0,
      "aria-rowspan": 0,
      "aria-setsize": 0
    }, Aa = {}, am = new RegExp("^(aria)-[" + it + "]*$"), pu = new RegExp("^(aria)[A-Z][" + it + "]*$");
    function im(n, r) {
      {
        if (ae.call(Aa, r) && Aa[r])
          return !0;
        if (pu.test(r)) {
          var l = "aria-" + r.slice(4).toLowerCase(), u = Pg.hasOwnProperty(l) ? l : null;
          if (u == null)
            return f("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", r), Aa[r] = !0, !0;
          if (r !== u)
            return f("Invalid ARIA attribute `%s`. Did you mean `%s`?", r, u), Aa[r] = !0, !0;
        }
        if (am.test(r)) {
          var h = r.toLowerCase(), C = Pg.hasOwnProperty(h) ? h : null;
          if (C == null)
            return Aa[r] = !0, !1;
          if (r !== C)
            return f("Unknown ARIA attribute `%s`. Did you mean `%s`?", r, C), Aa[r] = !0, !0;
        }
      }
      return !0;
    }
    function $g(n, r) {
      {
        var l = [];
        for (var u in r) {
          var h = im(n, u);
          h || l.push(u);
        }
        var C = l.map(function(E) {
          return "`" + E + "`";
        }).join(", ");
        l.length === 1 ? f("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", C, n) : l.length > 1 && f("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", C, n);
      }
    }
    function _d(n, r) {
      xi(n, r) || $g(n, r);
    }
    var Ws = !1;
    function sm(n, r) {
      {
        if (n !== "input" && n !== "textarea" && n !== "select")
          return;
        r != null && r.value === null && !Ws && (Ws = !0, n === "select" && r.multiple ? f("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", n) : f("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", n));
      }
    }
    var lm = function() {
    };
    {
      var jo = {}, cm = /^on./, Ig = /^on[^A-Z]/, Lg = new RegExp("^(aria)-[" + it + "]*$"), Ag = new RegExp("^(aria)[A-Z][" + it + "]*$");
      lm = function(n, r, l, u) {
        if (ae.call(jo, r) && jo[r])
          return !0;
        var h = r.toLowerCase();
        if (h === "onfocusin" || h === "onfocusout")
          return f("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."), jo[r] = !0, !0;
        if (u != null) {
          var C = u.registrationNameDependencies, E = u.possibleRegistrationNames;
          if (C.hasOwnProperty(r))
            return !0;
          var L = E.hasOwnProperty(h) ? E[h] : null;
          if (L != null)
            return f("Invalid event handler property `%s`. Did you mean `%s`?", r, L), jo[r] = !0, !0;
          if (cm.test(r))
            return f("Unknown event handler property `%s`. It will be ignored.", r), jo[r] = !0, !0;
        } else if (cm.test(r))
          return Ig.test(r) && f("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", r), jo[r] = !0, !0;
        if (Lg.test(r) || Ag.test(r))
          return !0;
        if (h === "innerhtml")
          return f("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."), jo[r] = !0, !0;
        if (h === "aria")
          return f("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead."), jo[r] = !0, !0;
        if (h === "is" && l !== null && l !== void 0 && typeof l != "string")
          return f("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof l), jo[r] = !0, !0;
        if (typeof l == "number" && isNaN(l))
          return f("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", r), jo[r] = !0, !0;
        var j = Jt(r), G = j !== null && j.type === Tt;
        if (Ad.hasOwnProperty(h)) {
          var X = Ad[h];
          if (X !== r)
            return f("Invalid DOM property `%s`. Did you mean `%s`?", r, X), jo[r] = !0, !0;
        } else if (!G && r !== h)
          return f("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", r, h), jo[r] = !0, !0;
        return typeof l == "boolean" && Dt(r, l, j, !1) ? (l ? f('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', l, r, r, l, r) : f('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', l, r, r, l, r, r, r), jo[r] = !0, !0) : G ? !0 : Dt(r, l, j, !1) ? (jo[r] = !0, !1) : ((l === "false" || l === "true") && j !== null && j.type === Vt && (f("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", l, r, l === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', r, l), jo[r] = !0), !0);
      };
    }
    var _g = function(n, r, l) {
      {
        var u = [];
        for (var h in r) {
          var C = lm(n, h, r[h], l);
          C || u.push(h);
        }
        var E = u.map(function(L) {
          return "`" + L + "`";
        }).join(", ");
        u.length === 1 ? f("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", E, n) : u.length > 1 && f("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", E, n);
      }
    };
    function Bg(n, r, l) {
      xi(n, r) || _g(n, r, l);
    }
    var Si = 1, fu = 2, Ys = 4, V0 = Si | fu | Ys, mu = null;
    function hu(n) {
      mu !== null && f("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue."), mu = n;
    }
    function F0() {
      mu === null && f("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue."), mu = null;
    }
    function zg(n) {
      return n === mu;
    }
    function Bd(n) {
      var r = n.target || n.srcElement || window;
      return r.correspondingUseElement && (r = r.correspondingUseElement), r.nodeType === Ci ? r.parentNode : r;
    }
    var Fn = null, os = null, Ti = null;
    function Ql(n) {
      var r = Sc(n);
      if (r) {
        if (typeof Fn != "function")
          throw new Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
        var l = r.stateNode;
        if (l) {
          var u = zy(l);
          Fn(r.stateNode, r.type, u);
        }
      }
    }
    function Vg(n) {
      Fn = n;
    }
    function zd(n) {
      os ? Ti ? Ti.push(n) : Ti = [n] : os = n;
    }
    function vu() {
      return os !== null || Ti !== null;
    }
    function gu() {
      if (os) {
        var n = os, r = Ti;
        if (os = null, Ti = null, Ql(n), r)
          for (var l = 0; l < r.length; l++)
            Ql(r[l]);
      }
    }
    var Gs = function(n, r) {
      return n(r);
    }, um = function() {
    }, dm = !1;
    function j0() {
      var n = vu();
      n && (um(), gu());
    }
    function pm(n, r, l) {
      if (dm)
        return n(r, l);
      dm = !0;
      try {
        return Gs(n, r, l);
      } finally {
        dm = !1, j0();
      }
    }
    function Vd(n, r, l) {
      Gs = n, um = l;
    }
    function Fd(n) {
      return n === "button" || n === "input" || n === "select" || n === "textarea";
    }
    function fm(n, r, l) {
      switch (n) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
          return !!(l.disabled && Fd(r));
        default:
          return !1;
      }
    }
    function qs(n, r) {
      var l = n.stateNode;
      if (l === null)
        return null;
      var u = zy(l);
      if (u === null)
        return null;
      var h = u[r];
      if (fm(r, n.type, u))
        return null;
      if (h && typeof h != "function")
        throw new Error("Expected `" + r + "` listener to be a function, instead got a value of `" + typeof h + "` type.");
      return h;
    }
    var yu = !1;
    if (ye)
      try {
        var Ks = {};
        Object.defineProperty(Ks, "passive", {
          get: function() {
            yu = !0;
          }
        }), window.addEventListener("test", Ks, Ks), window.removeEventListener("test", Ks, Ks);
      } catch {
        yu = !1;
      }
    function Fg(n, r, l, u, h, C, E, L, j) {
      var G = Array.prototype.slice.call(arguments, 3);
      try {
        r.apply(l, G);
      } catch (X) {
        this.onError(X);
      }
    }
    var mm = Fg;
    if (typeof window < "u" && typeof window.dispatchEvent == "function" && typeof document < "u" && typeof document.createEvent == "function") {
      var hm = document.createElement("react");
      mm = function(r, l, u, h, C, E, L, j, G) {
        if (typeof document > "u" || document === null)
          throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
        var X = document.createEvent("Event"), he = !1, pe = !0, Ne = window.event, Pe = Object.getOwnPropertyDescriptor(window, "event");
        function Ke() {
          hm.removeEventListener(Qe, jt, !1), typeof window.event < "u" && window.hasOwnProperty("event") && (window.event = Ne);
        }
        var Ot = Array.prototype.slice.call(arguments, 3);
        function jt() {
          he = !0, Ke(), l.apply(u, Ot), pe = !1;
        }
        var Bt, gn = !1, mn = !1;
        function Ee(Re) {
          if (Bt = Re.error, gn = !0, Bt === null && Re.colno === 0 && Re.lineno === 0 && (mn = !0), Re.defaultPrevented && Bt != null && typeof Bt == "object")
            try {
              Bt._suppressLogging = !0;
            } catch {
            }
        }
        var Qe = "react-" + (r || "invokeguardedcallback");
        if (window.addEventListener("error", Ee), hm.addEventListener(Qe, jt, !1), X.initEvent(Qe, !1, !1), hm.dispatchEvent(X), Pe && Object.defineProperty(window, "event", Pe), he && pe && (gn ? mn && (Bt = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.")) : Bt = new Error(`An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the "Pause on exceptions" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.`), this.onError(Bt)), window.removeEventListener("error", Ee), !he)
          return Ke(), Fg.apply(this, arguments);
      };
    }
    var U0 = mm, rs = !1, _a = null, bu = !1, as = null, Ga = {
      onError: function(n) {
        rs = !0, _a = n;
      }
    };
    function Qs(n, r, l, u, h, C, E, L, j) {
      rs = !1, _a = null, U0.apply(Ga, arguments);
    }
    function wi(n, r, l, u, h, C, E, L, j) {
      if (Qs.apply(this, arguments), rs) {
        var G = gm();
        bu || (bu = !0, as = G);
      }
    }
    function vm() {
      if (bu) {
        var n = as;
        throw bu = !1, as = null, n;
      }
    }
    function H0() {
      return rs;
    }
    function gm() {
      if (rs) {
        var n = _a;
        return rs = !1, _a = null, n;
      } else
        throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
    }
    function ua(n) {
      return n._reactInternals;
    }
    function Cu(n) {
      return n._reactInternals !== void 0;
    }
    function Xl(n, r) {
      n._reactInternals = r;
    }
    var Ft = (
      /*                      */
      0
    ), is = (
      /*                */
      1
    ), Wn = (
      /*                    */
      2
    ), rn = (
      /*                       */
      4
    ), wn = (
      /*                */
      16
    ), En = (
      /*                 */
      32
    ), qa = (
      /*                     */
      64
    ), Kt = (
      /*                   */
      128
    ), co = (
      /*            */
      256
    ), Nr = (
      /*                          */
      512
    ), da = (
      /*                     */
      1024
    ), Jn = (
      /*                      */
      2048
    ), pa = (
      /*                    */
      4096
    ), ss = (
      /*                   */
      8192
    ), xu = (
      /*             */
      16384
    ), jd = Jn | rn | qa | Nr | da | xu, jg = (
      /*               */
      32767
    ), qr = (
      /*                   */
      32768
    ), Uo = (
      /*                */
      65536
    ), Su = (
      /* */
      131072
    ), ym = (
      /*                       */
      1048576
    ), bm = (
      /*                    */
      2097152
    ), Pr = (
      /*                 */
      4194304
    ), ls = (
      /*                */
      8388608
    ), $r = (
      /*               */
      16777216
    ), Xs = (
      /*              */
      33554432
    ), Zl = (
      // TODO: Remove Update flag from before mutation phase by re-landing Visibility
      // flag logic (see #20043)
      rn | da | 0
    ), Ir = Wn | rn | wn | En | Nr | pa | ss, dr = rn | qa | Nr | ss, fa = Jn | wn, Zo = Pr | ls | bm, Ei = i.ReactCurrentOwner;
    function Kr(n) {
      var r = n, l = n;
      if (n.alternate)
        for (; r.return; )
          r = r.return;
      else {
        var u = r;
        do
          r = u, (r.flags & (Wn | pa)) !== Ft && (l = r.return), u = r.return;
        while (u);
      }
      return r.tag === R ? l : null;
    }
    function Cm(n) {
      if (n.tag === B) {
        var r = n.memoizedState;
        if (r === null) {
          var l = n.alternate;
          l !== null && (r = l.memoizedState);
        }
        if (r !== null)
          return r.dehydrated;
      }
      return null;
    }
    function Ud(n) {
      return n.tag === R ? n.stateNode.containerInfo : null;
    }
    function xm(n) {
      return Kr(n) === n;
    }
    function Qr(n) {
      {
        var r = Ei.current;
        if (r !== null && r.tag === b) {
          var l = r, u = l.stateNode;
          u._warnedAboutRefsInRender || f("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", on(l) || "A component"), u._warnedAboutRefsInRender = !0;
        }
      }
      var h = ua(n);
      return h ? Kr(h) === h : !1;
    }
    function Lr(n) {
      if (Kr(n) !== n)
        throw new Error("Unable to find node on an unmounted component.");
    }
    function Yn(n) {
      var r = n.alternate;
      if (!r) {
        var l = Kr(n);
        if (l === null)
          throw new Error("Unable to find node on an unmounted component.");
        return l !== n ? null : n;
      }
      for (var u = n, h = r; ; ) {
        var C = u.return;
        if (C === null)
          break;
        var E = C.alternate;
        if (E === null) {
          var L = C.return;
          if (L !== null) {
            u = h = L;
            continue;
          }
          break;
        }
        if (C.child === E.child) {
          for (var j = C.child; j; ) {
            if (j === u)
              return Lr(C), n;
            if (j === h)
              return Lr(C), r;
            j = j.sibling;
          }
          throw new Error("Unable to find node on an unmounted component.");
        }
        if (u.return !== h.return)
          u = C, h = E;
        else {
          for (var G = !1, X = C.child; X; ) {
            if (X === u) {
              G = !0, u = C, h = E;
              break;
            }
            if (X === h) {
              G = !0, h = C, u = E;
              break;
            }
            X = X.sibling;
          }
          if (!G) {
            for (X = E.child; X; ) {
              if (X === u) {
                G = !0, u = E, h = C;
                break;
              }
              if (X === h) {
                G = !0, h = E, u = C;
                break;
              }
              X = X.sibling;
            }
            if (!G)
              throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
          }
        }
        if (u.alternate !== h)
          throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
      }
      if (u.tag !== R)
        throw new Error("Unable to find node on an unmounted component.");
      return u.stateNode.current === u ? n : r;
    }
    function ma(n) {
      var r = Yn(n);
      return r !== null ? Sm(r) : null;
    }
    function Sm(n) {
      if (n.tag === k || n.tag === $)
        return n;
      for (var r = n.child; r !== null; ) {
        var l = Sm(r);
        if (l !== null)
          return l;
        r = r.sibling;
      }
      return null;
    }
    function Ug(n) {
      var r = Yn(n);
      return r !== null ? Hd(r) : null;
    }
    function Hd(n) {
      if (n.tag === k || n.tag === $)
        return n;
      for (var r = n.child; r !== null; ) {
        if (r.tag !== D) {
          var l = Hd(r);
          if (l !== null)
            return l;
        }
        r = r.sibling;
      }
      return null;
    }
    var Wd = o.unstable_scheduleCallback, Hg = o.unstable_cancelCallback, Yd = o.unstable_shouldYield, Wg = o.unstable_requestPaint, oo = o.unstable_now, Tm = o.unstable_getCurrentPriorityLevel, Gd = o.unstable_ImmediatePriority, Xr = o.unstable_UserBlockingPriority, Ka = o.unstable_NormalPriority, qd = o.unstable_LowPriority, cs = o.unstable_IdlePriority, wm = o.unstable_yieldValue, Em = o.unstable_setDisableYieldValue, us = null, Ho = null, Ct = null, mo = !1, Jo = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u";
    function Rm(n) {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u")
        return !1;
      var r = __REACT_DEVTOOLS_GLOBAL_HOOK__;
      if (r.isDisabled)
        return !0;
      if (!r.supportsFiber)
        return f("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools"), !0;
      try {
        De && (n = pn({}, n, {
          getLaneLabelMap: ps,
          injectProfilingHooks: Oi
        })), us = r.inject(n), Ho = r;
      } catch (l) {
        f("React instrumentation encountered an error: %s.", l);
      }
      return !!r.checkDCE;
    }
    function Yg(n, r) {
      if (Ho && typeof Ho.onScheduleFiberRoot == "function")
        try {
          Ho.onScheduleFiberRoot(us, n, r);
        } catch (l) {
          mo || (mo = !0, f("React instrumentation encountered an error: %s", l));
        }
    }
    function Ri(n, r) {
      if (Ho && typeof Ho.onCommitFiberRoot == "function")
        try {
          var l = (n.current.flags & Kt) === Kt;
          if (be) {
            var u;
            switch (r) {
              case pr:
                u = Gd;
                break;
              case er:
                u = Xr;
                break;
              case Di:
                u = Ka;
                break;
              case Nu:
                u = cs;
                break;
              default:
                u = Ka;
                break;
            }
            Ho.onCommitFiberRoot(us, n, u, l);
          }
        } catch (h) {
          mo || (mo = !0, f("React instrumentation encountered an error: %s", h));
        }
    }
    function ds(n) {
      if (Ho && typeof Ho.onPostCommitFiberRoot == "function")
        try {
          Ho.onPostCommitFiberRoot(us, n);
        } catch (r) {
          mo || (mo = !0, f("React instrumentation encountered an error: %s", r));
        }
    }
    function Om(n) {
      if (Ho && typeof Ho.onCommitFiberUnmount == "function")
        try {
          Ho.onCommitFiberUnmount(us, n);
        } catch (r) {
          mo || (mo = !0, f("React instrumentation encountered an error: %s", r));
        }
    }
    function Do(n) {
      if (typeof wm == "function" && (Em(n), d(n)), Ho && typeof Ho.setStrictMode == "function")
        try {
          Ho.setStrictMode(us, n);
        } catch (r) {
          mo || (mo = !0, f("React instrumentation encountered an error: %s", r));
        }
    }
    function Oi(n) {
      Ct = n;
    }
    function ps() {
      {
        for (var n = /* @__PURE__ */ new Map(), r = 1, l = 0; l < Gn; l++) {
          var u = W0(r);
          n.set(r, u), r *= 2;
        }
        return n;
      }
    }
    function Kd(n) {
      Ct !== null && typeof Ct.markCommitStarted == "function" && Ct.markCommitStarted(n);
    }
    function km() {
      Ct !== null && typeof Ct.markCommitStopped == "function" && Ct.markCommitStopped();
    }
    function fs(n) {
      Ct !== null && typeof Ct.markComponentRenderStarted == "function" && Ct.markComponentRenderStarted(n);
    }
    function Zs() {
      Ct !== null && typeof Ct.markComponentRenderStopped == "function" && Ct.markComponentRenderStopped();
    }
    function Gg(n) {
      Ct !== null && typeof Ct.markComponentPassiveEffectMountStarted == "function" && Ct.markComponentPassiveEffectMountStarted(n);
    }
    function Dm() {
      Ct !== null && typeof Ct.markComponentPassiveEffectMountStopped == "function" && Ct.markComponentPassiveEffectMountStopped();
    }
    function Qd(n) {
      Ct !== null && typeof Ct.markComponentPassiveEffectUnmountStarted == "function" && Ct.markComponentPassiveEffectUnmountStarted(n);
    }
    function qg() {
      Ct !== null && typeof Ct.markComponentPassiveEffectUnmountStopped == "function" && Ct.markComponentPassiveEffectUnmountStopped();
    }
    function Kg(n) {
      Ct !== null && typeof Ct.markComponentLayoutEffectMountStarted == "function" && Ct.markComponentLayoutEffectMountStarted(n);
    }
    function Qg() {
      Ct !== null && typeof Ct.markComponentLayoutEffectMountStopped == "function" && Ct.markComponentLayoutEffectMountStopped();
    }
    function Xd(n) {
      Ct !== null && typeof Ct.markComponentLayoutEffectUnmountStarted == "function" && Ct.markComponentLayoutEffectUnmountStarted(n);
    }
    function Jl() {
      Ct !== null && typeof Ct.markComponentLayoutEffectUnmountStopped == "function" && Ct.markComponentLayoutEffectUnmountStopped();
    }
    function Zd(n, r, l) {
      Ct !== null && typeof Ct.markComponentErrored == "function" && Ct.markComponentErrored(n, r, l);
    }
    function Xg(n, r, l) {
      Ct !== null && typeof Ct.markComponentSuspended == "function" && Ct.markComponentSuspended(n, r, l);
    }
    function Zg(n) {
      Ct !== null && typeof Ct.markLayoutEffectsStarted == "function" && Ct.markLayoutEffectsStarted(n);
    }
    function ec() {
      Ct !== null && typeof Ct.markLayoutEffectsStopped == "function" && Ct.markLayoutEffectsStopped();
    }
    function Jg(n) {
      Ct !== null && typeof Ct.markPassiveEffectsStarted == "function" && Ct.markPassiveEffectsStarted(n);
    }
    function Tu() {
      Ct !== null && typeof Ct.markPassiveEffectsStopped == "function" && Ct.markPassiveEffectsStopped();
    }
    function Ba(n) {
      Ct !== null && typeof Ct.markRenderStarted == "function" && Ct.markRenderStarted(n);
    }
    function wu() {
      Ct !== null && typeof Ct.markRenderYielded == "function" && Ct.markRenderYielded();
    }
    function tc() {
      Ct !== null && typeof Ct.markRenderStopped == "function" && Ct.markRenderStopped();
    }
    function Js(n) {
      Ct !== null && typeof Ct.markRenderScheduled == "function" && Ct.markRenderScheduled(n);
    }
    function Mm(n, r) {
      Ct !== null && typeof Ct.markForceUpdateScheduled == "function" && Ct.markForceUpdateScheduled(n, r);
    }
    function ms(n, r) {
      Ct !== null && typeof Ct.markStateUpdateScheduled == "function" && Ct.markStateUpdateScheduled(n, r);
    }
    var Ut = (
      /*                         */
      0
    ), un = (
      /*                 */
      1
    ), Ht = (
      /*                    */
      2
    ), ro = (
      /*               */
      8
    ), ha = (
      /*              */
      16
    ), Jd = Math.clz32 ? Math.clz32 : el, ep = Math.log, Nm = Math.LN2;
    function el(n) {
      var r = n >>> 0;
      return r === 0 ? 32 : 31 - (ep(r) / Nm | 0) | 0;
    }
    var Gn = 31, Je = (
      /*                        */
      0
    ), hn = (
      /*                          */
      0
    ), Gt = (
      /*                        */
      1
    ), Qa = (
      /*    */
      2
    ), Zr = (
      /*             */
      4
    ), tl = (
      /*            */
      8
    ), qn = (
      /*                     */
      16
    ), nl = (
      /*                */
      32
    ), hs = (
      /*                       */
      4194240
    ), ol = (
      /*                        */
      64
    ), va = (
      /*                        */
      128
    ), Ar = (
      /*                        */
      256
    ), rl = (
      /*                        */
      512
    ), Eu = (
      /*                        */
      1024
    ), Ru = (
      /*                        */
      2048
    ), tp = (
      /*                        */
      4096
    ), np = (
      /*                        */
      8192
    ), op = (
      /*                        */
      16384
    ), rp = (
      /*                       */
      32768
    ), ap = (
      /*                       */
      65536
    ), ip = (
      /*                       */
      131072
    ), sp = (
      /*                       */
      262144
    ), lp = (
      /*                       */
      524288
    ), al = (
      /*                       */
      1048576
    ), cp = (
      /*                       */
      2097152
    ), il = (
      /*                            */
      130023424
    ), ki = (
      /*                             */
      4194304
    ), up = (
      /*                             */
      8388608
    ), Ou = (
      /*                             */
      16777216
    ), dp = (
      /*                             */
      33554432
    ), pp = (
      /*                             */
      67108864
    ), Pm = ki, nc = (
      /*          */
      134217728
    ), fp = (
      /*                          */
      268435455
    ), oc = (
      /*               */
      268435456
    ), vs = (
      /*                        */
      536870912
    ), _r = (
      /*                   */
      1073741824
    );
    function W0(n) {
      {
        if (n & Gt)
          return "Sync";
        if (n & Qa)
          return "InputContinuousHydration";
        if (n & Zr)
          return "InputContinuous";
        if (n & tl)
          return "DefaultHydration";
        if (n & qn)
          return "Default";
        if (n & nl)
          return "TransitionHydration";
        if (n & hs)
          return "Transition";
        if (n & il)
          return "Retry";
        if (n & nc)
          return "SelectiveHydration";
        if (n & oc)
          return "IdleHydration";
        if (n & vs)
          return "Idle";
        if (n & _r)
          return "Offscreen";
      }
    }
    var jn = -1, mp = ol, hp = ki;
    function rc(n) {
      switch (Co(n)) {
        case Gt:
          return Gt;
        case Qa:
          return Qa;
        case Zr:
          return Zr;
        case tl:
          return tl;
        case qn:
          return qn;
        case nl:
          return nl;
        case ol:
        case va:
        case Ar:
        case rl:
        case Eu:
        case Ru:
        case tp:
        case np:
        case op:
        case rp:
        case ap:
        case ip:
        case sp:
        case lp:
        case al:
        case cp:
          return n & hs;
        case ki:
        case up:
        case Ou:
        case dp:
        case pp:
          return n & il;
        case nc:
          return nc;
        case oc:
          return oc;
        case vs:
          return vs;
        case _r:
          return _r;
        default:
          return f("Should have found matching lanes. This is a bug in React."), n;
      }
    }
    function ku(n, r) {
      var l = n.pendingLanes;
      if (l === Je)
        return Je;
      var u = Je, h = n.suspendedLanes, C = n.pingedLanes, E = l & fp;
      if (E !== Je) {
        var L = E & ~h;
        if (L !== Je)
          u = rc(L);
        else {
          var j = E & C;
          j !== Je && (u = rc(j));
        }
      } else {
        var G = l & ~h;
        G !== Je ? u = rc(G) : C !== Je && (u = rc(C));
      }
      if (u === Je)
        return Je;
      if (r !== Je && r !== u && // If we already suspended with a delay, then interrupting is fine. Don't
      // bother waiting until the root is complete.
      (r & h) === Je) {
        var X = Co(u), he = Co(r);
        if (
          // Tests whether the next lane is equal or lower priority than the wip
          // one. This works because the bits decrease in priority as you go left.
          X >= he || // Default priority updates should not interrupt transition updates. The
          // only difference between default updates and transition updates is that
          // default updates do not support refresh transitions.
          X === qn && (he & hs) !== Je
        )
          return r;
      }
      (u & Zr) !== Je && (u |= l & qn);
      var pe = n.entangledLanes;
      if (pe !== Je)
        for (var Ne = n.entanglements, Pe = u & pe; Pe > 0; ) {
          var Ke = gs(Pe), Ot = 1 << Ke;
          u |= Ne[Ke], Pe &= ~Ot;
        }
      return u;
    }
    function ey(n, r) {
      for (var l = n.eventTimes, u = jn; r > 0; ) {
        var h = gs(r), C = 1 << h, E = l[h];
        E > u && (u = E), r &= ~C;
      }
      return u;
    }
    function vp(n, r) {
      switch (n) {
        case Gt:
        case Qa:
        case Zr:
          return r + 250;
        case tl:
        case qn:
        case nl:
        case ol:
        case va:
        case Ar:
        case rl:
        case Eu:
        case Ru:
        case tp:
        case np:
        case op:
        case rp:
        case ap:
        case ip:
        case sp:
        case lp:
        case al:
        case cp:
          return r + 5e3;
        case ki:
        case up:
        case Ou:
        case dp:
        case pp:
          return jn;
        case nc:
        case oc:
        case vs:
        case _r:
          return jn;
        default:
          return f("Should have found matching lanes. This is a bug in React."), jn;
      }
    }
    function Y0(n, r) {
      for (var l = n.pendingLanes, u = n.suspendedLanes, h = n.pingedLanes, C = n.expirationTimes, E = l; E > 0; ) {
        var L = gs(E), j = 1 << L, G = C[L];
        G === jn ? ((j & u) === Je || (j & h) !== Je) && (C[L] = vp(j, r)) : G <= r && (n.expiredLanes |= j), E &= ~j;
      }
    }
    function G0(n) {
      return rc(n.pendingLanes);
    }
    function $m(n) {
      var r = n.pendingLanes & ~_r;
      return r !== Je ? r : r & _r ? _r : Je;
    }
    function ac(n) {
      return (n & Gt) !== Je;
    }
    function Du(n) {
      return (n & fp) !== Je;
    }
    function gp(n) {
      return (n & il) === n;
    }
    function q0(n) {
      var r = Gt | Zr | qn;
      return (n & r) === Je;
    }
    function ty(n) {
      return (n & hs) === n;
    }
    function Mu(n, r) {
      var l = Qa | Zr | tl | qn;
      return (r & l) !== Je;
    }
    function ny(n, r) {
      return (r & n.expiredLanes) !== Je;
    }
    function Im(n) {
      return (n & hs) !== Je;
    }
    function Lm() {
      var n = mp;
      return mp <<= 1, (mp & hs) === Je && (mp = ol), n;
    }
    function K0() {
      var n = hp;
      return hp <<= 1, (hp & il) === Je && (hp = ki), n;
    }
    function Co(n) {
      return n & -n;
    }
    function Mo(n) {
      return Co(n);
    }
    function gs(n) {
      return 31 - Jd(n);
    }
    function yp(n) {
      return gs(n);
    }
    function Br(n, r) {
      return (n & r) !== Je;
    }
    function sl(n, r) {
      return (n & r) === r;
    }
    function an(n, r) {
      return n | r;
    }
    function ic(n, r) {
      return n & ~r;
    }
    function Am(n, r) {
      return n & r;
    }
    function oy(n) {
      return n;
    }
    function ry(n, r) {
      return n !== hn && n < r ? n : r;
    }
    function bp(n) {
      for (var r = [], l = 0; l < Gn; l++)
        r.push(n);
      return r;
    }
    function ll(n, r, l) {
      n.pendingLanes |= r, r !== vs && (n.suspendedLanes = Je, n.pingedLanes = Je);
      var u = n.eventTimes, h = yp(r);
      u[h] = l;
    }
    function _m(n, r) {
      n.suspendedLanes |= r, n.pingedLanes &= ~r;
      for (var l = n.expirationTimes, u = r; u > 0; ) {
        var h = gs(u), C = 1 << h;
        l[h] = jn, u &= ~C;
      }
    }
    function Bm(n, r, l) {
      n.pingedLanes |= n.suspendedLanes & r;
    }
    function zm(n, r) {
      var l = n.pendingLanes & ~r;
      n.pendingLanes = r, n.suspendedLanes = Je, n.pingedLanes = Je, n.expiredLanes &= r, n.mutableReadLanes &= r, n.entangledLanes &= r;
      for (var u = n.entanglements, h = n.eventTimes, C = n.expirationTimes, E = l; E > 0; ) {
        var L = gs(E), j = 1 << L;
        u[L] = Je, h[L] = jn, C[L] = jn, E &= ~j;
      }
    }
    function sc(n, r) {
      for (var l = n.entangledLanes |= r, u = n.entanglements, h = l; h; ) {
        var C = gs(h), E = 1 << C;
        // Is this one of the newly entangled lanes?
        E & r | // Is this lane transitively entangled with the newly entangled lanes?
        u[C] & r && (u[C] |= r), h &= ~E;
      }
    }
    function Q0(n, r) {
      var l = Co(r), u;
      switch (l) {
        case Zr:
          u = Qa;
          break;
        case qn:
          u = tl;
          break;
        case ol:
        case va:
        case Ar:
        case rl:
        case Eu:
        case Ru:
        case tp:
        case np:
        case op:
        case rp:
        case ap:
        case ip:
        case sp:
        case lp:
        case al:
        case cp:
        case ki:
        case up:
        case Ou:
        case dp:
        case pp:
          u = nl;
          break;
        case vs:
          u = oc;
          break;
        default:
          u = hn;
          break;
      }
      return (u & (n.suspendedLanes | r)) !== hn ? hn : u;
    }
    function Vm(n, r, l) {
      if (Jo)
        for (var u = n.pendingUpdatersLaneMap; l > 0; ) {
          var h = yp(l), C = 1 << h, E = u[h];
          E.add(r), l &= ~C;
        }
    }
    function Cp(n, r) {
      if (Jo)
        for (var l = n.pendingUpdatersLaneMap, u = n.memoizedUpdaters; r > 0; ) {
          var h = yp(r), C = 1 << h, E = l[h];
          E.size > 0 && (E.forEach(function(L) {
            var j = L.alternate;
            (j === null || !u.has(j)) && u.add(L);
          }), E.clear()), r &= ~C;
        }
    }
    function Fm(n, r) {
      return null;
    }
    var pr = Gt, er = Zr, Di = qn, Nu = vs, cl = hn;
    function ga() {
      return cl;
    }
    function No(n) {
      cl = n;
    }
    function Pu(n, r) {
      var l = cl;
      try {
        return cl = n, r();
      } finally {
        cl = l;
      }
    }
    function fr(n, r) {
      return n !== 0 && n < r ? n : r;
    }
    function X0(n, r) {
      return n === 0 || n > r ? n : r;
    }
    function jm(n, r) {
      return n !== 0 && n < r;
    }
    function $u(n) {
      var r = Co(n);
      return jm(pr, r) ? jm(er, r) ? Du(r) ? Di : Nu : er : pr;
    }
    function Po(n) {
      var r = n.current.memoizedState;
      return r.isDehydrated;
    }
    var ay;
    function Mt(n) {
      ay = n;
    }
    function lc(n) {
      ay(n);
    }
    var Iu;
    function iy(n) {
      Iu = n;
    }
    var sy;
    function Lu(n) {
      sy = n;
    }
    var Au;
    function Um(n) {
      Au = n;
    }
    var Hm;
    function ly(n) {
      Hm = n;
    }
    var xp = !1, cc = [], Xa = null, eo = null, Wo = null, ya = /* @__PURE__ */ new Map(), uc = /* @__PURE__ */ new Map(), Mi = [], za = [
      "mousedown",
      "mouseup",
      "touchcancel",
      "touchend",
      "touchstart",
      "auxclick",
      "dblclick",
      "pointercancel",
      "pointerdown",
      "pointerup",
      "dragend",
      "dragstart",
      "drop",
      "compositionend",
      "compositionstart",
      "keydown",
      "keypress",
      "keyup",
      "input",
      "textInput",
      // Intentionally camelCase
      "copy",
      "cut",
      "paste",
      "click",
      "change",
      "contextmenu",
      "reset",
      "submit"
    ];
    function cy(n) {
      return za.indexOf(n) > -1;
    }
    function Za(n, r, l, u, h) {
      return {
        blockedOn: n,
        domEventName: r,
        eventSystemFlags: l,
        nativeEvent: h,
        targetContainers: [u]
      };
    }
    function uy(n, r) {
      switch (n) {
        case "focusin":
        case "focusout":
          Xa = null;
          break;
        case "dragenter":
        case "dragleave":
          eo = null;
          break;
        case "mouseover":
        case "mouseout":
          Wo = null;
          break;
        case "pointerover":
        case "pointerout": {
          var l = r.pointerId;
          ya.delete(l);
          break;
        }
        case "gotpointercapture":
        case "lostpointercapture": {
          var u = r.pointerId;
          uc.delete(u);
          break;
        }
      }
    }
    function dc(n, r, l, u, h, C) {
      if (n === null || n.nativeEvent !== C) {
        var E = Za(r, l, u, h, C);
        if (r !== null) {
          var L = Sc(r);
          L !== null && Iu(L);
        }
        return E;
      }
      n.eventSystemFlags |= u;
      var j = n.targetContainers;
      return h !== null && j.indexOf(h) === -1 && j.push(h), n;
    }
    function dy(n, r, l, u, h) {
      switch (r) {
        case "focusin": {
          var C = h;
          return Xa = dc(Xa, n, r, l, u, C), !0;
        }
        case "dragenter": {
          var E = h;
          return eo = dc(eo, n, r, l, u, E), !0;
        }
        case "mouseover": {
          var L = h;
          return Wo = dc(Wo, n, r, l, u, L), !0;
        }
        case "pointerover": {
          var j = h, G = j.pointerId;
          return ya.set(G, dc(ya.get(G) || null, n, r, l, u, j)), !0;
        }
        case "gotpointercapture": {
          var X = h, he = X.pointerId;
          return uc.set(he, dc(uc.get(he) || null, n, r, l, u, X)), !0;
        }
      }
      return !1;
    }
    function Wm(n) {
      var r = Wu(n.target);
      if (r !== null) {
        var l = Kr(r);
        if (l !== null) {
          var u = l.tag;
          if (u === B) {
            var h = Cm(l);
            if (h !== null) {
              n.blockedOn = h, Hm(n.priority, function() {
                sy(l);
              });
              return;
            }
          } else if (u === R) {
            var C = l.stateNode;
            if (Po(C)) {
              n.blockedOn = Ud(l);
              return;
            }
          }
        }
      }
      n.blockedOn = null;
    }
    function py(n) {
      for (var r = Au(), l = {
        blockedOn: null,
        target: n,
        priority: r
      }, u = 0; u < Mi.length && jm(r, Mi[u].priority); u++)
        ;
      Mi.splice(u, 0, l), u === 0 && Wm(l);
    }
    function Sp(n) {
      if (n.blockedOn !== null)
        return !1;
      for (var r = n.targetContainers; r.length > 0; ) {
        var l = r[0], u = ul(n.domEventName, n.eventSystemFlags, l, n.nativeEvent);
        if (u === null) {
          var h = n.nativeEvent, C = new h.constructor(h.type, h);
          hu(C), h.target.dispatchEvent(C), F0();
        } else {
          var E = Sc(u);
          return E !== null && Iu(E), n.blockedOn = u, !1;
        }
        r.shift();
      }
      return !0;
    }
    function _u(n, r, l) {
      Sp(n) && l.delete(r);
    }
    function Ym() {
      xp = !1, Xa !== null && Sp(Xa) && (Xa = null), eo !== null && Sp(eo) && (eo = null), Wo !== null && Sp(Wo) && (Wo = null), ya.forEach(_u), uc.forEach(_u);
    }
    function mr(n, r) {
      n.blockedOn === r && (n.blockedOn = null, xp || (xp = !0, o.unstable_scheduleCallback(o.unstable_NormalPriority, Ym)));
    }
    function fn(n) {
      if (cc.length > 0) {
        mr(cc[0], n);
        for (var r = 1; r < cc.length; r++) {
          var l = cc[r];
          l.blockedOn === n && (l.blockedOn = null);
        }
      }
      Xa !== null && mr(Xa, n), eo !== null && mr(eo, n), Wo !== null && mr(Wo, n);
      var u = function(L) {
        return mr(L, n);
      };
      ya.forEach(u), uc.forEach(u);
      for (var h = 0; h < Mi.length; h++) {
        var C = Mi[h];
        C.blockedOn === n && (C.blockedOn = null);
      }
      for (; Mi.length > 0; ) {
        var E = Mi[0];
        if (E.blockedOn !== null)
          break;
        Wm(E), E.blockedOn === null && Mi.shift();
      }
    }
    var ao = i.ReactCurrentBatchConfig, uo = !0;
    function Yo(n) {
      uo = !!n;
    }
    function Jr() {
      return uo;
    }
    function pc(n, r, l) {
      var u = yr(r), h;
      switch (u) {
        case pr:
          h = $o;
          break;
        case er:
          h = Bu;
          break;
        case Di:
        default:
          h = Ni;
          break;
      }
      return h.bind(null, r, l, n);
    }
    function $o(n, r, l, u) {
      var h = ga(), C = ao.transition;
      ao.transition = null;
      try {
        No(pr), Ni(n, r, l, u);
      } finally {
        No(h), ao.transition = C;
      }
    }
    function Bu(n, r, l, u) {
      var h = ga(), C = ao.transition;
      ao.transition = null;
      try {
        No(er), Ni(n, r, l, u);
      } finally {
        No(h), ao.transition = C;
      }
    }
    function Ni(n, r, l, u) {
      uo && Tp(n, r, l, u);
    }
    function Tp(n, r, l, u) {
      var h = ul(n, r, l, u);
      if (h === null) {
        gx(n, r, u, fc, l), uy(n, u);
        return;
      }
      if (dy(h, n, r, l, u)) {
        u.stopPropagation();
        return;
      }
      if (uy(n, u), r & Ys && cy(n)) {
        for (; h !== null; ) {
          var C = Sc(h);
          C !== null && lc(C);
          var E = ul(n, r, l, u);
          if (E === null && gx(n, r, u, fc, l), E === h)
            break;
          h = E;
        }
        h !== null && u.stopPropagation();
        return;
      }
      gx(n, r, u, null, l);
    }
    var fc = null;
    function ul(n, r, l, u) {
      fc = null;
      var h = Bd(u), C = Wu(h);
      if (C !== null) {
        var E = Kr(C);
        if (E === null)
          C = null;
        else {
          var L = E.tag;
          if (L === B) {
            var j = Cm(E);
            if (j !== null)
              return j;
            C = null;
          } else if (L === R) {
            var G = E.stateNode;
            if (Po(G))
              return Ud(E);
            C = null;
          } else
            E !== C && (C = null);
        }
      }
      return fc = C, null;
    }
    function yr(n) {
      switch (n) {
        case "cancel":
        case "click":
        case "close":
        case "contextmenu":
        case "copy":
        case "cut":
        case "auxclick":
        case "dblclick":
        case "dragend":
        case "dragstart":
        case "drop":
        case "focusin":
        case "focusout":
        case "input":
        case "invalid":
        case "keydown":
        case "keypress":
        case "keyup":
        case "mousedown":
        case "mouseup":
        case "paste":
        case "pause":
        case "play":
        case "pointercancel":
        case "pointerdown":
        case "pointerup":
        case "ratechange":
        case "reset":
        case "resize":
        case "seeked":
        case "submit":
        case "touchcancel":
        case "touchend":
        case "touchstart":
        case "volumechange":
        case "change":
        case "selectionchange":
        case "textInput":
        case "compositionstart":
        case "compositionend":
        case "compositionupdate":
        case "beforeblur":
        case "afterblur":
        case "beforeinput":
        case "blur":
        case "fullscreenchange":
        case "focus":
        case "hashchange":
        case "popstate":
        case "select":
        case "selectstart":
          return pr;
        case "drag":
        case "dragenter":
        case "dragexit":
        case "dragleave":
        case "dragover":
        case "mousemove":
        case "mouseout":
        case "mouseover":
        case "pointermove":
        case "pointerout":
        case "pointerover":
        case "scroll":
        case "toggle":
        case "touchmove":
        case "wheel":
        case "mouseenter":
        case "mouseleave":
        case "pointerenter":
        case "pointerleave":
          return er;
        case "message": {
          var r = Tm();
          switch (r) {
            case Gd:
              return pr;
            case Xr:
              return er;
            case Ka:
            case qd:
              return Di;
            case cs:
              return Nu;
            default:
              return Di;
          }
        }
        default:
          return Di;
      }
    }
    function Gm(n, r, l) {
      return n.addEventListener(r, l, !1), l;
    }
    function mc(n, r, l) {
      return n.addEventListener(r, l, !0), l;
    }
    function Pi(n, r, l, u) {
      return n.addEventListener(r, l, {
        capture: !0,
        passive: u
      }), l;
    }
    function wp(n, r, l, u) {
      return n.addEventListener(r, l, {
        passive: u
      }), l;
    }
    var dl = null, Ja = null, ys = null;
    function bs(n) {
      return dl = n, Ja = Rp(), !0;
    }
    function Ep() {
      dl = null, Ja = null, ys = null;
    }
    function hc() {
      if (ys)
        return ys;
      var n, r = Ja, l = r.length, u, h = Rp(), C = h.length;
      for (n = 0; n < l && r[n] === h[n]; n++)
        ;
      var E = l - n;
      for (u = 1; u <= E && r[l - u] === h[C - u]; u++)
        ;
      var L = u > 1 ? 1 - u : void 0;
      return ys = h.slice(n, L), ys;
    }
    function Rp() {
      return "value" in dl ? dl.value : dl.textContent;
    }
    function pl(n) {
      var r, l = n.keyCode;
      return "charCode" in n ? (r = n.charCode, r === 0 && l === 13 && (r = 13)) : r = l, r === 10 && (r = 13), r >= 32 || r === 13 ? r : 0;
    }
    function fl() {
      return !0;
    }
    function hr() {
      return !1;
    }
    function xo(n) {
      function r(l, u, h, C, E) {
        this._reactName = l, this._targetInst = h, this.type = u, this.nativeEvent = C, this.target = E, this.currentTarget = null;
        for (var L in n)
          if (n.hasOwnProperty(L)) {
            var j = n[L];
            j ? this[L] = j(C) : this[L] = C[L];
          }
        var G = C.defaultPrevented != null ? C.defaultPrevented : C.returnValue === !1;
        return G ? this.isDefaultPrevented = fl : this.isDefaultPrevented = hr, this.isPropagationStopped = hr, this;
      }
      return pn(r.prototype, {
        preventDefault: function() {
          this.defaultPrevented = !0;
          var l = this.nativeEvent;
          l && (l.preventDefault ? l.preventDefault() : typeof l.returnValue != "unknown" && (l.returnValue = !1), this.isDefaultPrevented = fl);
        },
        stopPropagation: function() {
          var l = this.nativeEvent;
          l && (l.stopPropagation ? l.stopPropagation() : typeof l.cancelBubble != "unknown" && (l.cancelBubble = !0), this.isPropagationStopped = fl);
        },
        /**
         * We release all dispatched `SyntheticEvent`s after each event loop, adding
         * them back into the pool. This allows a way to hold onto a reference that
         * won't be added back into the pool.
         */
        persist: function() {
        },
        /**
         * Checks if this event should be released back into the pool.
         *
         * @return {boolean} True if this should not be released, false otherwise.
         */
        isPersistent: fl
      }), r;
    }
    var vr = {
      eventPhase: 0,
      bubbles: 0,
      cancelable: 0,
      timeStamp: function(n) {
        return n.timeStamp || Date.now();
      },
      defaultPrevented: 0,
      isTrusted: 0
    }, gr = xo(vr), vc = pn({}, vr, {
      view: 0,
      detail: 0
    }), qm = xo(vc), zu, Km, ba;
    function fy(n) {
      n !== ba && (ba && n.type === "mousemove" ? (zu = n.screenX - ba.screenX, Km = n.screenY - ba.screenY) : (zu = 0, Km = 0), ba = n);
    }
    var gc = pn({}, vc, {
      screenX: 0,
      screenY: 0,
      clientX: 0,
      clientY: 0,
      pageX: 0,
      pageY: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      getModifierState: Dp,
      button: 0,
      buttons: 0,
      relatedTarget: function(n) {
        return n.relatedTarget === void 0 ? n.fromElement === n.srcElement ? n.toElement : n.fromElement : n.relatedTarget;
      },
      movementX: function(n) {
        return "movementX" in n ? n.movementX : (fy(n), zu);
      },
      movementY: function(n) {
        return "movementY" in n ? n.movementY : Km;
      }
    }), Cs = xo(gc), Qm = pn({}, gc, {
      dataTransfer: 0
    }), ml = xo(Qm), my = pn({}, vc, {
      relatedTarget: 0
    }), Op = xo(my), Xm = pn({}, vr, {
      animationName: 0,
      elapsedTime: 0,
      pseudoElement: 0
    }), kp = xo(Xm), Z0 = pn({}, vr, {
      clipboardData: function(n) {
        return "clipboardData" in n ? n.clipboardData : window.clipboardData;
      }
    }), J0 = xo(Z0), hy = pn({}, vr, {
      data: 0
    }), Zm = xo(hy), hl = Zm, ex = {
      Esc: "Escape",
      Spacebar: " ",
      Left: "ArrowLeft",
      Up: "ArrowUp",
      Right: "ArrowRight",
      Down: "ArrowDown",
      Del: "Delete",
      Win: "OS",
      Menu: "ContextMenu",
      Apps: "ContextMenu",
      Scroll: "ScrollLock",
      MozPrintableKey: "Unidentified"
    }, yc = {
      8: "Backspace",
      9: "Tab",
      12: "Clear",
      13: "Enter",
      16: "Shift",
      17: "Control",
      18: "Alt",
      19: "Pause",
      20: "CapsLock",
      27: "Escape",
      32: " ",
      33: "PageUp",
      34: "PageDown",
      35: "End",
      36: "Home",
      37: "ArrowLeft",
      38: "ArrowUp",
      39: "ArrowRight",
      40: "ArrowDown",
      45: "Insert",
      46: "Delete",
      112: "F1",
      113: "F2",
      114: "F3",
      115: "F4",
      116: "F5",
      117: "F6",
      118: "F7",
      119: "F8",
      120: "F9",
      121: "F10",
      122: "F11",
      123: "F12",
      144: "NumLock",
      145: "ScrollLock",
      224: "Meta"
    };
    function vy(n) {
      if (n.key) {
        var r = ex[n.key] || n.key;
        if (r !== "Unidentified")
          return r;
      }
      if (n.type === "keypress") {
        var l = pl(n);
        return l === 13 ? "Enter" : String.fromCharCode(l);
      }
      return n.type === "keydown" || n.type === "keyup" ? yc[n.keyCode] || "Unidentified" : "";
    }
    var po = {
      Alt: "altKey",
      Control: "ctrlKey",
      Meta: "metaKey",
      Shift: "shiftKey"
    };
    function tx(n) {
      var r = this, l = r.nativeEvent;
      if (l.getModifierState)
        return l.getModifierState(n);
      var u = po[n];
      return u ? !!l[u] : !1;
    }
    function Dp(n) {
      return tx;
    }
    var nx = pn({}, vc, {
      key: vy,
      code: 0,
      location: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      repeat: 0,
      locale: 0,
      getModifierState: Dp,
      // Legacy Interface
      charCode: function(n) {
        return n.type === "keypress" ? pl(n) : 0;
      },
      keyCode: function(n) {
        return n.type === "keydown" || n.type === "keyup" ? n.keyCode : 0;
      },
      which: function(n) {
        return n.type === "keypress" ? pl(n) : n.type === "keydown" || n.type === "keyup" ? n.keyCode : 0;
      }
    }), ox = xo(nx), gy = pn({}, gc, {
      pointerId: 0,
      width: 0,
      height: 0,
      pressure: 0,
      tangentialPressure: 0,
      tiltX: 0,
      tiltY: 0,
      twist: 0,
      pointerType: 0,
      isPrimary: 0
    }), Jm = xo(gy), rx = pn({}, vc, {
      touches: 0,
      targetTouches: 0,
      changedTouches: 0,
      altKey: 0,
      metaKey: 0,
      ctrlKey: 0,
      shiftKey: 0,
      getModifierState: Dp
    }), Ca = xo(rx), eh = pn({}, vr, {
      propertyName: 0,
      elapsedTime: 0,
      pseudoElement: 0
    }), ax = xo(eh), xs = pn({}, gc, {
      deltaX: function(n) {
        return "deltaX" in n ? n.deltaX : (
          // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
          "wheelDeltaX" in n ? -n.wheelDeltaX : 0
        );
      },
      deltaY: function(n) {
        return "deltaY" in n ? n.deltaY : (
          // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
          "wheelDeltaY" in n ? -n.wheelDeltaY : (
            // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
            "wheelDelta" in n ? -n.wheelDelta : 0
          )
        );
      },
      deltaZ: 0,
      // Browsers without "deltaMode" is reporting in raw wheel delta where one
      // notch on the scroll is always +/- 120, roughly equivalent to pixels.
      // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
      // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
      deltaMode: 0
    }), Mp = xo(xs), vl = [9, 13, 27, 32], Vu = 229, Fu = ye && "CompositionEvent" in window, gl = null;
    ye && "documentMode" in document && (gl = document.documentMode);
    var ix = ye && "TextEvent" in window && !gl, Np = ye && (!Fu || gl && gl > 8 && gl <= 11), yy = 32, th = String.fromCharCode(yy);
    function by() {
      Oe("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), Oe("onCompositionEnd", ["compositionend", "focusout", "keydown", "keypress", "keyup", "mousedown"]), Oe("onCompositionStart", ["compositionstart", "focusout", "keydown", "keypress", "keyup", "mousedown"]), Oe("onCompositionUpdate", ["compositionupdate", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
    }
    var ju = !1;
    function Pp(n) {
      return (n.ctrlKey || n.altKey || n.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
      !(n.ctrlKey && n.altKey);
    }
    function Cy(n) {
      switch (n) {
        case "compositionstart":
          return "onCompositionStart";
        case "compositionend":
          return "onCompositionEnd";
        case "compositionupdate":
          return "onCompositionUpdate";
      }
    }
    function nh(n, r) {
      return n === "keydown" && r.keyCode === Vu;
    }
    function xy(n, r) {
      switch (n) {
        case "keyup":
          return vl.indexOf(r.keyCode) !== -1;
        case "keydown":
          return r.keyCode !== Vu;
        case "keypress":
        case "mousedown":
        case "focusout":
          return !0;
        default:
          return !1;
      }
    }
    function oh(n) {
      var r = n.detail;
      return typeof r == "object" && "data" in r ? r.data : null;
    }
    function $p(n) {
      return n.locale === "ko";
    }
    var $i = !1;
    function rh(n, r, l, u, h) {
      var C, E;
      if (Fu ? C = Cy(r) : $i ? xy(r, u) && (C = "onCompositionEnd") : nh(r, u) && (C = "onCompositionStart"), !C)
        return null;
      Np && !$p(u) && (!$i && C === "onCompositionStart" ? $i = bs(h) : C === "onCompositionEnd" && $i && (E = hc()));
      var L = Ry(l, C);
      if (L.length > 0) {
        var j = new Zm(C, r, null, u, h);
        if (n.push({
          event: j,
          listeners: L
        }), E)
          j.data = E;
        else {
          var G = oh(u);
          G !== null && (j.data = G);
        }
      }
    }
    function Ip(n, r) {
      switch (n) {
        case "compositionend":
          return oh(r);
        case "keypress":
          var l = r.which;
          return l !== yy ? null : (ju = !0, th);
        case "textInput":
          var u = r.data;
          return u === th && ju ? null : u;
        default:
          return null;
      }
    }
    function Sy(n, r) {
      if ($i) {
        if (n === "compositionend" || !Fu && xy(n, r)) {
          var l = hc();
          return Ep(), $i = !1, l;
        }
        return null;
      }
      switch (n) {
        case "paste":
          return null;
        case "keypress":
          if (!Pp(r)) {
            if (r.char && r.char.length > 1)
              return r.char;
            if (r.which)
              return String.fromCharCode(r.which);
          }
          return null;
        case "compositionend":
          return Np && !$p(r) ? null : r.data;
        default:
          return null;
      }
    }
    function sx(n, r, l, u, h) {
      var C;
      if (ix ? C = Ip(r, u) : C = Sy(r, u), !C)
        return null;
      var E = Ry(l, "onBeforeInput");
      if (E.length > 0) {
        var L = new hl("onBeforeInput", "beforeinput", null, u, h);
        n.push({
          event: L,
          listeners: E
        }), L.data = C;
      }
    }
    function Lp(n, r, l, u, h, C, E) {
      rh(n, r, l, u, h), sx(n, r, l, u, h);
    }
    var lx = {
      color: !0,
      date: !0,
      datetime: !0,
      "datetime-local": !0,
      email: !0,
      month: !0,
      number: !0,
      password: !0,
      range: !0,
      search: !0,
      tel: !0,
      text: !0,
      time: !0,
      url: !0,
      week: !0
    };
    function bc(n) {
      var r = n && n.nodeName && n.nodeName.toLowerCase();
      return r === "input" ? !!lx[n.type] : r === "textarea";
    }
    /**
     * Checks if an event is supported in the current execution environment.
     *
     * NOTE: This will not work correctly for non-generic events such as `change`,
     * `reset`, `load`, `error`, and `select`.
     *
     * Borrows from Modernizr.
     *
     * @param {string} eventNameSuffix Event name, e.g. "click".
     * @return {boolean} True if the event is supported.
     * @internal
     * @license Modernizr 3.0.0pre (Custom Build) | MIT
     */
    function cx(n) {
      if (!ye)
        return !1;
      var r = "on" + n, l = r in document;
      if (!l) {
        var u = document.createElement("div");
        u.setAttribute(r, "return;"), l = typeof u[r] == "function";
      }
      return l;
    }
    function Ap() {
      Oe("onChange", ["change", "click", "focusin", "focusout", "input", "keydown", "keyup", "selectionchange"]);
    }
    function a(n, r, l, u) {
      zd(u);
      var h = Ry(r, "onChange");
      if (h.length > 0) {
        var C = new gr("onChange", "change", null, l, u);
        n.push({
          event: C,
          listeners: h
        });
      }
    }
    var s = null, m = null;
    function y(n) {
      var r = n.nodeName && n.nodeName.toLowerCase();
      return r === "select" || r === "input" && n.type === "file";
    }
    function T(n) {
      var r = [];
      a(r, m, n, Bd(n)), pm(N, r);
    }
    function N(n) {
      mE(n, 0);
    }
    function U(n) {
      var r = jp(n);
      if (lg(r))
        return n;
    }
    function oe(n, r) {
      if (n === "change")
        return r;
    }
    var le = !1;
    ye && (le = cx("input") && (!document.documentMode || document.documentMode > 9));
    function Ie(n, r) {
      s = n, m = r, s.attachEvent("onpropertychange", ut);
    }
    function ct() {
      s && (s.detachEvent("onpropertychange", ut), s = null, m = null);
    }
    function ut(n) {
      n.propertyName === "value" && U(m) && T(n);
    }
    function lt(n, r, l) {
      n === "focusin" ? (ct(), Ie(r, l)) : n === "focusout" && ct();
    }
    function Et(n, r) {
      if (n === "selectionchange" || n === "keyup" || n === "keydown")
        return U(m);
    }
    function Pt(n) {
      var r = n.nodeName;
      return r && r.toLowerCase() === "input" && (n.type === "checkbox" || n.type === "radio");
    }
    function Lt(n, r) {
      if (n === "click")
        return U(r);
    }
    function ho(n, r) {
      if (n === "input" || n === "change")
        return U(r);
    }
    function we(n) {
      var r = n._wrapperState;
      !r || !r.controlled || n.type !== "number" || ts(n, "number", n.value);
    }
    function me(n, r, l, u, h, C, E) {
      var L = l ? jp(l) : window, j, G;
      if (y(L) ? j = oe : bc(L) ? le ? j = ho : (j = Et, G = lt) : Pt(L) && (j = Lt), j) {
        var X = j(r, l);
        if (X) {
          a(n, X, u, h);
          return;
        }
      }
      G && G(r, L, l), r === "focusout" && we(L);
    }
    function ke() {
      _e("onMouseEnter", ["mouseout", "mouseover"]), _e("onMouseLeave", ["mouseout", "mouseover"]), _e("onPointerEnter", ["pointerout", "pointerover"]), _e("onPointerLeave", ["pointerout", "pointerover"]);
    }
    function vt(n, r, l, u, h, C, E) {
      var L = r === "mouseover" || r === "pointerover", j = r === "mouseout" || r === "pointerout";
      if (L && !zg(u)) {
        var G = u.relatedTarget || u.fromElement;
        if (G && (Wu(G) || yh(G)))
          return;
      }
      if (!(!j && !L)) {
        var X;
        if (h.window === h)
          X = h;
        else {
          var he = h.ownerDocument;
          he ? X = he.defaultView || he.parentWindow : X = window;
        }
        var pe, Ne;
        if (j) {
          var Pe = u.relatedTarget || u.toElement;
          if (pe = l, Ne = Pe ? Wu(Pe) : null, Ne !== null) {
            var Ke = Kr(Ne);
            (Ne !== Ke || Ne.tag !== k && Ne.tag !== $) && (Ne = null);
          }
        } else
          pe = null, Ne = l;
        if (pe !== Ne) {
          var Ot = Cs, jt = "onMouseLeave", Bt = "onMouseEnter", gn = "mouse";
          (r === "pointerout" || r === "pointerover") && (Ot = Jm, jt = "onPointerLeave", Bt = "onPointerEnter", gn = "pointer");
          var mn = pe == null ? X : jp(pe), Ee = Ne == null ? X : jp(Ne), Qe = new Ot(jt, gn + "leave", pe, u, h);
          Qe.target = mn, Qe.relatedTarget = Ee;
          var Re = null, dt = Wu(h);
          if (dt === l) {
            var kt = new Ot(Bt, gn + "enter", Ne, u, h);
            kt.target = Ee, kt.relatedTarget = mn, Re = kt;
          }
          lA(n, Qe, Re, pe, Ne);
        }
      }
    }
    function At(n, r) {
      return n === r && (n !== 0 || 1 / n === 1 / r) || n !== n && r !== r;
    }
    var $t = typeof Object.is == "function" ? Object.is : At;
    function zt(n, r) {
      if ($t(n, r))
        return !0;
      if (typeof n != "object" || n === null || typeof r != "object" || r === null)
        return !1;
      var l = Object.keys(n), u = Object.keys(r);
      if (l.length !== u.length)
        return !1;
      for (var h = 0; h < l.length; h++) {
        var C = l[h];
        if (!ae.call(r, C) || !$t(n[C], r[C]))
          return !1;
      }
      return !0;
    }
    function Qt(n) {
      for (; n && n.firstChild; )
        n = n.firstChild;
      return n;
    }
    function Go(n) {
      for (; n; ) {
        if (n.nextSibling)
          return n.nextSibling;
        n = n.parentNode;
      }
    }
    function bn(n, r) {
      for (var l = Qt(n), u = 0, h = 0; l; ) {
        if (l.nodeType === Ci) {
          if (h = u + l.textContent.length, u <= r && h >= r)
            return {
              node: l,
              offset: r - u
            };
          u = h;
        }
        l = Qt(Go(l));
      }
    }
    function Ss(n) {
      var r = n.ownerDocument, l = r && r.defaultView || window, u = l.getSelection && l.getSelection();
      if (!u || u.rangeCount === 0)
        return null;
      var h = u.anchorNode, C = u.anchorOffset, E = u.focusNode, L = u.focusOffset;
      try {
        h.nodeType, E.nodeType;
      } catch {
        return null;
      }
      return ux(n, h, C, E, L);
    }
    function ux(n, r, l, u, h) {
      var C = 0, E = -1, L = -1, j = 0, G = 0, X = n, he = null;
      e:
        for (; ; ) {
          for (var pe = null; X === r && (l === 0 || X.nodeType === Ci) && (E = C + l), X === u && (h === 0 || X.nodeType === Ci) && (L = C + h), X.nodeType === Ci && (C += X.nodeValue.length), (pe = X.firstChild) !== null; )
            he = X, X = pe;
          for (; ; ) {
            if (X === n)
              break e;
            if (he === r && ++j === l && (E = C), he === u && ++G === h && (L = C), (pe = X.nextSibling) !== null)
              break;
            X = he, he = X.parentNode;
          }
          X = pe;
        }
      return E === -1 || L === -1 ? null : {
        start: E,
        end: L
      };
    }
    function UL(n, r) {
      var l = n.ownerDocument || document, u = l && l.defaultView || window;
      if (u.getSelection) {
        var h = u.getSelection(), C = n.textContent.length, E = Math.min(r.start, C), L = r.end === void 0 ? E : Math.min(r.end, C);
        if (!h.extend && E > L) {
          var j = L;
          L = E, E = j;
        }
        var G = bn(n, E), X = bn(n, L);
        if (G && X) {
          if (h.rangeCount === 1 && h.anchorNode === G.node && h.anchorOffset === G.offset && h.focusNode === X.node && h.focusOffset === X.offset)
            return;
          var he = l.createRange();
          he.setStart(G.node, G.offset), h.removeAllRanges(), E > L ? (h.addRange(he), h.extend(X.node, X.offset)) : (he.setEnd(X.node, X.offset), h.addRange(he));
        }
      }
    }
    function nE(n) {
      return n && n.nodeType === Ci;
    }
    function oE(n, r) {
      return !n || !r ? !1 : n === r ? !0 : nE(n) ? !1 : nE(r) ? oE(n, r.parentNode) : "contains" in n ? n.contains(r) : n.compareDocumentPosition ? !!(n.compareDocumentPosition(r) & 16) : !1;
    }
    function HL(n) {
      return n && n.ownerDocument && oE(n.ownerDocument.documentElement, n);
    }
    function WL(n) {
      try {
        return typeof n.contentWindow.location.href == "string";
      } catch {
        return !1;
      }
    }
    function rE() {
      for (var n = window, r = Ed(); r instanceof n.HTMLIFrameElement; ) {
        if (WL(r))
          n = r.contentWindow;
        else
          return r;
        r = Ed(n.document);
      }
      return r;
    }
    function dx(n) {
      var r = n && n.nodeName && n.nodeName.toLowerCase();
      return r && (r === "input" && (n.type === "text" || n.type === "search" || n.type === "tel" || n.type === "url" || n.type === "password") || r === "textarea" || n.contentEditable === "true");
    }
    function YL() {
      var n = rE();
      return {
        focusedElem: n,
        selectionRange: dx(n) ? qL(n) : null
      };
    }
    function GL(n) {
      var r = rE(), l = n.focusedElem, u = n.selectionRange;
      if (r !== l && HL(l)) {
        u !== null && dx(l) && KL(l, u);
        for (var h = [], C = l; C = C.parentNode; )
          C.nodeType === Mr && h.push({
            element: C,
            left: C.scrollLeft,
            top: C.scrollTop
          });
        typeof l.focus == "function" && l.focus();
        for (var E = 0; E < h.length; E++) {
          var L = h[E];
          L.element.scrollLeft = L.left, L.element.scrollTop = L.top;
        }
      }
    }
    function qL(n) {
      var r;
      return "selectionStart" in n ? r = {
        start: n.selectionStart,
        end: n.selectionEnd
      } : r = Ss(n), r || {
        start: 0,
        end: 0
      };
    }
    function KL(n, r) {
      var l = r.start, u = r.end;
      u === void 0 && (u = l), "selectionStart" in n ? (n.selectionStart = l, n.selectionEnd = Math.min(u, n.value.length)) : UL(n, r);
    }
    var QL = ye && "documentMode" in document && document.documentMode <= 11;
    function XL() {
      Oe("onSelect", ["focusout", "contextmenu", "dragend", "focusin", "keydown", "keyup", "mousedown", "mouseup", "selectionchange"]);
    }
    var _p = null, px = null, ah = null, fx = !1;
    function ZL(n) {
      if ("selectionStart" in n && dx(n))
        return {
          start: n.selectionStart,
          end: n.selectionEnd
        };
      var r = n.ownerDocument && n.ownerDocument.defaultView || window, l = r.getSelection();
      return {
        anchorNode: l.anchorNode,
        anchorOffset: l.anchorOffset,
        focusNode: l.focusNode,
        focusOffset: l.focusOffset
      };
    }
    function JL(n) {
      return n.window === n ? n.document : n.nodeType === La ? n : n.ownerDocument;
    }
    function aE(n, r, l) {
      var u = JL(l);
      if (!(fx || _p == null || _p !== Ed(u))) {
        var h = ZL(_p);
        if (!ah || !zt(ah, h)) {
          ah = h;
          var C = Ry(px, "onSelect");
          if (C.length > 0) {
            var E = new gr("onSelect", "select", null, r, l);
            n.push({
              event: E,
              listeners: C
            }), E.target = _p;
          }
        }
      }
    }
    function eA(n, r, l, u, h, C, E) {
      var L = l ? jp(l) : window;
      switch (r) {
        case "focusin":
          (bc(L) || L.contentEditable === "true") && (_p = L, px = l, ah = null);
          break;
        case "focusout":
          _p = null, px = null, ah = null;
          break;
        case "mousedown":
          fx = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          fx = !1, aE(n, u, h);
          break;
        case "selectionchange":
          if (QL)
            break;
        case "keydown":
        case "keyup":
          aE(n, u, h);
      }
    }
    function Ty(n, r) {
      var l = {};
      return l[n.toLowerCase()] = r.toLowerCase(), l["Webkit" + n] = "webkit" + r, l["Moz" + n] = "moz" + r, l;
    }
    var Bp = {
      animationend: Ty("Animation", "AnimationEnd"),
      animationiteration: Ty("Animation", "AnimationIteration"),
      animationstart: Ty("Animation", "AnimationStart"),
      transitionend: Ty("Transition", "TransitionEnd")
    }, mx = {}, iE = {};
    ye && (iE = document.createElement("div").style, "AnimationEvent" in window || (delete Bp.animationend.animation, delete Bp.animationiteration.animation, delete Bp.animationstart.animation), "TransitionEvent" in window || delete Bp.transitionend.transition);
    function wy(n) {
      if (mx[n])
        return mx[n];
      if (!Bp[n])
        return n;
      var r = Bp[n];
      for (var l in r)
        if (r.hasOwnProperty(l) && l in iE)
          return mx[n] = r[l];
      return n;
    }
    var sE = wy("animationend"), lE = wy("animationiteration"), cE = wy("animationstart"), uE = wy("transitionend"), dE = /* @__PURE__ */ new Map(), pE = ["abort", "auxClick", "cancel", "canPlay", "canPlayThrough", "click", "close", "contextMenu", "copy", "cut", "drag", "dragEnd", "dragEnter", "dragExit", "dragLeave", "dragOver", "dragStart", "drop", "durationChange", "emptied", "encrypted", "ended", "error", "gotPointerCapture", "input", "invalid", "keyDown", "keyPress", "keyUp", "load", "loadedData", "loadedMetadata", "loadStart", "lostPointerCapture", "mouseDown", "mouseMove", "mouseOut", "mouseOver", "mouseUp", "paste", "pause", "play", "playing", "pointerCancel", "pointerDown", "pointerMove", "pointerOut", "pointerOver", "pointerUp", "progress", "rateChange", "reset", "resize", "seeked", "seeking", "stalled", "submit", "suspend", "timeUpdate", "touchCancel", "touchEnd", "touchStart", "volumeChange", "scroll", "toggle", "touchMove", "waiting", "wheel"];
    function Cc(n, r) {
      dE.set(n, r), Oe(r, [n]);
    }
    function tA() {
      for (var n = 0; n < pE.length; n++) {
        var r = pE[n], l = r.toLowerCase(), u = r[0].toUpperCase() + r.slice(1);
        Cc(l, "on" + u);
      }
      Cc(sE, "onAnimationEnd"), Cc(lE, "onAnimationIteration"), Cc(cE, "onAnimationStart"), Cc("dblclick", "onDoubleClick"), Cc("focusin", "onFocus"), Cc("focusout", "onBlur"), Cc(uE, "onTransitionEnd");
    }
    function nA(n, r, l, u, h, C, E) {
      var L = dE.get(r);
      if (L !== void 0) {
        var j = gr, G = r;
        switch (r) {
          case "keypress":
            if (pl(u) === 0)
              return;
          case "keydown":
          case "keyup":
            j = ox;
            break;
          case "focusin":
            G = "focus", j = Op;
            break;
          case "focusout":
            G = "blur", j = Op;
            break;
          case "beforeblur":
          case "afterblur":
            j = Op;
            break;
          case "click":
            if (u.button === 2)
              return;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            j = Cs;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            j = ml;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            j = Ca;
            break;
          case sE:
          case lE:
          case cE:
            j = kp;
            break;
          case uE:
            j = ax;
            break;
          case "scroll":
            j = qm;
            break;
          case "wheel":
            j = Mp;
            break;
          case "copy":
          case "cut":
          case "paste":
            j = J0;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            j = Jm;
            break;
        }
        var X = (C & Ys) !== 0;
        {
          var he = !X && // TODO: ideally, we'd eventually add all events from
          // nonDelegatedEvents list in DOMPluginEventSystem.
          // Then we can remove this special list.
          // This is a breaking change that can wait until React 18.
          r === "scroll", pe = iA(l, L, u.type, X, he);
          if (pe.length > 0) {
            var Ne = new j(L, G, null, u, h);
            n.push({
              event: Ne,
              listeners: pe
            });
          }
        }
      }
    }
    tA(), ke(), Ap(), XL(), by();
    function oA(n, r, l, u, h, C, E) {
      nA(n, r, l, u, h, C);
      var L = (C & V0) === 0;
      L && (vt(n, r, l, u, h), me(n, r, l, u, h), eA(n, r, l, u, h), Lp(n, r, l, u, h));
    }
    var ih = ["abort", "canplay", "canplaythrough", "durationchange", "emptied", "encrypted", "ended", "error", "loadeddata", "loadedmetadata", "loadstart", "pause", "play", "playing", "progress", "ratechange", "resize", "seeked", "seeking", "stalled", "suspend", "timeupdate", "volumechange", "waiting"], hx = new Set(["cancel", "close", "invalid", "load", "scroll", "toggle"].concat(ih));
    function fE(n, r, l) {
      var u = n.type || "unknown-event";
      n.currentTarget = l, wi(u, r, void 0, n), n.currentTarget = null;
    }
    function rA(n, r, l) {
      var u;
      if (l)
        for (var h = r.length - 1; h >= 0; h--) {
          var C = r[h], E = C.instance, L = C.currentTarget, j = C.listener;
          if (E !== u && n.isPropagationStopped())
            return;
          fE(n, j, L), u = E;
        }
      else
        for (var G = 0; G < r.length; G++) {
          var X = r[G], he = X.instance, pe = X.currentTarget, Ne = X.listener;
          if (he !== u && n.isPropagationStopped())
            return;
          fE(n, Ne, pe), u = he;
        }
    }
    function mE(n, r) {
      for (var l = (r & Ys) !== 0, u = 0; u < n.length; u++) {
        var h = n[u], C = h.event, E = h.listeners;
        rA(C, E, l);
      }
      vm();
    }
    function aA(n, r, l, u, h) {
      var C = Bd(l), E = [];
      oA(E, n, u, l, C, r), mE(E, r);
    }
    function io(n, r) {
      hx.has(n) || f('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', n);
      var l = !1, u = L_(r), h = cA(n, l);
      u.has(h) || (hE(r, n, fu, l), u.add(h));
    }
    function vx(n, r, l) {
      hx.has(n) && !r && f('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', n);
      var u = 0;
      r && (u |= Ys), hE(l, n, u, r);
    }
    var Ey = "_reactListening" + Math.random().toString(36).slice(2);
    function sh(n) {
      if (!n[Ey]) {
        n[Ey] = !0, de.forEach(function(l) {
          l !== "selectionchange" && (hx.has(l) || vx(l, !1, n), vx(l, !0, n));
        });
        var r = n.nodeType === La ? n : n.ownerDocument;
        r !== null && (r[Ey] || (r[Ey] = !0, vx("selectionchange", !1, r)));
      }
    }
    function hE(n, r, l, u, h) {
      var C = pc(n, r, l), E = void 0;
      yu && (r === "touchstart" || r === "touchmove" || r === "wheel") && (E = !0), n = n, u ? E !== void 0 ? Pi(n, r, C, E) : mc(n, r, C) : E !== void 0 ? wp(n, r, C, E) : Gm(n, r, C);
    }
    function vE(n, r) {
      return n === r || n.nodeType === bo && n.parentNode === r;
    }
    function gx(n, r, l, u, h) {
      var C = u;
      if (!(r & Si) && !(r & fu)) {
        var E = h;
        if (u !== null) {
          var L = u;
          e:
            for (; ; ) {
              if (L === null)
                return;
              var j = L.tag;
              if (j === R || j === D) {
                var G = L.stateNode.containerInfo;
                if (vE(G, E))
                  break;
                if (j === D)
                  for (var X = L.return; X !== null; ) {
                    var he = X.tag;
                    if (he === R || he === D) {
                      var pe = X.stateNode.containerInfo;
                      if (vE(pe, E))
                        return;
                    }
                    X = X.return;
                  }
                for (; G !== null; ) {
                  var Ne = Wu(G);
                  if (Ne === null)
                    return;
                  var Pe = Ne.tag;
                  if (Pe === k || Pe === $) {
                    L = C = Ne;
                    continue e;
                  }
                  G = G.parentNode;
                }
              }
              L = L.return;
            }
        }
      }
      pm(function() {
        return aA(n, r, l, C);
      });
    }
    function lh(n, r, l) {
      return {
        instance: n,
        listener: r,
        currentTarget: l
      };
    }
    function iA(n, r, l, u, h, C) {
      for (var E = r !== null ? r + "Capture" : null, L = u ? E : r, j = [], G = n, X = null; G !== null; ) {
        var he = G, pe = he.stateNode, Ne = he.tag;
        if (Ne === k && pe !== null && (X = pe, L !== null)) {
          var Pe = qs(G, L);
          Pe != null && j.push(lh(G, Pe, X));
        }
        if (h)
          break;
        G = G.return;
      }
      return j;
    }
    function Ry(n, r) {
      for (var l = r + "Capture", u = [], h = n; h !== null; ) {
        var C = h, E = C.stateNode, L = C.tag;
        if (L === k && E !== null) {
          var j = E, G = qs(h, l);
          G != null && u.unshift(lh(h, G, j));
          var X = qs(h, r);
          X != null && u.push(lh(h, X, j));
        }
        h = h.return;
      }
      return u;
    }
    function zp(n) {
      if (n === null)
        return null;
      do
        n = n.return;
      while (n && n.tag !== k);
      return n || null;
    }
    function sA(n, r) {
      for (var l = n, u = r, h = 0, C = l; C; C = zp(C))
        h++;
      for (var E = 0, L = u; L; L = zp(L))
        E++;
      for (; h - E > 0; )
        l = zp(l), h--;
      for (; E - h > 0; )
        u = zp(u), E--;
      for (var j = h; j--; ) {
        if (l === u || u !== null && l === u.alternate)
          return l;
        l = zp(l), u = zp(u);
      }
      return null;
    }
    function gE(n, r, l, u, h) {
      for (var C = r._reactName, E = [], L = l; L !== null && L !== u; ) {
        var j = L, G = j.alternate, X = j.stateNode, he = j.tag;
        if (G !== null && G === u)
          break;
        if (he === k && X !== null) {
          var pe = X;
          if (h) {
            var Ne = qs(L, C);
            Ne != null && E.unshift(lh(L, Ne, pe));
          } else if (!h) {
            var Pe = qs(L, C);
            Pe != null && E.push(lh(L, Pe, pe));
          }
        }
        L = L.return;
      }
      E.length !== 0 && n.push({
        event: r,
        listeners: E
      });
    }
    function lA(n, r, l, u, h) {
      var C = u && h ? sA(u, h) : null;
      u !== null && gE(n, r, u, C, !1), h !== null && l !== null && gE(n, l, h, C, !0);
    }
    function cA(n, r) {
      return n + "__" + (r ? "capture" : "bubble");
    }
    var xa = !1, ch = "dangerouslySetInnerHTML", Oy = "suppressContentEditableWarning", xc = "suppressHydrationWarning", yE = "autoFocus", Uu = "children", Hu = "style", ky = "__html", yx, Dy, uh, bE, My, CE, xE;
    yx = {
      // There are working polyfills for <dialog>. Let people use it.
      dialog: !0,
      // Electron ships a custom <webview> tag to display external web content in
      // an isolated frame and process.
      // This tag is not present in non Electron environments such as JSDom which
      // is often used for testing purposes.
      // @see https://electronjs.org/docs/api/webview-tag
      webview: !0
    }, Dy = function(n, r) {
      _d(n, r), sm(n, r), Bg(n, r, {
        registrationNameDependencies: Ae,
        possibleRegistrationNames: at
      });
    }, CE = ye && !document.documentMode, uh = function(n, r, l) {
      if (!xa) {
        var u = Ny(l), h = Ny(r);
        h !== u && (xa = !0, f("Prop `%s` did not match. Server: %s Client: %s", n, JSON.stringify(h), JSON.stringify(u)));
      }
    }, bE = function(n) {
      if (!xa) {
        xa = !0;
        var r = [];
        n.forEach(function(l) {
          r.push(l);
        }), f("Extra attributes from the server: %s", r);
      }
    }, My = function(n, r) {
      r === !1 ? f("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", n, n, n) : f("Expected `%s` listener to be a function, instead got a value of `%s` type.", n, typeof r);
    }, xE = function(n, r) {
      var l = n.namespaceURI === bi ? n.ownerDocument.createElement(n.tagName) : n.ownerDocument.createElementNS(n.namespaceURI, n.tagName);
      return l.innerHTML = r, l.innerHTML;
    };
    var uA = /\r\n?/g, dA = /\u0000|\uFFFD/g;
    function Ny(n) {
      st(n);
      var r = typeof n == "string" ? n : "" + n;
      return r.replace(uA, `
`).replace(dA, "");
    }
    function Py(n, r, l, u) {
      var h = Ny(r), C = Ny(n);
      if (C !== h && (u && (xa || (xa = !0, f('Text content did not match. Server: "%s" Client: "%s"', C, h))), l && ie))
        throw new Error("Text content does not match server-rendered HTML.");
    }
    function SE(n) {
      return n.nodeType === La ? n : n.ownerDocument;
    }
    function pA() {
    }
    function $y(n) {
      n.onclick = pA;
    }
    function fA(n, r, l, u, h) {
      for (var C in u)
        if (u.hasOwnProperty(C)) {
          var E = u[C];
          if (C === Hu)
            E && Object.freeze(E), kg(r, E);
          else if (C === ch) {
            var L = E ? E[ky] : void 0;
            L != null && gg(r, L);
          } else if (C === Uu)
            if (typeof E == "string") {
              var j = n !== "textarea" || E !== "";
              j && $d(r, E);
            } else
              typeof E == "number" && $d(r, "" + E);
          else
            C === Oy || C === xc || C === yE || (Ae.hasOwnProperty(C) ? E != null && (typeof E != "function" && My(C, E), C === "onScroll" && io("scroll", r)) : E != null && Hn(r, C, E, h));
        }
    }
    function mA(n, r, l, u) {
      for (var h = 0; h < r.length; h += 2) {
        var C = r[h], E = r[h + 1];
        C === Hu ? kg(n, E) : C === ch ? gg(n, E) : C === Uu ? $d(n, E) : Hn(n, C, E, u);
      }
    }
    function hA(n, r, l, u) {
      var h, C = SE(l), E, L = u;
      if (L === bi && (L = Nd(n)), L === bi) {
        if (h = xi(n, r), !h && n !== n.toLowerCase() && f("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", n), n === "script") {
          var j = C.createElement("div");
          j.innerHTML = "<script><\/script>";
          var G = j.firstChild;
          E = j.removeChild(G);
        } else if (typeof r.is == "string")
          E = C.createElement(n, {
            is: r.is
          });
        else if (E = C.createElement(n), n === "select") {
          var X = E;
          r.multiple ? X.multiple = !0 : r.size && (X.size = r.size);
        }
      } else
        E = C.createElementNS(L, n);
      return L === bi && !h && Object.prototype.toString.call(E) === "[object HTMLUnknownElement]" && !ae.call(yx, n) && (yx[n] = !0, f("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", n)), E;
    }
    function vA(n, r) {
      return SE(r).createTextNode(n);
    }
    function gA(n, r, l, u) {
      var h = xi(r, l);
      Dy(r, l);
      var C;
      switch (r) {
        case "dialog":
          io("cancel", n), io("close", n), C = l;
          break;
        case "iframe":
        case "object":
        case "embed":
          io("load", n), C = l;
          break;
        case "video":
        case "audio":
          for (var E = 0; E < ih.length; E++)
            io(ih[E], n);
          C = l;
          break;
        case "source":
          io("error", n), C = l;
          break;
        case "img":
        case "image":
        case "link":
          io("error", n), io("load", n), C = l;
          break;
        case "details":
          io("toggle", n), C = l;
          break;
        case "input":
          su(n, l), C = iu(n, l), io("invalid", n);
          break;
        case "option":
          Dd(n, l), C = l;
          break;
        case "select":
          fg(n, l), C = Qf(n, l), io("invalid", n);
          break;
        case "textarea":
          mg(n, l), C = Zf(n, l), io("invalid", n);
          break;
        default:
          C = l;
      }
      switch (Ld(r, C), fA(r, n, u, C, h), r) {
        case "input":
          Us(n), lu(n, l, !1);
          break;
        case "textarea":
          Us(n), vg(n);
          break;
        case "option":
          Kf(n, l);
          break;
        case "select":
          D0(n, l);
          break;
        default:
          typeof C.onClick == "function" && $y(n);
          break;
      }
    }
    function yA(n, r, l, u, h) {
      Dy(r, u);
      var C = null, E, L;
      switch (r) {
        case "input":
          E = iu(n, l), L = iu(n, u), C = [];
          break;
        case "select":
          E = Qf(n, l), L = Qf(n, u), C = [];
          break;
        case "textarea":
          E = Zf(n, l), L = Zf(n, u), C = [];
          break;
        default:
          E = l, L = u, typeof E.onClick != "function" && typeof L.onClick == "function" && $y(n);
          break;
      }
      Ld(r, L);
      var j, G, X = null;
      for (j in E)
        if (!(L.hasOwnProperty(j) || !E.hasOwnProperty(j) || E[j] == null))
          if (j === Hu) {
            var he = E[j];
            for (G in he)
              he.hasOwnProperty(G) && (X || (X = {}), X[G] = "");
          } else
            j === ch || j === Uu || j === Oy || j === xc || j === yE || (Ae.hasOwnProperty(j) ? C || (C = []) : (C = C || []).push(j, null));
      for (j in L) {
        var pe = L[j], Ne = E != null ? E[j] : void 0;
        if (!(!L.hasOwnProperty(j) || pe === Ne || pe == null && Ne == null))
          if (j === Hu)
            if (pe && Object.freeze(pe), Ne) {
              for (G in Ne)
                Ne.hasOwnProperty(G) && (!pe || !pe.hasOwnProperty(G)) && (X || (X = {}), X[G] = "");
              for (G in pe)
                pe.hasOwnProperty(G) && Ne[G] !== pe[G] && (X || (X = {}), X[G] = pe[G]);
            } else
              X || (C || (C = []), C.push(j, X)), X = pe;
          else if (j === ch) {
            var Pe = pe ? pe[ky] : void 0, Ke = Ne ? Ne[ky] : void 0;
            Pe != null && Ke !== Pe && (C = C || []).push(j, Pe);
          } else
            j === Uu ? (typeof pe == "string" || typeof pe == "number") && (C = C || []).push(j, "" + pe) : j === Oy || j === xc || (Ae.hasOwnProperty(j) ? (pe != null && (typeof pe != "function" && My(j, pe), j === "onScroll" && io("scroll", n)), !C && Ne !== pe && (C = [])) : (C = C || []).push(j, pe));
      }
      return X && (du(X, L[Hu]), (C = C || []).push(Hu, X)), C;
    }
    function bA(n, r, l, u, h) {
      l === "input" && h.type === "radio" && h.name != null && qf(n, h);
      var C = xi(l, u), E = xi(l, h);
      switch (mA(n, r, C, E), l) {
        case "input":
          Ul(n, h);
          break;
        case "textarea":
          hg(n, h);
          break;
        case "select":
          M0(n, h);
          break;
      }
    }
    function CA(n) {
      {
        var r = n.toLowerCase();
        return Ad.hasOwnProperty(r) && Ad[r] || null;
      }
    }
    function xA(n, r, l, u, h, C, E) {
      var L, j;
      switch (L = xi(r, l), Dy(r, l), r) {
        case "dialog":
          io("cancel", n), io("close", n);
          break;
        case "iframe":
        case "object":
        case "embed":
          io("load", n);
          break;
        case "video":
        case "audio":
          for (var G = 0; G < ih.length; G++)
            io(ih[G], n);
          break;
        case "source":
          io("error", n);
          break;
        case "img":
        case "image":
        case "link":
          io("error", n), io("load", n);
          break;
        case "details":
          io("toggle", n);
          break;
        case "input":
          su(n, l), io("invalid", n);
          break;
        case "option":
          Dd(n, l);
          break;
        case "select":
          fg(n, l), io("invalid", n);
          break;
        case "textarea":
          mg(n, l), io("invalid", n);
          break;
      }
      Ld(r, l);
      {
        j = /* @__PURE__ */ new Set();
        for (var X = n.attributes, he = 0; he < X.length; he++) {
          var pe = X[he].name.toLowerCase();
          switch (pe) {
            case "value":
              break;
            case "checked":
              break;
            case "selected":
              break;
            default:
              j.add(X[he].name);
          }
        }
      }
      var Ne = null;
      for (var Pe in l)
        if (l.hasOwnProperty(Pe)) {
          var Ke = l[Pe];
          if (Pe === Uu)
            typeof Ke == "string" ? n.textContent !== Ke && (l[xc] !== !0 && Py(n.textContent, Ke, C, E), Ne = [Uu, Ke]) : typeof Ke == "number" && n.textContent !== "" + Ke && (l[xc] !== !0 && Py(n.textContent, Ke, C, E), Ne = [Uu, "" + Ke]);
          else if (Ae.hasOwnProperty(Pe))
            Ke != null && (typeof Ke != "function" && My(Pe, Ke), Pe === "onScroll" && io("scroll", n));
          else if (E && // Convince Flow we've calculated it (it's DEV-only in this method.)
          typeof L == "boolean") {
            var Ot = void 0, jt = L && Me ? null : Jt(Pe);
            if (l[xc] !== !0) {
              if (!(Pe === Oy || Pe === xc || // Controlled attributes are not validated
              // TODO: Only ignore them on controlled tags.
              Pe === "value" || Pe === "checked" || Pe === "selected")) {
                if (Pe === ch) {
                  var Bt = n.innerHTML, gn = Ke ? Ke[ky] : void 0;
                  if (gn != null) {
                    var mn = xE(n, gn);
                    mn !== Bt && uh(Pe, Bt, mn);
                  }
                } else if (Pe === Hu) {
                  if (j.delete(Pe), CE) {
                    var Ee = B0(Ke);
                    Ot = n.getAttribute("style"), Ee !== Ot && uh(Pe, Ot, Ee);
                  }
                } else if (L && !Me)
                  j.delete(Pe.toLowerCase()), Ot = Tn(n, Pe, Ke), Ke !== Ot && uh(Pe, Ot, Ke);
                else if (!pt(Pe, jt, L) && !Nt(Pe, Ke, jt, L)) {
                  var Qe = !1;
                  if (jt !== null)
                    j.delete(jt.attributeName), Ot = Pn(n, Pe, Ke, jt);
                  else {
                    var Re = u;
                    if (Re === bi && (Re = Nd(r)), Re === bi)
                      j.delete(Pe.toLowerCase());
                    else {
                      var dt = CA(Pe);
                      dt !== null && dt !== Pe && (Qe = !0, j.delete(dt)), j.delete(Pe);
                    }
                    Ot = Tn(n, Pe, Ke);
                  }
                  var kt = Me;
                  !kt && Ke !== Ot && !Qe && uh(Pe, Ot, Ke);
                }
              }
            }
          }
        }
      switch (E && // $FlowFixMe - Should be inferred as not undefined.
      j.size > 0 && l[xc] !== !0 && bE(j), r) {
        case "input":
          Us(n), lu(n, l, !0);
          break;
        case "textarea":
          Us(n), vg(n);
          break;
        case "select":
        case "option":
          break;
        default:
          typeof l.onClick == "function" && $y(n);
          break;
      }
      return Ne;
    }
    function SA(n, r, l) {
      var u = n.nodeValue !== r;
      return u;
    }
    function bx(n, r) {
      {
        if (xa)
          return;
        xa = !0, f("Did not expect server HTML to contain a <%s> in <%s>.", r.nodeName.toLowerCase(), n.nodeName.toLowerCase());
      }
    }
    function Cx(n, r) {
      {
        if (xa)
          return;
        xa = !0, f('Did not expect server HTML to contain the text node "%s" in <%s>.', r.nodeValue, n.nodeName.toLowerCase());
      }
    }
    function xx(n, r, l) {
      {
        if (xa)
          return;
        xa = !0, f("Expected server HTML to contain a matching <%s> in <%s>.", r, n.nodeName.toLowerCase());
      }
    }
    function Sx(n, r) {
      {
        if (r === "" || xa)
          return;
        xa = !0, f('Expected server HTML to contain a matching text node for "%s" in <%s>.', r, n.nodeName.toLowerCase());
      }
    }
    function TA(n, r, l) {
      switch (r) {
        case "input":
          cg(n, l);
          return;
        case "textarea":
          Jf(n, l);
          return;
        case "select":
          N0(n, l);
          return;
      }
    }
    var dh = function() {
    }, ph = function() {
    };
    {
      var wA = ["address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "main", "marquee", "menu", "menuitem", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "source", "style", "summary", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "title", "tr", "track", "ul", "wbr", "xmp"], TE = [
        "applet",
        "caption",
        "html",
        "table",
        "td",
        "th",
        "marquee",
        "object",
        "template",
        // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
        // TODO: Distinguish by namespace here -- for <title>, including it here
        // errs on the side of fewer warnings
        "foreignObject",
        "desc",
        "title"
      ], EA = TE.concat(["button"]), RA = ["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"], wE = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
      };
      ph = function(n, r) {
        var l = pn({}, n || wE), u = {
          tag: r
        };
        return TE.indexOf(r) !== -1 && (l.aTagInScope = null, l.buttonTagInScope = null, l.nobrTagInScope = null), EA.indexOf(r) !== -1 && (l.pTagInButtonScope = null), wA.indexOf(r) !== -1 && r !== "address" && r !== "div" && r !== "p" && (l.listItemTagAutoclosing = null, l.dlItemTagAutoclosing = null), l.current = u, r === "form" && (l.formTag = u), r === "a" && (l.aTagInScope = u), r === "button" && (l.buttonTagInScope = u), r === "nobr" && (l.nobrTagInScope = u), r === "p" && (l.pTagInButtonScope = u), r === "li" && (l.listItemTagAutoclosing = u), (r === "dd" || r === "dt") && (l.dlItemTagAutoclosing = u), l;
      };
      var OA = function(n, r) {
        switch (r) {
          case "select":
            return n === "option" || n === "optgroup" || n === "#text";
          case "optgroup":
            return n === "option" || n === "#text";
          case "option":
            return n === "#text";
          case "tr":
            return n === "th" || n === "td" || n === "style" || n === "script" || n === "template";
          case "tbody":
          case "thead":
          case "tfoot":
            return n === "tr" || n === "style" || n === "script" || n === "template";
          case "colgroup":
            return n === "col" || n === "template";
          case "table":
            return n === "caption" || n === "colgroup" || n === "tbody" || n === "tfoot" || n === "thead" || n === "style" || n === "script" || n === "template";
          case "head":
            return n === "base" || n === "basefont" || n === "bgsound" || n === "link" || n === "meta" || n === "title" || n === "noscript" || n === "noframes" || n === "style" || n === "script" || n === "template";
          case "html":
            return n === "head" || n === "body" || n === "frameset";
          case "frameset":
            return n === "frame";
          case "#document":
            return n === "html";
        }
        switch (n) {
          case "h1":
          case "h2":
          case "h3":
          case "h4":
          case "h5":
          case "h6":
            return r !== "h1" && r !== "h2" && r !== "h3" && r !== "h4" && r !== "h5" && r !== "h6";
          case "rp":
          case "rt":
            return RA.indexOf(r) === -1;
          case "body":
          case "caption":
          case "col":
          case "colgroup":
          case "frameset":
          case "frame":
          case "head":
          case "html":
          case "tbody":
          case "td":
          case "tfoot":
          case "th":
          case "thead":
          case "tr":
            return r == null;
        }
        return !0;
      }, kA = function(n, r) {
        switch (n) {
          case "address":
          case "article":
          case "aside":
          case "blockquote":
          case "center":
          case "details":
          case "dialog":
          case "dir":
          case "div":
          case "dl":
          case "fieldset":
          case "figcaption":
          case "figure":
          case "footer":
          case "header":
          case "hgroup":
          case "main":
          case "menu":
          case "nav":
          case "ol":
          case "p":
          case "section":
          case "summary":
          case "ul":
          case "pre":
          case "listing":
          case "table":
          case "hr":
          case "xmp":
          case "h1":
          case "h2":
          case "h3":
          case "h4":
          case "h5":
          case "h6":
            return r.pTagInButtonScope;
          case "form":
            return r.formTag || r.pTagInButtonScope;
          case "li":
            return r.listItemTagAutoclosing;
          case "dd":
          case "dt":
            return r.dlItemTagAutoclosing;
          case "button":
            return r.buttonTagInScope;
          case "a":
            return r.aTagInScope;
          case "nobr":
            return r.nobrTagInScope;
        }
        return null;
      }, EE = {};
      dh = function(n, r, l) {
        l = l || wE;
        var u = l.current, h = u && u.tag;
        r != null && (n != null && f("validateDOMNesting: when childText is passed, childTag should be null"), n = "#text");
        var C = OA(n, h) ? null : u, E = C ? null : kA(n, l), L = C || E;
        if (L) {
          var j = L.tag, G = !!C + "|" + n + "|" + j;
          if (!EE[G]) {
            EE[G] = !0;
            var X = n, he = "";
            if (n === "#text" ? /\S/.test(r) ? X = "Text nodes" : (X = "Whitespace text nodes", he = " Make sure you don't have any extra whitespace between tags on each line of your source code.") : X = "<" + n + ">", C) {
              var pe = "";
              j === "table" && n === "tr" && (pe += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser."), f("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", X, j, he, pe);
            } else
              f("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", X, j);
          }
        }
      };
    }
    var Iy = "suppressHydrationWarning", Ly = "$", Ay = "/$", fh = "$?", mh = "$!", DA = "style", Tx = null, wx = null;
    function MA(n) {
      var r, l, u = n.nodeType;
      switch (u) {
        case La:
        case Hs: {
          r = u === La ? "#document" : "#fragment";
          var h = n.documentElement;
          l = h ? h.namespaceURI : tm(null, "");
          break;
        }
        default: {
          var C = u === bo ? n.parentNode : n, E = C.namespaceURI || null;
          r = C.tagName, l = tm(E, r);
          break;
        }
      }
      {
        var L = r.toLowerCase(), j = ph(null, L);
        return {
          namespace: l,
          ancestorInfo: j
        };
      }
    }
    function NA(n, r, l) {
      {
        var u = n, h = tm(u.namespace, r), C = ph(u.ancestorInfo, r);
        return {
          namespace: h,
          ancestorInfo: C
        };
      }
    }
    function nae(n) {
      return n;
    }
    function PA(n) {
      Tx = Jr(), wx = YL();
      var r = null;
      return Yo(!1), r;
    }
    function $A(n) {
      GL(wx), Yo(Tx), Tx = null, wx = null;
    }
    function IA(n, r, l, u, h) {
      var C;
      {
        var E = u;
        if (dh(n, null, E.ancestorInfo), typeof r.children == "string" || typeof r.children == "number") {
          var L = "" + r.children, j = ph(E.ancestorInfo, n);
          dh(null, L, j);
        }
        C = E.namespace;
      }
      var G = hA(n, r, l, C);
      return gh(h, G), Px(G, r), G;
    }
    function LA(n, r) {
      n.appendChild(r);
    }
    function AA(n, r, l, u, h) {
      switch (gA(n, r, l, u), r) {
        case "button":
        case "input":
        case "select":
        case "textarea":
          return !!l.autoFocus;
        case "img":
          return !0;
        default:
          return !1;
      }
    }
    function _A(n, r, l, u, h, C) {
      {
        var E = C;
        if (typeof u.children != typeof l.children && (typeof u.children == "string" || typeof u.children == "number")) {
          var L = "" + u.children, j = ph(E.ancestorInfo, r);
          dh(null, L, j);
        }
      }
      return yA(n, r, l, u);
    }
    function Ex(n, r) {
      return n === "textarea" || n === "noscript" || typeof r.children == "string" || typeof r.children == "number" || typeof r.dangerouslySetInnerHTML == "object" && r.dangerouslySetInnerHTML !== null && r.dangerouslySetInnerHTML.__html != null;
    }
    function BA(n, r, l, u) {
      {
        var h = l;
        dh(null, n, h.ancestorInfo);
      }
      var C = vA(n, r);
      return gh(u, C), C;
    }
    function zA() {
      var n = window.event;
      return n === void 0 ? Di : yr(n.type);
    }
    var Rx = typeof setTimeout == "function" ? setTimeout : void 0, VA = typeof clearTimeout == "function" ? clearTimeout : void 0, Ox = -1, RE = typeof Promise == "function" ? Promise : void 0, FA = typeof queueMicrotask == "function" ? queueMicrotask : typeof RE < "u" ? function(n) {
      return RE.resolve(null).then(n).catch(jA);
    } : Rx;
    function jA(n) {
      setTimeout(function() {
        throw n;
      });
    }
    function UA(n, r, l, u) {
      switch (r) {
        case "button":
        case "input":
        case "select":
        case "textarea":
          l.autoFocus && n.focus();
          return;
        case "img": {
          l.src && (n.src = l.src);
          return;
        }
      }
    }
    function HA(n, r, l, u, h, C) {
      bA(n, r, l, u, h), Px(n, h);
    }
    function OE(n) {
      $d(n, "");
    }
    function WA(n, r, l) {
      n.nodeValue = l;
    }
    function YA(n, r) {
      n.appendChild(r);
    }
    function GA(n, r) {
      var l;
      n.nodeType === bo ? (l = n.parentNode, l.insertBefore(r, n)) : (l = n, l.appendChild(r));
      var u = n._reactRootContainer;
      u == null && l.onclick === null && $y(l);
    }
    function qA(n, r, l) {
      n.insertBefore(r, l);
    }
    function KA(n, r, l) {
      n.nodeType === bo ? n.parentNode.insertBefore(r, l) : n.insertBefore(r, l);
    }
    function QA(n, r) {
      n.removeChild(r);
    }
    function XA(n, r) {
      n.nodeType === bo ? n.parentNode.removeChild(r) : n.removeChild(r);
    }
    function kx(n, r) {
      var l = r, u = 0;
      do {
        var h = l.nextSibling;
        if (n.removeChild(l), h && h.nodeType === bo) {
          var C = h.data;
          if (C === Ay)
            if (u === 0) {
              n.removeChild(h), fn(r);
              return;
            } else
              u--;
          else
            (C === Ly || C === fh || C === mh) && u++;
        }
        l = h;
      } while (l);
      fn(r);
    }
    function ZA(n, r) {
      n.nodeType === bo ? kx(n.parentNode, r) : n.nodeType === Mr && kx(n, r), fn(n);
    }
    function JA(n) {
      n = n;
      var r = n.style;
      typeof r.setProperty == "function" ? r.setProperty("display", "none", "important") : r.display = "none";
    }
    function e_(n) {
      n.nodeValue = "";
    }
    function t_(n, r) {
      n = n;
      var l = r[DA], u = l != null && l.hasOwnProperty("display") ? l.display : null;
      n.style.display = Id("display", u);
    }
    function n_(n, r) {
      n.nodeValue = r;
    }
    function o_(n) {
      n.nodeType === Mr ? n.textContent = "" : n.nodeType === La && n.documentElement && n.removeChild(n.documentElement);
    }
    function r_(n, r, l) {
      return n.nodeType !== Mr || r.toLowerCase() !== n.nodeName.toLowerCase() ? null : n;
    }
    function a_(n, r) {
      return r === "" || n.nodeType !== Ci ? null : n;
    }
    function i_(n) {
      return n.nodeType !== bo ? null : n;
    }
    function kE(n) {
      return n.data === fh;
    }
    function Dx(n) {
      return n.data === mh;
    }
    function s_(n) {
      var r = n.nextSibling && n.nextSibling.dataset, l, u, h;
      return r && (l = r.dgst, u = r.msg, h = r.stck), {
        message: u,
        digest: l,
        stack: h
      };
    }
    function l_(n, r) {
      n._reactRetry = r;
    }
    function _y(n) {
      for (; n != null; n = n.nextSibling) {
        var r = n.nodeType;
        if (r === Mr || r === Ci)
          break;
        if (r === bo) {
          var l = n.data;
          if (l === Ly || l === mh || l === fh)
            break;
          if (l === Ay)
            return null;
        }
      }
      return n;
    }
    function hh(n) {
      return _y(n.nextSibling);
    }
    function c_(n) {
      return _y(n.firstChild);
    }
    function u_(n) {
      return _y(n.firstChild);
    }
    function d_(n) {
      return _y(n.nextSibling);
    }
    function p_(n, r, l, u, h, C, E) {
      gh(C, n), Px(n, l);
      var L;
      {
        var j = h;
        L = j.namespace;
      }
      var G = (C.mode & un) !== Ut;
      return xA(n, r, l, L, u, G, E);
    }
    function f_(n, r, l, u) {
      return gh(l, n), l.mode & un, SA(n, r);
    }
    function m_(n, r) {
      gh(r, n);
    }
    function h_(n) {
      for (var r = n.nextSibling, l = 0; r; ) {
        if (r.nodeType === bo) {
          var u = r.data;
          if (u === Ay) {
            if (l === 0)
              return hh(r);
            l--;
          } else
            (u === Ly || u === mh || u === fh) && l++;
        }
        r = r.nextSibling;
      }
      return null;
    }
    function DE(n) {
      for (var r = n.previousSibling, l = 0; r; ) {
        if (r.nodeType === bo) {
          var u = r.data;
          if (u === Ly || u === mh || u === fh) {
            if (l === 0)
              return r;
            l--;
          } else
            u === Ay && l++;
        }
        r = r.previousSibling;
      }
      return null;
    }
    function v_(n) {
      fn(n);
    }
    function g_(n) {
      fn(n);
    }
    function y_(n) {
      return n !== "head" && n !== "body";
    }
    function b_(n, r, l, u) {
      var h = !0;
      Py(r.nodeValue, l, u, h);
    }
    function C_(n, r, l, u, h, C) {
      if (r[Iy] !== !0) {
        var E = !0;
        Py(u.nodeValue, h, C, E);
      }
    }
    function x_(n, r) {
      r.nodeType === Mr ? bx(n, r) : r.nodeType === bo || Cx(n, r);
    }
    function S_(n, r) {
      {
        var l = n.parentNode;
        l !== null && (r.nodeType === Mr ? bx(l, r) : r.nodeType === bo || Cx(l, r));
      }
    }
    function T_(n, r, l, u, h) {
      (h || r[Iy] !== !0) && (u.nodeType === Mr ? bx(l, u) : u.nodeType === bo || Cx(l, u));
    }
    function w_(n, r, l) {
      xx(n, r);
    }
    function E_(n, r) {
      Sx(n, r);
    }
    function R_(n, r, l) {
      {
        var u = n.parentNode;
        u !== null && xx(u, r);
      }
    }
    function O_(n, r) {
      {
        var l = n.parentNode;
        l !== null && Sx(l, r);
      }
    }
    function k_(n, r, l, u, h, C) {
      (C || r[Iy] !== !0) && xx(l, u);
    }
    function D_(n, r, l, u, h) {
      (h || r[Iy] !== !0) && Sx(l, u);
    }
    function M_(n) {
      f("An error occurred during hydration. The server HTML was replaced with client content in <%s>.", n.nodeName.toLowerCase());
    }
    function N_(n) {
      sh(n);
    }
    var Vp = Math.random().toString(36).slice(2), Fp = "__reactFiber$" + Vp, Mx = "__reactProps$" + Vp, vh = "__reactContainer$" + Vp, Nx = "__reactEvents$" + Vp, P_ = "__reactListeners$" + Vp, $_ = "__reactHandles$" + Vp;
    function I_(n) {
      delete n[Fp], delete n[Mx], delete n[Nx], delete n[P_], delete n[$_];
    }
    function gh(n, r) {
      r[Fp] = n;
    }
    function By(n, r) {
      r[vh] = n;
    }
    function ME(n) {
      n[vh] = null;
    }
    function yh(n) {
      return !!n[vh];
    }
    function Wu(n) {
      var r = n[Fp];
      if (r)
        return r;
      for (var l = n.parentNode; l; ) {
        if (r = l[vh] || l[Fp], r) {
          var u = r.alternate;
          if (r.child !== null || u !== null && u.child !== null)
            for (var h = DE(n); h !== null; ) {
              var C = h[Fp];
              if (C)
                return C;
              h = DE(h);
            }
          return r;
        }
        n = l, l = n.parentNode;
      }
      return null;
    }
    function Sc(n) {
      var r = n[Fp] || n[vh];
      return r && (r.tag === k || r.tag === $ || r.tag === B || r.tag === R) ? r : null;
    }
    function jp(n) {
      if (n.tag === k || n.tag === $)
        return n.stateNode;
      throw new Error("getNodeFromInstance: Invalid argument.");
    }
    function zy(n) {
      return n[Mx] || null;
    }
    function Px(n, r) {
      n[Mx] = r;
    }
    function L_(n) {
      var r = n[Nx];
      return r === void 0 && (r = n[Nx] = /* @__PURE__ */ new Set()), r;
    }
    var NE = {}, PE = i.ReactDebugCurrentFrame;
    function Vy(n) {
      if (n) {
        var r = n._owner, l = eu(n.type, n._source, r ? r.type : null);
        PE.setExtraStackFrame(l);
      } else
        PE.setExtraStackFrame(null);
    }
    function Ii(n, r, l, u, h) {
      {
        var C = Function.call.bind(ae);
        for (var E in n)
          if (C(n, E)) {
            var L = void 0;
            try {
              if (typeof n[E] != "function") {
                var j = Error((u || "React class") + ": " + l + " type `" + E + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof n[E] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw j.name = "Invariant Violation", j;
              }
              L = n[E](r, E, u, l, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (G) {
              L = G;
            }
            L && !(L instanceof Error) && (Vy(h), f("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", u || "React class", l, E, typeof L), Vy(null)), L instanceof Error && !(L.message in NE) && (NE[L.message] = !0, Vy(h), f("Failed %s type: %s", l, L.message), Vy(null));
          }
      }
    }
    var $x = [], Fy;
    Fy = [];
    var yl = -1;
    function Tc(n) {
      return {
        current: n
      };
    }
    function zr(n, r) {
      if (yl < 0) {
        f("Unexpected pop.");
        return;
      }
      r !== Fy[yl] && f("Unexpected Fiber popped."), n.current = $x[yl], $x[yl] = null, Fy[yl] = null, yl--;
    }
    function Vr(n, r, l) {
      yl++, $x[yl] = n.current, Fy[yl] = l, n.current = r;
    }
    var Ix;
    Ix = {};
    var Va = {};
    Object.freeze(Va);
    var bl = Tc(Va), Ts = Tc(!1), Lx = Va;
    function Up(n, r, l) {
      return l && ws(r) ? Lx : bl.current;
    }
    function $E(n, r, l) {
      {
        var u = n.stateNode;
        u.__reactInternalMemoizedUnmaskedChildContext = r, u.__reactInternalMemoizedMaskedChildContext = l;
      }
    }
    function Hp(n, r) {
      {
        var l = n.type, u = l.contextTypes;
        if (!u)
          return Va;
        var h = n.stateNode;
        if (h && h.__reactInternalMemoizedUnmaskedChildContext === r)
          return h.__reactInternalMemoizedMaskedChildContext;
        var C = {};
        for (var E in u)
          C[E] = r[E];
        {
          var L = on(n) || "Unknown";
          Ii(u, C, "context", L);
        }
        return h && $E(n, r, C), C;
      }
    }
    function jy() {
      return Ts.current;
    }
    function ws(n) {
      {
        var r = n.childContextTypes;
        return r != null;
      }
    }
    function Uy(n) {
      zr(Ts, n), zr(bl, n);
    }
    function Ax(n) {
      zr(Ts, n), zr(bl, n);
    }
    function IE(n, r, l) {
      {
        if (bl.current !== Va)
          throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
        Vr(bl, r, n), Vr(Ts, l, n);
      }
    }
    function LE(n, r, l) {
      {
        var u = n.stateNode, h = r.childContextTypes;
        if (typeof u.getChildContext != "function") {
          {
            var C = on(n) || "Unknown";
            Ix[C] || (Ix[C] = !0, f("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", C, C));
          }
          return l;
        }
        var E = u.getChildContext();
        for (var L in E)
          if (!(L in h))
            throw new Error((on(n) || "Unknown") + '.getChildContext(): key "' + L + '" is not defined in childContextTypes.');
        {
          var j = on(n) || "Unknown";
          Ii(h, E, "child context", j);
        }
        return pn({}, l, E);
      }
    }
    function Hy(n) {
      {
        var r = n.stateNode, l = r && r.__reactInternalMemoizedMergedChildContext || Va;
        return Lx = bl.current, Vr(bl, l, n), Vr(Ts, Ts.current, n), !0;
      }
    }
    function AE(n, r, l) {
      {
        var u = n.stateNode;
        if (!u)
          throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
        if (l) {
          var h = LE(n, r, Lx);
          u.__reactInternalMemoizedMergedChildContext = h, zr(Ts, n), zr(bl, n), Vr(bl, h, n), Vr(Ts, l, n);
        } else
          zr(Ts, n), Vr(Ts, l, n);
      }
    }
    function A_(n) {
      {
        if (!xm(n) || n.tag !== b)
          throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
        var r = n;
        do {
          switch (r.tag) {
            case R:
              return r.stateNode.context;
            case b: {
              var l = r.type;
              if (ws(l))
                return r.stateNode.__reactInternalMemoizedMergedChildContext;
              break;
            }
          }
          r = r.return;
        } while (r !== null);
        throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
    var wc = 0, Wy = 1, Cl = null, _x = !1, Bx = !1;
    function _E(n) {
      Cl === null ? Cl = [n] : Cl.push(n);
    }
    function __(n) {
      _x = !0, _E(n);
    }
    function BE() {
      _x && Ec();
    }
    function Ec() {
      if (!Bx && Cl !== null) {
        Bx = !0;
        var n = 0, r = ga();
        try {
          var l = !0, u = Cl;
          for (No(pr); n < u.length; n++) {
            var h = u[n];
            do
              h = h(l);
            while (h !== null);
          }
          Cl = null, _x = !1;
        } catch (C) {
          throw Cl !== null && (Cl = Cl.slice(n + 1)), Wd(Gd, Ec), C;
        } finally {
          No(r), Bx = !1;
        }
      }
      return null;
    }
    var Wp = [], Yp = 0, Yy = null, Gy = 0, ei = [], ti = 0, Yu = null, xl = 1, Sl = "";
    function B_(n) {
      return qu(), (n.flags & ym) !== Ft;
    }
    function z_(n) {
      return qu(), Gy;
    }
    function V_() {
      var n = Sl, r = xl, l = r & ~F_(r);
      return l.toString(32) + n;
    }
    function Gu(n, r) {
      qu(), Wp[Yp++] = Gy, Wp[Yp++] = Yy, Yy = n, Gy = r;
    }
    function zE(n, r, l) {
      qu(), ei[ti++] = xl, ei[ti++] = Sl, ei[ti++] = Yu, Yu = n;
      var u = xl, h = Sl, C = qy(u) - 1, E = u & ~(1 << C), L = l + 1, j = qy(r) + C;
      if (j > 30) {
        var G = C - C % 5, X = (1 << G) - 1, he = (E & X).toString(32), pe = E >> G, Ne = C - G, Pe = qy(r) + Ne, Ke = L << Ne, Ot = Ke | pe, jt = he + h;
        xl = 1 << Pe | Ot, Sl = jt;
      } else {
        var Bt = L << C, gn = Bt | E, mn = h;
        xl = 1 << j | gn, Sl = mn;
      }
    }
    function zx(n) {
      qu();
      var r = n.return;
      if (r !== null) {
        var l = 1, u = 0;
        Gu(n, l), zE(n, l, u);
      }
    }
    function qy(n) {
      return 32 - Jd(n);
    }
    function F_(n) {
      return 1 << qy(n) - 1;
    }
    function Vx(n) {
      for (; n === Yy; )
        Yy = Wp[--Yp], Wp[Yp] = null, Gy = Wp[--Yp], Wp[Yp] = null;
      for (; n === Yu; )
        Yu = ei[--ti], ei[ti] = null, Sl = ei[--ti], ei[ti] = null, xl = ei[--ti], ei[ti] = null;
    }
    function j_() {
      return qu(), Yu !== null ? {
        id: xl,
        overflow: Sl
      } : null;
    }
    function U_(n, r) {
      qu(), ei[ti++] = xl, ei[ti++] = Sl, ei[ti++] = Yu, xl = r.id, Sl = r.overflow, Yu = n;
    }
    function qu() {
      Cr() || f("Expected to be hydrating. This is a bug in React. Please file an issue.");
    }
    var br = null, ni = null, Li = !1, Ku = !1, Rc = null;
    function H_() {
      Li && f("We should not be hydrating here. This is a bug in React. Please file a bug.");
    }
    function VE() {
      Ku = !0;
    }
    function W_() {
      return Ku;
    }
    function Y_(n) {
      var r = n.stateNode.containerInfo;
      return ni = u_(r), br = n, Li = !0, Rc = null, Ku = !1, !0;
    }
    function G_(n, r, l) {
      return ni = d_(r), br = n, Li = !0, Rc = null, Ku = !1, l !== null && U_(n, l), !0;
    }
    function FE(n, r) {
      switch (n.tag) {
        case R: {
          x_(n.stateNode.containerInfo, r);
          break;
        }
        case k: {
          var l = (n.mode & un) !== Ut;
          T_(
            n.type,
            n.memoizedProps,
            n.stateNode,
            r,
            // TODO: Delete this argument when we remove the legacy root API.
            l
          );
          break;
        }
        case B: {
          var u = n.memoizedState;
          u.dehydrated !== null && S_(u.dehydrated, r);
          break;
        }
      }
    }
    function jE(n, r) {
      FE(n, r);
      var l = Qz();
      l.stateNode = r, l.return = n;
      var u = n.deletions;
      u === null ? (n.deletions = [l], n.flags |= wn) : u.push(l);
    }
    function Fx(n, r) {
      {
        if (Ku)
          return;
        switch (n.tag) {
          case R: {
            var l = n.stateNode.containerInfo;
            switch (r.tag) {
              case k:
                var u = r.type;
                r.pendingProps, w_(l, u);
                break;
              case $:
                var h = r.pendingProps;
                E_(l, h);
                break;
            }
            break;
          }
          case k: {
            var C = n.type, E = n.memoizedProps, L = n.stateNode;
            switch (r.tag) {
              case k: {
                var j = r.type, G = r.pendingProps, X = (n.mode & un) !== Ut;
                k_(
                  C,
                  E,
                  L,
                  j,
                  G,
                  // TODO: Delete this argument when we remove the legacy root API.
                  X
                );
                break;
              }
              case $: {
                var he = r.pendingProps, pe = (n.mode & un) !== Ut;
                D_(
                  C,
                  E,
                  L,
                  he,
                  // TODO: Delete this argument when we remove the legacy root API.
                  pe
                );
                break;
              }
            }
            break;
          }
          case B: {
            var Ne = n.memoizedState, Pe = Ne.dehydrated;
            if (Pe !== null)
              switch (r.tag) {
                case k:
                  var Ke = r.type;
                  r.pendingProps, R_(Pe, Ke);
                  break;
                case $:
                  var Ot = r.pendingProps;
                  O_(Pe, Ot);
                  break;
              }
            break;
          }
          default:
            return;
        }
      }
    }
    function UE(n, r) {
      r.flags = r.flags & ~pa | Wn, Fx(n, r);
    }
    function HE(n, r) {
      switch (n.tag) {
        case k: {
          var l = n.type;
          n.pendingProps;
          var u = r_(r, l);
          return u !== null ? (n.stateNode = u, br = n, ni = c_(u), !0) : !1;
        }
        case $: {
          var h = n.pendingProps, C = a_(r, h);
          return C !== null ? (n.stateNode = C, br = n, ni = null, !0) : !1;
        }
        case B: {
          var E = i_(r);
          if (E !== null) {
            var L = {
              dehydrated: E,
              treeContext: j_(),
              retryLane: _r
            };
            n.memoizedState = L;
            var j = Xz(E);
            return j.return = n, n.child = j, br = n, ni = null, !0;
          }
          return !1;
        }
        default:
          return !1;
      }
    }
    function jx(n) {
      return (n.mode & un) !== Ut && (n.flags & Kt) === Ft;
    }
    function Ux(n) {
      throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
    }
    function Hx(n) {
      if (Li) {
        var r = ni;
        if (!r) {
          jx(n) && (Fx(br, n), Ux()), UE(br, n), Li = !1, br = n;
          return;
        }
        var l = r;
        if (!HE(n, r)) {
          jx(n) && (Fx(br, n), Ux()), r = hh(l);
          var u = br;
          if (!r || !HE(n, r)) {
            UE(br, n), Li = !1, br = n;
            return;
          }
          jE(u, l);
        }
      }
    }
    function q_(n, r, l) {
      var u = n.stateNode, h = !Ku, C = p_(u, n.type, n.memoizedProps, r, l, n, h);
      return n.updateQueue = C, C !== null;
    }
    function K_(n) {
      var r = n.stateNode, l = n.memoizedProps, u = f_(r, l, n);
      if (u) {
        var h = br;
        if (h !== null)
          switch (h.tag) {
            case R: {
              var C = h.stateNode.containerInfo, E = (h.mode & un) !== Ut;
              b_(
                C,
                r,
                l,
                // TODO: Delete this argument when we remove the legacy root API.
                E
              );
              break;
            }
            case k: {
              var L = h.type, j = h.memoizedProps, G = h.stateNode, X = (h.mode & un) !== Ut;
              C_(
                L,
                j,
                G,
                r,
                l,
                // TODO: Delete this argument when we remove the legacy root API.
                X
              );
              break;
            }
          }
      }
      return u;
    }
    function Q_(n) {
      var r = n.memoizedState, l = r !== null ? r.dehydrated : null;
      if (!l)
        throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
      m_(l, n);
    }
    function X_(n) {
      var r = n.memoizedState, l = r !== null ? r.dehydrated : null;
      if (!l)
        throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
      return h_(l);
    }
    function WE(n) {
      for (var r = n.return; r !== null && r.tag !== k && r.tag !== R && r.tag !== B; )
        r = r.return;
      br = r;
    }
    function Ky(n) {
      if (n !== br)
        return !1;
      if (!Li)
        return WE(n), Li = !0, !1;
      if (n.tag !== R && (n.tag !== k || y_(n.type) && !Ex(n.type, n.memoizedProps))) {
        var r = ni;
        if (r)
          if (jx(n))
            YE(n), Ux();
          else
            for (; r; )
              jE(n, r), r = hh(r);
      }
      return WE(n), n.tag === B ? ni = X_(n) : ni = br ? hh(n.stateNode) : null, !0;
    }
    function Z_() {
      return Li && ni !== null;
    }
    function YE(n) {
      for (var r = ni; r; )
        FE(n, r), r = hh(r);
    }
    function Gp() {
      br = null, ni = null, Li = !1, Ku = !1;
    }
    function GE() {
      Rc !== null && (FO(Rc), Rc = null);
    }
    function Cr() {
      return Li;
    }
    function Wx(n) {
      Rc === null ? Rc = [n] : Rc.push(n);
    }
    var J_ = i.ReactCurrentBatchConfig, e2 = null;
    function t2() {
      return J_.transition;
    }
    var Ai = {
      recordUnsafeLifecycleWarnings: function(n, r) {
      },
      flushPendingUnsafeLifecycleWarnings: function() {
      },
      recordLegacyContextWarning: function(n, r) {
      },
      flushLegacyContextWarning: function() {
      },
      discardPendingWarnings: function() {
      }
    };
    {
      var n2 = function(n) {
        for (var r = null, l = n; l !== null; )
          l.mode & ro && (r = l), l = l.return;
        return r;
      }, Qu = function(n) {
        var r = [];
        return n.forEach(function(l) {
          r.push(l);
        }), r.sort().join(", ");
      }, bh = [], Ch = [], xh = [], Sh = [], Th = [], wh = [], Xu = /* @__PURE__ */ new Set();
      Ai.recordUnsafeLifecycleWarnings = function(n, r) {
        Xu.has(n.type) || (typeof r.componentWillMount == "function" && // Don't warn about react-lifecycles-compat polyfilled components.
        r.componentWillMount.__suppressDeprecationWarning !== !0 && bh.push(n), n.mode & ro && typeof r.UNSAFE_componentWillMount == "function" && Ch.push(n), typeof r.componentWillReceiveProps == "function" && r.componentWillReceiveProps.__suppressDeprecationWarning !== !0 && xh.push(n), n.mode & ro && typeof r.UNSAFE_componentWillReceiveProps == "function" && Sh.push(n), typeof r.componentWillUpdate == "function" && r.componentWillUpdate.__suppressDeprecationWarning !== !0 && Th.push(n), n.mode & ro && typeof r.UNSAFE_componentWillUpdate == "function" && wh.push(n));
      }, Ai.flushPendingUnsafeLifecycleWarnings = function() {
        var n = /* @__PURE__ */ new Set();
        bh.length > 0 && (bh.forEach(function(pe) {
          n.add(on(pe) || "Component"), Xu.add(pe.type);
        }), bh = []);
        var r = /* @__PURE__ */ new Set();
        Ch.length > 0 && (Ch.forEach(function(pe) {
          r.add(on(pe) || "Component"), Xu.add(pe.type);
        }), Ch = []);
        var l = /* @__PURE__ */ new Set();
        xh.length > 0 && (xh.forEach(function(pe) {
          l.add(on(pe) || "Component"), Xu.add(pe.type);
        }), xh = []);
        var u = /* @__PURE__ */ new Set();
        Sh.length > 0 && (Sh.forEach(function(pe) {
          u.add(on(pe) || "Component"), Xu.add(pe.type);
        }), Sh = []);
        var h = /* @__PURE__ */ new Set();
        Th.length > 0 && (Th.forEach(function(pe) {
          h.add(on(pe) || "Component"), Xu.add(pe.type);
        }), Th = []);
        var C = /* @__PURE__ */ new Set();
        if (wh.length > 0 && (wh.forEach(function(pe) {
          C.add(on(pe) || "Component"), Xu.add(pe.type);
        }), wh = []), r.size > 0) {
          var E = Qu(r);
          f(`Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.

Please update the following components: %s`, E);
        }
        if (u.size > 0) {
          var L = Qu(u);
          f(`Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state

Please update the following components: %s`, L);
        }
        if (C.size > 0) {
          var j = Qu(C);
          f(`Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.

Please update the following components: %s`, j);
        }
        if (n.size > 0) {
          var G = Qu(n);
          p(`componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.
* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, G);
        }
        if (l.size > 0) {
          var X = Qu(l);
          p(`componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state
* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, X);
        }
        if (h.size > 0) {
          var he = Qu(h);
          p(`componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, he);
        }
      };
      var Qy = /* @__PURE__ */ new Map(), qE = /* @__PURE__ */ new Set();
      Ai.recordLegacyContextWarning = function(n, r) {
        var l = n2(n);
        if (l === null) {
          f("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
          return;
        }
        if (!qE.has(n.type)) {
          var u = Qy.get(l);
          (n.type.contextTypes != null || n.type.childContextTypes != null || r !== null && typeof r.getChildContext == "function") && (u === void 0 && (u = [], Qy.set(l, u)), u.push(n));
        }
      }, Ai.flushLegacyContextWarning = function() {
        Qy.forEach(function(n, r) {
          if (n.length !== 0) {
            var l = n[0], u = /* @__PURE__ */ new Set();
            n.forEach(function(C) {
              u.add(on(C) || "Component"), qE.add(C.type);
            });
            var h = Qu(u);
            try {
              $n(l), f(`Legacy context API has been detected within a strict-mode tree.

The old API will be supported in all 16.x releases, but applications using it should migrate to the new version.

Please update the following components: %s

Learn more about this warning here: https://reactjs.org/link/legacy-context`, h);
            } finally {
              ko();
            }
          }
        });
      }, Ai.discardPendingWarnings = function() {
        bh = [], Ch = [], xh = [], Sh = [], Th = [], wh = [], Qy = /* @__PURE__ */ new Map();
      };
    }
    function _i(n, r) {
      if (n && n.defaultProps) {
        var l = pn({}, r), u = n.defaultProps;
        for (var h in u)
          l[h] === void 0 && (l[h] = u[h]);
        return l;
      }
      return r;
    }
    var Yx = Tc(null), Gx;
    Gx = {};
    var Xy = null, qp = null, qx = null, Zy = !1;
    function Jy() {
      Xy = null, qp = null, qx = null, Zy = !1;
    }
    function KE() {
      Zy = !0;
    }
    function QE() {
      Zy = !1;
    }
    function XE(n, r, l) {
      Vr(Yx, r._currentValue, n), r._currentValue = l, r._currentRenderer !== void 0 && r._currentRenderer !== null && r._currentRenderer !== Gx && f("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."), r._currentRenderer = Gx;
    }
    function Kx(n, r) {
      var l = Yx.current;
      zr(Yx, r), n._currentValue = l;
    }
    function Qx(n, r, l) {
      for (var u = n; u !== null; ) {
        var h = u.alternate;
        if (sl(u.childLanes, r) ? h !== null && !sl(h.childLanes, r) && (h.childLanes = an(h.childLanes, r)) : (u.childLanes = an(u.childLanes, r), h !== null && (h.childLanes = an(h.childLanes, r))), u === l)
          break;
        u = u.return;
      }
      u !== l && f("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
    }
    function o2(n, r, l) {
      r2(n, r, l);
    }
    function r2(n, r, l) {
      var u = n.child;
      for (u !== null && (u.return = n); u !== null; ) {
        var h = void 0, C = u.dependencies;
        if (C !== null) {
          h = u.child;
          for (var E = C.firstContext; E !== null; ) {
            if (E.context === r) {
              if (u.tag === b) {
                var L = Mo(l), j = Tl(jn, L);
                j.tag = tb;
                var G = u.updateQueue;
                if (G !== null) {
                  var X = G.shared, he = X.pending;
                  he === null ? j.next = j : (j.next = he.next, he.next = j), X.pending = j;
                }
              }
              u.lanes = an(u.lanes, l);
              var pe = u.alternate;
              pe !== null && (pe.lanes = an(pe.lanes, l)), Qx(u.return, l, n), C.lanes = an(C.lanes, l);
              break;
            }
            E = E.next;
          }
        } else if (u.tag === _)
          h = u.type === n.type ? null : u.child;
        else if (u.tag === J) {
          var Ne = u.return;
          if (Ne === null)
            throw new Error("We just came from a parent so we must have had a parent. This is a bug in React.");
          Ne.lanes = an(Ne.lanes, l);
          var Pe = Ne.alternate;
          Pe !== null && (Pe.lanes = an(Pe.lanes, l)), Qx(Ne, l, n), h = u.sibling;
        } else
          h = u.child;
        if (h !== null)
          h.return = u;
        else
          for (h = u; h !== null; ) {
            if (h === n) {
              h = null;
              break;
            }
            var Ke = h.sibling;
            if (Ke !== null) {
              Ke.return = h.return, h = Ke;
              break;
            }
            h = h.return;
          }
        u = h;
      }
    }
    function Kp(n, r) {
      Xy = n, qp = null, qx = null;
      var l = n.dependencies;
      if (l !== null) {
        var u = l.firstContext;
        u !== null && (Br(l.lanes, r) && Bh(), l.firstContext = null);
      }
    }
    function qo(n) {
      Zy && f("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
      var r = n._currentValue;
      if (qx !== n) {
        var l = {
          context: n,
          memoizedValue: r,
          next: null
        };
        if (qp === null) {
          if (Xy === null)
            throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
          qp = l, Xy.dependencies = {
            lanes: Je,
            firstContext: l
          };
        } else
          qp = qp.next = l;
      }
      return r;
    }
    var Zu = null;
    function Xx(n) {
      Zu === null ? Zu = [n] : Zu.push(n);
    }
    function a2() {
      if (Zu !== null) {
        for (var n = 0; n < Zu.length; n++) {
          var r = Zu[n], l = r.interleaved;
          if (l !== null) {
            r.interleaved = null;
            var u = l.next, h = r.pending;
            if (h !== null) {
              var C = h.next;
              h.next = u, l.next = C;
            }
            r.pending = l;
          }
        }
        Zu = null;
      }
    }
    function ZE(n, r, l, u) {
      var h = r.interleaved;
      return h === null ? (l.next = l, Xx(r)) : (l.next = h.next, h.next = l), r.interleaved = l, eb(n, u);
    }
    function i2(n, r, l, u) {
      var h = r.interleaved;
      h === null ? (l.next = l, Xx(r)) : (l.next = h.next, h.next = l), r.interleaved = l;
    }
    function s2(n, r, l, u) {
      var h = r.interleaved;
      return h === null ? (l.next = l, Xx(r)) : (l.next = h.next, h.next = l), r.interleaved = l, eb(n, u);
    }
    function Sa(n, r) {
      return eb(n, r);
    }
    var l2 = eb;
    function eb(n, r) {
      n.lanes = an(n.lanes, r);
      var l = n.alternate;
      l !== null && (l.lanes = an(l.lanes, r)), l === null && (n.flags & (Wn | pa)) !== Ft && JO(n);
      for (var u = n, h = n.return; h !== null; )
        h.childLanes = an(h.childLanes, r), l = h.alternate, l !== null ? l.childLanes = an(l.childLanes, r) : (h.flags & (Wn | pa)) !== Ft && JO(n), u = h, h = h.return;
      if (u.tag === R) {
        var C = u.stateNode;
        return C;
      } else
        return null;
    }
    var JE = 0, eR = 1, tb = 2, Zx = 3, nb = !1, Jx, ob;
    Jx = !1, ob = null;
    function eS(n) {
      var r = {
        baseState: n.memoizedState,
        firstBaseUpdate: null,
        lastBaseUpdate: null,
        shared: {
          pending: null,
          interleaved: null,
          lanes: Je
        },
        effects: null
      };
      n.updateQueue = r;
    }
    function tR(n, r) {
      var l = r.updateQueue, u = n.updateQueue;
      if (l === u) {
        var h = {
          baseState: u.baseState,
          firstBaseUpdate: u.firstBaseUpdate,
          lastBaseUpdate: u.lastBaseUpdate,
          shared: u.shared,
          effects: u.effects
        };
        r.updateQueue = h;
      }
    }
    function Tl(n, r) {
      var l = {
        eventTime: n,
        lane: r,
        tag: JE,
        payload: null,
        callback: null,
        next: null
      };
      return l;
    }
    function Oc(n, r, l) {
      var u = n.updateQueue;
      if (u === null)
        return null;
      var h = u.shared;
      if (ob === h && !Jx && (f("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback."), Jx = !0), lz()) {
        var C = h.pending;
        return C === null ? r.next = r : (r.next = C.next, C.next = r), h.pending = r, l2(n, l);
      } else
        return s2(n, h, r, l);
    }
    function rb(n, r, l) {
      var u = r.updateQueue;
      if (u !== null) {
        var h = u.shared;
        if (Im(l)) {
          var C = h.lanes;
          C = Am(C, n.pendingLanes);
          var E = an(C, l);
          h.lanes = E, sc(n, E);
        }
      }
    }
    function tS(n, r) {
      var l = n.updateQueue, u = n.alternate;
      if (u !== null) {
        var h = u.updateQueue;
        if (l === h) {
          var C = null, E = null, L = l.firstBaseUpdate;
          if (L !== null) {
            var j = L;
            do {
              var G = {
                eventTime: j.eventTime,
                lane: j.lane,
                tag: j.tag,
                payload: j.payload,
                callback: j.callback,
                next: null
              };
              E === null ? C = E = G : (E.next = G, E = G), j = j.next;
            } while (j !== null);
            E === null ? C = E = r : (E.next = r, E = r);
          } else
            C = E = r;
          l = {
            baseState: h.baseState,
            firstBaseUpdate: C,
            lastBaseUpdate: E,
            shared: h.shared,
            effects: h.effects
          }, n.updateQueue = l;
          return;
        }
      }
      var X = l.lastBaseUpdate;
      X === null ? l.firstBaseUpdate = r : X.next = r, l.lastBaseUpdate = r;
    }
    function c2(n, r, l, u, h, C) {
      switch (l.tag) {
        case eR: {
          var E = l.payload;
          if (typeof E == "function") {
            KE();
            var L = E.call(C, u, h);
            {
              if (n.mode & ro) {
                Do(!0);
                try {
                  E.call(C, u, h);
                } finally {
                  Do(!1);
                }
              }
              QE();
            }
            return L;
          }
          return E;
        }
        case Zx:
          n.flags = n.flags & ~Uo | Kt;
        case JE: {
          var j = l.payload, G;
          if (typeof j == "function") {
            KE(), G = j.call(C, u, h);
            {
              if (n.mode & ro) {
                Do(!0);
                try {
                  j.call(C, u, h);
                } finally {
                  Do(!1);
                }
              }
              QE();
            }
          } else
            G = j;
          return G == null ? u : pn({}, u, G);
        }
        case tb:
          return nb = !0, u;
      }
      return u;
    }
    function ab(n, r, l, u) {
      var h = n.updateQueue;
      nb = !1, ob = h.shared;
      var C = h.firstBaseUpdate, E = h.lastBaseUpdate, L = h.shared.pending;
      if (L !== null) {
        h.shared.pending = null;
        var j = L, G = j.next;
        j.next = null, E === null ? C = G : E.next = G, E = j;
        var X = n.alternate;
        if (X !== null) {
          var he = X.updateQueue, pe = he.lastBaseUpdate;
          pe !== E && (pe === null ? he.firstBaseUpdate = G : pe.next = G, he.lastBaseUpdate = j);
        }
      }
      if (C !== null) {
        var Ne = h.baseState, Pe = Je, Ke = null, Ot = null, jt = null, Bt = C;
        do {
          var gn = Bt.lane, mn = Bt.eventTime;
          if (sl(u, gn)) {
            if (jt !== null) {
              var Qe = {
                eventTime: mn,
                // This update is going to be committed so we never want uncommit
                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                // this will never be skipped by the check above.
                lane: hn,
                tag: Bt.tag,
                payload: Bt.payload,
                callback: Bt.callback,
                next: null
              };
              jt = jt.next = Qe;
            }
            Ne = c2(n, h, Bt, Ne, r, l);
            var Re = Bt.callback;
            if (Re !== null && // If the update was already committed, we should not queue its
            // callback again.
            Bt.lane !== hn) {
              n.flags |= qa;
              var dt = h.effects;
              dt === null ? h.effects = [Bt] : dt.push(Bt);
            }
          } else {
            var Ee = {
              eventTime: mn,
              lane: gn,
              tag: Bt.tag,
              payload: Bt.payload,
              callback: Bt.callback,
              next: null
            };
            jt === null ? (Ot = jt = Ee, Ke = Ne) : jt = jt.next = Ee, Pe = an(Pe, gn);
          }
          if (Bt = Bt.next, Bt === null) {
            if (L = h.shared.pending, L === null)
              break;
            var kt = L, wt = kt.next;
            kt.next = null, Bt = wt, h.lastBaseUpdate = kt, h.shared.pending = null;
          }
        } while (!0);
        jt === null && (Ke = Ne), h.baseState = Ke, h.firstBaseUpdate = Ot, h.lastBaseUpdate = jt;
        var qt = h.shared.interleaved;
        if (qt !== null) {
          var tn = qt;
          do
            Pe = an(Pe, tn.lane), tn = tn.next;
          while (tn !== qt);
        } else
          C === null && (h.shared.lanes = Je);
        Qh(Pe), n.lanes = Pe, n.memoizedState = Ne;
      }
      ob = null;
    }
    function u2(n, r) {
      if (typeof n != "function")
        throw new Error("Invalid argument passed as callback. Expected a function. Instead " + ("received: " + n));
      n.call(r);
    }
    function nR() {
      nb = !1;
    }
    function ib() {
      return nb;
    }
    function oR(n, r, l) {
      var u = r.effects;
      if (r.effects = null, u !== null)
        for (var h = 0; h < u.length; h++) {
          var C = u[h], E = C.callback;
          E !== null && (C.callback = null, u2(E, l));
        }
    }
    var nS = {}, rR = new e.Component().refs, oS, rS, aS, iS, sS, aR, sb, lS, cS, uS;
    {
      oS = /* @__PURE__ */ new Set(), rS = /* @__PURE__ */ new Set(), aS = /* @__PURE__ */ new Set(), iS = /* @__PURE__ */ new Set(), lS = /* @__PURE__ */ new Set(), sS = /* @__PURE__ */ new Set(), cS = /* @__PURE__ */ new Set(), uS = /* @__PURE__ */ new Set();
      var iR = /* @__PURE__ */ new Set();
      sb = function(n, r) {
        if (!(n === null || typeof n == "function")) {
          var l = r + "_" + n;
          iR.has(l) || (iR.add(l), f("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", r, n));
        }
      }, aR = function(n, r) {
        if (r === void 0) {
          var l = Vn(n) || "Component";
          sS.has(l) || (sS.add(l), f("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", l));
        }
      }, Object.defineProperty(nS, "_processChildContext", {
        enumerable: !1,
        value: function() {
          throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
        }
      }), Object.freeze(nS);
    }
    function dS(n, r, l, u) {
      var h = n.memoizedState, C = l(u, h);
      {
        if (n.mode & ro) {
          Do(!0);
          try {
            C = l(u, h);
          } finally {
            Do(!1);
          }
        }
        aR(r, C);
      }
      var E = C == null ? h : pn({}, h, C);
      if (n.memoizedState = E, n.lanes === Je) {
        var L = n.updateQueue;
        L.baseState = E;
      }
    }
    var pS = {
      isMounted: Qr,
      enqueueSetState: function(n, r, l) {
        var u = ua(n), h = na(), C = Lc(u), E = Tl(h, C);
        E.payload = r, l != null && (sb(l, "setState"), E.callback = l);
        var L = Oc(u, E, C);
        L !== null && (lr(L, u, C, h), rb(L, u, C)), ms(u, C);
      },
      enqueueReplaceState: function(n, r, l) {
        var u = ua(n), h = na(), C = Lc(u), E = Tl(h, C);
        E.tag = eR, E.payload = r, l != null && (sb(l, "replaceState"), E.callback = l);
        var L = Oc(u, E, C);
        L !== null && (lr(L, u, C, h), rb(L, u, C)), ms(u, C);
      },
      enqueueForceUpdate: function(n, r) {
        var l = ua(n), u = na(), h = Lc(l), C = Tl(u, h);
        C.tag = tb, r != null && (sb(r, "forceUpdate"), C.callback = r);
        var E = Oc(l, C, h);
        E !== null && (lr(E, l, h, u), rb(E, l, h)), Mm(l, h);
      }
    };
    function sR(n, r, l, u, h, C, E) {
      var L = n.stateNode;
      if (typeof L.shouldComponentUpdate == "function") {
        var j = L.shouldComponentUpdate(u, C, E);
        {
          if (n.mode & ro) {
            Do(!0);
            try {
              j = L.shouldComponentUpdate(u, C, E);
            } finally {
              Do(!1);
            }
          }
          j === void 0 && f("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", Vn(r) || "Component");
        }
        return j;
      }
      return r.prototype && r.prototype.isPureReactComponent ? !zt(l, u) || !zt(h, C) : !0;
    }
    function d2(n, r, l) {
      var u = n.stateNode;
      {
        var h = Vn(r) || "Component", C = u.render;
        C || (r.prototype && typeof r.prototype.render == "function" ? f("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", h) : f("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", h)), u.getInitialState && !u.getInitialState.isReactClassApproved && !u.state && f("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", h), u.getDefaultProps && !u.getDefaultProps.isReactClassApproved && f("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", h), u.propTypes && f("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", h), u.contextType && f("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", h), u.contextTypes && f("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", h), r.contextType && r.contextTypes && !cS.has(r) && (cS.add(r), f("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", h)), typeof u.componentShouldUpdate == "function" && f("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", h), r.prototype && r.prototype.isPureReactComponent && typeof u.shouldComponentUpdate < "u" && f("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", Vn(r) || "A pure component"), typeof u.componentDidUnmount == "function" && f("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", h), typeof u.componentDidReceiveProps == "function" && f("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", h), typeof u.componentWillRecieveProps == "function" && f("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", h), typeof u.UNSAFE_componentWillRecieveProps == "function" && f("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", h);
        var E = u.props !== l;
        u.props !== void 0 && E && f("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", h, h), u.defaultProps && f("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", h, h), typeof u.getSnapshotBeforeUpdate == "function" && typeof u.componentDidUpdate != "function" && !aS.has(r) && (aS.add(r), f("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", Vn(r))), typeof u.getDerivedStateFromProps == "function" && f("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", h), typeof u.getDerivedStateFromError == "function" && f("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", h), typeof r.getSnapshotBeforeUpdate == "function" && f("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", h);
        var L = u.state;
        L && (typeof L != "object" || Fo(L)) && f("%s.state: must be set to an object or null", h), typeof u.getChildContext == "function" && typeof r.childContextTypes != "object" && f("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", h);
      }
    }
    function lR(n, r) {
      r.updater = pS, n.stateNode = r, Xl(r, n), r._reactInternalInstance = nS;
    }
    function cR(n, r, l) {
      var u = !1, h = Va, C = Va, E = r.contextType;
      if ("contextType" in r) {
        var L = (
          // Allow null for conditional declaration
          E === null || E !== void 0 && E.$$typeof === Vo && E._context === void 0
        );
        if (!L && !uS.has(r)) {
          uS.add(r);
          var j = "";
          E === void 0 ? j = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file." : typeof E != "object" ? j = " However, it is set to a " + typeof E + "." : E.$$typeof === Dr ? j = " Did you accidentally pass the Context.Provider instead?" : E._context !== void 0 ? j = " Did you accidentally pass the Context.Consumer instead?" : j = " However, it is set to an object with keys {" + Object.keys(E).join(", ") + "}.", f("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", Vn(r) || "Component", j);
        }
      }
      if (typeof E == "object" && E !== null)
        C = qo(E);
      else {
        h = Up(n, r, !0);
        var G = r.contextTypes;
        u = G != null, C = u ? Hp(n, h) : Va;
      }
      var X = new r(l, C);
      if (n.mode & ro) {
        Do(!0);
        try {
          X = new r(l, C);
        } finally {
          Do(!1);
        }
      }
      var he = n.memoizedState = X.state !== null && X.state !== void 0 ? X.state : null;
      lR(n, X);
      {
        if (typeof r.getDerivedStateFromProps == "function" && he === null) {
          var pe = Vn(r) || "Component";
          rS.has(pe) || (rS.add(pe), f("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", pe, X.state === null ? "null" : "undefined", pe));
        }
        if (typeof r.getDerivedStateFromProps == "function" || typeof X.getSnapshotBeforeUpdate == "function") {
          var Ne = null, Pe = null, Ke = null;
          if (typeof X.componentWillMount == "function" && X.componentWillMount.__suppressDeprecationWarning !== !0 ? Ne = "componentWillMount" : typeof X.UNSAFE_componentWillMount == "function" && (Ne = "UNSAFE_componentWillMount"), typeof X.componentWillReceiveProps == "function" && X.componentWillReceiveProps.__suppressDeprecationWarning !== !0 ? Pe = "componentWillReceiveProps" : typeof X.UNSAFE_componentWillReceiveProps == "function" && (Pe = "UNSAFE_componentWillReceiveProps"), typeof X.componentWillUpdate == "function" && X.componentWillUpdate.__suppressDeprecationWarning !== !0 ? Ke = "componentWillUpdate" : typeof X.UNSAFE_componentWillUpdate == "function" && (Ke = "UNSAFE_componentWillUpdate"), Ne !== null || Pe !== null || Ke !== null) {
            var Ot = Vn(r) || "Component", jt = typeof r.getDerivedStateFromProps == "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
            iS.has(Ot) || (iS.add(Ot), f(`Unsafe legacy lifecycles will not be called for components using new component APIs.

%s uses %s but also contains the following legacy lifecycles:%s%s%s

The above lifecycles should be removed. Learn more about this warning here:
https://reactjs.org/link/unsafe-component-lifecycles`, Ot, jt, Ne !== null ? `
  ` + Ne : "", Pe !== null ? `
  ` + Pe : "", Ke !== null ? `
  ` + Ke : ""));
          }
        }
      }
      return u && $E(n, h, C), X;
    }
    function p2(n, r) {
      var l = r.state;
      typeof r.componentWillMount == "function" && r.componentWillMount(), typeof r.UNSAFE_componentWillMount == "function" && r.UNSAFE_componentWillMount(), l !== r.state && (f("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", on(n) || "Component"), pS.enqueueReplaceState(r, r.state, null));
    }
    function uR(n, r, l, u) {
      var h = r.state;
      if (typeof r.componentWillReceiveProps == "function" && r.componentWillReceiveProps(l, u), typeof r.UNSAFE_componentWillReceiveProps == "function" && r.UNSAFE_componentWillReceiveProps(l, u), r.state !== h) {
        {
          var C = on(n) || "Component";
          oS.has(C) || (oS.add(C), f("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", C));
        }
        pS.enqueueReplaceState(r, r.state, null);
      }
    }
    function fS(n, r, l, u) {
      d2(n, r, l);
      var h = n.stateNode;
      h.props = l, h.state = n.memoizedState, h.refs = rR, eS(n);
      var C = r.contextType;
      if (typeof C == "object" && C !== null)
        h.context = qo(C);
      else {
        var E = Up(n, r, !0);
        h.context = Hp(n, E);
      }
      {
        if (h.state === l) {
          var L = Vn(r) || "Component";
          lS.has(L) || (lS.add(L), f("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", L));
        }
        n.mode & ro && Ai.recordLegacyContextWarning(n, h), Ai.recordUnsafeLifecycleWarnings(n, h);
      }
      h.state = n.memoizedState;
      var j = r.getDerivedStateFromProps;
      if (typeof j == "function" && (dS(n, r, j, l), h.state = n.memoizedState), typeof r.getDerivedStateFromProps != "function" && typeof h.getSnapshotBeforeUpdate != "function" && (typeof h.UNSAFE_componentWillMount == "function" || typeof h.componentWillMount == "function") && (p2(n, h), ab(n, l, h, u), h.state = n.memoizedState), typeof h.componentDidMount == "function") {
        var G = rn;
        G |= Pr, (n.mode & ha) !== Ut && (G |= $r), n.flags |= G;
      }
    }
    function f2(n, r, l, u) {
      var h = n.stateNode, C = n.memoizedProps;
      h.props = C;
      var E = h.context, L = r.contextType, j = Va;
      if (typeof L == "object" && L !== null)
        j = qo(L);
      else {
        var G = Up(n, r, !0);
        j = Hp(n, G);
      }
      var X = r.getDerivedStateFromProps, he = typeof X == "function" || typeof h.getSnapshotBeforeUpdate == "function";
      !he && (typeof h.UNSAFE_componentWillReceiveProps == "function" || typeof h.componentWillReceiveProps == "function") && (C !== l || E !== j) && uR(n, h, l, j), nR();
      var pe = n.memoizedState, Ne = h.state = pe;
      if (ab(n, l, h, u), Ne = n.memoizedState, C === l && pe === Ne && !jy() && !ib()) {
        if (typeof h.componentDidMount == "function") {
          var Pe = rn;
          Pe |= Pr, (n.mode & ha) !== Ut && (Pe |= $r), n.flags |= Pe;
        }
        return !1;
      }
      typeof X == "function" && (dS(n, r, X, l), Ne = n.memoizedState);
      var Ke = ib() || sR(n, r, C, l, pe, Ne, j);
      if (Ke) {
        if (!he && (typeof h.UNSAFE_componentWillMount == "function" || typeof h.componentWillMount == "function") && (typeof h.componentWillMount == "function" && h.componentWillMount(), typeof h.UNSAFE_componentWillMount == "function" && h.UNSAFE_componentWillMount()), typeof h.componentDidMount == "function") {
          var Ot = rn;
          Ot |= Pr, (n.mode & ha) !== Ut && (Ot |= $r), n.flags |= Ot;
        }
      } else {
        if (typeof h.componentDidMount == "function") {
          var jt = rn;
          jt |= Pr, (n.mode & ha) !== Ut && (jt |= $r), n.flags |= jt;
        }
        n.memoizedProps = l, n.memoizedState = Ne;
      }
      return h.props = l, h.state = Ne, h.context = j, Ke;
    }
    function m2(n, r, l, u, h) {
      var C = r.stateNode;
      tR(n, r);
      var E = r.memoizedProps, L = r.type === r.elementType ? E : _i(r.type, E);
      C.props = L;
      var j = r.pendingProps, G = C.context, X = l.contextType, he = Va;
      if (typeof X == "object" && X !== null)
        he = qo(X);
      else {
        var pe = Up(r, l, !0);
        he = Hp(r, pe);
      }
      var Ne = l.getDerivedStateFromProps, Pe = typeof Ne == "function" || typeof C.getSnapshotBeforeUpdate == "function";
      !Pe && (typeof C.UNSAFE_componentWillReceiveProps == "function" || typeof C.componentWillReceiveProps == "function") && (E !== j || G !== he) && uR(r, C, u, he), nR();
      var Ke = r.memoizedState, Ot = C.state = Ke;
      if (ab(r, u, C, h), Ot = r.memoizedState, E === j && Ke === Ot && !jy() && !ib() && !ne)
        return typeof C.componentDidUpdate == "function" && (E !== n.memoizedProps || Ke !== n.memoizedState) && (r.flags |= rn), typeof C.getSnapshotBeforeUpdate == "function" && (E !== n.memoizedProps || Ke !== n.memoizedState) && (r.flags |= da), !1;
      typeof Ne == "function" && (dS(r, l, Ne, u), Ot = r.memoizedState);
      var jt = ib() || sR(r, l, L, u, Ke, Ot, he) || // TODO: In some cases, we'll end up checking if context has changed twice,
      // both before and after `shouldComponentUpdate` has been called. Not ideal,
      // but I'm loath to refactor this function. This only happens for memoized
      // components so it's not that common.
      ne;
      return jt ? (!Pe && (typeof C.UNSAFE_componentWillUpdate == "function" || typeof C.componentWillUpdate == "function") && (typeof C.componentWillUpdate == "function" && C.componentWillUpdate(u, Ot, he), typeof C.UNSAFE_componentWillUpdate == "function" && C.UNSAFE_componentWillUpdate(u, Ot, he)), typeof C.componentDidUpdate == "function" && (r.flags |= rn), typeof C.getSnapshotBeforeUpdate == "function" && (r.flags |= da)) : (typeof C.componentDidUpdate == "function" && (E !== n.memoizedProps || Ke !== n.memoizedState) && (r.flags |= rn), typeof C.getSnapshotBeforeUpdate == "function" && (E !== n.memoizedProps || Ke !== n.memoizedState) && (r.flags |= da), r.memoizedProps = u, r.memoizedState = Ot), C.props = u, C.state = Ot, C.context = he, jt;
    }
    var mS, hS, vS, gS, yS, dR = function(n, r) {
    };
    mS = !1, hS = !1, vS = {}, gS = {}, yS = {}, dR = function(n, r) {
      if (!(n === null || typeof n != "object") && !(!n._store || n._store.validated || n.key != null)) {
        if (typeof n._store != "object")
          throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
        n._store.validated = !0;
        var l = on(r) || "Component";
        gS[l] || (gS[l] = !0, f('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.'));
      }
    };
    function Eh(n, r, l) {
      var u = l.ref;
      if (u !== null && typeof u != "function" && typeof u != "object") {
        if ((n.mode & ro || fe) && // We warn in ReactElement.js if owner and self are equal for string refs
        // because these cannot be automatically converted to an arrow function
        // using a codemod. Therefore, we don't have to warn about string refs again.
        !(l._owner && l._self && l._owner.stateNode !== l._self)) {
          var h = on(n) || "Component";
          vS[h] || (f('A string ref, "%s", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', u), vS[h] = !0);
        }
        if (l._owner) {
          var C = l._owner, E;
          if (C) {
            var L = C;
            if (L.tag !== b)
              throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
            E = L.stateNode;
          }
          if (!E)
            throw new Error("Missing owner for string ref " + u + ". This error is likely caused by a bug in React. Please file an issue.");
          var j = E;
          je(u, "ref");
          var G = "" + u;
          if (r !== null && r.ref !== null && typeof r.ref == "function" && r.ref._stringRef === G)
            return r.ref;
          var X = function(he) {
            var pe = j.refs;
            pe === rR && (pe = j.refs = {}), he === null ? delete pe[G] : pe[G] = he;
          };
          return X._stringRef = G, X;
        } else {
          if (typeof u != "string")
            throw new Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
          if (!l._owner)
            throw new Error("Element ref was specified as a string (" + u + `) but no owner was set. This could happen for one of the following reasons:
1. You may be adding a ref to a function component
2. You may be adding a ref to a component that was not created inside a component's render method
3. You have multiple copies of React loaded
See https://reactjs.org/link/refs-must-have-owner for more information.`);
        }
      }
      return u;
    }
    function lb(n, r) {
      var l = Object.prototype.toString.call(r);
      throw new Error("Objects are not valid as a React child (found: " + (l === "[object Object]" ? "object with keys {" + Object.keys(r).join(", ") + "}" : l) + "). If you meant to render a collection of children, use an array instead.");
    }
    function cb(n) {
      {
        var r = on(n) || "Component";
        if (yS[r])
          return;
        yS[r] = !0, f("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
      }
    }
    function pR(n) {
      var r = n._payload, l = n._init;
      return l(r);
    }
    function fR(n) {
      function r(Ee, Qe) {
        if (n) {
          var Re = Ee.deletions;
          Re === null ? (Ee.deletions = [Qe], Ee.flags |= wn) : Re.push(Qe);
        }
      }
      function l(Ee, Qe) {
        if (!n)
          return null;
        for (var Re = Qe; Re !== null; )
          r(Ee, Re), Re = Re.sibling;
        return null;
      }
      function u(Ee, Qe) {
        for (var Re = /* @__PURE__ */ new Map(), dt = Qe; dt !== null; )
          dt.key !== null ? Re.set(dt.key, dt) : Re.set(dt.index, dt), dt = dt.sibling;
        return Re;
      }
      function h(Ee, Qe) {
        var Re = id(Ee, Qe);
        return Re.index = 0, Re.sibling = null, Re;
      }
      function C(Ee, Qe, Re) {
        if (Ee.index = Re, !n)
          return Ee.flags |= ym, Qe;
        var dt = Ee.alternate;
        if (dt !== null) {
          var kt = dt.index;
          return kt < Qe ? (Ee.flags |= Wn, Qe) : kt;
        } else
          return Ee.flags |= Wn, Qe;
      }
      function E(Ee) {
        return n && Ee.alternate === null && (Ee.flags |= Wn), Ee;
      }
      function L(Ee, Qe, Re, dt) {
        if (Qe === null || Qe.tag !== $) {
          var kt = WT(Re, Ee.mode, dt);
          return kt.return = Ee, kt;
        } else {
          var wt = h(Qe, Re);
          return wt.return = Ee, wt;
        }
      }
      function j(Ee, Qe, Re, dt) {
        var kt = Re.type;
        if (kt === Xo)
          return X(Ee, Qe, Re.props.children, dt, Re.key);
        if (Qe !== null && (Qe.elementType === kt || // Keep this check inline so it only runs on the false path:
        ok(Qe, Re) || // Lazy types should reconcile their resolved type.
        // We need to do this after the Hot Reloading check above,
        // because hot reloading has different semantics than prod because
        // it doesn't resuspend. So we can't let the call below suspend.
        typeof kt == "object" && kt !== null && kt.$$typeof === bt && pR(kt) === Qe.type)) {
          var wt = h(Qe, Re.props);
          return wt.ref = Eh(Ee, Qe, Re), wt.return = Ee, wt._debugSource = Re._source, wt._debugOwner = Re._owner, wt;
        }
        var qt = HT(Re, Ee.mode, dt);
        return qt.ref = Eh(Ee, Qe, Re), qt.return = Ee, qt;
      }
      function G(Ee, Qe, Re, dt) {
        if (Qe === null || Qe.tag !== D || Qe.stateNode.containerInfo !== Re.containerInfo || Qe.stateNode.implementation !== Re.implementation) {
          var kt = YT(Re, Ee.mode, dt);
          return kt.return = Ee, kt;
        } else {
          var wt = h(Qe, Re.children || []);
          return wt.return = Ee, wt;
        }
      }
      function X(Ee, Qe, Re, dt, kt) {
        if (Qe === null || Qe.tag !== P) {
          var wt = _c(Re, Ee.mode, dt, kt);
          return wt.return = Ee, wt;
        } else {
          var qt = h(Qe, Re);
          return qt.return = Ee, qt;
        }
      }
      function he(Ee, Qe, Re) {
        if (typeof Qe == "string" && Qe !== "" || typeof Qe == "number") {
          var dt = WT("" + Qe, Ee.mode, Re);
          return dt.return = Ee, dt;
        }
        if (typeof Qe == "object" && Qe !== null) {
          switch (Qe.$$typeof) {
            case Zn: {
              var kt = HT(Qe, Ee.mode, Re);
              return kt.ref = Eh(Ee, null, Qe), kt.return = Ee, kt;
            }
            case no: {
              var wt = YT(Qe, Ee.mode, Re);
              return wt.return = Ee, wt;
            }
            case bt: {
              var qt = Qe._payload, tn = Qe._init;
              return he(Ee, tn(qt), Re);
            }
          }
          if (Fo(Qe) || gi(Qe)) {
            var Ln = _c(Qe, Ee.mode, Re, null);
            return Ln.return = Ee, Ln;
          }
          lb(Ee, Qe);
        }
        return typeof Qe == "function" && cb(Ee), null;
      }
      function pe(Ee, Qe, Re, dt) {
        var kt = Qe !== null ? Qe.key : null;
        if (typeof Re == "string" && Re !== "" || typeof Re == "number")
          return kt !== null ? null : L(Ee, Qe, "" + Re, dt);
        if (typeof Re == "object" && Re !== null) {
          switch (Re.$$typeof) {
            case Zn:
              return Re.key === kt ? j(Ee, Qe, Re, dt) : null;
            case no:
              return Re.key === kt ? G(Ee, Qe, Re, dt) : null;
            case bt: {
              var wt = Re._payload, qt = Re._init;
              return pe(Ee, Qe, qt(wt), dt);
            }
          }
          if (Fo(Re) || gi(Re))
            return kt !== null ? null : X(Ee, Qe, Re, dt, null);
          lb(Ee, Re);
        }
        return typeof Re == "function" && cb(Ee), null;
      }
      function Ne(Ee, Qe, Re, dt, kt) {
        if (typeof dt == "string" && dt !== "" || typeof dt == "number") {
          var wt = Ee.get(Re) || null;
          return L(Qe, wt, "" + dt, kt);
        }
        if (typeof dt == "object" && dt !== null) {
          switch (dt.$$typeof) {
            case Zn: {
              var qt = Ee.get(dt.key === null ? Re : dt.key) || null;
              return j(Qe, qt, dt, kt);
            }
            case no: {
              var tn = Ee.get(dt.key === null ? Re : dt.key) || null;
              return G(Qe, tn, dt, kt);
            }
            case bt:
              var Ln = dt._payload, xn = dt._init;
              return Ne(Ee, Qe, Re, xn(Ln), kt);
          }
          if (Fo(dt) || gi(dt)) {
            var Io = Ee.get(Re) || null;
            return X(Qe, Io, dt, kt, null);
          }
          lb(Qe, dt);
        }
        return typeof dt == "function" && cb(Qe), null;
      }
      function Pe(Ee, Qe, Re) {
        {
          if (typeof Ee != "object" || Ee === null)
            return Qe;
          switch (Ee.$$typeof) {
            case Zn:
            case no:
              dR(Ee, Re);
              var dt = Ee.key;
              if (typeof dt != "string")
                break;
              if (Qe === null) {
                Qe = /* @__PURE__ */ new Set(), Qe.add(dt);
                break;
              }
              if (!Qe.has(dt)) {
                Qe.add(dt);
                break;
              }
              f("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted — the behavior is unsupported and could change in a future version.", dt);
              break;
            case bt:
              var kt = Ee._payload, wt = Ee._init;
              Pe(wt(kt), Qe, Re);
              break;
          }
        }
        return Qe;
      }
      function Ke(Ee, Qe, Re, dt) {
        for (var kt = null, wt = 0; wt < Re.length; wt++) {
          var qt = Re[wt];
          kt = Pe(qt, kt, Ee);
        }
        for (var tn = null, Ln = null, xn = Qe, Io = 0, Sn = 0, So = null; xn !== null && Sn < Re.length; Sn++) {
          xn.index > Sn ? (So = xn, xn = null) : So = xn.sibling;
          var jr = pe(Ee, xn, Re[Sn], dt);
          if (jr === null) {
            xn === null && (xn = So);
            break;
          }
          n && xn && jr.alternate === null && r(Ee, xn), Io = C(jr, Io, Sn), Ln === null ? tn = jr : Ln.sibling = jr, Ln = jr, xn = So;
        }
        if (Sn === Re.length) {
          if (l(Ee, xn), Cr()) {
            var Or = Sn;
            Gu(Ee, Or);
          }
          return tn;
        }
        if (xn === null) {
          for (; Sn < Re.length; Sn++) {
            var ja = he(Ee, Re[Sn], dt);
            ja !== null && (Io = C(ja, Io, Sn), Ln === null ? tn = ja : Ln.sibling = ja, Ln = ja);
          }
          if (Cr()) {
            var oa = Sn;
            Gu(Ee, oa);
          }
          return tn;
        }
        for (var ra = u(Ee, xn); Sn < Re.length; Sn++) {
          var Ur = Ne(ra, Ee, Sn, Re[Sn], dt);
          Ur !== null && (n && Ur.alternate !== null && ra.delete(Ur.key === null ? Sn : Ur.key), Io = C(Ur, Io, Sn), Ln === null ? tn = Ur : Ln.sibling = Ur, Ln = Ur);
        }
        if (n && ra.forEach(function(ff) {
          return r(Ee, ff);
        }), Cr()) {
          var Dl = Sn;
          Gu(Ee, Dl);
        }
        return tn;
      }
      function Ot(Ee, Qe, Re, dt) {
        var kt = gi(Re);
        if (typeof kt != "function")
          throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
        {
          typeof Symbol == "function" && // $FlowFixMe Flow doesn't know about toStringTag
          Re[Symbol.toStringTag] === "Generator" && (hS || f("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers."), hS = !0), Re.entries === kt && (mS || f("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), mS = !0);
          var wt = kt.call(Re);
          if (wt)
            for (var qt = null, tn = wt.next(); !tn.done; tn = wt.next()) {
              var Ln = tn.value;
              qt = Pe(Ln, qt, Ee);
            }
        }
        var xn = kt.call(Re);
        if (xn == null)
          throw new Error("An iterable object provided no iterator.");
        for (var Io = null, Sn = null, So = Qe, jr = 0, Or = 0, ja = null, oa = xn.next(); So !== null && !oa.done; Or++, oa = xn.next()) {
          So.index > Or ? (ja = So, So = null) : ja = So.sibling;
          var ra = pe(Ee, So, oa.value, dt);
          if (ra === null) {
            So === null && (So = ja);
            break;
          }
          n && So && ra.alternate === null && r(Ee, So), jr = C(ra, jr, Or), Sn === null ? Io = ra : Sn.sibling = ra, Sn = ra, So = ja;
        }
        if (oa.done) {
          if (l(Ee, So), Cr()) {
            var Ur = Or;
            Gu(Ee, Ur);
          }
          return Io;
        }
        if (So === null) {
          for (; !oa.done; Or++, oa = xn.next()) {
            var Dl = he(Ee, oa.value, dt);
            Dl !== null && (jr = C(Dl, jr, Or), Sn === null ? Io = Dl : Sn.sibling = Dl, Sn = Dl);
          }
          if (Cr()) {
            var ff = Or;
            Gu(Ee, ff);
          }
          return Io;
        }
        for (var tv = u(Ee, So); !oa.done; Or++, oa = xn.next()) {
          var Ps = Ne(tv, Ee, Or, oa.value, dt);
          Ps !== null && (n && Ps.alternate !== null && tv.delete(Ps.key === null ? Or : Ps.key), jr = C(Ps, jr, Or), Sn === null ? Io = Ps : Sn.sibling = Ps, Sn = Ps);
        }
        if (n && tv.forEach(function(kV) {
          return r(Ee, kV);
        }), Cr()) {
          var OV = Or;
          Gu(Ee, OV);
        }
        return Io;
      }
      function jt(Ee, Qe, Re, dt) {
        if (Qe !== null && Qe.tag === $) {
          l(Ee, Qe.sibling);
          var kt = h(Qe, Re);
          return kt.return = Ee, kt;
        }
        l(Ee, Qe);
        var wt = WT(Re, Ee.mode, dt);
        return wt.return = Ee, wt;
      }
      function Bt(Ee, Qe, Re, dt) {
        for (var kt = Re.key, wt = Qe; wt !== null; ) {
          if (wt.key === kt) {
            var qt = Re.type;
            if (qt === Xo) {
              if (wt.tag === P) {
                l(Ee, wt.sibling);
                var tn = h(wt, Re.props.children);
                return tn.return = Ee, tn._debugSource = Re._source, tn._debugOwner = Re._owner, tn;
              }
            } else if (wt.elementType === qt || // Keep this check inline so it only runs on the false path:
            ok(wt, Re) || // Lazy types should reconcile their resolved type.
            // We need to do this after the Hot Reloading check above,
            // because hot reloading has different semantics than prod because
            // it doesn't resuspend. So we can't let the call below suspend.
            typeof qt == "object" && qt !== null && qt.$$typeof === bt && pR(qt) === wt.type) {
              l(Ee, wt.sibling);
              var Ln = h(wt, Re.props);
              return Ln.ref = Eh(Ee, wt, Re), Ln.return = Ee, Ln._debugSource = Re._source, Ln._debugOwner = Re._owner, Ln;
            }
            l(Ee, wt);
            break;
          } else
            r(Ee, wt);
          wt = wt.sibling;
        }
        if (Re.type === Xo) {
          var xn = _c(Re.props.children, Ee.mode, dt, Re.key);
          return xn.return = Ee, xn;
        } else {
          var Io = HT(Re, Ee.mode, dt);
          return Io.ref = Eh(Ee, Qe, Re), Io.return = Ee, Io;
        }
      }
      function gn(Ee, Qe, Re, dt) {
        for (var kt = Re.key, wt = Qe; wt !== null; ) {
          if (wt.key === kt)
            if (wt.tag === D && wt.stateNode.containerInfo === Re.containerInfo && wt.stateNode.implementation === Re.implementation) {
              l(Ee, wt.sibling);
              var qt = h(wt, Re.children || []);
              return qt.return = Ee, qt;
            } else {
              l(Ee, wt);
              break;
            }
          else
            r(Ee, wt);
          wt = wt.sibling;
        }
        var tn = YT(Re, Ee.mode, dt);
        return tn.return = Ee, tn;
      }
      function mn(Ee, Qe, Re, dt) {
        var kt = typeof Re == "object" && Re !== null && Re.type === Xo && Re.key === null;
        if (kt && (Re = Re.props.children), typeof Re == "object" && Re !== null) {
          switch (Re.$$typeof) {
            case Zn:
              return E(Bt(Ee, Qe, Re, dt));
            case no:
              return E(gn(Ee, Qe, Re, dt));
            case bt:
              var wt = Re._payload, qt = Re._init;
              return mn(Ee, Qe, qt(wt), dt);
          }
          if (Fo(Re))
            return Ke(Ee, Qe, Re, dt);
          if (gi(Re))
            return Ot(Ee, Qe, Re, dt);
          lb(Ee, Re);
        }
        return typeof Re == "string" && Re !== "" || typeof Re == "number" ? E(jt(Ee, Qe, "" + Re, dt)) : (typeof Re == "function" && cb(Ee), l(Ee, Qe));
      }
      return mn;
    }
    var Qp = fR(!0), mR = fR(!1);
    function h2(n, r) {
      if (n !== null && r.child !== n.child)
        throw new Error("Resuming work not yet implemented.");
      if (r.child !== null) {
        var l = r.child, u = id(l, l.pendingProps);
        for (r.child = u, u.return = r; l.sibling !== null; )
          l = l.sibling, u = u.sibling = id(l, l.pendingProps), u.return = r;
        u.sibling = null;
      }
    }
    function v2(n, r) {
      for (var l = n.child; l !== null; )
        Wz(l, r), l = l.sibling;
    }
    var Rh = {}, kc = Tc(Rh), Oh = Tc(Rh), ub = Tc(Rh);
    function db(n) {
      if (n === Rh)
        throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
      return n;
    }
    function hR() {
      var n = db(ub.current);
      return n;
    }
    function bS(n, r) {
      Vr(ub, r, n), Vr(Oh, n, n), Vr(kc, Rh, n);
      var l = MA(r);
      zr(kc, n), Vr(kc, l, n);
    }
    function Xp(n) {
      zr(kc, n), zr(Oh, n), zr(ub, n);
    }
    function CS() {
      var n = db(kc.current);
      return n;
    }
    function vR(n) {
      db(ub.current);
      var r = db(kc.current), l = NA(r, n.type);
      r !== l && (Vr(Oh, n, n), Vr(kc, l, n));
    }
    function xS(n) {
      Oh.current === n && (zr(kc, n), zr(Oh, n));
    }
    var g2 = 0, gR = 1, yR = 1, kh = 2, Bi = Tc(g2);
    function SS(n, r) {
      return (n & r) !== 0;
    }
    function Zp(n) {
      return n & gR;
    }
    function TS(n, r) {
      return n & gR | r;
    }
    function y2(n, r) {
      return n | r;
    }
    function Dc(n, r) {
      Vr(Bi, r, n);
    }
    function Jp(n) {
      zr(Bi, n);
    }
    function b2(n, r) {
      var l = n.memoizedState;
      return l !== null ? l.dehydrated !== null : (n.memoizedProps, !0);
    }
    function pb(n) {
      for (var r = n; r !== null; ) {
        if (r.tag === B) {
          var l = r.memoizedState;
          if (l !== null) {
            var u = l.dehydrated;
            if (u === null || kE(u) || Dx(u))
              return r;
          }
        } else if (r.tag === W && // revealOrder undefined can't be trusted because it don't
        // keep track of whether it suspended or not.
        r.memoizedProps.revealOrder !== void 0) {
          var h = (r.flags & Kt) !== Ft;
          if (h)
            return r;
        } else if (r.child !== null) {
          r.child.return = r, r = r.child;
          continue;
        }
        if (r === n)
          return null;
        for (; r.sibling === null; ) {
          if (r.return === null || r.return === n)
            return null;
          r = r.return;
        }
        r.sibling.return = r.return, r = r.sibling;
      }
      return null;
    }
    var Ta = (
      /*   */
      0
    ), tr = (
      /* */
      1
    ), Es = (
      /*  */
      2
    ), nr = (
      /*    */
      4
    ), xr = (
      /*   */
      8
    ), wS = [];
    function ES() {
      for (var n = 0; n < wS.length; n++) {
        var r = wS[n];
        r._workInProgressVersionPrimary = null;
      }
      wS.length = 0;
    }
    function C2(n, r) {
      var l = r._getVersion, u = l(r._source);
      n.mutableSourceEagerHydrationData == null ? n.mutableSourceEagerHydrationData = [r, u] : n.mutableSourceEagerHydrationData.push(r, u);
    }
    var Rt = i.ReactCurrentDispatcher, Dh = i.ReactCurrentBatchConfig, RS, ef;
    RS = /* @__PURE__ */ new Set();
    var Ju = Je, In = null, or = null, rr = null, fb = !1, Mh = !1, Nh = 0, x2 = 0, S2 = 25, tt = null, oi = null, Mc = -1, OS = !1;
    function Rn() {
      {
        var n = tt;
        oi === null ? oi = [n] : oi.push(n);
      }
    }
    function xt() {
      {
        var n = tt;
        oi !== null && (Mc++, oi[Mc] !== n && T2(n));
      }
    }
    function tf(n) {
      n != null && !Fo(n) && f("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", tt, typeof n);
    }
    function T2(n) {
      {
        var r = on(In);
        if (!RS.has(r) && (RS.add(r), oi !== null)) {
          for (var l = "", u = 30, h = 0; h <= Mc; h++) {
            for (var C = oi[h], E = h === Mc ? n : C, L = h + 1 + ". " + C; L.length < u; )
              L += " ";
            L += E + `
`, l += L;
          }
          f(`React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks

   Previous render            Next render
   ------------------------------------------------------
%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
`, r, l);
        }
      }
    }
    function Fr() {
      throw new Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
    }
    function kS(n, r) {
      if (OS)
        return !1;
      if (r === null)
        return f("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", tt), !1;
      n.length !== r.length && f(`The final argument passed to %s changed size between renders. The order and size of this array must remain constant.

Previous: %s
Incoming: %s`, tt, "[" + r.join(", ") + "]", "[" + n.join(", ") + "]");
      for (var l = 0; l < r.length && l < n.length; l++)
        if (!$t(n[l], r[l]))
          return !1;
      return !0;
    }
    function nf(n, r, l, u, h, C) {
      Ju = C, In = r, oi = n !== null ? n._debugHookTypes : null, Mc = -1, OS = n !== null && n.type !== r.type, r.memoizedState = null, r.updateQueue = null, r.lanes = Je, n !== null && n.memoizedState !== null ? Rt.current = VR : oi !== null ? Rt.current = zR : Rt.current = BR;
      var E = l(u, h);
      if (Mh) {
        var L = 0;
        do {
          if (Mh = !1, Nh = 0, L >= S2)
            throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
          L += 1, OS = !1, or = null, rr = null, r.updateQueue = null, Mc = -1, Rt.current = FR, E = l(u, h);
        } while (Mh);
      }
      Rt.current = Rb, r._debugHookTypes = oi;
      var j = or !== null && or.next !== null;
      if (Ju = Je, In = null, or = null, rr = null, tt = null, oi = null, Mc = -1, n !== null && (n.flags & Zo) !== (r.flags & Zo) && // Disable this warning in legacy mode, because legacy Suspense is weird
      // and creates false positives. To make this work in legacy mode, we'd
      // need to mark fibers that commit in an incomplete state, somehow. For
      // now I'll disable the warning that most of the bugs that would trigger
      // it are either exclusive to concurrent mode or exist in both.
      (n.mode & un) !== Ut && f("Internal React error: Expected static flag was missing. Please notify the React team."), fb = !1, j)
        throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
      return E;
    }
    function of() {
      var n = Nh !== 0;
      return Nh = 0, n;
    }
    function bR(n, r, l) {
      r.updateQueue = n.updateQueue, (r.mode & ha) !== Ut ? r.flags &= ~(Xs | $r | Jn | rn) : r.flags &= ~(Jn | rn), n.lanes = ic(n.lanes, l);
    }
    function CR() {
      if (Rt.current = Rb, fb) {
        for (var n = In.memoizedState; n !== null; ) {
          var r = n.queue;
          r !== null && (r.pending = null), n = n.next;
        }
        fb = !1;
      }
      Ju = Je, In = null, or = null, rr = null, oi = null, Mc = -1, tt = null, $R = !1, Mh = !1, Nh = 0;
    }
    function Rs() {
      var n = {
        memoizedState: null,
        baseState: null,
        baseQueue: null,
        queue: null,
        next: null
      };
      return rr === null ? In.memoizedState = rr = n : rr = rr.next = n, rr;
    }
    function ri() {
      var n;
      if (or === null) {
        var r = In.alternate;
        r !== null ? n = r.memoizedState : n = null;
      } else
        n = or.next;
      var l;
      if (rr === null ? l = In.memoizedState : l = rr.next, l !== null)
        rr = l, l = rr.next, or = n;
      else {
        if (n === null)
          throw new Error("Rendered more hooks than during the previous render.");
        or = n;
        var u = {
          memoizedState: or.memoizedState,
          baseState: or.baseState,
          baseQueue: or.baseQueue,
          queue: or.queue,
          next: null
        };
        rr === null ? In.memoizedState = rr = u : rr = rr.next = u;
      }
      return rr;
    }
    function xR() {
      return {
        lastEffect: null,
        stores: null
      };
    }
    function DS(n, r) {
      return typeof r == "function" ? r(n) : r;
    }
    function MS(n, r, l) {
      var u = Rs(), h;
      l !== void 0 ? h = l(r) : h = r, u.memoizedState = u.baseState = h;
      var C = {
        pending: null,
        interleaved: null,
        lanes: Je,
        dispatch: null,
        lastRenderedReducer: n,
        lastRenderedState: h
      };
      u.queue = C;
      var E = C.dispatch = O2.bind(null, In, C);
      return [u.memoizedState, E];
    }
    function NS(n, r, l) {
      var u = ri(), h = u.queue;
      if (h === null)
        throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
      h.lastRenderedReducer = n;
      var C = or, E = C.baseQueue, L = h.pending;
      if (L !== null) {
        if (E !== null) {
          var j = E.next, G = L.next;
          E.next = G, L.next = j;
        }
        C.baseQueue !== E && f("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React."), C.baseQueue = E = L, h.pending = null;
      }
      if (E !== null) {
        var X = E.next, he = C.baseState, pe = null, Ne = null, Pe = null, Ke = X;
        do {
          var Ot = Ke.lane;
          if (sl(Ju, Ot)) {
            if (Pe !== null) {
              var Bt = {
                // This update is going to be committed so we never want uncommit
                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                // this will never be skipped by the check above.
                lane: hn,
                action: Ke.action,
                hasEagerState: Ke.hasEagerState,
                eagerState: Ke.eagerState,
                next: null
              };
              Pe = Pe.next = Bt;
            }
            if (Ke.hasEagerState)
              he = Ke.eagerState;
            else {
              var gn = Ke.action;
              he = n(he, gn);
            }
          } else {
            var jt = {
              lane: Ot,
              action: Ke.action,
              hasEagerState: Ke.hasEagerState,
              eagerState: Ke.eagerState,
              next: null
            };
            Pe === null ? (Ne = Pe = jt, pe = he) : Pe = Pe.next = jt, In.lanes = an(In.lanes, Ot), Qh(Ot);
          }
          Ke = Ke.next;
        } while (Ke !== null && Ke !== X);
        Pe === null ? pe = he : Pe.next = Ne, $t(he, u.memoizedState) || Bh(), u.memoizedState = he, u.baseState = pe, u.baseQueue = Pe, h.lastRenderedState = he;
      }
      var mn = h.interleaved;
      if (mn !== null) {
        var Ee = mn;
        do {
          var Qe = Ee.lane;
          In.lanes = an(In.lanes, Qe), Qh(Qe), Ee = Ee.next;
        } while (Ee !== mn);
      } else
        E === null && (h.lanes = Je);
      var Re = h.dispatch;
      return [u.memoizedState, Re];
    }
    function PS(n, r, l) {
      var u = ri(), h = u.queue;
      if (h === null)
        throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
      h.lastRenderedReducer = n;
      var C = h.dispatch, E = h.pending, L = u.memoizedState;
      if (E !== null) {
        h.pending = null;
        var j = E.next, G = j;
        do {
          var X = G.action;
          L = n(L, X), G = G.next;
        } while (G !== j);
        $t(L, u.memoizedState) || Bh(), u.memoizedState = L, u.baseQueue === null && (u.baseState = L), h.lastRenderedState = L;
      }
      return [L, C];
    }
    function oae(n, r, l) {
    }
    function rae(n, r, l) {
    }
    function $S(n, r, l) {
      var u = In, h = Rs(), C, E = Cr();
      if (E) {
        if (l === void 0)
          throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
        C = l(), ef || C !== l() && (f("The result of getServerSnapshot should be cached to avoid an infinite loop"), ef = !0);
      } else {
        if (C = r(), !ef) {
          var L = r();
          $t(C, L) || (f("The result of getSnapshot should be cached to avoid an infinite loop"), ef = !0);
        }
        var j = Hb();
        if (j === null)
          throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        Mu(j, Ju) || SR(u, r, C);
      }
      h.memoizedState = C;
      var G = {
        value: C,
        getSnapshot: r
      };
      return h.queue = G, yb(wR.bind(null, u, G, n), [n]), u.flags |= Jn, Ph(tr | xr, TR.bind(null, u, G, C, r), void 0, null), C;
    }
    function mb(n, r, l) {
      var u = In, h = ri(), C = r();
      if (!ef) {
        var E = r();
        $t(C, E) || (f("The result of getSnapshot should be cached to avoid an infinite loop"), ef = !0);
      }
      var L = h.memoizedState, j = !$t(L, C);
      j && (h.memoizedState = C, Bh());
      var G = h.queue;
      if (Ih(wR.bind(null, u, G, n), [n]), G.getSnapshot !== r || j || // Check if the susbcribe function changed. We can save some memory by
      // checking whether we scheduled a subscription effect above.
      rr !== null && rr.memoizedState.tag & tr) {
        u.flags |= Jn, Ph(tr | xr, TR.bind(null, u, G, C, r), void 0, null);
        var X = Hb();
        if (X === null)
          throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        Mu(X, Ju) || SR(u, r, C);
      }
      return C;
    }
    function SR(n, r, l) {
      n.flags |= xu;
      var u = {
        getSnapshot: r,
        value: l
      }, h = In.updateQueue;
      if (h === null)
        h = xR(), In.updateQueue = h, h.stores = [u];
      else {
        var C = h.stores;
        C === null ? h.stores = [u] : C.push(u);
      }
    }
    function TR(n, r, l, u) {
      r.value = l, r.getSnapshot = u, ER(r) && RR(n);
    }
    function wR(n, r, l) {
      var u = function() {
        ER(r) && RR(n);
      };
      return l(u);
    }
    function ER(n) {
      var r = n.getSnapshot, l = n.value;
      try {
        var u = r();
        return !$t(l, u);
      } catch {
        return !0;
      }
    }
    function RR(n) {
      var r = Sa(n, Gt);
      r !== null && lr(r, n, Gt, jn);
    }
    function hb(n) {
      var r = Rs();
      typeof n == "function" && (n = n()), r.memoizedState = r.baseState = n;
      var l = {
        pending: null,
        interleaved: null,
        lanes: Je,
        dispatch: null,
        lastRenderedReducer: DS,
        lastRenderedState: n
      };
      r.queue = l;
      var u = l.dispatch = k2.bind(null, In, l);
      return [r.memoizedState, u];
    }
    function IS(n) {
      return NS(DS);
    }
    function LS(n) {
      return PS(DS);
    }
    function Ph(n, r, l, u) {
      var h = {
        tag: n,
        create: r,
        destroy: l,
        deps: u,
        // Circular
        next: null
      }, C = In.updateQueue;
      if (C === null)
        C = xR(), In.updateQueue = C, C.lastEffect = h.next = h;
      else {
        var E = C.lastEffect;
        if (E === null)
          C.lastEffect = h.next = h;
        else {
          var L = E.next;
          E.next = h, h.next = L, C.lastEffect = h;
        }
      }
      return h;
    }
    function AS(n) {
      var r = Rs();
      {
        var l = {
          current: n
        };
        return r.memoizedState = l, l;
      }
    }
    function vb(n) {
      var r = ri();
      return r.memoizedState;
    }
    function $h(n, r, l, u) {
      var h = Rs(), C = u === void 0 ? null : u;
      In.flags |= n, h.memoizedState = Ph(tr | r, l, void 0, C);
    }
    function gb(n, r, l, u) {
      var h = ri(), C = u === void 0 ? null : u, E = void 0;
      if (or !== null) {
        var L = or.memoizedState;
        if (E = L.destroy, C !== null) {
          var j = L.deps;
          if (kS(C, j)) {
            h.memoizedState = Ph(r, l, E, C);
            return;
          }
        }
      }
      In.flags |= n, h.memoizedState = Ph(tr | r, l, E, C);
    }
    function yb(n, r) {
      return (In.mode & ha) !== Ut ? $h(Xs | Jn | ls, xr, n, r) : $h(Jn | ls, xr, n, r);
    }
    function Ih(n, r) {
      return gb(Jn, xr, n, r);
    }
    function _S(n, r) {
      return $h(rn, Es, n, r);
    }
    function bb(n, r) {
      return gb(rn, Es, n, r);
    }
    function BS(n, r) {
      var l = rn;
      return l |= Pr, (In.mode & ha) !== Ut && (l |= $r), $h(l, nr, n, r);
    }
    function Cb(n, r) {
      return gb(rn, nr, n, r);
    }
    function OR(n, r) {
      if (typeof r == "function") {
        var l = r, u = n();
        return l(u), function() {
          l(null);
        };
      } else if (r != null) {
        var h = r;
        h.hasOwnProperty("current") || f("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(h).join(", ") + "}");
        var C = n();
        return h.current = C, function() {
          h.current = null;
        };
      }
    }
    function zS(n, r, l) {
      typeof r != "function" && f("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", r !== null ? typeof r : "null");
      var u = l != null ? l.concat([n]) : null, h = rn;
      return h |= Pr, (In.mode & ha) !== Ut && (h |= $r), $h(h, nr, OR.bind(null, r, n), u);
    }
    function xb(n, r, l) {
      typeof r != "function" && f("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", r !== null ? typeof r : "null");
      var u = l != null ? l.concat([n]) : null;
      return gb(rn, nr, OR.bind(null, r, n), u);
    }
    function w2(n, r) {
    }
    var Sb = w2;
    function VS(n, r) {
      var l = Rs(), u = r === void 0 ? null : r;
      return l.memoizedState = [n, u], n;
    }
    function Tb(n, r) {
      var l = ri(), u = r === void 0 ? null : r, h = l.memoizedState;
      if (h !== null && u !== null) {
        var C = h[1];
        if (kS(u, C))
          return h[0];
      }
      return l.memoizedState = [n, u], n;
    }
    function FS(n, r) {
      var l = Rs(), u = r === void 0 ? null : r, h = n();
      return l.memoizedState = [h, u], h;
    }
    function wb(n, r) {
      var l = ri(), u = r === void 0 ? null : r, h = l.memoizedState;
      if (h !== null && u !== null) {
        var C = h[1];
        if (kS(u, C))
          return h[0];
      }
      var E = n();
      return l.memoizedState = [E, u], E;
    }
    function jS(n) {
      var r = Rs();
      return r.memoizedState = n, n;
    }
    function kR(n) {
      var r = ri(), l = or, u = l.memoizedState;
      return MR(r, u, n);
    }
    function DR(n) {
      var r = ri();
      if (or === null)
        return r.memoizedState = n, n;
      var l = or.memoizedState;
      return MR(r, l, n);
    }
    function MR(n, r, l) {
      var u = !q0(Ju);
      if (u) {
        if (!$t(l, r)) {
          var h = Lm();
          In.lanes = an(In.lanes, h), Qh(h), n.baseState = !0;
        }
        return r;
      } else
        return n.baseState && (n.baseState = !1, Bh()), n.memoizedState = l, l;
    }
    function E2(n, r, l) {
      var u = ga();
      No(fr(u, er)), n(!0);
      var h = Dh.transition;
      Dh.transition = {};
      var C = Dh.transition;
      Dh.transition._updatedFibers = /* @__PURE__ */ new Set();
      try {
        n(!1), r();
      } finally {
        if (No(u), Dh.transition = h, h === null && C._updatedFibers) {
          var E = C._updatedFibers.size;
          E > 10 && p("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."), C._updatedFibers.clear();
        }
      }
    }
    function US() {
      var n = hb(!1), r = n[0], l = n[1], u = E2.bind(null, l), h = Rs();
      return h.memoizedState = u, [r, u];
    }
    function NR() {
      var n = IS(), r = n[0], l = ri(), u = l.memoizedState;
      return [r, u];
    }
    function PR() {
      var n = LS(), r = n[0], l = ri(), u = l.memoizedState;
      return [r, u];
    }
    var $R = !1;
    function R2() {
      return $R;
    }
    function HS() {
      var n = Rs(), r = Hb(), l = r.identifierPrefix, u;
      if (Cr()) {
        var h = V_();
        u = ":" + l + "R" + h;
        var C = Nh++;
        C > 0 && (u += "H" + C.toString(32)), u += ":";
      } else {
        var E = x2++;
        u = ":" + l + "r" + E.toString(32) + ":";
      }
      return n.memoizedState = u, u;
    }
    function Eb() {
      var n = ri(), r = n.memoizedState;
      return r;
    }
    function O2(n, r, l) {
      typeof arguments[3] == "function" && f("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
      var u = Lc(n), h = {
        lane: u,
        action: l,
        hasEagerState: !1,
        eagerState: null,
        next: null
      };
      if (IR(n))
        LR(r, h);
      else {
        var C = ZE(n, r, h, u);
        if (C !== null) {
          var E = na();
          lr(C, n, u, E), AR(C, r, u);
        }
      }
      _R(n, u);
    }
    function k2(n, r, l) {
      typeof arguments[3] == "function" && f("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
      var u = Lc(n), h = {
        lane: u,
        action: l,
        hasEagerState: !1,
        eagerState: null,
        next: null
      };
      if (IR(n))
        LR(r, h);
      else {
        var C = n.alternate;
        if (n.lanes === Je && (C === null || C.lanes === Je)) {
          var E = r.lastRenderedReducer;
          if (E !== null) {
            var L;
            L = Rt.current, Rt.current = zi;
            try {
              var j = r.lastRenderedState, G = E(j, l);
              if (h.hasEagerState = !0, h.eagerState = G, $t(G, j)) {
                i2(n, r, h, u);
                return;
              }
            } catch {
            } finally {
              Rt.current = L;
            }
          }
        }
        var X = ZE(n, r, h, u);
        if (X !== null) {
          var he = na();
          lr(X, n, u, he), AR(X, r, u);
        }
      }
      _R(n, u);
    }
    function IR(n) {
      var r = n.alternate;
      return n === In || r !== null && r === In;
    }
    function LR(n, r) {
      Mh = fb = !0;
      var l = n.pending;
      l === null ? r.next = r : (r.next = l.next, l.next = r), n.pending = r;
    }
    function AR(n, r, l) {
      if (Im(l)) {
        var u = r.lanes;
        u = Am(u, n.pendingLanes);
        var h = an(u, l);
        r.lanes = h, sc(n, h);
      }
    }
    function _R(n, r, l) {
      ms(n, r);
    }
    var Rb = {
      readContext: qo,
      useCallback: Fr,
      useContext: Fr,
      useEffect: Fr,
      useImperativeHandle: Fr,
      useInsertionEffect: Fr,
      useLayoutEffect: Fr,
      useMemo: Fr,
      useReducer: Fr,
      useRef: Fr,
      useState: Fr,
      useDebugValue: Fr,
      useDeferredValue: Fr,
      useTransition: Fr,
      useMutableSource: Fr,
      useSyncExternalStore: Fr,
      useId: Fr,
      unstable_isNewReconciler: K
    }, BR = null, zR = null, VR = null, FR = null, Os = null, zi = null, Ob = null;
    {
      var WS = function() {
        f("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
      }, Xt = function() {
        f("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
      };
      BR = {
        readContext: function(n) {
          return qo(n);
        },
        useCallback: function(n, r) {
          return tt = "useCallback", Rn(), tf(r), VS(n, r);
        },
        useContext: function(n) {
          return tt = "useContext", Rn(), qo(n);
        },
        useEffect: function(n, r) {
          return tt = "useEffect", Rn(), tf(r), yb(n, r);
        },
        useImperativeHandle: function(n, r, l) {
          return tt = "useImperativeHandle", Rn(), tf(l), zS(n, r, l);
        },
        useInsertionEffect: function(n, r) {
          return tt = "useInsertionEffect", Rn(), tf(r), _S(n, r);
        },
        useLayoutEffect: function(n, r) {
          return tt = "useLayoutEffect", Rn(), tf(r), BS(n, r);
        },
        useMemo: function(n, r) {
          tt = "useMemo", Rn(), tf(r);
          var l = Rt.current;
          Rt.current = Os;
          try {
            return FS(n, r);
          } finally {
            Rt.current = l;
          }
        },
        useReducer: function(n, r, l) {
          tt = "useReducer", Rn();
          var u = Rt.current;
          Rt.current = Os;
          try {
            return MS(n, r, l);
          } finally {
            Rt.current = u;
          }
        },
        useRef: function(n) {
          return tt = "useRef", Rn(), AS(n);
        },
        useState: function(n) {
          tt = "useState", Rn();
          var r = Rt.current;
          Rt.current = Os;
          try {
            return hb(n);
          } finally {
            Rt.current = r;
          }
        },
        useDebugValue: function(n, r) {
          return tt = "useDebugValue", Rn(), void 0;
        },
        useDeferredValue: function(n) {
          return tt = "useDeferredValue", Rn(), jS(n);
        },
        useTransition: function() {
          return tt = "useTransition", Rn(), US();
        },
        useMutableSource: function(n, r, l) {
          return tt = "useMutableSource", Rn(), void 0;
        },
        useSyncExternalStore: function(n, r, l) {
          return tt = "useSyncExternalStore", Rn(), $S(n, r, l);
        },
        useId: function() {
          return tt = "useId", Rn(), HS();
        },
        unstable_isNewReconciler: K
      }, zR = {
        readContext: function(n) {
          return qo(n);
        },
        useCallback: function(n, r) {
          return tt = "useCallback", xt(), VS(n, r);
        },
        useContext: function(n) {
          return tt = "useContext", xt(), qo(n);
        },
        useEffect: function(n, r) {
          return tt = "useEffect", xt(), yb(n, r);
        },
        useImperativeHandle: function(n, r, l) {
          return tt = "useImperativeHandle", xt(), zS(n, r, l);
        },
        useInsertionEffect: function(n, r) {
          return tt = "useInsertionEffect", xt(), _S(n, r);
        },
        useLayoutEffect: function(n, r) {
          return tt = "useLayoutEffect", xt(), BS(n, r);
        },
        useMemo: function(n, r) {
          tt = "useMemo", xt();
          var l = Rt.current;
          Rt.current = Os;
          try {
            return FS(n, r);
          } finally {
            Rt.current = l;
          }
        },
        useReducer: function(n, r, l) {
          tt = "useReducer", xt();
          var u = Rt.current;
          Rt.current = Os;
          try {
            return MS(n, r, l);
          } finally {
            Rt.current = u;
          }
        },
        useRef: function(n) {
          return tt = "useRef", xt(), AS(n);
        },
        useState: function(n) {
          tt = "useState", xt();
          var r = Rt.current;
          Rt.current = Os;
          try {
            return hb(n);
          } finally {
            Rt.current = r;
          }
        },
        useDebugValue: function(n, r) {
          return tt = "useDebugValue", xt(), void 0;
        },
        useDeferredValue: function(n) {
          return tt = "useDeferredValue", xt(), jS(n);
        },
        useTransition: function() {
          return tt = "useTransition", xt(), US();
        },
        useMutableSource: function(n, r, l) {
          return tt = "useMutableSource", xt(), void 0;
        },
        useSyncExternalStore: function(n, r, l) {
          return tt = "useSyncExternalStore", xt(), $S(n, r, l);
        },
        useId: function() {
          return tt = "useId", xt(), HS();
        },
        unstable_isNewReconciler: K
      }, VR = {
        readContext: function(n) {
          return qo(n);
        },
        useCallback: function(n, r) {
          return tt = "useCallback", xt(), Tb(n, r);
        },
        useContext: function(n) {
          return tt = "useContext", xt(), qo(n);
        },
        useEffect: function(n, r) {
          return tt = "useEffect", xt(), Ih(n, r);
        },
        useImperativeHandle: function(n, r, l) {
          return tt = "useImperativeHandle", xt(), xb(n, r, l);
        },
        useInsertionEffect: function(n, r) {
          return tt = "useInsertionEffect", xt(), bb(n, r);
        },
        useLayoutEffect: function(n, r) {
          return tt = "useLayoutEffect", xt(), Cb(n, r);
        },
        useMemo: function(n, r) {
          tt = "useMemo", xt();
          var l = Rt.current;
          Rt.current = zi;
          try {
            return wb(n, r);
          } finally {
            Rt.current = l;
          }
        },
        useReducer: function(n, r, l) {
          tt = "useReducer", xt();
          var u = Rt.current;
          Rt.current = zi;
          try {
            return NS(n, r, l);
          } finally {
            Rt.current = u;
          }
        },
        useRef: function(n) {
          return tt = "useRef", xt(), vb();
        },
        useState: function(n) {
          tt = "useState", xt();
          var r = Rt.current;
          Rt.current = zi;
          try {
            return IS(n);
          } finally {
            Rt.current = r;
          }
        },
        useDebugValue: function(n, r) {
          return tt = "useDebugValue", xt(), Sb();
        },
        useDeferredValue: function(n) {
          return tt = "useDeferredValue", xt(), kR(n);
        },
        useTransition: function() {
          return tt = "useTransition", xt(), NR();
        },
        useMutableSource: function(n, r, l) {
          return tt = "useMutableSource", xt(), void 0;
        },
        useSyncExternalStore: function(n, r, l) {
          return tt = "useSyncExternalStore", xt(), mb(n, r);
        },
        useId: function() {
          return tt = "useId", xt(), Eb();
        },
        unstable_isNewReconciler: K
      }, FR = {
        readContext: function(n) {
          return qo(n);
        },
        useCallback: function(n, r) {
          return tt = "useCallback", xt(), Tb(n, r);
        },
        useContext: function(n) {
          return tt = "useContext", xt(), qo(n);
        },
        useEffect: function(n, r) {
          return tt = "useEffect", xt(), Ih(n, r);
        },
        useImperativeHandle: function(n, r, l) {
          return tt = "useImperativeHandle", xt(), xb(n, r, l);
        },
        useInsertionEffect: function(n, r) {
          return tt = "useInsertionEffect", xt(), bb(n, r);
        },
        useLayoutEffect: function(n, r) {
          return tt = "useLayoutEffect", xt(), Cb(n, r);
        },
        useMemo: function(n, r) {
          tt = "useMemo", xt();
          var l = Rt.current;
          Rt.current = Ob;
          try {
            return wb(n, r);
          } finally {
            Rt.current = l;
          }
        },
        useReducer: function(n, r, l) {
          tt = "useReducer", xt();
          var u = Rt.current;
          Rt.current = Ob;
          try {
            return PS(n, r, l);
          } finally {
            Rt.current = u;
          }
        },
        useRef: function(n) {
          return tt = "useRef", xt(), vb();
        },
        useState: function(n) {
          tt = "useState", xt();
          var r = Rt.current;
          Rt.current = Ob;
          try {
            return LS(n);
          } finally {
            Rt.current = r;
          }
        },
        useDebugValue: function(n, r) {
          return tt = "useDebugValue", xt(), Sb();
        },
        useDeferredValue: function(n) {
          return tt = "useDeferredValue", xt(), DR(n);
        },
        useTransition: function() {
          return tt = "useTransition", xt(), PR();
        },
        useMutableSource: function(n, r, l) {
          return tt = "useMutableSource", xt(), void 0;
        },
        useSyncExternalStore: function(n, r, l) {
          return tt = "useSyncExternalStore", xt(), mb(n, r);
        },
        useId: function() {
          return tt = "useId", xt(), Eb();
        },
        unstable_isNewReconciler: K
      }, Os = {
        readContext: function(n) {
          return WS(), qo(n);
        },
        useCallback: function(n, r) {
          return tt = "useCallback", Xt(), Rn(), VS(n, r);
        },
        useContext: function(n) {
          return tt = "useContext", Xt(), Rn(), qo(n);
        },
        useEffect: function(n, r) {
          return tt = "useEffect", Xt(), Rn(), yb(n, r);
        },
        useImperativeHandle: function(n, r, l) {
          return tt = "useImperativeHandle", Xt(), Rn(), zS(n, r, l);
        },
        useInsertionEffect: function(n, r) {
          return tt = "useInsertionEffect", Xt(), Rn(), _S(n, r);
        },
        useLayoutEffect: function(n, r) {
          return tt = "useLayoutEffect", Xt(), Rn(), BS(n, r);
        },
        useMemo: function(n, r) {
          tt = "useMemo", Xt(), Rn();
          var l = Rt.current;
          Rt.current = Os;
          try {
            return FS(n, r);
          } finally {
            Rt.current = l;
          }
        },
        useReducer: function(n, r, l) {
          tt = "useReducer", Xt(), Rn();
          var u = Rt.current;
          Rt.current = Os;
          try {
            return MS(n, r, l);
          } finally {
            Rt.current = u;
          }
        },
        useRef: function(n) {
          return tt = "useRef", Xt(), Rn(), AS(n);
        },
        useState: function(n) {
          tt = "useState", Xt(), Rn();
          var r = Rt.current;
          Rt.current = Os;
          try {
            return hb(n);
          } finally {
            Rt.current = r;
          }
        },
        useDebugValue: function(n, r) {
          return tt = "useDebugValue", Xt(), Rn(), void 0;
        },
        useDeferredValue: function(n) {
          return tt = "useDeferredValue", Xt(), Rn(), jS(n);
        },
        useTransition: function() {
          return tt = "useTransition", Xt(), Rn(), US();
        },
        useMutableSource: function(n, r, l) {
          return tt = "useMutableSource", Xt(), Rn(), void 0;
        },
        useSyncExternalStore: function(n, r, l) {
          return tt = "useSyncExternalStore", Xt(), Rn(), $S(n, r, l);
        },
        useId: function() {
          return tt = "useId", Xt(), Rn(), HS();
        },
        unstable_isNewReconciler: K
      }, zi = {
        readContext: function(n) {
          return WS(), qo(n);
        },
        useCallback: function(n, r) {
          return tt = "useCallback", Xt(), xt(), Tb(n, r);
        },
        useContext: function(n) {
          return tt = "useContext", Xt(), xt(), qo(n);
        },
        useEffect: function(n, r) {
          return tt = "useEffect", Xt(), xt(), Ih(n, r);
        },
        useImperativeHandle: function(n, r, l) {
          return tt = "useImperativeHandle", Xt(), xt(), xb(n, r, l);
        },
        useInsertionEffect: function(n, r) {
          return tt = "useInsertionEffect", Xt(), xt(), bb(n, r);
        },
        useLayoutEffect: function(n, r) {
          return tt = "useLayoutEffect", Xt(), xt(), Cb(n, r);
        },
        useMemo: function(n, r) {
          tt = "useMemo", Xt(), xt();
          var l = Rt.current;
          Rt.current = zi;
          try {
            return wb(n, r);
          } finally {
            Rt.current = l;
          }
        },
        useReducer: function(n, r, l) {
          tt = "useReducer", Xt(), xt();
          var u = Rt.current;
          Rt.current = zi;
          try {
            return NS(n, r, l);
          } finally {
            Rt.current = u;
          }
        },
        useRef: function(n) {
          return tt = "useRef", Xt(), xt(), vb();
        },
        useState: function(n) {
          tt = "useState", Xt(), xt();
          var r = Rt.current;
          Rt.current = zi;
          try {
            return IS(n);
          } finally {
            Rt.current = r;
          }
        },
        useDebugValue: function(n, r) {
          return tt = "useDebugValue", Xt(), xt(), Sb();
        },
        useDeferredValue: function(n) {
          return tt = "useDeferredValue", Xt(), xt(), kR(n);
        },
        useTransition: function() {
          return tt = "useTransition", Xt(), xt(), NR();
        },
        useMutableSource: function(n, r, l) {
          return tt = "useMutableSource", Xt(), xt(), void 0;
        },
        useSyncExternalStore: function(n, r, l) {
          return tt = "useSyncExternalStore", Xt(), xt(), mb(n, r);
        },
        useId: function() {
          return tt = "useId", Xt(), xt(), Eb();
        },
        unstable_isNewReconciler: K
      }, Ob = {
        readContext: function(n) {
          return WS(), qo(n);
        },
        useCallback: function(n, r) {
          return tt = "useCallback", Xt(), xt(), Tb(n, r);
        },
        useContext: function(n) {
          return tt = "useContext", Xt(), xt(), qo(n);
        },
        useEffect: function(n, r) {
          return tt = "useEffect", Xt(), xt(), Ih(n, r);
        },
        useImperativeHandle: function(n, r, l) {
          return tt = "useImperativeHandle", Xt(), xt(), xb(n, r, l);
        },
        useInsertionEffect: function(n, r) {
          return tt = "useInsertionEffect", Xt(), xt(), bb(n, r);
        },
        useLayoutEffect: function(n, r) {
          return tt = "useLayoutEffect", Xt(), xt(), Cb(n, r);
        },
        useMemo: function(n, r) {
          tt = "useMemo", Xt(), xt();
          var l = Rt.current;
          Rt.current = zi;
          try {
            return wb(n, r);
          } finally {
            Rt.current = l;
          }
        },
        useReducer: function(n, r, l) {
          tt = "useReducer", Xt(), xt();
          var u = Rt.current;
          Rt.current = zi;
          try {
            return PS(n, r, l);
          } finally {
            Rt.current = u;
          }
        },
        useRef: function(n) {
          return tt = "useRef", Xt(), xt(), vb();
        },
        useState: function(n) {
          tt = "useState", Xt(), xt();
          var r = Rt.current;
          Rt.current = zi;
          try {
            return LS(n);
          } finally {
            Rt.current = r;
          }
        },
        useDebugValue: function(n, r) {
          return tt = "useDebugValue", Xt(), xt(), Sb();
        },
        useDeferredValue: function(n) {
          return tt = "useDeferredValue", Xt(), xt(), DR(n);
        },
        useTransition: function() {
          return tt = "useTransition", Xt(), xt(), PR();
        },
        useMutableSource: function(n, r, l) {
          return tt = "useMutableSource", Xt(), xt(), void 0;
        },
        useSyncExternalStore: function(n, r, l) {
          return tt = "useSyncExternalStore", Xt(), xt(), mb(n, r);
        },
        useId: function() {
          return tt = "useId", Xt(), xt(), Eb();
        },
        unstable_isNewReconciler: K
      };
    }
    var Nc = o.unstable_now, jR = 0, kb = -1, Lh = -1, Db = -1, YS = !1, Mb = !1;
    function UR() {
      return YS;
    }
    function D2() {
      Mb = !0;
    }
    function M2() {
      YS = !1, Mb = !1;
    }
    function N2() {
      YS = Mb, Mb = !1;
    }
    function HR() {
      return jR;
    }
    function WR() {
      jR = Nc();
    }
    function GS(n) {
      Lh = Nc(), n.actualStartTime < 0 && (n.actualStartTime = Nc());
    }
    function YR(n) {
      Lh = -1;
    }
    function Nb(n, r) {
      if (Lh >= 0) {
        var l = Nc() - Lh;
        n.actualDuration += l, r && (n.selfBaseDuration = l), Lh = -1;
      }
    }
    function ks(n) {
      if (kb >= 0) {
        var r = Nc() - kb;
        kb = -1;
        for (var l = n.return; l !== null; ) {
          switch (l.tag) {
            case R:
              var u = l.stateNode;
              u.effectDuration += r;
              return;
            case V:
              var h = l.stateNode;
              h.effectDuration += r;
              return;
          }
          l = l.return;
        }
      }
    }
    function qS(n) {
      if (Db >= 0) {
        var r = Nc() - Db;
        Db = -1;
        for (var l = n.return; l !== null; ) {
          switch (l.tag) {
            case R:
              var u = l.stateNode;
              u !== null && (u.passiveEffectDuration += r);
              return;
            case V:
              var h = l.stateNode;
              h !== null && (h.passiveEffectDuration += r);
              return;
          }
          l = l.return;
        }
      }
    }
    function Ds() {
      kb = Nc();
    }
    function KS() {
      Db = Nc();
    }
    function QS(n) {
      for (var r = n.child; r; )
        n.actualDuration += r.actualDuration, r = r.sibling;
    }
    function ed(n, r) {
      return {
        value: n,
        source: r,
        stack: Hf(r),
        digest: null
      };
    }
    function XS(n, r, l) {
      return {
        value: n,
        source: null,
        stack: l ?? null,
        digest: r ?? null
      };
    }
    function P2(n, r) {
      return !0;
    }
    function ZS(n, r) {
      try {
        var l = P2(n, r);
        if (l === !1)
          return;
        var u = r.value, h = r.source, C = r.stack, E = C !== null ? C : "";
        if (u != null && u._suppressLogging) {
          if (n.tag === b)
            return;
          console.error(u);
        }
        var L = h ? on(h) : null, j = L ? "The above error occurred in the <" + L + "> component:" : "The above error occurred in one of your React components:", G;
        if (n.tag === R)
          G = `Consider adding an error boundary to your tree to customize error handling behavior.
Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.`;
        else {
          var X = on(n) || "Anonymous";
          G = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + X + ".");
        }
        var he = j + `
` + E + `

` + ("" + G);
        console.error(he);
      } catch (pe) {
        setTimeout(function() {
          throw pe;
        });
      }
    }
    var $2 = typeof WeakMap == "function" ? WeakMap : Map;
    function GR(n, r, l) {
      var u = Tl(jn, l);
      u.tag = Zx, u.payload = {
        element: null
      };
      var h = r.value;
      return u.callback = function() {
        Ez(h), ZS(n, r);
      }, u;
    }
    function JS(n, r, l) {
      var u = Tl(jn, l);
      u.tag = Zx;
      var h = n.type.getDerivedStateFromError;
      if (typeof h == "function") {
        var C = r.value;
        u.payload = function() {
          return h(C);
        }, u.callback = function() {
          rk(n), ZS(n, r);
        };
      }
      var E = n.stateNode;
      return E !== null && typeof E.componentDidCatch == "function" && (u.callback = function() {
        rk(n), ZS(n, r), typeof h != "function" && Tz(this);
        var j = r.value, G = r.stack;
        this.componentDidCatch(j, {
          componentStack: G !== null ? G : ""
        }), typeof h != "function" && (Br(n.lanes, Gt) || f("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", on(n) || "Unknown"));
      }), u;
    }
    function qR(n, r, l) {
      var u = n.pingCache, h;
      if (u === null ? (u = n.pingCache = new $2(), h = /* @__PURE__ */ new Set(), u.set(r, h)) : (h = u.get(r), h === void 0 && (h = /* @__PURE__ */ new Set(), u.set(r, h))), !h.has(l)) {
        h.add(l);
        var C = Rz.bind(null, n, r, l);
        Jo && Xh(n, l), r.then(C, C);
      }
    }
    function I2(n, r, l, u) {
      var h = n.updateQueue;
      if (h === null) {
        var C = /* @__PURE__ */ new Set();
        C.add(l), n.updateQueue = C;
      } else
        h.add(l);
    }
    function L2(n, r) {
      var l = n.tag;
      if ((n.mode & un) === Ut && (l === g || l === A || l === F)) {
        var u = n.alternate;
        u ? (n.updateQueue = u.updateQueue, n.memoizedState = u.memoizedState, n.lanes = u.lanes) : (n.updateQueue = null, n.memoizedState = null);
      }
    }
    function KR(n) {
      var r = n;
      do {
        if (r.tag === B && b2(r))
          return r;
        r = r.return;
      } while (r !== null);
      return null;
    }
    function QR(n, r, l, u, h) {
      if ((n.mode & un) === Ut) {
        if (n === r)
          n.flags |= Uo;
        else {
          if (n.flags |= Kt, l.flags |= Su, l.flags &= ~(jd | qr), l.tag === b) {
            var C = l.alternate;
            if (C === null)
              l.tag = H;
            else {
              var E = Tl(jn, Gt);
              E.tag = tb, Oc(l, E, Gt);
            }
          }
          l.lanes = an(l.lanes, Gt);
        }
        return n;
      }
      return n.flags |= Uo, n.lanes = h, n;
    }
    function A2(n, r, l, u, h) {
      if (l.flags |= qr, Jo && Xh(n, h), u !== null && typeof u == "object" && typeof u.then == "function") {
        var C = u;
        L2(l), Cr() && l.mode & un && VE();
        var E = KR(r);
        if (E !== null) {
          E.flags &= ~co, QR(E, r, l, n, h), E.mode & un && qR(n, C, h), I2(E, n, C);
          return;
        } else {
          if (!ac(h)) {
            qR(n, C, h), PT();
            return;
          }
          var L = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
          u = L;
        }
      } else if (Cr() && l.mode & un) {
        VE();
        var j = KR(r);
        if (j !== null) {
          (j.flags & Uo) === Ft && (j.flags |= co), QR(j, r, l, n, h), Wx(ed(u, l));
          return;
        }
      }
      u = ed(u, l), hz(u);
      var G = r;
      do {
        switch (G.tag) {
          case R: {
            var X = u;
            G.flags |= Uo;
            var he = Mo(h);
            G.lanes = an(G.lanes, he);
            var pe = GR(G, X, he);
            tS(G, pe);
            return;
          }
          case b:
            var Ne = u, Pe = G.type, Ke = G.stateNode;
            if ((G.flags & Kt) === Ft && (typeof Pe.getDerivedStateFromError == "function" || Ke !== null && typeof Ke.componentDidCatch == "function" && !KO(Ke))) {
              G.flags |= Uo;
              var Ot = Mo(h);
              G.lanes = an(G.lanes, Ot);
              var jt = JS(G, Ne, Ot);
              tS(G, jt);
              return;
            }
            break;
        }
        G = G.return;
      } while (G !== null);
    }
    function _2() {
      return null;
    }
    var Ah = i.ReactCurrentOwner, Vi = !1, eT, _h, tT, nT, oT, td, rT, Pb;
    eT = {}, _h = {}, tT = {}, nT = {}, oT = {}, td = !1, rT = {}, Pb = {};
    function ea(n, r, l, u) {
      n === null ? r.child = mR(r, null, l, u) : r.child = Qp(r, n.child, l, u);
    }
    function B2(n, r, l, u) {
      r.child = Qp(r, n.child, null, u), r.child = Qp(r, null, l, u);
    }
    function XR(n, r, l, u, h) {
      if (r.type !== r.elementType) {
        var C = l.propTypes;
        C && Ii(
          C,
          u,
          // Resolved props
          "prop",
          Vn(l)
        );
      }
      var E = l.render, L = r.ref, j, G;
      Kp(r, h), fs(r);
      {
        if (Ah.current = r, Ia(!0), j = nf(n, r, E, u, L, h), G = of(), r.mode & ro) {
          Do(!0);
          try {
            j = nf(n, r, E, u, L, h), G = of();
          } finally {
            Do(!1);
          }
        }
        Ia(!1);
      }
      return Zs(), n !== null && !Vi ? (bR(n, r, h), wl(n, r, h)) : (Cr() && G && zx(r), r.flags |= is, ea(n, r, j, h), r.child);
    }
    function ZR(n, r, l, u, h) {
      if (n === null) {
        var C = l.type;
        if (Uz(C) && l.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
        l.defaultProps === void 0) {
          var E = C;
          return E = pf(C), r.tag = F, r.type = E, sT(r, C), JR(n, r, E, u, h);
        }
        {
          var L = C.propTypes;
          L && Ii(
            L,
            u,
            // Resolved props
            "prop",
            Vn(C)
          );
        }
        var j = UT(l.type, null, u, r, r.mode, h);
        return j.ref = r.ref, j.return = r, r.child = j, j;
      }
      {
        var G = l.type, X = G.propTypes;
        X && Ii(
          X,
          u,
          // Resolved props
          "prop",
          Vn(G)
        );
      }
      var he = n.child, pe = fT(n, h);
      if (!pe) {
        var Ne = he.memoizedProps, Pe = l.compare;
        if (Pe = Pe !== null ? Pe : zt, Pe(Ne, u) && n.ref === r.ref)
          return wl(n, r, h);
      }
      r.flags |= is;
      var Ke = id(he, u);
      return Ke.ref = r.ref, Ke.return = r, r.child = Ke, Ke;
    }
    function JR(n, r, l, u, h) {
      if (r.type !== r.elementType) {
        var C = r.elementType;
        if (C.$$typeof === bt) {
          var E = C, L = E._payload, j = E._init;
          try {
            C = j(L);
          } catch {
            C = null;
          }
          var G = C && C.propTypes;
          G && Ii(
            G,
            u,
            // Resolved (SimpleMemoComponent has no defaultProps)
            "prop",
            Vn(C)
          );
        }
      }
      if (n !== null) {
        var X = n.memoizedProps;
        if (zt(X, u) && n.ref === r.ref && // Prevent bailout if the implementation changed due to hot reload.
        r.type === n.type)
          if (Vi = !1, r.pendingProps = u = X, fT(n, h))
            (n.flags & Su) !== Ft && (Vi = !0);
          else
            return r.lanes = n.lanes, wl(n, r, h);
      }
      return aT(n, r, l, u, h);
    }
    function eO(n, r, l) {
      var u = r.pendingProps, h = u.children, C = n !== null ? n.memoizedState : null;
      if (u.mode === "hidden" || se)
        if ((r.mode & un) === Ut) {
          var E = {
            baseLanes: Je,
            cachePool: null,
            transitions: null
          };
          r.memoizedState = E, Wb(r, l);
        } else if (Br(l, _r)) {
          var he = {
            baseLanes: Je,
            cachePool: null,
            transitions: null
          };
          r.memoizedState = he;
          var pe = C !== null ? C.baseLanes : l;
          Wb(r, pe);
        } else {
          var L = null, j;
          if (C !== null) {
            var G = C.baseLanes;
            j = an(G, l);
          } else
            j = l;
          r.lanes = r.childLanes = _r;
          var X = {
            baseLanes: j,
            cachePool: L,
            transitions: null
          };
          return r.memoizedState = X, r.updateQueue = null, Wb(r, j), null;
        }
      else {
        var Ne;
        C !== null ? (Ne = an(C.baseLanes, l), r.memoizedState = null) : Ne = l, Wb(r, Ne);
      }
      return ea(n, r, h, l), r.child;
    }
    function z2(n, r, l) {
      var u = r.pendingProps;
      return ea(n, r, u, l), r.child;
    }
    function V2(n, r, l) {
      var u = r.pendingProps.children;
      return ea(n, r, u, l), r.child;
    }
    function F2(n, r, l) {
      {
        r.flags |= rn;
        {
          var u = r.stateNode;
          u.effectDuration = 0, u.passiveEffectDuration = 0;
        }
      }
      var h = r.pendingProps, C = h.children;
      return ea(n, r, C, l), r.child;
    }
    function tO(n, r) {
      var l = r.ref;
      (n === null && l !== null || n !== null && n.ref !== l) && (r.flags |= Nr, r.flags |= bm);
    }
    function aT(n, r, l, u, h) {
      if (r.type !== r.elementType) {
        var C = l.propTypes;
        C && Ii(
          C,
          u,
          // Resolved props
          "prop",
          Vn(l)
        );
      }
      var E;
      {
        var L = Up(r, l, !0);
        E = Hp(r, L);
      }
      var j, G;
      Kp(r, h), fs(r);
      {
        if (Ah.current = r, Ia(!0), j = nf(n, r, l, u, E, h), G = of(), r.mode & ro) {
          Do(!0);
          try {
            j = nf(n, r, l, u, E, h), G = of();
          } finally {
            Do(!1);
          }
        }
        Ia(!1);
      }
      return Zs(), n !== null && !Vi ? (bR(n, r, h), wl(n, r, h)) : (Cr() && G && zx(r), r.flags |= is, ea(n, r, j, h), r.child);
    }
    function nO(n, r, l, u, h) {
      {
        switch (rV(r)) {
          case !1: {
            var C = r.stateNode, E = r.type, L = new E(r.memoizedProps, C.context), j = L.state;
            C.updater.enqueueSetState(C, j, null);
            break;
          }
          case !0: {
            r.flags |= Kt, r.flags |= Uo;
            var G = new Error("Simulated error coming from DevTools"), X = Mo(h);
            r.lanes = an(r.lanes, X);
            var he = JS(r, ed(G, r), X);
            tS(r, he);
            break;
          }
        }
        if (r.type !== r.elementType) {
          var pe = l.propTypes;
          pe && Ii(
            pe,
            u,
            // Resolved props
            "prop",
            Vn(l)
          );
        }
      }
      var Ne;
      ws(l) ? (Ne = !0, Hy(r)) : Ne = !1, Kp(r, h);
      var Pe = r.stateNode, Ke;
      Pe === null ? (Ib(n, r), cR(r, l, u), fS(r, l, u, h), Ke = !0) : n === null ? Ke = f2(r, l, u, h) : Ke = m2(n, r, l, u, h);
      var Ot = iT(n, r, l, Ke, Ne, h);
      {
        var jt = r.stateNode;
        Ke && jt.props !== u && (td || f("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", on(r) || "a component"), td = !0);
      }
      return Ot;
    }
    function iT(n, r, l, u, h, C) {
      tO(n, r);
      var E = (r.flags & Kt) !== Ft;
      if (!u && !E)
        return h && AE(r, l, !1), wl(n, r, C);
      var L = r.stateNode;
      Ah.current = r;
      var j;
      if (E && typeof l.getDerivedStateFromError != "function")
        j = null, YR();
      else {
        fs(r);
        {
          if (Ia(!0), j = L.render(), r.mode & ro) {
            Do(!0);
            try {
              L.render();
            } finally {
              Do(!1);
            }
          }
          Ia(!1);
        }
        Zs();
      }
      return r.flags |= is, n !== null && E ? B2(n, r, j, C) : ea(n, r, j, C), r.memoizedState = L.state, h && AE(r, l, !0), r.child;
    }
    function oO(n) {
      var r = n.stateNode;
      r.pendingContext ? IE(n, r.pendingContext, r.pendingContext !== r.context) : r.context && IE(n, r.context, !1), bS(n, r.containerInfo);
    }
    function j2(n, r, l) {
      if (oO(r), n === null)
        throw new Error("Should have a current fiber. This is a bug in React.");
      var u = r.pendingProps, h = r.memoizedState, C = h.element;
      tR(n, r), ab(r, u, null, l);
      var E = r.memoizedState;
      r.stateNode;
      var L = E.element;
      if (h.isDehydrated) {
        var j = {
          element: L,
          isDehydrated: !1,
          cache: E.cache,
          pendingSuspenseBoundaries: E.pendingSuspenseBoundaries,
          transitions: E.transitions
        }, G = r.updateQueue;
        if (G.baseState = j, r.memoizedState = j, r.flags & co) {
          var X = ed(new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering."), r);
          return rO(n, r, L, l, X);
        } else if (L !== C) {
          var he = ed(new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), r);
          return rO(n, r, L, l, he);
        } else {
          Y_(r);
          var pe = mR(r, null, L, l);
          r.child = pe;
          for (var Ne = pe; Ne; )
            Ne.flags = Ne.flags & ~Wn | pa, Ne = Ne.sibling;
        }
      } else {
        if (Gp(), L === C)
          return wl(n, r, l);
        ea(n, r, L, l);
      }
      return r.child;
    }
    function rO(n, r, l, u, h) {
      return Gp(), Wx(h), r.flags |= co, ea(n, r, l, u), r.child;
    }
    function U2(n, r, l) {
      vR(r), n === null && Hx(r);
      var u = r.type, h = r.pendingProps, C = n !== null ? n.memoizedProps : null, E = h.children, L = Ex(u, h);
      return L ? E = null : C !== null && Ex(u, C) && (r.flags |= En), tO(n, r), ea(n, r, E, l), r.child;
    }
    function H2(n, r) {
      return n === null && Hx(r), null;
    }
    function W2(n, r, l, u) {
      Ib(n, r);
      var h = r.pendingProps, C = l, E = C._payload, L = C._init, j = L(E);
      r.type = j;
      var G = r.tag = Hz(j), X = _i(j, h), he;
      switch (G) {
        case g:
          return sT(r, j), r.type = j = pf(j), he = aT(null, r, j, X, u), he;
        case b:
          return r.type = j = _T(j), he = nO(null, r, j, X, u), he;
        case A:
          return r.type = j = BT(j), he = XR(null, r, j, X, u), he;
        case M: {
          if (r.type !== r.elementType) {
            var pe = j.propTypes;
            pe && Ii(
              pe,
              X,
              // Resolved for outer only
              "prop",
              Vn(j)
            );
          }
          return he = ZR(
            null,
            r,
            j,
            _i(j.type, X),
            // The inner type can have defaults too
            u
          ), he;
        }
      }
      var Ne = "";
      throw j !== null && typeof j == "object" && j.$$typeof === bt && (Ne = " Did you wrap a component in React.lazy() more than once?"), new Error("Element type is invalid. Received a promise that resolves to: " + j + ". " + ("Lazy element type must resolve to a class or function." + Ne));
    }
    function Y2(n, r, l, u, h) {
      Ib(n, r), r.tag = b;
      var C;
      return ws(l) ? (C = !0, Hy(r)) : C = !1, Kp(r, h), cR(r, l, u), fS(r, l, u, h), iT(null, r, l, !0, C, h);
    }
    function G2(n, r, l, u) {
      Ib(n, r);
      var h = r.pendingProps, C;
      {
        var E = Up(r, l, !1);
        C = Hp(r, E);
      }
      Kp(r, u);
      var L, j;
      fs(r);
      {
        if (l.prototype && typeof l.prototype.render == "function") {
          var G = Vn(l) || "Unknown";
          eT[G] || (f("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", G, G), eT[G] = !0);
        }
        r.mode & ro && Ai.recordLegacyContextWarning(r, null), Ia(!0), Ah.current = r, L = nf(null, r, l, h, C, u), j = of(), Ia(!1);
      }
      if (Zs(), r.flags |= is, typeof L == "object" && L !== null && typeof L.render == "function" && L.$$typeof === void 0) {
        var X = Vn(l) || "Unknown";
        _h[X] || (f("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", X, X, X), _h[X] = !0);
      }
      if (
        // Run these checks in production only if the flag is off.
        // Eventually we'll delete this branch altogether.
        typeof L == "object" && L !== null && typeof L.render == "function" && L.$$typeof === void 0
      ) {
        {
          var he = Vn(l) || "Unknown";
          _h[he] || (f("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", he, he, he), _h[he] = !0);
        }
        r.tag = b, r.memoizedState = null, r.updateQueue = null;
        var pe = !1;
        return ws(l) ? (pe = !0, Hy(r)) : pe = !1, r.memoizedState = L.state !== null && L.state !== void 0 ? L.state : null, eS(r), lR(r, L), fS(r, l, h, u), iT(null, r, l, !0, pe, u);
      } else {
        if (r.tag = g, r.mode & ro) {
          Do(!0);
          try {
            L = nf(null, r, l, h, C, u), j = of();
          } finally {
            Do(!1);
          }
        }
        return Cr() && j && zx(r), ea(null, r, L, u), sT(r, l), r.child;
      }
    }
    function sT(n, r) {
      {
        if (r && r.childContextTypes && f("%s(...): childContextTypes cannot be defined on a function component.", r.displayName || r.name || "Component"), n.ref !== null) {
          var l = "", u = la();
          u && (l += `

Check the render method of \`` + u + "`.");
          var h = u || "", C = n._debugSource;
          C && (h = C.fileName + ":" + C.lineNumber), oT[h] || (oT[h] = !0, f("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", l));
        }
        if (typeof r.getDerivedStateFromProps == "function") {
          var E = Vn(r) || "Unknown";
          nT[E] || (f("%s: Function components do not support getDerivedStateFromProps.", E), nT[E] = !0);
        }
        if (typeof r.contextType == "object" && r.contextType !== null) {
          var L = Vn(r) || "Unknown";
          tT[L] || (f("%s: Function components do not support contextType.", L), tT[L] = !0);
        }
      }
    }
    var lT = {
      dehydrated: null,
      treeContext: null,
      retryLane: hn
    };
    function cT(n) {
      return {
        baseLanes: n,
        cachePool: _2(),
        transitions: null
      };
    }
    function q2(n, r) {
      var l = null;
      return {
        baseLanes: an(n.baseLanes, r),
        cachePool: l,
        transitions: n.transitions
      };
    }
    function K2(n, r, l, u) {
      if (r !== null) {
        var h = r.memoizedState;
        if (h === null)
          return !1;
      }
      return SS(n, kh);
    }
    function Q2(n, r) {
      return ic(n.childLanes, r);
    }
    function aO(n, r, l) {
      var u = r.pendingProps;
      aV(r) && (r.flags |= Kt);
      var h = Bi.current, C = !1, E = (r.flags & Kt) !== Ft;
      if (E || K2(h, n) ? (C = !0, r.flags &= ~Kt) : (n === null || n.memoizedState !== null) && (h = y2(h, yR)), h = Zp(h), Dc(r, h), n === null) {
        Hx(r);
        var L = r.memoizedState;
        if (L !== null) {
          var j = L.dehydrated;
          if (j !== null)
            return tB(r, j);
        }
        var G = u.children, X = u.fallback;
        if (C) {
          var he = X2(r, G, X, l), pe = r.child;
          return pe.memoizedState = cT(l), r.memoizedState = lT, he;
        } else
          return uT(r, G);
      } else {
        var Ne = n.memoizedState;
        if (Ne !== null) {
          var Pe = Ne.dehydrated;
          if (Pe !== null)
            return nB(n, r, E, u, Pe, Ne, l);
        }
        if (C) {
          var Ke = u.fallback, Ot = u.children, jt = J2(n, r, Ot, Ke, l), Bt = r.child, gn = n.child.memoizedState;
          return Bt.memoizedState = gn === null ? cT(l) : q2(gn, l), Bt.childLanes = Q2(n, l), r.memoizedState = lT, jt;
        } else {
          var mn = u.children, Ee = Z2(n, r, mn, l);
          return r.memoizedState = null, Ee;
        }
      }
    }
    function uT(n, r, l) {
      var u = n.mode, h = {
        mode: "visible",
        children: r
      }, C = dT(h, u);
      return C.return = n, n.child = C, C;
    }
    function X2(n, r, l, u) {
      var h = n.mode, C = n.child, E = {
        mode: "hidden",
        children: r
      }, L, j;
      return (h & un) === Ut && C !== null ? (L = C, L.childLanes = Je, L.pendingProps = E, n.mode & Ht && (L.actualDuration = 0, L.actualStartTime = -1, L.selfBaseDuration = 0, L.treeBaseDuration = 0), j = _c(l, h, u, null)) : (L = dT(E, h), j = _c(l, h, u, null)), L.return = n, j.return = n, L.sibling = j, n.child = L, j;
    }
    function dT(n, r, l) {
      return ik(n, r, Je, null);
    }
    function iO(n, r) {
      return id(n, r);
    }
    function Z2(n, r, l, u) {
      var h = n.child, C = h.sibling, E = iO(h, {
        mode: "visible",
        children: l
      });
      if ((r.mode & un) === Ut && (E.lanes = u), E.return = r, E.sibling = null, C !== null) {
        var L = r.deletions;
        L === null ? (r.deletions = [C], r.flags |= wn) : L.push(C);
      }
      return r.child = E, E;
    }
    function J2(n, r, l, u, h) {
      var C = r.mode, E = n.child, L = E.sibling, j = {
        mode: "hidden",
        children: l
      }, G;
      if (
        // In legacy mode, we commit the primary tree as if it successfully
        // completed, even though it's in an inconsistent state.
        (C & un) === Ut && // Make sure we're on the second pass, i.e. the primary child fragment was
        // already cloned. In legacy mode, the only case where this isn't true is
        // when DevTools forces us to display a fallback; we skip the first render
        // pass entirely and go straight to rendering the fallback. (In Concurrent
        // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
        // only codepath.)
        r.child !== E
      ) {
        var X = r.child;
        G = X, G.childLanes = Je, G.pendingProps = j, r.mode & Ht && (G.actualDuration = 0, G.actualStartTime = -1, G.selfBaseDuration = E.selfBaseDuration, G.treeBaseDuration = E.treeBaseDuration), r.deletions = null;
      } else
        G = iO(E, j), G.subtreeFlags = E.subtreeFlags & Zo;
      var he;
      return L !== null ? he = id(L, u) : (he = _c(u, C, h, null), he.flags |= Wn), he.return = r, G.return = r, G.sibling = he, r.child = G, he;
    }
    function $b(n, r, l, u) {
      u !== null && Wx(u), Qp(r, n.child, null, l);
      var h = r.pendingProps, C = h.children, E = uT(r, C);
      return E.flags |= Wn, r.memoizedState = null, E;
    }
    function eB(n, r, l, u, h) {
      var C = r.mode, E = {
        mode: "visible",
        children: l
      }, L = dT(E, C), j = _c(u, C, h, null);
      return j.flags |= Wn, L.return = r, j.return = r, L.sibling = j, r.child = L, (r.mode & un) !== Ut && Qp(r, n.child, null, h), j;
    }
    function tB(n, r, l) {
      return (n.mode & un) === Ut ? (f("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components."), n.lanes = Gt) : Dx(r) ? n.lanes = tl : n.lanes = _r, null;
    }
    function nB(n, r, l, u, h, C, E) {
      if (l)
        if (r.flags & co) {
          r.flags &= ~co;
          var Ee = XS(new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
          return $b(n, r, E, Ee);
        } else {
          if (r.memoizedState !== null)
            return r.child = n.child, r.flags |= Kt, null;
          var Qe = u.children, Re = u.fallback, dt = eB(n, r, Qe, Re, E), kt = r.child;
          return kt.memoizedState = cT(E), r.memoizedState = lT, dt;
        }
      else {
        if (H_(), (r.mode & un) === Ut)
          return $b(
            n,
            r,
            E,
            // TODO: When we delete legacy mode, we should make this error argument
            // required — every concurrent mode path that causes hydration to
            // de-opt to client rendering should have an error message.
            null
          );
        if (Dx(h)) {
          var L, j, G;
          {
            var X = s_(h);
            L = X.digest, j = X.message, G = X.stack;
          }
          var he;
          j ? he = new Error(j) : he = new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
          var pe = XS(he, L, G);
          return $b(n, r, E, pe);
        }
        var Ne = Br(E, n.childLanes);
        if (Vi || Ne) {
          var Pe = Hb();
          if (Pe !== null) {
            var Ke = Q0(Pe, E);
            if (Ke !== hn && Ke !== C.retryLane) {
              C.retryLane = Ke;
              var Ot = jn;
              Sa(n, Ke), lr(Pe, n, Ke, Ot);
            }
          }
          PT();
          var jt = XS(new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
          return $b(n, r, E, jt);
        } else if (kE(h)) {
          r.flags |= Kt, r.child = n.child;
          var Bt = Oz.bind(null, n);
          return l_(h, Bt), null;
        } else {
          G_(r, h, C.treeContext);
          var gn = u.children, mn = uT(r, gn);
          return mn.flags |= pa, mn;
        }
      }
    }
    function sO(n, r, l) {
      n.lanes = an(n.lanes, r);
      var u = n.alternate;
      u !== null && (u.lanes = an(u.lanes, r)), Qx(n.return, r, l);
    }
    function oB(n, r, l) {
      for (var u = r; u !== null; ) {
        if (u.tag === B) {
          var h = u.memoizedState;
          h !== null && sO(u, l, n);
        } else if (u.tag === W)
          sO(u, l, n);
        else if (u.child !== null) {
          u.child.return = u, u = u.child;
          continue;
        }
        if (u === n)
          return;
        for (; u.sibling === null; ) {
          if (u.return === null || u.return === n)
            return;
          u = u.return;
        }
        u.sibling.return = u.return, u = u.sibling;
      }
    }
    function rB(n) {
      for (var r = n, l = null; r !== null; ) {
        var u = r.alternate;
        u !== null && pb(u) === null && (l = r), r = r.sibling;
      }
      return l;
    }
    function aB(n) {
      if (n !== void 0 && n !== "forwards" && n !== "backwards" && n !== "together" && !rT[n])
        if (rT[n] = !0, typeof n == "string")
          switch (n.toLowerCase()) {
            case "together":
            case "forwards":
            case "backwards": {
              f('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', n, n.toLowerCase());
              break;
            }
            case "forward":
            case "backward": {
              f('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', n, n.toLowerCase());
              break;
            }
            default:
              f('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', n);
              break;
          }
        else
          f('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', n);
    }
    function iB(n, r) {
      n !== void 0 && !Pb[n] && (n !== "collapsed" && n !== "hidden" ? (Pb[n] = !0, f('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', n)) : r !== "forwards" && r !== "backwards" && (Pb[n] = !0, f('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', n)));
    }
    function lO(n, r) {
      {
        var l = Fo(n), u = !l && typeof gi(n) == "function";
        if (l || u) {
          var h = l ? "array" : "iterable";
          return f("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", h, r, h), !1;
        }
      }
      return !0;
    }
    function sB(n, r) {
      if ((r === "forwards" || r === "backwards") && n !== void 0 && n !== null && n !== !1)
        if (Fo(n)) {
          for (var l = 0; l < n.length; l++)
            if (!lO(n[l], l))
              return;
        } else {
          var u = gi(n);
          if (typeof u == "function") {
            var h = u.call(n);
            if (h)
              for (var C = h.next(), E = 0; !C.done; C = h.next()) {
                if (!lO(C.value, E))
                  return;
                E++;
              }
          } else
            f('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', r);
        }
    }
    function pT(n, r, l, u, h) {
      var C = n.memoizedState;
      C === null ? n.memoizedState = {
        isBackwards: r,
        rendering: null,
        renderingStartTime: 0,
        last: u,
        tail: l,
        tailMode: h
      } : (C.isBackwards = r, C.rendering = null, C.renderingStartTime = 0, C.last = u, C.tail = l, C.tailMode = h);
    }
    function cO(n, r, l) {
      var u = r.pendingProps, h = u.revealOrder, C = u.tail, E = u.children;
      aB(h), iB(C, h), sB(E, h), ea(n, r, E, l);
      var L = Bi.current, j = SS(L, kh);
      if (j)
        L = TS(L, kh), r.flags |= Kt;
      else {
        var G = n !== null && (n.flags & Kt) !== Ft;
        G && oB(r, r.child, l), L = Zp(L);
      }
      if (Dc(r, L), (r.mode & un) === Ut)
        r.memoizedState = null;
      else
        switch (h) {
          case "forwards": {
            var X = rB(r.child), he;
            X === null ? (he = r.child, r.child = null) : (he = X.sibling, X.sibling = null), pT(
              r,
              !1,
              // isBackwards
              he,
              X,
              C
            );
            break;
          }
          case "backwards": {
            var pe = null, Ne = r.child;
            for (r.child = null; Ne !== null; ) {
              var Pe = Ne.alternate;
              if (Pe !== null && pb(Pe) === null) {
                r.child = Ne;
                break;
              }
              var Ke = Ne.sibling;
              Ne.sibling = pe, pe = Ne, Ne = Ke;
            }
            pT(
              r,
              !0,
              // isBackwards
              pe,
              null,
              // last
              C
            );
            break;
          }
          case "together": {
            pT(
              r,
              !1,
              // isBackwards
              null,
              // tail
              null,
              // last
              void 0
            );
            break;
          }
          default:
            r.memoizedState = null;
        }
      return r.child;
    }
    function lB(n, r, l) {
      bS(r, r.stateNode.containerInfo);
      var u = r.pendingProps;
      return n === null ? r.child = Qp(r, null, u, l) : ea(n, r, u, l), r.child;
    }
    var uO = !1;
    function cB(n, r, l) {
      var u = r.type, h = u._context, C = r.pendingProps, E = r.memoizedProps, L = C.value;
      {
        "value" in C || uO || (uO = !0, f("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?"));
        var j = r.type.propTypes;
        j && Ii(j, C, "prop", "Context.Provider");
      }
      if (XE(r, h, L), E !== null) {
        var G = E.value;
        if ($t(G, L)) {
          if (E.children === C.children && !jy())
            return wl(n, r, l);
        } else
          o2(r, h, l);
      }
      var X = C.children;
      return ea(n, r, X, l), r.child;
    }
    var dO = !1;
    function uB(n, r, l) {
      var u = r.type;
      u._context === void 0 ? u !== u.Consumer && (dO || (dO = !0, f("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?"))) : u = u._context;
      var h = r.pendingProps, C = h.children;
      typeof C != "function" && f("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it."), Kp(r, l);
      var E = qo(u);
      fs(r);
      var L;
      return Ah.current = r, Ia(!0), L = C(E), Ia(!1), Zs(), r.flags |= is, ea(n, r, L, l), r.child;
    }
    function Bh() {
      Vi = !0;
    }
    function Ib(n, r) {
      (r.mode & un) === Ut && n !== null && (n.alternate = null, r.alternate = null, r.flags |= Wn);
    }
    function wl(n, r, l) {
      return n !== null && (r.dependencies = n.dependencies), YR(), Qh(r.lanes), Br(l, r.childLanes) ? (h2(n, r), r.child) : null;
    }
    function dB(n, r, l) {
      {
        var u = r.return;
        if (u === null)
          throw new Error("Cannot swap the root fiber.");
        if (n.alternate = null, r.alternate = null, l.index = r.index, l.sibling = r.sibling, l.return = r.return, l.ref = r.ref, r === u.child)
          u.child = l;
        else {
          var h = u.child;
          if (h === null)
            throw new Error("Expected parent to have a child.");
          for (; h.sibling !== r; )
            if (h = h.sibling, h === null)
              throw new Error("Expected to find the previous sibling.");
          h.sibling = l;
        }
        var C = u.deletions;
        return C === null ? (u.deletions = [n], u.flags |= wn) : C.push(n), l.flags |= Wn, l;
      }
    }
    function fT(n, r) {
      var l = n.lanes;
      return !!Br(l, r);
    }
    function pB(n, r, l) {
      switch (r.tag) {
        case R:
          oO(r), r.stateNode, Gp();
          break;
        case k:
          vR(r);
          break;
        case b: {
          var u = r.type;
          ws(u) && Hy(r);
          break;
        }
        case D:
          bS(r, r.stateNode.containerInfo);
          break;
        case _: {
          var h = r.memoizedProps.value, C = r.type._context;
          XE(r, C, h);
          break;
        }
        case V:
          {
            var E = Br(l, r.childLanes);
            E && (r.flags |= rn);
            {
              var L = r.stateNode;
              L.effectDuration = 0, L.passiveEffectDuration = 0;
            }
          }
          break;
        case B: {
          var j = r.memoizedState;
          if (j !== null) {
            if (j.dehydrated !== null)
              return Dc(r, Zp(Bi.current)), r.flags |= Kt, null;
            var G = r.child, X = G.childLanes;
            if (Br(l, X))
              return aO(n, r, l);
            Dc(r, Zp(Bi.current));
            var he = wl(n, r, l);
            return he !== null ? he.sibling : null;
          } else
            Dc(r, Zp(Bi.current));
          break;
        }
        case W: {
          var pe = (n.flags & Kt) !== Ft, Ne = Br(l, r.childLanes);
          if (pe) {
            if (Ne)
              return cO(n, r, l);
            r.flags |= Kt;
          }
          var Pe = r.memoizedState;
          if (Pe !== null && (Pe.rendering = null, Pe.tail = null, Pe.lastEffect = null), Dc(r, Bi.current), Ne)
            break;
          return null;
        }
        case Z:
        case q:
          return r.lanes = Je, eO(n, r, l);
      }
      return wl(n, r, l);
    }
    function pO(n, r, l) {
      if (r._debugNeedsRemount && n !== null)
        return dB(n, r, UT(r.type, r.key, r.pendingProps, r._debugOwner || null, r.mode, r.lanes));
      if (n !== null) {
        var u = n.memoizedProps, h = r.pendingProps;
        if (u !== h || jy() || // Force a re-render if the implementation changed due to hot reload:
        r.type !== n.type)
          Vi = !0;
        else {
          var C = fT(n, l);
          if (!C && // If this is the second pass of an error or suspense boundary, there
          // may not be work scheduled on `current`, so we check for this flag.
          (r.flags & Kt) === Ft)
            return Vi = !1, pB(n, r, l);
          (n.flags & Su) !== Ft ? Vi = !0 : Vi = !1;
        }
      } else if (Vi = !1, Cr() && B_(r)) {
        var E = r.index, L = z_();
        zE(r, L, E);
      }
      switch (r.lanes = Je, r.tag) {
        case S:
          return G2(n, r, r.type, l);
        case Y: {
          var j = r.elementType;
          return W2(n, r, j, l);
        }
        case g: {
          var G = r.type, X = r.pendingProps, he = r.elementType === G ? X : _i(G, X);
          return aT(n, r, G, he, l);
        }
        case b: {
          var pe = r.type, Ne = r.pendingProps, Pe = r.elementType === pe ? Ne : _i(pe, Ne);
          return nO(n, r, pe, Pe, l);
        }
        case R:
          return j2(n, r, l);
        case k:
          return U2(n, r, l);
        case $:
          return H2(n, r);
        case B:
          return aO(n, r, l);
        case D:
          return lB(n, r, l);
        case A: {
          var Ke = r.type, Ot = r.pendingProps, jt = r.elementType === Ke ? Ot : _i(Ke, Ot);
          return XR(n, r, Ke, jt, l);
        }
        case P:
          return z2(n, r, l);
        case O:
          return V2(n, r, l);
        case V:
          return F2(n, r, l);
        case _:
          return cB(n, r, l);
        case I:
          return uB(n, r, l);
        case M: {
          var Bt = r.type, gn = r.pendingProps, mn = _i(Bt, gn);
          if (r.type !== r.elementType) {
            var Ee = Bt.propTypes;
            Ee && Ii(
              Ee,
              mn,
              // Resolved for outer only
              "prop",
              Vn(Bt)
            );
          }
          return mn = _i(Bt.type, mn), ZR(n, r, Bt, mn, l);
        }
        case F:
          return JR(n, r, r.type, r.pendingProps, l);
        case H: {
          var Qe = r.type, Re = r.pendingProps, dt = r.elementType === Qe ? Re : _i(Qe, Re);
          return Y2(n, r, Qe, dt, l);
        }
        case W:
          return cO(n, r, l);
        case te:
          break;
        case Z:
          return eO(n, r, l);
      }
      throw new Error("Unknown unit of work tag (" + r.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function rf(n) {
      n.flags |= rn;
    }
    function fO(n) {
      n.flags |= Nr, n.flags |= bm;
    }
    var mO, mT, hO, vO;
    mO = function(n, r, l, u) {
      for (var h = r.child; h !== null; ) {
        if (h.tag === k || h.tag === $)
          LA(n, h.stateNode);
        else if (h.tag !== D) {
          if (h.child !== null) {
            h.child.return = h, h = h.child;
            continue;
          }
        }
        if (h === r)
          return;
        for (; h.sibling === null; ) {
          if (h.return === null || h.return === r)
            return;
          h = h.return;
        }
        h.sibling.return = h.return, h = h.sibling;
      }
    }, mT = function(n, r) {
    }, hO = function(n, r, l, u, h) {
      var C = n.memoizedProps;
      if (C !== u) {
        var E = r.stateNode, L = CS(), j = _A(E, l, C, u, h, L);
        r.updateQueue = j, j && rf(r);
      }
    }, vO = function(n, r, l, u) {
      l !== u && rf(r);
    };
    function zh(n, r) {
      if (!Cr())
        switch (n.tailMode) {
          case "hidden": {
            for (var l = n.tail, u = null; l !== null; )
              l.alternate !== null && (u = l), l = l.sibling;
            u === null ? n.tail = null : u.sibling = null;
            break;
          }
          case "collapsed": {
            for (var h = n.tail, C = null; h !== null; )
              h.alternate !== null && (C = h), h = h.sibling;
            C === null ? !r && n.tail !== null ? n.tail.sibling = null : n.tail = null : C.sibling = null;
            break;
          }
        }
    }
    function Sr(n) {
      var r = n.alternate !== null && n.alternate.child === n.child, l = Je, u = Ft;
      if (r) {
        if ((n.mode & Ht) !== Ut) {
          for (var j = n.selfBaseDuration, G = n.child; G !== null; )
            l = an(l, an(G.lanes, G.childLanes)), u |= G.subtreeFlags & Zo, u |= G.flags & Zo, j += G.treeBaseDuration, G = G.sibling;
          n.treeBaseDuration = j;
        } else
          for (var X = n.child; X !== null; )
            l = an(l, an(X.lanes, X.childLanes)), u |= X.subtreeFlags & Zo, u |= X.flags & Zo, X.return = n, X = X.sibling;
        n.subtreeFlags |= u;
      } else {
        if ((n.mode & Ht) !== Ut) {
          for (var h = n.actualDuration, C = n.selfBaseDuration, E = n.child; E !== null; )
            l = an(l, an(E.lanes, E.childLanes)), u |= E.subtreeFlags, u |= E.flags, h += E.actualDuration, C += E.treeBaseDuration, E = E.sibling;
          n.actualDuration = h, n.treeBaseDuration = C;
        } else
          for (var L = n.child; L !== null; )
            l = an(l, an(L.lanes, L.childLanes)), u |= L.subtreeFlags, u |= L.flags, L.return = n, L = L.sibling;
        n.subtreeFlags |= u;
      }
      return n.childLanes = l, r;
    }
    function fB(n, r, l) {
      if (Z_() && (r.mode & un) !== Ut && (r.flags & Kt) === Ft)
        return YE(r), Gp(), r.flags |= co | qr | Uo, !1;
      var u = Ky(r);
      if (l !== null && l.dehydrated !== null)
        if (n === null) {
          if (!u)
            throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
          if (Q_(r), Sr(r), (r.mode & Ht) !== Ut) {
            var h = l !== null;
            if (h) {
              var C = r.child;
              C !== null && (r.treeBaseDuration -= C.treeBaseDuration);
            }
          }
          return !1;
        } else {
          if (Gp(), (r.flags & Kt) === Ft && (r.memoizedState = null), r.flags |= rn, Sr(r), (r.mode & Ht) !== Ut) {
            var E = l !== null;
            if (E) {
              var L = r.child;
              L !== null && (r.treeBaseDuration -= L.treeBaseDuration);
            }
          }
          return !1;
        }
      else
        return GE(), !0;
    }
    function gO(n, r, l) {
      var u = r.pendingProps;
      switch (Vx(r), r.tag) {
        case S:
        case Y:
        case F:
        case g:
        case A:
        case P:
        case O:
        case V:
        case I:
        case M:
          return Sr(r), null;
        case b: {
          var h = r.type;
          return ws(h) && Uy(r), Sr(r), null;
        }
        case R: {
          var C = r.stateNode;
          if (Xp(r), Ax(r), ES(), C.pendingContext && (C.context = C.pendingContext, C.pendingContext = null), n === null || n.child === null) {
            var E = Ky(r);
            if (E)
              rf(r);
            else if (n !== null) {
              var L = n.memoizedState;
              // Check if this is a client root
              (!L.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)
              (r.flags & co) !== Ft) && (r.flags |= da, GE());
            }
          }
          return mT(n, r), Sr(r), null;
        }
        case k: {
          xS(r);
          var j = hR(), G = r.type;
          if (n !== null && r.stateNode != null)
            hO(n, r, G, u, j), n.ref !== r.ref && fO(r);
          else {
            if (!u) {
              if (r.stateNode === null)
                throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
              return Sr(r), null;
            }
            var X = CS(), he = Ky(r);
            if (he)
              q_(r, j, X) && rf(r);
            else {
              var pe = IA(G, u, j, X, r);
              mO(pe, r, !1, !1), r.stateNode = pe, AA(pe, G, u, j) && rf(r);
            }
            r.ref !== null && fO(r);
          }
          return Sr(r), null;
        }
        case $: {
          var Ne = u;
          if (n && r.stateNode != null) {
            var Pe = n.memoizedProps;
            vO(n, r, Pe, Ne);
          } else {
            if (typeof Ne != "string" && r.stateNode === null)
              throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
            var Ke = hR(), Ot = CS(), jt = Ky(r);
            jt ? K_(r) && rf(r) : r.stateNode = BA(Ne, Ke, Ot, r);
          }
          return Sr(r), null;
        }
        case B: {
          Jp(r);
          var Bt = r.memoizedState;
          if (n === null || n.memoizedState !== null && n.memoizedState.dehydrated !== null) {
            var gn = fB(n, r, Bt);
            if (!gn)
              return r.flags & Uo ? r : null;
          }
          if ((r.flags & Kt) !== Ft)
            return r.lanes = l, (r.mode & Ht) !== Ut && QS(r), r;
          var mn = Bt !== null, Ee = n !== null && n.memoizedState !== null;
          if (mn !== Ee && mn) {
            var Qe = r.child;
            if (Qe.flags |= ss, (r.mode & un) !== Ut) {
              var Re = n === null && (r.memoizedProps.unstable_avoidThisFallback !== !0 || !Fe);
              Re || SS(Bi.current, yR) ? mz() : PT();
            }
          }
          var dt = r.updateQueue;
          if (dt !== null && (r.flags |= rn), Sr(r), (r.mode & Ht) !== Ut && mn) {
            var kt = r.child;
            kt !== null && (r.treeBaseDuration -= kt.treeBaseDuration);
          }
          return null;
        }
        case D:
          return Xp(r), mT(n, r), n === null && N_(r.stateNode.containerInfo), Sr(r), null;
        case _:
          var wt = r.type._context;
          return Kx(wt, r), Sr(r), null;
        case H: {
          var qt = r.type;
          return ws(qt) && Uy(r), Sr(r), null;
        }
        case W: {
          Jp(r);
          var tn = r.memoizedState;
          if (tn === null)
            return Sr(r), null;
          var Ln = (r.flags & Kt) !== Ft, xn = tn.rendering;
          if (xn === null)
            if (Ln)
              zh(tn, !1);
            else {
              var Io = vz() && (n === null || (n.flags & Kt) === Ft);
              if (!Io)
                for (var Sn = r.child; Sn !== null; ) {
                  var So = pb(Sn);
                  if (So !== null) {
                    Ln = !0, r.flags |= Kt, zh(tn, !1);
                    var jr = So.updateQueue;
                    return jr !== null && (r.updateQueue = jr, r.flags |= rn), r.subtreeFlags = Ft, v2(r, l), Dc(r, TS(Bi.current, kh)), r.child;
                  }
                  Sn = Sn.sibling;
                }
              tn.tail !== null && oo() > BO() && (r.flags |= Kt, Ln = !0, zh(tn, !1), r.lanes = Pm);
            }
          else {
            if (!Ln) {
              var Or = pb(xn);
              if (Or !== null) {
                r.flags |= Kt, Ln = !0;
                var ja = Or.updateQueue;
                if (ja !== null && (r.updateQueue = ja, r.flags |= rn), zh(tn, !0), tn.tail === null && tn.tailMode === "hidden" && !xn.alternate && !Cr())
                  return Sr(r), null;
              } else
                // The time it took to render last row is greater than the remaining
                // time we have to render. So rendering one more row would likely
                // exceed it.
                oo() * 2 - tn.renderingStartTime > BO() && l !== _r && (r.flags |= Kt, Ln = !0, zh(tn, !1), r.lanes = Pm);
            }
            if (tn.isBackwards)
              xn.sibling = r.child, r.child = xn;
            else {
              var oa = tn.last;
              oa !== null ? oa.sibling = xn : r.child = xn, tn.last = xn;
            }
          }
          if (tn.tail !== null) {
            var ra = tn.tail;
            tn.rendering = ra, tn.tail = ra.sibling, tn.renderingStartTime = oo(), ra.sibling = null;
            var Ur = Bi.current;
            return Ln ? Ur = TS(Ur, kh) : Ur = Zp(Ur), Dc(r, Ur), ra;
          }
          return Sr(r), null;
        }
        case te:
          break;
        case Z:
        case q: {
          NT(r);
          var Dl = r.memoizedState, ff = Dl !== null;
          if (n !== null) {
            var tv = n.memoizedState, Ps = tv !== null;
            Ps !== ff && // LegacyHidden doesn't do any hiding — it only pre-renders.
            !se && (r.flags |= ss);
          }
          return !ff || (r.mode & un) === Ut ? Sr(r) : Br(Ns, _r) && (Sr(r), r.subtreeFlags & (Wn | rn) && (r.flags |= ss)), null;
        }
        case Q:
          return null;
        case re:
          return null;
      }
      throw new Error("Unknown unit of work tag (" + r.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function mB(n, r, l) {
      switch (Vx(r), r.tag) {
        case b: {
          var u = r.type;
          ws(u) && Uy(r);
          var h = r.flags;
          return h & Uo ? (r.flags = h & ~Uo | Kt, (r.mode & Ht) !== Ut && QS(r), r) : null;
        }
        case R: {
          r.stateNode, Xp(r), Ax(r), ES();
          var C = r.flags;
          return (C & Uo) !== Ft && (C & Kt) === Ft ? (r.flags = C & ~Uo | Kt, r) : null;
        }
        case k:
          return xS(r), null;
        case B: {
          Jp(r);
          var E = r.memoizedState;
          if (E !== null && E.dehydrated !== null) {
            if (r.alternate === null)
              throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
            Gp();
          }
          var L = r.flags;
          return L & Uo ? (r.flags = L & ~Uo | Kt, (r.mode & Ht) !== Ut && QS(r), r) : null;
        }
        case W:
          return Jp(r), null;
        case D:
          return Xp(r), null;
        case _:
          var j = r.type._context;
          return Kx(j, r), null;
        case Z:
        case q:
          return NT(r), null;
        case Q:
          return null;
        default:
          return null;
      }
    }
    function yO(n, r, l) {
      switch (Vx(r), r.tag) {
        case b: {
          var u = r.type.childContextTypes;
          u != null && Uy(r);
          break;
        }
        case R: {
          r.stateNode, Xp(r), Ax(r), ES();
          break;
        }
        case k: {
          xS(r);
          break;
        }
        case D:
          Xp(r);
          break;
        case B:
          Jp(r);
          break;
        case W:
          Jp(r);
          break;
        case _:
          var h = r.type._context;
          Kx(h, r);
          break;
        case Z:
        case q:
          NT(r);
          break;
      }
    }
    var bO = null;
    bO = /* @__PURE__ */ new Set();
    var Lb = !1, Tr = !1, hB = typeof WeakSet == "function" ? WeakSet : Set, It = null, af = null, sf = null;
    function vB(n) {
      Qs(null, function() {
        throw n;
      }), gm();
    }
    var gB = function(n, r) {
      if (r.props = n.memoizedProps, r.state = n.memoizedState, n.mode & Ht)
        try {
          Ds(), r.componentWillUnmount();
        } finally {
          ks(n);
        }
      else
        r.componentWillUnmount();
    };
    function CO(n, r) {
      try {
        Pc(nr, n);
      } catch (l) {
        Kn(n, r, l);
      }
    }
    function hT(n, r, l) {
      try {
        gB(n, l);
      } catch (u) {
        Kn(n, r, u);
      }
    }
    function yB(n, r, l) {
      try {
        l.componentDidMount();
      } catch (u) {
        Kn(n, r, u);
      }
    }
    function xO(n, r) {
      try {
        TO(n);
      } catch (l) {
        Kn(n, r, l);
      }
    }
    function lf(n, r) {
      var l = n.ref;
      if (l !== null)
        if (typeof l == "function") {
          var u;
          try {
            if (be && Ce && n.mode & Ht)
              try {
                Ds(), u = l(null);
              } finally {
                ks(n);
              }
            else
              u = l(null);
          } catch (h) {
            Kn(n, r, h);
          }
          typeof u == "function" && f("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", on(n));
        } else
          l.current = null;
    }
    function Ab(n, r, l) {
      try {
        l();
      } catch (u) {
        Kn(n, r, u);
      }
    }
    var SO = !1;
    function bB(n, r) {
      PA(n.containerInfo), It = r, CB();
      var l = SO;
      return SO = !1, l;
    }
    function CB() {
      for (; It !== null; ) {
        var n = It, r = n.child;
        (n.subtreeFlags & Zl) !== Ft && r !== null ? (r.return = n, It = r) : xB();
      }
    }
    function xB() {
      for (; It !== null; ) {
        var n = It;
        $n(n);
        try {
          SB(n);
        } catch (l) {
          Kn(n, n.return, l);
        }
        ko();
        var r = n.sibling;
        if (r !== null) {
          r.return = n.return, It = r;
          return;
        }
        It = n.return;
      }
    }
    function SB(n) {
      var r = n.alternate, l = n.flags;
      if ((l & da) !== Ft) {
        switch ($n(n), n.tag) {
          case g:
          case A:
          case F:
            break;
          case b: {
            if (r !== null) {
              var u = r.memoizedProps, h = r.memoizedState, C = n.stateNode;
              n.type === n.elementType && !td && (C.props !== n.memoizedProps && f("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", on(n) || "instance"), C.state !== n.memoizedState && f("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", on(n) || "instance"));
              var E = C.getSnapshotBeforeUpdate(n.elementType === n.type ? u : _i(n.type, u), h);
              {
                var L = bO;
                E === void 0 && !L.has(n.type) && (L.add(n.type), f("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", on(n)));
              }
              C.__reactInternalSnapshotBeforeUpdate = E;
            }
            break;
          }
          case R: {
            {
              var j = n.stateNode;
              o_(j.containerInfo);
            }
            break;
          }
          case k:
          case $:
          case D:
          case H:
            break;
          default:
            throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
        ko();
      }
    }
    function Fi(n, r, l) {
      var u = r.updateQueue, h = u !== null ? u.lastEffect : null;
      if (h !== null) {
        var C = h.next, E = C;
        do {
          if ((E.tag & n) === n) {
            var L = E.destroy;
            E.destroy = void 0, L !== void 0 && ((n & xr) !== Ta ? Qd(r) : (n & nr) !== Ta && Xd(r), (n & Es) !== Ta && Zh(!0), Ab(r, l, L), (n & Es) !== Ta && Zh(!1), (n & xr) !== Ta ? qg() : (n & nr) !== Ta && Jl());
          }
          E = E.next;
        } while (E !== C);
      }
    }
    function Pc(n, r) {
      var l = r.updateQueue, u = l !== null ? l.lastEffect : null;
      if (u !== null) {
        var h = u.next, C = h;
        do {
          if ((C.tag & n) === n) {
            (n & xr) !== Ta ? Gg(r) : (n & nr) !== Ta && Kg(r);
            var E = C.create;
            (n & Es) !== Ta && Zh(!0), C.destroy = E(), (n & Es) !== Ta && Zh(!1), (n & xr) !== Ta ? Dm() : (n & nr) !== Ta && Qg();
            {
              var L = C.destroy;
              if (L !== void 0 && typeof L != "function") {
                var j = void 0;
                (C.tag & nr) !== Ft ? j = "useLayoutEffect" : (C.tag & Es) !== Ft ? j = "useInsertionEffect" : j = "useEffect";
                var G = void 0;
                L === null ? G = " You returned null. If your effect does not require clean up, return undefined (or nothing)." : typeof L.then == "function" ? G = `

It looks like you wrote ` + j + `(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:

` + j + `(() => {
  async function fetchData() {
    // You can await here
    const response = await MyAPI.getData(someId);
    // ...
  }
  fetchData();
}, [someId]); // Or [] if effect doesn't need props or state

Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching` : G = " You returned: " + L, f("%s must not return anything besides a function, which is used for clean-up.%s", j, G);
              }
            }
          }
          C = C.next;
        } while (C !== h);
      }
    }
    function TB(n, r) {
      if ((r.flags & rn) !== Ft)
        switch (r.tag) {
          case V: {
            var l = r.stateNode.passiveEffectDuration, u = r.memoizedProps, h = u.id, C = u.onPostCommit, E = HR(), L = r.alternate === null ? "mount" : "update";
            UR() && (L = "nested-update"), typeof C == "function" && C(h, L, l, E);
            var j = r.return;
            e:
              for (; j !== null; ) {
                switch (j.tag) {
                  case R:
                    var G = j.stateNode;
                    G.passiveEffectDuration += l;
                    break e;
                  case V:
                    var X = j.stateNode;
                    X.passiveEffectDuration += l;
                    break e;
                }
                j = j.return;
              }
            break;
          }
        }
    }
    function wB(n, r, l, u) {
      if ((l.flags & dr) !== Ft)
        switch (l.tag) {
          case g:
          case A:
          case F: {
            if (!Tr)
              if (l.mode & Ht)
                try {
                  Ds(), Pc(nr | tr, l);
                } finally {
                  ks(l);
                }
              else
                Pc(nr | tr, l);
            break;
          }
          case b: {
            var h = l.stateNode;
            if (l.flags & rn && !Tr)
              if (r === null)
                if (l.type === l.elementType && !td && (h.props !== l.memoizedProps && f("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", on(l) || "instance"), h.state !== l.memoizedState && f("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", on(l) || "instance")), l.mode & Ht)
                  try {
                    Ds(), h.componentDidMount();
                  } finally {
                    ks(l);
                  }
                else
                  h.componentDidMount();
              else {
                var C = l.elementType === l.type ? r.memoizedProps : _i(l.type, r.memoizedProps), E = r.memoizedState;
                if (l.type === l.elementType && !td && (h.props !== l.memoizedProps && f("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", on(l) || "instance"), h.state !== l.memoizedState && f("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", on(l) || "instance")), l.mode & Ht)
                  try {
                    Ds(), h.componentDidUpdate(C, E, h.__reactInternalSnapshotBeforeUpdate);
                  } finally {
                    ks(l);
                  }
                else
                  h.componentDidUpdate(C, E, h.__reactInternalSnapshotBeforeUpdate);
              }
            var L = l.updateQueue;
            L !== null && (l.type === l.elementType && !td && (h.props !== l.memoizedProps && f("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", on(l) || "instance"), h.state !== l.memoizedState && f("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", on(l) || "instance")), oR(l, L, h));
            break;
          }
          case R: {
            var j = l.updateQueue;
            if (j !== null) {
              var G = null;
              if (l.child !== null)
                switch (l.child.tag) {
                  case k:
                    G = l.child.stateNode;
                    break;
                  case b:
                    G = l.child.stateNode;
                    break;
                }
              oR(l, j, G);
            }
            break;
          }
          case k: {
            var X = l.stateNode;
            if (r === null && l.flags & rn) {
              var he = l.type, pe = l.memoizedProps;
              UA(X, he, pe);
            }
            break;
          }
          case $:
            break;
          case D:
            break;
          case V: {
            {
              var Ne = l.memoizedProps, Pe = Ne.onCommit, Ke = Ne.onRender, Ot = l.stateNode.effectDuration, jt = HR(), Bt = r === null ? "mount" : "update";
              UR() && (Bt = "nested-update"), typeof Ke == "function" && Ke(l.memoizedProps.id, Bt, l.actualDuration, l.treeBaseDuration, l.actualStartTime, jt);
              {
                typeof Pe == "function" && Pe(l.memoizedProps.id, Bt, Ot, jt), xz(l);
                var gn = l.return;
                e:
                  for (; gn !== null; ) {
                    switch (gn.tag) {
                      case R:
                        var mn = gn.stateNode;
                        mn.effectDuration += Ot;
                        break e;
                      case V:
                        var Ee = gn.stateNode;
                        Ee.effectDuration += Ot;
                        break e;
                    }
                    gn = gn.return;
                  }
              }
            }
            break;
          }
          case B: {
            PB(n, l);
            break;
          }
          case W:
          case H:
          case te:
          case Z:
          case q:
          case re:
            break;
          default:
            throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
      Tr || l.flags & Nr && TO(l);
    }
    function EB(n) {
      switch (n.tag) {
        case g:
        case A:
        case F: {
          if (n.mode & Ht)
            try {
              Ds(), CO(n, n.return);
            } finally {
              ks(n);
            }
          else
            CO(n, n.return);
          break;
        }
        case b: {
          var r = n.stateNode;
          typeof r.componentDidMount == "function" && yB(n, n.return, r), xO(n, n.return);
          break;
        }
        case k: {
          xO(n, n.return);
          break;
        }
      }
    }
    function RB(n, r) {
      for (var l = null, u = n; ; ) {
        if (u.tag === k) {
          if (l === null) {
            l = u;
            try {
              var h = u.stateNode;
              r ? JA(h) : t_(u.stateNode, u.memoizedProps);
            } catch (E) {
              Kn(n, n.return, E);
            }
          }
        } else if (u.tag === $) {
          if (l === null)
            try {
              var C = u.stateNode;
              r ? e_(C) : n_(C, u.memoizedProps);
            } catch (E) {
              Kn(n, n.return, E);
            }
        } else if (!((u.tag === Z || u.tag === q) && u.memoizedState !== null && u !== n)) {
          if (u.child !== null) {
            u.child.return = u, u = u.child;
            continue;
          }
        }
        if (u === n)
          return;
        for (; u.sibling === null; ) {
          if (u.return === null || u.return === n)
            return;
          l === u && (l = null), u = u.return;
        }
        l === u && (l = null), u.sibling.return = u.return, u = u.sibling;
      }
    }
    function TO(n) {
      var r = n.ref;
      if (r !== null) {
        var l = n.stateNode, u;
        switch (n.tag) {
          case k:
            u = l;
            break;
          default:
            u = l;
        }
        if (typeof r == "function") {
          var h;
          if (n.mode & Ht)
            try {
              Ds(), h = r(u);
            } finally {
              ks(n);
            }
          else
            h = r(u);
          typeof h == "function" && f("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", on(n));
        } else
          r.hasOwnProperty("current") || f("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", on(n)), r.current = u;
      }
    }
    function OB(n) {
      var r = n.alternate;
      r !== null && (r.return = null), n.return = null;
    }
    function wO(n) {
      var r = n.alternate;
      r !== null && (n.alternate = null, wO(r));
      {
        if (n.child = null, n.deletions = null, n.sibling = null, n.tag === k) {
          var l = n.stateNode;
          l !== null && I_(l);
        }
        n.stateNode = null, n._debugOwner = null, n.return = null, n.dependencies = null, n.memoizedProps = null, n.memoizedState = null, n.pendingProps = null, n.stateNode = null, n.updateQueue = null;
      }
    }
    function kB(n) {
      for (var r = n.return; r !== null; ) {
        if (EO(r))
          return r;
        r = r.return;
      }
      throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    function EO(n) {
      return n.tag === k || n.tag === R || n.tag === D;
    }
    function RO(n) {
      var r = n;
      e:
        for (; ; ) {
          for (; r.sibling === null; ) {
            if (r.return === null || EO(r.return))
              return null;
            r = r.return;
          }
          for (r.sibling.return = r.return, r = r.sibling; r.tag !== k && r.tag !== $ && r.tag !== J; ) {
            if (r.flags & Wn || r.child === null || r.tag === D)
              continue e;
            r.child.return = r, r = r.child;
          }
          if (!(r.flags & Wn))
            return r.stateNode;
        }
    }
    function DB(n) {
      var r = kB(n);
      switch (r.tag) {
        case k: {
          var l = r.stateNode;
          r.flags & En && (OE(l), r.flags &= ~En);
          var u = RO(n);
          gT(n, u, l);
          break;
        }
        case R:
        case D: {
          var h = r.stateNode.containerInfo, C = RO(n);
          vT(n, C, h);
          break;
        }
        default:
          throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
    function vT(n, r, l) {
      var u = n.tag, h = u === k || u === $;
      if (h) {
        var C = n.stateNode;
        r ? KA(l, C, r) : GA(l, C);
      } else if (u !== D) {
        var E = n.child;
        if (E !== null) {
          vT(E, r, l);
          for (var L = E.sibling; L !== null; )
            vT(L, r, l), L = L.sibling;
        }
      }
    }
    function gT(n, r, l) {
      var u = n.tag, h = u === k || u === $;
      if (h) {
        var C = n.stateNode;
        r ? qA(l, C, r) : YA(l, C);
      } else if (u !== D) {
        var E = n.child;
        if (E !== null) {
          gT(E, r, l);
          for (var L = E.sibling; L !== null; )
            gT(L, r, l), L = L.sibling;
        }
      }
    }
    var wr = null, ji = !1;
    function MB(n, r, l) {
      {
        var u = r;
        e:
          for (; u !== null; ) {
            switch (u.tag) {
              case k: {
                wr = u.stateNode, ji = !1;
                break e;
              }
              case R: {
                wr = u.stateNode.containerInfo, ji = !0;
                break e;
              }
              case D: {
                wr = u.stateNode.containerInfo, ji = !0;
                break e;
              }
            }
            u = u.return;
          }
        if (wr === null)
          throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        OO(n, r, l), wr = null, ji = !1;
      }
      OB(l);
    }
    function $c(n, r, l) {
      for (var u = l.child; u !== null; )
        OO(n, r, u), u = u.sibling;
    }
    function OO(n, r, l) {
      switch (Om(l), l.tag) {
        case k:
          Tr || lf(l, r);
        case $: {
          {
            var u = wr, h = ji;
            wr = null, $c(n, r, l), wr = u, ji = h, wr !== null && (ji ? XA(wr, l.stateNode) : QA(wr, l.stateNode));
          }
          return;
        }
        case J: {
          wr !== null && (ji ? ZA(wr, l.stateNode) : kx(wr, l.stateNode));
          return;
        }
        case D: {
          {
            var C = wr, E = ji;
            wr = l.stateNode.containerInfo, ji = !0, $c(n, r, l), wr = C, ji = E;
          }
          return;
        }
        case g:
        case A:
        case M:
        case F: {
          if (!Tr) {
            var L = l.updateQueue;
            if (L !== null) {
              var j = L.lastEffect;
              if (j !== null) {
                var G = j.next, X = G;
                do {
                  var he = X, pe = he.destroy, Ne = he.tag;
                  pe !== void 0 && ((Ne & Es) !== Ta ? Ab(l, r, pe) : (Ne & nr) !== Ta && (Xd(l), l.mode & Ht ? (Ds(), Ab(l, r, pe), ks(l)) : Ab(l, r, pe), Jl())), X = X.next;
                } while (X !== G);
              }
            }
          }
          $c(n, r, l);
          return;
        }
        case b: {
          if (!Tr) {
            lf(l, r);
            var Pe = l.stateNode;
            typeof Pe.componentWillUnmount == "function" && hT(l, r, Pe);
          }
          $c(n, r, l);
          return;
        }
        case te: {
          $c(n, r, l);
          return;
        }
        case Z: {
          if (
            // TODO: Remove this dead flag
            l.mode & un
          ) {
            var Ke = Tr;
            Tr = Ke || l.memoizedState !== null, $c(n, r, l), Tr = Ke;
          } else
            $c(n, r, l);
          break;
        }
        default: {
          $c(n, r, l);
          return;
        }
      }
    }
    function NB(n) {
      n.memoizedState;
    }
    function PB(n, r) {
      var l = r.memoizedState;
      if (l === null) {
        var u = r.alternate;
        if (u !== null) {
          var h = u.memoizedState;
          if (h !== null) {
            var C = h.dehydrated;
            C !== null && g_(C);
          }
        }
      }
    }
    function kO(n) {
      var r = n.updateQueue;
      if (r !== null) {
        n.updateQueue = null;
        var l = n.stateNode;
        l === null && (l = n.stateNode = new hB()), r.forEach(function(u) {
          var h = kz.bind(null, n, u);
          if (!l.has(u)) {
            if (l.add(u), Jo)
              if (af !== null && sf !== null)
                Xh(sf, af);
              else
                throw Error("Expected finished root and lanes to be set. This is a bug in React.");
            u.then(h, h);
          }
        });
      }
    }
    function $B(n, r, l) {
      af = l, sf = n, $n(r), DO(r, n), $n(r), af = null, sf = null;
    }
    function Ui(n, r, l) {
      var u = r.deletions;
      if (u !== null)
        for (var h = 0; h < u.length; h++) {
          var C = u[h];
          try {
            MB(n, r, C);
          } catch (j) {
            Kn(C, r, j);
          }
        }
      var E = O0();
      if (r.subtreeFlags & Ir)
        for (var L = r.child; L !== null; )
          $n(L), DO(L, n), L = L.sibling;
      $n(E);
    }
    function DO(n, r, l) {
      var u = n.alternate, h = n.flags;
      switch (n.tag) {
        case g:
        case A:
        case M:
        case F: {
          if (Ui(r, n), Ms(n), h & rn) {
            try {
              Fi(Es | tr, n, n.return), Pc(Es | tr, n);
            } catch (qt) {
              Kn(n, n.return, qt);
            }
            if (n.mode & Ht) {
              try {
                Ds(), Fi(nr | tr, n, n.return);
              } catch (qt) {
                Kn(n, n.return, qt);
              }
              ks(n);
            } else
              try {
                Fi(nr | tr, n, n.return);
              } catch (qt) {
                Kn(n, n.return, qt);
              }
          }
          return;
        }
        case b: {
          Ui(r, n), Ms(n), h & Nr && u !== null && lf(u, u.return);
          return;
        }
        case k: {
          Ui(r, n), Ms(n), h & Nr && u !== null && lf(u, u.return);
          {
            if (n.flags & En) {
              var C = n.stateNode;
              try {
                OE(C);
              } catch (qt) {
                Kn(n, n.return, qt);
              }
            }
            if (h & rn) {
              var E = n.stateNode;
              if (E != null) {
                var L = n.memoizedProps, j = u !== null ? u.memoizedProps : L, G = n.type, X = n.updateQueue;
                if (n.updateQueue = null, X !== null)
                  try {
                    HA(E, X, G, j, L, n);
                  } catch (qt) {
                    Kn(n, n.return, qt);
                  }
              }
            }
          }
          return;
        }
        case $: {
          if (Ui(r, n), Ms(n), h & rn) {
            if (n.stateNode === null)
              throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
            var he = n.stateNode, pe = n.memoizedProps, Ne = u !== null ? u.memoizedProps : pe;
            try {
              WA(he, Ne, pe);
            } catch (qt) {
              Kn(n, n.return, qt);
            }
          }
          return;
        }
        case R: {
          if (Ui(r, n), Ms(n), h & rn && u !== null) {
            var Pe = u.memoizedState;
            if (Pe.isDehydrated)
              try {
                v_(r.containerInfo);
              } catch (qt) {
                Kn(n, n.return, qt);
              }
          }
          return;
        }
        case D: {
          Ui(r, n), Ms(n);
          return;
        }
        case B: {
          Ui(r, n), Ms(n);
          var Ke = n.child;
          if (Ke.flags & ss) {
            var Ot = Ke.stateNode, jt = Ke.memoizedState, Bt = jt !== null;
            if (Ot.isHidden = Bt, Bt) {
              var gn = Ke.alternate !== null && Ke.alternate.memoizedState !== null;
              gn || fz();
            }
          }
          if (h & rn) {
            try {
              NB(n);
            } catch (qt) {
              Kn(n, n.return, qt);
            }
            kO(n);
          }
          return;
        }
        case Z: {
          var mn = u !== null && u.memoizedState !== null;
          if (
            // TODO: Remove this dead flag
            n.mode & un
          ) {
            var Ee = Tr;
            Tr = Ee || mn, Ui(r, n), Tr = Ee;
          } else
            Ui(r, n);
          if (Ms(n), h & ss) {
            var Qe = n.stateNode, Re = n.memoizedState, dt = Re !== null, kt = n;
            if (Qe.isHidden = dt, dt && !mn && (kt.mode & un) !== Ut) {
              It = kt;
              for (var wt = kt.child; wt !== null; )
                It = wt, LB(wt), wt = wt.sibling;
            }
            RB(kt, dt);
          }
          return;
        }
        case W: {
          Ui(r, n), Ms(n), h & rn && kO(n);
          return;
        }
        case te:
          return;
        default: {
          Ui(r, n), Ms(n);
          return;
        }
      }
    }
    function Ms(n) {
      var r = n.flags;
      if (r & Wn) {
        try {
          DB(n);
        } catch (l) {
          Kn(n, n.return, l);
        }
        n.flags &= ~Wn;
      }
      r & pa && (n.flags &= ~pa);
    }
    function IB(n, r, l) {
      af = l, sf = r, It = n, MO(n, r, l), af = null, sf = null;
    }
    function MO(n, r, l) {
      for (var u = (n.mode & un) !== Ut; It !== null; ) {
        var h = It, C = h.child;
        if (h.tag === Z && u) {
          var E = h.memoizedState !== null, L = E || Lb;
          if (L) {
            yT(n, r, l);
            continue;
          } else {
            var j = h.alternate, G = j !== null && j.memoizedState !== null, X = G || Tr, he = Lb, pe = Tr;
            Lb = L, Tr = X, Tr && !pe && (It = h, AB(h));
            for (var Ne = C; Ne !== null; )
              It = Ne, MO(
                Ne,
                // New root; bubble back up to here and stop.
                r,
                l
              ), Ne = Ne.sibling;
            It = h, Lb = he, Tr = pe, yT(n, r, l);
            continue;
          }
        }
        (h.subtreeFlags & dr) !== Ft && C !== null ? (C.return = h, It = C) : yT(n, r, l);
      }
    }
    function yT(n, r, l) {
      for (; It !== null; ) {
        var u = It;
        if ((u.flags & dr) !== Ft) {
          var h = u.alternate;
          $n(u);
          try {
            wB(r, h, u, l);
          } catch (E) {
            Kn(u, u.return, E);
          }
          ko();
        }
        if (u === n) {
          It = null;
          return;
        }
        var C = u.sibling;
        if (C !== null) {
          C.return = u.return, It = C;
          return;
        }
        It = u.return;
      }
    }
    function LB(n) {
      for (; It !== null; ) {
        var r = It, l = r.child;
        switch (r.tag) {
          case g:
          case A:
          case M:
          case F: {
            if (r.mode & Ht)
              try {
                Ds(), Fi(nr, r, r.return);
              } finally {
                ks(r);
              }
            else
              Fi(nr, r, r.return);
            break;
          }
          case b: {
            lf(r, r.return);
            var u = r.stateNode;
            typeof u.componentWillUnmount == "function" && hT(r, r.return, u);
            break;
          }
          case k: {
            lf(r, r.return);
            break;
          }
          case Z: {
            var h = r.memoizedState !== null;
            if (h) {
              NO(n);
              continue;
            }
            break;
          }
        }
        l !== null ? (l.return = r, It = l) : NO(n);
      }
    }
    function NO(n) {
      for (; It !== null; ) {
        var r = It;
        if (r === n) {
          It = null;
          return;
        }
        var l = r.sibling;
        if (l !== null) {
          l.return = r.return, It = l;
          return;
        }
        It = r.return;
      }
    }
    function AB(n) {
      for (; It !== null; ) {
        var r = It, l = r.child;
        if (r.tag === Z) {
          var u = r.memoizedState !== null;
          if (u) {
            PO(n);
            continue;
          }
        }
        l !== null ? (l.return = r, It = l) : PO(n);
      }
    }
    function PO(n) {
      for (; It !== null; ) {
        var r = It;
        $n(r);
        try {
          EB(r);
        } catch (u) {
          Kn(r, r.return, u);
        }
        if (ko(), r === n) {
          It = null;
          return;
        }
        var l = r.sibling;
        if (l !== null) {
          l.return = r.return, It = l;
          return;
        }
        It = r.return;
      }
    }
    function _B(n, r, l, u) {
      It = r, BB(r, n, l, u);
    }
    function BB(n, r, l, u) {
      for (; It !== null; ) {
        var h = It, C = h.child;
        (h.subtreeFlags & fa) !== Ft && C !== null ? (C.return = h, It = C) : zB(n, r, l, u);
      }
    }
    function zB(n, r, l, u) {
      for (; It !== null; ) {
        var h = It;
        if ((h.flags & Jn) !== Ft) {
          $n(h);
          try {
            VB(r, h, l, u);
          } catch (E) {
            Kn(h, h.return, E);
          }
          ko();
        }
        if (h === n) {
          It = null;
          return;
        }
        var C = h.sibling;
        if (C !== null) {
          C.return = h.return, It = C;
          return;
        }
        It = h.return;
      }
    }
    function VB(n, r, l, u) {
      switch (r.tag) {
        case g:
        case A:
        case F: {
          if (r.mode & Ht) {
            KS();
            try {
              Pc(xr | tr, r);
            } finally {
              qS(r);
            }
          } else
            Pc(xr | tr, r);
          break;
        }
      }
    }
    function FB(n) {
      It = n, jB();
    }
    function jB() {
      for (; It !== null; ) {
        var n = It, r = n.child;
        if ((It.flags & wn) !== Ft) {
          var l = n.deletions;
          if (l !== null) {
            for (var u = 0; u < l.length; u++) {
              var h = l[u];
              It = h, WB(h, n);
            }
            {
              var C = n.alternate;
              if (C !== null) {
                var E = C.child;
                if (E !== null) {
                  C.child = null;
                  do {
                    var L = E.sibling;
                    E.sibling = null, E = L;
                  } while (E !== null);
                }
              }
            }
            It = n;
          }
        }
        (n.subtreeFlags & fa) !== Ft && r !== null ? (r.return = n, It = r) : UB();
      }
    }
    function UB() {
      for (; It !== null; ) {
        var n = It;
        (n.flags & Jn) !== Ft && ($n(n), HB(n), ko());
        var r = n.sibling;
        if (r !== null) {
          r.return = n.return, It = r;
          return;
        }
        It = n.return;
      }
    }
    function HB(n) {
      switch (n.tag) {
        case g:
        case A:
        case F: {
          n.mode & Ht ? (KS(), Fi(xr | tr, n, n.return), qS(n)) : Fi(xr | tr, n, n.return);
          break;
        }
      }
    }
    function WB(n, r) {
      for (; It !== null; ) {
        var l = It;
        $n(l), GB(l, r), ko();
        var u = l.child;
        u !== null ? (u.return = l, It = u) : YB(n);
      }
    }
    function YB(n) {
      for (; It !== null; ) {
        var r = It, l = r.sibling, u = r.return;
        if (wO(r), r === n) {
          It = null;
          return;
        }
        if (l !== null) {
          l.return = u, It = l;
          return;
        }
        It = u;
      }
    }
    function GB(n, r) {
      switch (n.tag) {
        case g:
        case A:
        case F: {
          n.mode & Ht ? (KS(), Fi(xr, n, r), qS(n)) : Fi(xr, n, r);
          break;
        }
      }
    }
    function qB(n) {
      switch (n.tag) {
        case g:
        case A:
        case F: {
          try {
            Pc(nr | tr, n);
          } catch (l) {
            Kn(n, n.return, l);
          }
          break;
        }
        case b: {
          var r = n.stateNode;
          try {
            r.componentDidMount();
          } catch (l) {
            Kn(n, n.return, l);
          }
          break;
        }
      }
    }
    function KB(n) {
      switch (n.tag) {
        case g:
        case A:
        case F: {
          try {
            Pc(xr | tr, n);
          } catch (r) {
            Kn(n, n.return, r);
          }
          break;
        }
      }
    }
    function QB(n) {
      switch (n.tag) {
        case g:
        case A:
        case F: {
          try {
            Fi(nr | tr, n, n.return);
          } catch (l) {
            Kn(n, n.return, l);
          }
          break;
        }
        case b: {
          var r = n.stateNode;
          typeof r.componentWillUnmount == "function" && hT(n, n.return, r);
          break;
        }
      }
    }
    function XB(n) {
      switch (n.tag) {
        case g:
        case A:
        case F:
          try {
            Fi(xr | tr, n, n.return);
          } catch (r) {
            Kn(n, n.return, r);
          }
      }
    }
    if (typeof Symbol == "function" && Symbol.for) {
      var Vh = Symbol.for;
      Vh("selector.component"), Vh("selector.has_pseudo_class"), Vh("selector.role"), Vh("selector.test_id"), Vh("selector.text");
    }
    var ZB = [];
    function JB() {
      ZB.forEach(function(n) {
        return n();
      });
    }
    var ez = i.ReactCurrentActQueue;
    function tz(n) {
      {
        var r = (
          // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
          typeof IS_REACT_ACT_ENVIRONMENT < "u" ? IS_REACT_ACT_ENVIRONMENT : void 0
        ), l = typeof jest < "u";
        return l && r !== !1;
      }
    }
    function $O() {
      {
        var n = (
          // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
          typeof IS_REACT_ACT_ENVIRONMENT < "u" ? IS_REACT_ACT_ENVIRONMENT : void 0
        );
        return !n && ez.current !== null && f("The current testing environment is not configured to support act(...)"), n;
      }
    }
    var nz = Math.ceil, bT = i.ReactCurrentDispatcher, CT = i.ReactCurrentOwner, Er = i.ReactCurrentBatchConfig, Hi = i.ReactCurrentActQueue, ar = (
      /*             */
      0
    ), IO = (
      /*               */
      1
    ), Rr = (
      /*                */
      2
    ), ai = (
      /*                */
      4
    ), El = 0, Fh = 1, nd = 2, _b = 3, jh = 4, LO = 5, xT = 6, vn = ar, ta = null, vo = null, ir = Je, Ns = Je, ST = Tc(Je), sr = El, Uh = null, Bb = Je, Hh = Je, zb = Je, Wh = null, wa = null, TT = 0, AO = 500, _O = 1 / 0, oz = 500, Rl = null;
    function Yh() {
      _O = oo() + oz;
    }
    function BO() {
      return _O;
    }
    var Vb = !1, wT = null, cf = null, od = !1, Ic = null, Gh = Je, ET = [], RT = null, rz = 50, qh = 0, OT = null, kT = !1, Fb = !1, az = 50, uf = 0, jb = null, Kh = jn, Ub = Je, zO = !1;
    function Hb() {
      return ta;
    }
    function na() {
      return (vn & (Rr | ai)) !== ar ? oo() : (Kh !== jn || (Kh = oo()), Kh);
    }
    function Lc(n) {
      var r = n.mode;
      if ((r & un) === Ut)
        return Gt;
      if ((vn & Rr) !== ar && ir !== Je)
        return Mo(ir);
      var l = t2() !== e2;
      if (l) {
        if (Er.transition !== null) {
          var u = Er.transition;
          u._updatedFibers || (u._updatedFibers = /* @__PURE__ */ new Set()), u._updatedFibers.add(n);
        }
        return Ub === hn && (Ub = Lm()), Ub;
      }
      var h = ga();
      if (h !== hn)
        return h;
      var C = zA();
      return C;
    }
    function iz(n) {
      var r = n.mode;
      return (r & un) === Ut ? Gt : K0();
    }
    function lr(n, r, l, u) {
      Mz(), zO && f("useInsertionEffect must not schedule updates."), kT && (Fb = !0), ll(n, l, u), (vn & Rr) !== Je && n === ta ? $z(r) : (Jo && Vm(n, r, l), Iz(r), n === ta && ((vn & Rr) === ar && (Hh = an(Hh, l)), sr === jh && Ac(n, ir)), Ea(n, u), l === Gt && vn === ar && (r.mode & un) === Ut && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
      !Hi.isBatchingLegacy && (Yh(), BE()));
    }
    function sz(n, r, l) {
      var u = n.current;
      u.lanes = r, ll(n, r, l), Ea(n, l);
    }
    function lz(n) {
      return (
        // TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We
        // decided not to enable it.
        (vn & Rr) !== ar
      );
    }
    function Ea(n, r) {
      var l = n.callbackNode;
      Y0(n, r);
      var u = ku(n, n === ta ? ir : Je);
      if (u === Je) {
        l !== null && tk(l), n.callbackNode = null, n.callbackPriority = hn;
        return;
      }
      var h = Co(u), C = n.callbackPriority;
      if (C === h && // Special case related to `act`. If the currently scheduled task is a
      // Scheduler task, rather than an `act` task, cancel it and re-scheduled
      // on the `act` queue.
      !(Hi.current !== null && l !== LT)) {
        l == null && C !== Gt && f("Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.");
        return;
      }
      l != null && tk(l);
      var E;
      if (h === Gt)
        n.tag === wc ? (Hi.isBatchingLegacy !== null && (Hi.didScheduleLegacyUpdate = !0), __(jO.bind(null, n))) : _E(jO.bind(null, n)), Hi.current !== null ? Hi.current.push(Ec) : FA(function() {
          (vn & (Rr | ai)) === ar && Ec();
        }), E = null;
      else {
        var L;
        switch ($u(u)) {
          case pr:
            L = Gd;
            break;
          case er:
            L = Xr;
            break;
          case Di:
            L = Ka;
            break;
          case Nu:
            L = cs;
            break;
          default:
            L = Ka;
            break;
        }
        E = AT(L, VO.bind(null, n));
      }
      n.callbackPriority = h, n.callbackNode = E;
    }
    function VO(n, r) {
      if (M2(), Kh = jn, Ub = Je, (vn & (Rr | ai)) !== ar)
        throw new Error("Should not already be working.");
      var l = n.callbackNode, u = kl();
      if (u && n.callbackNode !== l)
        return null;
      var h = ku(n, n === ta ? ir : Je);
      if (h === Je)
        return null;
      var C = !Mu(n, h) && !ny(n, h) && !r, E = C ? yz(n, h) : Yb(n, h);
      if (E !== El) {
        if (E === nd) {
          var L = $m(n);
          L !== Je && (h = L, E = DT(n, L));
        }
        if (E === Fh) {
          var j = Uh;
          throw rd(n, Je), Ac(n, h), Ea(n, oo()), j;
        }
        if (E === xT)
          Ac(n, h);
        else {
          var G = !Mu(n, h), X = n.current.alternate;
          if (G && !uz(X)) {
            if (E = Yb(n, h), E === nd) {
              var he = $m(n);
              he !== Je && (h = he, E = DT(n, he));
            }
            if (E === Fh) {
              var pe = Uh;
              throw rd(n, Je), Ac(n, h), Ea(n, oo()), pe;
            }
          }
          n.finishedWork = X, n.finishedLanes = h, cz(n, E, h);
        }
      }
      return Ea(n, oo()), n.callbackNode === l ? VO.bind(null, n) : null;
    }
    function DT(n, r) {
      var l = Wh;
      if (Po(n)) {
        var u = rd(n, r);
        u.flags |= co, M_(n.containerInfo);
      }
      var h = Yb(n, r);
      if (h !== nd) {
        var C = wa;
        wa = l, C !== null && FO(C);
      }
      return h;
    }
    function FO(n) {
      wa === null ? wa = n : wa.push.apply(wa, n);
    }
    function cz(n, r, l) {
      switch (r) {
        case El:
        case Fh:
          throw new Error("Root did not complete. This is a bug in React.");
        case nd: {
          ad(n, wa, Rl);
          break;
        }
        case _b: {
          if (Ac(n, l), gp(l) && // do not delay if we're inside an act() scope
          !nk()) {
            var u = TT + AO - oo();
            if (u > 10) {
              var h = ku(n, Je);
              if (h !== Je)
                break;
              var C = n.suspendedLanes;
              if (!sl(C, l)) {
                na(), Bm(n, C);
                break;
              }
              n.timeoutHandle = Rx(ad.bind(null, n, wa, Rl), u);
              break;
            }
          }
          ad(n, wa, Rl);
          break;
        }
        case jh: {
          if (Ac(n, l), ty(l))
            break;
          if (!nk()) {
            var E = ey(n, l), L = E, j = oo() - L, G = Dz(j) - j;
            if (G > 10) {
              n.timeoutHandle = Rx(ad.bind(null, n, wa, Rl), G);
              break;
            }
          }
          ad(n, wa, Rl);
          break;
        }
        case LO: {
          ad(n, wa, Rl);
          break;
        }
        default:
          throw new Error("Unknown root exit status.");
      }
    }
    function uz(n) {
      for (var r = n; ; ) {
        if (r.flags & xu) {
          var l = r.updateQueue;
          if (l !== null) {
            var u = l.stores;
            if (u !== null)
              for (var h = 0; h < u.length; h++) {
                var C = u[h], E = C.getSnapshot, L = C.value;
                try {
                  if (!$t(E(), L))
                    return !1;
                } catch {
                  return !1;
                }
              }
          }
        }
        var j = r.child;
        if (r.subtreeFlags & xu && j !== null) {
          j.return = r, r = j;
          continue;
        }
        if (r === n)
          return !0;
        for (; r.sibling === null; ) {
          if (r.return === null || r.return === n)
            return !0;
          r = r.return;
        }
        r.sibling.return = r.return, r = r.sibling;
      }
      return !0;
    }
    function Ac(n, r) {
      r = ic(r, zb), r = ic(r, Hh), _m(n, r);
    }
    function jO(n) {
      if (N2(), (vn & (Rr | ai)) !== ar)
        throw new Error("Should not already be working.");
      kl();
      var r = ku(n, Je);
      if (!Br(r, Gt))
        return Ea(n, oo()), null;
      var l = Yb(n, r);
      if (n.tag !== wc && l === nd) {
        var u = $m(n);
        u !== Je && (r = u, l = DT(n, u));
      }
      if (l === Fh) {
        var h = Uh;
        throw rd(n, Je), Ac(n, r), Ea(n, oo()), h;
      }
      if (l === xT)
        throw new Error("Root did not complete. This is a bug in React.");
      var C = n.current.alternate;
      return n.finishedWork = C, n.finishedLanes = r, ad(n, wa, Rl), Ea(n, oo()), null;
    }
    function dz(n, r) {
      r !== Je && (sc(n, an(r, Gt)), Ea(n, oo()), (vn & (Rr | ai)) === ar && (Yh(), Ec()));
    }
    function MT(n, r) {
      var l = vn;
      vn |= IO;
      try {
        return n(r);
      } finally {
        vn = l, vn === ar && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
        !Hi.isBatchingLegacy && (Yh(), BE());
      }
    }
    function pz(n, r, l, u, h) {
      var C = ga(), E = Er.transition;
      try {
        return Er.transition = null, No(pr), n(r, l, u, h);
      } finally {
        No(C), Er.transition = E, vn === ar && Yh();
      }
    }
    function Ol(n) {
      Ic !== null && Ic.tag === wc && (vn & (Rr | ai)) === ar && kl();
      var r = vn;
      vn |= IO;
      var l = Er.transition, u = ga();
      try {
        return Er.transition = null, No(pr), n ? n() : void 0;
      } finally {
        No(u), Er.transition = l, vn = r, (vn & (Rr | ai)) === ar && Ec();
      }
    }
    function UO() {
      return (vn & (Rr | ai)) !== ar;
    }
    function Wb(n, r) {
      Vr(ST, Ns, n), Ns = an(Ns, r);
    }
    function NT(n) {
      Ns = ST.current, zr(ST, n);
    }
    function rd(n, r) {
      n.finishedWork = null, n.finishedLanes = Je;
      var l = n.timeoutHandle;
      if (l !== Ox && (n.timeoutHandle = Ox, VA(l)), vo !== null)
        for (var u = vo.return; u !== null; ) {
          var h = u.alternate;
          yO(h, u), u = u.return;
        }
      ta = n;
      var C = id(n.current, null);
      return vo = C, ir = Ns = r, sr = El, Uh = null, Bb = Je, Hh = Je, zb = Je, Wh = null, wa = null, a2(), Ai.discardPendingWarnings(), C;
    }
    function HO(n, r) {
      do {
        var l = vo;
        try {
          if (Jy(), CR(), ko(), CT.current = null, l === null || l.return === null) {
            sr = Fh, Uh = r, vo = null;
            return;
          }
          if (be && l.mode & Ht && Nb(l, !0), De)
            if (Zs(), r !== null && typeof r == "object" && typeof r.then == "function") {
              var u = r;
              Xg(l, u, ir);
            } else
              Zd(l, r, ir);
          A2(n, l.return, l, r, ir), qO(l);
        } catch (h) {
          r = h, vo === l && l !== null ? (l = l.return, vo = l) : l = vo;
          continue;
        }
        return;
      } while (!0);
    }
    function WO() {
      var n = bT.current;
      return bT.current = Rb, n === null ? Rb : n;
    }
    function YO(n) {
      bT.current = n;
    }
    function fz() {
      TT = oo();
    }
    function Qh(n) {
      Bb = an(n, Bb);
    }
    function mz() {
      sr === El && (sr = _b);
    }
    function PT() {
      (sr === El || sr === _b || sr === nd) && (sr = jh), ta !== null && (Du(Bb) || Du(Hh)) && Ac(ta, ir);
    }
    function hz(n) {
      sr !== jh && (sr = nd), Wh === null ? Wh = [n] : Wh.push(n);
    }
    function vz() {
      return sr === El;
    }
    function Yb(n, r) {
      var l = vn;
      vn |= Rr;
      var u = WO();
      if (ta !== n || ir !== r) {
        if (Jo) {
          var h = n.memoizedUpdaters;
          h.size > 0 && (Xh(n, ir), h.clear()), Cp(n, r);
        }
        Rl = Fm(), rd(n, r);
      }
      Ba(r);
      do
        try {
          gz();
          break;
        } catch (C) {
          HO(n, C);
        }
      while (!0);
      if (Jy(), vn = l, YO(u), vo !== null)
        throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
      return tc(), ta = null, ir = Je, sr;
    }
    function gz() {
      for (; vo !== null; )
        GO(vo);
    }
    function yz(n, r) {
      var l = vn;
      vn |= Rr;
      var u = WO();
      if (ta !== n || ir !== r) {
        if (Jo) {
          var h = n.memoizedUpdaters;
          h.size > 0 && (Xh(n, ir), h.clear()), Cp(n, r);
        }
        Rl = Fm(), Yh(), rd(n, r);
      }
      Ba(r);
      do
        try {
          bz();
          break;
        } catch (C) {
          HO(n, C);
        }
      while (!0);
      return Jy(), YO(u), vn = l, vo !== null ? (wu(), El) : (tc(), ta = null, ir = Je, sr);
    }
    function bz() {
      for (; vo !== null && !Yd(); )
        GO(vo);
    }
    function GO(n) {
      var r = n.alternate;
      $n(n);
      var l;
      (n.mode & Ht) !== Ut ? (GS(n), l = $T(r, n, Ns), Nb(n, !0)) : l = $T(r, n, Ns), ko(), n.memoizedProps = n.pendingProps, l === null ? qO(n) : vo = l, CT.current = null;
    }
    function qO(n) {
      var r = n;
      do {
        var l = r.alternate, u = r.return;
        if ((r.flags & qr) === Ft) {
          $n(r);
          var h = void 0;
          if ((r.mode & Ht) === Ut ? h = gO(l, r, Ns) : (GS(r), h = gO(l, r, Ns), Nb(r, !1)), ko(), h !== null) {
            vo = h;
            return;
          }
        } else {
          var C = mB(l, r);
          if (C !== null) {
            C.flags &= jg, vo = C;
            return;
          }
          if ((r.mode & Ht) !== Ut) {
            Nb(r, !1);
            for (var E = r.actualDuration, L = r.child; L !== null; )
              E += L.actualDuration, L = L.sibling;
            r.actualDuration = E;
          }
          if (u !== null)
            u.flags |= qr, u.subtreeFlags = Ft, u.deletions = null;
          else {
            sr = xT, vo = null;
            return;
          }
        }
        var j = r.sibling;
        if (j !== null) {
          vo = j;
          return;
        }
        r = u, vo = r;
      } while (r !== null);
      sr === El && (sr = LO);
    }
    function ad(n, r, l) {
      var u = ga(), h = Er.transition;
      try {
        Er.transition = null, No(pr), Cz(n, r, l, u);
      } finally {
        Er.transition = h, No(u);
      }
      return null;
    }
    function Cz(n, r, l, u) {
      do
        kl();
      while (Ic !== null);
      if (Nz(), (vn & (Rr | ai)) !== ar)
        throw new Error("Should not already be working.");
      var h = n.finishedWork, C = n.finishedLanes;
      if (Kd(C), h === null)
        return km(), null;
      if (C === Je && f("root.finishedLanes should not be empty during a commit. This is a bug in React."), n.finishedWork = null, n.finishedLanes = Je, h === n.current)
        throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
      n.callbackNode = null, n.callbackPriority = hn;
      var E = an(h.lanes, h.childLanes);
      zm(n, E), n === ta && (ta = null, vo = null, ir = Je), ((h.subtreeFlags & fa) !== Ft || (h.flags & fa) !== Ft) && (od || (od = !0, RT = l, AT(Ka, function() {
        return kl(), null;
      })));
      var L = (h.subtreeFlags & (Zl | Ir | dr | fa)) !== Ft, j = (h.flags & (Zl | Ir | dr | fa)) !== Ft;
      if (L || j) {
        var G = Er.transition;
        Er.transition = null;
        var X = ga();
        No(pr);
        var he = vn;
        vn |= ai, CT.current = null, bB(n, h), WR(), $B(n, h, C), $A(n.containerInfo), n.current = h, Zg(C), IB(h, n, C), ec(), Wg(), vn = he, No(X), Er.transition = G;
      } else
        n.current = h, WR();
      var pe = od;
      if (od ? (od = !1, Ic = n, Gh = C) : (uf = 0, jb = null), E = n.pendingLanes, E === Je && (cf = null), pe || ZO(n.current, !1), Ri(h.stateNode, u), Jo && n.memoizedUpdaters.clear(), JB(), Ea(n, oo()), r !== null)
        for (var Ne = n.onRecoverableError, Pe = 0; Pe < r.length; Pe++) {
          var Ke = r[Pe], Ot = Ke.stack, jt = Ke.digest;
          Ne(Ke.value, {
            componentStack: Ot,
            digest: jt
          });
        }
      if (Vb) {
        Vb = !1;
        var Bt = wT;
        throw wT = null, Bt;
      }
      return Br(Gh, Gt) && n.tag !== wc && kl(), E = n.pendingLanes, Br(E, Gt) ? (D2(), n === OT ? qh++ : (qh = 0, OT = n)) : qh = 0, Ec(), km(), null;
    }
    function kl() {
      if (Ic !== null) {
        var n = $u(Gh), r = X0(Di, n), l = Er.transition, u = ga();
        try {
          return Er.transition = null, No(r), Sz();
        } finally {
          No(u), Er.transition = l;
        }
      }
      return !1;
    }
    function xz(n) {
      ET.push(n), od || (od = !0, AT(Ka, function() {
        return kl(), null;
      }));
    }
    function Sz() {
      if (Ic === null)
        return !1;
      var n = RT;
      RT = null;
      var r = Ic, l = Gh;
      if (Ic = null, Gh = Je, (vn & (Rr | ai)) !== ar)
        throw new Error("Cannot flush passive effects while already rendering.");
      kT = !0, Fb = !1, Jg(l);
      var u = vn;
      vn |= ai, FB(r.current), _B(r, r.current, l, n);
      {
        var h = ET;
        ET = [];
        for (var C = 0; C < h.length; C++) {
          var E = h[C];
          TB(r, E);
        }
      }
      Tu(), ZO(r.current, !0), vn = u, Ec(), Fb ? r === jb ? uf++ : (uf = 0, jb = r) : uf = 0, kT = !1, Fb = !1, ds(r);
      {
        var L = r.current.stateNode;
        L.effectDuration = 0, L.passiveEffectDuration = 0;
      }
      return !0;
    }
    function KO(n) {
      return cf !== null && cf.has(n);
    }
    function Tz(n) {
      cf === null ? cf = /* @__PURE__ */ new Set([n]) : cf.add(n);
    }
    function wz(n) {
      Vb || (Vb = !0, wT = n);
    }
    var Ez = wz;
    function QO(n, r, l) {
      var u = ed(l, r), h = GR(n, u, Gt), C = Oc(n, h, Gt), E = na();
      C !== null && (ll(C, Gt, E), Ea(C, E));
    }
    function Kn(n, r, l) {
      if (vB(l), Zh(!1), n.tag === R) {
        QO(n, n, l);
        return;
      }
      var u = null;
      for (u = r; u !== null; ) {
        if (u.tag === R) {
          QO(u, n, l);
          return;
        } else if (u.tag === b) {
          var h = u.type, C = u.stateNode;
          if (typeof h.getDerivedStateFromError == "function" || typeof C.componentDidCatch == "function" && !KO(C)) {
            var E = ed(l, n), L = JS(u, E, Gt), j = Oc(u, L, Gt), G = na();
            j !== null && (ll(j, Gt, G), Ea(j, G));
            return;
          }
        }
        u = u.return;
      }
      f(`Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.

Error message:

%s`, l);
    }
    function Rz(n, r, l) {
      var u = n.pingCache;
      u !== null && u.delete(r);
      var h = na();
      Bm(n, l), Lz(n), ta === n && sl(ir, l) && (sr === jh || sr === _b && gp(ir) && oo() - TT < AO ? rd(n, Je) : zb = an(zb, l)), Ea(n, h);
    }
    function XO(n, r) {
      r === hn && (r = iz(n));
      var l = na(), u = Sa(n, r);
      u !== null && (ll(u, r, l), Ea(u, l));
    }
    function Oz(n) {
      var r = n.memoizedState, l = hn;
      r !== null && (l = r.retryLane), XO(n, l);
    }
    function kz(n, r) {
      var l = hn, u;
      switch (n.tag) {
        case B:
          u = n.stateNode;
          var h = n.memoizedState;
          h !== null && (l = h.retryLane);
          break;
        case W:
          u = n.stateNode;
          break;
        default:
          throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
      }
      u !== null && u.delete(r), XO(n, l);
    }
    function Dz(n) {
      return n < 120 ? 120 : n < 480 ? 480 : n < 1080 ? 1080 : n < 1920 ? 1920 : n < 3e3 ? 3e3 : n < 4320 ? 4320 : nz(n / 1960) * 1960;
    }
    function Mz() {
      if (qh > rz)
        throw qh = 0, OT = null, new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
      uf > az && (uf = 0, jb = null, f("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render."));
    }
    function Nz() {
      Ai.flushLegacyContextWarning(), Ai.flushPendingUnsafeLifecycleWarnings();
    }
    function ZO(n, r) {
      $n(n), Gb(n, $r, QB), r && Gb(n, Xs, XB), Gb(n, $r, qB), r && Gb(n, Xs, KB), ko();
    }
    function Gb(n, r, l) {
      for (var u = n, h = null; u !== null; ) {
        var C = u.subtreeFlags & r;
        u !== h && u.child !== null && C !== Ft ? u = u.child : ((u.flags & r) !== Ft && l(u), u.sibling !== null ? u = u.sibling : u = h = u.return);
      }
    }
    var qb = null;
    function JO(n) {
      {
        if ((vn & Rr) !== ar || !(n.mode & un))
          return;
        var r = n.tag;
        if (r !== S && r !== R && r !== b && r !== g && r !== A && r !== M && r !== F)
          return;
        var l = on(n) || "ReactComponent";
        if (qb !== null) {
          if (qb.has(l))
            return;
          qb.add(l);
        } else
          qb = /* @__PURE__ */ new Set([l]);
        var u = yo;
        try {
          $n(n), f("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
        } finally {
          u ? $n(n) : ko();
        }
      }
    }
    var $T;
    {
      var Pz = null;
      $T = function(n, r, l) {
        var u = sk(Pz, r);
        try {
          return pO(n, r, l);
        } catch (C) {
          if (W_() || C !== null && typeof C == "object" && typeof C.then == "function")
            throw C;
          if (Jy(), CR(), yO(n, r), sk(r, u), r.mode & Ht && GS(r), Qs(null, pO, null, n, r, l), H0()) {
            var h = gm();
            typeof h == "object" && h !== null && h._suppressLogging && typeof C == "object" && C !== null && !C._suppressLogging && (C._suppressLogging = !0);
          }
          throw C;
        }
      };
    }
    var ek = !1, IT;
    IT = /* @__PURE__ */ new Set();
    function $z(n) {
      if (sa && !R2())
        switch (n.tag) {
          case g:
          case A:
          case F: {
            var r = vo && on(vo) || "Unknown", l = r;
            if (!IT.has(l)) {
              IT.add(l);
              var u = on(n) || "Unknown";
              f("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", u, r, r);
            }
            break;
          }
          case b: {
            ek || (f("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state."), ek = !0);
            break;
          }
        }
    }
    function Xh(n, r) {
      if (Jo) {
        var l = n.memoizedUpdaters;
        l.forEach(function(u) {
          Vm(n, u, r);
        });
      }
    }
    var LT = {};
    function AT(n, r) {
      {
        var l = Hi.current;
        return l !== null ? (l.push(r), LT) : Wd(n, r);
      }
    }
    function tk(n) {
      if (n !== LT)
        return Hg(n);
    }
    function nk() {
      return Hi.current !== null;
    }
    function Iz(n) {
      {
        if (n.mode & un) {
          if (!$O())
            return;
        } else if (!tz() || vn !== ar || n.tag !== g && n.tag !== A && n.tag !== F)
          return;
        if (Hi.current === null) {
          var r = yo;
          try {
            $n(n), f(`An update to %s inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act`, on(n));
          } finally {
            r ? $n(n) : ko();
          }
        }
      }
    }
    function Lz(n) {
      n.tag !== wc && $O() && Hi.current === null && f(`A suspended resource finished loading inside a test, but the event was not wrapped in act(...).

When testing, code that resolves suspended data should be wrapped into act(...):

act(() => {
  /* finish loading suspended data */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act`);
    }
    function Zh(n) {
      zO = n;
    }
    var ii = null, df = null, Az = function(n) {
      ii = n;
    };
    function pf(n) {
      {
        if (ii === null)
          return n;
        var r = ii(n);
        return r === void 0 ? n : r.current;
      }
    }
    function _T(n) {
      return pf(n);
    }
    function BT(n) {
      {
        if (ii === null)
          return n;
        var r = ii(n);
        if (r === void 0) {
          if (n != null && typeof n.render == "function") {
            var l = pf(n.render);
            if (n.render !== l) {
              var u = {
                $$typeof: go,
                render: l
              };
              return n.displayName !== void 0 && (u.displayName = n.displayName), u;
            }
          }
          return n;
        }
        return r.current;
      }
    }
    function ok(n, r) {
      {
        if (ii === null)
          return !1;
        var l = n.elementType, u = r.type, h = !1, C = typeof u == "object" && u !== null ? u.$$typeof : null;
        switch (n.tag) {
          case b: {
            typeof u == "function" && (h = !0);
            break;
          }
          case g: {
            (typeof u == "function" || C === bt) && (h = !0);
            break;
          }
          case A: {
            (C === go || C === bt) && (h = !0);
            break;
          }
          case M:
          case F: {
            (C === rt || C === bt) && (h = !0);
            break;
          }
          default:
            return !1;
        }
        if (h) {
          var E = ii(l);
          if (E !== void 0 && E === ii(u))
            return !0;
        }
        return !1;
      }
    }
    function rk(n) {
      {
        if (ii === null || typeof WeakSet != "function")
          return;
        df === null && (df = /* @__PURE__ */ new WeakSet()), df.add(n);
      }
    }
    var _z = function(n, r) {
      {
        if (ii === null)
          return;
        var l = r.staleFamilies, u = r.updatedFamilies;
        kl(), Ol(function() {
          zT(n.current, u, l);
        });
      }
    }, Bz = function(n, r) {
      {
        if (n.context !== Va)
          return;
        kl(), Ol(function() {
          Jh(r, n, null, null);
        });
      }
    };
    function zT(n, r, l) {
      {
        var u = n.alternate, h = n.child, C = n.sibling, E = n.tag, L = n.type, j = null;
        switch (E) {
          case g:
          case F:
          case b:
            j = L;
            break;
          case A:
            j = L.render;
            break;
        }
        if (ii === null)
          throw new Error("Expected resolveFamily to be set during hot reload.");
        var G = !1, X = !1;
        if (j !== null) {
          var he = ii(j);
          he !== void 0 && (l.has(he) ? X = !0 : r.has(he) && (E === b ? X = !0 : G = !0));
        }
        if (df !== null && (df.has(n) || u !== null && df.has(u)) && (X = !0), X && (n._debugNeedsRemount = !0), X || G) {
          var pe = Sa(n, Gt);
          pe !== null && lr(pe, n, Gt, jn);
        }
        h !== null && !X && zT(h, r, l), C !== null && zT(C, r, l);
      }
    }
    var zz = function(n, r) {
      {
        var l = /* @__PURE__ */ new Set(), u = new Set(r.map(function(h) {
          return h.current;
        }));
        return VT(n.current, u, l), l;
      }
    };
    function VT(n, r, l) {
      {
        var u = n.child, h = n.sibling, C = n.tag, E = n.type, L = null;
        switch (C) {
          case g:
          case F:
          case b:
            L = E;
            break;
          case A:
            L = E.render;
            break;
        }
        var j = !1;
        L !== null && r.has(L) && (j = !0), j ? Vz(n, l) : u !== null && VT(u, r, l), h !== null && VT(h, r, l);
      }
    }
    function Vz(n, r) {
      {
        var l = Fz(n, r);
        if (l)
          return;
        for (var u = n; ; ) {
          switch (u.tag) {
            case k:
              r.add(u.stateNode);
              return;
            case D:
              r.add(u.stateNode.containerInfo);
              return;
            case R:
              r.add(u.stateNode.containerInfo);
              return;
          }
          if (u.return === null)
            throw new Error("Expected to reach root first.");
          u = u.return;
        }
      }
    }
    function Fz(n, r) {
      for (var l = n, u = !1; ; ) {
        if (l.tag === k)
          u = !0, r.add(l.stateNode);
        else if (l.child !== null) {
          l.child.return = l, l = l.child;
          continue;
        }
        if (l === n)
          return u;
        for (; l.sibling === null; ) {
          if (l.return === null || l.return === n)
            return u;
          l = l.return;
        }
        l.sibling.return = l.return, l = l.sibling;
      }
      return !1;
    }
    var FT;
    {
      FT = !1;
      try {
        var ak = Object.preventExtensions({});
      } catch {
        FT = !0;
      }
    }
    function jz(n, r, l, u) {
      this.tag = n, this.key = l, this.elementType = null, this.type = null, this.stateNode = null, this.return = null, this.child = null, this.sibling = null, this.index = 0, this.ref = null, this.pendingProps = r, this.memoizedProps = null, this.updateQueue = null, this.memoizedState = null, this.dependencies = null, this.mode = u, this.flags = Ft, this.subtreeFlags = Ft, this.deletions = null, this.lanes = Je, this.childLanes = Je, this.alternate = null, this.actualDuration = Number.NaN, this.actualStartTime = Number.NaN, this.selfBaseDuration = Number.NaN, this.treeBaseDuration = Number.NaN, this.actualDuration = 0, this.actualStartTime = -1, this.selfBaseDuration = 0, this.treeBaseDuration = 0, this._debugSource = null, this._debugOwner = null, this._debugNeedsRemount = !1, this._debugHookTypes = null, !FT && typeof Object.preventExtensions == "function" && Object.preventExtensions(this);
    }
    var Fa = function(n, r, l, u) {
      return new jz(n, r, l, u);
    };
    function jT(n) {
      var r = n.prototype;
      return !!(r && r.isReactComponent);
    }
    function Uz(n) {
      return typeof n == "function" && !jT(n) && n.defaultProps === void 0;
    }
    function Hz(n) {
      if (typeof n == "function")
        return jT(n) ? b : g;
      if (n != null) {
        var r = n.$$typeof;
        if (r === go)
          return A;
        if (r === rt)
          return M;
      }
      return S;
    }
    function id(n, r) {
      var l = n.alternate;
      l === null ? (l = Fa(n.tag, r, n.key, n.mode), l.elementType = n.elementType, l.type = n.type, l.stateNode = n.stateNode, l._debugSource = n._debugSource, l._debugOwner = n._debugOwner, l._debugHookTypes = n._debugHookTypes, l.alternate = n, n.alternate = l) : (l.pendingProps = r, l.type = n.type, l.flags = Ft, l.subtreeFlags = Ft, l.deletions = null, l.actualDuration = 0, l.actualStartTime = -1), l.flags = n.flags & Zo, l.childLanes = n.childLanes, l.lanes = n.lanes, l.child = n.child, l.memoizedProps = n.memoizedProps, l.memoizedState = n.memoizedState, l.updateQueue = n.updateQueue;
      var u = n.dependencies;
      switch (l.dependencies = u === null ? null : {
        lanes: u.lanes,
        firstContext: u.firstContext
      }, l.sibling = n.sibling, l.index = n.index, l.ref = n.ref, l.selfBaseDuration = n.selfBaseDuration, l.treeBaseDuration = n.treeBaseDuration, l._debugNeedsRemount = n._debugNeedsRemount, l.tag) {
        case S:
        case g:
        case F:
          l.type = pf(n.type);
          break;
        case b:
          l.type = _T(n.type);
          break;
        case A:
          l.type = BT(n.type);
          break;
      }
      return l;
    }
    function Wz(n, r) {
      n.flags &= Zo | Wn;
      var l = n.alternate;
      if (l === null)
        n.childLanes = Je, n.lanes = r, n.child = null, n.subtreeFlags = Ft, n.memoizedProps = null, n.memoizedState = null, n.updateQueue = null, n.dependencies = null, n.stateNode = null, n.selfBaseDuration = 0, n.treeBaseDuration = 0;
      else {
        n.childLanes = l.childLanes, n.lanes = l.lanes, n.child = l.child, n.subtreeFlags = Ft, n.deletions = null, n.memoizedProps = l.memoizedProps, n.memoizedState = l.memoizedState, n.updateQueue = l.updateQueue, n.type = l.type;
        var u = l.dependencies;
        n.dependencies = u === null ? null : {
          lanes: u.lanes,
          firstContext: u.firstContext
        }, n.selfBaseDuration = l.selfBaseDuration, n.treeBaseDuration = l.treeBaseDuration;
      }
      return n;
    }
    function Yz(n, r, l) {
      var u;
      return n === Wy ? (u = un, r === !0 && (u |= ro, u |= ha)) : u = Ut, Jo && (u |= Ht), Fa(R, null, null, u);
    }
    function UT(n, r, l, u, h, C) {
      var E = S, L = n;
      if (typeof n == "function")
        jT(n) ? (E = b, L = _T(L)) : L = pf(L);
      else if (typeof n == "string")
        E = k;
      else
        e:
          switch (n) {
            case Xo:
              return _c(l.children, h, C, r);
            case Bo:
              E = O, h |= ro, (h & un) !== Ut && (h |= ha);
              break;
            case zo:
              return Gz(l, h, C, r);
            case ze:
              return qz(l, h, C, r);
            case ge:
              return Kz(l, h, C, r);
            case dn:
              return ik(l, h, C, r);
            case cr:
            case sn:
            case zl:
            case T0:
            case yt:
            default: {
              if (typeof n == "object" && n !== null)
                switch (n.$$typeof) {
                  case Dr:
                    E = _;
                    break e;
                  case Vo:
                    E = I;
                    break e;
                  case go:
                    E = A, L = BT(L);
                    break e;
                  case rt:
                    E = M;
                    break e;
                  case bt:
                    E = Y, L = null;
                    break e;
                }
              var j = "";
              {
                (n === void 0 || typeof n == "object" && n !== null && Object.keys(n).length === 0) && (j += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
                var G = u ? on(u) : null;
                G && (j += `

Check the render method of \`` + G + "`.");
              }
              throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (n == null ? n : typeof n) + "." + j));
            }
          }
      var X = Fa(E, l, r, h);
      return X.elementType = n, X.type = L, X.lanes = C, X._debugOwner = u, X;
    }
    function HT(n, r, l) {
      var u = null;
      u = n._owner;
      var h = n.type, C = n.key, E = n.props, L = UT(h, C, E, u, r, l);
      return L._debugSource = n._source, L._debugOwner = n._owner, L;
    }
    function _c(n, r, l, u) {
      var h = Fa(P, n, u, r);
      return h.lanes = l, h;
    }
    function Gz(n, r, l, u) {
      typeof n.id != "string" && f('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof n.id);
      var h = Fa(V, n, u, r | Ht);
      return h.elementType = zo, h.lanes = l, h.stateNode = {
        effectDuration: 0,
        passiveEffectDuration: 0
      }, h;
    }
    function qz(n, r, l, u) {
      var h = Fa(B, n, u, r);
      return h.elementType = ze, h.lanes = l, h;
    }
    function Kz(n, r, l, u) {
      var h = Fa(W, n, u, r);
      return h.elementType = ge, h.lanes = l, h;
    }
    function ik(n, r, l, u) {
      var h = Fa(Z, n, u, r);
      h.elementType = dn, h.lanes = l;
      var C = {
        isHidden: !1
      };
      return h.stateNode = C, h;
    }
    function WT(n, r, l) {
      var u = Fa($, n, null, r);
      return u.lanes = l, u;
    }
    function Qz() {
      var n = Fa(k, null, null, Ut);
      return n.elementType = "DELETED", n;
    }
    function Xz(n) {
      var r = Fa(J, null, null, Ut);
      return r.stateNode = n, r;
    }
    function YT(n, r, l) {
      var u = n.children !== null ? n.children : [], h = Fa(D, u, n.key, r);
      return h.lanes = l, h.stateNode = {
        containerInfo: n.containerInfo,
        pendingChildren: null,
        // Used by persistent updates
        implementation: n.implementation
      }, h;
    }
    function sk(n, r) {
      return n === null && (n = Fa(S, null, null, Ut)), n.tag = r.tag, n.key = r.key, n.elementType = r.elementType, n.type = r.type, n.stateNode = r.stateNode, n.return = r.return, n.child = r.child, n.sibling = r.sibling, n.index = r.index, n.ref = r.ref, n.pendingProps = r.pendingProps, n.memoizedProps = r.memoizedProps, n.updateQueue = r.updateQueue, n.memoizedState = r.memoizedState, n.dependencies = r.dependencies, n.mode = r.mode, n.flags = r.flags, n.subtreeFlags = r.subtreeFlags, n.deletions = r.deletions, n.lanes = r.lanes, n.childLanes = r.childLanes, n.alternate = r.alternate, n.actualDuration = r.actualDuration, n.actualStartTime = r.actualStartTime, n.selfBaseDuration = r.selfBaseDuration, n.treeBaseDuration = r.treeBaseDuration, n._debugSource = r._debugSource, n._debugOwner = r._debugOwner, n._debugNeedsRemount = r._debugNeedsRemount, n._debugHookTypes = r._debugHookTypes, n;
    }
    function Zz(n, r, l, u, h) {
      this.tag = r, this.containerInfo = n, this.pendingChildren = null, this.current = null, this.pingCache = null, this.finishedWork = null, this.timeoutHandle = Ox, this.context = null, this.pendingContext = null, this.callbackNode = null, this.callbackPriority = hn, this.eventTimes = bp(Je), this.expirationTimes = bp(jn), this.pendingLanes = Je, this.suspendedLanes = Je, this.pingedLanes = Je, this.expiredLanes = Je, this.mutableReadLanes = Je, this.finishedLanes = Je, this.entangledLanes = Je, this.entanglements = bp(Je), this.identifierPrefix = u, this.onRecoverableError = h, this.mutableSourceEagerHydrationData = null, this.effectDuration = 0, this.passiveEffectDuration = 0;
      {
        this.memoizedUpdaters = /* @__PURE__ */ new Set();
        for (var C = this.pendingUpdatersLaneMap = [], E = 0; E < Gn; E++)
          C.push(/* @__PURE__ */ new Set());
      }
      switch (r) {
        case Wy:
          this._debugRootType = l ? "hydrateRoot()" : "createRoot()";
          break;
        case wc:
          this._debugRootType = l ? "hydrate()" : "render()";
          break;
      }
    }
    function lk(n, r, l, u, h, C, E, L, j, G) {
      var X = new Zz(n, r, l, L, j), he = Yz(r, C);
      X.current = he, he.stateNode = X;
      {
        var pe = {
          element: u,
          isDehydrated: l,
          cache: null,
          // not enabled yet
          transitions: null,
          pendingSuspenseBoundaries: null
        };
        he.memoizedState = pe;
      }
      return eS(he), X;
    }
    var GT = "18.2.0";
    function Jz(n, r, l) {
      var u = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
      return ft(u), {
        // This tag allow us to uniquely identify this as a React Portal
        $$typeof: no,
        key: u == null ? null : "" + u,
        children: n,
        containerInfo: r,
        implementation: l
      };
    }
    var qT, KT;
    qT = !1, KT = {};
    function ck(n) {
      if (!n)
        return Va;
      var r = ua(n), l = A_(r);
      if (r.tag === b) {
        var u = r.type;
        if (ws(u))
          return LE(r, u, l);
      }
      return l;
    }
    function eV(n, r) {
      {
        var l = ua(n);
        if (l === void 0) {
          if (typeof n.render == "function")
            throw new Error("Unable to find node on an unmounted component.");
          var u = Object.keys(n).join(",");
          throw new Error("Argument appears to not be a ReactComponent. Keys: " + u);
        }
        var h = ma(l);
        if (h === null)
          return null;
        if (h.mode & ro) {
          var C = on(l) || "Component";
          if (!KT[C]) {
            KT[C] = !0;
            var E = yo;
            try {
              $n(h), l.mode & ro ? f("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", r, r, C) : f("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", r, r, C);
            } finally {
              E ? $n(E) : ko();
            }
          }
        }
        return h.stateNode;
      }
    }
    function uk(n, r, l, u, h, C, E, L) {
      var j = !1, G = null;
      return lk(n, r, j, G, l, u, h, C, E);
    }
    function dk(n, r, l, u, h, C, E, L, j, G) {
      var X = !0, he = lk(l, u, X, n, h, C, E, L, j);
      he.context = ck(null);
      var pe = he.current, Ne = na(), Pe = Lc(pe), Ke = Tl(Ne, Pe);
      return Ke.callback = r ?? null, Oc(pe, Ke, Pe), sz(he, Pe, Ne), he;
    }
    function Jh(n, r, l, u) {
      Yg(r, n);
      var h = r.current, C = na(), E = Lc(h);
      Js(E);
      var L = ck(l);
      r.context === null ? r.context = L : r.pendingContext = L, sa && yo !== null && !qT && (qT = !0, f(`Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.

Check the render method of %s.`, on(yo) || "Unknown"));
      var j = Tl(C, E);
      j.payload = {
        element: n
      }, u = u === void 0 ? null : u, u !== null && (typeof u != "function" && f("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", u), j.callback = u);
      var G = Oc(h, j, E);
      return G !== null && (lr(G, h, E, C), rb(G, h, E)), E;
    }
    function Kb(n) {
      var r = n.current;
      if (!r.child)
        return null;
      switch (r.child.tag) {
        case k:
          return r.child.stateNode;
        default:
          return r.child.stateNode;
      }
    }
    function tV(n) {
      switch (n.tag) {
        case R: {
          var r = n.stateNode;
          if (Po(r)) {
            var l = G0(r);
            dz(r, l);
          }
          break;
        }
        case B: {
          Ol(function() {
            var h = Sa(n, Gt);
            if (h !== null) {
              var C = na();
              lr(h, n, Gt, C);
            }
          });
          var u = Gt;
          QT(n, u);
          break;
        }
      }
    }
    function pk(n, r) {
      var l = n.memoizedState;
      l !== null && l.dehydrated !== null && (l.retryLane = ry(l.retryLane, r));
    }
    function QT(n, r) {
      pk(n, r);
      var l = n.alternate;
      l && pk(l, r);
    }
    function nV(n) {
      if (n.tag === B) {
        var r = nc, l = Sa(n, r);
        if (l !== null) {
          var u = na();
          lr(l, n, r, u);
        }
        QT(n, r);
      }
    }
    function oV(n) {
      if (n.tag === B) {
        var r = Lc(n), l = Sa(n, r);
        if (l !== null) {
          var u = na();
          lr(l, n, r, u);
        }
        QT(n, r);
      }
    }
    function fk(n) {
      var r = Ug(n);
      return r === null ? null : r.stateNode;
    }
    var mk = function(n) {
      return null;
    };
    function rV(n) {
      return mk(n);
    }
    var hk = function(n) {
      return !1;
    };
    function aV(n) {
      return hk(n);
    }
    var vk = null, gk = null, yk = null, bk = null, Ck = null, xk = null, Sk = null, Tk = null, wk = null;
    {
      var Ek = function(n, r, l) {
        var u = r[l], h = Fo(n) ? n.slice() : pn({}, n);
        return l + 1 === r.length ? (Fo(h) ? h.splice(u, 1) : delete h[u], h) : (h[u] = Ek(n[u], r, l + 1), h);
      }, Rk = function(n, r) {
        return Ek(n, r, 0);
      }, Ok = function(n, r, l, u) {
        var h = r[u], C = Fo(n) ? n.slice() : pn({}, n);
        if (u + 1 === r.length) {
          var E = l[u];
          C[E] = C[h], Fo(C) ? C.splice(h, 1) : delete C[h];
        } else
          C[h] = Ok(
            // $FlowFixMe number or string is fine here
            n[h],
            r,
            l,
            u + 1
          );
        return C;
      }, kk = function(n, r, l) {
        if (r.length !== l.length) {
          p("copyWithRename() expects paths of the same length");
          return;
        } else
          for (var u = 0; u < l.length - 1; u++)
            if (r[u] !== l[u]) {
              p("copyWithRename() expects paths to be the same except for the deepest key");
              return;
            }
        return Ok(n, r, l, 0);
      }, Dk = function(n, r, l, u) {
        if (l >= r.length)
          return u;
        var h = r[l], C = Fo(n) ? n.slice() : pn({}, n);
        return C[h] = Dk(n[h], r, l + 1, u), C;
      }, Mk = function(n, r, l) {
        return Dk(n, r, 0, l);
      }, XT = function(n, r) {
        for (var l = n.memoizedState; l !== null && r > 0; )
          l = l.next, r--;
        return l;
      };
      vk = function(n, r, l, u) {
        var h = XT(n, r);
        if (h !== null) {
          var C = Mk(h.memoizedState, l, u);
          h.memoizedState = C, h.baseState = C, n.memoizedProps = pn({}, n.memoizedProps);
          var E = Sa(n, Gt);
          E !== null && lr(E, n, Gt, jn);
        }
      }, gk = function(n, r, l) {
        var u = XT(n, r);
        if (u !== null) {
          var h = Rk(u.memoizedState, l);
          u.memoizedState = h, u.baseState = h, n.memoizedProps = pn({}, n.memoizedProps);
          var C = Sa(n, Gt);
          C !== null && lr(C, n, Gt, jn);
        }
      }, yk = function(n, r, l, u) {
        var h = XT(n, r);
        if (h !== null) {
          var C = kk(h.memoizedState, l, u);
          h.memoizedState = C, h.baseState = C, n.memoizedProps = pn({}, n.memoizedProps);
          var E = Sa(n, Gt);
          E !== null && lr(E, n, Gt, jn);
        }
      }, bk = function(n, r, l) {
        n.pendingProps = Mk(n.memoizedProps, r, l), n.alternate && (n.alternate.pendingProps = n.pendingProps);
        var u = Sa(n, Gt);
        u !== null && lr(u, n, Gt, jn);
      }, Ck = function(n, r) {
        n.pendingProps = Rk(n.memoizedProps, r), n.alternate && (n.alternate.pendingProps = n.pendingProps);
        var l = Sa(n, Gt);
        l !== null && lr(l, n, Gt, jn);
      }, xk = function(n, r, l) {
        n.pendingProps = kk(n.memoizedProps, r, l), n.alternate && (n.alternate.pendingProps = n.pendingProps);
        var u = Sa(n, Gt);
        u !== null && lr(u, n, Gt, jn);
      }, Sk = function(n) {
        var r = Sa(n, Gt);
        r !== null && lr(r, n, Gt, jn);
      }, Tk = function(n) {
        mk = n;
      }, wk = function(n) {
        hk = n;
      };
    }
    function iV(n) {
      var r = ma(n);
      return r === null ? null : r.stateNode;
    }
    function sV(n) {
      return null;
    }
    function lV() {
      return yo;
    }
    function cV(n) {
      var r = n.findFiberByHostInstance, l = i.ReactCurrentDispatcher;
      return Rm({
        bundleType: n.bundleType,
        version: n.version,
        rendererPackageName: n.rendererPackageName,
        rendererConfig: n.rendererConfig,
        overrideHookState: vk,
        overrideHookStateDeletePath: gk,
        overrideHookStateRenamePath: yk,
        overrideProps: bk,
        overridePropsDeletePath: Ck,
        overridePropsRenamePath: xk,
        setErrorHandler: Tk,
        setSuspenseHandler: wk,
        scheduleUpdate: Sk,
        currentDispatcherRef: l,
        findHostInstanceByFiber: iV,
        findFiberByHostInstance: r || sV,
        // React Refresh
        findHostInstancesForRefresh: zz,
        scheduleRefresh: _z,
        scheduleRoot: Bz,
        setRefreshHandler: Az,
        // Enables DevTools to append owner stacks to error messages in DEV mode.
        getCurrentFiber: lV,
        // Enables DevTools to detect reconciler version rather than renderer version
        // which may not match for third party renderers.
        reconcilerVersion: GT
      });
    }
    var Nk = typeof reportError == "function" ? (
      // In modern browsers, reportError will dispatch an error event,
      // emulating an uncaught JavaScript error.
      reportError
    ) : function(n) {
      console.error(n);
    };
    function ZT(n) {
      this._internalRoot = n;
    }
    Qb.prototype.render = ZT.prototype.render = function(n) {
      var r = this._internalRoot;
      if (r === null)
        throw new Error("Cannot update an unmounted root.");
      {
        typeof arguments[1] == "function" ? f("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().") : Xb(arguments[1]) ? f("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.") : typeof arguments[1] < "u" && f("You passed a second argument to root.render(...) but it only accepts one argument.");
        var l = r.containerInfo;
        if (l.nodeType !== bo) {
          var u = fk(r.current);
          u && u.parentNode !== l && f("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
        }
      }
      Jh(n, r, null, null);
    }, Qb.prototype.unmount = ZT.prototype.unmount = function() {
      typeof arguments[0] == "function" && f("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
      var n = this._internalRoot;
      if (n !== null) {
        this._internalRoot = null;
        var r = n.containerInfo;
        UO() && f("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition."), Ol(function() {
          Jh(null, n, null, null);
        }), ME(r);
      }
    };
    function uV(n, r) {
      if (!Xb(n))
        throw new Error("createRoot(...): Target container is not a DOM element.");
      Pk(n);
      var l = !1, u = !1, h = "", C = Nk;
      r != null && (r.hydrate ? p("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.") : typeof r == "object" && r !== null && r.$$typeof === Zn && f(`You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:

  let root = createRoot(domContainer);
  root.render(<App />);`), r.unstable_strictMode === !0 && (l = !0), r.identifierPrefix !== void 0 && (h = r.identifierPrefix), r.onRecoverableError !== void 0 && (C = r.onRecoverableError), r.transitionCallbacks !== void 0 && r.transitionCallbacks);
      var E = uk(n, Wy, null, l, u, h, C);
      By(E.current, n);
      var L = n.nodeType === bo ? n.parentNode : n;
      return sh(L), new ZT(E);
    }
    function Qb(n) {
      this._internalRoot = n;
    }
    function dV(n) {
      n && py(n);
    }
    Qb.prototype.unstable_scheduleHydration = dV;
    function pV(n, r, l) {
      if (!Xb(n))
        throw new Error("hydrateRoot(...): Target container is not a DOM element.");
      Pk(n), r === void 0 && f("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
      var u = l ?? null, h = l != null && l.hydratedSources || null, C = !1, E = !1, L = "", j = Nk;
      l != null && (l.unstable_strictMode === !0 && (C = !0), l.identifierPrefix !== void 0 && (L = l.identifierPrefix), l.onRecoverableError !== void 0 && (j = l.onRecoverableError));
      var G = dk(r, null, n, Wy, u, C, E, L, j);
      if (By(G.current, n), sh(n), h)
        for (var X = 0; X < h.length; X++) {
          var he = h[X];
          C2(G, he);
        }
      return new Qb(G);
    }
    function Xb(n) {
      return !!(n && (n.nodeType === Mr || n.nodeType === La || n.nodeType === Hs || !qe));
    }
    function ev(n) {
      return !!(n && (n.nodeType === Mr || n.nodeType === La || n.nodeType === Hs || n.nodeType === bo && n.nodeValue === " react-mount-point-unstable "));
    }
    function Pk(n) {
      n.nodeType === Mr && n.tagName && n.tagName.toUpperCase() === "BODY" && f("createRoot(): Creating roots directly with document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try using a container element created for your app."), yh(n) && (n._reactRootContainer ? f("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.") : f("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it."));
    }
    var fV = i.ReactCurrentOwner, $k;
    $k = function(n) {
      if (n._reactRootContainer && n.nodeType !== bo) {
        var r = fk(n._reactRootContainer.current);
        r && r.parentNode !== n && f("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
      }
      var l = !!n._reactRootContainer, u = JT(n), h = !!(u && Sc(u));
      h && !l && f("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render."), n.nodeType === Mr && n.tagName && n.tagName.toUpperCase() === "BODY" && f("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
    };
    function JT(n) {
      return n ? n.nodeType === La ? n.documentElement : n.firstChild : null;
    }
    function Ik() {
    }
    function mV(n, r, l, u, h) {
      if (h) {
        if (typeof u == "function") {
          var C = u;
          u = function() {
            var pe = Kb(E);
            C.call(pe);
          };
        }
        var E = dk(
          r,
          u,
          n,
          wc,
          null,
          // hydrationCallbacks
          !1,
          // isStrictMode
          !1,
          // concurrentUpdatesByDefaultOverride,
          "",
          // identifierPrefix
          Ik
        );
        n._reactRootContainer = E, By(E.current, n);
        var L = n.nodeType === bo ? n.parentNode : n;
        return sh(L), Ol(), E;
      } else {
        for (var j; j = n.lastChild; )
          n.removeChild(j);
        if (typeof u == "function") {
          var G = u;
          u = function() {
            var pe = Kb(X);
            G.call(pe);
          };
        }
        var X = uk(
          n,
          wc,
          null,
          // hydrationCallbacks
          !1,
          // isStrictMode
          !1,
          // concurrentUpdatesByDefaultOverride,
          "",
          // identifierPrefix
          Ik
        );
        n._reactRootContainer = X, By(X.current, n);
        var he = n.nodeType === bo ? n.parentNode : n;
        return sh(he), Ol(function() {
          Jh(r, X, l, u);
        }), X;
      }
    }
    function hV(n, r) {
      n !== null && typeof n != "function" && f("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", r, n);
    }
    function Zb(n, r, l, u, h) {
      $k(l), hV(h === void 0 ? null : h, "render");
      var C = l._reactRootContainer, E;
      if (!C)
        E = mV(l, r, n, h, u);
      else {
        if (E = C, typeof h == "function") {
          var L = h;
          h = function() {
            var j = Kb(E);
            L.call(j);
          };
        }
        Jh(r, E, n, h);
      }
      return Kb(E);
    }
    function vV(n) {
      {
        var r = fV.current;
        if (r !== null && r.stateNode !== null) {
          var l = r.stateNode._warnedAboutRefsInRender;
          l || f("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", Vn(r.type) || "A component"), r.stateNode._warnedAboutRefsInRender = !0;
        }
      }
      return n == null ? null : n.nodeType === Mr ? n : eV(n, "findDOMNode");
    }
    function gV(n, r, l) {
      if (f("ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !ev(r))
        throw new Error("Target container is not a DOM element.");
      {
        var u = yh(r) && r._reactRootContainer === void 0;
        u && f("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call hydrateRoot(container, element)?");
      }
      return Zb(null, n, r, !0, l);
    }
    function yV(n, r, l) {
      if (f("ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !ev(r))
        throw new Error("Target container is not a DOM element.");
      {
        var u = yh(r) && r._reactRootContainer === void 0;
        u && f("You are calling ReactDOM.render() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.render(element)?");
      }
      return Zb(null, n, r, !1, l);
    }
    function bV(n, r, l, u) {
      if (f("ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported in React 18. Consider using a portal instead. Until you switch to the createRoot API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !ev(l))
        throw new Error("Target container is not a DOM element.");
      if (n == null || !Cu(n))
        throw new Error("parentComponent must be a valid React Component");
      return Zb(n, r, l, !1, u);
    }
    function CV(n) {
      if (!ev(n))
        throw new Error("unmountComponentAtNode(...): Target container is not a DOM element.");
      {
        var r = yh(n) && n._reactRootContainer === void 0;
        r && f("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?");
      }
      if (n._reactRootContainer) {
        {
          var l = JT(n), u = l && !Sc(l);
          u && f("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
        }
        return Ol(function() {
          Zb(null, null, n, !1, function() {
            n._reactRootContainer = null, ME(n);
          });
        }), !0;
      } else {
        {
          var h = JT(n), C = !!(h && Sc(h)), E = n.nodeType === Mr && ev(n.parentNode) && !!n.parentNode._reactRootContainer;
          C && f("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", E ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
        }
        return !1;
      }
    }
    Mt(tV), iy(nV), Lu(oV), Um(ga), ly(Pu), (typeof Map != "function" || // $FlowIssue Flow incorrectly thinks Map has no prototype
    Map.prototype == null || typeof Map.prototype.forEach != "function" || typeof Set != "function" || // $FlowIssue Flow incorrectly thinks Set has no prototype
    Set.prototype == null || typeof Set.prototype.clear != "function" || typeof Set.prototype.forEach != "function") && f("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"), Vg(TA), Vd(MT, pz, Ol);
    function xV(n, r) {
      var l = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
      if (!Xb(r))
        throw new Error("Target container is not a DOM element.");
      return Jz(n, r, null, l);
    }
    function SV(n, r, l, u) {
      return bV(n, r, l, u);
    }
    var e1 = {
      usingClientEntryPoint: !1,
      // Keep in sync with ReactTestUtils.js.
      // This is an array for better minification.
      Events: [Sc, jp, zy, zd, gu, MT]
    };
    function TV(n, r) {
      return e1.usingClientEntryPoint || f('You are importing createRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".'), uV(n, r);
    }
    function wV(n, r, l) {
      return e1.usingClientEntryPoint || f('You are importing hydrateRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".'), pV(n, r, l);
    }
    function EV(n) {
      return UO() && f("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task."), Ol(n);
    }
    var RV = cV({
      findFiberByHostInstance: Wu,
      bundleType: 1,
      version: GT,
      rendererPackageName: "react-dom"
    });
    if (!RV && ye && window.top === window.self && (navigator.userAgent.indexOf("Chrome") > -1 && navigator.userAgent.indexOf("Edge") === -1 || navigator.userAgent.indexOf("Firefox") > -1)) {
      var Lk = window.location.protocol;
      /^(https?|file):$/.test(Lk) && console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (Lk === "file:" ? `
You might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq` : ""), "font-weight:bold");
    }
    Oa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = e1, Oa.createPortal = xV, Oa.createRoot = TV, Oa.findDOMNode = vV, Oa.flushSync = EV, Oa.hydrate = gV, Oa.hydrateRoot = wV, Oa.render = yV, Oa.unmountComponentAtNode = CV, Oa.unstable_batchedUpdates = MT, Oa.unstable_renderSubtreeIntoContainer = SV, Oa.version = GT, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), Oa;
}
function LN() {
  if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function")) {
    if (process.env.NODE_ENV !== "production")
      throw new Error("^_^");
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(LN);
    } catch (e) {
      console.error(e);
    }
  }
}
process.env.NODE_ENV === "production" ? (LN(), L1.exports = C4()) : L1.exports = x4();
var zC = L1.exports;
const rC = /* @__PURE__ */ eF(zC), cD = {
  disabled: !1
};
var S4 = process.env.NODE_ENV !== "production" ? t.oneOfType([t.number, t.shape({
  enter: t.number,
  exit: t.number,
  appear: t.number
}).isRequired]) : null, T4 = process.env.NODE_ENV !== "production" ? t.oneOfType([t.string, t.shape({
  enter: t.string,
  exit: t.string,
  active: t.string
}), t.shape({
  enter: t.string,
  enterDone: t.string,
  enterActive: t.string,
  exit: t.string,
  exitDone: t.string,
  exitActive: t.string
})]) : null;
const VC = ka.createContext(null);
var AN = function(o) {
  return o.scrollTop;
}, gv = "unmounted", ud = "exited", dd = "entering", gf = "entered", A1 = "exiting", _l = /* @__PURE__ */ function(e) {
  lw(o, e);
  function o(c, d) {
    var p;
    p = e.call(this, c, d) || this;
    var f = d, v = f && !f.isMounting ? c.enter : c.appear, g;
    return p.appearStatus = null, c.in ? v ? (g = ud, p.appearStatus = dd) : g = gf : c.unmountOnExit || c.mountOnEnter ? g = gv : g = ud, p.state = {
      status: g
    }, p.nextCallback = null, p;
  }
  o.getDerivedStateFromProps = function(d, p) {
    var f = d.in;
    return f && p.status === gv ? {
      status: ud
    } : null;
  };
  var i = o.prototype;
  return i.componentDidMount = function() {
    this.updateStatus(!0, this.appearStatus);
  }, i.componentDidUpdate = function(d) {
    var p = null;
    if (d !== this.props) {
      var f = this.state.status;
      this.props.in ? f !== dd && f !== gf && (p = dd) : (f === dd || f === gf) && (p = A1);
    }
    this.updateStatus(!1, p);
  }, i.componentWillUnmount = function() {
    this.cancelNextCallback();
  }, i.getTimeouts = function() {
    var d = this.props.timeout, p, f, v;
    return p = f = v = d, d != null && typeof d != "number" && (p = d.exit, f = d.enter, v = d.appear !== void 0 ? d.appear : f), {
      exit: p,
      enter: f,
      appear: v
    };
  }, i.updateStatus = function(d, p) {
    if (d === void 0 && (d = !1), p !== null)
      if (this.cancelNextCallback(), p === dd) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var f = this.props.nodeRef ? this.props.nodeRef.current : rC.findDOMNode(this);
          f && AN(f);
        }
        this.performEnter(d);
      } else
        this.performExit();
    else
      this.props.unmountOnExit && this.state.status === ud && this.setState({
        status: gv
      });
  }, i.performEnter = function(d) {
    var p = this, f = this.props.enter, v = this.context ? this.context.isMounting : d, g = this.props.nodeRef ? [v] : [rC.findDOMNode(this), v], b = g[0], S = g[1], R = this.getTimeouts(), D = v ? R.appear : R.enter;
    if (!d && !f || cD.disabled) {
      this.safeSetState({
        status: gf
      }, function() {
        p.props.onEntered(b);
      });
      return;
    }
    this.props.onEnter(b, S), this.safeSetState({
      status: dd
    }, function() {
      p.props.onEntering(b, S), p.onTransitionEnd(D, function() {
        p.safeSetState({
          status: gf
        }, function() {
          p.props.onEntered(b, S);
        });
      });
    });
  }, i.performExit = function() {
    var d = this, p = this.props.exit, f = this.getTimeouts(), v = this.props.nodeRef ? void 0 : rC.findDOMNode(this);
    if (!p || cD.disabled) {
      this.safeSetState({
        status: ud
      }, function() {
        d.props.onExited(v);
      });
      return;
    }
    this.props.onExit(v), this.safeSetState({
      status: A1
    }, function() {
      d.props.onExiting(v), d.onTransitionEnd(f.exit, function() {
        d.safeSetState({
          status: ud
        }, function() {
          d.props.onExited(v);
        });
      });
    });
  }, i.cancelNextCallback = function() {
    this.nextCallback !== null && (this.nextCallback.cancel(), this.nextCallback = null);
  }, i.safeSetState = function(d, p) {
    p = this.setNextCallback(p), this.setState(d, p);
  }, i.setNextCallback = function(d) {
    var p = this, f = !0;
    return this.nextCallback = function(v) {
      f && (f = !1, p.nextCallback = null, d(v));
    }, this.nextCallback.cancel = function() {
      f = !1;
    }, this.nextCallback;
  }, i.onTransitionEnd = function(d, p) {
    this.setNextCallback(p);
    var f = this.props.nodeRef ? this.props.nodeRef.current : rC.findDOMNode(this), v = d == null && !this.props.addEndListener;
    if (!f || v) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var g = this.props.nodeRef ? [this.nextCallback] : [f, this.nextCallback], b = g[0], S = g[1];
      this.props.addEndListener(b, S);
    }
    d != null && setTimeout(this.nextCallback, d);
  }, i.render = function() {
    var d = this.state.status;
    if (d === gv)
      return null;
    var p = this.props, f = p.children;
    p.in, p.mountOnEnter, p.unmountOnExit, p.appear, p.enter, p.exit, p.timeout, p.addEndListener, p.onEnter, p.onEntering, p.onEntered, p.onExit, p.onExiting, p.onExited, p.nodeRef;
    var v = ue(p, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      /* @__PURE__ */ ka.createElement(VC.Provider, {
        value: null
      }, typeof f == "function" ? f(d, v) : ka.cloneElement(ka.Children.only(f), v))
    );
  }, o;
}(ka.Component);
_l.contextType = VC;
_l.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: t.shape({
    current: typeof Element > "u" ? t.any : function(e, o, i, c, d, p) {
      var f = e[o];
      return t.instanceOf(f && "ownerDocument" in f ? f.ownerDocument.defaultView.Element : Element)(e, o, i, c, d, p);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: t.oneOfType([t.func.isRequired, t.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: t.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: t.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: t.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: t.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: t.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: t.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function(o) {
    var i = S4;
    o.addEndListener || (i = i.isRequired);
    for (var c = arguments.length, d = new Array(c > 1 ? c - 1 : 0), p = 1; p < c; p++)
      d[p - 1] = arguments[p];
    return i.apply(void 0, [o].concat(d));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: t.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: t.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: t.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: t.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: t.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: t.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: t.func
} : {};
function hf() {
}
_l.defaultProps = {
  in: !1,
  mountOnEnter: !1,
  unmountOnExit: !1,
  appear: !1,
  enter: !0,
  exit: !0,
  onEnter: hf,
  onEntering: hf,
  onEntered: hf,
  onExit: hf,
  onExiting: hf,
  onExited: hf
};
_l.UNMOUNTED = gv;
_l.EXITED = ud;
_l.ENTERING = dd;
_l.ENTERED = gf;
_l.EXITING = A1;
const bd = _l;
var w4 = function(o, i) {
  return o && i && i.split(" ").forEach(function(c) {
    return v4(o, c);
  });
}, l1 = function(o, i) {
  return o && i && i.split(" ").forEach(function(c) {
    return g4(o, c);
  });
}, cw = /* @__PURE__ */ function(e) {
  lw(o, e);
  function o() {
    for (var c, d = arguments.length, p = new Array(d), f = 0; f < d; f++)
      p[f] = arguments[f];
    return c = e.call.apply(e, [this].concat(p)) || this, c.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    }, c.onEnter = function(v, g) {
      var b = c.resolveArguments(v, g), S = b[0], R = b[1];
      c.removeClasses(S, "exit"), c.addClass(S, R ? "appear" : "enter", "base"), c.props.onEnter && c.props.onEnter(v, g);
    }, c.onEntering = function(v, g) {
      var b = c.resolveArguments(v, g), S = b[0], R = b[1], D = R ? "appear" : "enter";
      c.addClass(S, D, "active"), c.props.onEntering && c.props.onEntering(v, g);
    }, c.onEntered = function(v, g) {
      var b = c.resolveArguments(v, g), S = b[0], R = b[1], D = R ? "appear" : "enter";
      c.removeClasses(S, D), c.addClass(S, D, "done"), c.props.onEntered && c.props.onEntered(v, g);
    }, c.onExit = function(v) {
      var g = c.resolveArguments(v), b = g[0];
      c.removeClasses(b, "appear"), c.removeClasses(b, "enter"), c.addClass(b, "exit", "base"), c.props.onExit && c.props.onExit(v);
    }, c.onExiting = function(v) {
      var g = c.resolveArguments(v), b = g[0];
      c.addClass(b, "exit", "active"), c.props.onExiting && c.props.onExiting(v);
    }, c.onExited = function(v) {
      var g = c.resolveArguments(v), b = g[0];
      c.removeClasses(b, "exit"), c.addClass(b, "exit", "done"), c.props.onExited && c.props.onExited(v);
    }, c.resolveArguments = function(v, g) {
      return c.props.nodeRef ? [c.props.nodeRef.current, v] : [v, g];
    }, c.getClassNames = function(v) {
      var g = c.props.classNames, b = typeof g == "string", S = b && g ? g + "-" : "", R = b ? "" + S + v : g[v], D = b ? R + "-active" : g[v + "Active"], k = b ? R + "-done" : g[v + "Done"];
      return {
        baseClassName: R,
        activeClassName: D,
        doneClassName: k
      };
    }, c;
  }
  var i = o.prototype;
  return i.addClass = function(d, p, f) {
    var v = this.getClassNames(p)[f + "ClassName"], g = this.getClassNames("enter"), b = g.doneClassName;
    p === "appear" && f === "done" && b && (v += " " + b), f === "active" && d && AN(d), v && (this.appliedClasses[p][f] = v, w4(d, v));
  }, i.removeClasses = function(d, p) {
    var f = this.appliedClasses[p], v = f.base, g = f.active, b = f.done;
    this.appliedClasses[p] = {}, v && l1(d, v), g && l1(d, g), b && l1(d, b);
  }, i.render = function() {
    var d = this.props;
    d.classNames;
    var p = ue(d, ["classNames"]);
    return /* @__PURE__ */ ka.createElement(bd, x({}, p, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  }, o;
}(ka.Component);
cw.defaultProps = {
  classNames: ""
};
cw.propTypes = process.env.NODE_ENV !== "production" ? x({}, bd.propTypes, {
  /**
   * The animation classNames applied to the component as it appears, enters,
   * exits or has finished the transition. A single name can be provided, which
   * will be suffixed for each stage, e.g. `classNames="fade"` applies:
   *
   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`
   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`
   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`
   *
   * A few details to note about how these classes are applied:
   *
   * 1. They are _joined_ with the ones that are already defined on the child
   *    component, so if you want to add some base styles, you can use
   *    `className` without worrying that it will be overridden.
   *
   * 2. If the transition component mounts with `in={false}`, no classes are
   *    applied yet. You might be expecting `*-exit-done`, but if you think
   *    about it, a component cannot finish exiting if it hasn't entered yet.
   *
   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This
   *    allows you to define different behavior for when appearing is done and
   *    when regular entering is done, using selectors like
   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply
   *    an epic entrance animation when element first appears in the DOM using
   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
   *    simply use `fade-enter-done` for defining both cases.
   *
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  appearDone: 'my-done-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply
   * spread them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  appearDone?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */
  classNames: T4,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: t.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: t.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: t.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExit: t.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExiting: t.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExited: t.func
}) : {};
const E4 = cw;
function R4(e) {
  if (e === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function uw(e, o) {
  var i = function(p) {
    return o && EC(p) ? o(p) : p;
  }, c = /* @__PURE__ */ Object.create(null);
  return e && nF.map(e, function(d) {
    return d;
  }).forEach(function(d) {
    c[d.key] = i(d);
  }), c;
}
function O4(e, o) {
  e = e || {}, o = o || {};
  function i(S) {
    return S in o ? o[S] : e[S];
  }
  var c = /* @__PURE__ */ Object.create(null), d = [];
  for (var p in e)
    p in o ? d.length && (c[p] = d, d = []) : d.push(p);
  var f, v = {};
  for (var g in o) {
    if (c[g])
      for (f = 0; f < c[g].length; f++) {
        var b = c[g][f];
        v[c[g][f]] = i(b);
      }
    v[g] = i(g);
  }
  for (f = 0; f < d.length; f++)
    v[d[f]] = i(d[f]);
  return v;
}
function fd(e, o, i) {
  return i[o] != null ? i[o] : e.props[o];
}
function k4(e, o) {
  return uw(e.children, function(i) {
    return RC(i, {
      onExited: o.bind(null, i),
      in: !0,
      appear: fd(i, "appear", e),
      enter: fd(i, "enter", e),
      exit: fd(i, "exit", e)
    });
  });
}
function D4(e, o, i) {
  var c = uw(e.children), d = O4(o, c);
  return Object.keys(d).forEach(function(p) {
    var f = d[p];
    if (EC(f)) {
      var v = p in o, g = p in c, b = o[p], S = EC(b) && !b.props.in;
      g && (!v || S) ? d[p] = RC(f, {
        onExited: i.bind(null, f),
        in: !0,
        exit: fd(f, "exit", e),
        enter: fd(f, "enter", e)
      }) : !g && v && !S ? d[p] = RC(f, {
        in: !1
      }) : g && v && EC(b) && (d[p] = RC(f, {
        onExited: i.bind(null, f),
        in: b.props.in,
        exit: fd(f, "exit", e),
        enter: fd(f, "enter", e)
      }));
    }
  }), d;
}
var M4 = Object.values || function(e) {
  return Object.keys(e).map(function(o) {
    return e[o];
  });
}, N4 = {
  component: "div",
  childFactory: function(o) {
    return o;
  }
}, dw = /* @__PURE__ */ function(e) {
  lw(o, e);
  function o(c, d) {
    var p;
    p = e.call(this, c, d) || this;
    var f = p.handleExited.bind(R4(p));
    return p.state = {
      contextValue: {
        isMounting: !0
      },
      handleExited: f,
      firstRender: !0
    }, p;
  }
  var i = o.prototype;
  return i.componentDidMount = function() {
    this.mounted = !0, this.setState({
      contextValue: {
        isMounting: !1
      }
    });
  }, i.componentWillUnmount = function() {
    this.mounted = !1;
  }, o.getDerivedStateFromProps = function(d, p) {
    var f = p.children, v = p.handleExited, g = p.firstRender;
    return {
      children: g ? k4(d, v) : D4(d, f, v),
      firstRender: !1
    };
  }, i.handleExited = function(d, p) {
    var f = uw(this.props.children);
    d.key in f || (d.props.onExited && d.props.onExited(p), this.mounted && this.setState(function(v) {
      var g = x({}, v.children);
      return delete g[d.key], {
        children: g
      };
    }));
  }, i.render = function() {
    var d = this.props, p = d.component, f = d.childFactory, v = ue(d, ["component", "childFactory"]), g = this.state.contextValue, b = M4(this.state.children).map(f);
    return delete v.appear, delete v.enter, delete v.exit, p === null ? /* @__PURE__ */ ka.createElement(VC.Provider, {
      value: g
    }, b) : /* @__PURE__ */ ka.createElement(VC.Provider, {
      value: g
    }, /* @__PURE__ */ ka.createElement(p, v, b));
  }, o;
}(ka.Component);
dw.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: t.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: t.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: t.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: t.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: t.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: t.func
} : {};
dw.defaultProps = N4;
const pw = dw, i0 = (e) => e.scrollTop;
function Ki(e, o) {
  var i, c;
  const {
    timeout: d,
    easing: p,
    style: f = {}
  } = e;
  return {
    duration: (i = f.transitionDuration) != null ? i : typeof d == "number" ? d : d[o.mode] || 0,
    easing: (c = f.transitionTimingFunction) != null ? c : typeof p == "object" ? p[o.mode] : p,
    delay: f.transitionDelay
  };
}
function P4(e) {
  return We("MuiCollapse", e);
}
const $4 = Ge("MuiCollapse", ["root", "horizontal", "vertical", "entered", "hidden", "wrapper", "wrapperInner"]), pae = $4, I4 = ["addEndListener", "children", "className", "collapsedSize", "component", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "orientation", "style", "timeout", "TransitionComponent"], L4 = (e) => {
  const {
    orientation: o,
    classes: i
  } = e, c = {
    root: ["root", `${o}`],
    entered: ["entered"],
    hidden: ["hidden"],
    wrapper: ["wrapper", `${o}`],
    wrapperInner: ["wrapperInner", `${o}`]
  };
  return Ye(c, P4, i);
}, A4 = ee("div", {
  name: "MuiCollapse",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[i.orientation], i.state === "entered" && o.entered, i.state === "exited" && !i.in && i.collapsedSize === "0px" && o.hidden];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  height: 0,
  overflow: "hidden",
  transition: e.transitions.create("height")
}, o.orientation === "horizontal" && {
  height: "auto",
  width: 0,
  transition: e.transitions.create("width")
}, o.state === "entered" && x({
  height: "auto",
  overflow: "visible"
}, o.orientation === "horizontal" && {
  width: "auto"
}), o.state === "exited" && !o.in && o.collapsedSize === "0px" && {
  visibility: "hidden"
})), _4 = ee("div", {
  name: "MuiCollapse",
  slot: "Wrapper",
  overridesResolver: (e, o) => o.wrapper
})(({
  ownerState: e
}) => x({
  // Hack to get children with a negative margin to not falsify the height computation.
  display: "flex",
  width: "100%"
}, e.orientation === "horizontal" && {
  width: "auto",
  height: "100%"
})), B4 = ee("div", {
  name: "MuiCollapse",
  slot: "WrapperInner",
  overridesResolver: (e, o) => o.wrapperInner
})(({
  ownerState: e
}) => x({
  width: "100%"
}, e.orientation === "horizontal" && {
  width: "auto",
  height: "100%"
})), fw = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiCollapse"
  }), {
    addEndListener: d,
    children: p,
    className: f,
    collapsedSize: v = "0px",
    component: g,
    easing: b,
    in: S,
    onEnter: R,
    onEntered: D,
    onEntering: k,
    onExit: $,
    onExited: P,
    onExiting: O,
    orientation: I = "vertical",
    style: _,
    timeout: A = aN.standard,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: V = bd
  } = c, B = ue(c, I4), M = x({}, c, {
    orientation: I,
    collapsedSize: v
  }), F = L4(M), Y = Mn(), H = Pl(), J = w.useRef(null), W = w.useRef(), te = typeof v == "number" ? `${v}px` : v, Z = I === "horizontal", q = Z ? "width" : "height", Q = w.useRef(null), re = cn(i, Q), ie = (be) => (Ce) => {
    if (be) {
      const de = Q.current;
      Ce === void 0 ? be(de) : be(de, Ce);
    }
  }, K = () => J.current ? J.current[Z ? "clientWidth" : "clientHeight"] : 0, ne = ie((be, Ce) => {
    J.current && Z && (J.current.style.position = "absolute"), be.style[q] = te, R && R(be, Ce);
  }), se = ie((be, Ce) => {
    const de = K();
    J.current && Z && (J.current.style.position = "");
    const {
      duration: Ae,
      easing: at
    } = Ki({
      style: _,
      timeout: A,
      easing: b
    }, {
      mode: "enter"
    });
    if (A === "auto") {
      const Oe = Y.transitions.getAutoHeightDuration(de);
      be.style.transitionDuration = `${Oe}ms`, W.current = Oe;
    } else
      be.style.transitionDuration = typeof Ae == "string" ? Ae : `${Ae}ms`;
    be.style[q] = `${de}px`, be.style.transitionTimingFunction = at, k && k(be, Ce);
  }), Fe = ie((be, Ce) => {
    be.style[q] = "auto", D && D(be, Ce);
  }), qe = ie((be) => {
    be.style[q] = `${K()}px`, $ && $(be);
  }), Me = ie(P), fe = ie((be) => {
    const Ce = K(), {
      duration: de,
      easing: Ae
    } = Ki({
      style: _,
      timeout: A,
      easing: b
    }, {
      mode: "exit"
    });
    if (A === "auto") {
      const at = Y.transitions.getAutoHeightDuration(Ce);
      be.style.transitionDuration = `${at}ms`, W.current = at;
    } else
      be.style.transitionDuration = typeof de == "string" ? de : `${de}ms`;
    be.style[q] = te, be.style.transitionTimingFunction = Ae, O && O(be);
  });
  return /* @__PURE__ */ z(V, x({
    in: S,
    onEnter: ne,
    onEntered: Fe,
    onEntering: se,
    onExit: qe,
    onExited: Me,
    onExiting: fe,
    addEndListener: (be) => {
      A === "auto" && H.start(W.current || 0, be), d && d(Q.current, be);
    },
    nodeRef: Q,
    timeout: A === "auto" ? null : A
  }, B, {
    children: (be, Ce) => /* @__PURE__ */ z(A4, x({
      as: g,
      className: ve(F.root, f, {
        entered: F.entered,
        exited: !S && te === "0px" && F.hidden
      }[be]),
      style: x({
        [Z ? "minWidth" : "minHeight"]: te
      }, _),
      ref: re
    }, Ce, {
      // `ownerState` is set after `childProps` to override any existing `ownerState` property in `childProps`
      // that might have been forwarded from the Transition component.
      ownerState: x({}, M, {
        state: be
      }),
      children: /* @__PURE__ */ z(_4, {
        ownerState: x({}, M, {
          state: be
        }),
        className: F.wrapper,
        ref: J,
        children: /* @__PURE__ */ z(B4, {
          ownerState: x({}, M, {
            state: be
          }),
          className: F.wrapperInner,
          children: p
        })
      })
    }))
  }));
});
process.env.NODE_ENV !== "production" && (fw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: t.func,
  /**
   * The content node to be collapsed.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The width (horizontal) or height (vertical) of the container when collapsed.
   * @default '0px'
   */
  collapsedSize: t.oneOfType([t.number, t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: Kc,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: t.oneOfType([t.shape({
    enter: t.string,
    exit: t.string
  }), t.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: t.bool,
  /**
   * @ignore
   */
  onEnter: t.func,
  /**
   * @ignore
   */
  onEntered: t.func,
  /**
   * @ignore
   */
  onEntering: t.func,
  /**
   * @ignore
   */
  onExit: t.func,
  /**
   * @ignore
   */
  onExited: t.func,
  /**
   * @ignore
   */
  onExiting: t.func,
  /**
   * The transition orientation.
   * @default 'vertical'
   */
  orientation: t.oneOf(["horizontal", "vertical"]),
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default duration.standard
   */
  timeout: t.oneOfType([t.oneOf(["auto"]), t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })])
});
fw.muiSupportAuto = !0;
const mw = fw;
function z4(e) {
  return We("MuiPaper", e);
}
const V4 = Ge("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]), fae = V4, F4 = ["className", "component", "elevation", "square", "variant"], j4 = (e) => {
  const {
    square: o,
    elevation: i,
    variant: c,
    classes: d
  } = e, p = {
    root: ["root", c, !o && "rounded", c === "elevation" && `elevation${i}`]
  };
  return Ye(p, z4, d);
}, U4 = ee("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[i.variant], !i.square && o.rounded, i.variant === "elevation" && o[`elevation${i.elevation}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => {
  var i;
  return x({
    backgroundColor: (e.vars || e).palette.background.paper,
    color: (e.vars || e).palette.text.primary,
    transition: e.transitions.create("box-shadow")
  }, !o.square && {
    borderRadius: e.shape.borderRadius
  }, o.variant === "outlined" && {
    border: `1px solid ${(e.vars || e).palette.divider}`
  }, o.variant === "elevation" && x({
    boxShadow: (e.vars || e).shadows[o.elevation]
  }, !e.vars && e.palette.mode === "dark" && {
    backgroundImage: `linear-gradient(${Wt("#fff", BC(o.elevation))}, ${Wt("#fff", BC(o.elevation))})`
  }, e.vars && {
    backgroundImage: (i = e.vars.overlays) == null ? void 0 : i[o.elevation]
  }));
}), _N = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiPaper"
  }), {
    className: d,
    component: p = "div",
    elevation: f = 1,
    square: v = !1,
    variant: g = "elevation"
  } = c, b = ue(c, F4), S = x({}, c, {
    component: p,
    elevation: f,
    square: v,
    variant: g
  }), R = j4(S);
  return process.env.NODE_ENV !== "production" && Mn().shadows[f] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${f}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${f}]\` is defined.`].join(`
`)), /* @__PURE__ */ z(U4, x({
    as: p,
    ownerState: S,
    className: ve(R.root, d),
    ref: i
  }, b));
});
process.env.NODE_ENV !== "production" && (_N.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: Ko(To, (e) => {
    const {
      elevation: o,
      variant: i
    } = e;
    return o > 0 && i === "outlined" ? new Error(`MUI: Combining \`elevation={${o}}\` with \`variant="${i}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: t.oneOfType([t.oneOf(["elevation", "outlined"]), t.string])
});
const Ya = _N, BN = /* @__PURE__ */ w.createContext({});
process.env.NODE_ENV !== "production" && (BN.displayName = "AccordionContext");
const zN = BN;
function Gi(e) {
  return typeof e == "string";
}
function Cf(e, o, i) {
  return e === void 0 || Gi(e) ? o : x({}, o, {
    ownerState: x({}, o.ownerState, i)
  });
}
function H4(e, o, i = (c, d) => c === d) {
  return e.length === o.length && e.every((c, d) => i(c, o[d]));
}
const W4 = {
  disableDefaultClasses: !1
}, VN = /* @__PURE__ */ w.createContext(W4);
process.env.NODE_ENV !== "production" && (VN.displayName = "ClassNameConfiguratorContext");
function Y4(e) {
  const {
    disableDefaultClasses: o
  } = w.useContext(VN);
  return (i) => o ? "" : e(i);
}
function hd(e, o = []) {
  if (e === void 0)
    return {};
  const i = {};
  return Object.keys(e).filter((c) => c.match(/^on[A-Z]/) && typeof e[c] == "function" && !o.includes(c)).forEach((c) => {
    i[c] = e[c];
  }), i;
}
function s0(e, o, i) {
  return typeof e == "function" ? e(o, i) : e;
}
function uD(e) {
  if (e === void 0)
    return {};
  const o = {};
  return Object.keys(e).filter((i) => !(i.match(/^on[A-Z]/) && typeof e[i] == "function")).forEach((i) => {
    o[i] = e[i];
  }), o;
}
function FN(e) {
  const {
    getSlotProps: o,
    additionalProps: i,
    externalSlotProps: c,
    externalForwardedProps: d,
    className: p
  } = e;
  if (!o) {
    const k = ve(i == null ? void 0 : i.className, p, d == null ? void 0 : d.className, c == null ? void 0 : c.className), $ = x({}, i == null ? void 0 : i.style, d == null ? void 0 : d.style, c == null ? void 0 : c.style), P = x({}, i, d, c);
    return k.length > 0 && (P.className = k), Object.keys($).length > 0 && (P.style = $), {
      props: P,
      internalRef: void 0
    };
  }
  const f = hd(x({}, d, c)), v = uD(c), g = uD(d), b = o(f), S = ve(b == null ? void 0 : b.className, i == null ? void 0 : i.className, p, d == null ? void 0 : d.className, c == null ? void 0 : c.className), R = x({}, b == null ? void 0 : b.style, i == null ? void 0 : i.style, d == null ? void 0 : d.style, c == null ? void 0 : c.style), D = x({}, b, i, g, v);
  return S.length > 0 && (D.className = S), Object.keys(R).length > 0 && (D.style = R), {
    props: D,
    internalRef: b.ref
  };
}
const G4 = ["elementType", "externalSlotProps", "ownerState", "skipResolvingSlotProps"];
function ln(e) {
  var o;
  const {
    elementType: i,
    externalSlotProps: c,
    ownerState: d,
    skipResolvingSlotProps: p = !1
  } = e, f = ue(e, G4), v = p ? {} : s0(c, d), {
    props: g,
    internalRef: b
  } = FN(x({}, f, {
    externalSlotProps: v
  })), S = cn(b, v == null ? void 0 : v.ref, (o = e.additionalProps) == null ? void 0 : o.ref);
  return Cf(i, x({}, g, {
    ref: S
  }), d);
}
const q4 = ["className", "elementType", "ownerState", "externalForwardedProps", "getSlotOwnerState", "internalForwardedProps"], K4 = ["component", "slots", "slotProps"], Q4 = ["component"];
function FC(e, o) {
  const {
    className: i,
    elementType: c,
    ownerState: d,
    externalForwardedProps: p,
    getSlotOwnerState: f,
    internalForwardedProps: v
  } = o, g = ue(o, q4), {
    component: b,
    slots: S = {
      [e]: void 0
    },
    slotProps: R = {
      [e]: void 0
    }
  } = p, D = ue(p, K4), k = S[e] || c, $ = s0(R[e], d), P = FN(x({
    className: i
  }, g, {
    externalForwardedProps: e === "root" ? D : void 0,
    externalSlotProps: $
  })), {
    props: {
      component: O
    },
    internalRef: I
  } = P, _ = ue(P.props, Q4), A = cn(I, $ == null ? void 0 : $.ref, o.ref), V = f ? f(_) : {}, B = x({}, d, V), M = e === "root" ? O || b : O, F = Cf(k, x({}, e === "root" && !b && !S[e] && v, e !== "root" && !S[e] && v, _, M && {
    as: M
  }, {
    ref: A
  }), B);
  return Object.keys(V).forEach((Y) => {
    delete F[Y];
  }), [k, F];
}
function X4(e) {
  return We("MuiAccordion", e);
}
const Z4 = Ge("MuiAccordion", ["root", "rounded", "expanded", "disabled", "gutters", "region"]), aC = Z4, J4 = ["children", "className", "defaultExpanded", "disabled", "disableGutters", "expanded", "onChange", "square", "slots", "slotProps", "TransitionComponent", "TransitionProps"], e5 = (e) => {
  const {
    classes: o,
    square: i,
    expanded: c,
    disabled: d,
    disableGutters: p
  } = e;
  return Ye({
    root: ["root", !i && "rounded", c && "expanded", d && "disabled", !p && "gutters"],
    region: ["region"]
  }, X4, o);
}, t5 = ee(Ya, {
  name: "MuiAccordion",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [{
      [`& .${aC.region}`]: o.region
    }, o.root, !i.square && o.rounded, !i.disableGutters && o.gutters];
  }
})(({
  theme: e
}) => {
  const o = {
    duration: e.transitions.duration.shortest
  };
  return {
    position: "relative",
    transition: e.transitions.create(["margin"], o),
    overflowAnchor: "none",
    // Keep the same scrolling position
    "&::before": {
      position: "absolute",
      left: 0,
      top: -1,
      right: 0,
      height: 1,
      content: '""',
      opacity: 1,
      backgroundColor: (e.vars || e).palette.divider,
      transition: e.transitions.create(["opacity", "background-color"], o)
    },
    "&:first-of-type": {
      "&::before": {
        display: "none"
      }
    },
    [`&.${aC.expanded}`]: {
      "&::before": {
        opacity: 0
      },
      "&:first-of-type": {
        marginTop: 0
      },
      "&:last-of-type": {
        marginBottom: 0
      },
      "& + &": {
        "&::before": {
          display: "none"
        }
      }
    },
    [`&.${aC.disabled}`]: {
      backgroundColor: (e.vars || e).palette.action.disabledBackground
    }
  };
}, ({
  theme: e,
  ownerState: o
}) => x({}, !o.square && {
  borderRadius: 0,
  "&:first-of-type": {
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius
  },
  "&:last-of-type": {
    borderBottomLeftRadius: (e.vars || e).shape.borderRadius,
    borderBottomRightRadius: (e.vars || e).shape.borderRadius,
    // Fix a rendering issue on Edge
    "@supports (-ms-ime-align: auto)": {
      borderBottomLeftRadius: 0,
      borderBottomRightRadius: 0
    }
  }
}, !o.disableGutters && {
  [`&.${aC.expanded}`]: {
    margin: "16px 0"
  }
})), jN = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiAccordion"
  }), {
    children: d,
    className: p,
    defaultExpanded: f = !1,
    disabled: v = !1,
    disableGutters: g = !1,
    expanded: b,
    onChange: S,
    square: R = !1,
    slots: D = {},
    slotProps: k = {},
    TransitionComponent: $,
    TransitionProps: P
  } = c, O = ue(c, J4), [I, _] = Eo({
    controlled: b,
    default: f,
    name: "Accordion",
    state: "expanded"
  }), A = w.useCallback((Z) => {
    _(!I), S && S(Z, !I);
  }, [I, S, _]), [V, ...B] = w.Children.toArray(d), M = w.useMemo(() => ({
    expanded: I,
    disabled: v,
    disableGutters: g,
    toggle: A
  }), [I, v, g, A]), F = x({}, c, {
    square: R,
    disabled: v,
    disableGutters: g,
    expanded: I
  }), Y = e5(F), H = x({
    transition: $
  }, D), J = x({
    transition: P
  }, k), [W, te] = FC("transition", {
    elementType: mw,
    externalForwardedProps: {
      slots: H,
      slotProps: J
    },
    ownerState: F
  });
  return /* @__PURE__ */ ht(t5, x({
    className: ve(Y.root, p),
    ref: i,
    ownerState: F,
    square: R
  }, O, {
    children: [/* @__PURE__ */ z(zN.Provider, {
      value: M,
      children: V
    }), /* @__PURE__ */ z(W, x({
      in: I,
      timeout: "auto"
    }, te, {
      children: /* @__PURE__ */ z("div", {
        "aria-labelledby": V.props.id,
        id: V.props["aria-controls"],
        role: "region",
        className: Y.region,
        children: B
      })
    }))]
  }));
});
process.env.NODE_ENV !== "production" && (jN.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: Ko(t.node.isRequired, (e) => {
    const o = w.Children.toArray(e.children)[0];
    return Xi.isFragment(o) ? new Error("MUI: The Accordion doesn't accept a Fragment as a child. Consider providing an array instead.") : /* @__PURE__ */ w.isValidElement(o) ? null : new Error("MUI: Expected the first child of Accordion to be a valid element.");
  }),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, expands the accordion by default.
   * @default false
   */
  defaultExpanded: t.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, it removes the margin between two expanded accordion items and the increase of height.
   * @default false
   */
  disableGutters: t.bool,
  /**
   * If `true`, expands the accordion, otherwise collapse it.
   * Setting this prop enables control over the accordion.
   */
  expanded: t.bool,
  /**
   * Callback fired when the expand/collapse state is changed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {boolean} expanded The `expanded` state of the accordion.
   */
  onChange: t.func,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: t.shape({
    transition: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: t.shape({
    transition: t.elementType
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated Use `slots.transition` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   */
  TransitionComponent: t.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated Use `slotProps.transition` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   */
  TransitionProps: t.object
});
const mae = jN;
function n5(e) {
  return We("MuiAccordionActions", e);
}
const o5 = Ge("MuiAccordionActions", ["root", "spacing"]), hae = o5, r5 = ["className", "disableSpacing"], a5 = (e) => {
  const {
    classes: o,
    disableSpacing: i
  } = e;
  return Ye({
    root: ["root", !i && "spacing"]
  }, n5, o);
}, i5 = ee("div", {
  name: "MuiAccordionActions",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, !i.disableSpacing && o.spacing];
  }
})(({
  ownerState: e
}) => x({
  display: "flex",
  alignItems: "center",
  padding: 8,
  justifyContent: "flex-end"
}, !e.disableSpacing && {
  "& > :not(style) ~ :not(style)": {
    marginLeft: 8
  }
})), UN = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiAccordionActions"
  }), {
    className: d,
    disableSpacing: p = !1
  } = c, f = ue(c, r5), v = x({}, c, {
    disableSpacing: p
  }), g = a5(v);
  return /* @__PURE__ */ z(i5, x({
    className: ve(g.root, d),
    ref: i,
    ownerState: v
  }, f));
});
process.env.NODE_ENV !== "production" && (UN.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const vae = UN;
function s5(e) {
  return We("MuiAccordionDetails", e);
}
const l5 = Ge("MuiAccordionDetails", ["root"]), gae = l5, c5 = ["className"], u5 = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"]
  }, s5, o);
}, d5 = ee("div", {
  name: "MuiAccordionDetails",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})(({
  theme: e
}) => ({
  padding: e.spacing(1, 2, 2)
})), HN = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiAccordionDetails"
  }), {
    className: d
  } = c, p = ue(c, c5), f = c, v = u5(f);
  return /* @__PURE__ */ z(d5, x({
    className: ve(v.root, d),
    ref: i,
    ownerState: f
  }, p));
});
process.env.NODE_ENV !== "production" && (HN.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const yae = HN;
function WN(e) {
  const {
    className: o,
    classes: i,
    pulsate: c = !1,
    rippleX: d,
    rippleY: p,
    rippleSize: f,
    in: v,
    onExited: g,
    timeout: b
  } = e, [S, R] = w.useState(!1), D = ve(o, i.ripple, i.rippleVisible, c && i.ripplePulsate), k = {
    width: f,
    height: f,
    top: -(f / 2) + p,
    left: -(f / 2) + d
  }, $ = ve(i.child, S && i.childLeaving, c && i.childPulsate);
  return !v && !S && R(!0), w.useEffect(() => {
    if (!v && g != null) {
      const P = setTimeout(g, b);
      return () => {
        clearTimeout(P);
      };
    }
  }, [g, v, b]), /* @__PURE__ */ z("span", {
    className: D,
    style: k,
    children: /* @__PURE__ */ z("span", {
      className: $
    })
  });
}
process.env.NODE_ENV !== "production" && (WN.propTypes = {
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object.isRequired,
  className: t.string,
  /**
   * @ignore - injected from TransitionGroup
   */
  in: t.bool,
  /**
   * @ignore - injected from TransitionGroup
   */
  onExited: t.func,
  /**
   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
   */
  pulsate: t.bool,
  /**
   * Diameter of the ripple.
   */
  rippleSize: t.number,
  /**
   * Horizontal position of the ripple center.
   */
  rippleX: t.number,
  /**
   * Vertical position of the ripple center.
   */
  rippleY: t.number,
  /**
   * exit delay
   */
  timeout: t.number.isRequired
});
function bae(e) {
  return We("MuiTouchRipple", e);
}
const p5 = Ge("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]), ui = p5, f5 = ["center", "classes", "className"];
let l0 = (e) => e, dD, pD, fD, mD;
const _1 = 550, m5 = 80, h5 = Qi(dD || (dD = l0`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`)), v5 = Qi(pD || (pD = l0`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`)), g5 = Qi(fD || (fD = l0`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`)), y5 = ee("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
}), b5 = ee(WN, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})(mD || (mD = l0`
  opacity: 0;
  position: absolute;

  &.${0} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  &.${0} {
    animation-duration: ${0}ms;
  }

  & .${0} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${0} {
    opacity: 0;
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  & .${0} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${0};
    animation-duration: 2500ms;
    animation-timing-function: ${0};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`), ui.rippleVisible, h5, _1, ({
  theme: e
}) => e.transitions.easing.easeInOut, ui.ripplePulsate, ({
  theme: e
}) => e.transitions.duration.shorter, ui.child, ui.childLeaving, v5, _1, ({
  theme: e
}) => e.transitions.easing.easeInOut, ui.childPulsate, g5, ({
  theme: e
}) => e.transitions.easing.easeInOut), YN = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiTouchRipple"
  }), {
    center: d = !1,
    classes: p = {},
    className: f
  } = c, v = ue(c, f5), [g, b] = w.useState([]), S = w.useRef(0), R = w.useRef(null);
  w.useEffect(() => {
    R.current && (R.current(), R.current = null);
  }, [g]);
  const D = w.useRef(!1), k = Pl(), $ = w.useRef(null), P = w.useRef(null), O = w.useCallback((V) => {
    const {
      pulsate: B,
      rippleX: M,
      rippleY: F,
      rippleSize: Y,
      cb: H
    } = V;
    b((J) => [...J, /* @__PURE__ */ z(b5, {
      classes: {
        ripple: ve(p.ripple, ui.ripple),
        rippleVisible: ve(p.rippleVisible, ui.rippleVisible),
        ripplePulsate: ve(p.ripplePulsate, ui.ripplePulsate),
        child: ve(p.child, ui.child),
        childLeaving: ve(p.childLeaving, ui.childLeaving),
        childPulsate: ve(p.childPulsate, ui.childPulsate)
      },
      timeout: _1,
      pulsate: B,
      rippleX: M,
      rippleY: F,
      rippleSize: Y
    }, S.current)]), S.current += 1, R.current = H;
  }, [p]), I = w.useCallback((V = {}, B = {}, M = () => {
  }) => {
    const {
      pulsate: F = !1,
      center: Y = d || B.pulsate,
      fakeElement: H = !1
      // For test purposes
    } = B;
    if ((V == null ? void 0 : V.type) === "mousedown" && D.current) {
      D.current = !1;
      return;
    }
    (V == null ? void 0 : V.type) === "touchstart" && (D.current = !0);
    const J = H ? null : P.current, W = J ? J.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let te, Z, q;
    if (Y || V === void 0 || V.clientX === 0 && V.clientY === 0 || !V.clientX && !V.touches)
      te = Math.round(W.width / 2), Z = Math.round(W.height / 2);
    else {
      const {
        clientX: Q,
        clientY: re
      } = V.touches && V.touches.length > 0 ? V.touches[0] : V;
      te = Math.round(Q - W.left), Z = Math.round(re - W.top);
    }
    if (Y)
      q = Math.sqrt((2 * W.width ** 2 + W.height ** 2) / 3), q % 2 === 0 && (q += 1);
    else {
      const Q = Math.max(Math.abs((J ? J.clientWidth : 0) - te), te) * 2 + 2, re = Math.max(Math.abs((J ? J.clientHeight : 0) - Z), Z) * 2 + 2;
      q = Math.sqrt(Q ** 2 + re ** 2);
    }
    V != null && V.touches ? $.current === null && ($.current = () => {
      O({
        pulsate: F,
        rippleX: te,
        rippleY: Z,
        rippleSize: q,
        cb: M
      });
    }, k.start(m5, () => {
      $.current && ($.current(), $.current = null);
    })) : O({
      pulsate: F,
      rippleX: te,
      rippleY: Z,
      rippleSize: q,
      cb: M
    });
  }, [d, O, k]), _ = w.useCallback(() => {
    I({}, {
      pulsate: !0
    });
  }, [I]), A = w.useCallback((V, B) => {
    if (k.clear(), (V == null ? void 0 : V.type) === "touchend" && $.current) {
      $.current(), $.current = null, k.start(0, () => {
        A(V, B);
      });
      return;
    }
    $.current = null, b((M) => M.length > 0 ? M.slice(1) : M), R.current = B;
  }, [k]);
  return w.useImperativeHandle(i, () => ({
    pulsate: _,
    start: I,
    stop: A
  }), [_, I, A]), /* @__PURE__ */ z(y5, x({
    className: ve(ui.root, p.root, f),
    ref: P
  }, v, {
    children: /* @__PURE__ */ z(pw, {
      component: null,
      exit: !0,
      children: g
    })
  }));
});
process.env.NODE_ENV !== "production" && (YN.propTypes = {
  /**
   * If `true`, the ripple starts at the center of the component
   * rather than at the point of interaction.
   */
  center: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string
});
const C5 = YN;
function x5(e) {
  return We("MuiButtonBase", e);
}
const S5 = Ge("MuiButtonBase", ["root", "disabled", "focusVisible"]), T5 = S5, w5 = ["action", "centerRipple", "children", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "LinkComponent", "onBlur", "onClick", "onContextMenu", "onDragLeave", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "tabIndex", "TouchRippleProps", "touchRippleRef", "type"], E5 = (e) => {
  const {
    disabled: o,
    focusVisible: i,
    focusVisibleClassName: c,
    classes: d
  } = e, f = Ye({
    root: ["root", o && "disabled", i && "focusVisible"]
  }, x5, d);
  return i && c && (f.root += ` ${c}`), f;
}, R5 = ee("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  textDecoration: "none",
  // So we take precedent over the style of a native <a /> element.
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${T5.disabled}`]: {
    pointerEvents: "none",
    // Disable link interactions
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
}), GN = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiButtonBase"
  }), {
    action: d,
    centerRipple: p = !1,
    children: f,
    className: v,
    component: g = "button",
    disabled: b = !1,
    disableRipple: S = !1,
    disableTouchRipple: R = !1,
    focusRipple: D = !1,
    LinkComponent: k = "a",
    onBlur: $,
    onClick: P,
    onContextMenu: O,
    onDragLeave: I,
    onFocus: _,
    onFocusVisible: A,
    onKeyDown: V,
    onKeyUp: B,
    onMouseDown: M,
    onMouseLeave: F,
    onMouseUp: Y,
    onTouchEnd: H,
    onTouchMove: J,
    onTouchStart: W,
    tabIndex: te = 0,
    TouchRippleProps: Z,
    touchRippleRef: q,
    type: Q
  } = c, re = ue(c, w5), ie = w.useRef(null), K = w.useRef(null), ne = cn(K, q), {
    isFocusVisibleRef: se,
    onFocus: Fe,
    onBlur: qe,
    ref: Me
  } = If(), [fe, De] = w.useState(!1);
  b && fe && De(!1), w.useImperativeHandle(d, () => ({
    focusVisible: () => {
      De(!0), ie.current.focus();
    }
  }), []);
  const [be, Ce] = w.useState(!1);
  w.useEffect(() => {
    Ce(!0);
  }, []);
  const de = be && !S && !b;
  w.useEffect(() => {
    fe && D && !S && be && K.current.pulsate();
  }, [S, D, fe, be]);
  function Ae(xe, ot, He = R) {
    return St((it) => (ot && ot(it), !He && K.current && K.current[xe](it), !0));
  }
  const at = Ae("start", M), Oe = Ae("stop", O), _e = Ae("stop", I), ye = Ae("stop", Y), ae = Ae("stop", (xe) => {
    fe && xe.preventDefault(), F && F(xe);
  }), $e = Ae("start", W), Se = Ae("stop", H), mt = Ae("stop", J), Be = Ae("stop", (xe) => {
    qe(xe), se.current === !1 && De(!1), $ && $(xe);
  }, !1), ft = St((xe) => {
    ie.current || (ie.current = xe.currentTarget), Fe(xe), se.current === !0 && (De(!0), A && A(xe)), _ && _(xe);
  }), je = () => {
    const xe = ie.current;
    return g && g !== "button" && !(xe.tagName === "A" && xe.href);
  }, Ve = w.useRef(!1), st = St((xe) => {
    D && !Ve.current && fe && K.current && xe.key === " " && (Ve.current = !0, K.current.stop(xe, () => {
      K.current.start(xe);
    })), xe.target === xe.currentTarget && je() && xe.key === " " && xe.preventDefault(), V && V(xe), xe.target === xe.currentTarget && je() && xe.key === "Enter" && !b && (xe.preventDefault(), P && P(xe));
  }), gt = St((xe) => {
    D && xe.key === " " && K.current && fe && !xe.defaultPrevented && (Ve.current = !1, K.current.stop(xe, () => {
      K.current.pulsate(xe);
    })), B && B(xe), P && xe.target === xe.currentTarget && je() && xe.key === " " && !xe.defaultPrevented && P(xe);
  });
  let Tt = g;
  Tt === "button" && (re.href || re.to) && (Tt = k);
  const _t = {};
  Tt === "button" ? (_t.type = Q === void 0 ? "button" : Q, _t.disabled = b) : (!re.href && !re.to && (_t.role = "button"), b && (_t["aria-disabled"] = b));
  const Zt = cn(i, Me, ie);
  process.env.NODE_ENV !== "production" && w.useEffect(() => {
    de && !K.current && console.error(["MUI: The `component` prop provided to ButtonBase is invalid.", "Please make sure the children prop is rendered in this custom component."].join(`
`));
  }, [de]);
  const Vt = x({}, c, {
    centerRipple: p,
    component: g,
    disabled: b,
    disableRipple: S,
    disableTouchRipple: R,
    focusRipple: D,
    tabIndex: te,
    focusVisible: fe
  }), Te = E5(Vt);
  return /* @__PURE__ */ ht(R5, x({
    as: Tt,
    className: ve(Te.root, v),
    ownerState: Vt,
    onBlur: Be,
    onClick: P,
    onContextMenu: Oe,
    onFocus: ft,
    onKeyDown: st,
    onKeyUp: gt,
    onMouseDown: at,
    onMouseLeave: ae,
    onMouseUp: ye,
    onDragLeave: _e,
    onTouchEnd: Se,
    onTouchMove: mt,
    onTouchStart: $e,
    ref: Zt,
    tabIndex: b ? -1 : te,
    type: Q
  }, _t, re, {
    children: [f, de ? (
      /* TouchRipple is only needed client-side, x2 boost on the server. */
      /* @__PURE__ */ z(C5, x({
        ref: ne,
        center: p
      }, Z))
    ) : null]
  }));
});
process.env.NODE_ENV !== "production" && (GN.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: Lo,
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: t.bool,
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: Kc,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: t.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: t.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: t.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: t.string,
  /**
   * @ignore
   */
  href: t.any,
  /**
   * The component used to render a link when the `href` prop is provided.
   * @default 'a'
   */
  LinkComponent: t.elementType,
  /**
   * @ignore
   */
  onBlur: t.func,
  /**
   * @ignore
   */
  onClick: t.func,
  /**
   * @ignore
   */
  onContextMenu: t.func,
  /**
   * @ignore
   */
  onDragLeave: t.func,
  /**
   * @ignore
   */
  onFocus: t.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: t.func,
  /**
   * @ignore
   */
  onKeyDown: t.func,
  /**
   * @ignore
   */
  onKeyUp: t.func,
  /**
   * @ignore
   */
  onMouseDown: t.func,
  /**
   * @ignore
   */
  onMouseLeave: t.func,
  /**
   * @ignore
   */
  onMouseUp: t.func,
  /**
   * @ignore
   */
  onTouchEnd: t.func,
  /**
   * @ignore
   */
  onTouchMove: t.func,
  /**
   * @ignore
   */
  onTouchStart: t.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * @default 0
   */
  tabIndex: t.number,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: t.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: t.oneOfType([t.func, t.shape({
    current: t.shape({
      pulsate: t.func.isRequired,
      start: t.func.isRequired,
      stop: t.func.isRequired
    })
  })]),
  /**
   * @ignore
   */
  type: t.oneOfType([t.oneOf(["button", "reset", "submit"]), t.string])
});
const Qo = GN;
function O5(e) {
  return We("MuiAccordionSummary", e);
}
const k5 = Ge("MuiAccordionSummary", ["root", "expanded", "focusVisible", "disabled", "gutters", "contentGutters", "content", "expandIconWrapper"]), xf = k5, D5 = ["children", "className", "expandIcon", "focusVisibleClassName", "onClick"], M5 = (e) => {
  const {
    classes: o,
    expanded: i,
    disabled: c,
    disableGutters: d
  } = e;
  return Ye({
    root: ["root", i && "expanded", c && "disabled", !d && "gutters"],
    focusVisible: ["focusVisible"],
    content: ["content", i && "expanded", !d && "contentGutters"],
    expandIconWrapper: ["expandIconWrapper", i && "expanded"]
  }, O5, o);
}, N5 = ee(Qo, {
  name: "MuiAccordionSummary",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})(({
  theme: e,
  ownerState: o
}) => {
  const i = {
    duration: e.transitions.duration.shortest
  };
  return x({
    display: "flex",
    minHeight: 48,
    padding: e.spacing(0, 2),
    transition: e.transitions.create(["min-height", "background-color"], i),
    [`&.${xf.focusVisible}`]: {
      backgroundColor: (e.vars || e).palette.action.focus
    },
    [`&.${xf.disabled}`]: {
      opacity: (e.vars || e).palette.action.disabledOpacity
    },
    [`&:hover:not(.${xf.disabled})`]: {
      cursor: "pointer"
    }
  }, !o.disableGutters && {
    [`&.${xf.expanded}`]: {
      minHeight: 64
    }
  });
}), P5 = ee("div", {
  name: "MuiAccordionSummary",
  slot: "Content",
  overridesResolver: (e, o) => o.content
})(({
  theme: e,
  ownerState: o
}) => x({
  display: "flex",
  flexGrow: 1,
  margin: "12px 0"
}, !o.disableGutters && {
  transition: e.transitions.create(["margin"], {
    duration: e.transitions.duration.shortest
  }),
  [`&.${xf.expanded}`]: {
    margin: "20px 0"
  }
})), $5 = ee("div", {
  name: "MuiAccordionSummary",
  slot: "ExpandIconWrapper",
  overridesResolver: (e, o) => o.expandIconWrapper
})(({
  theme: e
}) => ({
  display: "flex",
  color: (e.vars || e).palette.action.active,
  transform: "rotate(0deg)",
  transition: e.transitions.create("transform", {
    duration: e.transitions.duration.shortest
  }),
  [`&.${xf.expanded}`]: {
    transform: "rotate(180deg)"
  }
})), qN = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiAccordionSummary"
  }), {
    children: d,
    className: p,
    expandIcon: f,
    focusVisibleClassName: v,
    onClick: g
  } = c, b = ue(c, D5), {
    disabled: S = !1,
    disableGutters: R,
    expanded: D,
    toggle: k
  } = w.useContext(zN), $ = (I) => {
    k && k(I), g && g(I);
  }, P = x({}, c, {
    expanded: D,
    disabled: S,
    disableGutters: R
  }), O = M5(P);
  return /* @__PURE__ */ ht(N5, x({
    focusRipple: !1,
    disableRipple: !0,
    disabled: S,
    component: "div",
    "aria-expanded": D,
    className: ve(O.root, p),
    focusVisibleClassName: ve(O.focusVisible, v),
    onClick: $,
    ref: i,
    ownerState: P
  }, b, {
    children: [/* @__PURE__ */ z(P5, {
      className: O.content,
      ownerState: P,
      children: d
    }), f && /* @__PURE__ */ z($5, {
      className: O.expandIconWrapper,
      ownerState: P,
      children: f
    })]
  }));
});
process.env.NODE_ENV !== "production" && (qN.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The icon to display as the expand indicator.
   */
  expandIcon: t.node,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: t.string,
  /**
   * @ignore
   */
  onClick: t.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Cae = qN;
function I5(e) {
  const {
    badgeContent: o,
    invisible: i = !1,
    max: c = 99,
    showZero: d = !1
  } = e, p = ew({
    badgeContent: o,
    max: c
  });
  let f = i;
  i === !1 && o === 0 && !d && (f = !0);
  const {
    badgeContent: v,
    max: g = c
  } = f ? p : e, b = v && Number(v) > g ? `${g}+` : v;
  return {
    badgeContent: v,
    invisible: f,
    max: g,
    displayValue: b
  };
}
const KN = "base";
function L5(e) {
  return `${KN}--${e}`;
}
function A5(e, o) {
  return `${KN}-${e}-${o}`;
}
function QN(e, o) {
  const i = tF[o];
  return i ? L5(i) : A5(e, o);
}
function _5(e, o) {
  const i = {};
  return o.forEach((c) => {
    i[c] = QN(e, c);
  }), i;
}
function hD(e) {
  return e.substring(2).toLowerCase();
}
function B5(e, o) {
  return o.documentElement.clientWidth < e.clientX || o.documentElement.clientHeight < e.clientY;
}
function jC(e) {
  const {
    children: o,
    disableReactTree: i = !1,
    mouseEvent: c = "onClick",
    onClickAway: d,
    touchEvent: p = "onTouchEnd"
  } = e, f = w.useRef(!1), v = w.useRef(null), g = w.useRef(!1), b = w.useRef(!1);
  w.useEffect(() => (setTimeout(() => {
    g.current = !0;
  }, 0), () => {
    g.current = !1;
  }), []);
  const S = cn(
    // @ts-expect-error TODO upstream fix
    o.ref,
    v
  ), R = St(($) => {
    const P = b.current;
    b.current = !1;
    const O = Dn(v.current);
    if (!g.current || !v.current || "clientX" in $ && B5($, O))
      return;
    if (f.current) {
      f.current = !1;
      return;
    }
    let I;
    $.composedPath ? I = $.composedPath().indexOf(v.current) > -1 : I = !O.documentElement.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      $.target
    ) || v.current.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      $.target
    ), !I && (i || !P) && d($);
  }), D = ($) => (P) => {
    b.current = !0;
    const O = o.props[$];
    O && O(P);
  }, k = {
    ref: S
  };
  return p !== !1 && (k[p] = D(p)), w.useEffect(() => {
    if (p !== !1) {
      const $ = hD(p), P = Dn(v.current), O = () => {
        f.current = !0;
      };
      return P.addEventListener($, R), P.addEventListener("touchmove", O), () => {
        P.removeEventListener($, R), P.removeEventListener("touchmove", O);
      };
    }
  }, [R, p]), c !== !1 && (k[c] = D(c)), w.useEffect(() => {
    if (c !== !1) {
      const $ = hD(c), P = Dn(v.current);
      return P.addEventListener($, R), () => {
        P.removeEventListener($, R);
      };
    }
  }, [R, c]), /* @__PURE__ */ z(w.Fragment, {
    children: /* @__PURE__ */ w.cloneElement(o, k)
  });
}
process.env.NODE_ENV !== "production" && (jC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The wrapped element.
   */
  children: Qc.isRequired,
  /**
   * If `true`, the React tree is ignored and only the DOM tree is considered.
   * This prop changes how portaled elements are handled.
   * @default false
   */
  disableReactTree: t.bool,
  /**
   * The mouse event to listen to. You can disable the listener by providing `false`.
   * @default 'onClick'
   */
  mouseEvent: t.oneOf(["onClick", "onMouseDown", "onMouseUp", "onPointerDown", "onPointerUp", !1]),
  /**
   * Callback fired when a "click away" event is detected.
   */
  onClickAway: t.func.isRequired,
  /**
   * The touch event to listen to. You can disable the listener by providing `false`.
   * @default 'onTouchEnd'
   */
  touchEvent: t.oneOf(["onTouchEnd", "onTouchStart", !1])
});
process.env.NODE_ENV !== "production" && (jC["propTypes"] = yd(jC.propTypes));
const z5 = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function V5(e) {
  const o = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(o) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : o;
}
function F5(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const o = (c) => e.ownerDocument.querySelector(`input[type="radio"]${c}`);
  let i = o(`[name="${e.name}"]:checked`);
  return i || (i = o(`[name="${e.name}"]`)), i !== e;
}
function j5(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || F5(e));
}
function U5(e) {
  const o = [], i = [];
  return Array.from(e.querySelectorAll(z5)).forEach((c, d) => {
    const p = V5(c);
    p === -1 || !j5(c) || (p === 0 ? o.push(c) : i.push({
      documentOrder: d,
      tabIndex: p,
      node: c
    }));
  }), i.sort((c, d) => c.tabIndex === d.tabIndex ? c.documentOrder - d.documentOrder : c.tabIndex - d.tabIndex).map((c) => c.node).concat(o);
}
function H5() {
  return !0;
}
function $v(e) {
  const {
    children: o,
    disableAutoFocus: i = !1,
    disableEnforceFocus: c = !1,
    disableRestoreFocus: d = !1,
    getTabbable: p = U5,
    isEnabled: f = H5,
    open: v
  } = e, g = w.useRef(!1), b = w.useRef(null), S = w.useRef(null), R = w.useRef(null), D = w.useRef(null), k = w.useRef(!1), $ = w.useRef(null), P = cn(o.ref, $), O = w.useRef(null);
  w.useEffect(() => {
    !v || !$.current || (k.current = !i);
  }, [i, v]), w.useEffect(() => {
    if (!v || !$.current)
      return;
    const A = Dn($.current);
    return $.current.contains(A.activeElement) || ($.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), $.current.setAttribute("tabIndex", "-1")), k.current && $.current.focus()), () => {
      d || (R.current && R.current.focus && (g.current = !0, R.current.focus()), R.current = null);
    };
  }, [v]), w.useEffect(() => {
    if (!v || !$.current)
      return;
    const A = Dn($.current), V = (F) => {
      O.current = F, !(c || !f() || F.key !== "Tab") && A.activeElement === $.current && F.shiftKey && (g.current = !0, S.current && S.current.focus());
    }, B = () => {
      const F = $.current;
      if (F === null)
        return;
      if (!A.hasFocus() || !f() || g.current) {
        g.current = !1;
        return;
      }
      if (F.contains(A.activeElement) || c && A.activeElement !== b.current && A.activeElement !== S.current)
        return;
      if (A.activeElement !== D.current)
        D.current = null;
      else if (D.current !== null)
        return;
      if (!k.current)
        return;
      let Y = [];
      if ((A.activeElement === b.current || A.activeElement === S.current) && (Y = p($.current)), Y.length > 0) {
        var H, J;
        const W = !!((H = O.current) != null && H.shiftKey && ((J = O.current) == null ? void 0 : J.key) === "Tab"), te = Y[0], Z = Y[Y.length - 1];
        typeof te != "string" && typeof Z != "string" && (W ? Z.focus() : te.focus());
      } else
        F.focus();
    };
    A.addEventListener("focusin", B), A.addEventListener("keydown", V, !0);
    const M = setInterval(() => {
      A.activeElement && A.activeElement.tagName === "BODY" && B();
    }, 50);
    return () => {
      clearInterval(M), A.removeEventListener("focusin", B), A.removeEventListener("keydown", V, !0);
    };
  }, [i, c, d, f, v, p]);
  const I = (A) => {
    R.current === null && (R.current = A.relatedTarget), k.current = !0, D.current = A.target;
    const V = o.props.onFocus;
    V && V(A);
  }, _ = (A) => {
    R.current === null && (R.current = A.relatedTarget), k.current = !0;
  };
  return /* @__PURE__ */ ht(w.Fragment, {
    children: [/* @__PURE__ */ z("div", {
      tabIndex: v ? 0 : -1,
      onFocus: _,
      ref: b,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ w.cloneElement(o, {
      ref: P,
      onFocus: I
    }), /* @__PURE__ */ z("div", {
      tabIndex: v ? 0 : -1,
      onFocus: _,
      ref: S,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && ($v.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: Qc,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: t.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: t.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: t.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: t.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: t.func,
  /**
   * If `true`, focus is locked.
   */
  open: t.bool.isRequired
});
process.env.NODE_ENV !== "production" && ($v["propTypes"] = yd($v.propTypes));
function W5(e) {
  return typeof e == "function" ? e() : e;
}
const Iv = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const {
    children: c,
    container: d,
    disablePortal: p = !1
  } = o, [f, v] = w.useState(null), g = cn(/* @__PURE__ */ w.isValidElement(c) ? c.ref : null, i);
  if (so(() => {
    p || v(W5(d) || document.body);
  }, [d, p]), so(() => {
    if (f && !p)
      return Mv(i, f), () => {
        Mv(i, null);
      };
  }, [i, f, p]), p) {
    if (/* @__PURE__ */ w.isValidElement(c)) {
      const b = {
        ref: g
      };
      return /* @__PURE__ */ w.cloneElement(c, b);
    }
    return /* @__PURE__ */ z(w.Fragment, {
      children: c
    });
  }
  return /* @__PURE__ */ z(w.Fragment, {
    children: f && /* @__PURE__ */ zC.createPortal(c, f)
  });
});
process.env.NODE_ENV !== "production" && (Iv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: t.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: t.oneOfType([zs, t.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: t.bool
});
process.env.NODE_ENV !== "production" && (Iv["propTypes"] = yd(Iv.propTypes));
function Y5(e) {
  const o = Dn(e);
  return o.body === e ? Wr(e).innerWidth > o.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function Cv(e, o) {
  o ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function vD(e) {
  return parseInt(Wr(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function G5(e) {
  const i = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].indexOf(e.tagName) !== -1, c = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return i || c;
}
function gD(e, o, i, c, d) {
  const p = [o, i, ...c];
  [].forEach.call(e.children, (f) => {
    const v = p.indexOf(f) === -1, g = !G5(f);
    v && g && Cv(f, d);
  });
}
function c1(e, o) {
  let i = -1;
  return e.some((c, d) => o(c) ? (i = d, !0) : !1), i;
}
function q5(e, o) {
  const i = [], c = e.container;
  if (!o.disableScrollLock) {
    if (Y5(c)) {
      const f = vN(Dn(c));
      i.push({
        value: c.style.paddingRight,
        property: "padding-right",
        el: c
      }), c.style.paddingRight = `${vD(c) + f}px`;
      const v = Dn(c).querySelectorAll(".mui-fixed");
      [].forEach.call(v, (g) => {
        i.push({
          value: g.style.paddingRight,
          property: "padding-right",
          el: g
        }), g.style.paddingRight = `${vD(g) + f}px`;
      });
    }
    let p;
    if (c.parentNode instanceof DocumentFragment)
      p = Dn(c).body;
    else {
      const f = c.parentElement, v = Wr(c);
      p = (f == null ? void 0 : f.nodeName) === "HTML" && v.getComputedStyle(f).overflowY === "scroll" ? f : c;
    }
    i.push({
      value: p.style.overflow,
      property: "overflow",
      el: p
    }, {
      value: p.style.overflowX,
      property: "overflow-x",
      el: p
    }, {
      value: p.style.overflowY,
      property: "overflow-y",
      el: p
    }), p.style.overflow = "hidden";
  }
  return () => {
    i.forEach(({
      value: p,
      el: f,
      property: v
    }) => {
      p ? f.style.setProperty(v, p) : f.style.removeProperty(v);
    });
  };
}
function K5(e) {
  const o = [];
  return [].forEach.call(e.children, (i) => {
    i.getAttribute("aria-hidden") === "true" && o.push(i);
  }), o;
}
class Q5 {
  constructor() {
    this.containers = void 0, this.modals = void 0, this.modals = [], this.containers = [];
  }
  add(o, i) {
    let c = this.modals.indexOf(o);
    if (c !== -1)
      return c;
    c = this.modals.length, this.modals.push(o), o.modalRef && Cv(o.modalRef, !1);
    const d = K5(i);
    gD(i, o.mount, o.modalRef, d, !0);
    const p = c1(this.containers, (f) => f.container === i);
    return p !== -1 ? (this.containers[p].modals.push(o), c) : (this.containers.push({
      modals: [o],
      container: i,
      restore: null,
      hiddenSiblings: d
    }), c);
  }
  mount(o, i) {
    const c = c1(this.containers, (p) => p.modals.indexOf(o) !== -1), d = this.containers[c];
    d.restore || (d.restore = q5(d, i));
  }
  remove(o, i = !0) {
    const c = this.modals.indexOf(o);
    if (c === -1)
      return c;
    const d = c1(this.containers, (f) => f.modals.indexOf(o) !== -1), p = this.containers[d];
    if (p.modals.splice(p.modals.indexOf(o), 1), this.modals.splice(c, 1), p.modals.length === 0)
      p.restore && p.restore(), o.modalRef && Cv(o.modalRef, i), gD(p.container, o.mount, o.modalRef, p.hiddenSiblings, !1), this.containers.splice(d, 1);
    else {
      const f = p.modals[p.modals.length - 1];
      f.modalRef && Cv(f.modalRef, !1);
    }
    return c;
  }
  isTopModal(o) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === o;
  }
}
function X5(e) {
  return typeof e == "function" ? e() : e;
}
function Z5(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const J5 = new Q5();
function eH(e) {
  const {
    container: o,
    disableEscapeKeyDown: i = !1,
    disableScrollLock: c = !1,
    // @ts-ignore internal logic - Base UI supports the manager as a prop too
    manager: d = J5,
    closeAfterTransition: p = !1,
    onTransitionEnter: f,
    onTransitionExited: v,
    children: g,
    onClose: b,
    open: S,
    rootRef: R
  } = e, D = w.useRef({}), k = w.useRef(null), $ = w.useRef(null), P = cn($, R), [O, I] = w.useState(!S), _ = Z5(g);
  let A = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (A = !1);
  const V = () => Dn(k.current), B = () => (D.current.modalRef = $.current, D.current.mount = k.current, D.current), M = () => {
    d.mount(B(), {
      disableScrollLock: c
    }), $.current && ($.current.scrollTop = 0);
  }, F = St(() => {
    const re = X5(o) || V().body;
    d.add(B(), re), $.current && M();
  }), Y = w.useCallback(() => d.isTopModal(B()), [d]), H = St((re) => {
    k.current = re, re && (S && Y() ? M() : $.current && Cv($.current, A));
  }), J = w.useCallback(() => {
    d.remove(B(), A);
  }, [A, d]);
  w.useEffect(() => () => {
    J();
  }, [J]), w.useEffect(() => {
    S ? F() : (!_ || !p) && J();
  }, [S, J, _, p, F]);
  const W = (re) => (ie) => {
    var K;
    (K = re.onKeyDown) == null || K.call(re, ie), !(ie.key !== "Escape" || ie.which === 229 || // Wait until IME is settled.
    !Y()) && (i || (ie.stopPropagation(), b && b(ie, "escapeKeyDown")));
  }, te = (re) => (ie) => {
    var K;
    (K = re.onClick) == null || K.call(re, ie), ie.target === ie.currentTarget && b && b(ie, "backdropClick");
  };
  return {
    getRootProps: (re = {}) => {
      const ie = hd(e);
      delete ie.onTransitionEnter, delete ie.onTransitionExited;
      const K = x({}, ie, re);
      return x({
        role: "presentation"
      }, K, {
        onKeyDown: W(K),
        ref: P
      });
    },
    getBackdropProps: (re = {}) => {
      const ie = re;
      return x({
        "aria-hidden": !0
      }, ie, {
        onClick: te(ie),
        open: S
      });
    },
    getTransitionProps: () => {
      const re = () => {
        I(!1), f && f();
      }, ie = () => {
        I(!0), v && v(), p && J();
      };
      return {
        onEnter: AC(re, g == null ? void 0 : g.props.onEnter),
        onExited: AC(ie, g == null ? void 0 : g.props.onExited)
      };
    },
    rootRef: P,
    portalRef: H,
    isTopModal: Y,
    exited: O,
    hasTransition: _
  };
}
function UC(e) {
  const {
    children: o,
    defer: i = !1,
    fallback: c = null
  } = e, [d, p] = w.useState(!1);
  return so(() => {
    i || p(!0);
  }, [i]), w.useEffect(() => {
    i && p(!0);
  }, [i]), /* @__PURE__ */ z(w.Fragment, {
    children: d ? o : c
  });
}
process.env.NODE_ENV !== "production" && (UC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * You can wrap a node.
   */
  children: t.node,
  /**
   * If `true`, the component will not only prevent server-side rendering.
   * It will also defer the rendering of the children into a different screen frame.
   * @default false
   */
  defer: t.bool,
  /**
   * The fallback content to display.
   * @default null
   */
  fallback: t.node
});
process.env.NODE_ENV !== "production" && (UC["propTypes"] = yd(UC.propTypes));
var Da = "top", mi = "bottom", hi = "right", Ma = "left", hw = "auto", qv = [Da, mi, hi, Ma], Of = "start", Lv = "end", tH = "clippingParents", XN = "viewport", nv = "popper", nH = "reference", yD = /* @__PURE__ */ qv.reduce(function(e, o) {
  return e.concat([o + "-" + Of, o + "-" + Lv]);
}, []), ZN = /* @__PURE__ */ [].concat(qv, [hw]).reduce(function(e, o) {
  return e.concat([o, o + "-" + Of, o + "-" + Lv]);
}, []), oH = "beforeRead", rH = "read", aH = "afterRead", iH = "beforeMain", sH = "main", lH = "afterMain", cH = "beforeWrite", uH = "write", dH = "afterWrite", pH = [oH, rH, aH, iH, sH, lH, cH, uH, dH];
function Vs(e) {
  return e ? (e.nodeName || "").toLowerCase() : null;
}
function Wa(e) {
  if (e == null)
    return window;
  if (e.toString() !== "[object Window]") {
    var o = e.ownerDocument;
    return o && o.defaultView || window;
  }
  return e;
}
function gd(e) {
  var o = Wa(e).Element;
  return e instanceof o || e instanceof Element;
}
function pi(e) {
  var o = Wa(e).HTMLElement;
  return e instanceof o || e instanceof HTMLElement;
}
function vw(e) {
  if (typeof ShadowRoot > "u")
    return !1;
  var o = Wa(e).ShadowRoot;
  return e instanceof o || e instanceof ShadowRoot;
}
function fH(e) {
  var o = e.state;
  Object.keys(o.elements).forEach(function(i) {
    var c = o.styles[i] || {}, d = o.attributes[i] || {}, p = o.elements[i];
    !pi(p) || !Vs(p) || (Object.assign(p.style, c), Object.keys(d).forEach(function(f) {
      var v = d[f];
      v === !1 ? p.removeAttribute(f) : p.setAttribute(f, v === !0 ? "" : v);
    }));
  });
}
function mH(e) {
  var o = e.state, i = {
    popper: {
      position: o.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  return Object.assign(o.elements.popper.style, i.popper), o.styles = i, o.elements.arrow && Object.assign(o.elements.arrow.style, i.arrow), function() {
    Object.keys(o.elements).forEach(function(c) {
      var d = o.elements[c], p = o.attributes[c] || {}, f = Object.keys(o.styles.hasOwnProperty(c) ? o.styles[c] : i[c]), v = f.reduce(function(g, b) {
        return g[b] = "", g;
      }, {});
      !pi(d) || !Vs(d) || (Object.assign(d.style, v), Object.keys(p).forEach(function(g) {
        d.removeAttribute(g);
      }));
    });
  };
}
const hH = {
  name: "applyStyles",
  enabled: !0,
  phase: "write",
  fn: fH,
  effect: mH,
  requires: ["computeStyles"]
};
function _s(e) {
  return e.split("-")[0];
}
var vd = Math.max, HC = Math.min, kf = Math.round;
function B1() {
  var e = navigator.userAgentData;
  return e != null && e.brands && Array.isArray(e.brands) ? e.brands.map(function(o) {
    return o.brand + "/" + o.version;
  }).join(" ") : navigator.userAgent;
}
function JN() {
  return !/^((?!chrome|android).)*safari/i.test(B1());
}
function Df(e, o, i) {
  o === void 0 && (o = !1), i === void 0 && (i = !1);
  var c = e.getBoundingClientRect(), d = 1, p = 1;
  o && pi(e) && (d = e.offsetWidth > 0 && kf(c.width) / e.offsetWidth || 1, p = e.offsetHeight > 0 && kf(c.height) / e.offsetHeight || 1);
  var f = gd(e) ? Wa(e) : window, v = f.visualViewport, g = !JN() && i, b = (c.left + (g && v ? v.offsetLeft : 0)) / d, S = (c.top + (g && v ? v.offsetTop : 0)) / p, R = c.width / d, D = c.height / p;
  return {
    width: R,
    height: D,
    top: S,
    right: b + R,
    bottom: S + D,
    left: b,
    x: b,
    y: S
  };
}
function gw(e) {
  var o = Df(e), i = e.offsetWidth, c = e.offsetHeight;
  return Math.abs(o.width - i) <= 1 && (i = o.width), Math.abs(o.height - c) <= 1 && (c = o.height), {
    x: e.offsetLeft,
    y: e.offsetTop,
    width: i,
    height: c
  };
}
function eP(e, o) {
  var i = o.getRootNode && o.getRootNode();
  if (e.contains(o))
    return !0;
  if (i && vw(i)) {
    var c = o;
    do {
      if (c && e.isSameNode(c))
        return !0;
      c = c.parentNode || c.host;
    } while (c);
  }
  return !1;
}
function Ll(e) {
  return Wa(e).getComputedStyle(e);
}
function vH(e) {
  return ["table", "td", "th"].indexOf(Vs(e)) >= 0;
}
function Xc(e) {
  return ((gd(e) ? e.ownerDocument : (
    // $FlowFixMe[prop-missing]
    e.document
  )) || window.document).documentElement;
}
function c0(e) {
  return Vs(e) === "html" ? e : (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    e.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    e.parentNode || // DOM Element detected
    (vw(e) ? e.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    Xc(e)
  );
}
function bD(e) {
  return !pi(e) || // https://github.com/popperjs/popper-core/issues/837
  Ll(e).position === "fixed" ? null : e.offsetParent;
}
function gH(e) {
  var o = /firefox/i.test(B1()), i = /Trident/i.test(B1());
  if (i && pi(e)) {
    var c = Ll(e);
    if (c.position === "fixed")
      return null;
  }
  var d = c0(e);
  for (vw(d) && (d = d.host); pi(d) && ["html", "body"].indexOf(Vs(d)) < 0; ) {
    var p = Ll(d);
    if (p.transform !== "none" || p.perspective !== "none" || p.contain === "paint" || ["transform", "perspective"].indexOf(p.willChange) !== -1 || o && p.willChange === "filter" || o && p.filter && p.filter !== "none")
      return d;
    d = d.parentNode;
  }
  return null;
}
function Kv(e) {
  for (var o = Wa(e), i = bD(e); i && vH(i) && Ll(i).position === "static"; )
    i = bD(i);
  return i && (Vs(i) === "html" || Vs(i) === "body" && Ll(i).position === "static") ? o : i || gH(e) || o;
}
function yw(e) {
  return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y";
}
function xv(e, o, i) {
  return vd(e, HC(o, i));
}
function yH(e, o, i) {
  var c = xv(e, o, i);
  return c > i ? i : c;
}
function tP() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function nP(e) {
  return Object.assign({}, tP(), e);
}
function oP(e, o) {
  return o.reduce(function(i, c) {
    return i[c] = e, i;
  }, {});
}
var bH = function(o, i) {
  return o = typeof o == "function" ? o(Object.assign({}, i.rects, {
    placement: i.placement
  })) : o, nP(typeof o != "number" ? o : oP(o, qv));
};
function CH(e) {
  var o, i = e.state, c = e.name, d = e.options, p = i.elements.arrow, f = i.modifiersData.popperOffsets, v = _s(i.placement), g = yw(v), b = [Ma, hi].indexOf(v) >= 0, S = b ? "height" : "width";
  if (!(!p || !f)) {
    var R = bH(d.padding, i), D = gw(p), k = g === "y" ? Da : Ma, $ = g === "y" ? mi : hi, P = i.rects.reference[S] + i.rects.reference[g] - f[g] - i.rects.popper[S], O = f[g] - i.rects.reference[g], I = Kv(p), _ = I ? g === "y" ? I.clientHeight || 0 : I.clientWidth || 0 : 0, A = P / 2 - O / 2, V = R[k], B = _ - D[S] - R[$], M = _ / 2 - D[S] / 2 + A, F = xv(V, M, B), Y = g;
    i.modifiersData[c] = (o = {}, o[Y] = F, o.centerOffset = F - M, o);
  }
}
function xH(e) {
  var o = e.state, i = e.options, c = i.element, d = c === void 0 ? "[data-popper-arrow]" : c;
  d != null && (typeof d == "string" && (d = o.elements.popper.querySelector(d), !d) || eP(o.elements.popper, d) && (o.elements.arrow = d));
}
const SH = {
  name: "arrow",
  enabled: !0,
  phase: "main",
  fn: CH,
  effect: xH,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
function Mf(e) {
  return e.split("-")[1];
}
var TH = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function wH(e, o) {
  var i = e.x, c = e.y, d = o.devicePixelRatio || 1;
  return {
    x: kf(i * d) / d || 0,
    y: kf(c * d) / d || 0
  };
}
function CD(e) {
  var o, i = e.popper, c = e.popperRect, d = e.placement, p = e.variation, f = e.offsets, v = e.position, g = e.gpuAcceleration, b = e.adaptive, S = e.roundOffsets, R = e.isFixed, D = f.x, k = D === void 0 ? 0 : D, $ = f.y, P = $ === void 0 ? 0 : $, O = typeof S == "function" ? S({
    x: k,
    y: P
  }) : {
    x: k,
    y: P
  };
  k = O.x, P = O.y;
  var I = f.hasOwnProperty("x"), _ = f.hasOwnProperty("y"), A = Ma, V = Da, B = window;
  if (b) {
    var M = Kv(i), F = "clientHeight", Y = "clientWidth";
    if (M === Wa(i) && (M = Xc(i), Ll(M).position !== "static" && v === "absolute" && (F = "scrollHeight", Y = "scrollWidth")), M = M, d === Da || (d === Ma || d === hi) && p === Lv) {
      V = mi;
      var H = R && M === B && B.visualViewport ? B.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        M[F]
      );
      P -= H - c.height, P *= g ? 1 : -1;
    }
    if (d === Ma || (d === Da || d === mi) && p === Lv) {
      A = hi;
      var J = R && M === B && B.visualViewport ? B.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        M[Y]
      );
      k -= J - c.width, k *= g ? 1 : -1;
    }
  }
  var W = Object.assign({
    position: v
  }, b && TH), te = S === !0 ? wH({
    x: k,
    y: P
  }, Wa(i)) : {
    x: k,
    y: P
  };
  if (k = te.x, P = te.y, g) {
    var Z;
    return Object.assign({}, W, (Z = {}, Z[V] = _ ? "0" : "", Z[A] = I ? "0" : "", Z.transform = (B.devicePixelRatio || 1) <= 1 ? "translate(" + k + "px, " + P + "px)" : "translate3d(" + k + "px, " + P + "px, 0)", Z));
  }
  return Object.assign({}, W, (o = {}, o[V] = _ ? P + "px" : "", o[A] = I ? k + "px" : "", o.transform = "", o));
}
function EH(e) {
  var o = e.state, i = e.options, c = i.gpuAcceleration, d = c === void 0 ? !0 : c, p = i.adaptive, f = p === void 0 ? !0 : p, v = i.roundOffsets, g = v === void 0 ? !0 : v, b = {
    placement: _s(o.placement),
    variation: Mf(o.placement),
    popper: o.elements.popper,
    popperRect: o.rects.popper,
    gpuAcceleration: d,
    isFixed: o.options.strategy === "fixed"
  };
  o.modifiersData.popperOffsets != null && (o.styles.popper = Object.assign({}, o.styles.popper, CD(Object.assign({}, b, {
    offsets: o.modifiersData.popperOffsets,
    position: o.options.strategy,
    adaptive: f,
    roundOffsets: g
  })))), o.modifiersData.arrow != null && (o.styles.arrow = Object.assign({}, o.styles.arrow, CD(Object.assign({}, b, {
    offsets: o.modifiersData.arrow,
    position: "absolute",
    adaptive: !1,
    roundOffsets: g
  })))), o.attributes.popper = Object.assign({}, o.attributes.popper, {
    "data-popper-placement": o.placement
  });
}
const RH = {
  name: "computeStyles",
  enabled: !0,
  phase: "beforeWrite",
  fn: EH,
  data: {}
};
var iC = {
  passive: !0
};
function OH(e) {
  var o = e.state, i = e.instance, c = e.options, d = c.scroll, p = d === void 0 ? !0 : d, f = c.resize, v = f === void 0 ? !0 : f, g = Wa(o.elements.popper), b = [].concat(o.scrollParents.reference, o.scrollParents.popper);
  return p && b.forEach(function(S) {
    S.addEventListener("scroll", i.update, iC);
  }), v && g.addEventListener("resize", i.update, iC), function() {
    p && b.forEach(function(S) {
      S.removeEventListener("scroll", i.update, iC);
    }), v && g.removeEventListener("resize", i.update, iC);
  };
}
const kH = {
  name: "eventListeners",
  enabled: !0,
  phase: "write",
  fn: function() {
  },
  effect: OH,
  data: {}
};
var DH = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function MC(e) {
  return e.replace(/left|right|bottom|top/g, function(o) {
    return DH[o];
  });
}
var MH = {
  start: "end",
  end: "start"
};
function xD(e) {
  return e.replace(/start|end/g, function(o) {
    return MH[o];
  });
}
function bw(e) {
  var o = Wa(e), i = o.pageXOffset, c = o.pageYOffset;
  return {
    scrollLeft: i,
    scrollTop: c
  };
}
function Cw(e) {
  return Df(Xc(e)).left + bw(e).scrollLeft;
}
function NH(e, o) {
  var i = Wa(e), c = Xc(e), d = i.visualViewport, p = c.clientWidth, f = c.clientHeight, v = 0, g = 0;
  if (d) {
    p = d.width, f = d.height;
    var b = JN();
    (b || !b && o === "fixed") && (v = d.offsetLeft, g = d.offsetTop);
  }
  return {
    width: p,
    height: f,
    x: v + Cw(e),
    y: g
  };
}
function PH(e) {
  var o, i = Xc(e), c = bw(e), d = (o = e.ownerDocument) == null ? void 0 : o.body, p = vd(i.scrollWidth, i.clientWidth, d ? d.scrollWidth : 0, d ? d.clientWidth : 0), f = vd(i.scrollHeight, i.clientHeight, d ? d.scrollHeight : 0, d ? d.clientHeight : 0), v = -c.scrollLeft + Cw(e), g = -c.scrollTop;
  return Ll(d || i).direction === "rtl" && (v += vd(i.clientWidth, d ? d.clientWidth : 0) - p), {
    width: p,
    height: f,
    x: v,
    y: g
  };
}
function xw(e) {
  var o = Ll(e), i = o.overflow, c = o.overflowX, d = o.overflowY;
  return /auto|scroll|overlay|hidden/.test(i + d + c);
}
function rP(e) {
  return ["html", "body", "#document"].indexOf(Vs(e)) >= 0 ? e.ownerDocument.body : pi(e) && xw(e) ? e : rP(c0(e));
}
function Sv(e, o) {
  var i;
  o === void 0 && (o = []);
  var c = rP(e), d = c === ((i = e.ownerDocument) == null ? void 0 : i.body), p = Wa(c), f = d ? [p].concat(p.visualViewport || [], xw(c) ? c : []) : c, v = o.concat(f);
  return d ? v : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    v.concat(Sv(c0(f)))
  );
}
function z1(e) {
  return Object.assign({}, e, {
    left: e.x,
    top: e.y,
    right: e.x + e.width,
    bottom: e.y + e.height
  });
}
function $H(e, o) {
  var i = Df(e, !1, o === "fixed");
  return i.top = i.top + e.clientTop, i.left = i.left + e.clientLeft, i.bottom = i.top + e.clientHeight, i.right = i.left + e.clientWidth, i.width = e.clientWidth, i.height = e.clientHeight, i.x = i.left, i.y = i.top, i;
}
function SD(e, o, i) {
  return o === XN ? z1(NH(e, i)) : gd(o) ? $H(o, i) : z1(PH(Xc(e)));
}
function IH(e) {
  var o = Sv(c0(e)), i = ["absolute", "fixed"].indexOf(Ll(e).position) >= 0, c = i && pi(e) ? Kv(e) : e;
  return gd(c) ? o.filter(function(d) {
    return gd(d) && eP(d, c) && Vs(d) !== "body";
  }) : [];
}
function LH(e, o, i, c) {
  var d = o === "clippingParents" ? IH(e) : [].concat(o), p = [].concat(d, [i]), f = p[0], v = p.reduce(function(g, b) {
    var S = SD(e, b, c);
    return g.top = vd(S.top, g.top), g.right = HC(S.right, g.right), g.bottom = HC(S.bottom, g.bottom), g.left = vd(S.left, g.left), g;
  }, SD(e, f, c));
  return v.width = v.right - v.left, v.height = v.bottom - v.top, v.x = v.left, v.y = v.top, v;
}
function aP(e) {
  var o = e.reference, i = e.element, c = e.placement, d = c ? _s(c) : null, p = c ? Mf(c) : null, f = o.x + o.width / 2 - i.width / 2, v = o.y + o.height / 2 - i.height / 2, g;
  switch (d) {
    case Da:
      g = {
        x: f,
        y: o.y - i.height
      };
      break;
    case mi:
      g = {
        x: f,
        y: o.y + o.height
      };
      break;
    case hi:
      g = {
        x: o.x + o.width,
        y: v
      };
      break;
    case Ma:
      g = {
        x: o.x - i.width,
        y: v
      };
      break;
    default:
      g = {
        x: o.x,
        y: o.y
      };
  }
  var b = d ? yw(d) : null;
  if (b != null) {
    var S = b === "y" ? "height" : "width";
    switch (p) {
      case Of:
        g[b] = g[b] - (o[S] / 2 - i[S] / 2);
        break;
      case Lv:
        g[b] = g[b] + (o[S] / 2 - i[S] / 2);
        break;
    }
  }
  return g;
}
function Av(e, o) {
  o === void 0 && (o = {});
  var i = o, c = i.placement, d = c === void 0 ? e.placement : c, p = i.strategy, f = p === void 0 ? e.strategy : p, v = i.boundary, g = v === void 0 ? tH : v, b = i.rootBoundary, S = b === void 0 ? XN : b, R = i.elementContext, D = R === void 0 ? nv : R, k = i.altBoundary, $ = k === void 0 ? !1 : k, P = i.padding, O = P === void 0 ? 0 : P, I = nP(typeof O != "number" ? O : oP(O, qv)), _ = D === nv ? nH : nv, A = e.rects.popper, V = e.elements[$ ? _ : D], B = LH(gd(V) ? V : V.contextElement || Xc(e.elements.popper), g, S, f), M = Df(e.elements.reference), F = aP({
    reference: M,
    element: A,
    strategy: "absolute",
    placement: d
  }), Y = z1(Object.assign({}, A, F)), H = D === nv ? Y : M, J = {
    top: B.top - H.top + I.top,
    bottom: H.bottom - B.bottom + I.bottom,
    left: B.left - H.left + I.left,
    right: H.right - B.right + I.right
  }, W = e.modifiersData.offset;
  if (D === nv && W) {
    var te = W[d];
    Object.keys(J).forEach(function(Z) {
      var q = [hi, mi].indexOf(Z) >= 0 ? 1 : -1, Q = [Da, mi].indexOf(Z) >= 0 ? "y" : "x";
      J[Z] += te[Q] * q;
    });
  }
  return J;
}
function AH(e, o) {
  o === void 0 && (o = {});
  var i = o, c = i.placement, d = i.boundary, p = i.rootBoundary, f = i.padding, v = i.flipVariations, g = i.allowedAutoPlacements, b = g === void 0 ? ZN : g, S = Mf(c), R = S ? v ? yD : yD.filter(function($) {
    return Mf($) === S;
  }) : qv, D = R.filter(function($) {
    return b.indexOf($) >= 0;
  });
  D.length === 0 && (D = R);
  var k = D.reduce(function($, P) {
    return $[P] = Av(e, {
      placement: P,
      boundary: d,
      rootBoundary: p,
      padding: f
    })[_s(P)], $;
  }, {});
  return Object.keys(k).sort(function($, P) {
    return k[$] - k[P];
  });
}
function _H(e) {
  if (_s(e) === hw)
    return [];
  var o = MC(e);
  return [xD(e), o, xD(o)];
}
function BH(e) {
  var o = e.state, i = e.options, c = e.name;
  if (!o.modifiersData[c]._skip) {
    for (var d = i.mainAxis, p = d === void 0 ? !0 : d, f = i.altAxis, v = f === void 0 ? !0 : f, g = i.fallbackPlacements, b = i.padding, S = i.boundary, R = i.rootBoundary, D = i.altBoundary, k = i.flipVariations, $ = k === void 0 ? !0 : k, P = i.allowedAutoPlacements, O = o.options.placement, I = _s(O), _ = I === O, A = g || (_ || !$ ? [MC(O)] : _H(O)), V = [O].concat(A).reduce(function(fe, De) {
      return fe.concat(_s(De) === hw ? AH(o, {
        placement: De,
        boundary: S,
        rootBoundary: R,
        padding: b,
        flipVariations: $,
        allowedAutoPlacements: P
      }) : De);
    }, []), B = o.rects.reference, M = o.rects.popper, F = /* @__PURE__ */ new Map(), Y = !0, H = V[0], J = 0; J < V.length; J++) {
      var W = V[J], te = _s(W), Z = Mf(W) === Of, q = [Da, mi].indexOf(te) >= 0, Q = q ? "width" : "height", re = Av(o, {
        placement: W,
        boundary: S,
        rootBoundary: R,
        altBoundary: D,
        padding: b
      }), ie = q ? Z ? hi : Ma : Z ? mi : Da;
      B[Q] > M[Q] && (ie = MC(ie));
      var K = MC(ie), ne = [];
      if (p && ne.push(re[te] <= 0), v && ne.push(re[ie] <= 0, re[K] <= 0), ne.every(function(fe) {
        return fe;
      })) {
        H = W, Y = !1;
        break;
      }
      F.set(W, ne);
    }
    if (Y)
      for (var se = $ ? 3 : 1, Fe = function(De) {
        var be = V.find(function(Ce) {
          var de = F.get(Ce);
          if (de)
            return de.slice(0, De).every(function(Ae) {
              return Ae;
            });
        });
        if (be)
          return H = be, "break";
      }, qe = se; qe > 0; qe--) {
        var Me = Fe(qe);
        if (Me === "break")
          break;
      }
    o.placement !== H && (o.modifiersData[c]._skip = !0, o.placement = H, o.reset = !0);
  }
}
const zH = {
  name: "flip",
  enabled: !0,
  phase: "main",
  fn: BH,
  requiresIfExists: ["offset"],
  data: {
    _skip: !1
  }
};
function TD(e, o, i) {
  return i === void 0 && (i = {
    x: 0,
    y: 0
  }), {
    top: e.top - o.height - i.y,
    right: e.right - o.width + i.x,
    bottom: e.bottom - o.height + i.y,
    left: e.left - o.width - i.x
  };
}
function wD(e) {
  return [Da, hi, mi, Ma].some(function(o) {
    return e[o] >= 0;
  });
}
function VH(e) {
  var o = e.state, i = e.name, c = o.rects.reference, d = o.rects.popper, p = o.modifiersData.preventOverflow, f = Av(o, {
    elementContext: "reference"
  }), v = Av(o, {
    altBoundary: !0
  }), g = TD(f, c), b = TD(v, d, p), S = wD(g), R = wD(b);
  o.modifiersData[i] = {
    referenceClippingOffsets: g,
    popperEscapeOffsets: b,
    isReferenceHidden: S,
    hasPopperEscaped: R
  }, o.attributes.popper = Object.assign({}, o.attributes.popper, {
    "data-popper-reference-hidden": S,
    "data-popper-escaped": R
  });
}
const FH = {
  name: "hide",
  enabled: !0,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: VH
};
function jH(e, o, i) {
  var c = _s(e), d = [Ma, Da].indexOf(c) >= 0 ? -1 : 1, p = typeof i == "function" ? i(Object.assign({}, o, {
    placement: e
  })) : i, f = p[0], v = p[1];
  return f = f || 0, v = (v || 0) * d, [Ma, hi].indexOf(c) >= 0 ? {
    x: v,
    y: f
  } : {
    x: f,
    y: v
  };
}
function UH(e) {
  var o = e.state, i = e.options, c = e.name, d = i.offset, p = d === void 0 ? [0, 0] : d, f = ZN.reduce(function(S, R) {
    return S[R] = jH(R, o.rects, p), S;
  }, {}), v = f[o.placement], g = v.x, b = v.y;
  o.modifiersData.popperOffsets != null && (o.modifiersData.popperOffsets.x += g, o.modifiersData.popperOffsets.y += b), o.modifiersData[c] = f;
}
const HH = {
  name: "offset",
  enabled: !0,
  phase: "main",
  requires: ["popperOffsets"],
  fn: UH
};
function WH(e) {
  var o = e.state, i = e.name;
  o.modifiersData[i] = aP({
    reference: o.rects.reference,
    element: o.rects.popper,
    strategy: "absolute",
    placement: o.placement
  });
}
const YH = {
  name: "popperOffsets",
  enabled: !0,
  phase: "read",
  fn: WH,
  data: {}
};
function GH(e) {
  return e === "x" ? "y" : "x";
}
function qH(e) {
  var o = e.state, i = e.options, c = e.name, d = i.mainAxis, p = d === void 0 ? !0 : d, f = i.altAxis, v = f === void 0 ? !1 : f, g = i.boundary, b = i.rootBoundary, S = i.altBoundary, R = i.padding, D = i.tether, k = D === void 0 ? !0 : D, $ = i.tetherOffset, P = $ === void 0 ? 0 : $, O = Av(o, {
    boundary: g,
    rootBoundary: b,
    padding: R,
    altBoundary: S
  }), I = _s(o.placement), _ = Mf(o.placement), A = !_, V = yw(I), B = GH(V), M = o.modifiersData.popperOffsets, F = o.rects.reference, Y = o.rects.popper, H = typeof P == "function" ? P(Object.assign({}, o.rects, {
    placement: o.placement
  })) : P, J = typeof H == "number" ? {
    mainAxis: H,
    altAxis: H
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, H), W = o.modifiersData.offset ? o.modifiersData.offset[o.placement] : null, te = {
    x: 0,
    y: 0
  };
  if (M) {
    if (p) {
      var Z, q = V === "y" ? Da : Ma, Q = V === "y" ? mi : hi, re = V === "y" ? "height" : "width", ie = M[V], K = ie + O[q], ne = ie - O[Q], se = k ? -Y[re] / 2 : 0, Fe = _ === Of ? F[re] : Y[re], qe = _ === Of ? -Y[re] : -F[re], Me = o.elements.arrow, fe = k && Me ? gw(Me) : {
        width: 0,
        height: 0
      }, De = o.modifiersData["arrow#persistent"] ? o.modifiersData["arrow#persistent"].padding : tP(), be = De[q], Ce = De[Q], de = xv(0, F[re], fe[re]), Ae = A ? F[re] / 2 - se - de - be - J.mainAxis : Fe - de - be - J.mainAxis, at = A ? -F[re] / 2 + se + de + Ce + J.mainAxis : qe + de + Ce + J.mainAxis, Oe = o.elements.arrow && Kv(o.elements.arrow), _e = Oe ? V === "y" ? Oe.clientTop || 0 : Oe.clientLeft || 0 : 0, ye = (Z = W == null ? void 0 : W[V]) != null ? Z : 0, ae = ie + Ae - ye - _e, $e = ie + at - ye, Se = xv(k ? HC(K, ae) : K, ie, k ? vd(ne, $e) : ne);
      M[V] = Se, te[V] = Se - ie;
    }
    if (v) {
      var mt, Be = V === "x" ? Da : Ma, ft = V === "x" ? mi : hi, je = M[B], Ve = B === "y" ? "height" : "width", st = je + O[Be], gt = je - O[ft], Tt = [Da, Ma].indexOf(I) !== -1, _t = (mt = W == null ? void 0 : W[B]) != null ? mt : 0, Zt = Tt ? st : je - F[Ve] - Y[Ve] - _t + J.altAxis, Vt = Tt ? je + F[Ve] + Y[Ve] - _t - J.altAxis : gt, Te = k && Tt ? yH(Zt, je, Vt) : xv(k ? Zt : st, je, k ? Vt : gt);
      M[B] = Te, te[B] = Te - je;
    }
    o.modifiersData[c] = te;
  }
}
const KH = {
  name: "preventOverflow",
  enabled: !0,
  phase: "main",
  fn: qH,
  requiresIfExists: ["offset"]
};
function QH(e) {
  return {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  };
}
function XH(e) {
  return e === Wa(e) || !pi(e) ? bw(e) : QH(e);
}
function ZH(e) {
  var o = e.getBoundingClientRect(), i = kf(o.width) / e.offsetWidth || 1, c = kf(o.height) / e.offsetHeight || 1;
  return i !== 1 || c !== 1;
}
function JH(e, o, i) {
  i === void 0 && (i = !1);
  var c = pi(o), d = pi(o) && ZH(o), p = Xc(o), f = Df(e, d, i), v = {
    scrollLeft: 0,
    scrollTop: 0
  }, g = {
    x: 0,
    y: 0
  };
  return (c || !c && !i) && ((Vs(o) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
  xw(p)) && (v = XH(o)), pi(o) ? (g = Df(o, !0), g.x += o.clientLeft, g.y += o.clientTop) : p && (g.x = Cw(p))), {
    x: f.left + v.scrollLeft - g.x,
    y: f.top + v.scrollTop - g.y,
    width: f.width,
    height: f.height
  };
}
function e3(e) {
  var o = /* @__PURE__ */ new Map(), i = /* @__PURE__ */ new Set(), c = [];
  e.forEach(function(p) {
    o.set(p.name, p);
  });
  function d(p) {
    i.add(p.name);
    var f = [].concat(p.requires || [], p.requiresIfExists || []);
    f.forEach(function(v) {
      if (!i.has(v)) {
        var g = o.get(v);
        g && d(g);
      }
    }), c.push(p);
  }
  return e.forEach(function(p) {
    i.has(p.name) || d(p);
  }), c;
}
function t3(e) {
  var o = e3(e);
  return pH.reduce(function(i, c) {
    return i.concat(o.filter(function(d) {
      return d.phase === c;
    }));
  }, []);
}
function n3(e) {
  var o;
  return function() {
    return o || (o = new Promise(function(i) {
      Promise.resolve().then(function() {
        o = void 0, i(e());
      });
    })), o;
  };
}
function o3(e) {
  var o = e.reduce(function(i, c) {
    var d = i[c.name];
    return i[c.name] = d ? Object.assign({}, d, c, {
      options: Object.assign({}, d.options, c.options),
      data: Object.assign({}, d.data, c.data)
    }) : c, i;
  }, {});
  return Object.keys(o).map(function(i) {
    return o[i];
  });
}
var ED = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function RD() {
  for (var e = arguments.length, o = new Array(e), i = 0; i < e; i++)
    o[i] = arguments[i];
  return !o.some(function(c) {
    return !(c && typeof c.getBoundingClientRect == "function");
  });
}
function r3(e) {
  e === void 0 && (e = {});
  var o = e, i = o.defaultModifiers, c = i === void 0 ? [] : i, d = o.defaultOptions, p = d === void 0 ? ED : d;
  return function(v, g, b) {
    b === void 0 && (b = p);
    var S = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, ED, p),
      modifiersData: {},
      elements: {
        reference: v,
        popper: g
      },
      attributes: {},
      styles: {}
    }, R = [], D = !1, k = {
      state: S,
      setOptions: function(I) {
        var _ = typeof I == "function" ? I(S.options) : I;
        P(), S.options = Object.assign({}, p, S.options, _), S.scrollParents = {
          reference: gd(v) ? Sv(v) : v.contextElement ? Sv(v.contextElement) : [],
          popper: Sv(g)
        };
        var A = t3(o3([].concat(c, S.options.modifiers)));
        return S.orderedModifiers = A.filter(function(V) {
          return V.enabled;
        }), $(), k.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function() {
        if (!D) {
          var I = S.elements, _ = I.reference, A = I.popper;
          if (RD(_, A)) {
            S.rects = {
              reference: JH(_, Kv(A), S.options.strategy === "fixed"),
              popper: gw(A)
            }, S.reset = !1, S.placement = S.options.placement, S.orderedModifiers.forEach(function(J) {
              return S.modifiersData[J.name] = Object.assign({}, J.data);
            });
            for (var V = 0; V < S.orderedModifiers.length; V++) {
              if (S.reset === !0) {
                S.reset = !1, V = -1;
                continue;
              }
              var B = S.orderedModifiers[V], M = B.fn, F = B.options, Y = F === void 0 ? {} : F, H = B.name;
              typeof M == "function" && (S = M({
                state: S,
                options: Y,
                name: H,
                instance: k
              }) || S);
            }
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: n3(function() {
        return new Promise(function(O) {
          k.forceUpdate(), O(S);
        });
      }),
      destroy: function() {
        P(), D = !0;
      }
    };
    if (!RD(v, g))
      return k;
    k.setOptions(b).then(function(O) {
      !D && b.onFirstUpdate && b.onFirstUpdate(O);
    });
    function $() {
      S.orderedModifiers.forEach(function(O) {
        var I = O.name, _ = O.options, A = _ === void 0 ? {} : _, V = O.effect;
        if (typeof V == "function") {
          var B = V({
            state: S,
            name: I,
            instance: k,
            options: A
          }), M = function() {
          };
          R.push(B || M);
        }
      });
    }
    function P() {
      R.forEach(function(O) {
        return O();
      }), R = [];
    }
    return k;
  };
}
var a3 = [kH, YH, RH, hH, HH, zH, KH, SH, FH], i3 = /* @__PURE__ */ r3({
  defaultModifiers: a3
});
const iP = "Popper";
function s3(e) {
  return QN(iP, e);
}
_5(iP, ["root"]);
const l3 = ["anchorEl", "children", "direction", "disablePortal", "modifiers", "open", "placement", "popperOptions", "popperRef", "slotProps", "slots", "TransitionProps", "ownerState"], c3 = ["anchorEl", "children", "container", "direction", "disablePortal", "keepMounted", "modifiers", "open", "placement", "popperOptions", "popperRef", "style", "transition", "slotProps", "slots"];
function u3(e, o) {
  if (o === "ltr")
    return e;
  switch (e) {
    case "bottom-end":
      return "bottom-start";
    case "bottom-start":
      return "bottom-end";
    case "top-end":
      return "top-start";
    case "top-start":
      return "top-end";
    default:
      return e;
  }
}
function WC(e) {
  return typeof e == "function" ? e() : e;
}
function u0(e) {
  return e.nodeType !== void 0;
}
function d3(e) {
  return !u0(e);
}
const p3 = () => Ye({
  root: ["root"]
}, Y4(s3)), f3 = {}, m3 = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c;
  const {
    anchorEl: d,
    children: p,
    direction: f,
    disablePortal: v,
    modifiers: g,
    open: b,
    placement: S,
    popperOptions: R,
    popperRef: D,
    slotProps: k = {},
    slots: $ = {},
    TransitionProps: P
    // @ts-ignore internal logic
    // prevent from spreading to DOM, it can come from the parent component e.g. Select.
  } = o, O = ue(o, l3), I = w.useRef(null), _ = cn(I, i), A = w.useRef(null), V = cn(A, D), B = w.useRef(V);
  so(() => {
    B.current = V;
  }, [V]), w.useImperativeHandle(D, () => A.current, []);
  const M = u3(S, f), [F, Y] = w.useState(M), [H, J] = w.useState(WC(d));
  w.useEffect(() => {
    A.current && A.current.forceUpdate();
  }), w.useEffect(() => {
    d && J(WC(d));
  }, [d]), so(() => {
    if (!H || !b)
      return;
    const Q = (K) => {
      Y(K.placement);
    };
    if (process.env.NODE_ENV !== "production" && H && u0(H) && H.nodeType === 1) {
      const K = H.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && K.top === 0 && K.left === 0 && K.right === 0 && K.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    let re = [{
      name: "preventOverflow",
      options: {
        altBoundary: v
      }
    }, {
      name: "flip",
      options: {
        altBoundary: v
      }
    }, {
      name: "onUpdate",
      enabled: !0,
      phase: "afterWrite",
      fn: ({
        state: K
      }) => {
        Q(K);
      }
    }];
    g != null && (re = re.concat(g)), R && R.modifiers != null && (re = re.concat(R.modifiers));
    const ie = i3(H, I.current, x({
      placement: M
    }, R, {
      modifiers: re
    }));
    return B.current(ie), () => {
      ie.destroy(), B.current(null);
    };
  }, [H, v, g, b, R, M]);
  const W = {
    placement: F
  };
  P !== null && (W.TransitionProps = P);
  const te = p3(), Z = (c = $.root) != null ? c : "div", q = ln({
    elementType: Z,
    externalSlotProps: k.root,
    externalForwardedProps: O,
    additionalProps: {
      role: "tooltip",
      ref: _
    },
    ownerState: o,
    className: te.root
  });
  return /* @__PURE__ */ z(Z, x({}, q, {
    children: typeof p == "function" ? p(W) : p
  }));
}), sP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const {
    anchorEl: c,
    children: d,
    container: p,
    direction: f = "ltr",
    disablePortal: v = !1,
    keepMounted: g = !1,
    modifiers: b,
    open: S,
    placement: R = "bottom",
    popperOptions: D = f3,
    popperRef: k,
    style: $,
    transition: P = !1,
    slotProps: O = {},
    slots: I = {}
  } = o, _ = ue(o, c3), [A, V] = w.useState(!0), B = () => {
    V(!1);
  }, M = () => {
    V(!0);
  };
  if (!g && !S && (!P || A))
    return null;
  let F;
  if (p)
    F = p;
  else if (c) {
    const J = WC(c);
    F = J && u0(J) ? Dn(J).body : Dn(null).body;
  }
  const Y = !S && g && (!P || A) ? "none" : void 0, H = P ? {
    in: S,
    onEnter: B,
    onExited: M
  } : void 0;
  return /* @__PURE__ */ z(Iv, {
    disablePortal: v,
    container: F,
    children: /* @__PURE__ */ z(m3, x({
      anchorEl: c,
      direction: f,
      disablePortal: v,
      modifiers: b,
      ref: i,
      open: P ? !A : S,
      placement: R,
      popperOptions: D,
      popperRef: k,
      slotProps: O,
      slots: I
    }, _, {
      style: x({
        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
        position: "fixed",
        // Fix Popper.js display issue
        top: 0,
        left: 0,
        display: Y
      }, $),
      TransitionProps: H,
      children: d
    }))
  });
});
process.env.NODE_ENV !== "production" && (sP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: Ko(t.oneOfType([zs, t.object, t.func]), (e) => {
    if (e.open) {
      const o = WC(e.anchorEl);
      if (o && u0(o) && o.nodeType === 1) {
        const i = o.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && i.top === 0 && i.left === 0 && i.right === 0 && i.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!o || typeof o.getBoundingClientRect != "function" || d3(o) && o.contextElement != null && o.contextElement.nodeType !== 1)
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "It should be an HTML element instance or a virtualElement ", "(https://popper.js.org/docs/v2/virtual-elements/)."].join(`
`));
    }
    return null;
  }),
  /**
   * Popper render function or node.
   */
  children: t.oneOfType([t.node, t.func]),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: t.oneOfType([zs, t.func]),
  /**
   * Direction of the text.
   * @default 'ltr'
   */
  direction: t.oneOf(["ltr", "rtl"]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: t.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: t.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: t.arrayOf(t.shape({
    data: t.object,
    effect: t.func,
    enabled: t.bool,
    fn: t.func,
    name: t.any,
    options: t.object,
    phase: t.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: t.arrayOf(t.string),
    requiresIfExists: t.arrayOf(t.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: t.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: t.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: t.shape({
    modifiers: t.array,
    onFirstUpdate: t.func,
    placement: t.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: t.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: Lo,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: t.shape({
    root: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: t.shape({
    root: t.elementType
  }),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: t.bool
});
const h3 = 2;
function lP(e, o) {
  return e - o;
}
function OD(e, o) {
  var i;
  const {
    index: c
  } = (i = e.reduce((d, p, f) => {
    const v = Math.abs(o - p);
    return d === null || v < d.distance || v === d.distance ? {
      distance: v,
      index: f
    } : d;
  }, null)) != null ? i : {};
  return c;
}
function sC(e, o) {
  if (o.current !== void 0 && e.changedTouches) {
    const i = e;
    for (let c = 0; c < i.changedTouches.length; c += 1) {
      const d = i.changedTouches[c];
      if (d.identifier === o.current)
        return {
          x: d.clientX,
          y: d.clientY
        };
    }
    return !1;
  }
  return {
    x: e.clientX,
    y: e.clientY
  };
}
function YC(e, o, i) {
  return (e - o) * 100 / (i - o);
}
function v3(e, o, i) {
  return (i - o) * e + o;
}
function g3(e) {
  if (Math.abs(e) < 1) {
    const i = e.toExponential().split("e-"), c = i[0].split(".")[1];
    return (c ? c.length : 0) + parseInt(i[1], 10);
  }
  const o = e.toString().split(".")[1];
  return o ? o.length : 0;
}
function y3(e, o, i) {
  const c = Math.round((e - i) / o) * o + i;
  return Number(c.toFixed(g3(o)));
}
function kD({
  values: e,
  newValue: o,
  index: i
}) {
  const c = e.slice();
  return c[i] = o, c.sort(lP);
}
function lC({
  sliderRef: e,
  activeIndex: o,
  setActive: i
}) {
  var c, d;
  const p = Dn(e.current);
  if (!((c = e.current) != null && c.contains(p.activeElement)) || Number(p == null || (d = p.activeElement) == null ? void 0 : d.getAttribute("data-index")) !== o) {
    var f;
    (f = e.current) == null || f.querySelector(`[type="range"][data-index="${o}"]`).focus();
  }
  i && i(o);
}
function cC(e, o) {
  return typeof e == "number" && typeof o == "number" ? e === o : typeof e == "object" && typeof o == "object" ? H4(e, o) : !1;
}
const b3 = {
  horizontal: {
    offset: (e) => ({
      left: `${e}%`
    }),
    leap: (e) => ({
      width: `${e}%`
    })
  },
  "horizontal-reverse": {
    offset: (e) => ({
      right: `${e}%`
    }),
    leap: (e) => ({
      width: `${e}%`
    })
  },
  vertical: {
    offset: (e) => ({
      bottom: `${e}%`
    }),
    leap: (e) => ({
      height: `${e}%`
    })
  }
}, C3 = (e) => e;
let uC;
function DD() {
  return uC === void 0 && (typeof CSS < "u" && typeof CSS.supports == "function" ? uC = CSS.supports("touch-action", "none") : uC = !0), uC;
}
function x3(e) {
  const {
    "aria-labelledby": o,
    defaultValue: i,
    disabled: c = !1,
    disableSwap: d = !1,
    isRtl: p = !1,
    marks: f = !1,
    max: v = 100,
    min: g = 0,
    name: b,
    onChange: S,
    onChangeCommitted: R,
    orientation: D = "horizontal",
    rootRef: k,
    scale: $ = C3,
    step: P = 1,
    shiftStep: O = 10,
    tabIndex: I,
    value: _
  } = e, A = w.useRef(), [V, B] = w.useState(-1), [M, F] = w.useState(-1), [Y, H] = w.useState(!1), J = w.useRef(0), [W, te] = Eo({
    controlled: _,
    default: i ?? g,
    name: "Slider"
  }), Z = S && ((Te, xe, ot) => {
    const He = Te.nativeEvent || Te, it = new He.constructor(He.type, He);
    Object.defineProperty(it, "target", {
      writable: !0,
      value: {
        value: xe,
        name: b
      }
    }), S(it, xe, ot);
  }), q = Array.isArray(W);
  let Q = q ? W.slice().sort(lP) : [W];
  Q = Q.map((Te) => Te == null ? g : jc(Te, g, v));
  const re = f === !0 && P !== null ? [...Array(Math.floor((v - g) / P) + 1)].map((Te, xe) => ({
    value: g + P * xe
  })) : f || [], ie = re.map((Te) => Te.value), {
    isFocusVisibleRef: K,
    onBlur: ne,
    onFocus: se,
    ref: Fe
  } = If(), [qe, Me] = w.useState(-1), fe = w.useRef(), De = cn(Fe, fe), be = cn(k, De), Ce = (Te) => (xe) => {
    var ot;
    const He = Number(xe.currentTarget.getAttribute("data-index"));
    se(xe), K.current === !0 && Me(He), F(He), Te == null || (ot = Te.onFocus) == null || ot.call(Te, xe);
  }, de = (Te) => (xe) => {
    var ot;
    ne(xe), K.current === !1 && Me(-1), F(-1), Te == null || (ot = Te.onBlur) == null || ot.call(Te, xe);
  }, Ae = (Te, xe) => {
    const ot = Number(Te.currentTarget.getAttribute("data-index")), He = Q[ot], it = ie.indexOf(He);
    let Ze = xe;
    if (re && P == null) {
      const nt = ie[ie.length - 1];
      Ze > nt ? Ze = nt : Ze < ie[0] ? Ze = ie[0] : Ze = Ze < He ? ie[it - 1] : ie[it + 1];
    }
    if (Ze = jc(Ze, g, v), q) {
      d && (Ze = jc(Ze, Q[ot - 1] || -1 / 0, Q[ot + 1] || 1 / 0));
      const nt = Ze;
      Ze = kD({
        values: Q,
        newValue: Ze,
        index: ot
      });
      let Le = ot;
      d || (Le = Ze.indexOf(nt)), lC({
        sliderRef: fe,
        activeIndex: Le
      });
    }
    te(Ze), Me(ot), Z && !cC(Ze, W) && Z(Te, Ze, ot), R && R(Te, Ze);
  }, at = (Te) => (xe) => {
    var ot;
    if (P !== null) {
      const He = Number(xe.currentTarget.getAttribute("data-index")), it = Q[He];
      let Ze = null;
      (xe.key === "ArrowLeft" || xe.key === "ArrowDown") && xe.shiftKey || xe.key === "PageDown" ? Ze = Math.max(it - O, g) : ((xe.key === "ArrowRight" || xe.key === "ArrowUp") && xe.shiftKey || xe.key === "PageUp") && (Ze = Math.min(it + O, v)), Ze !== null && (Ae(xe, Ze), xe.preventDefault());
    }
    Te == null || (ot = Te.onKeyDown) == null || ot.call(Te, xe);
  };
  so(() => {
    if (c && fe.current.contains(document.activeElement)) {
      var Te;
      (Te = document.activeElement) == null || Te.blur();
    }
  }, [c]), c && V !== -1 && B(-1), c && qe !== -1 && Me(-1);
  const Oe = (Te) => (xe) => {
    var ot;
    (ot = Te.onChange) == null || ot.call(Te, xe), Ae(xe, xe.target.valueAsNumber);
  }, _e = w.useRef();
  let ye = D;
  p && D === "horizontal" && (ye += "-reverse");
  const ae = ({
    finger: Te,
    move: xe = !1
  }) => {
    const {
      current: ot
    } = fe, {
      width: He,
      height: it,
      bottom: Ze,
      left: nt
    } = ot.getBoundingClientRect();
    let Le;
    ye.indexOf("vertical") === 0 ? Le = (Ze - Te.y) / it : Le = (Te.x - nt) / He, ye.indexOf("-reverse") !== -1 && (Le = 1 - Le);
    let et;
    if (et = v3(Le, g, v), P)
      et = y3(et, P, g);
    else {
      const Dt = OD(ie, et);
      et = ie[Dt];
    }
    et = jc(et, g, v);
    let pt = 0;
    if (q) {
      xe ? pt = _e.current : pt = OD(Q, et), d && (et = jc(et, Q[pt - 1] || -1 / 0, Q[pt + 1] || 1 / 0));
      const Dt = et;
      et = kD({
        values: Q,
        newValue: et,
        index: pt
      }), d && xe || (pt = et.indexOf(Dt), _e.current = pt);
    }
    return {
      newValue: et,
      activeIndex: pt
    };
  }, $e = St((Te) => {
    const xe = sC(Te, A);
    if (!xe)
      return;
    if (J.current += 1, Te.type === "mousemove" && Te.buttons === 0) {
      Se(Te);
      return;
    }
    const {
      newValue: ot,
      activeIndex: He
    } = ae({
      finger: xe,
      move: !0
    });
    lC({
      sliderRef: fe,
      activeIndex: He,
      setActive: B
    }), te(ot), !Y && J.current > h3 && H(!0), Z && !cC(ot, W) && Z(Te, ot, He);
  }), Se = St((Te) => {
    const xe = sC(Te, A);
    if (H(!1), !xe)
      return;
    const {
      newValue: ot
    } = ae({
      finger: xe,
      move: !0
    });
    B(-1), Te.type === "touchend" && F(-1), R && R(Te, ot), A.current = void 0, Be();
  }), mt = St((Te) => {
    if (c)
      return;
    DD() || Te.preventDefault();
    const xe = Te.changedTouches[0];
    xe != null && (A.current = xe.identifier);
    const ot = sC(Te, A);
    if (ot !== !1) {
      const {
        newValue: it,
        activeIndex: Ze
      } = ae({
        finger: ot
      });
      lC({
        sliderRef: fe,
        activeIndex: Ze,
        setActive: B
      }), te(it), Z && !cC(it, W) && Z(Te, it, Ze);
    }
    J.current = 0;
    const He = Dn(fe.current);
    He.addEventListener("touchmove", $e, {
      passive: !0
    }), He.addEventListener("touchend", Se, {
      passive: !0
    });
  }), Be = w.useCallback(() => {
    const Te = Dn(fe.current);
    Te.removeEventListener("mousemove", $e), Te.removeEventListener("mouseup", Se), Te.removeEventListener("touchmove", $e), Te.removeEventListener("touchend", Se);
  }, [Se, $e]);
  w.useEffect(() => {
    const {
      current: Te
    } = fe;
    return Te.addEventListener("touchstart", mt, {
      passive: DD()
    }), () => {
      Te.removeEventListener("touchstart", mt), Be();
    };
  }, [Be, mt]), w.useEffect(() => {
    c && Be();
  }, [c, Be]);
  const ft = (Te) => (xe) => {
    var ot;
    if ((ot = Te.onMouseDown) == null || ot.call(Te, xe), c || xe.defaultPrevented || xe.button !== 0)
      return;
    xe.preventDefault();
    const He = sC(xe, A);
    if (He !== !1) {
      const {
        newValue: Ze,
        activeIndex: nt
      } = ae({
        finger: He
      });
      lC({
        sliderRef: fe,
        activeIndex: nt,
        setActive: B
      }), te(Ze), Z && !cC(Ze, W) && Z(xe, Ze, nt);
    }
    J.current = 0;
    const it = Dn(fe.current);
    it.addEventListener("mousemove", $e, {
      passive: !0
    }), it.addEventListener("mouseup", Se);
  }, je = YC(q ? Q[0] : g, g, v), Ve = YC(Q[Q.length - 1], g, v) - je, st = (Te = {}) => {
    const xe = hd(Te), ot = {
      onMouseDown: ft(xe || {})
    }, He = x({}, xe, ot);
    return x({}, Te, {
      ref: be
    }, He);
  }, gt = (Te) => (xe) => {
    var ot;
    (ot = Te.onMouseOver) == null || ot.call(Te, xe);
    const He = Number(xe.currentTarget.getAttribute("data-index"));
    F(He);
  }, Tt = (Te) => (xe) => {
    var ot;
    (ot = Te.onMouseLeave) == null || ot.call(Te, xe), F(-1);
  };
  return {
    active: V,
    axis: ye,
    axisProps: b3,
    dragging: Y,
    focusedThumbIndex: qe,
    getHiddenInputProps: (Te = {}) => {
      var xe;
      const ot = hd(Te), He = {
        onChange: Oe(ot || {}),
        onFocus: Ce(ot || {}),
        onBlur: de(ot || {}),
        onKeyDown: at(ot || {})
      }, it = x({}, ot, He);
      return x({
        tabIndex: I,
        "aria-labelledby": o,
        "aria-orientation": D,
        "aria-valuemax": $(v),
        "aria-valuemin": $(g),
        name: b,
        type: "range",
        min: e.min,
        max: e.max,
        step: e.step === null && e.marks ? "any" : (xe = e.step) != null ? xe : void 0,
        disabled: c
      }, Te, it, {
        style: x({}, bN, {
          direction: p ? "rtl" : "ltr",
          // So that VoiceOver's focus indicator matches the thumb's dimensions
          width: "100%",
          height: "100%"
        })
      });
    },
    getRootProps: st,
    getThumbProps: (Te = {}) => {
      const xe = hd(Te), ot = {
        onMouseOver: gt(xe || {}),
        onMouseLeave: Tt(xe || {})
      };
      return x({}, Te, xe, ot);
    },
    marks: re,
    open: M,
    range: q,
    rootRef: be,
    trackLeap: Ve,
    trackOffset: je,
    values: Q,
    getThumbStyle: (Te) => ({
      // So the non active thumb doesn't show its label on hover.
      pointerEvents: V !== -1 && V !== Te ? "none" : void 0
    })
  };
}
function S3(e = {}) {
  const {
    autoHideDuration: o = null,
    disableWindowBlurListener: i = !1,
    onClose: c,
    open: d,
    resumeHideDuration: p
  } = e, f = Pl();
  w.useEffect(() => {
    if (!d)
      return;
    function I(_) {
      _.defaultPrevented || (_.key === "Escape" || _.key === "Esc") && (c == null || c(_, "escapeKeyDown"));
    }
    return document.addEventListener("keydown", I), () => {
      document.removeEventListener("keydown", I);
    };
  }, [d, c]);
  const v = St((I, _) => {
    c == null || c(I, _);
  }), g = St((I) => {
    !c || I == null || f.start(I, () => {
      v(null, "timeout");
    });
  });
  w.useEffect(() => (d && g(o), f.clear), [d, o, g, f]);
  const b = (I) => {
    c == null || c(I, "clickaway");
  }, S = f.clear, R = w.useCallback(() => {
    o != null && g(p ?? o * 0.5);
  }, [o, p, g]), D = (I) => (_) => {
    const A = I.onBlur;
    A == null || A(_), R();
  }, k = (I) => (_) => {
    const A = I.onFocus;
    A == null || A(_), S();
  }, $ = (I) => (_) => {
    const A = I.onMouseEnter;
    A == null || A(_), S();
  }, P = (I) => (_) => {
    const A = I.onMouseLeave;
    A == null || A(_), R();
  };
  return w.useEffect(() => {
    if (!i && d)
      return window.addEventListener("focus", R), window.addEventListener("blur", S), () => {
        window.removeEventListener("focus", R), window.removeEventListener("blur", S);
      };
  }, [i, d, R, S]), {
    getRootProps: (I = {}) => {
      const _ = x({}, hd(e), hd(I));
      return x({
        // ClickAwayListener adds an `onClick` prop which results in the alert not being announced.
        // See https://github.com/mui/material-ui/issues/29080
        role: "presentation"
      }, I, _, {
        onBlur: D(_),
        onFocus: k(_),
        onMouseEnter: $(_),
        onMouseLeave: P(_)
      });
    },
    onClickAway: b
  };
}
const T3 = ["onChange", "maxRows", "minRows", "style", "value"];
function dC(e) {
  return parseInt(e, 10) || 0;
}
const w3 = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function E3(e) {
  return e == null || Object.keys(e).length === 0 || e.outerHeightStyle === 0 && !e.overflowing;
}
const cP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const {
    onChange: c,
    maxRows: d,
    minRows: p = 1,
    style: f,
    value: v
  } = o, g = ue(o, T3), {
    current: b
  } = w.useRef(v != null), S = w.useRef(null), R = cn(i, S), D = w.useRef(null), k = w.useCallback(() => {
    const O = S.current, _ = Wr(O).getComputedStyle(O);
    if (_.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    const A = D.current;
    A.style.width = _.width, A.value = O.value || o.placeholder || "x", A.value.slice(-1) === `
` && (A.value += " ");
    const V = _.boxSizing, B = dC(_.paddingBottom) + dC(_.paddingTop), M = dC(_.borderBottomWidth) + dC(_.borderTopWidth), F = A.scrollHeight;
    A.value = "x";
    const Y = A.scrollHeight;
    let H = F;
    p && (H = Math.max(Number(p) * Y, H)), d && (H = Math.min(Number(d) * Y, H)), H = Math.max(H, Y);
    const J = H + (V === "border-box" ? B + M : 0), W = Math.abs(H - F) <= 1;
    return {
      outerHeightStyle: J,
      overflowing: W
    };
  }, [d, p, o.placeholder]), $ = w.useCallback(() => {
    const O = k();
    if (E3(O))
      return;
    const I = S.current;
    I.style.height = `${O.outerHeightStyle}px`, I.style.overflow = O.overflowing ? "hidden" : "";
  }, [k]);
  so(() => {
    const O = () => {
      $();
    };
    let I;
    const _ = () => {
      cancelAnimationFrame(I), I = requestAnimationFrame(() => {
        O();
      });
    }, A = $f(O), V = S.current, B = Wr(V);
    B.addEventListener("resize", A);
    let M;
    return typeof ResizeObserver < "u" && (M = new ResizeObserver(process.env.NODE_ENV === "test" ? _ : O), M.observe(V)), () => {
      A.clear(), cancelAnimationFrame(I), B.removeEventListener("resize", A), M && M.disconnect();
    };
  }, [k, $]), so(() => {
    $();
  });
  const P = (O) => {
    b || $(), c && c(O);
  };
  return /* @__PURE__ */ ht(w.Fragment, {
    children: [/* @__PURE__ */ z("textarea", x({
      value: v,
      onChange: P,
      ref: R,
      rows: p
    }, g)), /* @__PURE__ */ z("textarea", {
      "aria-hidden": !0,
      className: o.className,
      readOnly: !0,
      ref: D,
      tabIndex: -1,
      style: x({}, w3.shadow, f, {
        paddingTop: 0,
        paddingBottom: 0
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (cP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: t.oneOfType([t.number, t.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: t.oneOfType([t.number, t.string]),
  /**
   * @ignore
   */
  onChange: t.func,
  /**
   * @ignore
   */
  placeholder: t.string,
  /**
   * @ignore
   */
  style: t.object,
  /**
   * @ignore
   */
  value: t.oneOfType([t.arrayOf(t.string), t.number, t.string])
});
function MD(e) {
  return typeof e.normalize < "u" ? e.normalize("NFD").replace(/[\u0300-\u036f]/g, "") : e;
}
function R3(e = {}) {
  const {
    ignoreAccents: o = !0,
    ignoreCase: i = !0,
    limit: c,
    matchFrom: d = "any",
    stringify: p,
    trim: f = !1
  } = e;
  return (v, {
    inputValue: g,
    getOptionLabel: b
  }) => {
    let S = f ? g.trim() : g;
    i && (S = S.toLowerCase()), o && (S = MD(S));
    const R = S ? v.filter((D) => {
      let k = (p || b)(D);
      return i && (k = k.toLowerCase()), o && (k = MD(k)), d === "start" ? k.indexOf(S) === 0 : k.indexOf(S) > -1;
    }) : v;
    return typeof c == "number" ? R.slice(0, c) : R;
  };
}
function u1(e, o) {
  for (let i = 0; i < e.length; i += 1)
    if (o(e[i]))
      return i;
  return -1;
}
const O3 = R3(), ND = 5, k3 = (e) => {
  var o;
  return e.current !== null && ((o = e.current.parentElement) == null ? void 0 : o.contains(document.activeElement));
};
function D3(e) {
  const {
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_isActiveElementInListbox: o = k3,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_classNamePrefix: i = "Mui",
    autoComplete: c = !1,
    autoHighlight: d = !1,
    autoSelect: p = !1,
    blurOnSelect: f = !1,
    clearOnBlur: v = !e.freeSolo,
    clearOnEscape: g = !1,
    componentName: b = "useAutocomplete",
    defaultValue: S = e.multiple ? [] : null,
    disableClearable: R = !1,
    disableCloseOnSelect: D = !1,
    disabled: k,
    disabledItemsFocusable: $ = !1,
    disableListWrap: P = !1,
    filterOptions: O = O3,
    filterSelectedOptions: I = !1,
    freeSolo: _ = !1,
    getOptionDisabled: A,
    getOptionKey: V,
    getOptionLabel: B = (ze) => {
      var ge;
      return (ge = ze.label) != null ? ge : ze;
    },
    groupBy: M,
    handleHomeEndKeys: F = !e.freeSolo,
    id: Y,
    includeInputInList: H = !1,
    inputValue: J,
    isOptionEqualToValue: W = (ze, ge) => ze === ge,
    multiple: te = !1,
    onChange: Z,
    onClose: q,
    onHighlightChange: Q,
    onInputChange: re,
    onOpen: ie,
    open: K,
    openOnFocus: ne = !1,
    options: se,
    readOnly: Fe = !1,
    selectOnFocus: qe = !e.freeSolo,
    value: Me
  } = e, fe = Na(Y);
  let De = B;
  De = (ze) => {
    const ge = B(ze);
    if (typeof ge != "string") {
      if (process.env.NODE_ENV !== "production") {
        const rt = ge === void 0 ? "undefined" : `${typeof ge} (${ge})`;
        console.error(`MUI: The \`getOptionLabel\` method of ${b} returned ${rt} instead of a string for ${JSON.stringify(ze)}.`);
      }
      return String(ge);
    }
    return ge;
  };
  const be = w.useRef(!1), Ce = w.useRef(!0), de = w.useRef(null), Ae = w.useRef(null), [at, Oe] = w.useState(null), [_e, ye] = w.useState(-1), ae = d ? 0 : -1, $e = w.useRef(ae), [Se, mt] = Eo({
    controlled: Me,
    default: S,
    name: b
  }), [Be, ft] = Eo({
    controlled: J,
    default: "",
    name: b,
    state: "inputValue"
  }), [je, Ve] = w.useState(!1), st = w.useCallback((ze, ge) => {
    if (!(te ? Se.length < ge.length : ge !== null) && !v)
      return;
    let bt;
    if (te)
      bt = "";
    else if (ge == null)
      bt = "";
    else {
      const sn = De(ge);
      bt = typeof sn == "string" ? sn : "";
    }
    Be !== bt && (ft(bt), re && re(ze, bt, "reset"));
  }, [De, Be, te, re, ft, v, Se]), [gt, Tt] = Eo({
    controlled: K,
    default: !1,
    name: b,
    state: "open"
  }), [_t, Zt] = w.useState(!0), Vt = !te && Se != null && Be === De(Se), Te = gt && !Fe, xe = Te ? O(
    se.filter((ze) => !(I && (te ? Se : [Se]).some((ge) => ge !== null && W(ze, ge)))),
    // we use the empty string to manipulate `filterOptions` to not filter any options
    // i.e. the filter predicate always returns true
    {
      inputValue: Vt && _t ? "" : Be,
      getOptionLabel: De
    }
  ) : [], ot = ew({
    filteredOptions: xe,
    value: Se,
    inputValue: Be
  });
  w.useEffect(() => {
    const ze = Se !== ot.value;
    je && !ze || _ && !ze || st(null, Se);
  }, [Se, st, je, ot.value, _]);
  const He = gt && xe.length > 0 && !Fe;
  if (process.env.NODE_ENV !== "production" && Se !== null && !_ && se.length > 0) {
    const ze = (te ? Se : [Se]).filter((ge) => !se.some((rt) => W(rt, ge)));
    ze.length > 0 && console.warn([`MUI: The value provided to ${b} is invalid.`, `None of the options match with \`${ze.length > 1 ? JSON.stringify(ze) : JSON.stringify(ze[0])}\`.`, "You can use the `isOptionEqualToValue` prop to customize the equality test."].join(`
`));
  }
  const it = St((ze) => {
    ze === -1 ? de.current.focus() : at.querySelector(`[data-tag-index="${ze}"]`).focus();
  });
  w.useEffect(() => {
    te && _e > Se.length - 1 && (ye(-1), it(-1));
  }, [Se, te, _e, it]);
  function Ze(ze, ge) {
    if (!Ae.current || ze < 0 || ze >= xe.length)
      return -1;
    let rt = ze;
    for (; ; ) {
      const bt = Ae.current.querySelector(`[data-option-index="${rt}"]`), sn = $ ? !1 : !bt || bt.disabled || bt.getAttribute("aria-disabled") === "true";
      if (bt && bt.hasAttribute("tabindex") && !sn)
        return rt;
      if (ge === "next" ? rt = (rt + 1) % xe.length : rt = (rt - 1 + xe.length) % xe.length, rt === ze)
        return -1;
    }
  }
  const nt = St(({
    event: ze,
    index: ge,
    reason: rt = "auto"
  }) => {
    if ($e.current = ge, ge === -1 ? de.current.removeAttribute("aria-activedescendant") : de.current.setAttribute("aria-activedescendant", `${fe}-option-${ge}`), Q && Q(ze, ge === -1 ? null : xe[ge], rt), !Ae.current)
      return;
    const bt = Ae.current.querySelector(`[role="option"].${i}-focused`);
    bt && (bt.classList.remove(`${i}-focused`), bt.classList.remove(`${i}-focusVisible`));
    let sn = Ae.current;
    if (Ae.current.getAttribute("role") !== "listbox" && (sn = Ae.current.parentElement.querySelector('[role="listbox"]')), !sn)
      return;
    if (ge === -1) {
      sn.scrollTop = 0;
      return;
    }
    const yt = Ae.current.querySelector(`[data-option-index="${ge}"]`);
    if (yt && (yt.classList.add(`${i}-focused`), rt === "keyboard" && yt.classList.add(`${i}-focusVisible`), sn.scrollHeight > sn.clientHeight && rt !== "mouse" && rt !== "touch")) {
      const dn = yt, cr = sn.clientHeight + sn.scrollTop, zl = dn.offsetTop + dn.offsetHeight;
      zl > cr ? sn.scrollTop = zl - sn.clientHeight : dn.offsetTop - dn.offsetHeight * (M ? 1.3 : 0) < sn.scrollTop && (sn.scrollTop = dn.offsetTop - dn.offsetHeight * (M ? 1.3 : 0));
    }
  }), Le = St(({
    event: ze,
    diff: ge,
    direction: rt = "next",
    reason: bt = "auto"
  }) => {
    if (!Te)
      return;
    const yt = Ze((() => {
      const dn = xe.length - 1;
      if (ge === "reset")
        return ae;
      if (ge === "start")
        return 0;
      if (ge === "end")
        return dn;
      const cr = $e.current + ge;
      return cr < 0 ? cr === -1 && H ? -1 : P && $e.current !== -1 || Math.abs(ge) > 1 ? 0 : dn : cr > dn ? cr === dn + 1 && H ? -1 : P || Math.abs(ge) > 1 ? dn : 0 : cr;
    })(), rt);
    if (nt({
      index: yt,
      reason: bt,
      event: ze
    }), c && ge !== "reset")
      if (yt === -1)
        de.current.value = Be;
      else {
        const dn = De(xe[yt]);
        de.current.value = dn, dn.toLowerCase().indexOf(Be.toLowerCase()) === 0 && Be.length > 0 && de.current.setSelectionRange(Be.length, dn.length);
      }
  }), et = () => {
    const ze = (ge, rt) => {
      const bt = ge ? De(ge) : "", sn = rt ? De(rt) : "";
      return bt === sn;
    };
    if ($e.current !== -1 && ot.filteredOptions && ot.filteredOptions.length !== xe.length && ot.inputValue === Be && (te ? Se.length === ot.value.length && ot.value.every((ge, rt) => De(Se[rt]) === De(ge)) : ze(ot.value, Se))) {
      const ge = ot.filteredOptions[$e.current];
      if (ge && xe.some((bt) => De(bt) === De(ge)))
        return !0;
    }
    return !1;
  }, pt = w.useCallback(() => {
    if (!Te || et())
      return;
    const ze = te ? Se[0] : Se;
    if (xe.length === 0 || ze == null) {
      Le({
        diff: "reset"
      });
      return;
    }
    if (Ae.current) {
      if (ze != null) {
        const ge = xe[$e.current];
        if (te && ge && u1(Se, (bt) => W(ge, bt)) !== -1)
          return;
        const rt = u1(xe, (bt) => W(bt, ze));
        rt === -1 ? Le({
          diff: "reset"
        }) : nt({
          index: rt
        });
        return;
      }
      if ($e.current >= xe.length - 1) {
        nt({
          index: xe.length - 1
        });
        return;
      }
      nt({
        index: $e.current
      });
    }
  }, [
    // Only sync the highlighted index when the option switch between empty and not
    xe.length,
    // Don't sync the highlighted index with the value when multiple
    // eslint-disable-next-line react-hooks/exhaustive-deps
    te ? !1 : Se,
    I,
    Le,
    nt,
    Te,
    Be,
    te
  ]), Dt = St((ze) => {
    Mv(Ae, ze), ze && pt();
  });
  process.env.NODE_ENV !== "production" && w.useEffect(() => {
    (!de.current || de.current.nodeName !== "INPUT") && (de.current && de.current.nodeName === "TEXTAREA" ? console.warn([`A textarea element was provided to ${b} where input was expected.`, "This is not a supported scenario but it may work under certain conditions.", "A textarea keyboard navigation may conflict with Autocomplete controls (e.g. enter and arrow keys).", "Make sure to test keyboard navigation and add custom event handlers if necessary."].join(`
`)) : console.error([`MUI: Unable to find the input element. It was resolved to ${de.current} while an HTMLInputElement was expected.`, `Instead, ${b} expects an input element.`, "", b === "useAutocomplete" ? "Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed." : "Make sure you have customized the input component correctly."].join(`
`)));
  }, [b]), w.useEffect(() => {
    pt();
  }, [pt]);
  const Nt = (ze) => {
    gt || (Tt(!0), Zt(!0), ie && ie(ze));
  }, Jt = (ze, ge) => {
    gt && (Tt(!1), q && q(ze, ge));
  }, Yt = (ze, ge, rt, bt) => {
    if (te) {
      if (Se.length === ge.length && Se.every((sn, yt) => sn === ge[yt]))
        return;
    } else if (Se === ge)
      return;
    Z && Z(ze, ge, rt, bt), mt(ge);
  }, en = w.useRef(!1), Nn = (ze, ge, rt = "selectOption", bt = "options") => {
    let sn = rt, yt = ge;
    if (te) {
      if (yt = Array.isArray(Se) ? Se.slice() : [], process.env.NODE_ENV !== "production") {
        const cr = yt.filter((zl) => W(ge, zl));
        cr.length > 1 && console.error([`MUI: The \`isOptionEqualToValue\` method of ${b} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${cr.length} matches.`].join(`
`));
      }
      const dn = u1(yt, (cr) => W(ge, cr));
      dn === -1 ? yt.push(ge) : bt !== "freeSolo" && (yt.splice(dn, 1), sn = "removeOption");
    }
    st(ze, yt), Yt(ze, yt, sn, {
      option: ge
    }), !D && (!ze || !ze.ctrlKey && !ze.metaKey) && Jt(ze, sn), (f === !0 || f === "touch" && en.current || f === "mouse" && !en.current) && de.current.blur();
  };
  function nn(ze, ge) {
    if (ze === -1)
      return -1;
    let rt = ze;
    for (; ; ) {
      if (ge === "next" && rt === Se.length || ge === "previous" && rt === -1)
        return -1;
      const bt = at.querySelector(`[data-tag-index="${rt}"]`);
      if (!bt || !bt.hasAttribute("tabindex") || bt.disabled || bt.getAttribute("aria-disabled") === "true")
        rt += ge === "next" ? 1 : -1;
      else
        return rt;
    }
  }
  const Un = (ze, ge) => {
    if (!te)
      return;
    Be === "" && Jt(ze, "toggleInput");
    let rt = _e;
    _e === -1 ? Be === "" && ge === "previous" && (rt = Se.length - 1) : (rt += ge === "next" ? 1 : -1, rt < 0 && (rt = 0), rt === Se.length && (rt = -1)), rt = nn(rt, ge), ye(rt), it(rt);
  }, Ro = (ze) => {
    be.current = !0, ft(""), re && re(ze, "", "clear"), Yt(ze, te ? [] : null, "clear");
  }, Oo = (ze) => (ge) => {
    if (ze.onKeyDown && ze.onKeyDown(ge), !ge.defaultMuiPrevented && (_e !== -1 && ["ArrowLeft", "ArrowRight"].indexOf(ge.key) === -1 && (ye(-1), it(-1)), ge.which !== 229))
      switch (ge.key) {
        case "Home":
          Te && F && (ge.preventDefault(), Le({
            diff: "start",
            direction: "next",
            reason: "keyboard",
            event: ge
          }));
          break;
        case "End":
          Te && F && (ge.preventDefault(), Le({
            diff: "end",
            direction: "previous",
            reason: "keyboard",
            event: ge
          }));
          break;
        case "PageUp":
          ge.preventDefault(), Le({
            diff: -ND,
            direction: "previous",
            reason: "keyboard",
            event: ge
          }), Nt(ge);
          break;
        case "PageDown":
          ge.preventDefault(), Le({
            diff: ND,
            direction: "next",
            reason: "keyboard",
            event: ge
          }), Nt(ge);
          break;
        case "ArrowDown":
          ge.preventDefault(), Le({
            diff: 1,
            direction: "next",
            reason: "keyboard",
            event: ge
          }), Nt(ge);
          break;
        case "ArrowUp":
          ge.preventDefault(), Le({
            diff: -1,
            direction: "previous",
            reason: "keyboard",
            event: ge
          }), Nt(ge);
          break;
        case "ArrowLeft":
          Un(ge, "previous");
          break;
        case "ArrowRight":
          Un(ge, "next");
          break;
        case "Enter":
          if ($e.current !== -1 && Te) {
            const rt = xe[$e.current], bt = A ? A(rt) : !1;
            if (ge.preventDefault(), bt)
              return;
            Nn(ge, rt, "selectOption"), c && de.current.setSelectionRange(de.current.value.length, de.current.value.length);
          } else
            _ && Be !== "" && Vt === !1 && (te && ge.preventDefault(), Nn(ge, Be, "createOption", "freeSolo"));
          break;
        case "Escape":
          Te ? (ge.preventDefault(), ge.stopPropagation(), Jt(ge, "escape")) : g && (Be !== "" || te && Se.length > 0) && (ge.preventDefault(), ge.stopPropagation(), Ro(ge));
          break;
        case "Backspace":
          if (te && !Fe && Be === "" && Se.length > 0) {
            const rt = _e === -1 ? Se.length - 1 : _e, bt = Se.slice();
            bt.splice(rt, 1), Yt(ge, bt, "removeOption", {
              option: Se[rt]
            });
          }
          break;
        case "Delete":
          if (te && !Fe && Be === "" && Se.length > 0 && _e !== -1) {
            const rt = _e, bt = Se.slice();
            bt.splice(rt, 1), Yt(ge, bt, "removeOption", {
              option: Se[rt]
            });
          }
          break;
      }
  }, Yr = (ze) => {
    Ve(!0), ne && !be.current && Nt(ze);
  }, _o = (ze) => {
    if (o(Ae)) {
      de.current.focus();
      return;
    }
    Ve(!1), Ce.current = !0, be.current = !1, p && $e.current !== -1 && Te ? Nn(ze, xe[$e.current], "blur") : p && _ && Be !== "" ? Nn(ze, Be, "blur", "freeSolo") : v && st(ze, Se), Jt(ze, "blur");
  }, Pn = (ze) => {
    const ge = ze.target.value;
    Be !== ge && (ft(ge), Zt(!1), re && re(ze, ge, "input")), ge === "" ? !R && !te && Yt(ze, null, "clear") : Nt(ze);
  }, Tn = (ze) => {
    const ge = Number(ze.currentTarget.getAttribute("data-option-index"));
    $e.current !== ge && nt({
      event: ze,
      index: ge,
      reason: "mouse"
    });
  }, Hn = (ze) => {
    nt({
      event: ze,
      index: Number(ze.currentTarget.getAttribute("data-option-index")),
      reason: "touch"
    }), en.current = !0;
  }, Zn = (ze) => {
    const ge = Number(ze.currentTarget.getAttribute("data-option-index"));
    Nn(ze, xe[ge], "selectOption"), en.current = !1;
  }, no = (ze) => (ge) => {
    const rt = Se.slice();
    rt.splice(ze, 1), Yt(ge, rt, "removeOption", {
      option: Se[ze]
    });
  }, Xo = (ze) => {
    gt ? Jt(ze, "toggleInput") : Nt(ze);
  }, Bo = (ze) => {
    ze.currentTarget.contains(ze.target) && ze.target.getAttribute("id") !== fe && ze.preventDefault();
  }, zo = (ze) => {
    ze.currentTarget.contains(ze.target) && (de.current.focus(), qe && Ce.current && de.current.selectionEnd - de.current.selectionStart === 0 && de.current.select(), Ce.current = !1);
  }, Dr = (ze) => {
    !k && (Be === "" || !gt) && Xo(ze);
  };
  let Vo = _ && Be.length > 0;
  Vo = Vo || (te ? Se.length > 0 : Se !== null);
  let go = xe;
  if (M) {
    const ze = /* @__PURE__ */ new Map();
    let ge = !1;
    go = xe.reduce((rt, bt, sn) => {
      const yt = M(bt);
      return rt.length > 0 && rt[rt.length - 1].group === yt ? rt[rt.length - 1].options.push(bt) : (process.env.NODE_ENV !== "production" && (ze.get(yt) && !ge && (console.warn(`MUI: The options provided combined with the \`groupBy\` method of ${b} returns duplicated headers.`, "You can solve the issue by sorting the options with the output of `groupBy`."), ge = !0), ze.set(yt, !0)), rt.push({
        key: sn,
        index: sn,
        group: yt,
        options: [bt]
      })), rt;
    }, []);
  }
  return k && je && _o(), {
    getRootProps: (ze = {}) => x({
      "aria-owns": He ? `${fe}-listbox` : null
    }, ze, {
      onKeyDown: Oo(ze),
      onMouseDown: Bo,
      onClick: zo
    }),
    getInputLabelProps: () => ({
      id: `${fe}-label`,
      htmlFor: fe
    }),
    getInputProps: () => ({
      id: fe,
      value: Be,
      onBlur: _o,
      onFocus: Yr,
      onChange: Pn,
      onMouseDown: Dr,
      // if open then this is handled imperatively so don't let react override
      // only have an opinion about this when closed
      "aria-activedescendant": Te ? "" : null,
      "aria-autocomplete": c ? "both" : "list",
      "aria-controls": He ? `${fe}-listbox` : void 0,
      "aria-expanded": He,
      // Disable browser's suggestion that might overlap with the popup.
      // Handle autocomplete but not autofill.
      autoComplete: "off",
      ref: de,
      autoCapitalize: "none",
      spellCheck: "false",
      role: "combobox",
      disabled: k
    }),
    getClearProps: () => ({
      tabIndex: -1,
      type: "button",
      onClick: Ro
    }),
    getPopupIndicatorProps: () => ({
      tabIndex: -1,
      type: "button",
      onClick: Xo
    }),
    getTagProps: ({
      index: ze
    }) => x({
      key: ze,
      "data-tag-index": ze,
      tabIndex: -1
    }, !Fe && {
      onDelete: no(ze)
    }),
    getListboxProps: () => ({
      role: "listbox",
      id: `${fe}-listbox`,
      "aria-labelledby": `${fe}-label`,
      ref: Dt,
      onMouseDown: (ze) => {
        ze.preventDefault();
      }
    }),
    getOptionProps: ({
      index: ze,
      option: ge
    }) => {
      var rt;
      const bt = (te ? Se : [Se]).some((yt) => yt != null && W(ge, yt)), sn = A ? A(ge) : !1;
      return {
        key: (rt = V == null ? void 0 : V(ge)) != null ? rt : De(ge),
        tabIndex: -1,
        role: "option",
        id: `${fe}-option-${ze}`,
        onMouseMove: Tn,
        onClick: Zn,
        onTouchStart: Hn,
        "data-option-index": ze,
        "aria-disabled": sn,
        "aria-selected": bt
      };
    },
    id: fe,
    inputValue: Be,
    value: Se,
    dirty: Vo,
    expanded: Te && at,
    popupOpen: Te,
    focused: je || _e !== -1,
    anchorEl: at,
    setAnchorEl: Oe,
    focusedTag: _e,
    groupedOptions: go
  };
}
function M3(e) {
  return We("MuiAlert", e);
}
const N3 = Ge("MuiAlert", ["root", "action", "icon", "message", "filled", "filledSuccess", "filledInfo", "filledWarning", "filledError", "outlined", "outlinedSuccess", "outlinedInfo", "outlinedWarning", "outlinedError", "standard", "standardSuccess", "standardInfo", "standardWarning", "standardError"]), PD = N3;
function P3(e) {
  return We("MuiIconButton", e);
}
const $3 = Ge("MuiIconButton", ["root", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorError", "colorInfo", "colorSuccess", "colorWarning", "edgeStart", "edgeEnd", "sizeSmall", "sizeMedium", "sizeLarge"]), I3 = $3, L3 = ["edge", "children", "className", "color", "disabled", "disableFocusRipple", "size"], A3 = (e) => {
  const {
    classes: o,
    disabled: i,
    color: c,
    edge: d,
    size: p
  } = e, f = {
    root: ["root", i && "disabled", c !== "default" && `color${ce(c)}`, d && `edge${ce(d)}`, `size${ce(p)}`]
  };
  return Ye(f, P3, o);
}, _3 = ee(Qo, {
  name: "MuiIconButton",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.color !== "default" && o[`color${ce(i.color)}`], i.edge && o[`edge${ce(i.edge)}`], o[`size${ce(i.size)}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  textAlign: "center",
  flex: "0 0 auto",
  fontSize: e.typography.pxToRem(24),
  padding: 8,
  borderRadius: "50%",
  overflow: "visible",
  // Explicitly set the default value to solve a bug on IE11.
  color: (e.vars || e).palette.action.active,
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.shortest
  })
}, !o.disableRipple && {
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Wt(e.palette.action.active, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  }
}, o.edge === "start" && {
  marginLeft: o.size === "small" ? -3 : -12
}, o.edge === "end" && {
  marginRight: o.size === "small" ? -3 : -12
}), ({
  theme: e,
  ownerState: o
}) => {
  var i;
  const c = (i = (e.vars || e).palette) == null ? void 0 : i[o.color];
  return x({}, o.color === "inherit" && {
    color: "inherit"
  }, o.color !== "inherit" && o.color !== "default" && x({
    color: c == null ? void 0 : c.main
  }, !o.disableRipple && {
    "&:hover": x({}, c && {
      backgroundColor: e.vars ? `rgba(${c.mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Wt(c.main, e.palette.action.hoverOpacity)
    }, {
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    })
  }), o.size === "small" && {
    padding: 5,
    fontSize: e.typography.pxToRem(18)
  }, o.size === "large" && {
    padding: 12,
    fontSize: e.typography.pxToRem(28)
  }, {
    [`&.${I3.disabled}`]: {
      backgroundColor: "transparent",
      color: (e.vars || e).palette.action.disabled
    }
  });
}), uP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiIconButton"
  }), {
    edge: d = !1,
    children: p,
    className: f,
    color: v = "default",
    disabled: g = !1,
    disableFocusRipple: b = !1,
    size: S = "medium"
  } = c, R = ue(c, L3), D = x({}, c, {
    edge: d,
    color: v,
    disabled: g,
    disableFocusRipple: b,
    size: S
  }), k = A3(D);
  return /* @__PURE__ */ z(_3, x({
    className: ve(k.root, f),
    centerRipple: !0,
    focusRipple: !b,
    disabled: g,
    ref: i
  }, R, {
    ownerState: D,
    children: p
  }));
});
process.env.NODE_ENV !== "production" && (uP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The icon to display.
   */
  children: Ko(t.node, (e) => w.Children.toArray(e.children).some((i) => /* @__PURE__ */ w.isValidElement(i) && i.props.onClick) ? new Error(["MUI: You are providing an onClick event listener to a child of a button element.", "Prefer applying it to the IconButton directly.", "This guarantees that the whole <button> will be responsive to click events."].join(`
`)) : null),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: t.oneOfType([t.oneOf(["inherit", "default", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: t.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: t.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: t.oneOf(["end", "start", !1]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["small", "medium", "large"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Wi = uP, B3 = Cn(/* @__PURE__ */ z("path", {
  d: "M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
}), "SuccessOutlined"), z3 = Cn(/* @__PURE__ */ z("path", {
  d: "M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z"
}), "ReportProblemOutlined"), V3 = Cn(/* @__PURE__ */ z("path", {
  d: "M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "ErrorOutline"), F3 = Cn(/* @__PURE__ */ z("path", {
  d: "M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z"
}), "InfoOutlined"), dP = Cn(/* @__PURE__ */ z("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Close"), j3 = ["action", "children", "className", "closeText", "color", "components", "componentsProps", "icon", "iconMapping", "onClose", "role", "severity", "slotProps", "slots", "variant"], U3 = (e) => {
  const {
    variant: o,
    color: i,
    severity: c,
    classes: d
  } = e, p = {
    root: ["root", `${o}${ce(i || c)}`, `${o}`],
    icon: ["icon"],
    message: ["message"],
    action: ["action"]
  };
  return Ye(p, M3, d);
}, H3 = ee(Ya, {
  name: "MuiAlert",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[i.variant], o[`${i.variant}${ce(i.color || i.severity)}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => {
  const i = e.palette.mode === "light" ? IC : LC, c = e.palette.mode === "light" ? LC : IC, d = o.color || o.severity;
  return x({}, e.typography.body2, {
    backgroundColor: "transparent",
    display: "flex",
    padding: "6px 16px"
  }, d && o.variant === "standard" && {
    color: e.vars ? e.vars.palette.Alert[`${d}Color`] : i(e.palette[d].light, 0.6),
    backgroundColor: e.vars ? e.vars.palette.Alert[`${d}StandardBg`] : c(e.palette[d].light, 0.9),
    [`& .${PD.icon}`]: e.vars ? {
      color: e.vars.palette.Alert[`${d}IconColor`]
    } : {
      color: e.palette[d].main
    }
  }, d && o.variant === "outlined" && {
    color: e.vars ? e.vars.palette.Alert[`${d}Color`] : i(e.palette[d].light, 0.6),
    border: `1px solid ${(e.vars || e).palette[d].light}`,
    [`& .${PD.icon}`]: e.vars ? {
      color: e.vars.palette.Alert[`${d}IconColor`]
    } : {
      color: e.palette[d].main
    }
  }, d && o.variant === "filled" && x({
    fontWeight: e.typography.fontWeightMedium
  }, e.vars ? {
    color: e.vars.palette.Alert[`${d}FilledColor`],
    backgroundColor: e.vars.palette.Alert[`${d}FilledBg`]
  } : {
    backgroundColor: e.palette.mode === "dark" ? e.palette[d].dark : e.palette[d].main,
    color: e.palette.getContrastText(e.palette[d].main)
  }));
}), W3 = ee("div", {
  name: "MuiAlert",
  slot: "Icon",
  overridesResolver: (e, o) => o.icon
})({
  marginRight: 12,
  padding: "7px 0",
  display: "flex",
  fontSize: 22,
  opacity: 0.9
}), Y3 = ee("div", {
  name: "MuiAlert",
  slot: "Message",
  overridesResolver: (e, o) => o.message
})({
  padding: "8px 0",
  minWidth: 0,
  overflow: "auto"
}), $D = ee("div", {
  name: "MuiAlert",
  slot: "Action",
  overridesResolver: (e, o) => o.action
})({
  display: "flex",
  alignItems: "flex-start",
  padding: "4px 0 0 16px",
  marginLeft: "auto",
  marginRight: -8
}), ID = {
  success: /* @__PURE__ */ z(B3, {
    fontSize: "inherit"
  }),
  warning: /* @__PURE__ */ z(z3, {
    fontSize: "inherit"
  }),
  error: /* @__PURE__ */ z(V3, {
    fontSize: "inherit"
  }),
  info: /* @__PURE__ */ z(F3, {
    fontSize: "inherit"
  })
}, pP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiAlert"
  }), {
    action: d,
    children: p,
    className: f,
    closeText: v = "Close",
    color: g,
    components: b = {},
    componentsProps: S = {},
    icon: R,
    iconMapping: D = ID,
    onClose: k,
    role: $ = "alert",
    severity: P = "success",
    slotProps: O = {},
    slots: I = {},
    variant: _ = "standard"
  } = c, A = ue(c, j3), V = x({}, c, {
    color: g,
    severity: P,
    variant: _
  }), B = U3(V), M = {
    slots: x({
      closeButton: b.CloseButton,
      closeIcon: b.CloseIcon
    }, I),
    slotProps: x({}, S, O)
  }, [F, Y] = FC("closeButton", {
    elementType: Wi,
    externalForwardedProps: M,
    ownerState: V
  }), [H, J] = FC("closeIcon", {
    elementType: dP,
    externalForwardedProps: M,
    ownerState: V
  });
  return /* @__PURE__ */ ht(H3, x({
    role: $,
    elevation: 0,
    ownerState: V,
    className: ve(B.root, f),
    ref: i
  }, A, {
    children: [R !== !1 ? /* @__PURE__ */ z(W3, {
      ownerState: V,
      className: B.icon,
      children: R || D[P] || ID[P]
    }) : null, /* @__PURE__ */ z(Y3, {
      ownerState: V,
      className: B.message,
      children: p
    }), d != null ? /* @__PURE__ */ z($D, {
      ownerState: V,
      className: B.action,
      children: d
    }) : null, d == null && k ? /* @__PURE__ */ z($D, {
      ownerState: V,
      className: B.action,
      children: /* @__PURE__ */ z(F, x({
        size: "small",
        "aria-label": v,
        title: v,
        color: "inherit",
        onClick: k
      }, Y, {
        children: /* @__PURE__ */ z(H, x({
          fontSize: "small"
        }, J))
      }))
    }) : null]
  }));
});
process.env.NODE_ENV !== "production" && (pP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The action to display. It renders after the message, at the end of the alert.
   */
  action: t.node,
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Override the default label for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: t.string,
  /**
   * The color of the component. Unless provided, the value is taken from the `severity` prop.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: t.oneOfType([t.oneOf(["error", "info", "success", "warning"]), t.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   *
   * @default {}
   */
  components: t.shape({
    CloseButton: t.elementType,
    CloseIcon: t.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   *
   * @default {}
   */
  componentsProps: t.shape({
    closeButton: t.object,
    closeIcon: t.object
  }),
  /**
   * Override the icon displayed before the children.
   * Unless provided, the icon is mapped to the value of the `severity` prop.
   * Set to `false` to remove the `icon`.
   */
  icon: t.node,
  /**
   * The component maps the `severity` prop to a range of different icons,
   * for instance success to `<SuccessOutlined>`.
   * If you wish to change this mapping, you can provide your own.
   * Alternatively, you can use the `icon` prop to override the icon displayed.
   */
  iconMapping: t.shape({
    error: t.node,
    info: t.node,
    success: t.node,
    warning: t.node
  }),
  /**
   * Callback fired when the component requests to be closed.
   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: t.func,
  /**
   * The ARIA role attribute of the element.
   * @default 'alert'
   */
  role: t.string,
  /**
   * The severity of the alert. This defines the color and icon used.
   * @default 'success'
   */
  severity: t.oneOfType([t.oneOf(["error", "info", "success", "warning"]), t.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: t.shape({
    closeButton: t.oneOfType([t.func, t.object]),
    closeIcon: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: t.shape({
    closeButton: t.elementType,
    closeIcon: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: t.oneOfType([t.oneOf(["filled", "outlined", "standard"]), t.string])
});
const xae = pP;
function G3(e) {
  return We("MuiTypography", e);
}
const q3 = Ge("MuiTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "inherit", "button", "caption", "overline", "alignLeft", "alignRight", "alignCenter", "alignJustify", "noWrap", "gutterBottom", "paragraph"]), Sae = q3, K3 = ["align", "className", "component", "gutterBottom", "noWrap", "paragraph", "variant", "variantMapping"], Q3 = (e) => {
  const {
    align: o,
    gutterBottom: i,
    noWrap: c,
    paragraph: d,
    variant: p,
    classes: f
  } = e, v = {
    root: ["root", p, e.align !== "inherit" && `align${ce(o)}`, i && "gutterBottom", c && "noWrap", d && "paragraph"]
  };
  return Ye(v, G3, f);
}, X3 = ee("span", {
  name: "MuiTypography",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.variant && o[i.variant], i.align !== "inherit" && o[`align${ce(i.align)}`], i.noWrap && o.noWrap, i.gutterBottom && o.gutterBottom, i.paragraph && o.paragraph];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  margin: 0
}, o.variant === "inherit" && {
  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.
  font: "inherit"
}, o.variant !== "inherit" && e.typography[o.variant], o.align !== "inherit" && {
  textAlign: o.align
}, o.noWrap && {
  overflow: "hidden",
  textOverflow: "ellipsis",
  whiteSpace: "nowrap"
}, o.gutterBottom && {
  marginBottom: "0.35em"
}, o.paragraph && {
  marginBottom: 16
})), LD = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p",
  inherit: "p"
}, Z3 = {
  primary: "primary.main",
  textPrimary: "text.primary",
  secondary: "secondary.main",
  textSecondary: "text.secondary",
  error: "error.main"
}, J3 = (e) => Z3[e] || e, fP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiTypography"
  }), d = J3(c.color), p = Fv(x({}, c, {
    color: d
  })), {
    align: f = "inherit",
    className: v,
    component: g,
    gutterBottom: b = !1,
    noWrap: S = !1,
    paragraph: R = !1,
    variant: D = "body1",
    variantMapping: k = LD
  } = p, $ = ue(p, K3), P = x({}, p, {
    align: f,
    color: d,
    className: v,
    component: g,
    gutterBottom: b,
    noWrap: S,
    paragraph: R,
    variant: D,
    variantMapping: k
  }), O = g || (R ? "p" : k[D] || LD[D]) || "span", I = Q3(P);
  return /* @__PURE__ */ z(X3, x({
    as: O,
    ref: i,
    ownerState: P,
    className: ve(I.root, v)
  }, $));
});
process.env.NODE_ENV !== "production" && (fP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the component.
   * @default 'inherit'
   */
  align: t.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the text will have a bottom margin.
   * @default false
   */
  gutterBottom: t.bool,
  /**
   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
   *
   * Note that text overflow can only happen with block or inline-block level elements
   * (the element needs to have a width in order to overflow).
   * @default false
   */
  noWrap: t.bool,
  /**
   * If `true`, the element will be a paragraph element.
   * @default false
   */
  paragraph: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Applies the theme typography styles.
   * @default 'body1'
   */
  variant: t.oneOfType([t.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), t.string]),
  /**
   * The component maps the variant prop to a range of different HTML element types.
   * For instance, subtitle1 to `<h6>`.
   * If you wish to change that mapping, you can provide your own.
   * Alternatively, you can use the `component` prop.
   * @default {
   *   h1: 'h1',
   *   h2: 'h2',
   *   h3: 'h3',
   *   h4: 'h4',
   *   h5: 'h5',
   *   h6: 'h6',
   *   subtitle1: 'h6',
   *   subtitle2: 'h6',
   *   body1: 'p',
   *   body2: 'p',
   *   inherit: 'p',
   * }
   */
  variantMapping: t.object
});
const wo = fP;
function eW(e) {
  return We("MuiAlertTitle", e);
}
const tW = Ge("MuiAlertTitle", ["root"]), Tae = tW, nW = ["className"], oW = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"]
  }, eW, o);
}, rW = ee(wo, {
  name: "MuiAlertTitle",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})(({
  theme: e
}) => ({
  fontWeight: e.typography.fontWeightMedium,
  marginTop: -2
})), mP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiAlertTitle"
  }), {
    className: d
  } = c, p = ue(c, nW), f = c, v = oW(f);
  return /* @__PURE__ */ z(rW, x({
    gutterBottom: !0,
    component: "div",
    ownerState: f,
    ref: i,
    className: ve(v.root, d)
  }, p));
});
process.env.NODE_ENV !== "production" && (mP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const wae = mP;
function aW(e) {
  return We("MuiAppBar", e);
}
const iW = Ge("MuiAppBar", ["root", "positionFixed", "positionAbsolute", "positionSticky", "positionStatic", "positionRelative", "colorDefault", "colorPrimary", "colorSecondary", "colorInherit", "colorTransparent", "colorError", "colorInfo", "colorSuccess", "colorWarning"]), Eae = iW, sW = ["className", "color", "enableColorOnDark", "position"], lW = (e) => {
  const {
    color: o,
    position: i,
    classes: c
  } = e, d = {
    root: ["root", `color${ce(o)}`, `position${ce(i)}`]
  };
  return Ye(d, aW, c);
}, pC = (e, o) => e ? `${e == null ? void 0 : e.replace(")", "")}, ${o})` : o, cW = ee(Ya, {
  name: "MuiAppBar",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[`position${ce(i.position)}`], o[`color${ce(i.color)}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => {
  const i = e.palette.mode === "light" ? e.palette.grey[100] : e.palette.grey[900];
  return x({
    display: "flex",
    flexDirection: "column",
    width: "100%",
    boxSizing: "border-box",
    // Prevent padding issue with the Modal and fixed positioned AppBar.
    flexShrink: 0
  }, o.position === "fixed" && {
    position: "fixed",
    zIndex: (e.vars || e).zIndex.appBar,
    top: 0,
    left: "auto",
    right: 0,
    "@media print": {
      // Prevent the app bar to be visible on each printed page.
      position: "absolute"
    }
  }, o.position === "absolute" && {
    position: "absolute",
    zIndex: (e.vars || e).zIndex.appBar,
    top: 0,
    left: "auto",
    right: 0
  }, o.position === "sticky" && {
    // ⚠️ sticky is not supported by IE11.
    position: "sticky",
    zIndex: (e.vars || e).zIndex.appBar,
    top: 0,
    left: "auto",
    right: 0
  }, o.position === "static" && {
    position: "static"
  }, o.position === "relative" && {
    position: "relative"
  }, !e.vars && x({}, o.color === "default" && {
    backgroundColor: i,
    color: e.palette.getContrastText(i)
  }, o.color && o.color !== "default" && o.color !== "inherit" && o.color !== "transparent" && {
    backgroundColor: e.palette[o.color].main,
    color: e.palette[o.color].contrastText
  }, o.color === "inherit" && {
    color: "inherit"
  }, e.palette.mode === "dark" && !o.enableColorOnDark && {
    backgroundColor: null,
    color: null
  }, o.color === "transparent" && x({
    backgroundColor: "transparent",
    color: "inherit"
  }, e.palette.mode === "dark" && {
    backgroundImage: "none"
  })), e.vars && x({}, o.color === "default" && {
    "--AppBar-background": o.enableColorOnDark ? e.vars.palette.AppBar.defaultBg : pC(e.vars.palette.AppBar.darkBg, e.vars.palette.AppBar.defaultBg),
    "--AppBar-color": o.enableColorOnDark ? e.vars.palette.text.primary : pC(e.vars.palette.AppBar.darkColor, e.vars.palette.text.primary)
  }, o.color && !o.color.match(/^(default|inherit|transparent)$/) && {
    "--AppBar-background": o.enableColorOnDark ? e.vars.palette[o.color].main : pC(e.vars.palette.AppBar.darkBg, e.vars.palette[o.color].main),
    "--AppBar-color": o.enableColorOnDark ? e.vars.palette[o.color].contrastText : pC(e.vars.palette.AppBar.darkColor, e.vars.palette[o.color].contrastText)
  }, {
    backgroundColor: "var(--AppBar-background)",
    color: o.color === "inherit" ? "inherit" : "var(--AppBar-color)"
  }, o.color === "transparent" && {
    backgroundImage: "none",
    backgroundColor: "transparent",
    color: "inherit"
  }));
}), hP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiAppBar"
  }), {
    className: d,
    color: p = "primary",
    enableColorOnDark: f = !1,
    position: v = "fixed"
  } = c, g = ue(c, sW), b = x({}, c, {
    color: p,
    position: v,
    enableColorOnDark: f
  }), S = lW(b);
  return /* @__PURE__ */ z(cW, x({
    square: !0,
    component: "header",
    ownerState: b,
    elevation: 4,
    className: ve(S.root, d, v === "fixed" && "mui-fixed"),
    ref: i
  }, g));
});
process.env.NODE_ENV !== "production" && (hP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["default", "inherit", "primary", "secondary", "transparent", "error", "info", "success", "warning"]), t.string]),
  /**
   * If true, the `color` prop is applied in dark mode.
   * @default false
   */
  enableColorOnDark: t.bool,
  /**
   * The positioning type. The behavior of the different options is described
   * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning).
   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.
   * @default 'fixed'
   */
  position: t.oneOf(["absolute", "fixed", "relative", "static", "sticky"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Rae = hP;
var Sw = {};
Object.defineProperty(Sw, "__esModule", {
  value: !0
});
var vP = Sw.default = void 0, uW = pW(ka), dW = ON;
function gP(e) {
  if (typeof WeakMap != "function")
    return null;
  var o = /* @__PURE__ */ new WeakMap(), i = /* @__PURE__ */ new WeakMap();
  return (gP = function(c) {
    return c ? i : o;
  })(e);
}
function pW(e, o) {
  if (!o && e && e.__esModule)
    return e;
  if (e === null || typeof e != "object" && typeof e != "function")
    return { default: e };
  var i = gP(o);
  if (i && i.has(e))
    return i.get(e);
  var c = { __proto__: null }, d = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var p in e)
    if (p !== "default" && Object.prototype.hasOwnProperty.call(e, p)) {
      var f = d ? Object.getOwnPropertyDescriptor(e, p) : null;
      f && (f.get || f.set) ? Object.defineProperty(c, p, f) : c[p] = e[p];
    }
  return c.default = e, i && i.set(e, c), c;
}
function fW(e) {
  return Object.keys(e).length === 0;
}
function mW(e = null) {
  const o = uW.useContext(dW.ThemeContext);
  return !o || fW(o) ? e : o;
}
vP = Sw.default = mW;
const hW = ["anchorEl", "component", "components", "componentsProps", "container", "disablePortal", "keepMounted", "modifiers", "open", "placement", "popperOptions", "popperRef", "transition", "slots", "slotProps"], vW = ee(sP, {
  name: "MuiPopper",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({}), yP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c;
  const d = vP(), p = Ue({
    props: o,
    name: "MuiPopper"
  }), {
    anchorEl: f,
    component: v,
    components: g,
    componentsProps: b,
    container: S,
    disablePortal: R,
    keepMounted: D,
    modifiers: k,
    open: $,
    placement: P,
    popperOptions: O,
    popperRef: I,
    transition: _,
    slots: A,
    slotProps: V
  } = p, B = ue(p, hW), M = (c = A == null ? void 0 : A.root) != null ? c : g == null ? void 0 : g.Root, F = x({
    anchorEl: f,
    container: S,
    disablePortal: R,
    keepMounted: D,
    modifiers: k,
    open: $,
    placement: P,
    popperOptions: O,
    popperRef: I,
    transition: _
  }, B);
  return /* @__PURE__ */ z(vW, x({
    as: v,
    direction: d == null ? void 0 : d.direction,
    slots: {
      root: M
    },
    slotProps: V ?? b
  }, F, {
    ref: i
  }));
});
process.env.NODE_ENV !== "production" && (yP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: t.oneOfType([zs, t.object, t.func]),
  /**
   * Popper render function or node.
   */
  children: t.oneOfType([t.node, t.func]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  components: t.shape({
    Root: t.elementType
  }),
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  componentsProps: t.shape({
    root: t.oneOfType([t.func, t.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: t.oneOfType([zs, t.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: t.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: t.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: t.arrayOf(t.shape({
    data: t.object,
    effect: t.func,
    enabled: t.bool,
    fn: t.func,
    name: t.any,
    options: t.object,
    phase: t.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: t.arrayOf(t.string),
    requiresIfExists: t.arrayOf(t.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: t.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: t.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: t.shape({
    modifiers: t.array,
    onFirstUpdate: t.func,
    placement: t.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: t.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: Lo,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: t.shape({
    root: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: t.shape({
    root: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: t.bool
});
const Qv = yP;
function gW(e) {
  return We("MuiListSubheader", e);
}
const yW = Ge("MuiListSubheader", ["root", "colorPrimary", "colorInherit", "gutters", "inset", "sticky"]), Oae = yW, bW = ["className", "color", "component", "disableGutters", "disableSticky", "inset"], CW = (e) => {
  const {
    classes: o,
    color: i,
    disableGutters: c,
    inset: d,
    disableSticky: p
  } = e, f = {
    root: ["root", i !== "default" && `color${ce(i)}`, !c && "gutters", d && "inset", !p && "sticky"]
  };
  return Ye(f, gW, o);
}, xW = ee("li", {
  name: "MuiListSubheader",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.color !== "default" && o[`color${ce(i.color)}`], !i.disableGutters && o.gutters, i.inset && o.inset, !i.disableSticky && o.sticky];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  boxSizing: "border-box",
  lineHeight: "48px",
  listStyle: "none",
  color: (e.vars || e).palette.text.secondary,
  fontFamily: e.typography.fontFamily,
  fontWeight: e.typography.fontWeightMedium,
  fontSize: e.typography.pxToRem(14)
}, o.color === "primary" && {
  color: (e.vars || e).palette.primary.main
}, o.color === "inherit" && {
  color: "inherit"
}, !o.disableGutters && {
  paddingLeft: 16,
  paddingRight: 16
}, o.inset && {
  paddingLeft: 72
}, !o.disableSticky && {
  position: "sticky",
  top: 0,
  zIndex: 1,
  backgroundColor: (e.vars || e).palette.background.paper
})), Tw = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiListSubheader"
  }), {
    className: d,
    color: p = "default",
    component: f = "li",
    disableGutters: v = !1,
    disableSticky: g = !1,
    inset: b = !1
  } = c, S = ue(c, bW), R = x({}, c, {
    color: p,
    component: f,
    disableGutters: v,
    disableSticky: g,
    inset: b
  }), D = CW(R);
  return /* @__PURE__ */ z(xW, x({
    as: f,
    className: ve(D.root, d),
    ref: i,
    ownerState: R
  }, S));
});
Tw.muiSkipListHighlight = !0;
process.env.NODE_ENV !== "production" && (Tw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component. It supports those theme colors that make sense for this component.
   * @default 'default'
   */
  color: t.oneOf(["default", "inherit", "primary"]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the List Subheader will not have gutters.
   * @default false
   */
  disableGutters: t.bool,
  /**
   * If `true`, the List Subheader will not stick to the top during scroll.
   * @default false
   */
  disableSticky: t.bool,
  /**
   * If `true`, the List Subheader is indented.
   * @default false
   */
  inset: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const SW = Tw, TW = Cn(/* @__PURE__ */ z("path", {
  d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
}), "Cancel");
function wW(e) {
  return We("MuiChip", e);
}
const EW = Ge("MuiChip", ["root", "sizeSmall", "sizeMedium", "colorError", "colorInfo", "colorPrimary", "colorSecondary", "colorSuccess", "colorWarning", "disabled", "clickable", "clickableColorPrimary", "clickableColorSecondary", "deletable", "deletableColorPrimary", "deletableColorSecondary", "outlined", "filled", "outlinedPrimary", "outlinedSecondary", "filledPrimary", "filledSecondary", "avatar", "avatarSmall", "avatarMedium", "avatarColorPrimary", "avatarColorSecondary", "icon", "iconSmall", "iconMedium", "iconColorPrimary", "iconColorSecondary", "label", "labelSmall", "labelMedium", "deleteIcon", "deleteIconSmall", "deleteIconMedium", "deleteIconColorPrimary", "deleteIconColorSecondary", "deleteIconOutlinedColorPrimary", "deleteIconOutlinedColorSecondary", "deleteIconFilledColorPrimary", "deleteIconFilledColorSecondary", "focusVisible"]), On = EW, RW = ["avatar", "className", "clickable", "color", "component", "deleteIcon", "disabled", "icon", "label", "onClick", "onDelete", "onKeyDown", "onKeyUp", "size", "variant", "tabIndex", "skipFocusWhenDisabled"], OW = (e) => {
  const {
    classes: o,
    disabled: i,
    size: c,
    color: d,
    iconColor: p,
    onDelete: f,
    clickable: v,
    variant: g
  } = e, b = {
    root: ["root", g, i && "disabled", `size${ce(c)}`, `color${ce(d)}`, v && "clickable", v && `clickableColor${ce(d)}`, f && "deletable", f && `deletableColor${ce(d)}`, `${g}${ce(d)}`],
    label: ["label", `label${ce(c)}`],
    avatar: ["avatar", `avatar${ce(c)}`, `avatarColor${ce(d)}`],
    icon: ["icon", `icon${ce(c)}`, `iconColor${ce(p)}`],
    deleteIcon: ["deleteIcon", `deleteIcon${ce(c)}`, `deleteIconColor${ce(d)}`, `deleteIcon${ce(g)}Color${ce(d)}`]
  };
  return Ye(b, wW, o);
}, kW = ee("div", {
  name: "MuiChip",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e, {
      color: c,
      iconColor: d,
      clickable: p,
      onDelete: f,
      size: v,
      variant: g
    } = i;
    return [{
      [`& .${On.avatar}`]: o.avatar
    }, {
      [`& .${On.avatar}`]: o[`avatar${ce(v)}`]
    }, {
      [`& .${On.avatar}`]: o[`avatarColor${ce(c)}`]
    }, {
      [`& .${On.icon}`]: o.icon
    }, {
      [`& .${On.icon}`]: o[`icon${ce(v)}`]
    }, {
      [`& .${On.icon}`]: o[`iconColor${ce(d)}`]
    }, {
      [`& .${On.deleteIcon}`]: o.deleteIcon
    }, {
      [`& .${On.deleteIcon}`]: o[`deleteIcon${ce(v)}`]
    }, {
      [`& .${On.deleteIcon}`]: o[`deleteIconColor${ce(c)}`]
    }, {
      [`& .${On.deleteIcon}`]: o[`deleteIcon${ce(g)}Color${ce(c)}`]
    }, o.root, o[`size${ce(v)}`], o[`color${ce(c)}`], p && o.clickable, p && c !== "default" && o[`clickableColor${ce(c)})`], f && o.deletable, f && c !== "default" && o[`deletableColor${ce(c)}`], o[g], o[`${g}${ce(c)}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => {
  const i = e.palette.mode === "light" ? e.palette.grey[700] : e.palette.grey[300];
  return x({
    maxWidth: "100%",
    fontFamily: e.typography.fontFamily,
    fontSize: e.typography.pxToRem(13),
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    height: 32,
    color: (e.vars || e).palette.text.primary,
    backgroundColor: (e.vars || e).palette.action.selected,
    borderRadius: 32 / 2,
    whiteSpace: "nowrap",
    transition: e.transitions.create(["background-color", "box-shadow"]),
    // reset cursor explicitly in case ButtonBase is used
    cursor: "unset",
    // We disable the focus ring for mouse, touch and keyboard users.
    outline: 0,
    textDecoration: "none",
    border: 0,
    // Remove `button` border
    padding: 0,
    // Remove `button` padding
    verticalAlign: "middle",
    boxSizing: "border-box",
    [`&.${On.disabled}`]: {
      opacity: (e.vars || e).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`& .${On.avatar}`]: {
      marginLeft: 5,
      marginRight: -6,
      width: 24,
      height: 24,
      color: e.vars ? e.vars.palette.Chip.defaultAvatarColor : i,
      fontSize: e.typography.pxToRem(12)
    },
    [`& .${On.avatarColorPrimary}`]: {
      color: (e.vars || e).palette.primary.contrastText,
      backgroundColor: (e.vars || e).palette.primary.dark
    },
    [`& .${On.avatarColorSecondary}`]: {
      color: (e.vars || e).palette.secondary.contrastText,
      backgroundColor: (e.vars || e).palette.secondary.dark
    },
    [`& .${On.avatarSmall}`]: {
      marginLeft: 4,
      marginRight: -4,
      width: 18,
      height: 18,
      fontSize: e.typography.pxToRem(10)
    },
    [`& .${On.icon}`]: x({
      marginLeft: 5,
      marginRight: -6
    }, o.size === "small" && {
      fontSize: 18,
      marginLeft: 4,
      marginRight: -4
    }, o.iconColor === o.color && x({
      color: e.vars ? e.vars.palette.Chip.defaultIconColor : i
    }, o.color !== "default" && {
      color: "inherit"
    })),
    [`& .${On.deleteIcon}`]: x({
      WebkitTapHighlightColor: "transparent",
      color: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / 0.26)` : Wt(e.palette.text.primary, 0.26),
      fontSize: 22,
      cursor: "pointer",
      margin: "0 5px 0 -6px",
      "&:hover": {
        color: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / 0.4)` : Wt(e.palette.text.primary, 0.4)
      }
    }, o.size === "small" && {
      fontSize: 16,
      marginRight: 4,
      marginLeft: -4
    }, o.color !== "default" && {
      color: e.vars ? `rgba(${e.vars.palette[o.color].contrastTextChannel} / 0.7)` : Wt(e.palette[o.color].contrastText, 0.7),
      "&:hover, &:active": {
        color: (e.vars || e).palette[o.color].contrastText
      }
    })
  }, o.size === "small" && {
    height: 24
  }, o.color !== "default" && {
    backgroundColor: (e.vars || e).palette[o.color].main,
    color: (e.vars || e).palette[o.color].contrastText
  }, o.onDelete && {
    [`&.${On.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Wt(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
    }
  }, o.onDelete && o.color !== "default" && {
    [`&.${On.focusVisible}`]: {
      backgroundColor: (e.vars || e).palette[o.color].dark
    }
  });
}, ({
  theme: e,
  ownerState: o
}) => x({}, o.clickable && {
  userSelect: "none",
  WebkitTapHighlightColor: "transparent",
  cursor: "pointer",
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Wt(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity)
  },
  [`&.${On.focusVisible}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Wt(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
  },
  "&:active": {
    boxShadow: (e.vars || e).shadows[1]
  }
}, o.clickable && o.color !== "default" && {
  [`&:hover, &.${On.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette[o.color].dark
  }
}), ({
  theme: e,
  ownerState: o
}) => x({}, o.variant === "outlined" && {
  backgroundColor: "transparent",
  border: e.vars ? `1px solid ${e.vars.palette.Chip.defaultBorder}` : `1px solid ${e.palette.mode === "light" ? e.palette.grey[400] : e.palette.grey[700]}`,
  [`&.${On.clickable}:hover`]: {
    backgroundColor: (e.vars || e).palette.action.hover
  },
  [`&.${On.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette.action.focus
  },
  [`& .${On.avatar}`]: {
    marginLeft: 4
  },
  [`& .${On.avatarSmall}`]: {
    marginLeft: 2
  },
  [`& .${On.icon}`]: {
    marginLeft: 4
  },
  [`& .${On.iconSmall}`]: {
    marginLeft: 2
  },
  [`& .${On.deleteIcon}`]: {
    marginRight: 5
  },
  [`& .${On.deleteIconSmall}`]: {
    marginRight: 3
  }
}, o.variant === "outlined" && o.color !== "default" && {
  color: (e.vars || e).palette[o.color].main,
  border: `1px solid ${e.vars ? `rgba(${e.vars.palette[o.color].mainChannel} / 0.7)` : Wt(e.palette[o.color].main, 0.7)}`,
  [`&.${On.clickable}:hover`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette[o.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Wt(e.palette[o.color].main, e.palette.action.hoverOpacity)
  },
  [`&.${On.focusVisible}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette[o.color].mainChannel} / ${e.vars.palette.action.focusOpacity})` : Wt(e.palette[o.color].main, e.palette.action.focusOpacity)
  },
  [`& .${On.deleteIcon}`]: {
    color: e.vars ? `rgba(${e.vars.palette[o.color].mainChannel} / 0.7)` : Wt(e.palette[o.color].main, 0.7),
    "&:hover, &:active": {
      color: (e.vars || e).palette[o.color].main
    }
  }
})), DW = ee("span", {
  name: "MuiChip",
  slot: "Label",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e, {
      size: c
    } = i;
    return [o.label, o[`label${ce(c)}`]];
  }
})(({
  ownerState: e
}) => x({
  overflow: "hidden",
  textOverflow: "ellipsis",
  paddingLeft: 12,
  paddingRight: 12,
  whiteSpace: "nowrap"
}, e.variant === "outlined" && {
  paddingLeft: 11,
  paddingRight: 11
}, e.size === "small" && {
  paddingLeft: 8,
  paddingRight: 8
}, e.size === "small" && e.variant === "outlined" && {
  paddingLeft: 7,
  paddingRight: 7
}));
function AD(e) {
  return e.key === "Backspace" || e.key === "Delete";
}
const bP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiChip"
  }), {
    avatar: d,
    className: p,
    clickable: f,
    color: v = "default",
    component: g,
    deleteIcon: b,
    disabled: S = !1,
    icon: R,
    label: D,
    onClick: k,
    onDelete: $,
    onKeyDown: P,
    onKeyUp: O,
    size: I = "medium",
    variant: _ = "filled",
    tabIndex: A,
    skipFocusWhenDisabled: V = !1
    // TODO v6: Rename to `focusableWhenDisabled`.
  } = c, B = ue(c, RW), M = w.useRef(null), F = cn(M, i), Y = (ne) => {
    ne.stopPropagation(), $ && $(ne);
  }, H = (ne) => {
    ne.currentTarget === ne.target && AD(ne) && ne.preventDefault(), P && P(ne);
  }, J = (ne) => {
    ne.currentTarget === ne.target && ($ && AD(ne) ? $(ne) : ne.key === "Escape" && M.current && M.current.blur()), O && O(ne);
  }, W = f !== !1 && k ? !0 : f, te = W || $ ? Qo : g || "div", Z = x({}, c, {
    component: te,
    disabled: S,
    size: I,
    color: v,
    iconColor: /* @__PURE__ */ w.isValidElement(R) && R.props.color || v,
    onDelete: !!$,
    clickable: W,
    variant: _
  }), q = OW(Z), Q = te === Qo ? x({
    component: g || "div",
    focusVisibleClassName: q.focusVisible
  }, $ && {
    disableRipple: !0
  }) : {};
  let re = null;
  $ && (re = b && /* @__PURE__ */ w.isValidElement(b) ? /* @__PURE__ */ w.cloneElement(b, {
    className: ve(b.props.className, q.deleteIcon),
    onClick: Y
  }) : /* @__PURE__ */ z(TW, {
    className: ve(q.deleteIcon),
    onClick: Y
  }));
  let ie = null;
  d && /* @__PURE__ */ w.isValidElement(d) && (ie = /* @__PURE__ */ w.cloneElement(d, {
    className: ve(q.avatar, d.props.className)
  }));
  let K = null;
  return R && /* @__PURE__ */ w.isValidElement(R) && (K = /* @__PURE__ */ w.cloneElement(R, {
    className: ve(q.icon, R.props.className)
  })), process.env.NODE_ENV !== "production" && ie && K && console.error("MUI: The Chip component can not handle the avatar and the icon prop at the same time. Pick one."), /* @__PURE__ */ ht(kW, x({
    as: te,
    className: ve(q.root, p),
    disabled: W && S ? !0 : void 0,
    onClick: k,
    onKeyDown: H,
    onKeyUp: J,
    ref: F,
    tabIndex: V && S ? -1 : A,
    ownerState: Z
  }, Q, B, {
    children: [ie || K, /* @__PURE__ */ z(DW, {
      className: ve(q.label),
      ownerState: Z,
      children: D
    }), re]
  }));
});
process.env.NODE_ENV !== "production" && (bP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The Avatar element to display.
   */
  avatar: t.element,
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: o0,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, the chip will appear clickable, and will raise when pressed,
   * even if the onClick prop is not defined.
   * If `false`, the chip will not appear clickable, even if onClick prop is defined.
   * This can be used, for example,
   * along with the component prop to indicate an anchor Chip is clickable.
   * Note: this controls the UI and does not affect the onClick event.
   */
  clickable: t.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: t.oneOfType([t.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Override the default delete icon element. Shown only if `onDelete` is set.
   */
  deleteIcon: t.element,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * Icon element.
   */
  icon: t.element,
  /**
   * The content of the component.
   */
  label: t.node,
  /**
   * @ignore
   */
  onClick: t.func,
  /**
   * Callback fired when the delete icon is clicked.
   * If set, the delete icon will be shown.
   */
  onDelete: t.func,
  /**
   * @ignore
   */
  onKeyDown: t.func,
  /**
   * @ignore
   */
  onKeyUp: t.func,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["medium", "small"]), t.string]),
  /**
   * If `true`, allows the disabled chip to escape focus.
   * If `false`, allows the disabled chip to receive focus.
   * @default false
   */
  skipFocusWhenDisabled: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * @ignore
   */
  tabIndex: t.number,
  /**
   * The variant to use.
   * @default 'filled'
   */
  variant: t.oneOfType([t.oneOf(["filled", "outlined"]), t.string])
});
const CP = bP;
function Bl({
  props: e,
  states: o,
  muiFormControl: i
}) {
  return o.reduce((c, d) => (c[d] = e[d], i && typeof e[d] > "u" && (c[d] = i[d]), c), {});
}
const xP = /* @__PURE__ */ w.createContext(void 0);
process.env.NODE_ENV !== "production" && (xP.displayName = "FormControlContext");
const d0 = xP;
function Zi() {
  return w.useContext(d0);
}
function ww(e) {
  return /* @__PURE__ */ z(sN, x({}, e, {
    defaultTheme: a0,
    themeId: Gc
  }));
}
process.env.NODE_ENV !== "production" && (ww.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: t.oneOfType([t.array, t.func, t.number, t.object, t.string, t.bool])
});
function _D(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function GC(e, o = !1) {
  return e && (_D(e.value) && e.value !== "" || o && _D(e.defaultValue) && e.defaultValue !== "");
}
function MW(e) {
  return e.startAdornment;
}
function NW(e) {
  return We("MuiInputBase", e);
}
const PW = Ge("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]), Ua = PW, $W = ["aria-describedby", "autoComplete", "autoFocus", "className", "color", "components", "componentsProps", "defaultValue", "disabled", "disableInjectingGlobalStyles", "endAdornment", "error", "fullWidth", "id", "inputComponent", "inputProps", "inputRef", "margin", "maxRows", "minRows", "multiline", "name", "onBlur", "onChange", "onClick", "onFocus", "onKeyDown", "onKeyUp", "placeholder", "readOnly", "renderSuffix", "rows", "size", "slotProps", "slots", "startAdornment", "type", "value"], p0 = (e, o) => {
  const {
    ownerState: i
  } = e;
  return [o.root, i.formControl && o.formControl, i.startAdornment && o.adornedStart, i.endAdornment && o.adornedEnd, i.error && o.error, i.size === "small" && o.sizeSmall, i.multiline && o.multiline, i.color && o[`color${ce(i.color)}`], i.fullWidth && o.fullWidth, i.hiddenLabel && o.hiddenLabel];
}, f0 = (e, o) => {
  const {
    ownerState: i
  } = e;
  return [o.input, i.size === "small" && o.inputSizeSmall, i.multiline && o.inputMultiline, i.type === "search" && o.inputTypeSearch, i.startAdornment && o.inputAdornedStart, i.endAdornment && o.inputAdornedEnd, i.hiddenLabel && o.inputHiddenLabel];
}, IW = (e) => {
  const {
    classes: o,
    color: i,
    disabled: c,
    error: d,
    endAdornment: p,
    focused: f,
    formControl: v,
    fullWidth: g,
    hiddenLabel: b,
    multiline: S,
    readOnly: R,
    size: D,
    startAdornment: k,
    type: $
  } = e, P = {
    root: ["root", `color${ce(i)}`, c && "disabled", d && "error", g && "fullWidth", f && "focused", v && "formControl", D && D !== "medium" && `size${ce(D)}`, S && "multiline", k && "adornedStart", p && "adornedEnd", b && "hiddenLabel", R && "readOnly"],
    input: ["input", c && "disabled", $ === "search" && "inputTypeSearch", S && "inputMultiline", D === "small" && "inputSizeSmall", b && "inputHiddenLabel", k && "inputAdornedStart", p && "inputAdornedEnd", R && "readOnly"]
  };
  return Ye(P, NW, o);
}, m0 = ee("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: p0
})(({
  theme: e,
  ownerState: o
}) => x({}, e.typography.body1, {
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${Ua.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  }
}, o.multiline && x({
  padding: "4px 0 5px"
}, o.size === "small" && {
  paddingTop: 1
}), o.fullWidth && {
  width: "100%"
})), h0 = ee("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: f0
})(({
  theme: e,
  ownerState: o
}) => {
  const i = e.palette.mode === "light", c = x({
    color: "currentColor"
  }, e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: i ? 0.42 : 0.5
  }, {
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }), d = {
    opacity: "0 !important"
  }, p = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: i ? 0.42 : 0.5
  };
  return x({
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    // Fix IE11 width issue
    animationName: "mui-auto-fill-cancel",
    animationDuration: "10ms",
    "&::-webkit-input-placeholder": c,
    "&::-moz-placeholder": c,
    // Firefox 19+
    "&:-ms-input-placeholder": c,
    // IE11
    "&::-ms-input-placeholder": c,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${Ua.formControl} &`]: {
      "&::-webkit-input-placeholder": d,
      "&::-moz-placeholder": d,
      // Firefox 19+
      "&:-ms-input-placeholder": d,
      // IE11
      "&::-ms-input-placeholder": d,
      // Edge
      "&:focus::-webkit-input-placeholder": p,
      "&:focus::-moz-placeholder": p,
      // Firefox 19+
      "&:focus:-ms-input-placeholder": p,
      // IE11
      "&:focus::-ms-input-placeholder": p
      // Edge
    },
    [`&.${Ua.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    "&:-webkit-autofill": {
      animationDuration: "5000s",
      animationName: "mui-auto-fill"
    }
  }, o.size === "small" && {
    paddingTop: 1
  }, o.multiline && {
    height: "auto",
    resize: "none",
    padding: 0,
    paddingTop: 0
  }, o.type === "search" && {
    // Improve type search style.
    MozAppearance: "textfield"
  });
}), LW = /* @__PURE__ */ z(ww, {
  styles: {
    "@keyframes mui-auto-fill": {
      from: {
        display: "block"
      }
    },
    "@keyframes mui-auto-fill-cancel": {
      from: {
        display: "block"
      }
    }
  }
}), SP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c;
  const d = Ue({
    props: o,
    name: "MuiInputBase"
  }), {
    "aria-describedby": p,
    autoComplete: f,
    autoFocus: v,
    className: g,
    components: b = {},
    componentsProps: S = {},
    defaultValue: R,
    disabled: D,
    disableInjectingGlobalStyles: k,
    endAdornment: $,
    fullWidth: P = !1,
    id: O,
    inputComponent: I = "input",
    inputProps: _ = {},
    inputRef: A,
    maxRows: V,
    minRows: B,
    multiline: M = !1,
    name: F,
    onBlur: Y,
    onChange: H,
    onClick: J,
    onFocus: W,
    onKeyDown: te,
    onKeyUp: Z,
    placeholder: q,
    readOnly: Q,
    renderSuffix: re,
    rows: ie,
    slotProps: K = {},
    slots: ne = {},
    startAdornment: se,
    type: Fe = "text",
    value: qe
  } = d, Me = ue(d, $W), fe = _.value != null ? _.value : qe, {
    current: De
  } = w.useRef(fe != null), be = w.useRef(), Ce = w.useCallback((Te) => {
    process.env.NODE_ENV !== "production" && Te && Te.nodeName !== "INPUT" && !Te.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), de = cn(be, A, _.ref, Ce), [Ae, at] = w.useState(!1), Oe = Zi();
  process.env.NODE_ENV !== "production" && w.useEffect(() => {
    if (Oe)
      return Oe.registerEffect();
  }, [Oe]);
  const _e = Bl({
    props: d,
    muiFormControl: Oe,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  _e.focused = Oe ? Oe.focused : Ae, w.useEffect(() => {
    !Oe && D && Ae && (at(!1), Y && Y());
  }, [Oe, D, Ae, Y]);
  const ye = Oe && Oe.onFilled, ae = Oe && Oe.onEmpty, $e = w.useCallback((Te) => {
    GC(Te) ? ye && ye() : ae && ae();
  }, [ye, ae]);
  so(() => {
    De && $e({
      value: fe
    });
  }, [fe, $e, De]);
  const Se = (Te) => {
    if (_e.disabled) {
      Te.stopPropagation();
      return;
    }
    W && W(Te), _.onFocus && _.onFocus(Te), Oe && Oe.onFocus ? Oe.onFocus(Te) : at(!0);
  }, mt = (Te) => {
    Y && Y(Te), _.onBlur && _.onBlur(Te), Oe && Oe.onBlur ? Oe.onBlur(Te) : at(!1);
  }, Be = (Te, ...xe) => {
    if (!De) {
      const ot = Te.target || be.current;
      if (ot == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : Bs(1));
      $e({
        value: ot.value
      });
    }
    _.onChange && _.onChange(Te, ...xe), H && H(Te, ...xe);
  };
  w.useEffect(() => {
    $e(be.current);
  }, []);
  const ft = (Te) => {
    be.current && Te.currentTarget === Te.target && be.current.focus(), J && J(Te);
  };
  let je = I, Ve = _;
  M && je === "input" && (ie ? (process.env.NODE_ENV !== "production" && (B || V) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), Ve = x({
    type: void 0,
    minRows: ie,
    maxRows: ie
  }, Ve)) : Ve = x({
    type: void 0,
    maxRows: V,
    minRows: B
  }, Ve), je = cP);
  const st = (Te) => {
    $e(Te.animationName === "mui-auto-fill-cancel" ? be.current : {
      value: "x"
    });
  };
  w.useEffect(() => {
    Oe && Oe.setAdornedStart(!!se);
  }, [Oe, se]);
  const gt = x({}, d, {
    color: _e.color || "primary",
    disabled: _e.disabled,
    endAdornment: $,
    error: _e.error,
    focused: _e.focused,
    formControl: Oe,
    fullWidth: P,
    hiddenLabel: _e.hiddenLabel,
    multiline: M,
    size: _e.size,
    startAdornment: se,
    type: Fe
  }), Tt = IW(gt), _t = ne.root || b.Root || m0, Zt = K.root || S.root || {}, Vt = ne.input || b.Input || h0;
  return Ve = x({}, Ve, (c = K.input) != null ? c : S.input), /* @__PURE__ */ ht(w.Fragment, {
    children: [!k && LW, /* @__PURE__ */ ht(_t, x({}, Zt, !Gi(_t) && {
      ownerState: x({}, gt, Zt.ownerState)
    }, {
      ref: i,
      onClick: ft
    }, Me, {
      className: ve(Tt.root, Zt.className, g, Q && "MuiInputBase-readOnly"),
      children: [se, /* @__PURE__ */ z(d0.Provider, {
        value: null,
        children: /* @__PURE__ */ z(Vt, x({
          ownerState: gt,
          "aria-invalid": _e.error,
          "aria-describedby": p,
          autoComplete: f,
          autoFocus: v,
          defaultValue: R,
          disabled: _e.disabled,
          id: O,
          onAnimationStart: st,
          name: F,
          placeholder: q,
          readOnly: Q,
          required: _e.required,
          rows: ie,
          value: fe,
          onKeyDown: te,
          onKeyUp: Z,
          type: Fe
        }, Ve, !Gi(Vt) && {
          as: je,
          ownerState: x({}, gt, Ve.ownerState)
        }, {
          ref: de,
          className: ve(Tt.input, Ve.className, Q && "MuiInputBase-readOnly"),
          onBlur: mt,
          onChange: Be,
          onFocus: Se
        }))
      }), $, re ? re(x({}, _e, {
        startAdornment: se
      })) : null]
    }))]
  });
});
process.env.NODE_ENV !== "production" && (SP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": t.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: t.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: t.oneOfType([t.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    Input: t.elementType,
    Root: t.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: t.shape({
    input: t.object,
    root: t.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: t.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: t.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: t.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: t.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * The id of the `input` element.
   */
  id: t.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: Kc,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Lo,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: t.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: t.oneOfType([t.number, t.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: t.oneOfType([t.number, t.string]),
  /**
   * If `true`, a [TextareaAutosize](/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: t.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: t.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: t.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: t.func,
  /**
   * @ignore
   */
  onClick: t.func,
  /**
   * @ignore
   */
  onFocus: t.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: t.func,
  /**
   * @ignore
   */
  onKeyDown: t.func,
  /**
   * @ignore
   */
  onKeyUp: t.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: t.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: t.bool,
  /**
   * @ignore
   */
  renderSuffix: t.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: t.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: t.oneOfType([t.number, t.string]),
  /**
   * The size of the component.
   */
  size: t.oneOfType([t.oneOf(["medium", "small"]), t.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: t.shape({
    input: t.object,
    root: t.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: t.shape({
    input: t.elementType,
    root: t.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: t.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: t.any
});
const v0 = SP;
function AW(e) {
  return We("MuiInput", e);
}
const _W = x({}, Ua, Ge("MuiInput", ["root", "underline", "input"])), Uc = _W;
function BW(e) {
  return We("MuiOutlinedInput", e);
}
const zW = x({}, Ua, Ge("MuiOutlinedInput", ["root", "notchedOutline", "input"])), Is = zW;
function VW(e) {
  return We("MuiFilledInput", e);
}
const FW = x({}, Ua, Ge("MuiFilledInput", ["root", "underline", "input"])), Ha = FW, Ew = Cn(/* @__PURE__ */ z("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown");
function jW(e) {
  return We("MuiAutocomplete", e);
}
const UW = Ge("MuiAutocomplete", ["root", "expanded", "fullWidth", "focused", "focusVisible", "tag", "tagSizeSmall", "tagSizeMedium", "hasPopupIcon", "hasClearIcon", "inputRoot", "input", "inputFocused", "endAdornment", "clearIndicator", "popupIndicator", "popupIndicatorOpen", "popper", "popperDisablePortal", "paper", "listbox", "loading", "noOptions", "option", "groupLabel", "groupUl"]), yn = UW;
var BD, zD;
const HW = ["autoComplete", "autoHighlight", "autoSelect", "blurOnSelect", "ChipProps", "className", "clearIcon", "clearOnBlur", "clearOnEscape", "clearText", "closeText", "componentsProps", "defaultValue", "disableClearable", "disableCloseOnSelect", "disabled", "disabledItemsFocusable", "disableListWrap", "disablePortal", "filterOptions", "filterSelectedOptions", "forcePopupIcon", "freeSolo", "fullWidth", "getLimitTagsText", "getOptionDisabled", "getOptionKey", "getOptionLabel", "isOptionEqualToValue", "groupBy", "handleHomeEndKeys", "id", "includeInputInList", "inputValue", "limitTags", "ListboxComponent", "ListboxProps", "loading", "loadingText", "multiple", "noOptionsText", "onChange", "onClose", "onHighlightChange", "onInputChange", "onOpen", "open", "openOnFocus", "openText", "options", "PaperComponent", "PopperComponent", "popupIcon", "readOnly", "renderGroup", "renderInput", "renderOption", "renderTags", "selectOnFocus", "size", "slotProps", "value"], WW = ["ref"], YW = (e) => {
  const {
    classes: o,
    disablePortal: i,
    expanded: c,
    focused: d,
    fullWidth: p,
    hasClearIcon: f,
    hasPopupIcon: v,
    inputFocused: g,
    popupOpen: b,
    size: S
  } = e, R = {
    root: ["root", c && "expanded", d && "focused", p && "fullWidth", f && "hasClearIcon", v && "hasPopupIcon"],
    inputRoot: ["inputRoot"],
    input: ["input", g && "inputFocused"],
    tag: ["tag", `tagSize${ce(S)}`],
    endAdornment: ["endAdornment"],
    clearIndicator: ["clearIndicator"],
    popupIndicator: ["popupIndicator", b && "popupIndicatorOpen"],
    popper: ["popper", i && "popperDisablePortal"],
    paper: ["paper"],
    listbox: ["listbox"],
    loading: ["loading"],
    noOptions: ["noOptions"],
    option: ["option"],
    groupLabel: ["groupLabel"],
    groupUl: ["groupUl"]
  };
  return Ye(R, jW, o);
}, GW = ee("div", {
  name: "MuiAutocomplete",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e, {
      fullWidth: c,
      hasClearIcon: d,
      hasPopupIcon: p,
      inputFocused: f,
      size: v
    } = i;
    return [{
      [`& .${yn.tag}`]: o.tag
    }, {
      [`& .${yn.tag}`]: o[`tagSize${ce(v)}`]
    }, {
      [`& .${yn.inputRoot}`]: o.inputRoot
    }, {
      [`& .${yn.input}`]: o.input
    }, {
      [`& .${yn.input}`]: f && o.inputFocused
    }, o.root, c && o.fullWidth, p && o.hasPopupIcon, d && o.hasClearIcon];
  }
})(({
  ownerState: e
}) => x({
  [`&.${yn.focused} .${yn.clearIndicator}`]: {
    visibility: "visible"
  },
  /* Avoid double tap issue on iOS */
  "@media (pointer: fine)": {
    [`&:hover .${yn.clearIndicator}`]: {
      visibility: "visible"
    }
  }
}, e.fullWidth && {
  width: "100%"
}, {
  [`& .${yn.tag}`]: x({
    margin: 3,
    maxWidth: "calc(100% - 6px)"
  }, e.size === "small" && {
    margin: 2,
    maxWidth: "calc(100% - 4px)"
  }),
  [`& .${yn.inputRoot}`]: {
    flexWrap: "wrap",
    [`.${yn.hasPopupIcon}&, .${yn.hasClearIcon}&`]: {
      paddingRight: 26 + 4
    },
    [`.${yn.hasPopupIcon}.${yn.hasClearIcon}&`]: {
      paddingRight: 52 + 4
    },
    [`& .${yn.input}`]: {
      width: 0,
      minWidth: 30
    }
  },
  [`& .${Uc.root}`]: {
    paddingBottom: 1,
    "& .MuiInput-input": {
      padding: "4px 4px 4px 0px"
    }
  },
  [`& .${Uc.root}.${Ua.sizeSmall}`]: {
    [`& .${Uc.input}`]: {
      padding: "2px 4px 3px 0"
    }
  },
  [`& .${Is.root}`]: {
    padding: 9,
    [`.${yn.hasPopupIcon}&, .${yn.hasClearIcon}&`]: {
      paddingRight: 26 + 4 + 9
    },
    [`.${yn.hasPopupIcon}.${yn.hasClearIcon}&`]: {
      paddingRight: 52 + 4 + 9
    },
    [`& .${yn.input}`]: {
      padding: "7.5px 4px 7.5px 5px"
    },
    [`& .${yn.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${Is.root}.${Ua.sizeSmall}`]: {
    // Don't specify paddingRight, as it overrides the default value set when there is only
    // one of the popup or clear icon as the specificity is equal so the latter one wins
    paddingTop: 6,
    paddingBottom: 6,
    paddingLeft: 6,
    [`& .${yn.input}`]: {
      padding: "2.5px 4px 2.5px 8px"
    }
  },
  [`& .${Ha.root}`]: {
    paddingTop: 19,
    paddingLeft: 8,
    [`.${yn.hasPopupIcon}&, .${yn.hasClearIcon}&`]: {
      paddingRight: 26 + 4 + 9
    },
    [`.${yn.hasPopupIcon}.${yn.hasClearIcon}&`]: {
      paddingRight: 52 + 4 + 9
    },
    [`& .${Ha.input}`]: {
      padding: "7px 4px"
    },
    [`& .${yn.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${Ha.root}.${Ua.sizeSmall}`]: {
    paddingBottom: 1,
    [`& .${Ha.input}`]: {
      padding: "2.5px 4px"
    }
  },
  [`& .${Ua.hiddenLabel}`]: {
    paddingTop: 8
  },
  [`& .${Ha.root}.${Ua.hiddenLabel}`]: {
    paddingTop: 0,
    paddingBottom: 0,
    [`& .${yn.input}`]: {
      paddingTop: 16,
      paddingBottom: 17
    }
  },
  [`& .${Ha.root}.${Ua.hiddenLabel}.${Ua.sizeSmall}`]: {
    [`& .${yn.input}`]: {
      paddingTop: 8,
      paddingBottom: 9
    }
  },
  [`& .${yn.input}`]: x({
    flexGrow: 1,
    textOverflow: "ellipsis",
    opacity: 0
  }, e.inputFocused && {
    opacity: 1
  })
})), qW = ee("div", {
  name: "MuiAutocomplete",
  slot: "EndAdornment",
  overridesResolver: (e, o) => o.endAdornment
})({
  // We use a position absolute to support wrapping tags.
  position: "absolute",
  right: 0,
  top: "50%",
  transform: "translate(0, -50%)"
}), KW = ee(Wi, {
  name: "MuiAutocomplete",
  slot: "ClearIndicator",
  overridesResolver: (e, o) => o.clearIndicator
})({
  marginRight: -2,
  padding: 4,
  visibility: "hidden"
}), QW = ee(Wi, {
  name: "MuiAutocomplete",
  slot: "PopupIndicator",
  overridesResolver: ({
    ownerState: e
  }, o) => x({}, o.popupIndicator, e.popupOpen && o.popupIndicatorOpen)
})(({
  ownerState: e
}) => x({
  padding: 2,
  marginRight: -2
}, e.popupOpen && {
  transform: "rotate(180deg)"
})), XW = ee(Qv, {
  name: "MuiAutocomplete",
  slot: "Popper",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [{
      [`& .${yn.option}`]: o.option
    }, o.popper, i.disablePortal && o.popperDisablePortal];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  zIndex: (e.vars || e).zIndex.modal
}, o.disablePortal && {
  position: "absolute"
})), ZW = ee(Ya, {
  name: "MuiAutocomplete",
  slot: "Paper",
  overridesResolver: (e, o) => o.paper
})(({
  theme: e
}) => x({}, e.typography.body1, {
  overflow: "auto"
})), JW = ee("div", {
  name: "MuiAutocomplete",
  slot: "Loading",
  overridesResolver: (e, o) => o.loading
})(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  padding: "14px 16px"
})), e6 = ee("div", {
  name: "MuiAutocomplete",
  slot: "NoOptions",
  overridesResolver: (e, o) => o.noOptions
})(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  padding: "14px 16px"
})), t6 = ee("div", {
  name: "MuiAutocomplete",
  slot: "Listbox",
  overridesResolver: (e, o) => o.listbox
})(({
  theme: e
}) => ({
  listStyle: "none",
  margin: 0,
  padding: "8px 0",
  maxHeight: "40vh",
  overflow: "auto",
  position: "relative",
  [`& .${yn.option}`]: {
    minHeight: 48,
    display: "flex",
    overflow: "hidden",
    justifyContent: "flex-start",
    alignItems: "center",
    cursor: "pointer",
    paddingTop: 6,
    boxSizing: "border-box",
    outline: "0",
    WebkitTapHighlightColor: "transparent",
    paddingBottom: 6,
    paddingLeft: 16,
    paddingRight: 16,
    [e.breakpoints.up("sm")]: {
      minHeight: "auto"
    },
    [`&.${yn.focused}`]: {
      backgroundColor: (e.vars || e).palette.action.hover,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    '&[aria-disabled="true"]': {
      opacity: (e.vars || e).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`&.${yn.focusVisible}`]: {
      backgroundColor: (e.vars || e).palette.action.focus
    },
    '&[aria-selected="true"]': {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Wt(e.palette.primary.main, e.palette.action.selectedOpacity),
      [`&.${yn.focused}`]: {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Wt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: (e.vars || e).palette.action.selected
        }
      },
      [`&.${yn.focusVisible}`]: {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Wt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
      }
    }
  }
})), n6 = ee(SW, {
  name: "MuiAutocomplete",
  slot: "GroupLabel",
  overridesResolver: (e, o) => o.groupLabel
})(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  top: -8
})), o6 = ee("ul", {
  name: "MuiAutocomplete",
  slot: "GroupUl",
  overridesResolver: (e, o) => o.groupUl
})({
  padding: 0,
  [`& .${yn.option}`]: {
    paddingLeft: 24
  }
}), TP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d, p, f;
  const v = Ue({
    props: o,
    name: "MuiAutocomplete"
  }), {
    autoComplete: g = !1,
    autoHighlight: b = !1,
    autoSelect: S = !1,
    blurOnSelect: R = !1,
    ChipProps: D,
    className: k,
    clearIcon: $ = BD || (BD = /* @__PURE__ */ z(dP, {
      fontSize: "small"
    })),
    clearOnBlur: P = !v.freeSolo,
    clearOnEscape: O = !1,
    clearText: I = "Clear",
    closeText: _ = "Close",
    componentsProps: A = {},
    defaultValue: V = v.multiple ? [] : null,
    disableClearable: B = !1,
    disableCloseOnSelect: M = !1,
    disabled: F = !1,
    disabledItemsFocusable: Y = !1,
    disableListWrap: H = !1,
    disablePortal: J = !1,
    filterSelectedOptions: W = !1,
    forcePopupIcon: te = "auto",
    freeSolo: Z = !1,
    fullWidth: q = !1,
    getLimitTagsText: Q = (ge) => `+${ge}`,
    getOptionLabel: re,
    groupBy: ie,
    handleHomeEndKeys: K = !v.freeSolo,
    includeInputInList: ne = !1,
    limitTags: se = -1,
    ListboxComponent: Fe = "ul",
    ListboxProps: qe,
    loading: Me = !1,
    loadingText: fe = "Loading…",
    multiple: De = !1,
    noOptionsText: be = "No options",
    openOnFocus: Ce = !1,
    openText: de = "Open",
    PaperComponent: Ae = Ya,
    PopperComponent: at = Qv,
    popupIcon: Oe = zD || (zD = /* @__PURE__ */ z(Ew, {})),
    readOnly: _e = !1,
    renderGroup: ye,
    renderInput: ae,
    renderOption: $e,
    renderTags: Se,
    selectOnFocus: mt = !v.freeSolo,
    size: Be = "medium",
    slotProps: ft = {}
  } = v, je = ue(v, HW), {
    getRootProps: Ve,
    getInputProps: st,
    getInputLabelProps: gt,
    getPopupIndicatorProps: Tt,
    getClearProps: _t,
    getTagProps: Zt,
    getListboxProps: Vt,
    getOptionProps: Te,
    value: xe,
    dirty: ot,
    expanded: He,
    id: it,
    popupOpen: Ze,
    focused: nt,
    focusedTag: Le,
    anchorEl: et,
    setAnchorEl: pt,
    inputValue: Dt,
    groupedOptions: Nt
  } = D3(x({}, v, {
    componentName: "Autocomplete"
  })), Jt = !B && !F && ot && !_e, Yt = (!Z || te === !0) && te !== !1, {
    onMouseDown: en
  } = st(), {
    ref: Nn
  } = qe ?? {}, nn = Vt(), {
    ref: Un
  } = nn, Ro = ue(nn, WW), Oo = cn(Un, Nn), _o = re || ((ge) => {
    var rt;
    return (rt = ge.label) != null ? rt : ge;
  }), Pn = x({}, v, {
    disablePortal: J,
    expanded: He,
    focused: nt,
    fullWidth: q,
    getOptionLabel: _o,
    hasClearIcon: Jt,
    hasPopupIcon: Yt,
    inputFocused: Le === -1,
    popupOpen: Ze,
    size: Be
  }), Tn = YW(Pn);
  let Hn;
  if (De && xe.length > 0) {
    const ge = (rt) => x({
      className: Tn.tag,
      disabled: F
    }, Zt(rt));
    Se ? Hn = Se(xe, ge, Pn) : Hn = xe.map((rt, bt) => /* @__PURE__ */ z(CP, x({
      label: _o(rt),
      size: Be
    }, ge({
      index: bt
    }), D)));
  }
  if (se > -1 && Array.isArray(Hn)) {
    const ge = Hn.length - se;
    !nt && ge > 0 && (Hn = Hn.splice(0, se), Hn.push(/* @__PURE__ */ z("span", {
      className: Tn.tag,
      children: Q(ge)
    }, Hn.length)));
  }
  const no = ye || ((ge) => /* @__PURE__ */ ht("li", {
    children: [/* @__PURE__ */ z(n6, {
      className: Tn.groupLabel,
      ownerState: Pn,
      component: "div",
      children: ge.group
    }), /* @__PURE__ */ z(o6, {
      className: Tn.groupUl,
      ownerState: Pn,
      children: ge.children
    })]
  }, ge.key)), Bo = $e || ((ge, rt) => /* @__PURE__ */ iN("li", x({}, ge, {
    key: ge.key
  }), _o(rt))), zo = (ge, rt) => {
    const bt = Te({
      option: ge,
      index: rt
    });
    return Bo(x({}, bt, {
      className: Tn.option
    }), ge, {
      selected: bt["aria-selected"],
      index: rt,
      inputValue: Dt
    }, Pn);
  }, Dr = (c = ft.clearIndicator) != null ? c : A.clearIndicator, Vo = (d = ft.paper) != null ? d : A.paper, go = (p = ft.popper) != null ? p : A.popper, ze = (f = ft.popupIndicator) != null ? f : A.popupIndicator;
  return /* @__PURE__ */ ht(w.Fragment, {
    children: [/* @__PURE__ */ z(GW, x({
      ref: i,
      className: ve(Tn.root, k),
      ownerState: Pn
    }, Ve(je), {
      children: ae({
        id: it,
        disabled: F,
        fullWidth: !0,
        size: Be === "small" ? "small" : void 0,
        InputLabelProps: gt(),
        InputProps: x({
          ref: pt,
          className: Tn.inputRoot,
          startAdornment: Hn,
          onClick: (ge) => {
            ge.target === ge.currentTarget && en(ge);
          }
        }, (Jt || Yt) && {
          endAdornment: /* @__PURE__ */ ht(qW, {
            className: Tn.endAdornment,
            ownerState: Pn,
            children: [Jt ? /* @__PURE__ */ z(KW, x({}, _t(), {
              "aria-label": I,
              title: I,
              ownerState: Pn
            }, Dr, {
              className: ve(Tn.clearIndicator, Dr == null ? void 0 : Dr.className),
              children: $
            })) : null, Yt ? /* @__PURE__ */ z(QW, x({}, Tt(), {
              disabled: F,
              "aria-label": Ze ? _ : de,
              title: Ze ? _ : de,
              ownerState: Pn
            }, ze, {
              className: ve(Tn.popupIndicator, ze == null ? void 0 : ze.className),
              children: Oe
            })) : null]
          })
        }),
        inputProps: x({
          className: Tn.input,
          disabled: F,
          readOnly: _e
        }, st())
      })
    })), et ? /* @__PURE__ */ z(XW, x({
      as: at,
      disablePortal: J,
      style: {
        width: et ? et.clientWidth : null
      },
      ownerState: Pn,
      role: "presentation",
      anchorEl: et,
      open: Ze
    }, go, {
      className: ve(Tn.popper, go == null ? void 0 : go.className),
      children: /* @__PURE__ */ ht(ZW, x({
        ownerState: Pn,
        as: Ae
      }, Vo, {
        className: ve(Tn.paper, Vo == null ? void 0 : Vo.className),
        children: [Me && Nt.length === 0 ? /* @__PURE__ */ z(JW, {
          className: Tn.loading,
          ownerState: Pn,
          children: fe
        }) : null, Nt.length === 0 && !Z && !Me ? /* @__PURE__ */ z(e6, {
          className: Tn.noOptions,
          ownerState: Pn,
          role: "presentation",
          onMouseDown: (ge) => {
            ge.preventDefault();
          },
          children: be
        }) : null, Nt.length > 0 ? /* @__PURE__ */ z(t6, x({
          as: Fe,
          className: Tn.listbox,
          ownerState: Pn
        }, Ro, qe, {
          ref: Oo,
          children: Nt.map((ge, rt) => ie ? no({
            key: ge.key,
            group: ge.group,
            children: ge.options.map((bt, sn) => zo(bt, ge.index + sn))
          }) : zo(ge, rt))
        })) : null]
      }))
    })) : null]
  });
});
process.env.NODE_ENV !== "production" && (TP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the portion of the selected suggestion that the user hasn't typed,
   * known as the completion string, appears inline after the input cursor in the textbox.
   * The inline completion string is visually highlighted and has a selected state.
   * @default false
   */
  autoComplete: t.bool,
  /**
   * If `true`, the first option is automatically highlighted.
   * @default false
   */
  autoHighlight: t.bool,
  /**
   * If `true`, the selected option becomes the value of the input
   * when the Autocomplete loses focus unless the user chooses
   * a different option or changes the character string in the input.
   *
   * When using the `freeSolo` mode, the typed value will be the input value
   * if the Autocomplete loses focus without highlighting an option.
   * @default false
   */
  autoSelect: t.bool,
  /**
   * Control if the input should be blurred when an option is selected:
   *
   * - `false` the input is not blurred.
   * - `true` the input is always blurred.
   * - `touch` the input is blurred after a touch event.
   * - `mouse` the input is blurred after a mouse event.
   * @default false
   */
  blurOnSelect: t.oneOfType([t.oneOf(["mouse", "touch"]), t.bool]),
  /**
   * Props applied to the [`Chip`](/material-ui/api/chip/) element.
   */
  ChipProps: t.object,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The icon to display in place of the default clear icon.
   * @default <ClearIcon fontSize="small" />
   */
  clearIcon: t.node,
  /**
   * If `true`, the input's text is cleared on blur if no value is selected.
   *
   * Set it to `true` if you want to help the user enter a new value.
   * Set it to `false` if you want to help the user resume their search.
   * @default !props.freeSolo
   */
  clearOnBlur: t.bool,
  /**
   * If `true`, clear all values when the user presses escape and the popup is closed.
   * @default false
   */
  clearOnEscape: t.bool,
  /**
   * Override the default text for the *clear* icon button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Clear'
   */
  clearText: t.string,
  /**
   * Override the default text for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: t.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  componentsProps: t.shape({
    clearIndicator: t.object,
    paper: t.object,
    popper: t.object,
    popupIndicator: t.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   * @default props.multiple ? [] : null
   */
  defaultValue: Ko(t.any, (e) => e.multiple && e.defaultValue !== void 0 && !Array.isArray(e.defaultValue) ? new Error(["MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.", `However, ${e.defaultValue} was provided.`].join(`
`)) : null),
  /**
   * If `true`, the input can't be cleared.
   * @default false
   */
  disableClearable: t.bool,
  /**
   * If `true`, the popup won't close when a value is selected.
   * @default false
   */
  disableCloseOnSelect: t.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: t.bool,
  /**
   * If `true`, the list box in the popup will not wrap focus.
   * @default false
   */
  disableListWrap: t.bool,
  /**
   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: t.bool,
  /**
   * A function that determines the filtered options to be rendered on search.
   *
   * @default createFilterOptions()
   * @param {Value[]} options The options to render.
   * @param {object} state The state of the component.
   * @returns {Value[]}
   */
  filterOptions: t.func,
  /**
   * If `true`, hide the selected options from the list box.
   * @default false
   */
  filterSelectedOptions: t.bool,
  /**
   * Force the visibility display of the popup icon.
   * @default 'auto'
   */
  forcePopupIcon: t.oneOfType([t.oneOf(["auto"]), t.bool]),
  /**
   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.
   * @default false
   */
  freeSolo: t.bool,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * The label to display when the tags are truncated (`limitTags`).
   *
   * @param {number} more The number of truncated tags.
   * @returns {ReactNode}
   * @default (more) => `+${more}`
   */
  getLimitTagsText: t.func,
  /**
   * Used to determine the disabled state for a given option.
   *
   * @param {Value} option The option to test.
   * @returns {boolean}
   */
  getOptionDisabled: t.func,
  /**
   * Used to determine the key for a given option.
   * This can be useful when the labels of options are not unique (since labels are used as keys by default).
   *
   * @param {Value} option The option to get the key for.
   * @returns {string | number}
   */
  getOptionKey: t.func,
  /**
   * Used to determine the string value for a given option.
   * It's used to fill the input (and the list box options if `renderOption` is not provided).
   *
   * If used in free solo mode, it must accept both the type of the options and a string.
   *
   * @param {Value} option
   * @returns {string}
   * @default (option) => option.label ?? option
   */
  getOptionLabel: t.func,
  /**
   * If provided, the options will be grouped under the returned string.
   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.
   *
   * @param {Value} options The options to group.
   * @returns {string}
   */
  groupBy: t.func,
  /**
   * If `true`, the component handles the "Home" and "End" keys when the popup is open.
   * It should move focus to the first option and last option, respectively.
   * @default !props.freeSolo
   */
  handleHomeEndKeys: t.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide an id it will fall back to a randomly generated one.
   */
  id: t.string,
  /**
   * If `true`, the highlight can move to the input.
   * @default false
   */
  includeInputInList: t.bool,
  /**
   * The input value.
   */
  inputValue: t.string,
  /**
   * Used to determine if the option represents the given value.
   * Uses strict equality by default.
   * ⚠️ Both arguments need to be handled, an option can only match with one value.
   *
   * @param {Value} option The option to test.
   * @param {Value} value The value to test against.
   * @returns {boolean}
   */
  isOptionEqualToValue: t.func,
  /**
   * The maximum number of tags that will be visible when not focused.
   * Set `-1` to disable the limit.
   * @default -1
   */
  limitTags: To,
  /**
   * The component used to render the listbox.
   * @default 'ul'
   */
  ListboxComponent: t.elementType,
  /**
   * Props applied to the Listbox element.
   */
  ListboxProps: t.object,
  /**
   * If `true`, the component is in a loading state.
   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).
   * @default false
   */
  loading: t.bool,
  /**
   * Text to display when in a loading state.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Loading…'
   */
  loadingText: t.node,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: t.bool,
  /**
   * Text to display when there are no options.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'No options'
   */
  noOptionsText: t.node,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value|Value[]} value The new value of the component.
   * @param {string} reason One of "createOption", "selectOption", "removeOption", "blur" or "clear".
   * @param {string} [details]
   */
  onChange: t.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} reason Can be: `"toggleInput"`, `"escape"`, `"selectOption"`, `"removeOption"`, `"blur"`.
   */
  onClose: t.func,
  /**
   * Callback fired when the highlight option changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value} option The highlighted option.
   * @param {string} reason Can be: `"keyboard"`, `"auto"`, `"mouse"`, `"touch"`.
   */
  onHighlightChange: t.func,
  /**
   * Callback fired when the input value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} value The new value of the text input.
   * @param {string} reason Can be: `"input"` (user input), `"reset"` (programmatic change), `"clear"`.
   */
  onInputChange: t.func,
  /**
   * @ignore
   */
  onKeyDown: t.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: t.func,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool,
  /**
   * If `true`, the popup will open on input focus.
   * @default false
   */
  openOnFocus: t.bool,
  /**
   * Override the default text for the *open popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Open'
   */
  openText: t.string,
  /**
   * Array of options.
   */
  options: t.array.isRequired,
  /**
   * The component used to render the body of the popup.
   * @default Paper
   */
  PaperComponent: t.elementType,
  /**
   * The component used to position the popup.
   * @default Popper
   */
  PopperComponent: t.elementType,
  /**
   * The icon to display in place of the default popup icon.
   * @default <ArrowDropDownIcon />
   */
  popupIcon: t.node,
  /**
   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.
   * @default false
   */
  readOnly: t.bool,
  /**
   * Render the group.
   *
   * @param {AutocompleteRenderGroupParams} params The group to render.
   * @returns {ReactNode}
   */
  renderGroup: t.func,
  /**
   * Render the input.
   *
   * @param {object} params
   * @returns {ReactNode}
   */
  renderInput: t.func.isRequired,
  /**
   * Render the option, use `getOptionLabel` by default.
   *
   * @param {object} props The props to apply on the li element.
   * @param {Value} option The option to render.
   * @param {object} state The state of each option.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderOption: t.func,
  /**
   * Render the selected value.
   *
   * @param {Value[]} value The `value` provided to the component.
   * @param {function} getTagProps A tag props getter.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderTags: t.func,
  /**
   * If `true`, the input's text is selected on focus.
   * It helps the user clear the selected value.
   * @default !props.freeSolo
   */
  selectOnFocus: t.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["small", "medium"]), t.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: t.shape({
    clearIndicator: t.object,
    paper: t.object,
    popper: t.object,
    popupIndicator: t.object
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The value of the autocomplete.
   *
   * The value must have reference equality with the option in order to be selected.
   * You can customize the equality behavior with the `isOptionEqualToValue` prop.
   */
  value: Ko(t.any, (e) => e.multiple && e.value !== void 0 && !Array.isArray(e.value) ? new Error(["MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.", `However, ${e.value} was provided.`].join(`
`)) : null)
});
const kae = TP, r6 = Cn(/* @__PURE__ */ z("path", {
  d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
}), "Person");
function a6(e) {
  return We("MuiAvatar", e);
}
const i6 = Ge("MuiAvatar", ["root", "colorDefault", "circular", "rounded", "square", "img", "fallback"]), s6 = i6, l6 = ["alt", "children", "className", "component", "slots", "slotProps", "imgProps", "sizes", "src", "srcSet", "variant"], c6 = (e) => {
  const {
    classes: o,
    variant: i,
    colorDefault: c
  } = e;
  return Ye({
    root: ["root", i, c && "colorDefault"],
    img: ["img"],
    fallback: ["fallback"]
  }, a6, o);
}, u6 = ee("div", {
  name: "MuiAvatar",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[i.variant], i.colorDefault && o.colorDefault];
  }
})(({
  theme: e
}) => ({
  position: "relative",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  flexShrink: 0,
  width: 40,
  height: 40,
  fontFamily: e.typography.fontFamily,
  fontSize: e.typography.pxToRem(20),
  lineHeight: 1,
  borderRadius: "50%",
  overflow: "hidden",
  userSelect: "none",
  variants: [{
    props: {
      variant: "rounded"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius
    }
  }, {
    props: {
      variant: "square"
    },
    style: {
      borderRadius: 0
    }
  }, {
    props: {
      colorDefault: !0
    },
    style: x({
      color: (e.vars || e).palette.background.default
    }, e.vars ? {
      backgroundColor: e.vars.palette.Avatar.defaultBg
    } : x({
      backgroundColor: e.palette.grey[400]
    }, e.applyStyles("dark", {
      backgroundColor: e.palette.grey[600]
    })))
  }]
})), d6 = ee("img", {
  name: "MuiAvatar",
  slot: "Img",
  overridesResolver: (e, o) => o.img
})({
  width: "100%",
  height: "100%",
  textAlign: "center",
  // Handle non-square image. The property isn't supported by IE11.
  objectFit: "cover",
  // Hide alt text.
  color: "transparent",
  // Hide the image broken icon, only works on Chrome.
  textIndent: 1e4
}), p6 = ee(r6, {
  name: "MuiAvatar",
  slot: "Fallback",
  overridesResolver: (e, o) => o.fallback
})({
  width: "75%",
  height: "75%"
});
function f6({
  crossOrigin: e,
  referrerPolicy: o,
  src: i,
  srcSet: c
}) {
  const [d, p] = w.useState(!1);
  return w.useEffect(() => {
    if (!i && !c)
      return;
    p(!1);
    let f = !0;
    const v = new Image();
    return v.onload = () => {
      f && p("loaded");
    }, v.onerror = () => {
      f && p("error");
    }, v.crossOrigin = e, v.referrerPolicy = o, v.src = i, c && (v.srcset = c), () => {
      f = !1;
    };
  }, [e, o, i, c]), d;
}
const wP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiAvatar"
  }), {
    alt: d,
    children: p,
    className: f,
    component: v = "div",
    slots: g = {},
    slotProps: b = {},
    imgProps: S,
    sizes: R,
    src: D,
    srcSet: k,
    variant: $ = "circular"
  } = c, P = ue(c, l6);
  let O = null;
  const I = f6(x({}, S, {
    src: D,
    srcSet: k
  })), _ = D || k, A = _ && I !== "error", V = x({}, c, {
    colorDefault: !A,
    component: v,
    variant: $
  }), B = c6(V), [M, F] = FC("img", {
    className: B.img,
    elementType: d6,
    externalForwardedProps: {
      slots: g,
      slotProps: {
        img: x({}, S, b.img)
      }
    },
    additionalProps: {
      alt: d,
      src: D,
      srcSet: k,
      sizes: R
    },
    ownerState: V
  });
  return A ? O = /* @__PURE__ */ z(M, x({}, F)) : p || p === 0 ? O = p : _ && d ? O = d[0] : O = /* @__PURE__ */ z(p6, {
    ownerState: V,
    className: B.fallback
  }), /* @__PURE__ */ z(u6, x({
    as: v,
    ownerState: V,
    className: ve(B.root, f),
    ref: i
  }, P, {
    children: O
  }));
});
process.env.NODE_ENV !== "production" && (wP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Used in combination with `src` or `srcSet` to
   * provide an alt attribute for the rendered `img` element.
   */
  alt: t.string,
  /**
   * Used to render icon or text elements inside the Avatar if `src` is not set.
   * This can be an element, or just a string.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.
   * It can be used to listen for the loading error event.
   * @deprecated Use `slotProps.img` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   */
  imgProps: t.object,
  /**
   * The `sizes` attribute for the `img` element.
   */
  sizes: t.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: t.shape({
    img: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: t.shape({
    img: t.elementType
  }),
  /**
   * The `src` attribute for the `img` element.
   */
  src: t.string,
  /**
   * The `srcSet` attribute for the `img` element.
   * Use this attribute for responsive image display.
   */
  srcSet: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The shape of the avatar.
   * @default 'circular'
   */
  variant: t.oneOfType([t.oneOf(["circular", "rounded", "square"]), t.string])
});
const m6 = wP;
function h6(e) {
  return We("MuiAvatarGroup", e);
}
const v6 = Ge("MuiAvatarGroup", ["root", "avatar"]), g6 = v6, y6 = ["children", "className", "component", "componentsProps", "max", "renderSurplus", "slotProps", "spacing", "total", "variant"], VD = {
  small: -16,
  medium: null
}, b6 = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"],
    avatar: ["avatar"]
  }, h6, o);
}, C6 = ee("div", {
  name: "MuiAvatarGroup",
  slot: "Root",
  overridesResolver: (e, o) => x({
    [`& .${g6.avatar}`]: o.avatar
  }, o.root)
})(({
  theme: e,
  ownerState: o
}) => {
  const i = o.spacing && VD[o.spacing] !== void 0 ? VD[o.spacing] : -o.spacing;
  return {
    [`& .${s6.root}`]: {
      border: `2px solid ${(e.vars || e).palette.background.default}`,
      boxSizing: "content-box",
      marginLeft: i ?? -8,
      "&:last-child": {
        marginLeft: 0
      }
    },
    display: "flex",
    flexDirection: "row-reverse"
  };
}), EP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c;
  const d = Ue({
    props: o,
    name: "MuiAvatarGroup"
  }), {
    children: p,
    className: f,
    component: v = "div",
    componentsProps: g = {},
    max: b = 5,
    renderSurplus: S,
    slotProps: R = {},
    spacing: D = "medium",
    total: k,
    variant: $ = "circular"
  } = d, P = ue(d, y6);
  let O = b < 2 ? 2 : b;
  const I = x({}, d, {
    max: b,
    spacing: D,
    component: v,
    variant: $
  }), _ = b6(I), A = w.Children.toArray(p).filter((H) => (process.env.NODE_ENV !== "production" && Xi.isFragment(H) && console.error(["MUI: The AvatarGroup component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), /* @__PURE__ */ w.isValidElement(H))), V = k || A.length;
  V === O && (O += 1), O = Math.min(V + 1, O);
  const B = Math.min(A.length, O - 1), M = Math.max(V - O, V - B, 0), F = S ? S(M) : `+${M}`, Y = (c = R.additionalAvatar) != null ? c : g.additionalAvatar;
  return /* @__PURE__ */ ht(C6, x({
    as: v,
    ownerState: I,
    className: ve(_.root, f),
    ref: i
  }, P, {
    children: [M ? /* @__PURE__ */ z(m6, x({
      variant: $
    }, Y, {
      className: ve(_.avatar, Y == null ? void 0 : Y.className),
      children: F
    })) : null, A.slice(0, B).reverse().map((H) => /* @__PURE__ */ w.cloneElement(H, {
      className: ve(H.props.className, _.avatar),
      variant: H.props.variant || $
    }))]
  }));
});
process.env.NODE_ENV !== "production" && (EP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The avatars to stack.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: t.shape({
    additionalAvatar: t.object
  }),
  /**
   * Max avatars to show before +x.
   * @default 5
   */
  max: Ko(t.number, (e) => e.max < 2 ? new Error(["MUI: The prop `max` should be equal to 2 or above.", "A value below is clamped to 2."].join(`
`)) : null),
  /**
   * custom renderer of extraAvatars
   * @param {number} surplus number of extra avatars
   * @returns {React.ReactNode} custom element to display
   */
  renderSurplus: t.func,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: t.shape({
    additionalAvatar: t.object
  }),
  /**
   * Spacing between avatars.
   * @default 'medium'
   */
  spacing: t.oneOfType([t.oneOf(["medium", "small"]), t.number]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The total number of avatars. Used for calculating the number of extra avatars.
   * @default children.length
   */
  total: t.number,
  /**
   * The variant to use.
   * @default 'circular'
   */
  variant: t.oneOfType([t.oneOf(["circular", "rounded", "square"]), t.string])
});
const Dae = EP, x6 = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"], S6 = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, RP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Mn(), d = {
    enter: c.transitions.duration.enteringScreen,
    exit: c.transitions.duration.leavingScreen
  }, {
    addEndListener: p,
    appear: f = !0,
    children: v,
    easing: g,
    in: b,
    onEnter: S,
    onEntered: R,
    onEntering: D,
    onExit: k,
    onExited: $,
    onExiting: P,
    style: O,
    timeout: I = d,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: _ = bd
  } = o, A = ue(o, x6), V = w.useRef(null), B = cn(V, v.ref, i), M = (q) => (Q) => {
    if (q) {
      const re = V.current;
      Q === void 0 ? q(re) : q(re, Q);
    }
  }, F = M(D), Y = M((q, Q) => {
    i0(q);
    const re = Ki({
      style: O,
      timeout: I,
      easing: g
    }, {
      mode: "enter"
    });
    q.style.webkitTransition = c.transitions.create("opacity", re), q.style.transition = c.transitions.create("opacity", re), S && S(q, Q);
  }), H = M(R), J = M(P), W = M((q) => {
    const Q = Ki({
      style: O,
      timeout: I,
      easing: g
    }, {
      mode: "exit"
    });
    q.style.webkitTransition = c.transitions.create("opacity", Q), q.style.transition = c.transitions.create("opacity", Q), k && k(q);
  }), te = M($);
  return /* @__PURE__ */ z(_, x({
    appear: f,
    in: b,
    nodeRef: V,
    onEnter: Y,
    onEntered: H,
    onEntering: F,
    onExit: W,
    onExited: te,
    onExiting: J,
    addEndListener: (q) => {
      p && p(V.current, q);
    },
    timeout: I
  }, A, {
    children: (q, Q) => /* @__PURE__ */ w.cloneElement(v, x({
      style: x({
        opacity: 0,
        visibility: q === "exited" && !b ? "hidden" : void 0
      }, S6[q], O, v.props.style),
      ref: B
    }, Q))
  }));
});
process.env.NODE_ENV !== "production" && (RP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: t.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: t.bool,
  /**
   * A single child content element.
   */
  children: Qc.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: t.oneOfType([t.shape({
    enter: t.string,
    exit: t.string
  }), t.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: t.bool,
  /**
   * @ignore
   */
  onEnter: t.func,
  /**
   * @ignore
   */
  onEntered: t.func,
  /**
   * @ignore
   */
  onEntering: t.func,
  /**
   * @ignore
   */
  onExit: t.func,
  /**
   * @ignore
   */
  onExited: t.func,
  /**
   * @ignore
   */
  onExiting: t.func,
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: t.oneOfType([t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })])
});
const _f = RP;
function T6(e) {
  return We("MuiBackdrop", e);
}
const w6 = Ge("MuiBackdrop", ["root", "invisible"]), Mae = w6, E6 = ["children", "className", "component", "components", "componentsProps", "invisible", "open", "slotProps", "slots", "TransitionComponent", "transitionDuration"], R6 = (e) => {
  const {
    classes: o,
    invisible: i
  } = e;
  return Ye({
    root: ["root", i && "invisible"]
  }, T6, o);
}, O6 = ee("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.invisible && o.invisible];
  }
})(({
  ownerState: e
}) => x({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent"
}, e.invisible && {
  backgroundColor: "transparent"
})), OP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d, p;
  const f = Ue({
    props: o,
    name: "MuiBackdrop"
  }), {
    children: v,
    className: g,
    component: b = "div",
    components: S = {},
    componentsProps: R = {},
    invisible: D = !1,
    open: k,
    slotProps: $ = {},
    slots: P = {},
    TransitionComponent: O = _f,
    transitionDuration: I
  } = f, _ = ue(f, E6), A = x({}, f, {
    component: b,
    invisible: D
  }), V = R6(A), B = (c = $.root) != null ? c : R.root;
  return /* @__PURE__ */ z(O, x({
    in: k,
    timeout: I
  }, _, {
    children: /* @__PURE__ */ z(O6, x({
      "aria-hidden": !0
    }, B, {
      as: (d = (p = P.root) != null ? p : S.Root) != null ? d : b,
      className: ve(V.root, g, B == null ? void 0 : B.className),
      ownerState: x({}, A, B == null ? void 0 : B.ownerState),
      classes: V,
      ref: i,
      children: v
    }))
  }));
});
process.env.NODE_ENV !== "production" && (OP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    Root: t.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: t.shape({
    root: t.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: t.bool,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool.isRequired,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: t.shape({
    root: t.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: t.shape({
    root: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   */
  TransitionComponent: t.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: t.oneOfType([t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })])
});
const kP = OP;
function k6(e) {
  return Ue;
}
function D6(e) {
  return We("MuiBadge", e);
}
const M6 = Ge("MuiBadge", [
  "root",
  "badge",
  "dot",
  "standard",
  "anchorOriginTopRight",
  "anchorOriginBottomRight",
  "anchorOriginTopLeft",
  "anchorOriginBottomLeft",
  "invisible",
  "colorError",
  "colorInfo",
  "colorPrimary",
  "colorSecondary",
  "colorSuccess",
  "colorWarning",
  "overlapRectangular",
  "overlapCircular",
  // TODO: v6 remove the overlap value from these class keys
  "anchorOriginTopLeftCircular",
  "anchorOriginTopLeftRectangular",
  "anchorOriginTopRightCircular",
  "anchorOriginTopRightRectangular",
  "anchorOriginBottomLeftCircular",
  "anchorOriginBottomLeftRectangular",
  "anchorOriginBottomRightCircular",
  "anchorOriginBottomRightRectangular"
]), zc = M6, N6 = ["anchorOrigin", "className", "classes", "component", "components", "componentsProps", "children", "overlap", "color", "invisible", "max", "badgeContent", "slots", "slotProps", "showZero", "variant"], d1 = 10, p1 = 4, P6 = k6(), $6 = (e) => {
  const {
    color: o,
    anchorOrigin: i,
    invisible: c,
    overlap: d,
    variant: p,
    classes: f = {}
  } = e, v = {
    root: ["root"],
    badge: ["badge", p, c && "invisible", `anchorOrigin${ce(i.vertical)}${ce(i.horizontal)}`, `anchorOrigin${ce(i.vertical)}${ce(i.horizontal)}${ce(d)}`, `overlap${ce(d)}`, o !== "default" && `color${ce(o)}`]
  };
  return Ye(v, D6, f);
}, I6 = ee("span", {
  name: "MuiBadge",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({
  position: "relative",
  display: "inline-flex",
  // For correct alignment with the text.
  verticalAlign: "middle",
  flexShrink: 0
}), L6 = ee("span", {
  name: "MuiBadge",
  slot: "Badge",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.badge, o[i.variant], o[`anchorOrigin${ce(i.anchorOrigin.vertical)}${ce(i.anchorOrigin.horizontal)}${ce(i.overlap)}`], i.color !== "default" && o[`color${ce(i.color)}`], i.invisible && o.invisible];
  }
})(({
  theme: e
}) => {
  var o;
  return {
    display: "flex",
    flexDirection: "row",
    flexWrap: "wrap",
    justifyContent: "center",
    alignContent: "center",
    alignItems: "center",
    position: "absolute",
    boxSizing: "border-box",
    fontFamily: e.typography.fontFamily,
    fontWeight: e.typography.fontWeightMedium,
    fontSize: e.typography.pxToRem(12),
    minWidth: d1 * 2,
    lineHeight: 1,
    padding: "0 6px",
    height: d1 * 2,
    borderRadius: d1,
    zIndex: 1,
    // Render the badge on top of potential ripples.
    transition: e.transitions.create("transform", {
      easing: e.transitions.easing.easeInOut,
      duration: e.transitions.duration.enteringScreen
    }),
    variants: [...Object.keys(((o = e.vars) != null ? o : e).palette).filter((i) => {
      var c, d;
      return ((c = e.vars) != null ? c : e).palette[i].main && ((d = e.vars) != null ? d : e).palette[i].contrastText;
    }).map((i) => ({
      props: {
        color: i
      },
      style: {
        backgroundColor: (e.vars || e).palette[i].main,
        color: (e.vars || e).palette[i].contrastText
      }
    })), {
      props: {
        variant: "dot"
      },
      style: {
        borderRadius: p1,
        height: p1 * 2,
        minWidth: p1 * 2,
        padding: 0
      }
    }, {
      props: ({
        ownerState: i
      }) => i.anchorOrigin.vertical === "top" && i.anchorOrigin.horizontal === "right" && i.overlap === "rectangular",
      style: {
        top: 0,
        right: 0,
        transform: "scale(1) translate(50%, -50%)",
        transformOrigin: "100% 0%",
        [`&.${zc.invisible}`]: {
          transform: "scale(0) translate(50%, -50%)"
        }
      }
    }, {
      props: ({
        ownerState: i
      }) => i.anchorOrigin.vertical === "bottom" && i.anchorOrigin.horizontal === "right" && i.overlap === "rectangular",
      style: {
        bottom: 0,
        right: 0,
        transform: "scale(1) translate(50%, 50%)",
        transformOrigin: "100% 100%",
        [`&.${zc.invisible}`]: {
          transform: "scale(0) translate(50%, 50%)"
        }
      }
    }, {
      props: ({
        ownerState: i
      }) => i.anchorOrigin.vertical === "top" && i.anchorOrigin.horizontal === "left" && i.overlap === "rectangular",
      style: {
        top: 0,
        left: 0,
        transform: "scale(1) translate(-50%, -50%)",
        transformOrigin: "0% 0%",
        [`&.${zc.invisible}`]: {
          transform: "scale(0) translate(-50%, -50%)"
        }
      }
    }, {
      props: ({
        ownerState: i
      }) => i.anchorOrigin.vertical === "bottom" && i.anchorOrigin.horizontal === "left" && i.overlap === "rectangular",
      style: {
        bottom: 0,
        left: 0,
        transform: "scale(1) translate(-50%, 50%)",
        transformOrigin: "0% 100%",
        [`&.${zc.invisible}`]: {
          transform: "scale(0) translate(-50%, 50%)"
        }
      }
    }, {
      props: ({
        ownerState: i
      }) => i.anchorOrigin.vertical === "top" && i.anchorOrigin.horizontal === "right" && i.overlap === "circular",
      style: {
        top: "14%",
        right: "14%",
        transform: "scale(1) translate(50%, -50%)",
        transformOrigin: "100% 0%",
        [`&.${zc.invisible}`]: {
          transform: "scale(0) translate(50%, -50%)"
        }
      }
    }, {
      props: ({
        ownerState: i
      }) => i.anchorOrigin.vertical === "bottom" && i.anchorOrigin.horizontal === "right" && i.overlap === "circular",
      style: {
        bottom: "14%",
        right: "14%",
        transform: "scale(1) translate(50%, 50%)",
        transformOrigin: "100% 100%",
        [`&.${zc.invisible}`]: {
          transform: "scale(0) translate(50%, 50%)"
        }
      }
    }, {
      props: ({
        ownerState: i
      }) => i.anchorOrigin.vertical === "top" && i.anchorOrigin.horizontal === "left" && i.overlap === "circular",
      style: {
        top: "14%",
        left: "14%",
        transform: "scale(1) translate(-50%, -50%)",
        transformOrigin: "0% 0%",
        [`&.${zc.invisible}`]: {
          transform: "scale(0) translate(-50%, -50%)"
        }
      }
    }, {
      props: ({
        ownerState: i
      }) => i.anchorOrigin.vertical === "bottom" && i.anchorOrigin.horizontal === "left" && i.overlap === "circular",
      style: {
        bottom: "14%",
        left: "14%",
        transform: "scale(1) translate(-50%, 50%)",
        transformOrigin: "0% 100%",
        [`&.${zc.invisible}`]: {
          transform: "scale(0) translate(-50%, 50%)"
        }
      }
    }, {
      props: {
        invisible: !0
      },
      style: {
        transition: e.transitions.create("transform", {
          easing: e.transitions.easing.easeInOut,
          duration: e.transitions.duration.leavingScreen
        })
      }
    }]
  };
}), DP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d, p, f, v, g;
  const b = P6({
    props: o,
    name: "MuiBadge"
  }), {
    anchorOrigin: S = {
      vertical: "top",
      horizontal: "right"
    },
    className: R,
    component: D,
    components: k = {},
    componentsProps: $ = {},
    children: P,
    overlap: O = "rectangular",
    color: I = "default",
    invisible: _ = !1,
    max: A = 99,
    badgeContent: V,
    slots: B,
    slotProps: M,
    showZero: F = !1,
    variant: Y = "standard"
  } = b, H = ue(b, N6), {
    badgeContent: J,
    invisible: W,
    max: te,
    displayValue: Z
  } = I5({
    max: A,
    invisible: _,
    badgeContent: V,
    showZero: F
  }), q = ew({
    anchorOrigin: S,
    color: I,
    overlap: O,
    variant: Y,
    badgeContent: V
  }), Q = W || J == null && Y !== "dot", {
    color: re = I,
    overlap: ie = O,
    anchorOrigin: K = S,
    variant: ne = Y
  } = Q ? q : b, se = ne !== "dot" ? Z : void 0, Fe = x({}, b, {
    badgeContent: J,
    invisible: Q,
    max: te,
    displayValue: se,
    showZero: F,
    anchorOrigin: K,
    color: re,
    overlap: ie,
    variant: ne
  }), qe = $6(Fe), Me = (c = (d = B == null ? void 0 : B.root) != null ? d : k.Root) != null ? c : I6, fe = (p = (f = B == null ? void 0 : B.badge) != null ? f : k.Badge) != null ? p : L6, De = (v = M == null ? void 0 : M.root) != null ? v : $.root, be = (g = M == null ? void 0 : M.badge) != null ? g : $.badge, Ce = ln({
    elementType: Me,
    externalSlotProps: De,
    externalForwardedProps: H,
    additionalProps: {
      ref: i,
      as: D
    },
    ownerState: Fe,
    className: ve(De == null ? void 0 : De.className, qe.root, R)
  }), de = ln({
    elementType: fe,
    externalSlotProps: be,
    ownerState: Fe,
    className: ve(qe.badge, be == null ? void 0 : be.className)
  });
  return /* @__PURE__ */ ht(Me, x({}, Ce, {
    children: [P, /* @__PURE__ */ z(fe, x({}, de, {
      children: se
    }))]
  }));
});
process.env.NODE_ENV !== "production" && (DP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The anchor of the badge.
   * @default {
   *   vertical: 'top',
   *   horizontal: 'right',
   * }
   */
  anchorOrigin: t.shape({
    horizontal: t.oneOf(["left", "right"]).isRequired,
    vertical: t.oneOf(["bottom", "top"]).isRequired
  }),
  /**
   * The content rendered within the badge.
   */
  badgeContent: t.node,
  /**
   * The badge will be added relative to this node.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: t.oneOfType([t.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    Badge: t.elementType,
    Root: t.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: t.shape({
    badge: t.oneOfType([t.func, t.object]),
    root: t.oneOfType([t.func, t.object])
  }),
  /**
   * If `true`, the badge is invisible.
   * @default false
   */
  invisible: t.bool,
  /**
   * Max count to show.
   * @default 99
   */
  max: t.number,
  /**
   * Wrapped shape the badge should overlap.
   * @default 'rectangular'
   */
  overlap: t.oneOf(["circular", "rectangular"]),
  /**
   * Controls whether the badge is hidden when `badgeContent` is zero.
   * @default false
   */
  showZero: t.bool,
  /**
   * The props used for each slot inside the Badge.
   * @default {}
   */
  slotProps: t.shape({
    badge: t.oneOfType([t.func, t.object]),
    root: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside the Badge.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: t.shape({
    badge: t.elementType,
    root: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: t.oneOfType([t.oneOf(["dot", "standard"]), t.string])
});
const Nae = DP;
function A6(e) {
  return We("MuiBottomNavigation", e);
}
const _6 = Ge("MuiBottomNavigation", ["root"]), Pae = _6, B6 = ["children", "className", "component", "onChange", "showLabels", "value"], z6 = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"]
  }, A6, o);
}, V6 = ee("div", {
  name: "MuiBottomNavigation",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})(({
  theme: e
}) => ({
  display: "flex",
  justifyContent: "center",
  height: 56,
  backgroundColor: (e.vars || e).palette.background.paper
})), MP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiBottomNavigation"
  }), {
    children: d,
    className: p,
    component: f = "div",
    onChange: v,
    showLabels: g = !1,
    value: b
  } = c, S = ue(c, B6), R = x({}, c, {
    component: f,
    showLabels: g
  }), D = z6(R);
  return /* @__PURE__ */ z(V6, x({
    as: f,
    className: ve(D.root, p),
    ref: i,
    ownerState: R
  }, S, {
    children: w.Children.map(d, (k, $) => {
      if (!/* @__PURE__ */ w.isValidElement(k))
        return null;
      process.env.NODE_ENV !== "production" && Xi.isFragment(k) && console.error(["MUI: The BottomNavigation component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
      const P = k.props.value === void 0 ? $ : k.props.value;
      return /* @__PURE__ */ w.cloneElement(k, {
        selected: P === b,
        showLabel: k.props.showLabel !== void 0 ? k.props.showLabel : g,
        value: P,
        onChange: v
      });
    })
  }));
});
process.env.NODE_ENV !== "production" && (MP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {any} value We default to the index of the child.
   */
  onChange: t.func,
  /**
   * If `true`, all `BottomNavigationAction`s will show their labels.
   * By default, only the selected `BottomNavigationAction` will show its label.
   * @default false
   */
  showLabels: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The value of the currently selected `BottomNavigationAction`.
   */
  value: t.any
});
const $ae = MP;
function F6(e) {
  return We("MuiBottomNavigationAction", e);
}
const j6 = Ge("MuiBottomNavigationAction", ["root", "iconOnly", "selected", "label"]), NP = j6, U6 = ["className", "icon", "label", "onChange", "onClick", "selected", "showLabel", "value"], H6 = (e) => {
  const {
    classes: o,
    showLabel: i,
    selected: c
  } = e;
  return Ye({
    root: ["root", !i && !c && "iconOnly", c && "selected"],
    label: ["label", !i && !c && "iconOnly", c && "selected"]
  }, F6, o);
}, W6 = ee(Qo, {
  name: "MuiBottomNavigationAction",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, !i.showLabel && !i.selected && o.iconOnly];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  transition: e.transitions.create(["color", "padding-top"], {
    duration: e.transitions.duration.short
  }),
  padding: "0px 12px",
  minWidth: 80,
  maxWidth: 168,
  color: (e.vars || e).palette.text.secondary,
  flexDirection: "column",
  flex: "1"
}, !o.showLabel && !o.selected && {
  paddingTop: 14
}, !o.showLabel && !o.selected && !o.label && {
  paddingTop: 0
}, {
  [`&.${NP.selected}`]: {
    color: (e.vars || e).palette.primary.main
  }
})), Y6 = ee("span", {
  name: "MuiBottomNavigationAction",
  slot: "Label",
  overridesResolver: (e, o) => o.label
})(({
  theme: e,
  ownerState: o
}) => x({
  fontFamily: e.typography.fontFamily,
  fontSize: e.typography.pxToRem(12),
  opacity: 1,
  transition: "font-size 0.2s, opacity 0.2s",
  transitionDelay: "0.1s"
}, !o.showLabel && !o.selected && {
  opacity: 0,
  transitionDelay: "0s"
}, {
  [`&.${NP.selected}`]: {
    fontSize: e.typography.pxToRem(14)
  }
})), PP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiBottomNavigationAction"
  }), {
    className: d,
    icon: p,
    label: f,
    onChange: v,
    onClick: g,
    value: b
  } = c, S = ue(c, U6), R = c, D = H6(R), k = ($) => {
    v && v($, b), g && g($);
  };
  return /* @__PURE__ */ ht(W6, x({
    ref: i,
    className: ve(D.root, d),
    focusRipple: !0,
    onClick: k,
    ownerState: R
  }, S, {
    children: [p, /* @__PURE__ */ z(Y6, {
      className: D.label,
      ownerState: R,
      children: f
    })]
  }));
});
process.env.NODE_ENV !== "production" && (PP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: o0,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The icon to display.
   */
  icon: t.node,
  /**
   * The label element.
   */
  label: t.node,
  /**
   * @ignore
   */
  onChange: t.func,
  /**
   * @ignore
   */
  onClick: t.func,
  /**
   * If `true`, the `BottomNavigationAction` will show its label.
   * By default, only the selected `BottomNavigationAction`
   * inside `BottomNavigation` will show its label.
   *
   * The prop defaults to the value (`false`) inherited from the parent BottomNavigation component.
   */
  showLabel: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * You can provide your own value. Otherwise, we fallback to the child position index.
   */
  value: t.any
});
const Iae = PP, G6 = Cn(/* @__PURE__ */ z("path", {
  d: "M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
}), "MoreHoriz"), q6 = ["slots", "slotProps"], K6 = ee(Qo)(({
  theme: e
}) => x({
  display: "flex",
  marginLeft: `calc(${e.spacing(1)} * 0.5)`,
  marginRight: `calc(${e.spacing(1)} * 0.5)`
}, e.palette.mode === "light" ? {
  backgroundColor: e.palette.grey[100],
  color: e.palette.grey[700]
} : {
  backgroundColor: e.palette.grey[700],
  color: e.palette.grey[100]
}, {
  borderRadius: 2,
  "&:hover, &:focus": x({}, e.palette.mode === "light" ? {
    backgroundColor: e.palette.grey[200]
  } : {
    backgroundColor: e.palette.grey[600]
  }),
  "&:active": x({
    boxShadow: e.shadows[0]
  }, e.palette.mode === "light" ? {
    backgroundColor: PC(e.palette.grey[200], 0.12)
  } : {
    backgroundColor: PC(e.palette.grey[600], 0.12)
  })
})), Q6 = ee(G6)({
  width: 24,
  height: 16
});
function $P(e) {
  const {
    slots: o = {},
    slotProps: i = {}
  } = e, c = ue(e, q6), d = e;
  return /* @__PURE__ */ z("li", {
    children: /* @__PURE__ */ z(K6, x({
      focusRipple: !0
    }, c, {
      ownerState: d,
      children: /* @__PURE__ */ z(Q6, x({
        as: o.CollapsedIcon,
        ownerState: d
      }, i.collapsedIcon))
    }))
  });
}
process.env.NODE_ENV !== "production" && ($P.propTypes = {
  /**
   * The props used for the CollapsedIcon slot.
   * @default {}
   */
  slotProps: t.shape({
    collapsedIcon: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside the BreadcumbCollapsed.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: t.shape({
    CollapsedIcon: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.object
});
function X6(e) {
  return We("MuiBreadcrumbs", e);
}
const Z6 = Ge("MuiBreadcrumbs", ["root", "ol", "li", "separator"]), J6 = Z6, e8 = ["children", "className", "component", "slots", "slotProps", "expandText", "itemsAfterCollapse", "itemsBeforeCollapse", "maxItems", "separator"], t8 = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"],
    li: ["li"],
    ol: ["ol"],
    separator: ["separator"]
  }, X6, o);
}, n8 = ee(wo, {
  name: "MuiBreadcrumbs",
  slot: "Root",
  overridesResolver: (e, o) => [{
    [`& .${J6.li}`]: o.li
  }, o.root]
})({}), o8 = ee("ol", {
  name: "MuiBreadcrumbs",
  slot: "Ol",
  overridesResolver: (e, o) => o.ol
})({
  display: "flex",
  flexWrap: "wrap",
  alignItems: "center",
  padding: 0,
  margin: 0,
  listStyle: "none"
}), r8 = ee("li", {
  name: "MuiBreadcrumbs",
  slot: "Separator",
  overridesResolver: (e, o) => o.separator
})({
  display: "flex",
  userSelect: "none",
  marginLeft: 8,
  marginRight: 8
});
function a8(e, o, i, c) {
  return e.reduce((d, p, f) => (f < e.length - 1 ? d = d.concat(p, /* @__PURE__ */ z(r8, {
    "aria-hidden": !0,
    className: o,
    ownerState: c,
    children: i
  }, `separator-${f}`)) : d.push(p), d), []);
}
const IP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiBreadcrumbs"
  }), {
    children: d,
    className: p,
    component: f = "nav",
    slots: v = {},
    slotProps: g = {},
    expandText: b = "Show path",
    itemsAfterCollapse: S = 1,
    itemsBeforeCollapse: R = 1,
    maxItems: D = 8,
    separator: k = "/"
  } = c, $ = ue(c, e8), [P, O] = w.useState(!1), I = x({}, c, {
    component: f,
    expanded: P,
    expandText: b,
    itemsAfterCollapse: S,
    itemsBeforeCollapse: R,
    maxItems: D,
    separator: k
  }), _ = t8(I), A = ln({
    elementType: v.CollapsedIcon,
    externalSlotProps: g.collapsedIcon,
    ownerState: I
  }), V = w.useRef(null), B = (F) => {
    const Y = () => {
      O(!0);
      const H = V.current.querySelector("a[href],button,[tabindex]");
      H && H.focus();
    };
    return R + S >= F.length ? (process.env.NODE_ENV !== "production" && console.error(["MUI: You have provided an invalid combination of props to the Breadcrumbs.", `itemsAfterCollapse={${S}} + itemsBeforeCollapse={${R}} >= maxItems={${D}}`].join(`
`)), F) : [...F.slice(0, R), /* @__PURE__ */ z($P, {
      "aria-label": b,
      slots: {
        CollapsedIcon: v.CollapsedIcon
      },
      slotProps: {
        collapsedIcon: A
      },
      onClick: Y
    }, "ellipsis"), ...F.slice(F.length - S, F.length)];
  }, M = w.Children.toArray(d).filter((F) => (process.env.NODE_ENV !== "production" && Xi.isFragment(F) && console.error(["MUI: The Breadcrumbs component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), /* @__PURE__ */ w.isValidElement(F))).map((F, Y) => /* @__PURE__ */ z("li", {
    className: _.li,
    children: F
  }, `child-${Y}`));
  return /* @__PURE__ */ z(n8, x({
    ref: i,
    component: f,
    color: "text.secondary",
    className: ve(_.root, p),
    ownerState: I
  }, $, {
    children: /* @__PURE__ */ z(o8, {
      className: _.ol,
      ref: V,
      ownerState: I,
      children: a8(P || D && M.length <= D ? M : B(M), _.separator, k, I)
    })
  }));
});
process.env.NODE_ENV !== "production" && (IP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Override the default label for the expand button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Show path'
   */
  expandText: t.string,
  /**
   * If max items is exceeded, the number of items to show after the ellipsis.
   * @default 1
   */
  itemsAfterCollapse: To,
  /**
   * If max items is exceeded, the number of items to show before the ellipsis.
   * @default 1
   */
  itemsBeforeCollapse: To,
  /**
   * Specifies the maximum number of breadcrumbs to display. When there are more
   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`
   * will be shown, with an ellipsis in between.
   * @default 8
   */
  maxItems: To,
  /**
   * Custom separator node.
   * @default '/'
   */
  separator: t.node,
  /**
   * The props used for each slot inside the Breadcumb.
   * @default {}
   */
  slotProps: t.shape({
    collapsedIcon: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside the Breadcumb.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: t.shape({
    CollapsedIcon: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Lae = IP;
function i8(e) {
  return We("MuiButton", e);
}
const s8 = Ge("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge"]), fC = s8, LP = /* @__PURE__ */ w.createContext({});
process.env.NODE_ENV !== "production" && (LP.displayName = "ButtonGroupContext");
const AP = LP, _P = /* @__PURE__ */ w.createContext(void 0);
process.env.NODE_ENV !== "production" && (_P.displayName = "ButtonGroupButtonContext");
const BP = _P, l8 = ["children", "color", "component", "className", "disabled", "disableElevation", "disableFocusRipple", "endIcon", "focusVisibleClassName", "fullWidth", "size", "startIcon", "type", "variant"], c8 = (e) => {
  const {
    color: o,
    disableElevation: i,
    fullWidth: c,
    size: d,
    variant: p,
    classes: f
  } = e, v = {
    root: ["root", p, `${p}${ce(o)}`, `size${ce(d)}`, `${p}Size${ce(d)}`, o === "inherit" && "colorInherit", i && "disableElevation", c && "fullWidth"],
    label: ["label"],
    startIcon: ["startIcon", `iconSize${ce(d)}`],
    endIcon: ["endIcon", `iconSize${ce(d)}`]
  }, g = Ye(v, i8, f);
  return x({}, f, g);
}, zP = (e) => x({}, e.size === "small" && {
  "& > *:nth-of-type(1)": {
    fontSize: 18
  }
}, e.size === "medium" && {
  "& > *:nth-of-type(1)": {
    fontSize: 20
  }
}, e.size === "large" && {
  "& > *:nth-of-type(1)": {
    fontSize: 22
  }
}), u8 = ee(Qo, {
  shouldForwardProp: (e) => Ao(e) || e === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[i.variant], o[`${i.variant}${ce(i.color)}`], o[`size${ce(i.size)}`], o[`${i.variant}Size${ce(i.size)}`], i.color === "inherit" && o.colorInherit, i.disableElevation && o.disableElevation, i.fullWidth && o.fullWidth];
  }
})(({
  theme: e,
  ownerState: o
}) => {
  var i, c;
  const d = e.palette.mode === "light" ? e.palette.grey[300] : e.palette.grey[800], p = e.palette.mode === "light" ? e.palette.grey.A100 : e.palette.grey[700];
  return x({}, e.typography.button, {
    minWidth: 64,
    padding: "6px 16px",
    borderRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: e.transitions.duration.short
    }),
    "&:hover": x({
      textDecoration: "none",
      backgroundColor: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : Wt(e.palette.text.primary, e.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, o.variant === "text" && o.color !== "inherit" && {
      backgroundColor: e.vars ? `rgba(${e.vars.palette[o.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Wt(e.palette[o.color].main, e.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, o.variant === "outlined" && o.color !== "inherit" && {
      border: `1px solid ${(e.vars || e).palette[o.color].main}`,
      backgroundColor: e.vars ? `rgba(${e.vars.palette[o.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Wt(e.palette[o.color].main, e.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, o.variant === "contained" && {
      backgroundColor: e.vars ? e.vars.palette.Button.inheritContainedHoverBg : p,
      boxShadow: (e.vars || e).shadows[4],
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        boxShadow: (e.vars || e).shadows[2],
        backgroundColor: (e.vars || e).palette.grey[300]
      }
    }, o.variant === "contained" && o.color !== "inherit" && {
      backgroundColor: (e.vars || e).palette[o.color].dark,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (e.vars || e).palette[o.color].main
      }
    }),
    "&:active": x({}, o.variant === "contained" && {
      boxShadow: (e.vars || e).shadows[8]
    }),
    [`&.${fC.focusVisible}`]: x({}, o.variant === "contained" && {
      boxShadow: (e.vars || e).shadows[6]
    }),
    [`&.${fC.disabled}`]: x({
      color: (e.vars || e).palette.action.disabled
    }, o.variant === "outlined" && {
      border: `1px solid ${(e.vars || e).palette.action.disabledBackground}`
    }, o.variant === "contained" && {
      color: (e.vars || e).palette.action.disabled,
      boxShadow: (e.vars || e).shadows[0],
      backgroundColor: (e.vars || e).palette.action.disabledBackground
    })
  }, o.variant === "text" && {
    padding: "6px 8px"
  }, o.variant === "text" && o.color !== "inherit" && {
    color: (e.vars || e).palette[o.color].main
  }, o.variant === "outlined" && {
    padding: "5px 15px",
    border: "1px solid currentColor"
  }, o.variant === "outlined" && o.color !== "inherit" && {
    color: (e.vars || e).palette[o.color].main,
    border: e.vars ? `1px solid rgba(${e.vars.palette[o.color].mainChannel} / 0.5)` : `1px solid ${Wt(e.palette[o.color].main, 0.5)}`
  }, o.variant === "contained" && {
    color: e.vars ? (
      // this is safe because grey does not change between default light/dark mode
      e.vars.palette.text.primary
    ) : (i = (c = e.palette).getContrastText) == null ? void 0 : i.call(c, e.palette.grey[300]),
    backgroundColor: e.vars ? e.vars.palette.Button.inheritContainedBg : d,
    boxShadow: (e.vars || e).shadows[2]
  }, o.variant === "contained" && o.color !== "inherit" && {
    color: (e.vars || e).palette[o.color].contrastText,
    backgroundColor: (e.vars || e).palette[o.color].main
  }, o.color === "inherit" && {
    color: "inherit",
    borderColor: "currentColor"
  }, o.size === "small" && o.variant === "text" && {
    padding: "4px 5px",
    fontSize: e.typography.pxToRem(13)
  }, o.size === "large" && o.variant === "text" && {
    padding: "8px 11px",
    fontSize: e.typography.pxToRem(15)
  }, o.size === "small" && o.variant === "outlined" && {
    padding: "3px 9px",
    fontSize: e.typography.pxToRem(13)
  }, o.size === "large" && o.variant === "outlined" && {
    padding: "7px 21px",
    fontSize: e.typography.pxToRem(15)
  }, o.size === "small" && o.variant === "contained" && {
    padding: "4px 10px",
    fontSize: e.typography.pxToRem(13)
  }, o.size === "large" && o.variant === "contained" && {
    padding: "8px 22px",
    fontSize: e.typography.pxToRem(15)
  }, o.fullWidth && {
    width: "100%"
  });
}, ({
  ownerState: e
}) => e.disableElevation && {
  boxShadow: "none",
  "&:hover": {
    boxShadow: "none"
  },
  [`&.${fC.focusVisible}`]: {
    boxShadow: "none"
  },
  "&:active": {
    boxShadow: "none"
  },
  [`&.${fC.disabled}`]: {
    boxShadow: "none"
  }
}), d8 = ee("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.startIcon, o[`iconSize${ce(i.size)}`]];
  }
})(({
  ownerState: e
}) => x({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4
}, e.size === "small" && {
  marginLeft: -2
}, zP(e))), p8 = ee("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.endIcon, o[`iconSize${ce(i.size)}`]];
  }
})(({
  ownerState: e
}) => x({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8
}, e.size === "small" && {
  marginRight: -2
}, zP(e))), VP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = w.useContext(AP), d = w.useContext(BP), p = n0(c, o), f = Ue({
    props: p,
    name: "MuiButton"
  }), {
    children: v,
    color: g = "primary",
    component: b = "button",
    className: S,
    disabled: R = !1,
    disableElevation: D = !1,
    disableFocusRipple: k = !1,
    endIcon: $,
    focusVisibleClassName: P,
    fullWidth: O = !1,
    size: I = "medium",
    startIcon: _,
    type: A,
    variant: V = "text"
  } = f, B = ue(f, l8), M = x({}, f, {
    color: g,
    component: b,
    disabled: R,
    disableElevation: D,
    disableFocusRipple: k,
    fullWidth: O,
    size: I,
    type: A,
    variant: V
  }), F = c8(M), Y = _ && /* @__PURE__ */ z(d8, {
    className: F.startIcon,
    ownerState: M,
    children: _
  }), H = $ && /* @__PURE__ */ z(p8, {
    className: F.endIcon,
    ownerState: M,
    children: $
  }), J = d || "";
  return /* @__PURE__ */ ht(u8, x({
    ownerState: M,
    className: ve(c.className, F.root, S, J),
    component: b,
    disabled: R,
    focusRipple: !k,
    focusVisibleClassName: ve(F.focusVisible, P),
    ref: i,
    type: A
  }, B, {
    classes: F,
    children: [Y, v, H]
  }));
});
process.env.NODE_ENV !== "production" && (VP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: t.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: t.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: t.bool,
  /**
   * Element placed after the children.
   */
  endIcon: t.node,
  /**
   * @ignore
   */
  focusVisibleClassName: t.string,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: t.string,
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["small", "medium", "large"]), t.string]),
  /**
   * Element placed before the children.
   */
  startIcon: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * @ignore
   */
  type: t.oneOfType([t.oneOf(["button", "reset", "submit"]), t.string]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: t.oneOfType([t.oneOf(["contained", "outlined", "text"]), t.string])
});
const mC = VP;
function f8(e) {
  return We("MuiButtonGroup", e);
}
const m8 = Ge("MuiButtonGroup", ["root", "contained", "outlined", "text", "disableElevation", "disabled", "firstButton", "fullWidth", "vertical", "grouped", "groupedHorizontal", "groupedVertical", "groupedText", "groupedTextHorizontal", "groupedTextVertical", "groupedTextPrimary", "groupedTextSecondary", "groupedOutlined", "groupedOutlinedHorizontal", "groupedOutlinedVertical", "groupedOutlinedPrimary", "groupedOutlinedSecondary", "groupedContained", "groupedContainedHorizontal", "groupedContainedVertical", "groupedContainedPrimary", "groupedContainedSecondary", "lastButton", "middleButton"]), kr = m8, h8 = ["children", "className", "color", "component", "disabled", "disableElevation", "disableFocusRipple", "disableRipple", "fullWidth", "orientation", "size", "variant"], v8 = (e, o) => {
  const {
    ownerState: i
  } = e;
  return [{
    [`& .${kr.grouped}`]: o.grouped
  }, {
    [`& .${kr.grouped}`]: o[`grouped${ce(i.orientation)}`]
  }, {
    [`& .${kr.grouped}`]: o[`grouped${ce(i.variant)}`]
  }, {
    [`& .${kr.grouped}`]: o[`grouped${ce(i.variant)}${ce(i.orientation)}`]
  }, {
    [`& .${kr.grouped}`]: o[`grouped${ce(i.variant)}${ce(i.color)}`]
  }, {
    [`& .${kr.firstButton}`]: o.firstButton
  }, {
    [`& .${kr.lastButton}`]: o.lastButton
  }, {
    [`& .${kr.middleButton}`]: o.middleButton
  }, o.root, o[i.variant], i.disableElevation === !0 && o.disableElevation, i.fullWidth && o.fullWidth, i.orientation === "vertical" && o.vertical];
}, g8 = (e) => {
  const {
    classes: o,
    color: i,
    disabled: c,
    disableElevation: d,
    fullWidth: p,
    orientation: f,
    variant: v
  } = e, g = {
    root: ["root", v, f === "vertical" && "vertical", p && "fullWidth", d && "disableElevation"],
    grouped: ["grouped", `grouped${ce(f)}`, `grouped${ce(v)}`, `grouped${ce(v)}${ce(f)}`, `grouped${ce(v)}${ce(i)}`, c && "disabled"],
    firstButton: ["firstButton"],
    lastButton: ["lastButton"],
    middleButton: ["middleButton"]
  };
  return Ye(g, f8, o);
}, y8 = ee("div", {
  name: "MuiButtonGroup",
  slot: "Root",
  overridesResolver: v8
})(({
  theme: e,
  ownerState: o
}) => x({
  display: "inline-flex",
  borderRadius: (e.vars || e).shape.borderRadius
}, o.variant === "contained" && {
  boxShadow: (e.vars || e).shadows[2]
}, o.disableElevation && {
  boxShadow: "none"
}, o.fullWidth && {
  width: "100%"
}, o.orientation === "vertical" && {
  flexDirection: "column"
}, {
  [`& .${kr.grouped}`]: x({
    minWidth: 40,
    "&:hover": x({}, o.variant === "contained" && {
      boxShadow: "none"
    })
  }, o.variant === "contained" && {
    boxShadow: "none"
  }),
  [`& .${kr.firstButton},& .${kr.middleButton}`]: x({}, o.orientation === "horizontal" && {
    borderTopRightRadius: 0,
    borderBottomRightRadius: 0
  }, o.orientation === "vertical" && {
    borderBottomRightRadius: 0,
    borderBottomLeftRadius: 0
  }, o.variant === "text" && o.orientation === "horizontal" && {
    borderRight: e.vars ? `1px solid rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"}`,
    [`&.${kr.disabled}`]: {
      borderRight: `1px solid ${(e.vars || e).palette.action.disabled}`
    }
  }, o.variant === "text" && o.orientation === "vertical" && {
    borderBottom: e.vars ? `1px solid rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"}`,
    [`&.${kr.disabled}`]: {
      borderBottom: `1px solid ${(e.vars || e).palette.action.disabled}`
    }
  }, o.variant === "text" && o.color !== "inherit" && {
    borderColor: e.vars ? `rgba(${e.vars.palette[o.color].mainChannel} / 0.5)` : Wt(e.palette[o.color].main, 0.5)
  }, o.variant === "outlined" && o.orientation === "horizontal" && {
    borderRightColor: "transparent"
  }, o.variant === "outlined" && o.orientation === "vertical" && {
    borderBottomColor: "transparent"
  }, o.variant === "contained" && o.orientation === "horizontal" && {
    borderRight: `1px solid ${(e.vars || e).palette.grey[400]}`,
    [`&.${kr.disabled}`]: {
      borderRight: `1px solid ${(e.vars || e).palette.action.disabled}`
    }
  }, o.variant === "contained" && o.orientation === "vertical" && {
    borderBottom: `1px solid ${(e.vars || e).palette.grey[400]}`,
    [`&.${kr.disabled}`]: {
      borderBottom: `1px solid ${(e.vars || e).palette.action.disabled}`
    }
  }, o.variant === "contained" && o.color !== "inherit" && {
    borderColor: (e.vars || e).palette[o.color].dark
  }, {
    "&:hover": x({}, o.variant === "outlined" && o.orientation === "horizontal" && {
      borderRightColor: "currentColor"
    }, o.variant === "outlined" && o.orientation === "vertical" && {
      borderBottomColor: "currentColor"
    })
  }),
  [`& .${kr.lastButton},& .${kr.middleButton}`]: x({}, o.orientation === "horizontal" && {
    borderTopLeftRadius: 0,
    borderBottomLeftRadius: 0
  }, o.orientation === "vertical" && {
    borderTopRightRadius: 0,
    borderTopLeftRadius: 0
  }, o.variant === "outlined" && o.orientation === "horizontal" && {
    marginLeft: -1
  }, o.variant === "outlined" && o.orientation === "vertical" && {
    marginTop: -1
  })
})), FP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiButtonGroup"
  }), {
    children: d,
    className: p,
    color: f = "primary",
    component: v = "div",
    disabled: g = !1,
    disableElevation: b = !1,
    disableFocusRipple: S = !1,
    disableRipple: R = !1,
    fullWidth: D = !1,
    orientation: k = "horizontal",
    size: $ = "medium",
    variant: P = "outlined"
  } = c, O = ue(c, h8), I = x({}, c, {
    color: f,
    component: v,
    disabled: g,
    disableElevation: b,
    disableFocusRipple: S,
    disableRipple: R,
    fullWidth: D,
    orientation: k,
    size: $,
    variant: P
  }), _ = g8(I), A = w.useMemo(() => ({
    className: _.grouped,
    color: f,
    disabled: g,
    disableElevation: b,
    disableFocusRipple: S,
    disableRipple: R,
    fullWidth: D,
    size: $,
    variant: P
  }), [f, g, b, S, R, D, $, P, _.grouped]), V = yN(d), B = V.length, M = (F) => {
    const Y = F === 0, H = F === B - 1;
    return Y && H ? "" : Y ? _.firstButton : H ? _.lastButton : _.middleButton;
  };
  return /* @__PURE__ */ z(y8, x({
    as: v,
    role: "group",
    className: ve(_.root, p),
    ref: i,
    ownerState: I
  }, O, {
    children: /* @__PURE__ */ z(AP.Provider, {
      value: A,
      children: V.map((F, Y) => /* @__PURE__ */ z(BP.Provider, {
        value: M(Y),
        children: F
      }, Y))
    })
  }));
});
process.env.NODE_ENV !== "production" && (FP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: t.bool,
  /**
   * If `true`, the button keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: t.bool,
  /**
   * If `true`, the button ripple effect is disabled.
   * @default false
   */
  disableRipple: t.bool,
  /**
   * If `true`, the buttons will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: t.oneOf(["horizontal", "vertical"]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["small", "medium", "large"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: t.oneOfType([t.oneOf(["contained", "outlined", "text"]), t.string])
});
const Aae = FP;
function b8(e) {
  return We("MuiCard", e);
}
const C8 = Ge("MuiCard", ["root"]), _ae = C8, x8 = ["className", "raised"], S8 = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"]
  }, b8, o);
}, T8 = ee(Ya, {
  name: "MuiCard",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})(() => ({
  overflow: "hidden"
})), jP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiCard"
  }), {
    className: d,
    raised: p = !1
  } = c, f = ue(c, x8), v = x({}, c, {
    raised: p
  }), g = S8(v);
  return /* @__PURE__ */ z(T8, x({
    className: ve(g.root, d),
    elevation: p ? 8 : void 0,
    ref: i,
    ownerState: v
  }, f));
});
process.env.NODE_ENV !== "production" && (jP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, the card will use raised styling.
   * @default false
   */
  raised: Ko(t.bool, (e) => e.raised && e.variant === "outlined" ? new Error('MUI: Combining `raised={true}` with `variant="outlined"` has no effect.') : null),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Bae = jP;
function w8(e) {
  return We("MuiCardActionArea", e);
}
const E8 = Ge("MuiCardActionArea", ["root", "focusVisible", "focusHighlight"]), f1 = E8, R8 = ["children", "className", "focusVisibleClassName"], O8 = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"],
    focusHighlight: ["focusHighlight"]
  }, w8, o);
}, k8 = ee(Qo, {
  name: "MuiCardActionArea",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})(({
  theme: e
}) => ({
  display: "block",
  textAlign: "inherit",
  borderRadius: "inherit",
  // for Safari to work https://github.com/mui/material-ui/issues/36285.
  width: "100%",
  [`&:hover .${f1.focusHighlight}`]: {
    opacity: (e.vars || e).palette.action.hoverOpacity,
    "@media (hover: none)": {
      opacity: 0
    }
  },
  [`&.${f1.focusVisible} .${f1.focusHighlight}`]: {
    opacity: (e.vars || e).palette.action.focusOpacity
  }
})), D8 = ee("span", {
  name: "MuiCardActionArea",
  slot: "FocusHighlight",
  overridesResolver: (e, o) => o.focusHighlight
})(({
  theme: e
}) => ({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit",
  opacity: 0,
  backgroundColor: "currentcolor",
  transition: e.transitions.create("opacity", {
    duration: e.transitions.duration.short
  })
})), UP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiCardActionArea"
  }), {
    children: d,
    className: p,
    focusVisibleClassName: f
  } = c, v = ue(c, R8), g = c, b = O8(g);
  return /* @__PURE__ */ ht(k8, x({
    className: ve(b.root, p),
    focusVisibleClassName: ve(f, b.focusVisible),
    ref: i,
    ownerState: g
  }, v, {
    children: [d, /* @__PURE__ */ z(D8, {
      className: b.focusHighlight,
      ownerState: g
    })]
  }));
});
process.env.NODE_ENV !== "production" && (UP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * @ignore
   */
  focusVisibleClassName: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const zae = UP;
function M8(e) {
  return We("MuiCardActions", e);
}
const N8 = Ge("MuiCardActions", ["root", "spacing"]), Vae = N8, P8 = ["disableSpacing", "className"], $8 = (e) => {
  const {
    classes: o,
    disableSpacing: i
  } = e;
  return Ye({
    root: ["root", !i && "spacing"]
  }, M8, o);
}, I8 = ee("div", {
  name: "MuiCardActions",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, !i.disableSpacing && o.spacing];
  }
})(({
  ownerState: e
}) => x({
  display: "flex",
  alignItems: "center",
  padding: 8
}, !e.disableSpacing && {
  "& > :not(style) ~ :not(style)": {
    marginLeft: 8
  }
})), HP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiCardActions"
  }), {
    disableSpacing: d = !1,
    className: p
  } = c, f = ue(c, P8), v = x({}, c, {
    disableSpacing: d
  }), g = $8(v);
  return /* @__PURE__ */ z(I8, x({
    className: ve(g.root, p),
    ownerState: v,
    ref: i
  }, f));
});
process.env.NODE_ENV !== "production" && (HP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Fae = HP;
function L8(e) {
  return We("MuiCardContent", e);
}
const A8 = Ge("MuiCardContent", ["root"]), jae = A8, _8 = ["className", "component"], B8 = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"]
  }, L8, o);
}, z8 = ee("div", {
  name: "MuiCardContent",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})(() => ({
  padding: 16,
  "&:last-child": {
    paddingBottom: 24
  }
})), WP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiCardContent"
  }), {
    className: d,
    component: p = "div"
  } = c, f = ue(c, _8), v = x({}, c, {
    component: p
  }), g = B8(v);
  return /* @__PURE__ */ z(z8, x({
    as: p,
    className: ve(g.root, d),
    ownerState: v,
    ref: i
  }, f));
});
process.env.NODE_ENV !== "production" && (WP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Uae = WP;
function V8(e) {
  return We("MuiCardHeader", e);
}
const F8 = Ge("MuiCardHeader", ["root", "avatar", "action", "content", "title", "subheader"]), FD = F8, j8 = ["action", "avatar", "className", "component", "disableTypography", "subheader", "subheaderTypographyProps", "title", "titleTypographyProps"], U8 = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"],
    avatar: ["avatar"],
    action: ["action"],
    content: ["content"],
    title: ["title"],
    subheader: ["subheader"]
  }, V8, o);
}, H8 = ee("div", {
  name: "MuiCardHeader",
  slot: "Root",
  overridesResolver: (e, o) => x({
    [`& .${FD.title}`]: o.title,
    [`& .${FD.subheader}`]: o.subheader
  }, o.root)
})({
  display: "flex",
  alignItems: "center",
  padding: 16
}), W8 = ee("div", {
  name: "MuiCardHeader",
  slot: "Avatar",
  overridesResolver: (e, o) => o.avatar
})({
  display: "flex",
  flex: "0 0 auto",
  marginRight: 16
}), Y8 = ee("div", {
  name: "MuiCardHeader",
  slot: "Action",
  overridesResolver: (e, o) => o.action
})({
  flex: "0 0 auto",
  alignSelf: "flex-start",
  marginTop: -4,
  marginRight: -8,
  marginBottom: -4
}), G8 = ee("div", {
  name: "MuiCardHeader",
  slot: "Content",
  overridesResolver: (e, o) => o.content
})({
  flex: "1 1 auto"
}), YP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiCardHeader"
  }), {
    action: d,
    avatar: p,
    className: f,
    component: v = "div",
    disableTypography: g = !1,
    subheader: b,
    subheaderTypographyProps: S,
    title: R,
    titleTypographyProps: D
  } = c, k = ue(c, j8), $ = x({}, c, {
    component: v,
    disableTypography: g
  }), P = U8($);
  let O = R;
  O != null && O.type !== wo && !g && (O = /* @__PURE__ */ z(wo, x({
    variant: p ? "body2" : "h5",
    className: P.title,
    component: "span",
    display: "block"
  }, D, {
    children: O
  })));
  let I = b;
  return I != null && I.type !== wo && !g && (I = /* @__PURE__ */ z(wo, x({
    variant: p ? "body2" : "body1",
    className: P.subheader,
    color: "text.secondary",
    component: "span",
    display: "block"
  }, S, {
    children: I
  }))), /* @__PURE__ */ ht(H8, x({
    className: ve(P.root, f),
    as: v,
    ref: i,
    ownerState: $
  }, k, {
    children: [p && /* @__PURE__ */ z(W8, {
      className: P.avatar,
      ownerState: $,
      children: p
    }), /* @__PURE__ */ ht(G8, {
      className: P.content,
      ownerState: $,
      children: [O, I]
    }), d && /* @__PURE__ */ z(Y8, {
      className: P.action,
      ownerState: $,
      children: d
    })]
  }));
});
process.env.NODE_ENV !== "production" && (YP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The action to display in the card header.
   */
  action: t.node,
  /**
   * The Avatar element to display.
   */
  avatar: t.node,
  /**
   * @ignore
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.
   * This can be useful to render an alternative Typography variant by wrapping
   * the `title` text, and optional `subheader` text
   * with the Typography component.
   * @default false
   */
  disableTypography: t.bool,
  /**
   * The content of the component.
   */
  subheader: t.node,
  /**
   * These props will be forwarded to the subheader
   * (as long as disableTypography is not `true`).
   */
  subheaderTypographyProps: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The content of the component.
   */
  title: t.node,
  /**
   * These props will be forwarded to the title
   * (as long as disableTypography is not `true`).
   */
  titleTypographyProps: t.object
});
const Hae = YP;
function q8(e) {
  return We("MuiCardMedia", e);
}
const K8 = Ge("MuiCardMedia", ["root", "media", "img"]), Wae = K8, Q8 = ["children", "className", "component", "image", "src", "style"], X8 = (e) => {
  const {
    classes: o,
    isMediaComponent: i,
    isImageComponent: c
  } = e;
  return Ye({
    root: ["root", i && "media", c && "img"]
  }, q8, o);
}, Z8 = ee("div", {
  name: "MuiCardMedia",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e, {
      isMediaComponent: c,
      isImageComponent: d
    } = i;
    return [o.root, c && o.media, d && o.img];
  }
})(({
  ownerState: e
}) => x({
  display: "block",
  backgroundSize: "cover",
  backgroundRepeat: "no-repeat",
  backgroundPosition: "center"
}, e.isMediaComponent && {
  width: "100%"
}, e.isImageComponent && {
  // ⚠️ object-fit is not supported by IE11.
  objectFit: "cover"
})), J8 = ["video", "audio", "picture", "iframe", "img"], e9 = ["picture", "img"], GP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiCardMedia"
  }), {
    children: d,
    className: p,
    component: f = "div",
    image: v,
    src: g,
    style: b
  } = c, S = ue(c, Q8), R = J8.indexOf(f) !== -1, D = !R && v ? x({
    backgroundImage: `url("${v}")`
  }, b) : b, k = x({}, c, {
    component: f,
    isMediaComponent: R,
    isImageComponent: e9.indexOf(f) !== -1
  }), $ = X8(k);
  return /* @__PURE__ */ z(Z8, x({
    className: ve($.root, p),
    as: f,
    role: !R && v ? "img" : void 0,
    ref: i,
    style: D,
    ownerState: k,
    src: R ? v || g : void 0
  }, S, {
    children: d
  }));
});
process.env.NODE_ENV !== "production" && (GP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: Ko(t.node, (e) => !e.children && !e.image && !e.src && !e.component ? new Error("MUI: Either `children`, `image`, `src` or `component` prop must be specified.") : null),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Image to be displayed as a background image.
   * Either `image` or `src` prop must be specified.
   * Note that caller must specify height otherwise the image will not be visible.
   */
  image: t.string,
  /**
   * An alias for `image` property.
   * Available only with media components.
   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.
   */
  src: t.string,
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Yae = GP;
function t9(e) {
  return We("PrivateSwitchBase", e);
}
Ge("PrivateSwitchBase", ["root", "checked", "disabled", "input", "edgeStart", "edgeEnd"]);
const n9 = ["autoFocus", "checked", "checkedIcon", "className", "defaultChecked", "disabled", "disableFocusRipple", "edge", "icon", "id", "inputProps", "inputRef", "name", "onBlur", "onChange", "onFocus", "readOnly", "required", "tabIndex", "type", "value"], o9 = (e) => {
  const {
    classes: o,
    checked: i,
    disabled: c,
    edge: d
  } = e, p = {
    root: ["root", i && "checked", c && "disabled", d && `edge${ce(d)}`],
    input: ["input"]
  };
  return Ye(p, t9, o);
}, r9 = ee(Qo)(({
  ownerState: e
}) => x({
  padding: 9,
  borderRadius: "50%"
}, e.edge === "start" && {
  marginLeft: e.size === "small" ? -3 : -12
}, e.edge === "end" && {
  marginRight: e.size === "small" ? -3 : -12
})), a9 = ee("input", {
  shouldForwardProp: Ao
})({
  cursor: "inherit",
  position: "absolute",
  opacity: 0,
  width: "100%",
  height: "100%",
  top: 0,
  left: 0,
  margin: 0,
  padding: 0,
  zIndex: 1
}), qP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const {
    autoFocus: c,
    checked: d,
    checkedIcon: p,
    className: f,
    defaultChecked: v,
    disabled: g,
    disableFocusRipple: b = !1,
    edge: S = !1,
    icon: R,
    id: D,
    inputProps: k,
    inputRef: $,
    name: P,
    onBlur: O,
    onChange: I,
    onFocus: _,
    readOnly: A,
    required: V = !1,
    tabIndex: B,
    type: M,
    value: F
  } = o, Y = ue(o, n9), [H, J] = Eo({
    controlled: d,
    default: !!v,
    name: "SwitchBase",
    state: "checked"
  }), W = Zi(), te = (ne) => {
    _ && _(ne), W && W.onFocus && W.onFocus(ne);
  }, Z = (ne) => {
    O && O(ne), W && W.onBlur && W.onBlur(ne);
  }, q = (ne) => {
    if (ne.nativeEvent.defaultPrevented)
      return;
    const se = ne.target.checked;
    J(se), I && I(ne, se);
  };
  let Q = g;
  W && typeof Q > "u" && (Q = W.disabled);
  const re = M === "checkbox" || M === "radio", ie = x({}, o, {
    checked: H,
    disabled: Q,
    disableFocusRipple: b,
    edge: S
  }), K = o9(ie);
  return /* @__PURE__ */ ht(r9, x({
    component: "span",
    className: ve(K.root, f),
    centerRipple: !0,
    focusRipple: !b,
    disabled: Q,
    tabIndex: null,
    role: void 0,
    onFocus: te,
    onBlur: Z,
    ownerState: ie,
    ref: i
  }, Y, {
    children: [/* @__PURE__ */ z(a9, x({
      autoFocus: c,
      checked: d,
      defaultChecked: v,
      className: K.input,
      disabled: Q,
      id: re ? D : void 0,
      name: P,
      onChange: q,
      readOnly: A,
      ref: $,
      required: V,
      ownerState: ie,
      tabIndex: B,
      type: M
    }, M === "checkbox" && F === void 0 ? {} : {
      value: F
    }, k)), H ? p : R]
  }));
});
process.env.NODE_ENV !== "production" && (qP.propTypes = {
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: t.bool,
  /**
   * If `true`, the component is checked.
   */
  checked: t.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: t.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * @ignore
   */
  defaultChecked: t.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: t.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: t.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: t.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: t.node.isRequired,
  /**
   * The id of the `input` element.
   */
  id: t.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Lo,
  /*
   * @ignore
   */
  name: t.string,
  /**
   * @ignore
   */
  onBlur: t.func,
  /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: t.func,
  /**
   * @ignore
   */
  onFocus: t.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: t.bool,
  /**
   * If `true`, the `input` element is required.
   */
  required: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.object,
  /**
   * @ignore
   */
  tabIndex: t.oneOfType([t.number, t.string]),
  /**
   * The input component prop `type`.
   */
  type: t.string.isRequired,
  /**
   * The value of the component.
   */
  value: t.any
});
const Rw = qP, i9 = Cn(/* @__PURE__ */ z("path", {
  d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
}), "CheckBoxOutlineBlank"), s9 = Cn(/* @__PURE__ */ z("path", {
  d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckBox"), l9 = Cn(/* @__PURE__ */ z("path", {
  d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
}), "IndeterminateCheckBox");
function c9(e) {
  return We("MuiCheckbox", e);
}
const u9 = Ge("MuiCheckbox", ["root", "checked", "disabled", "indeterminate", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium"]), m1 = u9, d9 = ["checkedIcon", "color", "icon", "indeterminate", "indeterminateIcon", "inputProps", "size", "className"], p9 = (e) => {
  const {
    classes: o,
    indeterminate: i,
    color: c,
    size: d
  } = e, p = {
    root: ["root", i && "indeterminate", `color${ce(c)}`, `size${ce(d)}`]
  }, f = Ye(p, c9, o);
  return x({}, o, f);
}, f9 = ee(Rw, {
  shouldForwardProp: (e) => Ao(e) || e === "classes",
  name: "MuiCheckbox",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.indeterminate && o.indeterminate, o[`size${ce(i.size)}`], i.color !== "default" && o[`color${ce(i.color)}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  color: (e.vars || e).palette.text.secondary
}, !o.disableRipple && {
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${o.color === "default" ? e.vars.palette.action.activeChannel : e.vars.palette[o.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Wt(o.color === "default" ? e.palette.action.active : e.palette[o.color].main, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  }
}, o.color !== "default" && {
  [`&.${m1.checked}, &.${m1.indeterminate}`]: {
    color: (e.vars || e).palette[o.color].main
  },
  [`&.${m1.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  }
})), m9 = /* @__PURE__ */ z(s9, {}), h9 = /* @__PURE__ */ z(i9, {}), v9 = /* @__PURE__ */ z(l9, {}), KP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d;
  const p = Ue({
    props: o,
    name: "MuiCheckbox"
  }), {
    checkedIcon: f = m9,
    color: v = "primary",
    icon: g = h9,
    indeterminate: b = !1,
    indeterminateIcon: S = v9,
    inputProps: R,
    size: D = "medium",
    className: k
  } = p, $ = ue(p, d9), P = b ? S : g, O = b ? S : f, I = x({}, p, {
    color: v,
    indeterminate: b,
    size: D
  }), _ = p9(I);
  return /* @__PURE__ */ z(f9, x({
    type: "checkbox",
    inputProps: x({
      "data-indeterminate": b
    }, R),
    icon: /* @__PURE__ */ w.cloneElement(P, {
      fontSize: (c = P.props.fontSize) != null ? c : D
    }),
    checkedIcon: /* @__PURE__ */ w.cloneElement(O, {
      fontSize: (d = O.props.fontSize) != null ? d : D
    }),
    ownerState: I,
    ref: i,
    className: ve(_.root, k)
  }, $, {
    classes: _
  }));
});
process.env.NODE_ENV !== "production" && (KP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: t.bool,
  /**
   * The icon to display when the component is checked.
   * @default <CheckBoxIcon />
   */
  checkedIcon: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: t.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: t.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <CheckBoxOutlineBlankIcon />
   */
  icon: t.node,
  /**
   * The id of the `input` element.
   */
  id: t.string,
  /**
   * If `true`, the component appears indeterminate.
   * This does not set the native input element to indeterminate due
   * to inconsistent behavior across browsers.
   * However, we set a `data-indeterminate` attribute on the `input`.
   * @default false
   */
  indeterminate: t.bool,
  /**
   * The icon to display when the component is indeterminate.
   * @default <IndeterminateCheckBoxIcon />
   */
  indeterminateIcon: t.node,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Lo,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: t.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: t.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense checkbox styling.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["medium", "small"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: t.any
});
const Gae = KP;
function g9(e) {
  return We("MuiCircularProgress", e);
}
const y9 = Ge("MuiCircularProgress", ["root", "determinate", "indeterminate", "colorPrimary", "colorSecondary", "svg", "circle", "circleDeterminate", "circleIndeterminate", "circleDisableShrink"]), qae = y9, b9 = ["className", "color", "disableShrink", "size", "style", "thickness", "value", "variant"];
let g0 = (e) => e, jD, UD, HD, WD;
const Vc = 44, C9 = Qi(jD || (jD = g0`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`)), x9 = Qi(UD || (UD = g0`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -125px;
  }
`)), S9 = (e) => {
  const {
    classes: o,
    variant: i,
    color: c,
    disableShrink: d
  } = e, p = {
    root: ["root", i, `color${ce(c)}`],
    svg: ["svg"],
    circle: ["circle", `circle${ce(i)}`, d && "circleDisableShrink"]
  };
  return Ye(p, g9, o);
}, T9 = ee("span", {
  name: "MuiCircularProgress",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[i.variant], o[`color${ce(i.color)}`]];
  }
})(({
  ownerState: e,
  theme: o
}) => x({
  display: "inline-block"
}, e.variant === "determinate" && {
  transition: o.transitions.create("transform")
}, e.color !== "inherit" && {
  color: (o.vars || o).palette[e.color].main
}), ({
  ownerState: e
}) => e.variant === "indeterminate" && qc(HD || (HD = g0`
      animation: ${0} 1.4s linear infinite;
    `), C9)), w9 = ee("svg", {
  name: "MuiCircularProgress",
  slot: "Svg",
  overridesResolver: (e, o) => o.svg
})({
  display: "block"
  // Keeps the progress centered
}), E9 = ee("circle", {
  name: "MuiCircularProgress",
  slot: "Circle",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.circle, o[`circle${ce(i.variant)}`], i.disableShrink && o.circleDisableShrink];
  }
})(({
  ownerState: e,
  theme: o
}) => x({
  stroke: "currentColor"
}, e.variant === "determinate" && {
  transition: o.transitions.create("stroke-dashoffset")
}, e.variant === "indeterminate" && {
  // Some default value that looks fine waiting for the animation to kicks in.
  strokeDasharray: "80px, 200px",
  strokeDashoffset: 0
  // Add the unit to fix a Edge 16 and below bug.
}), ({
  ownerState: e
}) => e.variant === "indeterminate" && !e.disableShrink && qc(WD || (WD = g0`
      animation: ${0} 1.4s ease-in-out infinite;
    `), x9)), QP = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiCircularProgress"
  }), {
    className: d,
    color: p = "primary",
    disableShrink: f = !1,
    size: v = 40,
    style: g,
    thickness: b = 3.6,
    value: S = 0,
    variant: R = "indeterminate"
  } = c, D = ue(c, b9), k = x({}, c, {
    color: p,
    disableShrink: f,
    size: v,
    thickness: b,
    value: S,
    variant: R
  }), $ = S9(k), P = {}, O = {}, I = {};
  if (R === "determinate") {
    const _ = 2 * Math.PI * ((Vc - b) / 2);
    P.strokeDasharray = _.toFixed(3), I["aria-valuenow"] = Math.round(S), P.strokeDashoffset = `${((100 - S) / 100 * _).toFixed(3)}px`, O.transform = "rotate(-90deg)";
  }
  return /* @__PURE__ */ z(T9, x({
    className: ve($.root, d),
    style: x({
      width: v,
      height: v
    }, O, g),
    ownerState: k,
    ref: i,
    role: "progressbar"
  }, I, D, {
    children: /* @__PURE__ */ z(w9, {
      className: $.svg,
      ownerState: k,
      viewBox: `${Vc / 2} ${Vc / 2} ${Vc} ${Vc}`,
      children: /* @__PURE__ */ z(E9, {
        className: $.circle,
        style: P,
        ownerState: k,
        cx: Vc,
        cy: Vc,
        r: (Vc - b) / 2,
        fill: "none",
        strokeWidth: b
      })
    })
  }));
});
process.env.NODE_ENV !== "production" && (QP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * If `true`, the shrink animation is disabled.
   * This only works if variant is `indeterminate`.
   * @default false
   */
  disableShrink: Ko(t.bool, (e) => e.disableShrink && e.variant && e.variant !== "indeterminate" ? new Error("MUI: You have provided the `disableShrink` prop with a variant other than `indeterminate`. This will have no effect.") : null),
  /**
   * The size of the component.
   * If using a number, the pixel unit is assumed.
   * If using a string, you need to provide the CSS unit, e.g. '3rem'.
   * @default 40
   */
  size: t.oneOfType([t.number, t.string]),
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The thickness of the circle.
   * @default 3.6
   */
  thickness: t.number,
  /**
   * The value of the progress indicator for the determinate variant.
   * Value between 0 and 100.
   * @default 0
   */
  value: t.number,
  /**
   * The variant to use.
   * Use indeterminate when there is no progress value.
   * @default 'indeterminate'
   */
  variant: t.oneOf(["determinate", "indeterminate"])
});
const Kae = QP, XP = Fj({
  createStyledComponent: ee("div", {
    name: "MuiContainer",
    slot: "Root",
    overridesResolver: (e, o) => {
      const {
        ownerState: i
      } = e;
      return [o.root, o[`maxWidth${ce(String(i.maxWidth))}`], i.fixed && o.fixed, i.disableGutters && o.disableGutters];
    }
  }),
  useThemeProps: (e) => Ue({
    props: e,
    name: "MuiContainer"
  })
});
process.env.NODE_ENV !== "production" && (XP.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: t.bool,
  /**
   * Set the max-width to match the min-width of the current breakpoint.
   * This is useful if you'd prefer to design for a fixed set of sizes
   * instead of trying to accommodate a fully fluid viewport.
   * It's fluid by default.
   * @default false
   */
  fixed: t.bool,
  /**
   * Determine the max-width of the container.
   * The container width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'lg'
   */
  maxWidth: t.oneOfType([t.oneOf(["xs", "sm", "md", "lg", "xl", !1]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Qae = XP;
function Xae(e) {
  return We("MuiContainer", e);
}
const R9 = Ge("MuiContainer", ["root", "disableGutters", "fixed", "maxWidthXs", "maxWidthSm", "maxWidthMd", "maxWidthLg", "maxWidthXl"]), Zae = R9, ZP = (e, o) => x({
  WebkitFontSmoothing: "antialiased",
  // Antialiasing.
  MozOsxFontSmoothing: "grayscale",
  // Antialiasing.
  // Change from `box-sizing: content-box` so that `width`
  // is not affected by `padding` or `border`.
  boxSizing: "border-box",
  // Fix font resize problem in iOS
  WebkitTextSizeAdjust: "100%"
}, o && !e.vars && {
  colorScheme: e.palette.mode
}), JP = (e) => x({
  color: (e.vars || e).palette.text.primary
}, e.typography.body1, {
  backgroundColor: (e.vars || e).palette.background.default,
  "@media print": {
    // Save printer ink.
    backgroundColor: (e.vars || e).palette.common.white
  }
}), O9 = (e, o = !1) => {
  var i;
  const c = {};
  o && e.colorSchemes && Object.entries(e.colorSchemes).forEach(([f, v]) => {
    var g;
    c[e.getColorSchemeSelector(f).replace(/\s*&/, "")] = {
      colorScheme: (g = v.palette) == null ? void 0 : g.mode
    };
  });
  let d = x({
    html: ZP(e, o),
    "*, *::before, *::after": {
      boxSizing: "inherit"
    },
    "strong, b": {
      fontWeight: e.typography.fontWeightBold
    },
    body: x({
      margin: 0
    }, JP(e), {
      // Add support for document.body.requestFullScreen().
      // Other elements, if background transparent, are not supported.
      "&::backdrop": {
        backgroundColor: (e.vars || e).palette.background.default
      }
    })
  }, c);
  const p = (i = e.components) == null || (i = i.MuiCssBaseline) == null ? void 0 : i.styleOverrides;
  return p && (d = [d, p]), d;
};
function k9(e) {
  const o = Ue({
    props: e,
    name: "MuiCssBaseline"
  }), {
    children: i,
    enableColorScheme: c = !1
  } = o;
  return /* @__PURE__ */ ht(w.Fragment, {
    children: [/* @__PURE__ */ z(ww, {
      styles: (d) => O9(d, c)
    }), i]
  });
}
process.env.NODE_ENV !== "production" && (k9.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * You can wrap a node.
   */
  children: t.node,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   * @default false
   */
  enableColorScheme: t.bool
});
const D9 = {
  track: "#2b2b2b",
  thumb: "#6b6b6b",
  active: "#959595"
};
function Jae(e = D9) {
  return {
    scrollbarColor: `${e.thumb} ${e.track}`,
    "&::-webkit-scrollbar, & *::-webkit-scrollbar": {
      backgroundColor: e.track
    },
    "&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb": {
      borderRadius: 8,
      backgroundColor: e.thumb,
      minHeight: 24,
      border: `3px solid ${e.track}`
    },
    "&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus": {
      backgroundColor: e.active
    },
    "&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active": {
      backgroundColor: e.active
    },
    "&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover": {
      backgroundColor: e.active
    },
    "&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner": {
      backgroundColor: e.track
    }
  };
}
function M9(e) {
  return We("MuiModal", e);
}
const N9 = Ge("MuiModal", ["root", "hidden", "backdrop"]), eie = N9, P9 = ["BackdropComponent", "BackdropProps", "classes", "className", "closeAfterTransition", "children", "container", "component", "components", "componentsProps", "disableAutoFocus", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "disableScrollLock", "hideBackdrop", "keepMounted", "onBackdropClick", "onClose", "onTransitionEnter", "onTransitionExited", "open", "slotProps", "slots", "theme"], $9 = (e) => {
  const {
    open: o,
    exited: i,
    classes: c
  } = e;
  return Ye({
    root: ["root", !o && i && "hidden"],
    backdrop: ["backdrop"]
  }, M9, c);
}, I9 = ee("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, !i.open && i.exited && o.hidden];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0
}, !o.open && o.exited && {
  visibility: "hidden"
})), L9 = ee(kP, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, o) => o.backdrop
})({
  zIndex: -1
}), e$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d, p, f, v, g;
  const b = Ue({
    name: "MuiModal",
    props: o
  }), {
    BackdropComponent: S = L9,
    BackdropProps: R,
    className: D,
    closeAfterTransition: k = !1,
    children: $,
    container: P,
    component: O,
    components: I = {},
    componentsProps: _ = {},
    disableAutoFocus: A = !1,
    disableEnforceFocus: V = !1,
    disableEscapeKeyDown: B = !1,
    disablePortal: M = !1,
    disableRestoreFocus: F = !1,
    disableScrollLock: Y = !1,
    hideBackdrop: H = !1,
    keepMounted: J = !1,
    onBackdropClick: W,
    open: te,
    slotProps: Z,
    slots: q
    // eslint-disable-next-line react/prop-types
  } = b, Q = ue(b, P9), re = x({}, b, {
    closeAfterTransition: k,
    disableAutoFocus: A,
    disableEnforceFocus: V,
    disableEscapeKeyDown: B,
    disablePortal: M,
    disableRestoreFocus: F,
    disableScrollLock: Y,
    hideBackdrop: H,
    keepMounted: J
  }), {
    getRootProps: ie,
    getBackdropProps: K,
    getTransitionProps: ne,
    portalRef: se,
    isTopModal: Fe,
    exited: qe,
    hasTransition: Me
  } = eH(x({}, re, {
    rootRef: i
  })), fe = x({}, re, {
    exited: qe
  }), De = $9(fe), be = {};
  if ($.props.tabIndex === void 0 && (be.tabIndex = "-1"), Me) {
    const {
      onEnter: ye,
      onExited: ae
    } = ne();
    be.onEnter = ye, be.onExited = ae;
  }
  const Ce = (c = (d = q == null ? void 0 : q.root) != null ? d : I.Root) != null ? c : I9, de = (p = (f = q == null ? void 0 : q.backdrop) != null ? f : I.Backdrop) != null ? p : S, Ae = (v = Z == null ? void 0 : Z.root) != null ? v : _.root, at = (g = Z == null ? void 0 : Z.backdrop) != null ? g : _.backdrop, Oe = ln({
    elementType: Ce,
    externalSlotProps: Ae,
    externalForwardedProps: Q,
    getSlotProps: ie,
    additionalProps: {
      ref: i,
      as: O
    },
    ownerState: fe,
    className: ve(D, Ae == null ? void 0 : Ae.className, De == null ? void 0 : De.root, !fe.open && fe.exited && (De == null ? void 0 : De.hidden))
  }), _e = ln({
    elementType: de,
    externalSlotProps: at,
    additionalProps: R,
    getSlotProps: (ye) => K(x({}, ye, {
      onClick: (ae) => {
        W && W(ae), ye != null && ye.onClick && ye.onClick(ae);
      }
    })),
    className: ve(at == null ? void 0 : at.className, R == null ? void 0 : R.className, De == null ? void 0 : De.backdrop),
    ownerState: fe
  });
  return !J && !te && (!Me || qe) ? null : /* @__PURE__ */ z(Iv, {
    ref: se,
    container: P,
    disablePortal: M,
    children: /* @__PURE__ */ ht(Ce, x({}, Oe, {
      children: [!H && S ? /* @__PURE__ */ z(de, x({}, _e)) : null, /* @__PURE__ */ z($v, {
        disableEnforceFocus: V,
        disableAutoFocus: A,
        disableRestoreFocus: F,
        isEnabled: Fe,
        open: te,
        children: /* @__PURE__ */ w.cloneElement($, be)
      })]
    }))
  });
});
process.env.NODE_ENV !== "production" && (e$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: t.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: t.object,
  /**
   * A single child content element.
   */
  children: Qc.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: t.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    Backdrop: t.elementType,
    Root: t.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: t.shape({
    backdrop: t.oneOfType([t.func, t.object]),
    root: t.oneOfType([t.func, t.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: t.oneOfType([zs, t.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: t.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: t.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: t.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: t.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: t.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: t.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: t.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: t.bool,
  /**
   * Callback fired when the backdrop is clicked.
   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.
   */
  onBackdropClick: t.func,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: t.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: t.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: t.func,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: t.shape({
    backdrop: t.oneOfType([t.func, t.object]),
    root: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: t.shape({
    backdrop: t.elementType,
    root: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Ow = e$;
function A9(e) {
  return We("MuiDialog", e);
}
const _9 = Ge("MuiDialog", ["root", "scrollPaper", "scrollBody", "container", "paper", "paperScrollPaper", "paperScrollBody", "paperWidthFalse", "paperWidthXs", "paperWidthSm", "paperWidthMd", "paperWidthLg", "paperWidthXl", "paperFullWidth", "paperFullScreen"]), Tv = _9, t$ = /* @__PURE__ */ w.createContext({});
process.env.NODE_ENV !== "production" && (t$.displayName = "DialogContext");
const n$ = t$, B9 = ["aria-describedby", "aria-labelledby", "BackdropComponent", "BackdropProps", "children", "className", "disableEscapeKeyDown", "fullScreen", "fullWidth", "maxWidth", "onBackdropClick", "onClose", "open", "PaperComponent", "PaperProps", "scroll", "TransitionComponent", "transitionDuration", "TransitionProps"], z9 = ee(kP, {
  name: "MuiDialog",
  slot: "Backdrop",
  overrides: (e, o) => o.backdrop
})({
  // Improve scrollable dialog support.
  zIndex: -1
}), V9 = (e) => {
  const {
    classes: o,
    scroll: i,
    maxWidth: c,
    fullWidth: d,
    fullScreen: p
  } = e, f = {
    root: ["root"],
    container: ["container", `scroll${ce(i)}`],
    paper: ["paper", `paperScroll${ce(i)}`, `paperWidth${ce(String(c))}`, d && "paperFullWidth", p && "paperFullScreen"]
  };
  return Ye(f, A9, o);
}, F9 = ee(Ow, {
  name: "MuiDialog",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({
  "@media print": {
    // Use !important to override the Modal inline-style.
    position: "absolute !important"
  }
}), j9 = ee("div", {
  name: "MuiDialog",
  slot: "Container",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.container, o[`scroll${ce(i.scroll)}`]];
  }
})(({
  ownerState: e
}) => x({
  height: "100%",
  "@media print": {
    height: "auto"
  },
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}, e.scroll === "paper" && {
  display: "flex",
  justifyContent: "center",
  alignItems: "center"
}, e.scroll === "body" && {
  overflowY: "auto",
  overflowX: "hidden",
  textAlign: "center",
  "&::after": {
    content: '""',
    display: "inline-block",
    verticalAlign: "middle",
    height: "100%",
    width: "0"
  }
})), U9 = ee(Ya, {
  name: "MuiDialog",
  slot: "Paper",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.paper, o[`scrollPaper${ce(i.scroll)}`], o[`paperWidth${ce(String(i.maxWidth))}`], i.fullWidth && o.paperFullWidth, i.fullScreen && o.paperFullScreen];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  margin: 32,
  position: "relative",
  overflowY: "auto",
  // Fix IE11 issue, to remove at some point.
  "@media print": {
    overflowY: "visible",
    boxShadow: "none"
  }
}, o.scroll === "paper" && {
  display: "flex",
  flexDirection: "column",
  maxHeight: "calc(100% - 64px)"
}, o.scroll === "body" && {
  display: "inline-block",
  verticalAlign: "middle",
  textAlign: "left"
  // 'initial' doesn't work on IE11
}, !o.maxWidth && {
  maxWidth: "calc(100% - 64px)"
}, o.maxWidth === "xs" && {
  maxWidth: e.breakpoints.unit === "px" ? Math.max(e.breakpoints.values.xs, 444) : `max(${e.breakpoints.values.xs}${e.breakpoints.unit}, 444px)`,
  [`&.${Tv.paperScrollBody}`]: {
    [e.breakpoints.down(Math.max(e.breakpoints.values.xs, 444) + 32 * 2)]: {
      maxWidth: "calc(100% - 64px)"
    }
  }
}, o.maxWidth && o.maxWidth !== "xs" && {
  maxWidth: `${e.breakpoints.values[o.maxWidth]}${e.breakpoints.unit}`,
  [`&.${Tv.paperScrollBody}`]: {
    [e.breakpoints.down(e.breakpoints.values[o.maxWidth] + 32 * 2)]: {
      maxWidth: "calc(100% - 64px)"
    }
  }
}, o.fullWidth && {
  width: "calc(100% - 64px)"
}, o.fullScreen && {
  margin: 0,
  width: "100%",
  maxWidth: "100%",
  height: "100%",
  maxHeight: "none",
  borderRadius: 0,
  [`&.${Tv.paperScrollBody}`]: {
    margin: 0,
    maxWidth: "100%"
  }
})), o$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiDialog"
  }), d = Mn(), p = {
    enter: d.transitions.duration.enteringScreen,
    exit: d.transitions.duration.leavingScreen
  }, {
    "aria-describedby": f,
    "aria-labelledby": v,
    BackdropComponent: g,
    BackdropProps: b,
    children: S,
    className: R,
    disableEscapeKeyDown: D = !1,
    fullScreen: k = !1,
    fullWidth: $ = !1,
    maxWidth: P = "sm",
    onBackdropClick: O,
    onClose: I,
    open: _,
    PaperComponent: A = Ya,
    PaperProps: V = {},
    scroll: B = "paper",
    TransitionComponent: M = _f,
    transitionDuration: F = p,
    TransitionProps: Y
  } = c, H = ue(c, B9), J = x({}, c, {
    disableEscapeKeyDown: D,
    fullScreen: k,
    fullWidth: $,
    maxWidth: P,
    scroll: B
  }), W = V9(J), te = w.useRef(), Z = (ie) => {
    te.current = ie.target === ie.currentTarget;
  }, q = (ie) => {
    te.current && (te.current = null, O && O(ie), I && I(ie, "backdropClick"));
  }, Q = Na(v), re = w.useMemo(() => ({
    titleId: Q
  }), [Q]);
  return /* @__PURE__ */ z(F9, x({
    className: ve(W.root, R),
    closeAfterTransition: !0,
    components: {
      Backdrop: z9
    },
    componentsProps: {
      backdrop: x({
        transitionDuration: F,
        as: g
      }, b)
    },
    disableEscapeKeyDown: D,
    onClose: I,
    open: _,
    ref: i,
    onClick: q,
    ownerState: J
  }, H, {
    children: /* @__PURE__ */ z(M, x({
      appear: !0,
      in: _,
      timeout: F,
      role: "presentation"
    }, Y, {
      children: /* @__PURE__ */ z(j9, {
        className: ve(W.container),
        onMouseDown: Z,
        ownerState: J,
        children: /* @__PURE__ */ z(U9, x({
          as: A,
          elevation: 24,
          role: "dialog",
          "aria-describedby": f,
          "aria-labelledby": Q
        }, V, {
          className: ve(W.paper, V.className),
          ownerState: J,
          children: /* @__PURE__ */ z(n$.Provider, {
            value: re,
            children: S
          })
        }))
      })
    }))
  }));
});
process.env.NODE_ENV !== "production" && (o$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The id(s) of the element(s) that describe the dialog.
   */
  "aria-describedby": t.string,
  /**
   * The id(s) of the element(s) that label the dialog.
   */
  "aria-labelledby": t.string,
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: t.elementType,
  /**
   * @ignore
   */
  BackdropProps: t.object,
  /**
   * Dialog children, usually the included sub-components.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: t.bool,
  /**
   * If `true`, the dialog is full-screen.
   * @default false
   */
  fullScreen: t.bool,
  /**
   * If `true`, the dialog stretches to `maxWidth`.
   *
   * Notice that the dialog width grow is limited by the default margin.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * Determine the max-width of the dialog.
   * The dialog width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'sm'
   */
  maxWidth: t.oneOfType([t.oneOf(["xs", "sm", "md", "lg", "xl", !1]), t.string]),
  /**
   * Callback fired when the backdrop is clicked.
   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.
   */
  onBackdropClick: t.func,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: t.func,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool.isRequired,
  /**
   * The component used to render the body of the dialog.
   * @default Paper
   */
  PaperComponent: t.elementType,
  /**
   * Props applied to the [`Paper`](/material-ui/api/paper/) element.
   * @default {}
   */
  PaperProps: t.object,
  /**
   * Determine the container for scrolling the dialog.
   * @default 'paper'
   */
  scroll: t.oneOf(["body", "paper"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   */
  TransitionComponent: t.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: t.oneOfType([t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: t.object
});
const H9 = o$;
function W9(e) {
  return We("MuiDialogActions", e);
}
const Y9 = Ge("MuiDialogActions", ["root", "spacing"]), tie = Y9, G9 = ["className", "disableSpacing"], q9 = (e) => {
  const {
    classes: o,
    disableSpacing: i
  } = e;
  return Ye({
    root: ["root", !i && "spacing"]
  }, W9, o);
}, K9 = ee("div", {
  name: "MuiDialogActions",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, !i.disableSpacing && o.spacing];
  }
})(({
  ownerState: e
}) => x({
  display: "flex",
  alignItems: "center",
  padding: 8,
  justifyContent: "flex-end",
  flex: "0 0 auto"
}, !e.disableSpacing && {
  "& > :not(style) ~ :not(style)": {
    marginLeft: 8
  }
})), r$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiDialogActions"
  }), {
    className: d,
    disableSpacing: p = !1
  } = c, f = ue(c, G9), v = x({}, c, {
    disableSpacing: p
  }), g = q9(v);
  return /* @__PURE__ */ z(K9, x({
    className: ve(g.root, d),
    ownerState: v,
    ref: i
  }, f));
});
process.env.NODE_ENV !== "production" && (r$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Q9 = r$;
function X9(e) {
  return We("MuiDialogContent", e);
}
const Z9 = Ge("MuiDialogContent", ["root", "dividers"]), nie = Z9;
function J9(e) {
  return We("MuiDialogTitle", e);
}
const e7 = Ge("MuiDialogTitle", ["root"]), t7 = e7, n7 = ["className", "dividers"], o7 = (e) => {
  const {
    classes: o,
    dividers: i
  } = e;
  return Ye({
    root: ["root", i && "dividers"]
  }, X9, o);
}, r7 = ee("div", {
  name: "MuiDialogContent",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.dividers && o.dividers];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  flex: "1 1 auto",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  overflowY: "auto",
  padding: "20px 24px"
}, o.dividers ? {
  padding: "16px 24px",
  borderTop: `1px solid ${(e.vars || e).palette.divider}`,
  borderBottom: `1px solid ${(e.vars || e).palette.divider}`
} : {
  [`.${t7.root} + &`]: {
    paddingTop: 0
  }
})), a$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiDialogContent"
  }), {
    className: d,
    dividers: p = !1
  } = c, f = ue(c, n7), v = x({}, c, {
    dividers: p
  }), g = o7(v);
  return /* @__PURE__ */ z(r7, x({
    className: ve(g.root, d),
    ownerState: v,
    ref: i
  }, f));
});
process.env.NODE_ENV !== "production" && (a$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Display the top and bottom dividers.
   * @default false
   */
  dividers: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const a7 = a$;
function i7(e) {
  return We("MuiDialogContentText", e);
}
const s7 = Ge("MuiDialogContentText", ["root"]), oie = s7, l7 = ["children", "className"], c7 = (e) => {
  const {
    classes: o
  } = e, c = Ye({
    root: ["root"]
  }, i7, o);
  return x({}, o, c);
}, u7 = ee(wo, {
  shouldForwardProp: (e) => Ao(e) || e === "classes",
  name: "MuiDialogContentText",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({}), i$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiDialogContentText"
  }), {
    className: d
  } = c, p = ue(c, l7), f = c7(p);
  return /* @__PURE__ */ z(u7, x({
    component: "p",
    variant: "body1",
    color: "text.secondary",
    ref: i,
    ownerState: p,
    className: ve(f.root, d)
  }, c, {
    classes: f
  }));
});
process.env.NODE_ENV !== "production" && (i$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const rie = i$, d7 = ["className", "id"], p7 = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"]
  }, J9, o);
}, f7 = ee(wo, {
  name: "MuiDialogTitle",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({
  padding: "16px 24px",
  flex: "0 0 auto"
}), s$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiDialogTitle"
  }), {
    className: d,
    id: p
  } = c, f = ue(c, d7), v = c, g = p7(v), {
    titleId: b = p
  } = w.useContext(n$);
  return /* @__PURE__ */ z(f7, x({
    component: "h2",
    className: ve(g.root, d),
    ownerState: v,
    ref: i,
    variant: "h6",
    id: p ?? b
  }, f));
});
process.env.NODE_ENV !== "production" && (s$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * @ignore
   */
  id: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const aie = s$;
function m7(e) {
  return We("MuiDivider", e);
}
const h7 = Ge("MuiDivider", ["root", "absolute", "fullWidth", "inset", "middle", "flexItem", "light", "vertical", "withChildren", "withChildrenVertical", "textAlignRight", "textAlignLeft", "wrapper", "wrapperVertical"]), YD = h7, v7 = ["absolute", "children", "className", "component", "flexItem", "light", "orientation", "role", "textAlign", "variant"], g7 = (e) => {
  const {
    absolute: o,
    children: i,
    classes: c,
    flexItem: d,
    light: p,
    orientation: f,
    textAlign: v,
    variant: g
  } = e;
  return Ye({
    root: ["root", o && "absolute", g, p && "light", f === "vertical" && "vertical", d && "flexItem", i && "withChildren", i && f === "vertical" && "withChildrenVertical", v === "right" && f !== "vertical" && "textAlignRight", v === "left" && f !== "vertical" && "textAlignLeft"],
    wrapper: ["wrapper", f === "vertical" && "wrapperVertical"]
  }, m7, c);
}, y7 = ee("div", {
  name: "MuiDivider",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.absolute && o.absolute, o[i.variant], i.light && o.light, i.orientation === "vertical" && o.vertical, i.flexItem && o.flexItem, i.children && o.withChildren, i.children && i.orientation === "vertical" && o.withChildrenVertical, i.textAlign === "right" && i.orientation !== "vertical" && o.textAlignRight, i.textAlign === "left" && i.orientation !== "vertical" && o.textAlignLeft];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  margin: 0,
  // Reset browser default style.
  flexShrink: 0,
  borderWidth: 0,
  borderStyle: "solid",
  borderColor: (e.vars || e).palette.divider,
  borderBottomWidth: "thin"
}, o.absolute && {
  position: "absolute",
  bottom: 0,
  left: 0,
  width: "100%"
}, o.light && {
  borderColor: e.vars ? `rgba(${e.vars.palette.dividerChannel} / 0.08)` : Wt(e.palette.divider, 0.08)
}, o.variant === "inset" && {
  marginLeft: 72
}, o.variant === "middle" && o.orientation === "horizontal" && {
  marginLeft: e.spacing(2),
  marginRight: e.spacing(2)
}, o.variant === "middle" && o.orientation === "vertical" && {
  marginTop: e.spacing(1),
  marginBottom: e.spacing(1)
}, o.orientation === "vertical" && {
  height: "100%",
  borderBottomWidth: 0,
  borderRightWidth: "thin"
}, o.flexItem && {
  alignSelf: "stretch",
  height: "auto"
}), ({
  ownerState: e
}) => x({}, e.children && {
  display: "flex",
  whiteSpace: "nowrap",
  textAlign: "center",
  border: 0,
  "&::before, &::after": {
    content: '""',
    alignSelf: "center"
  }
}), ({
  theme: e,
  ownerState: o
}) => x({}, o.children && o.orientation !== "vertical" && {
  "&::before, &::after": {
    width: "100%",
    borderTop: `thin solid ${(e.vars || e).palette.divider}`
  }
}), ({
  theme: e,
  ownerState: o
}) => x({}, o.children && o.orientation === "vertical" && {
  flexDirection: "column",
  "&::before, &::after": {
    height: "100%",
    borderLeft: `thin solid ${(e.vars || e).palette.divider}`
  }
}), ({
  ownerState: e
}) => x({}, e.textAlign === "right" && e.orientation !== "vertical" && {
  "&::before": {
    width: "90%"
  },
  "&::after": {
    width: "10%"
  }
}, e.textAlign === "left" && e.orientation !== "vertical" && {
  "&::before": {
    width: "10%"
  },
  "&::after": {
    width: "90%"
  }
})), b7 = ee("span", {
  name: "MuiDivider",
  slot: "Wrapper",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.wrapper, i.orientation === "vertical" && o.wrapperVertical];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  display: "inline-block",
  paddingLeft: `calc(${e.spacing(1)} * 1.2)`,
  paddingRight: `calc(${e.spacing(1)} * 1.2)`
}, o.orientation === "vertical" && {
  paddingTop: `calc(${e.spacing(1)} * 1.2)`,
  paddingBottom: `calc(${e.spacing(1)} * 1.2)`
})), kw = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiDivider"
  }), {
    absolute: d = !1,
    children: p,
    className: f,
    component: v = p ? "div" : "hr",
    flexItem: g = !1,
    light: b = !1,
    orientation: S = "horizontal",
    role: R = v !== "hr" ? "separator" : void 0,
    textAlign: D = "center",
    variant: k = "fullWidth"
  } = c, $ = ue(c, v7), P = x({}, c, {
    absolute: d,
    component: v,
    flexItem: g,
    light: b,
    orientation: S,
    role: R,
    textAlign: D,
    variant: k
  }), O = g7(P);
  return /* @__PURE__ */ z(y7, x({
    as: v,
    className: ve(O.root, f),
    role: R,
    ref: i,
    ownerState: P
  }, $, {
    children: p ? /* @__PURE__ */ z(b7, {
      className: O.wrapper,
      ownerState: P,
      children: p
    }) : null
  }));
});
kw.muiSkipListHighlight = !0;
process.env.NODE_ENV !== "production" && (kw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Absolutely position the element.
   * @default false
   */
  absolute: t.bool,
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, a vertical divider will have the correct height when used in flex container.
   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)
   * @default false
   */
  flexItem: t.bool,
  /**
   * If `true`, the divider will have a lighter color.
   * @default false
   * @deprecated Use <Divider sx={{ opacity: 0.6 }} /> (or any opacity or color) instead. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/)
   */
  light: t.bool,
  /**
   * The component orientation.
   * @default 'horizontal'
   */
  orientation: t.oneOf(["horizontal", "vertical"]),
  /**
   * @ignore
   */
  role: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The text alignment.
   * @default 'center'
   */
  textAlign: t.oneOf(["center", "left", "right"]),
  /**
   * The variant to use.
   * @default 'fullWidth'
   */
  variant: t.oneOfType([t.oneOf(["fullWidth", "inset", "middle"]), t.string])
});
const iie = kw, C7 = ["addEndListener", "appear", "children", "container", "direction", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];
function x7(e, o, i) {
  const c = o.getBoundingClientRect(), d = i && i.getBoundingClientRect(), p = Wr(o);
  let f;
  if (o.fakeTransform)
    f = o.fakeTransform;
  else {
    const b = p.getComputedStyle(o);
    f = b.getPropertyValue("-webkit-transform") || b.getPropertyValue("transform");
  }
  let v = 0, g = 0;
  if (f && f !== "none" && typeof f == "string") {
    const b = f.split("(")[1].split(")")[0].split(",");
    v = parseInt(b[4], 10), g = parseInt(b[5], 10);
  }
  return e === "left" ? d ? `translateX(${d.right + v - c.left}px)` : `translateX(${p.innerWidth + v - c.left}px)` : e === "right" ? d ? `translateX(-${c.right - d.left - v}px)` : `translateX(-${c.left + c.width - v}px)` : e === "up" ? d ? `translateY(${d.bottom + g - c.top}px)` : `translateY(${p.innerHeight + g - c.top}px)` : d ? `translateY(-${c.top - d.top + c.height - g}px)` : `translateY(-${c.top + c.height - g}px)`;
}
function l$(e) {
  return typeof e == "function" ? e() : e;
}
function hC(e, o, i) {
  const c = l$(i), d = x7(e, o, c);
  d && (o.style.webkitTransform = d, o.style.transform = d);
}
const c$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Mn(), d = {
    enter: c.transitions.easing.easeOut,
    exit: c.transitions.easing.sharp
  }, p = {
    enter: c.transitions.duration.enteringScreen,
    exit: c.transitions.duration.leavingScreen
  }, {
    addEndListener: f,
    appear: v = !0,
    children: g,
    container: b,
    direction: S = "down",
    easing: R = d,
    in: D,
    onEnter: k,
    onEntered: $,
    onEntering: P,
    onExit: O,
    onExited: I,
    onExiting: _,
    style: A,
    timeout: V = p,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: B = bd
  } = o, M = ue(o, C7), F = w.useRef(null), Y = cn(g.ref, F, i), H = (K) => (ne) => {
    K && (ne === void 0 ? K(F.current) : K(F.current, ne));
  }, J = H((K, ne) => {
    hC(S, K, b), i0(K), k && k(K, ne);
  }), W = H((K, ne) => {
    const se = Ki({
      timeout: V,
      style: A,
      easing: R
    }, {
      mode: "enter"
    });
    K.style.webkitTransition = c.transitions.create("-webkit-transform", x({}, se)), K.style.transition = c.transitions.create("transform", x({}, se)), K.style.webkitTransform = "none", K.style.transform = "none", P && P(K, ne);
  }), te = H($), Z = H(_), q = H((K) => {
    const ne = Ki({
      timeout: V,
      style: A,
      easing: R
    }, {
      mode: "exit"
    });
    K.style.webkitTransition = c.transitions.create("-webkit-transform", ne), K.style.transition = c.transitions.create("transform", ne), hC(S, K, b), O && O(K);
  }), Q = H((K) => {
    K.style.webkitTransition = "", K.style.transition = "", I && I(K);
  }), re = (K) => {
    f && f(F.current, K);
  }, ie = w.useCallback(() => {
    F.current && hC(S, F.current, b);
  }, [S, b]);
  return w.useEffect(() => {
    if (D || S === "down" || S === "right")
      return;
    const K = $f(() => {
      F.current && hC(S, F.current, b);
    }), ne = Wr(F.current);
    return ne.addEventListener("resize", K), () => {
      K.clear(), ne.removeEventListener("resize", K);
    };
  }, [S, D, b]), w.useEffect(() => {
    D || ie();
  }, [D, ie]), /* @__PURE__ */ z(B, x({
    nodeRef: F,
    onEnter: J,
    onEntered: te,
    onEntering: W,
    onExit: q,
    onExited: Q,
    onExiting: Z,
    addEndListener: re,
    appear: v,
    in: D,
    timeout: V
  }, M, {
    children: (K, ne) => /* @__PURE__ */ w.cloneElement(g, x({
      ref: Y,
      style: x({
        visibility: K === "exited" && !D ? "hidden" : void 0
      }, A, g.props.style)
    }, ne))
  }));
});
process.env.NODE_ENV !== "production" && (c$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: t.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: t.bool,
  /**
   * A single child content element.
   */
  children: Qc.isRequired,
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the container the Slide is transitioning from.
   */
  container: Ko(t.oneOfType([zs, t.func]), (e) => {
    if (e.open) {
      const o = l$(e.container);
      if (o && o.nodeType === 1) {
        const i = o.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && i.top === 0 && i.left === 0 && i.right === 0 && i.bottom === 0)
          return new Error(["MUI: The `container` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!o || typeof o.getBoundingClientRect != "function" || o.contextElement != null && o.contextElement.nodeType !== 1)
        return new Error(["MUI: The `container` prop provided to the component is invalid.", "It should be an HTML element instance."].join(`
`));
    }
    return null;
  }),
  /**
   * Direction the child node will enter from.
   * @default 'down'
   */
  direction: t.oneOf(["down", "left", "right", "up"]),
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   * @default {
   *   enter: theme.transitions.easing.easeOut,
   *   exit: theme.transitions.easing.sharp,
   * }
   */
  easing: t.oneOfType([t.shape({
    enter: t.string,
    exit: t.string
  }), t.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: t.bool,
  /**
   * @ignore
   */
  onEnter: t.func,
  /**
   * @ignore
   */
  onEntered: t.func,
  /**
   * @ignore
   */
  onEntering: t.func,
  /**
   * @ignore
   */
  onExit: t.func,
  /**
   * @ignore
   */
  onExited: t.func,
  /**
   * @ignore
   */
  onExiting: t.func,
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: t.oneOfType([t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })])
});
const S7 = c$;
function T7(e) {
  return We("MuiDrawer", e);
}
const w7 = Ge("MuiDrawer", ["root", "docked", "paper", "paperAnchorLeft", "paperAnchorRight", "paperAnchorTop", "paperAnchorBottom", "paperAnchorDockedLeft", "paperAnchorDockedRight", "paperAnchorDockedTop", "paperAnchorDockedBottom", "modal"]), sie = w7, E7 = ["BackdropProps"], R7 = ["anchor", "BackdropProps", "children", "className", "elevation", "hideBackdrop", "ModalProps", "onClose", "open", "PaperProps", "SlideProps", "TransitionComponent", "transitionDuration", "variant"], u$ = (e, o) => {
  const {
    ownerState: i
  } = e;
  return [o.root, (i.variant === "permanent" || i.variant === "persistent") && o.docked, o.modal];
}, O7 = (e) => {
  const {
    classes: o,
    anchor: i,
    variant: c
  } = e, d = {
    root: ["root"],
    docked: [(c === "permanent" || c === "persistent") && "docked"],
    modal: ["modal"],
    paper: ["paper", `paperAnchor${ce(i)}`, c !== "temporary" && `paperAnchorDocked${ce(i)}`]
  };
  return Ye(d, T7, o);
}, k7 = ee(Ow, {
  name: "MuiDrawer",
  slot: "Root",
  overridesResolver: u$
})(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.drawer
})), GD = ee("div", {
  shouldForwardProp: Ao,
  name: "MuiDrawer",
  slot: "Docked",
  skipVariantsResolver: !1,
  overridesResolver: u$
})({
  flex: "0 0 auto"
}), D7 = ee(Ya, {
  name: "MuiDrawer",
  slot: "Paper",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.paper, o[`paperAnchor${ce(i.anchor)}`], i.variant !== "temporary" && o[`paperAnchorDocked${ce(i.anchor)}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  overflowY: "auto",
  display: "flex",
  flexDirection: "column",
  height: "100%",
  flex: "1 0 auto",
  zIndex: (e.vars || e).zIndex.drawer,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  // temporary style
  position: "fixed",
  top: 0,
  // We disable the focus ring for mouse, touch and keyboard users.
  // At some point, it would be better to keep it for keyboard users.
  // :focus-ring CSS pseudo-class will help.
  outline: 0
}, o.anchor === "left" && {
  left: 0
}, o.anchor === "top" && {
  top: 0,
  left: 0,
  right: 0,
  height: "auto",
  maxHeight: "100%"
}, o.anchor === "right" && {
  right: 0
}, o.anchor === "bottom" && {
  top: "auto",
  left: 0,
  bottom: 0,
  right: 0,
  height: "auto",
  maxHeight: "100%"
}, o.anchor === "left" && o.variant !== "temporary" && {
  borderRight: `1px solid ${(e.vars || e).palette.divider}`
}, o.anchor === "top" && o.variant !== "temporary" && {
  borderBottom: `1px solid ${(e.vars || e).palette.divider}`
}, o.anchor === "right" && o.variant !== "temporary" && {
  borderLeft: `1px solid ${(e.vars || e).palette.divider}`
}, o.anchor === "bottom" && o.variant !== "temporary" && {
  borderTop: `1px solid ${(e.vars || e).palette.divider}`
})), d$ = {
  left: "right",
  right: "left",
  top: "down",
  bottom: "up"
};
function pd(e) {
  return ["left", "right"].indexOf(e) !== -1;
}
function yv(e, o) {
  return e.direction === "rtl" && pd(o) ? d$[o] : o;
}
const p$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiDrawer"
  }), d = Mn(), p = {
    enter: d.transitions.duration.enteringScreen,
    exit: d.transitions.duration.leavingScreen
  }, {
    anchor: f = "left",
    BackdropProps: v,
    children: g,
    className: b,
    elevation: S = 16,
    hideBackdrop: R = !1,
    ModalProps: {
      BackdropProps: D
    } = {},
    onClose: k,
    open: $ = !1,
    PaperProps: P = {},
    SlideProps: O,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: I = S7,
    transitionDuration: _ = p,
    variant: A = "temporary"
  } = c, V = ue(c.ModalProps, E7), B = ue(c, R7), M = w.useRef(!1);
  w.useEffect(() => {
    M.current = !0;
  }, []);
  const F = yv(d, f), H = x({}, c, {
    anchor: f,
    elevation: S,
    open: $,
    variant: A
  }, B), J = O7(H), W = /* @__PURE__ */ z(D7, x({
    elevation: A === "temporary" ? S : 0,
    square: !0
  }, P, {
    className: ve(J.paper, P.className),
    ownerState: H,
    children: g
  }));
  if (A === "permanent")
    return /* @__PURE__ */ z(GD, x({
      className: ve(J.root, J.docked, b),
      ownerState: H,
      ref: i
    }, B, {
      children: W
    }));
  const te = /* @__PURE__ */ z(I, x({
    in: $,
    direction: d$[F],
    timeout: _,
    appear: M.current
  }, O, {
    children: W
  }));
  return A === "persistent" ? /* @__PURE__ */ z(GD, x({
    className: ve(J.root, J.docked, b),
    ownerState: H,
    ref: i
  }, B, {
    children: te
  })) : /* @__PURE__ */ z(k7, x({
    BackdropProps: x({}, v, D, {
      transitionDuration: _
    }),
    className: ve(J.root, J.modal, b),
    open: $,
    ownerState: H,
    onClose: k,
    hideBackdrop: R,
    ref: i
  }, B, V, {
    children: te
  }));
});
process.env.NODE_ENV !== "production" && (p$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Side from which the drawer will appear.
   * @default 'left'
   */
  anchor: t.oneOf(["bottom", "left", "right", "top"]),
  /**
   * @ignore
   */
  BackdropProps: t.object,
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The elevation of the drawer.
   * @default 16
   */
  elevation: To,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: t.bool,
  /**
   * Props applied to the [`Modal`](/material-ui/api/modal/) element.
   * @default {}
   */
  ModalProps: t.object,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: t.func,
  /**
   * If `true`, the component is shown.
   * @default false
   */
  open: t.bool,
  /**
   * Props applied to the [`Paper`](/material-ui/api/paper/) element.
   * @default {}
   */
  PaperProps: t.object,
  /**
   * Props applied to the [`Slide`](/material-ui/api/slide/) element.
   */
  SlideProps: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: t.oneOfType([t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })]),
  /**
   * The variant to use.
   * @default 'temporary'
   */
  variant: t.oneOf(["permanent", "persistent", "temporary"])
});
const M7 = p$;
function N7(e) {
  return We("MuiFab", e);
}
const P7 = Ge("MuiFab", ["root", "primary", "secondary", "extended", "circular", "focusVisible", "disabled", "colorInherit", "sizeSmall", "sizeMedium", "sizeLarge", "info", "error", "warning", "success"]), qD = P7, $7 = ["children", "className", "color", "component", "disabled", "disableFocusRipple", "focusVisibleClassName", "size", "variant"], I7 = (e) => {
  const {
    color: o,
    variant: i,
    classes: c,
    size: d
  } = e, p = {
    root: ["root", i, `size${ce(d)}`, o === "inherit" ? "colorInherit" : o]
  }, f = Ye(p, N7, c);
  return x({}, c, f);
}, L7 = ee(Qo, {
  name: "MuiFab",
  slot: "Root",
  shouldForwardProp: (e) => Ao(e) || e === "classes",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[i.variant], o[`size${ce(i.size)}`], i.color === "inherit" && o.colorInherit, o[ce(i.size)], o[i.color]];
  }
})(({
  theme: e,
  ownerState: o
}) => {
  var i, c;
  return x({}, e.typography.button, {
    minHeight: 36,
    transition: e.transitions.create(["background-color", "box-shadow", "border-color"], {
      duration: e.transitions.duration.short
    }),
    borderRadius: "50%",
    padding: 0,
    minWidth: 0,
    width: 56,
    height: 56,
    zIndex: (e.vars || e).zIndex.fab,
    boxShadow: (e.vars || e).shadows[6],
    "&:active": {
      boxShadow: (e.vars || e).shadows[12]
    },
    color: e.vars ? e.vars.palette.text.primary : (i = (c = e.palette).getContrastText) == null ? void 0 : i.call(c, e.palette.grey[300]),
    backgroundColor: (e.vars || e).palette.grey[300],
    "&:hover": {
      backgroundColor: (e.vars || e).palette.grey.A100,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (e.vars || e).palette.grey[300]
      },
      textDecoration: "none"
    },
    [`&.${qD.focusVisible}`]: {
      boxShadow: (e.vars || e).shadows[6]
    }
  }, o.size === "small" && {
    width: 40,
    height: 40
  }, o.size === "medium" && {
    width: 48,
    height: 48
  }, o.variant === "extended" && {
    borderRadius: 48 / 2,
    padding: "0 16px",
    width: "auto",
    minHeight: "auto",
    minWidth: 48,
    height: 48
  }, o.variant === "extended" && o.size === "small" && {
    width: "auto",
    padding: "0 8px",
    borderRadius: 34 / 2,
    minWidth: 34,
    height: 34
  }, o.variant === "extended" && o.size === "medium" && {
    width: "auto",
    padding: "0 16px",
    borderRadius: 40 / 2,
    minWidth: 40,
    height: 40
  }, o.color === "inherit" && {
    color: "inherit"
  });
}, ({
  theme: e,
  ownerState: o
}) => x({}, o.color !== "inherit" && o.color !== "default" && (e.vars || e).palette[o.color] != null && {
  color: (e.vars || e).palette[o.color].contrastText,
  backgroundColor: (e.vars || e).palette[o.color].main,
  "&:hover": {
    backgroundColor: (e.vars || e).palette[o.color].dark,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: (e.vars || e).palette[o.color].main
    }
  }
}), ({
  theme: e
}) => ({
  [`&.${qD.disabled}`]: {
    color: (e.vars || e).palette.action.disabled,
    boxShadow: (e.vars || e).shadows[0],
    backgroundColor: (e.vars || e).palette.action.disabledBackground
  }
})), f$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiFab"
  }), {
    children: d,
    className: p,
    color: f = "default",
    component: v = "button",
    disabled: g = !1,
    disableFocusRipple: b = !1,
    focusVisibleClassName: S,
    size: R = "large",
    variant: D = "circular"
  } = c, k = ue(c, $7), $ = x({}, c, {
    color: f,
    component: v,
    disabled: g,
    disableFocusRipple: b,
    size: R,
    variant: D
  }), P = I7($);
  return /* @__PURE__ */ z(L7, x({
    className: ve(P.root, p),
    component: v,
    disabled: g,
    focusRipple: !b,
    focusVisibleClassName: ve(P.focusVisible, S),
    ownerState: $,
    ref: i
  }, k, {
    classes: P,
    children: d
  }));
});
process.env.NODE_ENV !== "production" && (f$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: t.oneOfType([t.oneOf(["default", "error", "info", "inherit", "primary", "secondary", "success", "warning"]), t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: t.bool,
  /**
   * If `true`, the ripple effect is disabled.
   */
  disableRipple: t.bool,
  /**
   * @ignore
   */
  focusVisibleClassName: t.string,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: t.string,
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'large'
   */
  size: t.oneOfType([t.oneOf(["small", "medium", "large"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * @default 'circular'
   */
  variant: t.oneOfType([t.oneOf(["circular", "extended"]), t.string])
});
const m$ = f$, A7 = ["disableUnderline", "components", "componentsProps", "fullWidth", "hiddenLabel", "inputComponent", "multiline", "slotProps", "slots", "type"], _7 = (e) => {
  const {
    classes: o,
    disableUnderline: i
  } = e, d = Ye({
    root: ["root", !i && "underline"],
    input: ["input"]
  }, VW, o);
  return x({}, o, d);
}, B7 = ee(m0, {
  shouldForwardProp: (e) => Ao(e) || e === "classes",
  name: "MuiFilledInput",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [...p0(e, o), !i.disableUnderline && o.underline];
  }
})(({
  theme: e,
  ownerState: o
}) => {
  var i;
  const c = e.palette.mode === "light", d = c ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)", p = c ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)", f = c ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)", v = c ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return x({
    position: "relative",
    backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : p,
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create("background-color", {
      duration: e.transitions.duration.shorter,
      easing: e.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.hoverBg : f,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : p
      }
    },
    [`&.${Ha.focused}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : p
    },
    [`&.${Ha.disabled}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.disabledBg : v
    }
  }, !o.disableUnderline && {
    "&::after": {
      borderBottom: `2px solid ${(i = (e.vars || e).palette[o.color || "primary"]) == null ? void 0 : i.main}`,
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '""',
      position: "absolute",
      right: 0,
      transform: "scaleX(0)",
      transition: e.transitions.create("transform", {
        duration: e.transitions.duration.shorter,
        easing: e.transitions.easing.easeOut
      }),
      pointerEvents: "none"
      // Transparent to the hover style.
    },
    [`&.${Ha.focused}:after`]: {
      // translateX(0) is a workaround for Safari transform scale bug
      // See https://github.com/mui/material-ui/issues/31766
      transform: "scaleX(1) translateX(0)"
    },
    [`&.${Ha.error}`]: {
      "&::before, &::after": {
        borderBottomColor: (e.vars || e).palette.error.main
      }
    },
    "&::before": {
      borderBottom: `1px solid ${e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})` : d}`,
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '"\\00a0"',
      position: "absolute",
      right: 0,
      transition: e.transitions.create("border-bottom-color", {
        duration: e.transitions.duration.shorter
      }),
      pointerEvents: "none"
      // Transparent to the hover style.
    },
    [`&:hover:not(.${Ha.disabled}, .${Ha.error}):before`]: {
      borderBottom: `1px solid ${(e.vars || e).palette.text.primary}`
    },
    [`&.${Ha.disabled}:before`]: {
      borderBottomStyle: "dotted"
    }
  }, o.startAdornment && {
    paddingLeft: 12
  }, o.endAdornment && {
    paddingRight: 12
  }, o.multiline && x({
    padding: "25px 12px 8px"
  }, o.size === "small" && {
    paddingTop: 21,
    paddingBottom: 4
  }, o.hiddenLabel && {
    paddingTop: 16,
    paddingBottom: 17
  }, o.hiddenLabel && o.size === "small" && {
    paddingTop: 8,
    paddingBottom: 9
  }));
}), z7 = ee(h0, {
  name: "MuiFilledInput",
  slot: "Input",
  overridesResolver: f0
})(({
  theme: e,
  ownerState: o
}) => x({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12
}, !e.vars && {
  "&:-webkit-autofill": {
    WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
    WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
    caretColor: e.palette.mode === "light" ? null : "#fff",
    borderTopLeftRadius: "inherit",
    borderTopRightRadius: "inherit"
  }
}, e.vars && {
  "&:-webkit-autofill": {
    borderTopLeftRadius: "inherit",
    borderTopRightRadius: "inherit"
  },
  [e.getColorSchemeSelector("dark")]: {
    "&:-webkit-autofill": {
      WebkitBoxShadow: "0 0 0 100px #266798 inset",
      WebkitTextFillColor: "#fff",
      caretColor: "#fff"
    }
  }
}, o.size === "small" && {
  paddingTop: 21,
  paddingBottom: 4
}, o.hiddenLabel && {
  paddingTop: 16,
  paddingBottom: 17
}, o.startAdornment && {
  paddingLeft: 0
}, o.endAdornment && {
  paddingRight: 0
}, o.hiddenLabel && o.size === "small" && {
  paddingTop: 8,
  paddingBottom: 9
}, o.multiline && {
  paddingTop: 0,
  paddingBottom: 0,
  paddingLeft: 0,
  paddingRight: 0
})), Dw = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d, p, f;
  const v = Ue({
    props: o,
    name: "MuiFilledInput"
  }), {
    components: g = {},
    componentsProps: b,
    fullWidth: S = !1,
    // declare here to prevent spreading to DOM
    inputComponent: R = "input",
    multiline: D = !1,
    slotProps: k,
    slots: $ = {},
    type: P = "text"
  } = v, O = ue(v, A7), I = x({}, v, {
    fullWidth: S,
    inputComponent: R,
    multiline: D,
    type: P
  }), _ = _7(v), A = {
    root: {
      ownerState: I
    },
    input: {
      ownerState: I
    }
  }, V = k ?? b ? qi(A, k ?? b) : A, B = (c = (d = $.root) != null ? d : g.Root) != null ? c : B7, M = (p = (f = $.input) != null ? f : g.Input) != null ? p : z7;
  return /* @__PURE__ */ z(v0, x({
    slots: {
      root: B,
      input: M
    },
    componentsProps: V,
    fullWidth: S,
    inputComponent: R,
    multiline: D,
    ref: i,
    type: P
  }, O, {
    classes: _
  }));
});
process.env.NODE_ENV !== "production" && (Dw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: t.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: t.oneOfType([t.oneOf(["primary", "secondary"]), t.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    Input: t.elementType,
    Root: t.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: t.shape({
    input: t.object,
    root: t.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: t.bool,
  /**
   * If `true`, the input will not have an underline.
   */
  disableUnderline: t.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: t.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: t.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: t.bool,
  /**
   * The id of the `input` element.
   */
  id: t.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: t.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Lo,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: t.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: t.oneOfType([t.number, t.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: t.oneOfType([t.number, t.string]),
  /**
   * If `true`, a [TextareaAutosize](/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: t.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: t.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: t.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: t.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: t.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: t.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: t.oneOfType([t.number, t.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: t.shape({
    input: t.object,
    root: t.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: t.shape({
    input: t.elementType,
    root: t.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: t.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: t.any
});
Dw.muiName = "Input";
const h$ = Dw;
function V7(e) {
  return We("MuiFormControl", e);
}
const F7 = Ge("MuiFormControl", ["root", "marginNone", "marginNormal", "marginDense", "fullWidth", "disabled"]), lie = F7, j7 = ["children", "className", "color", "component", "disabled", "error", "focused", "fullWidth", "hiddenLabel", "margin", "required", "size", "variant"], U7 = (e) => {
  const {
    classes: o,
    margin: i,
    fullWidth: c
  } = e, d = {
    root: ["root", i !== "none" && `margin${ce(i)}`, c && "fullWidth"]
  };
  return Ye(d, V7, o);
}, H7 = ee("div", {
  name: "MuiFormControl",
  slot: "Root",
  overridesResolver: ({
    ownerState: e
  }, o) => x({}, o.root, o[`margin${ce(e.margin)}`], e.fullWidth && o.fullWidth)
})(({
  ownerState: e
}) => x({
  display: "inline-flex",
  flexDirection: "column",
  position: "relative",
  // Reset fieldset default style.
  minWidth: 0,
  padding: 0,
  margin: 0,
  border: 0,
  verticalAlign: "top"
}, e.margin === "normal" && {
  marginTop: 16,
  marginBottom: 8
}, e.margin === "dense" && {
  marginTop: 8,
  marginBottom: 4
}, e.fullWidth && {
  width: "100%"
})), v$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiFormControl"
  }), {
    children: d,
    className: p,
    color: f = "primary",
    component: v = "div",
    disabled: g = !1,
    error: b = !1,
    focused: S,
    fullWidth: R = !1,
    hiddenLabel: D = !1,
    margin: k = "none",
    required: $ = !1,
    size: P = "medium",
    variant: O = "outlined"
  } = c, I = ue(c, j7), _ = x({}, c, {
    color: f,
    component: v,
    disabled: g,
    error: b,
    fullWidth: R,
    hiddenLabel: D,
    margin: k,
    required: $,
    size: P,
    variant: O
  }), A = U7(_), [V, B] = w.useState(() => {
    let Z = !1;
    return d && w.Children.forEach(d, (q) => {
      if (!As(q, ["Input", "Select"]))
        return;
      const Q = As(q, ["Select"]) ? q.props.input : q;
      Q && MW(Q.props) && (Z = !0);
    }), Z;
  }), [M, F] = w.useState(() => {
    let Z = !1;
    return d && w.Children.forEach(d, (q) => {
      As(q, ["Input", "Select"]) && (GC(q.props, !0) || GC(q.props.inputProps, !0)) && (Z = !0);
    }), Z;
  }), [Y, H] = w.useState(!1);
  g && Y && H(!1);
  const J = S !== void 0 && !g ? S : Y;
  let W;
  if (process.env.NODE_ENV !== "production") {
    const Z = w.useRef(!1);
    W = () => (Z.current && console.error(["MUI: There are multiple `InputBase` components inside a FormControl.", "This creates visual inconsistencies, only use one `InputBase`."].join(`
`)), Z.current = !0, () => {
      Z.current = !1;
    });
  }
  const te = w.useMemo(() => ({
    adornedStart: V,
    setAdornedStart: B,
    color: f,
    disabled: g,
    error: b,
    filled: M,
    focused: J,
    fullWidth: R,
    hiddenLabel: D,
    size: P,
    onBlur: () => {
      H(!1);
    },
    onEmpty: () => {
      F(!1);
    },
    onFilled: () => {
      F(!0);
    },
    onFocus: () => {
      H(!0);
    },
    registerEffect: W,
    required: $,
    variant: O
  }), [V, f, g, b, M, J, R, D, W, $, P, O]);
  return /* @__PURE__ */ z(d0.Provider, {
    value: te,
    children: /* @__PURE__ */ z(H7, x({
      as: v,
      ownerState: _,
      className: ve(A.root, p),
      ref: i
    }, I, {
      children: d
    }))
  });
});
process.env.NODE_ENV !== "production" && (v$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: t.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: t.bool,
  /**
   * If `true`, the component will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: t.bool,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: t.oneOf(["dense", "none", "normal"]),
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: t.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["medium", "small"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: t.oneOf(["filled", "outlined", "standard"])
});
const W7 = v$, g$ = dU({
  createStyledComponent: ee("div", {
    name: "MuiStack",
    slot: "Root",
    overridesResolver: (e, o) => o.root
  }),
  useThemeProps: (e) => Ue({
    props: e,
    name: "MuiStack"
  })
});
process.env.NODE_ENV !== "production" && (g$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Defines the `flex-direction` style property.
   * It is applied for all screen sizes.
   * @default 'column'
   */
  direction: t.oneOfType([t.oneOf(["column-reverse", "column", "row-reverse", "row"]), t.arrayOf(t.oneOf(["column-reverse", "column", "row-reverse", "row"])), t.object]),
  /**
   * Add an element between each child.
   */
  divider: t.node,
  /**
   * Defines the space between immediate children.
   * @default 0
   */
  spacing: t.oneOfType([t.arrayOf(t.oneOfType([t.number, t.string])), t.number, t.object, t.string]),
  /**
   * The system prop, which allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.
   *
   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),
   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.
   *
   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.
   * @default false
   */
  useFlexGap: t.bool
});
const Y7 = g$, G7 = Ge("MuiStack", ["root"]), cie = G7;
function q7(e) {
  return We("MuiFormControlLabel", e);
}
const K7 = Ge("MuiFormControlLabel", ["root", "labelPlacementStart", "labelPlacementTop", "labelPlacementBottom", "disabled", "label", "error", "required", "asterisk"]), bv = K7, Q7 = ["checked", "className", "componentsProps", "control", "disabled", "disableTypography", "inputRef", "label", "labelPlacement", "name", "onChange", "required", "slotProps", "value"], X7 = (e) => {
  const {
    classes: o,
    disabled: i,
    labelPlacement: c,
    error: d,
    required: p
  } = e, f = {
    root: ["root", i && "disabled", `labelPlacement${ce(c)}`, d && "error", p && "required"],
    label: ["label", i && "disabled"],
    asterisk: ["asterisk", d && "error"]
  };
  return Ye(f, q7, o);
}, Z7 = ee("label", {
  name: "MuiFormControlLabel",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [{
      [`& .${bv.label}`]: o.label
    }, o.root, o[`labelPlacement${ce(i.labelPlacement)}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  display: "inline-flex",
  alignItems: "center",
  cursor: "pointer",
  // For correct alignment with the text.
  verticalAlign: "middle",
  WebkitTapHighlightColor: "transparent",
  marginLeft: -11,
  marginRight: 16,
  // used for row presentation of radio/checkbox
  [`&.${bv.disabled}`]: {
    cursor: "default"
  }
}, o.labelPlacement === "start" && {
  flexDirection: "row-reverse",
  marginLeft: 16,
  // used for row presentation of radio/checkbox
  marginRight: -11
}, o.labelPlacement === "top" && {
  flexDirection: "column-reverse",
  marginLeft: 16
}, o.labelPlacement === "bottom" && {
  flexDirection: "column",
  marginLeft: 16
}, {
  [`& .${bv.label}`]: {
    [`&.${bv.disabled}`]: {
      color: (e.vars || e).palette.text.disabled
    }
  }
})), J7 = ee("span", {
  name: "MuiFormControlLabel",
  slot: "Asterisk",
  overridesResolver: (e, o) => o.asterisk
})(({
  theme: e
}) => ({
  [`&.${bv.error}`]: {
    color: (e.vars || e).palette.error.main
  }
})), y$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d;
  const p = Ue({
    props: o,
    name: "MuiFormControlLabel"
  }), {
    className: f,
    componentsProps: v = {},
    control: g,
    disabled: b,
    disableTypography: S,
    label: R,
    labelPlacement: D = "end",
    required: k,
    slotProps: $ = {}
  } = p, P = ue(p, Q7), O = Zi(), I = (c = b ?? g.props.disabled) != null ? c : O == null ? void 0 : O.disabled, _ = k ?? g.props.required, A = {
    disabled: I,
    required: _
  };
  ["checked", "name", "onChange", "value", "inputRef"].forEach((H) => {
    typeof g.props[H] > "u" && typeof p[H] < "u" && (A[H] = p[H]);
  });
  const V = Bl({
    props: p,
    muiFormControl: O,
    states: ["error"]
  }), B = x({}, p, {
    disabled: I,
    labelPlacement: D,
    required: _,
    error: V.error
  }), M = X7(B), F = (d = $.typography) != null ? d : v.typography;
  let Y = R;
  return Y != null && Y.type !== wo && !S && (Y = /* @__PURE__ */ z(wo, x({
    component: "span"
  }, F, {
    className: ve(M.label, F == null ? void 0 : F.className),
    children: Y
  }))), /* @__PURE__ */ ht(Z7, x({
    className: ve(M.root, f),
    ownerState: B,
    ref: i
  }, P, {
    children: [/* @__PURE__ */ w.cloneElement(g, A), _ ? /* @__PURE__ */ ht(Y7, {
      display: "block",
      children: [Y, /* @__PURE__ */ ht(J7, {
        ownerState: B,
        "aria-hidden": !0,
        className: M.asterisk,
        children: [" ", "*"]
      })]
    }) : Y]
  }));
});
process.env.NODE_ENV !== "production" && (y$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component appears selected.
   */
  checked: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  componentsProps: t.shape({
    typography: t.object
  }),
  /**
   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.
   */
  control: t.element.isRequired,
  /**
   * If `true`, the control is disabled.
   */
  disabled: t.bool,
  /**
   * If `true`, the label is rendered as it is passed without an additional typography node.
   */
  disableTypography: t.bool,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Lo,
  /**
   * A text or an element to be used in an enclosing label element.
   */
  label: t.node,
  /**
   * The position of the label.
   * @default 'end'
   */
  labelPlacement: t.oneOf(["bottom", "end", "start", "top"]),
  /**
   * @ignore
   */
  name: t.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: t.func,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: t.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: t.shape({
    typography: t.object
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The value of the component.
   */
  value: t.any
});
const uie = y$;
function eY(e) {
  return We("MuiFormGroup", e);
}
const tY = Ge("MuiFormGroup", ["root", "row", "error"]), die = tY, nY = ["className", "row"], oY = (e) => {
  const {
    classes: o,
    row: i,
    error: c
  } = e;
  return Ye({
    root: ["root", i && "row", c && "error"]
  }, eY, o);
}, rY = ee("div", {
  name: "MuiFormGroup",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.row && o.row];
  }
})(({
  ownerState: e
}) => x({
  display: "flex",
  flexDirection: "column",
  flexWrap: "wrap"
}, e.row && {
  flexDirection: "row"
})), b$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiFormGroup"
  }), {
    className: d,
    row: p = !1
  } = c, f = ue(c, nY), v = Zi(), g = Bl({
    props: c,
    muiFormControl: v,
    states: ["error"]
  }), b = x({}, c, {
    row: p,
    error: g.error
  }), S = oY(b);
  return /* @__PURE__ */ z(rY, x({
    className: ve(S.root, d),
    ownerState: b,
    ref: i
  }, f));
});
process.env.NODE_ENV !== "production" && (b$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Display group of elements in a compact row.
   * @default false
   */
  row: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const aY = b$;
function iY(e) {
  return We("MuiFormHelperText", e);
}
const sY = Ge("MuiFormHelperText", ["root", "error", "disabled", "sizeSmall", "sizeMedium", "contained", "focused", "filled", "required"]), KD = sY;
var QD;
const lY = ["children", "className", "component", "disabled", "error", "filled", "focused", "margin", "required", "variant"], cY = (e) => {
  const {
    classes: o,
    contained: i,
    size: c,
    disabled: d,
    error: p,
    filled: f,
    focused: v,
    required: g
  } = e, b = {
    root: ["root", d && "disabled", p && "error", c && `size${ce(c)}`, i && "contained", v && "focused", f && "filled", g && "required"]
  };
  return Ye(b, iY, o);
}, uY = ee("p", {
  name: "MuiFormHelperText",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.size && o[`size${ce(i.size)}`], i.contained && o.contained, i.filled && o.filled];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  color: (e.vars || e).palette.text.secondary
}, e.typography.caption, {
  textAlign: "left",
  marginTop: 3,
  marginRight: 0,
  marginBottom: 0,
  marginLeft: 0,
  [`&.${KD.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${KD.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}, o.size === "small" && {
  marginTop: 4
}, o.contained && {
  marginLeft: 14,
  marginRight: 14
})), C$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiFormHelperText"
  }), {
    children: d,
    className: p,
    component: f = "p"
  } = c, v = ue(c, lY), g = Zi(), b = Bl({
    props: c,
    muiFormControl: g,
    states: ["variant", "size", "disabled", "error", "filled", "focused", "required"]
  }), S = x({}, c, {
    component: f,
    contained: b.variant === "filled" || b.variant === "outlined",
    variant: b.variant,
    size: b.size,
    disabled: b.disabled,
    error: b.error,
    filled: b.filled,
    focused: b.focused,
    required: b.required
  }), R = cY(S);
  return /* @__PURE__ */ z(uY, x({
    as: f,
    ownerState: S,
    className: ve(R.root, p),
    ref: i
  }, v, {
    children: d === " " ? (
      // notranslate needed while Google Translate will not fix zero-width space issue
      QD || (QD = /* @__PURE__ */ z("span", {
        className: "notranslate",
        children: "​"
      }))
    ) : d
  }));
});
process.env.NODE_ENV !== "production" && (C$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   *
   * If `' '` is provided, the component reserves one line height for displaying a future message.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the helper text should be displayed in a disabled state.
   */
  disabled: t.bool,
  /**
   * If `true`, helper text should be displayed in an error state.
   */
  error: t.bool,
  /**
   * If `true`, the helper text should use filled classes key.
   */
  filled: t.bool,
  /**
   * If `true`, the helper text should use focused classes key.
   */
  focused: t.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: t.oneOf(["dense"]),
  /**
   * If `true`, the helper text should use required classes key.
   */
  required: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   */
  variant: t.oneOfType([t.oneOf(["filled", "outlined", "standard"]), t.string])
});
const dY = C$;
function pY(e) {
  return We("MuiFormLabel", e);
}
const fY = Ge("MuiFormLabel", ["root", "colorSecondary", "focused", "disabled", "error", "filled", "required", "asterisk"]), wv = fY, mY = ["children", "className", "color", "component", "disabled", "error", "filled", "focused", "required"], hY = (e) => {
  const {
    classes: o,
    color: i,
    focused: c,
    disabled: d,
    error: p,
    filled: f,
    required: v
  } = e, g = {
    root: ["root", `color${ce(i)}`, d && "disabled", p && "error", f && "filled", c && "focused", v && "required"],
    asterisk: ["asterisk", p && "error"]
  };
  return Ye(g, pY, o);
}, vY = ee("label", {
  name: "MuiFormLabel",
  slot: "Root",
  overridesResolver: ({
    ownerState: e
  }, o) => x({}, o.root, e.color === "secondary" && o.colorSecondary, e.filled && o.filled)
})(({
  theme: e,
  ownerState: o
}) => x({
  color: (e.vars || e).palette.text.secondary
}, e.typography.body1, {
  lineHeight: "1.4375em",
  padding: 0,
  position: "relative",
  [`&.${wv.focused}`]: {
    color: (e.vars || e).palette[o.color].main
  },
  [`&.${wv.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${wv.error}`]: {
    color: (e.vars || e).palette.error.main
  }
})), gY = ee("span", {
  name: "MuiFormLabel",
  slot: "Asterisk",
  overridesResolver: (e, o) => o.asterisk
})(({
  theme: e
}) => ({
  [`&.${wv.error}`]: {
    color: (e.vars || e).palette.error.main
  }
})), x$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiFormLabel"
  }), {
    children: d,
    className: p,
    component: f = "label"
  } = c, v = ue(c, mY), g = Zi(), b = Bl({
    props: c,
    muiFormControl: g,
    states: ["color", "required", "focused", "disabled", "error", "filled"]
  }), S = x({}, c, {
    color: b.color || "primary",
    component: f,
    disabled: b.disabled,
    error: b.error,
    filled: b.filled,
    focused: b.focused,
    required: b.required
  }), R = hY(S);
  return /* @__PURE__ */ ht(vY, x({
    as: f,
    ownerState: S,
    className: ve(R.root, p),
    ref: i
  }, v, {
    children: [d, b.required && /* @__PURE__ */ ht(gY, {
      ownerState: S,
      "aria-hidden": !0,
      className: R.asterisk,
      children: [" ", "*"]
    })]
  }));
});
process.env.NODE_ENV !== "production" && (x$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: t.oneOfType([t.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the label should be displayed in a disabled state.
   */
  disabled: t.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: t.bool,
  /**
   * If `true`, the label should use filled classes key.
   */
  filled: t.bool,
  /**
   * If `true`, the input of this label is focused (used by `FormGroup` components).
   */
  focused: t.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const yY = x$, S$ = /* @__PURE__ */ w.createContext();
process.env.NODE_ENV !== "production" && (S$.displayName = "GridContext");
const XD = S$;
function bY(e) {
  return We("MuiGrid", e);
}
const CY = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], xY = ["column-reverse", "column", "row-reverse", "row"], SY = ["nowrap", "wrap-reverse", "wrap"], ov = ["auto", !0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], TY = Ge("MuiGrid", [
  "root",
  "container",
  "item",
  "zeroMinWidth",
  // spacings
  ...CY.map((e) => `spacing-xs-${e}`),
  // direction values
  ...xY.map((e) => `direction-xs-${e}`),
  // wrap values
  ...SY.map((e) => `wrap-xs-${e}`),
  // grid sizes for all breakpoints
  ...ov.map((e) => `grid-xs-${e}`),
  ...ov.map((e) => `grid-sm-${e}`),
  ...ov.map((e) => `grid-md-${e}`),
  ...ov.map((e) => `grid-lg-${e}`),
  ...ov.map((e) => `grid-xl-${e}`)
]), _v = TY, wY = ["className", "columns", "columnSpacing", "component", "container", "direction", "item", "rowSpacing", "spacing", "wrap", "zeroMinWidth"];
function wf(e) {
  const o = parseFloat(e);
  return `${o}${String(e).replace(String(o), "") || "px"}`;
}
function EY({
  theme: e,
  ownerState: o
}) {
  let i;
  return e.breakpoints.keys.reduce((c, d) => {
    let p = {};
    if (o[d] && (i = o[d]), !i)
      return c;
    if (i === !0)
      p = {
        flexBasis: 0,
        flexGrow: 1,
        maxWidth: "100%"
      };
    else if (i === "auto")
      p = {
        flexBasis: "auto",
        flexGrow: 0,
        flexShrink: 0,
        maxWidth: "none",
        width: "auto"
      };
    else {
      const f = md({
        values: o.columns,
        breakpoints: e.breakpoints.values
      }), v = typeof f == "object" ? f[d] : f;
      if (v == null)
        return c;
      const g = `${Math.round(i / v * 1e8) / 1e6}%`;
      let b = {};
      if (o.container && o.item && o.columnSpacing !== 0) {
        const S = e.spacing(o.columnSpacing);
        if (S !== "0px") {
          const R = `calc(${g} + ${wf(S)})`;
          b = {
            flexBasis: R,
            maxWidth: R
          };
        }
      }
      p = x({
        flexBasis: g,
        flexGrow: 0,
        maxWidth: g
      }, b);
    }
    return e.breakpoints.values[d] === 0 ? Object.assign(c, p) : c[e.breakpoints.up(d)] = p, c;
  }, {});
}
function RY({
  theme: e,
  ownerState: o
}) {
  const i = md({
    values: o.direction,
    breakpoints: e.breakpoints.values
  });
  return kv({
    theme: e
  }, i, (c) => {
    const d = {
      flexDirection: c
    };
    return c.indexOf("column") === 0 && (d[`& > .${_v.item}`] = {
      maxWidth: "none"
    }), d;
  });
}
function T$({
  breakpoints: e,
  values: o
}) {
  let i = "";
  Object.keys(o).forEach((d) => {
    i === "" && o[d] !== 0 && (i = d);
  });
  const c = Object.keys(e).sort((d, p) => e[d] - e[p]);
  return c.slice(0, c.indexOf(i));
}
function OY({
  theme: e,
  ownerState: o
}) {
  const {
    container: i,
    rowSpacing: c
  } = o;
  let d = {};
  if (i && c !== 0) {
    const p = md({
      values: c,
      breakpoints: e.breakpoints.values
    });
    let f;
    typeof p == "object" && (f = T$({
      breakpoints: e.breakpoints.values,
      values: p
    })), d = kv({
      theme: e
    }, p, (v, g) => {
      var b;
      const S = e.spacing(v);
      return S !== "0px" ? {
        marginTop: `-${wf(S)}`,
        [`& > .${_v.item}`]: {
          paddingTop: wf(S)
        }
      } : (b = f) != null && b.includes(g) ? {} : {
        marginTop: 0,
        [`& > .${_v.item}`]: {
          paddingTop: 0
        }
      };
    });
  }
  return d;
}
function kY({
  theme: e,
  ownerState: o
}) {
  const {
    container: i,
    columnSpacing: c
  } = o;
  let d = {};
  if (i && c !== 0) {
    const p = md({
      values: c,
      breakpoints: e.breakpoints.values
    });
    let f;
    typeof p == "object" && (f = T$({
      breakpoints: e.breakpoints.values,
      values: p
    })), d = kv({
      theme: e
    }, p, (v, g) => {
      var b;
      const S = e.spacing(v);
      return S !== "0px" ? {
        width: `calc(100% + ${wf(S)})`,
        marginLeft: `-${wf(S)}`,
        [`& > .${_v.item}`]: {
          paddingLeft: wf(S)
        }
      } : (b = f) != null && b.includes(g) ? {} : {
        width: "100%",
        marginLeft: 0,
        [`& > .${_v.item}`]: {
          paddingLeft: 0
        }
      };
    });
  }
  return d;
}
function DY(e, o, i = {}) {
  if (!e || e <= 0)
    return [];
  if (typeof e == "string" && !Number.isNaN(Number(e)) || typeof e == "number")
    return [i[`spacing-xs-${String(e)}`]];
  const c = [];
  return o.forEach((d) => {
    const p = e[d];
    Number(p) > 0 && c.push(i[`spacing-${d}-${String(p)}`]);
  }), c;
}
const MY = ee("div", {
  name: "MuiGrid",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e, {
      container: c,
      direction: d,
      item: p,
      spacing: f,
      wrap: v,
      zeroMinWidth: g,
      breakpoints: b
    } = i;
    let S = [];
    c && (S = DY(f, b, o));
    const R = [];
    return b.forEach((D) => {
      const k = i[D];
      k && R.push(o[`grid-${D}-${String(k)}`]);
    }), [o.root, c && o.container, p && o.item, g && o.zeroMinWidth, ...S, d !== "row" && o[`direction-xs-${String(d)}`], v !== "wrap" && o[`wrap-xs-${String(v)}`], ...R];
  }
})(({
  ownerState: e
}) => x({
  boxSizing: "border-box"
}, e.container && {
  display: "flex",
  flexWrap: "wrap",
  width: "100%"
}, e.item && {
  margin: 0
  // For instance, it's useful when used with a `figure` element.
}, e.zeroMinWidth && {
  minWidth: 0
}, e.wrap !== "wrap" && {
  flexWrap: e.wrap
}), RY, OY, kY, EY);
function NY(e, o) {
  if (!e || e <= 0)
    return [];
  if (typeof e == "string" && !Number.isNaN(Number(e)) || typeof e == "number")
    return [`spacing-xs-${String(e)}`];
  const i = [];
  return o.forEach((c) => {
    const d = e[c];
    if (Number(d) > 0) {
      const p = `spacing-${c}-${String(d)}`;
      i.push(p);
    }
  }), i;
}
const PY = (e) => {
  const {
    classes: o,
    container: i,
    direction: c,
    item: d,
    spacing: p,
    wrap: f,
    zeroMinWidth: v,
    breakpoints: g
  } = e;
  let b = [];
  i && (b = NY(p, g));
  const S = [];
  g.forEach((D) => {
    const k = e[D];
    k && S.push(`grid-${D}-${String(k)}`);
  });
  const R = {
    root: ["root", i && "container", d && "item", v && "zeroMinWidth", ...b, c !== "row" && `direction-xs-${String(c)}`, f !== "wrap" && `wrap-xs-${String(f)}`, ...S]
  };
  return Ye(R, bY, o);
}, Ev = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiGrid"
  }), {
    breakpoints: d
  } = Mn(), p = Fv(c), {
    className: f,
    columns: v,
    columnSpacing: g,
    component: b = "div",
    container: S = !1,
    direction: R = "row",
    item: D = !1,
    rowSpacing: k,
    spacing: $ = 0,
    wrap: P = "wrap",
    zeroMinWidth: O = !1
  } = p, I = ue(p, wY), _ = k || $, A = g || $, V = w.useContext(XD), B = S ? v || 12 : V, M = {}, F = x({}, I);
  d.keys.forEach((J) => {
    I[J] != null && (M[J] = I[J], delete F[J]);
  });
  const Y = x({}, p, {
    columns: B,
    container: S,
    direction: R,
    item: D,
    rowSpacing: _,
    columnSpacing: A,
    wrap: P,
    zeroMinWidth: O,
    spacing: $
  }, M, {
    breakpoints: d.keys
  }), H = PY(Y);
  return /* @__PURE__ */ z(XD.Provider, {
    value: B,
    children: /* @__PURE__ */ z(MY, x({
      ownerState: Y,
      className: ve(H.root, f),
      as: b,
      ref: i
    }, F))
  });
});
process.env.NODE_ENV !== "production" && (Ev.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The number of columns.
   * @default 12
   */
  columns: t.oneOfType([t.arrayOf(t.number), t.number, t.object]),
  /**
   * Defines the horizontal space between the type `item` components.
   * It overrides the value of the `spacing` prop.
   */
  columnSpacing: t.oneOfType([t.arrayOf(t.oneOfType([t.number, t.string])), t.number, t.object, t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the component will have the flex *container* behavior.
   * You should be wrapping *items* with a *container*.
   * @default false
   */
  container: t.bool,
  /**
   * Defines the `flex-direction` style property.
   * It is applied for all screen sizes.
   * @default 'row'
   */
  direction: t.oneOfType([t.oneOf(["column-reverse", "column", "row-reverse", "row"]), t.arrayOf(t.oneOf(["column-reverse", "column", "row-reverse", "row"])), t.object]),
  /**
   * If `true`, the component will have the flex *item* behavior.
   * You should be wrapping *items* with a *container*.
   * @default false
   */
  item: t.bool,
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `lg` breakpoint and wider screens if not overridden.
   * @default false
   */
  lg: t.oneOfType([t.oneOf(["auto"]), t.number, t.bool]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `md` breakpoint and wider screens if not overridden.
   * @default false
   */
  md: t.oneOfType([t.oneOf(["auto"]), t.number, t.bool]),
  /**
   * Defines the vertical space between the type `item` components.
   * It overrides the value of the `spacing` prop.
   */
  rowSpacing: t.oneOfType([t.arrayOf(t.oneOfType([t.number, t.string])), t.number, t.object, t.string]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `sm` breakpoint and wider screens if not overridden.
   * @default false
   */
  sm: t.oneOfType([t.oneOf(["auto"]), t.number, t.bool]),
  /**
   * Defines the space between the type `item` components.
   * It can only be used on a type `container` component.
   * @default 0
   */
  spacing: t.oneOfType([t.arrayOf(t.oneOfType([t.number, t.string])), t.number, t.object, t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Defines the `flex-wrap` style property.
   * It's applied for all screen sizes.
   * @default 'wrap'
   */
  wrap: t.oneOf(["nowrap", "wrap-reverse", "wrap"]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `xl` breakpoint and wider screens if not overridden.
   * @default false
   */
  xl: t.oneOfType([t.oneOf(["auto"]), t.number, t.bool]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for all the screen sizes with the lowest priority.
   * @default false
   */
  xs: t.oneOfType([t.oneOf(["auto"]), t.number, t.bool]),
  /**
   * If `true`, it sets `min-width: 0` on the item.
   * Refer to the limitations section of the documentation to better understand the use case.
   * @default false
   */
  zeroMinWidth: t.bool
});
if (process.env.NODE_ENV !== "production") {
  const e = hN("Grid", Ev);
  Ev["propTypes"] = x({}, Ev.propTypes, {
    direction: e("container"),
    lg: e("item"),
    md: e("item"),
    sm: e("item"),
    spacing: e("container"),
    wrap: e("container"),
    xs: e("item"),
    zeroMinWidth: e("item")
  });
}
const pie = Ev, w$ = oU({
  createStyledComponent: ee("div", {
    name: "MuiGrid2",
    slot: "Root",
    overridesResolver: (e, o) => o.root
  }),
  componentName: "MuiGrid2",
  useThemeProps: (e) => Ue({
    props: e,
    name: "MuiGrid2"
  })
});
process.env.NODE_ENV !== "production" && (w$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * @ignore
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const fie = w$;
function mie(e) {
  return We("MuiGrid2", e);
}
const $Y = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], IY = ["column-reverse", "column", "row-reverse", "row"], LY = ["nowrap", "wrap-reverse", "wrap"], rv = ["auto", !0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], AY = Ge("MuiGrid2", [
  "root",
  "container",
  "item",
  "zeroMinWidth",
  // spacings
  ...$Y.map((e) => `spacing-xs-${e}`),
  // direction values
  ...IY.map((e) => `direction-xs-${e}`),
  // wrap values
  ...LY.map((e) => `wrap-xs-${e}`),
  // grid sizes for all breakpoints
  ...rv.map((e) => `grid-xs-${e}`),
  ...rv.map((e) => `grid-sm-${e}`),
  ...rv.map((e) => `grid-md-${e}`),
  ...rv.map((e) => `grid-lg-${e}`),
  ...rv.map((e) => `grid-xl-${e}`)
]), hie = AY, _Y = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];
function V1(e) {
  return `scale(${e}, ${e ** 2})`;
}
const BY = {
  entering: {
    opacity: 1,
    transform: V1(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, h1 = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), Mw = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const {
    addEndListener: c,
    appear: d = !0,
    children: p,
    easing: f,
    in: v,
    onEnter: g,
    onEntered: b,
    onEntering: S,
    onExit: R,
    onExited: D,
    onExiting: k,
    style: $,
    timeout: P = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: O = bd
  } = o, I = ue(o, _Y), _ = Pl(), A = w.useRef(), V = Mn(), B = w.useRef(null), M = cn(B, p.ref, i), F = (Q) => (re) => {
    if (Q) {
      const ie = B.current;
      re === void 0 ? Q(ie) : Q(ie, re);
    }
  }, Y = F(S), H = F((Q, re) => {
    i0(Q);
    const {
      duration: ie,
      delay: K,
      easing: ne
    } = Ki({
      style: $,
      timeout: P,
      easing: f
    }, {
      mode: "enter"
    });
    let se;
    P === "auto" ? (se = V.transitions.getAutoHeightDuration(Q.clientHeight), A.current = se) : se = ie, Q.style.transition = [V.transitions.create("opacity", {
      duration: se,
      delay: K
    }), V.transitions.create("transform", {
      duration: h1 ? se : se * 0.666,
      delay: K,
      easing: ne
    })].join(","), g && g(Q, re);
  }), J = F(b), W = F(k), te = F((Q) => {
    const {
      duration: re,
      delay: ie,
      easing: K
    } = Ki({
      style: $,
      timeout: P,
      easing: f
    }, {
      mode: "exit"
    });
    let ne;
    P === "auto" ? (ne = V.transitions.getAutoHeightDuration(Q.clientHeight), A.current = ne) : ne = re, Q.style.transition = [V.transitions.create("opacity", {
      duration: ne,
      delay: ie
    }), V.transitions.create("transform", {
      duration: h1 ? ne : ne * 0.666,
      delay: h1 ? ie : ie || ne * 0.333,
      easing: K
    })].join(","), Q.style.opacity = 0, Q.style.transform = V1(0.75), R && R(Q);
  }), Z = F(D);
  return /* @__PURE__ */ z(O, x({
    appear: d,
    in: v,
    nodeRef: B,
    onEnter: H,
    onEntered: J,
    onEntering: Y,
    onExit: te,
    onExited: Z,
    onExiting: W,
    addEndListener: (Q) => {
      P === "auto" && _.start(A.current || 0, Q), c && c(B.current, Q);
    },
    timeout: P === "auto" ? null : P
  }, I, {
    children: (Q, re) => /* @__PURE__ */ w.cloneElement(p, x({
      style: x({
        opacity: 0,
        transform: V1(0.75),
        visibility: Q === "exited" && !v ? "hidden" : void 0
      }, BY[Q], $, p.props.style),
      ref: M
    }, re))
  }));
});
process.env.NODE_ENV !== "production" && (Mw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: t.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: t.bool,
  /**
   * A single child content element.
   */
  children: Qc.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: t.oneOfType([t.shape({
    enter: t.string,
    exit: t.string
  }), t.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: t.bool,
  /**
   * @ignore
   */
  onEnter: t.func,
  /**
   * @ignore
   */
  onEntered: t.func,
  /**
   * @ignore
   */
  onEntering: t.func,
  /**
   * @ignore
   */
  onExit: t.func,
  /**
   * @ignore
   */
  onExited: t.func,
  /**
   * @ignore
   */
  onExiting: t.func,
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: t.oneOfType([t.oneOf(["auto"]), t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })])
});
Mw.muiSupportAuto = !0;
const Bv = Mw, zY = ["initialWidth", "width"], Hc = ["xs", "sm", "md", "lg", "xl"], VY = (e, o, i = !0) => i ? Hc.indexOf(e) <= Hc.indexOf(o) : Hc.indexOf(e) < Hc.indexOf(o), FY = (e, o, i = !1) => i ? Hc.indexOf(o) <= Hc.indexOf(e) : Hc.indexOf(o) < Hc.indexOf(e), jY = (e = {}) => (o) => {
  const {
    withTheme: i = !1,
    noSSR: c = !1,
    initialWidth: d
  } = e;
  function p(f) {
    const v = Mn(), g = f.theme || v, b = X1({
      theme: g,
      name: "MuiWithWidth",
      props: f
    }), {
      initialWidth: S,
      width: R
    } = b, D = ue(b, zY), [k, $] = w.useState(!1);
    so(() => {
      $(!0);
    }, []);
    const O = g.breakpoints.keys.slice().reverse().reduce((_, A) => {
      const V = Z1(g.breakpoints.up(A));
      return !_ && V ? A : _;
    }, null), I = x({
      width: R || (k || c ? O : void 0) || S || d
    }, i ? {
      theme: g
    } : {}, D);
    return I.width === void 0 ? null : /* @__PURE__ */ z(o, x({}, I));
  }
  return process.env.NODE_ENV !== "production" && (p.propTypes = {
    /**
     * As `window.innerWidth` is unavailable on the server,
     * we default to rendering an empty component during the first mount.
     * You might want to use a heuristic to approximate
     * the screen width of the client browser screen width.
     *
     * For instance, you could be using the user-agent or the client-hints.
     * https://caniuse.com/#search=client%20hint
     */
    initialWidth: t.oneOf(["xs", "sm", "md", "lg", "xl"]),
    /**
     * @ignore
     */
    theme: t.object,
    /**
     * Bypass the width calculation logic.
     */
    width: t.oneOf(["xs", "sm", "md", "lg", "xl"])
  }), process.env.NODE_ENV !== "production" && (p.displayName = `WithWidth(${K1(o)})`), p;
}, UY = jY;
function qC(e) {
  const {
    children: o,
    only: i,
    width: c
  } = e, d = Mn();
  let p = !0;
  if (i)
    if (Array.isArray(i))
      for (let f = 0; f < i.length; f += 1) {
        const v = i[f];
        if (c === v) {
          p = !1;
          break;
        }
      }
    else
      i && c === i && (p = !1);
  if (p)
    for (let f = 0; f < d.breakpoints.keys.length; f += 1) {
      const v = d.breakpoints.keys[f], g = e[`${v}Up`], b = e[`${v}Down`];
      if (g && VY(v, c) || b && FY(v, c)) {
        p = !1;
        break;
      }
    }
  return p ? /* @__PURE__ */ z(w.Fragment, {
    children: o
  }) : null;
}
process.env.NODE_ENV !== "production" && (qC.propTypes = {
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  lgDown: t.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  lgUp: t.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  mdDown: t.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  mdUp: t.bool,
  /**
   * Hide the given breakpoint(s).
   */
  only: t.oneOfType([t.oneOf(["xs", "sm", "md", "lg", "xl"]), t.arrayOf(t.oneOf(["xs", "sm", "md", "lg", "xl"]))]),
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  smDown: t.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  smUp: t.bool,
  /**
   * @ignore
   * width prop provided by withWidth decorator.
   */
  width: t.string.isRequired,
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  xlDown: t.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  xlUp: t.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  xsDown: t.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  xsUp: t.bool
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (qC.propTypes = yd(qC.propTypes));
const HY = UY()(qC);
function WY(e) {
  return We("PrivateHiddenCss", e);
}
Ge("PrivateHiddenCss", ["root", "xlDown", "xlUp", "onlyXl", "lgDown", "lgUp", "onlyLg", "mdDown", "mdUp", "onlyMd", "smDown", "smUp", "onlySm", "xsDown", "xsUp", "onlyXs"]);
const YY = ["children", "className", "only"], GY = (e) => {
  const {
    classes: o,
    breakpoints: i
  } = e, c = {
    root: ["root", ...i.map(({
      breakpoint: d,
      dir: p
    }) => p === "only" ? `${p}${ce(d)}` : `${d}${ce(p)}`)]
  };
  return Ye(c, WY, o);
}, qY = ee("div", {
  name: "PrivateHiddenCss",
  slot: "Root"
})(({
  theme: e,
  ownerState: o
}) => {
  const i = {
    display: "none"
  };
  return x({}, o.breakpoints.map(({
    breakpoint: c,
    dir: d
  }) => d === "only" ? {
    [e.breakpoints.only(c)]: i
  } : d === "up" ? {
    [e.breakpoints.up(c)]: i
  } : {
    [e.breakpoints.down(c)]: i
  }).reduce((c, d) => (Object.keys(d).forEach((p) => {
    c[p] = d[p];
  }), c), {}));
});
function E$(e) {
  const {
    children: o,
    className: i,
    only: c
  } = e, d = ue(e, YY), p = Mn();
  if (process.env.NODE_ENV !== "production") {
    const b = Object.keys(d).filter((S) => {
      const R = !p.breakpoints.keys.some((D) => `${D}Up` === S || `${D}Down` === S);
      return !["classes", "theme", "isRtl", "sx"].includes(S) && R;
    });
    b.length > 0 && console.error(`MUI: Unsupported props received by \`<Hidden implementation="css" />\`: ${b.join(", ")}. Did you forget to wrap this component in a ThemeProvider declaring these breakpoints?`);
  }
  const f = [];
  for (let b = 0; b < p.breakpoints.keys.length; b += 1) {
    const S = p.breakpoints.keys[b], R = d[`${S}Up`], D = d[`${S}Down`];
    R && f.push({
      breakpoint: S,
      dir: "up"
    }), D && f.push({
      breakpoint: S,
      dir: "down"
    });
  }
  c && (Array.isArray(c) ? c : [c]).forEach((S) => {
    f.push({
      breakpoint: S,
      dir: "only"
    });
  });
  const v = x({}, e, {
    breakpoints: f
  }), g = GY(v);
  return /* @__PURE__ */ z(qY, {
    className: ve(g.root, i),
    ownerState: v,
    children: o
  });
}
process.env.NODE_ENV !== "production" && (E$.propTypes = {
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Specify which implementation to use.  'js' is the default, 'css' works better for
   * server-side rendering.
   */
  implementation: t.oneOf(["js", "css"]),
  /**
   * If `true`, screens this size and down are hidden.
   */
  lgDown: t.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  lgUp: t.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  mdDown: t.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  mdUp: t.bool,
  /**
   * Hide the given breakpoint(s).
   */
  only: t.oneOfType([t.oneOf(["xs", "sm", "md", "lg", "xl"]), t.arrayOf(t.oneOf(["xs", "sm", "md", "lg", "xl"]))]),
  /**
   * If `true`, screens this size and down are hidden.
   */
  smDown: t.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  smUp: t.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  xlDown: t.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  xlUp: t.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  xsDown: t.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  xsUp: t.bool
});
const KY = ["implementation", "lgDown", "lgUp", "mdDown", "mdUp", "smDown", "smUp", "xlDown", "xlUp", "xsDown", "xsUp"];
function QY(e) {
  const {
    implementation: o = "js",
    lgDown: i = !1,
    lgUp: c = !1,
    mdDown: d = !1,
    mdUp: p = !1,
    smDown: f = !1,
    smUp: v = !1,
    xlDown: g = !1,
    xlUp: b = !1,
    xsDown: S = !1,
    xsUp: R = !1
  } = e, D = ue(e, KY);
  return o === "js" ? /* @__PURE__ */ z(HY, x({
    lgDown: i,
    lgUp: c,
    mdDown: d,
    mdUp: p,
    smDown: f,
    smUp: v,
    xlDown: g,
    xlUp: b,
    xsDown: S,
    xsUp: R
  }, D)) : /* @__PURE__ */ z(E$, x({
    lgDown: i,
    lgUp: c,
    mdDown: d,
    mdUp: p,
    smDown: f,
    smUp: v,
    xlDown: g,
    xlUp: b,
    xsDown: S,
    xsUp: R
  }, D));
}
process.env.NODE_ENV !== "production" && (QY.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Specify which implementation to use.  'js' is the default, 'css' works better for
   * server-side rendering.
   * @default 'js'
   */
  implementation: t.oneOf(["css", "js"]),
  /**
   * You can use this prop when choosing the `js` implementation with server-side rendering.
   *
   * As `window.innerWidth` is unavailable on the server,
   * we default to rendering an empty component during the first mount.
   * You might want to use a heuristic to approximate
   * the screen width of the client browser screen width.
   *
   * For instance, you could be using the user-agent or the client-hints.
   * https://caniuse.com/#search=client%20hint
   */
  initialWidth: t.oneOf(["xs", "sm", "md", "lg", "xl"]),
  /**
   * If `true`, component is hidden on screens below (but not including) this size.
   * @default false
   */
  lgDown: t.bool,
  /**
   * If `true`, component is hidden on screens this size and above.
   * @default false
   */
  lgUp: t.bool,
  /**
   * If `true`, component is hidden on screens below (but not including) this size.
   * @default false
   */
  mdDown: t.bool,
  /**
   * If `true`, component is hidden on screens this size and above.
   * @default false
   */
  mdUp: t.bool,
  /**
   * Hide the given breakpoint(s).
   */
  only: t.oneOfType([t.oneOf(["xs", "sm", "md", "lg", "xl"]), t.arrayOf(t.oneOf(["xs", "sm", "md", "lg", "xl"]).isRequired)]),
  /**
   * If `true`, component is hidden on screens below (but not including) this size.
   * @default false
   */
  smDown: t.bool,
  /**
   * If `true`, component is hidden on screens this size and above.
   * @default false
   */
  smUp: t.bool,
  /**
   * If `true`, component is hidden on screens below (but not including) this size.
   * @default false
   */
  xlDown: t.bool,
  /**
   * If `true`, component is hidden on screens this size and above.
   * @default false
   */
  xlUp: t.bool,
  /**
   * If `true`, component is hidden on screens below (but not including) this size.
   * @default false
   */
  xsDown: t.bool,
  /**
   * If `true`, component is hidden on screens this size and above.
   * @default false
   */
  xsUp: t.bool
});
function XY(e) {
  return We("MuiIcon", e);
}
const ZY = Ge("MuiIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]), vie = ZY, JY = ["baseClassName", "className", "color", "component", "fontSize"], eG = (e) => {
  const {
    color: o,
    fontSize: i,
    classes: c
  } = e, d = {
    root: ["root", o !== "inherit" && `color${ce(o)}`, `fontSize${ce(i)}`]
  };
  return Ye(d, XY, c);
}, tG = ee("span", {
  name: "MuiIcon",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.color !== "inherit" && o[`color${ce(i.color)}`], o[`fontSize${ce(i.fontSize)}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => ({
  userSelect: "none",
  width: "1em",
  height: "1em",
  // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541
  // To remove at some point.
  overflow: "hidden",
  display: "inline-block",
  // allow overflow hidden to take action
  textAlign: "center",
  // support non-square icon
  flexShrink: 0,
  fontSize: {
    inherit: "inherit",
    small: e.typography.pxToRem(20),
    medium: e.typography.pxToRem(24),
    large: e.typography.pxToRem(36)
  }[o.fontSize],
  // TODO v5 deprecate, v6 remove for sx
  color: {
    primary: (e.vars || e).palette.primary.main,
    secondary: (e.vars || e).palette.secondary.main,
    info: (e.vars || e).palette.info.main,
    success: (e.vars || e).palette.success.main,
    warning: (e.vars || e).palette.warning.main,
    action: (e.vars || e).palette.action.active,
    error: (e.vars || e).palette.error.main,
    disabled: (e.vars || e).palette.action.disabled,
    inherit: void 0
  }[o.color]
})), Nw = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiIcon"
  }), {
    baseClassName: d = "material-icons",
    className: p,
    color: f = "inherit",
    component: v = "span",
    fontSize: g = "medium"
  } = c, b = ue(c, JY), S = x({}, c, {
    baseClassName: d,
    color: f,
    component: v,
    fontSize: g
  }), R = eG(S);
  return /* @__PURE__ */ z(tG, x({
    as: v,
    className: ve(
      d,
      // Prevent the translation of the text content.
      // The font relies on the exact text content to render the icon.
      "notranslate",
      R.root,
      p
    ),
    ownerState: S,
    "aria-hidden": !0,
    ref: i
  }, b));
});
process.env.NODE_ENV !== "production" && (Nw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The base class applied to the icon. Defaults to 'material-icons', but can be changed to any
   * other base class that suits the icon font you're using (e.g. material-icons-rounded, fas, etc).
   * @default 'material-icons'
   */
  baseClassName: t.string,
  /**
   * The name of the icon font ligature.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'inherit'
   */
  color: t.oneOfType([t.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: t.oneOfType([t.oneOf(["inherit", "large", "medium", "small"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
Nw.muiName = "Icon";
const gie = Nw;
function nG(e) {
  return We("MuiImageList", e);
}
const oG = Ge("MuiImageList", ["root", "masonry", "quilted", "standard", "woven"]), yie = oG, R$ = /* @__PURE__ */ w.createContext({});
process.env.NODE_ENV !== "production" && (R$.displayName = "ImageListContext");
const O$ = R$, rG = ["children", "className", "cols", "component", "rowHeight", "gap", "style", "variant"], aG = (e) => {
  const {
    classes: o,
    variant: i
  } = e;
  return Ye({
    root: ["root", i]
  }, nG, o);
}, iG = ee("ul", {
  name: "MuiImageList",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[i.variant]];
  }
})(({
  ownerState: e
}) => x({
  display: "grid",
  overflowY: "auto",
  listStyle: "none",
  padding: 0,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
}, e.variant === "masonry" && {
  display: "block"
})), k$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiImageList"
  }), {
    children: d,
    className: p,
    cols: f = 2,
    component: v = "ul",
    rowHeight: g = "auto",
    gap: b = 4,
    style: S,
    variant: R = "standard"
  } = c, D = ue(c, rG), k = w.useMemo(() => ({
    rowHeight: g,
    gap: b,
    variant: R
  }), [g, b, R]);
  w.useEffect(() => {
    process.env.NODE_ENV !== "production" && document !== void 0 && !("objectFit" in document.documentElement.style) && console.error(["MUI: ImageList v5+ no longer natively supports Internet Explorer.", "Use v4 of this component instead, or polyfill CSS object-fit."].join(`
`));
  }, []);
  const $ = R === "masonry" ? x({
    columnCount: f,
    columnGap: b
  }, S) : x({
    gridTemplateColumns: `repeat(${f}, 1fr)`,
    gap: b
  }, S), P = x({}, c, {
    component: v,
    gap: b,
    rowHeight: g,
    variant: R
  }), O = aG(P);
  return /* @__PURE__ */ z(iG, x({
    as: v,
    className: ve(O.root, O[R], p),
    ref: i,
    style: $,
    ownerState: P
  }, D, {
    children: /* @__PURE__ */ z(O$.Provider, {
      value: k,
      children: d
    })
  }));
});
process.env.NODE_ENV !== "production" && (k$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `ImageListItem`s.
   */
  children: t.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Number of columns.
   * @default 2
   */
  cols: To,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The gap between items in px.
   * @default 4
   */
  gap: t.number,
  /**
   * The height of one row in px.
   * @default 'auto'
   */
  rowHeight: t.oneOfType([t.oneOf(["auto"]), t.number]),
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: t.oneOfType([t.oneOf(["masonry", "quilted", "standard", "woven"]), t.string])
});
const bie = k$;
function sG(e) {
  return We("MuiImageListItem", e);
}
const lG = Ge("MuiImageListItem", ["root", "img", "standard", "woven", "masonry", "quilted"]), ZD = lG, cG = ["children", "className", "cols", "component", "rows", "style"], uG = (e) => {
  const {
    classes: o,
    variant: i
  } = e;
  return Ye({
    root: ["root", i],
    img: ["img"]
  }, sG, o);
}, dG = ee("li", {
  name: "MuiImageListItem",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [{
      [`& .${ZD.img}`]: o.img
    }, o.root, o[i.variant]];
  }
})(({
  ownerState: e
}) => x({
  display: "block",
  position: "relative"
}, e.variant === "standard" && {
  // For titlebar under list item
  display: "flex",
  flexDirection: "column"
}, e.variant === "woven" && {
  height: "100%",
  alignSelf: "center",
  "&:nth-of-type(even)": {
    height: "70%"
  }
}, {
  [`& .${ZD.img}`]: x({
    objectFit: "cover",
    width: "100%",
    height: "100%",
    display: "block"
  }, e.variant === "standard" && {
    height: "auto",
    flexGrow: 1
  })
})), D$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiImageListItem"
  }), {
    children: d,
    className: p,
    cols: f = 1,
    component: v = "li",
    rows: g = 1,
    style: b
  } = c, S = ue(c, cG), {
    rowHeight: R = "auto",
    gap: D,
    variant: k
  } = w.useContext(O$);
  let $ = "auto";
  k === "woven" ? $ = void 0 : R !== "auto" && ($ = R * g + D * (g - 1));
  const P = x({}, c, {
    cols: f,
    component: v,
    gap: D,
    rowHeight: R,
    rows: g,
    variant: k
  }), O = uG(P);
  return /* @__PURE__ */ z(dG, x({
    as: v,
    className: ve(O.root, O[k], p),
    ref: i,
    style: x({
      height: $,
      gridColumnEnd: k !== "masonry" ? `span ${f}` : void 0,
      gridRowEnd: k !== "masonry" ? `span ${g}` : void 0,
      marginBottom: k === "masonry" ? D : void 0,
      breakInside: k === "masonry" ? "avoid" : void 0
    }, b),
    ownerState: P
  }, S, {
    children: w.Children.map(d, (I) => /* @__PURE__ */ w.isValidElement(I) ? (process.env.NODE_ENV !== "production" && Xi.isFragment(I) && console.error(["MUI: The ImageListItem component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), I.type === "img" || As(I, ["Image"]) ? /* @__PURE__ */ w.cloneElement(I, {
      className: ve(O.img, I.props.className)
    }) : I) : null)
  }));
});
process.env.NODE_ENV !== "production" && (D$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally an `<img>`.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Width of the item in number of grid columns.
   * @default 1
   */
  cols: To,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Height of the item in number of grid rows.
   * @default 1
   */
  rows: To,
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Cie = D$;
function pG(e) {
  return We("MuiImageListItemBar", e);
}
const fG = Ge("MuiImageListItemBar", ["root", "positionBottom", "positionTop", "positionBelow", "titleWrap", "titleWrapBottom", "titleWrapTop", "titleWrapBelow", "titleWrapActionPosLeft", "titleWrapActionPosRight", "title", "subtitle", "actionIcon", "actionIconActionPosLeft", "actionIconActionPosRight"]), xie = fG, mG = ["actionIcon", "actionPosition", "className", "subtitle", "title", "position"], hG = (e) => {
  const {
    classes: o,
    position: i,
    actionIcon: c,
    actionPosition: d
  } = e, p = {
    root: ["root", `position${ce(i)}`],
    titleWrap: ["titleWrap", `titleWrap${ce(i)}`, c && `titleWrapActionPos${ce(d)}`],
    title: ["title"],
    subtitle: ["subtitle"],
    actionIcon: ["actionIcon", `actionIconActionPos${ce(d)}`]
  };
  return Ye(p, pG, o);
}, vG = ee("div", {
  name: "MuiImageListItemBar",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[`position${ce(i.position)}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  position: "absolute",
  left: 0,
  right: 0,
  background: "rgba(0, 0, 0, 0.5)",
  display: "flex",
  alignItems: "center",
  fontFamily: e.typography.fontFamily
}, o.position === "bottom" && {
  bottom: 0
}, o.position === "top" && {
  top: 0
}, o.position === "below" && {
  position: "relative",
  background: "transparent",
  alignItems: "normal"
})), gG = ee("div", {
  name: "MuiImageListItemBar",
  slot: "TitleWrap",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.titleWrap, o[`titleWrap${ce(i.position)}`], i.actionIcon && o[`titleWrapActionPos${ce(i.actionPosition)}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  flexGrow: 1,
  padding: "12px 16px",
  color: (e.vars || e).palette.common.white,
  overflow: "hidden"
}, o.position === "below" && {
  padding: "6px 0 12px",
  color: "inherit"
}, o.actionIcon && o.actionPosition === "left" && {
  paddingLeft: 0
}, o.actionIcon && o.actionPosition === "right" && {
  paddingRight: 0
})), yG = ee("div", {
  name: "MuiImageListItemBar",
  slot: "Title",
  overridesResolver: (e, o) => o.title
})(({
  theme: e
}) => ({
  fontSize: e.typography.pxToRem(16),
  lineHeight: "24px",
  textOverflow: "ellipsis",
  overflow: "hidden",
  whiteSpace: "nowrap"
})), bG = ee("div", {
  name: "MuiImageListItemBar",
  slot: "Subtitle",
  overridesResolver: (e, o) => o.subtitle
})(({
  theme: e
}) => ({
  fontSize: e.typography.pxToRem(12),
  lineHeight: 1,
  textOverflow: "ellipsis",
  overflow: "hidden",
  whiteSpace: "nowrap"
})), CG = ee("div", {
  name: "MuiImageListItemBar",
  slot: "ActionIcon",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.actionIcon, o[`actionIconActionPos${ce(i.actionPosition)}`]];
  }
})(({
  ownerState: e
}) => x({}, e.actionPosition === "left" && {
  order: -1
})), M$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiImageListItemBar"
  }), {
    actionIcon: d,
    actionPosition: p = "right",
    className: f,
    subtitle: v,
    title: g,
    position: b = "bottom"
  } = c, S = ue(c, mG), R = x({}, c, {
    position: b,
    actionPosition: p
  }), D = hG(R);
  return /* @__PURE__ */ ht(vG, x({
    ownerState: R,
    className: ve(D.root, f),
    ref: i
  }, S, {
    children: [/* @__PURE__ */ ht(gG, {
      ownerState: R,
      className: D.titleWrap,
      children: [/* @__PURE__ */ z(yG, {
        className: D.title,
        children: g
      }), v ? /* @__PURE__ */ z(bG, {
        className: D.subtitle,
        children: v
      }) : null]
    }), d ? /* @__PURE__ */ z(CG, {
      ownerState: R,
      className: D.actionIcon,
      children: d
    }) : null]
  }));
});
process.env.NODE_ENV !== "production" && (M$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An IconButton element to be used as secondary action target
   * (primary action target is the item itself).
   */
  actionIcon: t.node,
  /**
   * Position of secondary action IconButton.
   * @default 'right'
   */
  actionPosition: t.oneOf(["left", "right"]),
  /**
   * @ignore
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Position of the title bar.
   * @default 'bottom'
   */
  position: t.oneOf(["below", "bottom", "top"]),
  /**
   * String or element serving as subtitle (support text).
   */
  subtitle: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Title to be displayed.
   */
  title: t.node
});
const Sie = M$, xG = ["disableUnderline", "components", "componentsProps", "fullWidth", "inputComponent", "multiline", "slotProps", "slots", "type"], SG = (e) => {
  const {
    classes: o,
    disableUnderline: i
  } = e, d = Ye({
    root: ["root", !i && "underline"],
    input: ["input"]
  }, AW, o);
  return x({}, o, d);
}, TG = ee(m0, {
  shouldForwardProp: (e) => Ao(e) || e === "classes",
  name: "MuiInput",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [...p0(e, o), !i.disableUnderline && o.underline];
  }
})(({
  theme: e,
  ownerState: o
}) => {
  let c = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return e.vars && (c = `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`), x({
    position: "relative"
  }, o.formControl && {
    "label + &": {
      marginTop: 16
    }
  }, !o.disableUnderline && {
    "&::after": {
      borderBottom: `2px solid ${(e.vars || e).palette[o.color].main}`,
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '""',
      position: "absolute",
      right: 0,
      transform: "scaleX(0)",
      transition: e.transitions.create("transform", {
        duration: e.transitions.duration.shorter,
        easing: e.transitions.easing.easeOut
      }),
      pointerEvents: "none"
      // Transparent to the hover style.
    },
    [`&.${Uc.focused}:after`]: {
      // translateX(0) is a workaround for Safari transform scale bug
      // See https://github.com/mui/material-ui/issues/31766
      transform: "scaleX(1) translateX(0)"
    },
    [`&.${Uc.error}`]: {
      "&::before, &::after": {
        borderBottomColor: (e.vars || e).palette.error.main
      }
    },
    "&::before": {
      borderBottom: `1px solid ${c}`,
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '"\\00a0"',
      position: "absolute",
      right: 0,
      transition: e.transitions.create("border-bottom-color", {
        duration: e.transitions.duration.shorter
      }),
      pointerEvents: "none"
      // Transparent to the hover style.
    },
    [`&:hover:not(.${Uc.disabled}, .${Uc.error}):before`]: {
      borderBottom: `2px solid ${(e.vars || e).palette.text.primary}`,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        borderBottom: `1px solid ${c}`
      }
    },
    [`&.${Uc.disabled}:before`]: {
      borderBottomStyle: "dotted"
    }
  });
}), wG = ee(h0, {
  name: "MuiInput",
  slot: "Input",
  overridesResolver: f0
})({}), Pw = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d, p, f;
  const v = Ue({
    props: o,
    name: "MuiInput"
  }), {
    disableUnderline: g,
    components: b = {},
    componentsProps: S,
    fullWidth: R = !1,
    inputComponent: D = "input",
    multiline: k = !1,
    slotProps: $,
    slots: P = {},
    type: O = "text"
  } = v, I = ue(v, xG), _ = SG(v), V = {
    root: {
      ownerState: {
        disableUnderline: g
      }
    }
  }, B = $ ?? S ? qi($ ?? S, V) : V, M = (c = (d = P.root) != null ? d : b.Root) != null ? c : TG, F = (p = (f = P.input) != null ? f : b.Input) != null ? p : wG;
  return /* @__PURE__ */ z(v0, x({
    slots: {
      root: M,
      input: F
    },
    slotProps: B,
    fullWidth: R,
    inputComponent: D,
    multiline: k,
    ref: i,
    type: O
  }, I, {
    classes: _
  }));
});
process.env.NODE_ENV !== "production" && (Pw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: t.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: t.oneOfType([t.oneOf(["primary", "secondary"]), t.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    Input: t.elementType,
    Root: t.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: t.shape({
    input: t.object,
    root: t.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: t.bool,
  /**
   * If `true`, the `input` will not have an underline.
   */
  disableUnderline: t.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: t.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: t.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * The id of the `input` element.
   */
  id: t.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: t.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Lo,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: t.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: t.oneOfType([t.number, t.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: t.oneOfType([t.number, t.string]),
  /**
   * If `true`, a [TextareaAutosize](/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: t.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: t.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: t.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: t.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: t.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: t.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: t.oneOfType([t.number, t.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: t.shape({
    input: t.object,
    root: t.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: t.shape({
    input: t.elementType,
    root: t.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: t.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: t.any
});
Pw.muiName = "Input";
const $w = Pw;
function EG(e) {
  return We("MuiInputAdornment", e);
}
const RG = Ge("MuiInputAdornment", ["root", "filled", "standard", "outlined", "positionStart", "positionEnd", "disablePointerEvents", "hiddenLabel", "sizeSmall"]), JD = RG;
var eM;
const OG = ["children", "className", "component", "disablePointerEvents", "disableTypography", "position", "variant"], kG = (e, o) => {
  const {
    ownerState: i
  } = e;
  return [o.root, o[`position${ce(i.position)}`], i.disablePointerEvents === !0 && o.disablePointerEvents, o[i.variant]];
}, DG = (e) => {
  const {
    classes: o,
    disablePointerEvents: i,
    hiddenLabel: c,
    position: d,
    size: p,
    variant: f
  } = e, v = {
    root: ["root", i && "disablePointerEvents", d && `position${ce(d)}`, f, c && "hiddenLabel", p && `size${ce(p)}`]
  };
  return Ye(v, EG, o);
}, MG = ee("div", {
  name: "MuiInputAdornment",
  slot: "Root",
  overridesResolver: kG
})(({
  theme: e,
  ownerState: o
}) => x({
  display: "flex",
  height: "0.01em",
  // Fix IE11 flexbox alignment. To remove at some point.
  maxHeight: "2em",
  alignItems: "center",
  whiteSpace: "nowrap",
  color: (e.vars || e).palette.action.active
}, o.variant === "filled" && {
  // Styles applied to the root element if `variant="filled"`.
  [`&.${JD.positionStart}&:not(.${JD.hiddenLabel})`]: {
    marginTop: 16
  }
}, o.position === "start" && {
  // Styles applied to the root element if `position="start"`.
  marginRight: 8
}, o.position === "end" && {
  // Styles applied to the root element if `position="end"`.
  marginLeft: 8
}, o.disablePointerEvents === !0 && {
  // Styles applied to the root element if `disablePointerEvents={true}`.
  pointerEvents: "none"
})), N$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiInputAdornment"
  }), {
    children: d,
    className: p,
    component: f = "div",
    disablePointerEvents: v = !1,
    disableTypography: g = !1,
    position: b,
    variant: S
  } = c, R = ue(c, OG), D = Zi() || {};
  let k = S;
  S && D.variant && process.env.NODE_ENV !== "production" && S === D.variant && console.error("MUI: The `InputAdornment` variant infers the variant prop you do not have to provide one."), D && !k && (k = D.variant);
  const $ = x({}, c, {
    hiddenLabel: D.hiddenLabel,
    size: D.size,
    disablePointerEvents: v,
    position: b,
    variant: k
  }), P = DG($);
  return /* @__PURE__ */ z(d0.Provider, {
    value: null,
    children: /* @__PURE__ */ z(MG, x({
      as: f,
      ownerState: $,
      className: ve(P.root, p),
      ref: i
    }, R, {
      children: typeof d == "string" && !g ? /* @__PURE__ */ z(wo, {
        color: "text.secondary",
        children: d
      }) : /* @__PURE__ */ ht(w.Fragment, {
        children: [b === "start" ? (
          /* notranslate needed while Google Translate will not fix zero-width space issue */
          eM || (eM = /* @__PURE__ */ z("span", {
            className: "notranslate",
            children: "​"
          }))
        ) : null, d]
      })
    }))
  });
});
process.env.NODE_ENV !== "production" && (N$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally an `IconButton` or string.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Disable pointer events on the root.
   * This allows for the content of the adornment to focus the `input` on click.
   * @default false
   */
  disablePointerEvents: t.bool,
  /**
   * If children is a string then disable wrapping in a Typography component.
   * @default false
   */
  disableTypography: t.bool,
  /**
   * The position this adornment should appear relative to the `Input`.
   */
  position: t.oneOf(["end", "start"]).isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * Note: If you are using the `TextField` component or the `FormControl` component
   * you do not have to set this manually.
   */
  variant: t.oneOf(["filled", "outlined", "standard"])
});
const P$ = N$;
function NG(e) {
  return We("MuiInputLabel", e);
}
const PG = Ge("MuiInputLabel", ["root", "focused", "disabled", "error", "required", "asterisk", "formControl", "sizeSmall", "shrink", "animated", "standard", "filled", "outlined"]), Tie = PG, $G = ["disableAnimation", "margin", "shrink", "variant", "className"], IG = (e) => {
  const {
    classes: o,
    formControl: i,
    size: c,
    shrink: d,
    disableAnimation: p,
    variant: f,
    required: v
  } = e, g = {
    root: ["root", i && "formControl", !p && "animated", d && "shrink", c && c !== "normal" && `size${ce(c)}`, f],
    asterisk: [v && "asterisk"]
  }, b = Ye(g, NG, o);
  return x({}, o, b);
}, LG = ee(yY, {
  shouldForwardProp: (e) => Ao(e) || e === "classes",
  name: "MuiInputLabel",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [{
      [`& .${wv.asterisk}`]: o.asterisk
    }, o.root, i.formControl && o.formControl, i.size === "small" && o.sizeSmall, i.shrink && o.shrink, !i.disableAnimation && o.animated, i.focused && o.focused, o[i.variant]];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  display: "block",
  transformOrigin: "top left",
  whiteSpace: "nowrap",
  overflow: "hidden",
  textOverflow: "ellipsis",
  maxWidth: "100%"
}, o.formControl && {
  position: "absolute",
  left: 0,
  top: 0,
  // slight alteration to spec spacing to match visual spec result
  transform: "translate(0, 20px) scale(1)"
}, o.size === "small" && {
  // Compensation for the `Input.inputSizeSmall` style.
  transform: "translate(0, 17px) scale(1)"
}, o.shrink && {
  transform: "translate(0, -1.5px) scale(0.75)",
  transformOrigin: "top left",
  maxWidth: "133%"
}, !o.disableAnimation && {
  transition: e.transitions.create(["color", "transform", "max-width"], {
    duration: e.transitions.duration.shorter,
    easing: e.transitions.easing.easeOut
  })
}, o.variant === "filled" && x({
  // Chrome's autofill feature gives the input field a yellow background.
  // Since the input field is behind the label in the HTML tree,
  // the input field is drawn last and hides the label with an opaque background color.
  // zIndex: 1 will raise the label above opaque background-colors of input.
  zIndex: 1,
  pointerEvents: "none",
  transform: "translate(12px, 16px) scale(1)",
  maxWidth: "calc(100% - 24px)"
}, o.size === "small" && {
  transform: "translate(12px, 13px) scale(1)"
}, o.shrink && x({
  userSelect: "none",
  pointerEvents: "auto",
  transform: "translate(12px, 7px) scale(0.75)",
  maxWidth: "calc(133% - 24px)"
}, o.size === "small" && {
  transform: "translate(12px, 4px) scale(0.75)"
})), o.variant === "outlined" && x({
  // see comment above on filled.zIndex
  zIndex: 1,
  pointerEvents: "none",
  transform: "translate(14px, 16px) scale(1)",
  maxWidth: "calc(100% - 24px)"
}, o.size === "small" && {
  transform: "translate(14px, 9px) scale(1)"
}, o.shrink && {
  userSelect: "none",
  pointerEvents: "auto",
  // Theoretically, we should have (8+5)*2/0.75 = 34px
  // but it feels a better when it bleeds a bit on the left, so 32px.
  maxWidth: "calc(133% - 32px)",
  transform: "translate(14px, -9px) scale(0.75)"
}))), $$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    name: "MuiInputLabel",
    props: o
  }), {
    disableAnimation: d = !1,
    shrink: p,
    className: f
  } = c, v = ue(c, $G), g = Zi();
  let b = p;
  typeof b > "u" && g && (b = g.filled || g.focused || g.adornedStart);
  const S = Bl({
    props: c,
    muiFormControl: g,
    states: ["size", "variant", "required", "focused"]
  }), R = x({}, c, {
    disableAnimation: d,
    formControl: g,
    shrink: b,
    size: S.size,
    variant: S.variant,
    required: S.required,
    focused: S.focused
  }), D = IG(R);
  return /* @__PURE__ */ z(LG, x({
    "data-shrink": b,
    ownerState: R,
    ref: i,
    className: ve(D.root, f)
  }, v, {
    classes: D
  }));
});
process.env.NODE_ENV !== "production" && ($$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: t.oneOfType([t.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), t.string]),
  /**
   * If `true`, the transition animation is disabled.
   * @default false
   */
  disableAnimation: t.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: t.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: t.bool,
  /**
   * If `true`, the `input` of this label is focused.
   */
  focused: t.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: t.oneOf(["dense"]),
  /**
   * if `true`, the label will indicate that the `input` is required.
   */
  required: t.bool,
  /**
   * If `true`, the label is shrunk.
   */
  shrink: t.bool,
  /**
   * The size of the component.
   * @default 'normal'
   */
  size: t.oneOfType([t.oneOf(["normal", "small"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   */
  variant: t.oneOf(["filled", "outlined", "standard"])
});
const AG = $$;
function _G(e) {
  return We("MuiLinearProgress", e);
}
const BG = Ge("MuiLinearProgress", ["root", "colorPrimary", "colorSecondary", "determinate", "indeterminate", "buffer", "query", "dashed", "dashedColorPrimary", "dashedColorSecondary", "bar", "barColorPrimary", "barColorSecondary", "bar1Indeterminate", "bar1Determinate", "bar1Buffer", "bar2Indeterminate", "bar2Buffer"]), wie = BG, zG = ["className", "color", "value", "valueBuffer", "variant"];
let Bf = (e) => e, tM, nM, oM, rM, aM, iM;
const F1 = 4, VG = Qi(tM || (tM = Bf`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`)), FG = Qi(nM || (nM = Bf`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`)), jG = Qi(oM || (oM = Bf`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`)), UG = (e) => {
  const {
    classes: o,
    variant: i,
    color: c
  } = e, d = {
    root: ["root", `color${ce(c)}`, i],
    dashed: ["dashed", `dashedColor${ce(c)}`],
    bar1: ["bar", `barColor${ce(c)}`, (i === "indeterminate" || i === "query") && "bar1Indeterminate", i === "determinate" && "bar1Determinate", i === "buffer" && "bar1Buffer"],
    bar2: ["bar", i !== "buffer" && `barColor${ce(c)}`, i === "buffer" && `color${ce(c)}`, (i === "indeterminate" || i === "query") && "bar2Indeterminate", i === "buffer" && "bar2Buffer"]
  };
  return Ye(d, _G, o);
}, Iw = (e, o) => o === "inherit" ? "currentColor" : e.vars ? e.vars.palette.LinearProgress[`${o}Bg`] : e.palette.mode === "light" ? e0(e.palette[o].main, 0.62) : t0(e.palette[o].main, 0.5), HG = ee("span", {
  name: "MuiLinearProgress",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[`color${ce(i.color)}`], o[i.variant]];
  }
})(({
  ownerState: e,
  theme: o
}) => x({
  position: "relative",
  overflow: "hidden",
  display: "block",
  height: 4,
  zIndex: 0,
  // Fix Safari's bug during composition of different paint.
  "@media print": {
    colorAdjust: "exact"
  },
  backgroundColor: Iw(o, e.color)
}, e.color === "inherit" && e.variant !== "buffer" && {
  backgroundColor: "none",
  "&::before": {
    content: '""',
    position: "absolute",
    left: 0,
    top: 0,
    right: 0,
    bottom: 0,
    backgroundColor: "currentColor",
    opacity: 0.3
  }
}, e.variant === "buffer" && {
  backgroundColor: "transparent"
}, e.variant === "query" && {
  transform: "rotate(180deg)"
})), WG = ee("span", {
  name: "MuiLinearProgress",
  slot: "Dashed",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.dashed, o[`dashedColor${ce(i.color)}`]];
  }
})(({
  ownerState: e,
  theme: o
}) => {
  const i = Iw(o, e.color);
  return x({
    position: "absolute",
    marginTop: 0,
    height: "100%",
    width: "100%"
  }, e.color === "inherit" && {
    opacity: 0.3
  }, {
    backgroundImage: `radial-gradient(${i} 0%, ${i} 16%, transparent 42%)`,
    backgroundSize: "10px 10px",
    backgroundPosition: "0 -23px"
  });
}, qc(rM || (rM = Bf`
    animation: ${0} 3s infinite linear;
  `), jG)), YG = ee("span", {
  name: "MuiLinearProgress",
  slot: "Bar1",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.bar, o[`barColor${ce(i.color)}`], (i.variant === "indeterminate" || i.variant === "query") && o.bar1Indeterminate, i.variant === "determinate" && o.bar1Determinate, i.variant === "buffer" && o.bar1Buffer];
  }
})(({
  ownerState: e,
  theme: o
}) => x({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  backgroundColor: e.color === "inherit" ? "currentColor" : (o.vars || o).palette[e.color].main
}, e.variant === "determinate" && {
  transition: `transform .${F1}s linear`
}, e.variant === "buffer" && {
  zIndex: 1,
  transition: `transform .${F1}s linear`
}), ({
  ownerState: e
}) => (e.variant === "indeterminate" || e.variant === "query") && qc(aM || (aM = Bf`
      width: auto;
      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
    `), VG)), GG = ee("span", {
  name: "MuiLinearProgress",
  slot: "Bar2",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.bar, o[`barColor${ce(i.color)}`], (i.variant === "indeterminate" || i.variant === "query") && o.bar2Indeterminate, i.variant === "buffer" && o.bar2Buffer];
  }
})(({
  ownerState: e,
  theme: o
}) => x({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left"
}, e.variant !== "buffer" && {
  backgroundColor: e.color === "inherit" ? "currentColor" : (o.vars || o).palette[e.color].main
}, e.color === "inherit" && {
  opacity: 0.3
}, e.variant === "buffer" && {
  backgroundColor: Iw(o, e.color),
  transition: `transform .${F1}s linear`
}), ({
  ownerState: e
}) => (e.variant === "indeterminate" || e.variant === "query") && qc(iM || (iM = Bf`
      width: auto;
      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
    `), FG)), I$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiLinearProgress"
  }), {
    className: d,
    color: p = "primary",
    value: f,
    valueBuffer: v,
    variant: g = "indeterminate"
  } = c, b = ue(c, zG), S = x({}, c, {
    color: p,
    variant: g
  }), R = UG(S), D = Mn(), k = {}, $ = {
    bar1: {},
    bar2: {}
  };
  if (g === "determinate" || g === "buffer")
    if (f !== void 0) {
      k["aria-valuenow"] = Math.round(f), k["aria-valuemin"] = 0, k["aria-valuemax"] = 100;
      let P = f - 100;
      D.direction === "rtl" && (P = -P), $.bar1.transform = `translateX(${P}%)`;
    } else
      process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a value prop when using the determinate or buffer variant of LinearProgress .");
  if (g === "buffer")
    if (v !== void 0) {
      let P = (v || 0) - 100;
      D.direction === "rtl" && (P = -P), $.bar2.transform = `translateX(${P}%)`;
    } else
      process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a valueBuffer prop when using the buffer variant of LinearProgress.");
  return /* @__PURE__ */ ht(HG, x({
    className: ve(R.root, d),
    ownerState: S,
    role: "progressbar"
  }, k, {
    ref: i
  }, b, {
    children: [g === "buffer" ? /* @__PURE__ */ z(WG, {
      className: R.dashed,
      ownerState: S
    }) : null, /* @__PURE__ */ z(YG, {
      className: R.bar1,
      ownerState: S,
      style: $.bar1
    }), g === "determinate" ? null : /* @__PURE__ */ z(GG, {
      className: R.bar2,
      ownerState: S,
      style: $.bar2
    })]
  }));
});
process.env.NODE_ENV !== "production" && (I$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["inherit", "primary", "secondary"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The value of the progress indicator for the determinate and buffer variants.
   * Value between 0 and 100.
   */
  value: t.number,
  /**
   * The value for the buffer variant.
   * Value between 0 and 100.
   */
  valueBuffer: t.number,
  /**
   * The variant to use.
   * Use indeterminate or query when there is no progress value.
   * @default 'indeterminate'
   */
  variant: t.oneOf(["buffer", "determinate", "indeterminate", "query"])
});
const qG = I$;
function KG(e) {
  return We("MuiLink", e);
}
const QG = Ge("MuiLink", ["root", "underlineNone", "underlineHover", "underlineAlways", "button", "focusVisible"]), XG = QG, L$ = {
  primary: "primary.main",
  textPrimary: "text.primary",
  secondary: "secondary.main",
  textSecondary: "text.secondary",
  error: "error.main"
}, ZG = (e) => L$[e] || e, JG = ({
  theme: e,
  ownerState: o
}) => {
  const i = ZG(o.color), c = _k(e, `palette.${i}`, !1) || o.color, d = _k(e, `palette.${i}Channel`);
  return "vars" in e && d ? `rgba(${d} / 0.4)` : Wt(c, 0.4);
}, eq = JG, tq = ["className", "color", "component", "onBlur", "onFocus", "TypographyClasses", "underline", "variant", "sx"], nq = (e) => {
  const {
    classes: o,
    component: i,
    focusVisible: c,
    underline: d
  } = e, p = {
    root: ["root", `underline${ce(d)}`, i === "button" && "button", c && "focusVisible"]
  };
  return Ye(p, KG, o);
}, oq = ee(wo, {
  name: "MuiLink",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[`underline${ce(i.underline)}`], i.component === "button" && o.button];
  }
})(({
  theme: e,
  ownerState: o
}) => x({}, o.underline === "none" && {
  textDecoration: "none"
}, o.underline === "hover" && {
  textDecoration: "none",
  "&:hover": {
    textDecoration: "underline"
  }
}, o.underline === "always" && x({
  textDecoration: "underline"
}, o.color !== "inherit" && {
  textDecorationColor: eq({
    theme: e,
    ownerState: o
  })
}, {
  "&:hover": {
    textDecorationColor: "inherit"
  }
}), o.component === "button" && {
  position: "relative",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${XG.focusVisible}`]: {
    outline: "auto"
  }
})), A$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiLink"
  }), {
    className: d,
    color: p = "primary",
    component: f = "a",
    onBlur: v,
    onFocus: g,
    TypographyClasses: b,
    underline: S = "always",
    variant: R = "inherit",
    sx: D
  } = c, k = ue(c, tq), {
    isFocusVisibleRef: $,
    onBlur: P,
    onFocus: O,
    ref: I
  } = If(), [_, A] = w.useState(!1), V = cn(i, I), B = (H) => {
    P(H), $.current === !1 && A(!1), v && v(H);
  }, M = (H) => {
    O(H), $.current === !0 && A(!0), g && g(H);
  }, F = x({}, c, {
    color: p,
    component: f,
    focusVisible: _,
    underline: S,
    variant: R
  }), Y = nq(F);
  return /* @__PURE__ */ z(oq, x({
    color: p,
    className: ve(Y.root, d),
    classes: b,
    component: f,
    onBlur: B,
    onFocus: M,
    ref: V,
    ownerState: F,
    variant: R,
    sx: [...Object.keys(L$).includes(p) ? [] : [{
      color: p
    }], ...Array.isArray(D) ? D : [D]]
  }, k));
});
process.env.NODE_ENV !== "production" && (A$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the link.
   * @default 'primary'
   */
  color: t.any,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: Kc,
  /**
   * @ignore
   */
  onBlur: t.func,
  /**
   * @ignore
   */
  onFocus: t.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.
   */
  TypographyClasses: t.object,
  /**
   * Controls when the link should have an underline.
   * @default 'always'
   */
  underline: t.oneOf(["always", "hover", "none"]),
  /**
   * Applies the theme typography styles.
   * @default 'inherit'
   */
  variant: t.oneOfType([t.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), t.string])
});
const Eie = A$, _$ = /* @__PURE__ */ w.createContext({});
process.env.NODE_ENV !== "production" && (_$.displayName = "ListContext");
const fi = _$;
function rq(e) {
  return We("MuiList", e);
}
const aq = Ge("MuiList", ["root", "padding", "dense", "subheader"]), Rie = aq, iq = ["children", "className", "component", "dense", "disablePadding", "subheader"], sq = (e) => {
  const {
    classes: o,
    disablePadding: i,
    dense: c,
    subheader: d
  } = e;
  return Ye({
    root: ["root", !i && "padding", c && "dense", d && "subheader"]
  }, rq, o);
}, lq = ee("ul", {
  name: "MuiList",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, !i.disablePadding && o.padding, i.dense && o.dense, i.subheader && o.subheader];
  }
})(({
  ownerState: e
}) => x({
  listStyle: "none",
  margin: 0,
  padding: 0,
  position: "relative"
}, !e.disablePadding && {
  paddingTop: 8,
  paddingBottom: 8
}, e.subheader && {
  paddingTop: 0
})), B$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiList"
  }), {
    children: d,
    className: p,
    component: f = "ul",
    dense: v = !1,
    disablePadding: g = !1,
    subheader: b
  } = c, S = ue(c, iq), R = w.useMemo(() => ({
    dense: v
  }), [v]), D = x({}, c, {
    component: f,
    dense: v,
    disablePadding: g
  }), k = sq(D);
  return /* @__PURE__ */ z(fi.Provider, {
    value: R,
    children: /* @__PURE__ */ ht(lq, x({
      as: f,
      className: ve(k.root, p),
      ref: i,
      ownerState: D
    }, S, {
      children: [b, d]
    }))
  });
});
process.env.NODE_ENV !== "production" && (B$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: t.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: t.bool,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const z$ = B$;
function cq(e) {
  return We("MuiListItem", e);
}
const uq = Ge("MuiListItem", ["root", "container", "focusVisible", "dense", "alignItemsFlexStart", "disabled", "divider", "gutters", "padding", "button", "secondaryAction", "selected"]), yf = uq;
function dq(e) {
  return We("MuiListItemButton", e);
}
const pq = Ge("MuiListItemButton", ["root", "focusVisible", "dense", "alignItemsFlexStart", "disabled", "divider", "gutters", "selected"]), bf = pq, fq = ["alignItems", "autoFocus", "component", "children", "dense", "disableGutters", "divider", "focusVisibleClassName", "selected", "className"], mq = (e, o) => {
  const {
    ownerState: i
  } = e;
  return [o.root, i.dense && o.dense, i.alignItems === "flex-start" && o.alignItemsFlexStart, i.divider && o.divider, !i.disableGutters && o.gutters];
}, hq = (e) => {
  const {
    alignItems: o,
    classes: i,
    dense: c,
    disabled: d,
    disableGutters: p,
    divider: f,
    selected: v
  } = e, b = Ye({
    root: ["root", c && "dense", !p && "gutters", f && "divider", d && "disabled", o === "flex-start" && "alignItemsFlexStart", v && "selected"]
  }, dq, i);
  return x({}, i, b);
}, vq = ee(Qo, {
  shouldForwardProp: (e) => Ao(e) || e === "classes",
  name: "MuiListItemButton",
  slot: "Root",
  overridesResolver: mq
})(({
  theme: e,
  ownerState: o
}) => x({
  display: "flex",
  flexGrow: 1,
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  minWidth: 0,
  boxSizing: "border-box",
  textAlign: "left",
  paddingTop: 8,
  paddingBottom: 8,
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.shortest
  }),
  "&:hover": {
    textDecoration: "none",
    backgroundColor: (e.vars || e).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${bf.selected}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Wt(e.palette.primary.main, e.palette.action.selectedOpacity),
    [`&.${bf.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Wt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
    }
  },
  [`&.${bf.selected}:hover`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Wt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Wt(e.palette.primary.main, e.palette.action.selectedOpacity)
    }
  },
  [`&.${bf.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette.action.focus
  },
  [`&.${bf.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  }
}, o.divider && {
  borderBottom: `1px solid ${(e.vars || e).palette.divider}`,
  backgroundClip: "padding-box"
}, o.alignItems === "flex-start" && {
  alignItems: "flex-start"
}, !o.disableGutters && {
  paddingLeft: 16,
  paddingRight: 16
}, o.dense && {
  paddingTop: 4,
  paddingBottom: 4
})), V$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiListItemButton"
  }), {
    alignItems: d = "center",
    autoFocus: p = !1,
    component: f = "div",
    children: v,
    dense: g = !1,
    disableGutters: b = !1,
    divider: S = !1,
    focusVisibleClassName: R,
    selected: D = !1,
    className: k
  } = c, $ = ue(c, fq), P = w.useContext(fi), O = w.useMemo(() => ({
    dense: g || P.dense || !1,
    alignItems: d,
    disableGutters: b
  }), [d, P.dense, g, b]), I = w.useRef(null);
  so(() => {
    p && (I.current ? I.current.focus() : process.env.NODE_ENV !== "production" && console.error("MUI: Unable to set focus to a ListItemButton whose component has not been rendered."));
  }, [p]);
  const _ = x({}, c, {
    alignItems: d,
    dense: O.dense,
    disableGutters: b,
    divider: S,
    selected: D
  }), A = hq(_), V = cn(I, i);
  return /* @__PURE__ */ z(fi.Provider, {
    value: O,
    children: /* @__PURE__ */ z(vq, x({
      ref: V,
      href: $.href || $.to,
      component: ($.href || $.to) && f === "div" ? "button" : f,
      focusVisibleClassName: ve(A.focusVisible, R),
      ownerState: _,
      className: ve(A.root, k)
    }, $, {
      classes: A,
      children: v
    }))
  });
});
process.env.NODE_ENV !== "production" && (V$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Defines the `align-items` style property.
   * @default 'center'
   */
  alignItems: t.oneOf(["center", "flex-start"]),
  /**
   * If `true`, the list item is focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   * @default false
   */
  autoFocus: t.bool,
  /**
   * The content of the component if a `ListItemSecondaryAction` is used it must
   * be the last child.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent List component.
   * @default false
   */
  dense: t.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: t.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the list item.
   * @default false
   */
  divider: t.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: t.string,
  /**
   * @ignore
   */
  href: t.string,
  /**
   * Use to apply selected styling.
   * @default false
   */
  selected: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Oie = V$;
function gq(e) {
  return We("MuiListItemSecondaryAction", e);
}
const yq = Ge("MuiListItemSecondaryAction", ["root", "disableGutters"]), kie = yq, bq = ["className"], Cq = (e) => {
  const {
    disableGutters: o,
    classes: i
  } = e;
  return Ye({
    root: ["root", o && "disableGutters"]
  }, gq, i);
}, xq = ee("div", {
  name: "MuiListItemSecondaryAction",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.disableGutters && o.disableGutters];
  }
})(({
  ownerState: e
}) => x({
  position: "absolute",
  right: 16,
  top: "50%",
  transform: "translateY(-50%)"
}, e.disableGutters && {
  right: 0
})), Lw = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiListItemSecondaryAction"
  }), {
    className: d
  } = c, p = ue(c, bq), f = w.useContext(fi), v = x({}, c, {
    disableGutters: f.disableGutters
  }), g = Cq(v);
  return /* @__PURE__ */ z(xq, x({
    className: ve(g.root, d),
    ownerState: v,
    ref: i
  }, p));
});
process.env.NODE_ENV !== "production" && (Lw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally an `IconButton` or selection control.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
Lw.muiName = "ListItemSecondaryAction";
const Sq = Lw, Tq = ["className"], wq = ["alignItems", "autoFocus", "button", "children", "className", "component", "components", "componentsProps", "ContainerComponent", "ContainerProps", "dense", "disabled", "disableGutters", "disablePadding", "divider", "focusVisibleClassName", "secondaryAction", "selected", "slotProps", "slots"], Eq = (e, o) => {
  const {
    ownerState: i
  } = e;
  return [o.root, i.dense && o.dense, i.alignItems === "flex-start" && o.alignItemsFlexStart, i.divider && o.divider, !i.disableGutters && o.gutters, !i.disablePadding && o.padding, i.button && o.button, i.hasSecondaryAction && o.secondaryAction];
}, Rq = (e) => {
  const {
    alignItems: o,
    button: i,
    classes: c,
    dense: d,
    disabled: p,
    disableGutters: f,
    disablePadding: v,
    divider: g,
    hasSecondaryAction: b,
    selected: S
  } = e;
  return Ye({
    root: ["root", d && "dense", !f && "gutters", !v && "padding", g && "divider", p && "disabled", i && "button", o === "flex-start" && "alignItemsFlexStart", b && "secondaryAction", S && "selected"],
    container: ["container"]
  }, cq, c);
}, Oq = ee("div", {
  name: "MuiListItem",
  slot: "Root",
  overridesResolver: Eq
})(({
  theme: e,
  ownerState: o
}) => x({
  display: "flex",
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  width: "100%",
  boxSizing: "border-box",
  textAlign: "left"
}, !o.disablePadding && x({
  paddingTop: 8,
  paddingBottom: 8
}, o.dense && {
  paddingTop: 4,
  paddingBottom: 4
}, !o.disableGutters && {
  paddingLeft: 16,
  paddingRight: 16
}, !!o.secondaryAction && {
  // Add some space to avoid collision as `ListItemSecondaryAction`
  // is absolutely positioned.
  paddingRight: 48
}), !!o.secondaryAction && {
  [`& > .${bf.root}`]: {
    paddingRight: 48
  }
}, {
  [`&.${yf.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette.action.focus
  },
  [`&.${yf.selected}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Wt(e.palette.primary.main, e.palette.action.selectedOpacity),
    [`&.${yf.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Wt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
    }
  },
  [`&.${yf.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  }
}, o.alignItems === "flex-start" && {
  alignItems: "flex-start"
}, o.divider && {
  borderBottom: `1px solid ${(e.vars || e).palette.divider}`,
  backgroundClip: "padding-box"
}, o.button && {
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.shortest
  }),
  "&:hover": {
    textDecoration: "none",
    backgroundColor: (e.vars || e).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${yf.selected}:hover`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Wt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Wt(e.palette.primary.main, e.palette.action.selectedOpacity)
    }
  }
}, o.hasSecondaryAction && {
  // Add some space to avoid collision as `ListItemSecondaryAction`
  // is absolutely positioned.
  paddingRight: 48
})), kq = ee("li", {
  name: "MuiListItem",
  slot: "Container",
  overridesResolver: (e, o) => o.container
})({
  position: "relative"
}), F$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiListItem"
  }), {
    alignItems: d = "center",
    autoFocus: p = !1,
    button: f = !1,
    children: v,
    className: g,
    component: b,
    components: S = {},
    componentsProps: R = {},
    ContainerComponent: D = "li",
    ContainerProps: {
      className: k
    } = {},
    dense: $ = !1,
    disabled: P = !1,
    disableGutters: O = !1,
    disablePadding: I = !1,
    divider: _ = !1,
    focusVisibleClassName: A,
    secondaryAction: V,
    selected: B = !1,
    slotProps: M = {},
    slots: F = {}
  } = c, Y = ue(c.ContainerProps, Tq), H = ue(c, wq), J = w.useContext(fi), W = w.useMemo(() => ({
    dense: $ || J.dense || !1,
    alignItems: d,
    disableGutters: O
  }), [d, J.dense, $, O]), te = w.useRef(null);
  so(() => {
    p && (te.current ? te.current.focus() : process.env.NODE_ENV !== "production" && console.error("MUI: Unable to set focus to a ListItem whose component has not been rendered."));
  }, [p]);
  const Z = w.Children.toArray(v), q = Z.length && As(Z[Z.length - 1], ["ListItemSecondaryAction"]), Q = x({}, c, {
    alignItems: d,
    autoFocus: p,
    button: f,
    dense: W.dense,
    disabled: P,
    disableGutters: O,
    disablePadding: I,
    divider: _,
    hasSecondaryAction: q,
    selected: B
  }), re = Rq(Q), ie = cn(te, i), K = F.root || S.Root || Oq, ne = M.root || R.root || {}, se = x({
    className: ve(re.root, ne.className, g),
    disabled: P
  }, H);
  let Fe = b || "li";
  return f && (se.component = b || "div", se.focusVisibleClassName = ve(yf.focusVisible, A), Fe = Qo), q ? (Fe = !se.component && !b ? "div" : Fe, D === "li" && (Fe === "li" ? Fe = "div" : se.component === "li" && (se.component = "div")), /* @__PURE__ */ z(fi.Provider, {
    value: W,
    children: /* @__PURE__ */ ht(kq, x({
      as: D,
      className: ve(re.container, k),
      ref: ie,
      ownerState: Q
    }, Y, {
      children: [/* @__PURE__ */ z(K, x({}, ne, !Gi(K) && {
        as: Fe,
        ownerState: x({}, Q, ne.ownerState)
      }, se, {
        children: Z
      })), Z.pop()]
    }))
  })) : /* @__PURE__ */ z(fi.Provider, {
    value: W,
    children: /* @__PURE__ */ ht(K, x({}, ne, {
      as: Fe,
      ref: ie
    }, !Gi(K) && {
      ownerState: x({}, Q, ne.ownerState)
    }, se, {
      children: [Z, V && /* @__PURE__ */ z(Sq, {
        children: V
      })]
    }))
  });
});
process.env.NODE_ENV !== "production" && (F$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Defines the `align-items` style property.
   * @default 'center'
   */
  alignItems: t.oneOf(["center", "flex-start"]),
  /**
   * If `true`, the list item is focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   * @default false
   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead
   */
  autoFocus: t.bool,
  /**
   * If `true`, the list item is a button (using `ButtonBase`). Props intended
   * for `ButtonBase` can then be applied to `ListItem`.
   * @default false
   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead
   */
  button: t.bool,
  /**
   * The content of the component if a `ListItemSecondaryAction` is used it must
   * be the last child.
   */
  children: Ko(t.node, (e) => {
    const o = w.Children.toArray(e.children);
    let i = -1;
    for (let c = o.length - 1; c >= 0; c -= 1) {
      const d = o[c];
      if (As(d, ["ListItemSecondaryAction"])) {
        i = c;
        break;
      }
    }
    return i !== -1 && i !== o.length - 1 ? new Error("MUI: You used an element after ListItemSecondaryAction. For ListItem to detect that it has a secondary action you must pass it as the last child to ListItem.") : null;
  }),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    Root: t.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: t.shape({
    root: t.object
  }),
  /**
   * The container component used when a `ListItemSecondaryAction` is the last child.
   * @default 'li'
   * @deprecated
   */
  ContainerComponent: Kc,
  /**
   * Props applied to the container component if used.
   * @default {}
   * @deprecated
   */
  ContainerProps: t.object,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent List component.
   * @default false
   */
  dense: t.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead
   */
  disabled: t.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: t.bool,
  /**
   * If `true`, all padding is removed.
   * @default false
   */
  disablePadding: t.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the list item.
   * @default false
   */
  divider: t.bool,
  /**
   * @ignore
   */
  focusVisibleClassName: t.string,
  /**
   * The element to display at the end of ListItem.
   */
  secondaryAction: t.node,
  /**
   * Use to apply selected styling.
   * @default false
   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead
   */
  selected: t.bool,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: t.shape({
    root: t.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: t.shape({
    root: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Dq = F$;
function Mq(e) {
  return We("MuiListItemAvatar", e);
}
const Nq = Ge("MuiListItemAvatar", ["root", "alignItemsFlexStart"]), Die = Nq, Pq = ["className"], $q = (e) => {
  const {
    alignItems: o,
    classes: i
  } = e;
  return Ye({
    root: ["root", o === "flex-start" && "alignItemsFlexStart"]
  }, Mq, i);
}, Iq = ee("div", {
  name: "MuiListItemAvatar",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.alignItems === "flex-start" && o.alignItemsFlexStart];
  }
})(({
  ownerState: e
}) => x({
  minWidth: 56,
  flexShrink: 0
}, e.alignItems === "flex-start" && {
  marginTop: 8
})), j$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiListItemAvatar"
  }), {
    className: d
  } = c, p = ue(c, Pq), f = w.useContext(fi), v = x({}, c, {
    alignItems: f.alignItems
  }), g = $q(v);
  return /* @__PURE__ */ z(Iq, x({
    className: ve(g.root, d),
    ownerState: v,
    ref: i
  }, p));
});
process.env.NODE_ENV !== "production" && (j$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally an `Avatar`.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Mie = j$;
function Lq(e) {
  return We("MuiListItemIcon", e);
}
const Aq = Ge("MuiListItemIcon", ["root", "alignItemsFlexStart"]), sM = Aq, _q = ["className"], Bq = (e) => {
  const {
    alignItems: o,
    classes: i
  } = e;
  return Ye({
    root: ["root", o === "flex-start" && "alignItemsFlexStart"]
  }, Lq, i);
}, zq = ee("div", {
  name: "MuiListItemIcon",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.alignItems === "flex-start" && o.alignItemsFlexStart];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  minWidth: 56,
  color: (e.vars || e).palette.action.active,
  flexShrink: 0,
  display: "inline-flex"
}, o.alignItems === "flex-start" && {
  marginTop: 8
})), U$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiListItemIcon"
  }), {
    className: d
  } = c, p = ue(c, _q), f = w.useContext(fi), v = x({}, c, {
    alignItems: f.alignItems
  }), g = Bq(v);
  return /* @__PURE__ */ z(zq, x({
    className: ve(g.root, d),
    ownerState: v,
    ref: i
  }, p));
});
process.env.NODE_ENV !== "production" && (U$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `Icon`, `SvgIcon`,
   * or a `@mui/icons-material` SVG icon element.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Nie = U$;
function Vq(e) {
  return We("MuiListItemText", e);
}
const Fq = Ge("MuiListItemText", ["root", "multiline", "dense", "inset", "primary", "secondary"]), KC = Fq, jq = ["children", "className", "disableTypography", "inset", "primary", "primaryTypographyProps", "secondary", "secondaryTypographyProps"], Uq = (e) => {
  const {
    classes: o,
    inset: i,
    primary: c,
    secondary: d,
    dense: p
  } = e;
  return Ye({
    root: ["root", i && "inset", p && "dense", c && d && "multiline"],
    primary: ["primary"],
    secondary: ["secondary"]
  }, Vq, o);
}, Hq = ee("div", {
  name: "MuiListItemText",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [{
      [`& .${KC.primary}`]: o.primary
    }, {
      [`& .${KC.secondary}`]: o.secondary
    }, o.root, i.inset && o.inset, i.primary && i.secondary && o.multiline, i.dense && o.dense];
  }
})(({
  ownerState: e
}) => x({
  flex: "1 1 auto",
  minWidth: 0,
  marginTop: 4,
  marginBottom: 4
}, e.primary && e.secondary && {
  marginTop: 6,
  marginBottom: 6
}, e.inset && {
  paddingLeft: 56
})), H$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiListItemText"
  }), {
    children: d,
    className: p,
    disableTypography: f = !1,
    inset: v = !1,
    primary: g,
    primaryTypographyProps: b,
    secondary: S,
    secondaryTypographyProps: R
  } = c, D = ue(c, jq), {
    dense: k
  } = w.useContext(fi);
  let $ = g ?? d, P = S;
  const O = x({}, c, {
    disableTypography: f,
    inset: v,
    primary: !!$,
    secondary: !!P,
    dense: k
  }), I = Uq(O);
  return $ != null && $.type !== wo && !f && ($ = /* @__PURE__ */ z(wo, x({
    variant: k ? "body2" : "body1",
    className: I.primary,
    component: b != null && b.variant ? void 0 : "span",
    display: "block"
  }, b, {
    children: $
  }))), P != null && P.type !== wo && !f && (P = /* @__PURE__ */ z(wo, x({
    variant: "body2",
    className: I.secondary,
    color: "text.secondary",
    display: "block"
  }, R, {
    children: P
  }))), /* @__PURE__ */ ht(Hq, x({
    className: ve(I.root, p),
    ownerState: O,
    ref: i
  }, D, {
    children: [$, P]
  }));
});
process.env.NODE_ENV !== "production" && (H$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Alias for the `primary` prop.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, the children won't be wrapped by a Typography component.
   * This can be useful to render an alternative Typography variant by wrapping
   * the `children` (or `primary`) text, and optional `secondary` text
   * with the Typography component.
   * @default false
   */
  disableTypography: t.bool,
  /**
   * If `true`, the children are indented.
   * This should be used if there is no left avatar or left icon.
   * @default false
   */
  inset: t.bool,
  /**
   * The main content element.
   */
  primary: t.node,
  /**
   * These props will be forwarded to the primary typography component
   * (as long as disableTypography is not `true`).
   */
  primaryTypographyProps: t.object,
  /**
   * The secondary content element.
   */
  secondary: t.node,
  /**
   * These props will be forwarded to the secondary typography component
   * (as long as disableTypography is not `true`).
   */
  secondaryTypographyProps: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Pie = H$, Wq = ["actions", "autoFocus", "autoFocusItem", "children", "className", "disabledItemsFocusable", "disableListWrap", "onKeyDown", "variant"];
function v1(e, o, i) {
  return e === o ? e.firstChild : o && o.nextElementSibling ? o.nextElementSibling : i ? null : e.firstChild;
}
function lM(e, o, i) {
  return e === o ? i ? e.firstChild : e.lastChild : o && o.previousElementSibling ? o.previousElementSibling : i ? null : e.lastChild;
}
function W$(e, o) {
  if (o === void 0)
    return !0;
  let i = e.innerText;
  return i === void 0 && (i = e.textContent), i = i.trim().toLowerCase(), i.length === 0 ? !1 : o.repeating ? i[0] === o.keys[0] : i.indexOf(o.keys.join("")) === 0;
}
function av(e, o, i, c, d, p) {
  let f = !1, v = d(e, o, o ? i : !1);
  for (; v; ) {
    if (v === e.firstChild) {
      if (f)
        return !1;
      f = !0;
    }
    const g = c ? !1 : v.disabled || v.getAttribute("aria-disabled") === "true";
    if (!v.hasAttribute("tabindex") || !W$(v, p) || g)
      v = d(e, v, i);
    else
      return v.focus(), !0;
  }
  return !1;
}
const Y$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: c,
    autoFocus: d = !1,
    autoFocusItem: p = !1,
    children: f,
    className: v,
    disabledItemsFocusable: g = !1,
    disableListWrap: b = !1,
    onKeyDown: S,
    variant: R = "selectedMenu"
  } = o, D = ue(o, Wq), k = w.useRef(null), $ = w.useRef({
    keys: [],
    repeating: !0,
    previousKeyMatched: !0,
    lastTime: null
  });
  so(() => {
    d && k.current.focus();
  }, [d]), w.useImperativeHandle(c, () => ({
    adjustStyleForScrollbar: (A, V) => {
      const B = !k.current.style.width;
      if (A.clientHeight < k.current.clientHeight && B) {
        const M = `${vN(Dn(A))}px`;
        k.current.style[V.direction === "rtl" ? "paddingLeft" : "paddingRight"] = M, k.current.style.width = `calc(100% + ${M})`;
      }
      return k.current;
    }
  }), []);
  const P = (A) => {
    const V = k.current, B = A.key, M = Dn(V).activeElement;
    if (B === "ArrowDown")
      A.preventDefault(), av(V, M, b, g, v1);
    else if (B === "ArrowUp")
      A.preventDefault(), av(V, M, b, g, lM);
    else if (B === "Home")
      A.preventDefault(), av(V, null, b, g, v1);
    else if (B === "End")
      A.preventDefault(), av(V, null, b, g, lM);
    else if (B.length === 1) {
      const F = $.current, Y = B.toLowerCase(), H = performance.now();
      F.keys.length > 0 && (H - F.lastTime > 500 ? (F.keys = [], F.repeating = !0, F.previousKeyMatched = !0) : F.repeating && Y !== F.keys[0] && (F.repeating = !1)), F.lastTime = H, F.keys.push(Y);
      const J = M && !F.repeating && W$(M, F);
      F.previousKeyMatched && (J || av(V, M, !1, g, v1, F)) ? A.preventDefault() : F.previousKeyMatched = !1;
    }
    S && S(A);
  }, O = cn(k, i);
  let I = -1;
  w.Children.forEach(f, (A, V) => {
    if (!/* @__PURE__ */ w.isValidElement(A)) {
      I === V && (I += 1, I >= f.length && (I = -1));
      return;
    }
    process.env.NODE_ENV !== "production" && Xi.isFragment(A) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), A.props.disabled || (R === "selectedMenu" && A.props.selected || I === -1) && (I = V), I === V && (A.props.disabled || A.props.muiSkipListHighlight || A.type.muiSkipListHighlight) && (I += 1, I >= f.length && (I = -1));
  });
  const _ = w.Children.map(f, (A, V) => {
    if (V === I) {
      const B = {};
      return p && (B.autoFocus = !0), A.props.tabIndex === void 0 && R === "selectedMenu" && (B.tabIndex = 0), /* @__PURE__ */ w.cloneElement(A, B);
    }
    return A;
  });
  return /* @__PURE__ */ z(z$, x({
    role: "menu",
    ref: O,
    className: v,
    onKeyDown: P,
    tabIndex: d ? 0 : -1
  }, D, {
    children: _
  }));
});
process.env.NODE_ENV !== "production" && (Y$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, will focus the `[role="menu"]` container and move into tab order.
   * @default false
   */
  autoFocus: t.bool,
  /**
   * If `true`, will focus the first menuitem if `variant="menu"` or selected item
   * if `variant="selectedMenu"`.
   * @default false
   */
  autoFocusItem: t.bool,
  /**
   * MenuList contents, normally `MenuItem`s.
   */
  children: t.node,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: t.bool,
  /**
   * If `true`, the menu items will not wrap focus.
   * @default false
   */
  disableListWrap: t.bool,
  /**
   * @ignore
   */
  onKeyDown: t.func,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   * @default 'selectedMenu'
   */
  variant: t.oneOf(["menu", "selectedMenu"])
});
const Yq = Y$;
function Gq(e) {
  return We("MuiPopover", e);
}
const qq = Ge("MuiPopover", ["root", "paper"]), $ie = qq, Kq = ["onEntering"], Qq = ["action", "anchorEl", "anchorOrigin", "anchorPosition", "anchorReference", "children", "className", "container", "elevation", "marginThreshold", "open", "PaperProps", "slots", "slotProps", "transformOrigin", "TransitionComponent", "transitionDuration", "TransitionProps", "disableScrollLock"], Xq = ["slotProps"];
function cM(e, o) {
  let i = 0;
  return typeof o == "number" ? i = o : o === "center" ? i = e.height / 2 : o === "bottom" && (i = e.height), i;
}
function uM(e, o) {
  let i = 0;
  return typeof o == "number" ? i = o : o === "center" ? i = e.width / 2 : o === "right" && (i = e.width), i;
}
function dM(e) {
  return [e.horizontal, e.vertical].map((o) => typeof o == "number" ? `${o}px` : o).join(" ");
}
function NC(e) {
  return typeof e == "function" ? e() : e;
}
const Zq = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"],
    paper: ["paper"]
  }, Gq, o);
}, Jq = ee(Ow, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({}), G$ = ee(Ya, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, o) => o.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), q$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d, p;
  const f = Ue({
    props: o,
    name: "MuiPopover"
  }), {
    action: v,
    anchorEl: g,
    anchorOrigin: b = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: S,
    anchorReference: R = "anchorEl",
    children: D,
    className: k,
    container: $,
    elevation: P = 8,
    marginThreshold: O = 16,
    open: I,
    PaperProps: _ = {},
    slots: A,
    slotProps: V,
    transformOrigin: B = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: M = Bv,
    transitionDuration: F = "auto",
    TransitionProps: {
      onEntering: Y
    } = {},
    disableScrollLock: H = !1
  } = f, J = ue(f.TransitionProps, Kq), W = ue(f, Qq), te = (c = V == null ? void 0 : V.paper) != null ? c : _, Z = w.useRef(), q = cn(Z, te.ref), Q = x({}, f, {
    anchorOrigin: b,
    anchorReference: R,
    elevation: P,
    marginThreshold: O,
    externalPaperSlotProps: te,
    transformOrigin: B,
    TransitionComponent: M,
    transitionDuration: F,
    TransitionProps: J
  }), re = Zq(Q), ie = w.useCallback(() => {
    if (R === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (S || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), S;
    const ye = NC(g), ae = ye && ye.nodeType === 1 ? ye : Dn(Z.current).body, $e = ae.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const Se = ae.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && Se.top === 0 && Se.left === 0 && Se.right === 0 && Se.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: $e.top + cM($e, b.vertical),
      left: $e.left + uM($e, b.horizontal)
    };
  }, [g, b.horizontal, b.vertical, S, R]), K = w.useCallback((ye) => ({
    vertical: cM(ye, B.vertical),
    horizontal: uM(ye, B.horizontal)
  }), [B.horizontal, B.vertical]), ne = w.useCallback((ye) => {
    const ae = {
      width: ye.offsetWidth,
      height: ye.offsetHeight
    }, $e = K(ae);
    if (R === "none")
      return {
        top: null,
        left: null,
        transformOrigin: dM($e)
      };
    const Se = ie();
    let mt = Se.top - $e.vertical, Be = Se.left - $e.horizontal;
    const ft = mt + ae.height, je = Be + ae.width, Ve = Wr(NC(g)), st = Ve.innerHeight - O, gt = Ve.innerWidth - O;
    if (O !== null && mt < O) {
      const Tt = mt - O;
      mt -= Tt, $e.vertical += Tt;
    } else if (O !== null && ft > st) {
      const Tt = ft - st;
      mt -= Tt, $e.vertical += Tt;
    }
    if (process.env.NODE_ENV !== "production" && ae.height > st && ae.height && st && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${ae.height - st}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), O !== null && Be < O) {
      const Tt = Be - O;
      Be -= Tt, $e.horizontal += Tt;
    } else if (je > gt) {
      const Tt = je - gt;
      Be -= Tt, $e.horizontal += Tt;
    }
    return {
      top: `${Math.round(mt)}px`,
      left: `${Math.round(Be)}px`,
      transformOrigin: dM($e)
    };
  }, [g, R, ie, K, O]), [se, Fe] = w.useState(I), qe = w.useCallback(() => {
    const ye = Z.current;
    if (!ye)
      return;
    const ae = ne(ye);
    ae.top !== null && (ye.style.top = ae.top), ae.left !== null && (ye.style.left = ae.left), ye.style.transformOrigin = ae.transformOrigin, Fe(!0);
  }, [ne]);
  w.useEffect(() => (H && window.addEventListener("scroll", qe), () => window.removeEventListener("scroll", qe)), [g, H, qe]);
  const Me = (ye, ae) => {
    Y && Y(ye, ae), qe();
  }, fe = () => {
    Fe(!1);
  };
  w.useEffect(() => {
    I && qe();
  }), w.useImperativeHandle(v, () => I ? {
    updatePosition: () => {
      qe();
    }
  } : null, [I, qe]), w.useEffect(() => {
    if (!I)
      return;
    const ye = $f(() => {
      qe();
    }), ae = Wr(g);
    return ae.addEventListener("resize", ye), () => {
      ye.clear(), ae.removeEventListener("resize", ye);
    };
  }, [g, I, qe]);
  let De = F;
  F === "auto" && !M.muiSupportAuto && (De = void 0);
  const be = $ || (g ? Dn(NC(g)).body : void 0), Ce = (d = A == null ? void 0 : A.root) != null ? d : Jq, de = (p = A == null ? void 0 : A.paper) != null ? p : G$, Ae = ln({
    elementType: de,
    externalSlotProps: x({}, te, {
      style: se ? te.style : x({}, te.style, {
        opacity: 0
      })
    }),
    additionalProps: {
      elevation: P,
      ref: q
    },
    ownerState: Q,
    className: ve(re.paper, te == null ? void 0 : te.className)
  }), at = ln({
    elementType: Ce,
    externalSlotProps: (V == null ? void 0 : V.root) || {},
    externalForwardedProps: W,
    additionalProps: {
      ref: i,
      slotProps: {
        backdrop: {
          invisible: !0
        }
      },
      container: be,
      open: I
    },
    ownerState: Q,
    className: ve(re.root, k)
  }), {
    slotProps: Oe
  } = at, _e = ue(at, Xq);
  return /* @__PURE__ */ z(Ce, x({}, _e, !Gi(Ce) && {
    slotProps: Oe,
    disableScrollLock: H
  }, {
    children: /* @__PURE__ */ z(M, x({
      appear: !0,
      in: I,
      onEntering: Me,
      onExited: fe,
      timeout: De
    }, J, {
      children: /* @__PURE__ */ z(de, x({}, Ae, {
        children: D
      }))
    }))
  }));
});
process.env.NODE_ENV !== "production" && (q$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: Lo,
  /**
   * An HTML element, [PopoverVirtualElement](/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: Ko(t.oneOfType([zs, t.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const o = NC(e.anchorEl);
      if (o && o.nodeType === 1) {
        const i = o.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && i.top === 0 && i.left === 0 && i.right === 0 && i.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${o}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: t.shape({
    horizontal: t.oneOfType([t.oneOf(["center", "left", "right"]), t.number]).isRequired,
    vertical: t.oneOfType([t.oneOf(["bottom", "center", "top"]), t.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: t.shape({
    left: t.number.isRequired,
    top: t.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: t.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: t.oneOfType([zs, t.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: t.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: To,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: t.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: t.func,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool.isRequired,
  /**
   * Props applied to the [`Paper`](/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: t.shape({
    component: Kc
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @default {}
   */
  slotProps: t.shape({
    paper: t.oneOfType([t.func, t.object]),
    root: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside.
   *
   * @default {}
   */
  slots: t.shape({
    paper: t.elementType,
    root: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: t.shape({
    horizontal: t.oneOfType([t.oneOf(["center", "left", "right"]), t.number]).isRequired,
    vertical: t.oneOfType([t.oneOf(["bottom", "center", "top"]), t.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Grow
   */
  TransitionComponent: t.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: t.oneOfType([t.oneOf(["auto"]), t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @default {}
   */
  TransitionProps: t.object
});
const eK = q$;
function tK(e) {
  return We("MuiMenu", e);
}
const nK = Ge("MuiMenu", ["root", "paper", "list"]), Iie = nK, oK = ["onEntering"], rK = ["autoFocus", "children", "className", "disableAutoFocusItem", "MenuListProps", "onClose", "open", "PaperProps", "PopoverClasses", "transitionDuration", "TransitionProps", "variant", "slots", "slotProps"], aK = {
  vertical: "top",
  horizontal: "right"
}, iK = {
  vertical: "top",
  horizontal: "left"
}, sK = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"],
    paper: ["paper"],
    list: ["list"]
  }, tK, o);
}, lK = ee(eK, {
  shouldForwardProp: (e) => Ao(e) || e === "classes",
  name: "MuiMenu",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({}), cK = ee(G$, {
  name: "MuiMenu",
  slot: "Paper",
  overridesResolver: (e, o) => o.paper
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tappable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: "calc(100% - 96px)",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
}), uK = ee(Yq, {
  name: "MuiMenu",
  slot: "List",
  overridesResolver: (e, o) => o.list
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), K$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d;
  const p = Ue({
    props: o,
    name: "MuiMenu"
  }), {
    autoFocus: f = !0,
    children: v,
    className: g,
    disableAutoFocusItem: b = !1,
    MenuListProps: S = {},
    onClose: R,
    open: D,
    PaperProps: k = {},
    PopoverClasses: $,
    transitionDuration: P = "auto",
    TransitionProps: {
      onEntering: O
    } = {},
    variant: I = "selectedMenu",
    slots: _ = {},
    slotProps: A = {}
  } = p, V = ue(p.TransitionProps, oK), B = ue(p, rK), M = Mn(), F = M.direction === "rtl", Y = x({}, p, {
    autoFocus: f,
    disableAutoFocusItem: b,
    MenuListProps: S,
    onEntering: O,
    PaperProps: k,
    transitionDuration: P,
    TransitionProps: V,
    variant: I
  }), H = sK(Y), J = f && !b && D, W = w.useRef(null), te = (ne, se) => {
    W.current && W.current.adjustStyleForScrollbar(ne, M), O && O(ne, se);
  }, Z = (ne) => {
    ne.key === "Tab" && (ne.preventDefault(), R && R(ne, "tabKeyDown"));
  };
  let q = -1;
  w.Children.map(v, (ne, se) => {
    /* @__PURE__ */ w.isValidElement(ne) && (process.env.NODE_ENV !== "production" && Xi.isFragment(ne) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), ne.props.disabled || (I === "selectedMenu" && ne.props.selected || q === -1) && (q = se));
  });
  const Q = (c = _.paper) != null ? c : cK, re = (d = A.paper) != null ? d : k, ie = ln({
    elementType: _.root,
    externalSlotProps: A.root,
    ownerState: Y,
    className: [H.root, g]
  }), K = ln({
    elementType: Q,
    externalSlotProps: re,
    ownerState: Y,
    className: H.paper
  });
  return /* @__PURE__ */ z(lK, x({
    onClose: R,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: F ? "right" : "left"
    },
    transformOrigin: F ? aK : iK,
    slots: {
      paper: Q,
      root: _.root
    },
    slotProps: {
      root: ie,
      paper: K
    },
    open: D,
    ref: i,
    transitionDuration: P,
    TransitionProps: x({
      onEntering: te
    }, V),
    ownerState: Y
  }, B, {
    classes: $,
    children: /* @__PURE__ */ z(uK, x({
      onKeyDown: Z,
      actions: W,
      autoFocus: f && (q === -1 || b),
      autoFocusItem: J,
      variant: I
    }, S, {
      className: ve(H.list, S.className),
      children: v
    }))
  }));
});
process.env.NODE_ENV !== "production" && (K$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the position of the menu.
   */
  anchorEl: t.oneOfType([zs, t.func]),
  /**
   * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
   * children are not focusable. If you set this prop to `false` focus will be placed
   * on the parent modal container. This has severe accessibility implications
   * and should only be considered if you manage focus otherwise.
   * @default true
   */
  autoFocus: t.bool,
  /**
   * Menu contents, normally `MenuItem`s.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * When opening the menu will not focus the active item but the `[role="menu"]`
   * unless `autoFocus` is also set to `false`. Not using the default means not
   * following WAI-ARIA authoring practices. Please be considerate about possible
   * accessibility implications.
   * @default false
   */
  disableAutoFocusItem: t.bool,
  /**
   * Props applied to the [`MenuList`](/material-ui/api/menu-list/) element.
   * @default {}
   */
  MenuListProps: t.object,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
   */
  onClose: t.func,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: t.object,
  /**
   * `classes` prop applied to the [`Popover`](/material-ui/api/popover/) element.
   */
  PopoverClasses: t.object,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @default {}
   */
  slotProps: t.shape({
    paper: t.oneOfType([t.func, t.object]),
    root: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside.
   *
   * @default {}
   */
  slots: t.shape({
    paper: t.elementType,
    root: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The length of the transition in `ms`, or 'auto'
   * @default 'auto'
   */
  transitionDuration: t.oneOfType([t.oneOf(["auto"]), t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @default {}
   */
  TransitionProps: t.object,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.
   * @default 'selectedMenu'
   */
  variant: t.oneOf(["menu", "selectedMenu"])
});
const dK = K$;
function pK(e) {
  return We("MuiMenuItem", e);
}
const fK = Ge("MuiMenuItem", ["root", "focusVisible", "dense", "disabled", "divider", "gutters", "selected"]), iv = fK, mK = ["autoFocus", "component", "dense", "divider", "disableGutters", "focusVisibleClassName", "role", "tabIndex", "className"], hK = (e, o) => {
  const {
    ownerState: i
  } = e;
  return [o.root, i.dense && o.dense, i.divider && o.divider, !i.disableGutters && o.gutters];
}, vK = (e) => {
  const {
    disabled: o,
    dense: i,
    divider: c,
    disableGutters: d,
    selected: p,
    classes: f
  } = e, g = Ye({
    root: ["root", i && "dense", o && "disabled", !d && "gutters", c && "divider", p && "selected"]
  }, pK, f);
  return x({}, f, g);
}, gK = ee(Qo, {
  shouldForwardProp: (e) => Ao(e) || e === "classes",
  name: "MuiMenuItem",
  slot: "Root",
  overridesResolver: hK
})(({
  theme: e,
  ownerState: o
}) => x({}, e.typography.body1, {
  display: "flex",
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  minHeight: 48,
  paddingTop: 6,
  paddingBottom: 6,
  boxSizing: "border-box",
  whiteSpace: "nowrap"
}, !o.disableGutters && {
  paddingLeft: 16,
  paddingRight: 16
}, o.divider && {
  borderBottom: `1px solid ${(e.vars || e).palette.divider}`,
  backgroundClip: "padding-box"
}, {
  "&:hover": {
    textDecoration: "none",
    backgroundColor: (e.vars || e).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${iv.selected}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Wt(e.palette.primary.main, e.palette.action.selectedOpacity),
    [`&.${iv.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Wt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
    }
  },
  [`&.${iv.selected}:hover`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Wt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Wt(e.palette.primary.main, e.palette.action.selectedOpacity)
    }
  },
  [`&.${iv.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette.action.focus
  },
  [`&.${iv.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  },
  [`& + .${YD.root}`]: {
    marginTop: e.spacing(1),
    marginBottom: e.spacing(1)
  },
  [`& + .${YD.inset}`]: {
    marginLeft: 52
  },
  [`& .${KC.root}`]: {
    marginTop: 0,
    marginBottom: 0
  },
  [`& .${KC.inset}`]: {
    paddingLeft: 36
  },
  [`& .${sM.root}`]: {
    minWidth: 36
  }
}, !o.dense && {
  [e.breakpoints.up("sm")]: {
    minHeight: "auto"
  }
}, o.dense && x({
  minHeight: 32,
  // https://m2.material.io/components/menus#specs > Dense
  paddingTop: 4,
  paddingBottom: 4
}, e.typography.body2, {
  [`& .${sM.root} svg`]: {
    fontSize: "1.25rem"
  }
}))), Q$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiMenuItem"
  }), {
    autoFocus: d = !1,
    component: p = "li",
    dense: f = !1,
    divider: v = !1,
    disableGutters: g = !1,
    focusVisibleClassName: b,
    role: S = "menuitem",
    tabIndex: R,
    className: D
  } = c, k = ue(c, mK), $ = w.useContext(fi), P = w.useMemo(() => ({
    dense: f || $.dense || !1,
    disableGutters: g
  }), [$.dense, f, g]), O = w.useRef(null);
  so(() => {
    d && (O.current ? O.current.focus() : process.env.NODE_ENV !== "production" && console.error("MUI: Unable to set focus to a MenuItem whose component has not been rendered."));
  }, [d]);
  const I = x({}, c, {
    dense: P.dense,
    divider: v,
    disableGutters: g
  }), _ = vK(c), A = cn(O, i);
  let V;
  return c.disabled || (V = R !== void 0 ? R : -1), /* @__PURE__ */ z(fi.Provider, {
    value: P,
    children: /* @__PURE__ */ z(gK, x({
      ref: A,
      role: S,
      tabIndex: V,
      component: p,
      focusVisibleClassName: ve(_.focusVisible, b),
      className: ve(_.root, D)
    }, k, {
      ownerState: I,
      classes: _
    }))
  });
});
process.env.NODE_ENV !== "production" && (Q$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the list item is focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   * @default false
   */
  autoFocus: t.bool,
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent Menu component.
   * @default false
   */
  dense: t.bool,
  /**
   * @ignore
   */
  disabled: t.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: t.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the menu item.
   * @default false
   */
  divider: t.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: t.string,
  /**
   * @ignore
   */
  role: t.string,
  /**
   * If `true`, the component is selected.
   * @default false
   */
  selected: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * @default 0
   */
  tabIndex: t.number
});
const yK = Q$;
function bK(e) {
  return We("MuiMobileStepper", e);
}
const CK = Ge("MuiMobileStepper", ["root", "positionBottom", "positionTop", "positionStatic", "dots", "dot", "dotActive", "progress"]), Lie = CK, xK = ["activeStep", "backButton", "className", "LinearProgressProps", "nextButton", "position", "steps", "variant"], SK = (e) => {
  const {
    classes: o,
    position: i
  } = e, c = {
    root: ["root", `position${ce(i)}`],
    dots: ["dots"],
    dot: ["dot"],
    dotActive: ["dotActive"],
    progress: ["progress"]
  };
  return Ye(c, bK, o);
}, TK = ee(Ya, {
  name: "MuiMobileStepper",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[`position${ce(i.position)}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  display: "flex",
  flexDirection: "row",
  justifyContent: "space-between",
  alignItems: "center",
  background: (e.vars || e).palette.background.default,
  padding: 8
}, o.position === "bottom" && {
  position: "fixed",
  bottom: 0,
  left: 0,
  right: 0,
  zIndex: (e.vars || e).zIndex.mobileStepper
}, o.position === "top" && {
  position: "fixed",
  top: 0,
  left: 0,
  right: 0,
  zIndex: (e.vars || e).zIndex.mobileStepper
})), wK = ee("div", {
  name: "MuiMobileStepper",
  slot: "Dots",
  overridesResolver: (e, o) => o.dots
})(({
  ownerState: e
}) => x({}, e.variant === "dots" && {
  display: "flex",
  flexDirection: "row"
})), EK = ee("div", {
  name: "MuiMobileStepper",
  slot: "Dot",
  shouldForwardProp: (e) => Gv(e) && e !== "dotActive",
  overridesResolver: (e, o) => {
    const {
      dotActive: i
    } = e;
    return [o.dot, i && o.dotActive];
  }
})(({
  theme: e,
  ownerState: o,
  dotActive: i
}) => x({}, o.variant === "dots" && x({
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.shortest
  }),
  backgroundColor: (e.vars || e).palette.action.disabled,
  borderRadius: "50%",
  width: 8,
  height: 8,
  margin: "0 2px"
}, i && {
  backgroundColor: (e.vars || e).palette.primary.main
}))), RK = ee(qG, {
  name: "MuiMobileStepper",
  slot: "Progress",
  overridesResolver: (e, o) => o.progress
})(({
  ownerState: e
}) => x({}, e.variant === "progress" && {
  width: "50%"
})), X$ = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiMobileStepper"
  }), {
    activeStep: d = 0,
    backButton: p,
    className: f,
    LinearProgressProps: v,
    nextButton: g,
    position: b = "bottom",
    steps: S,
    variant: R = "dots"
  } = c, D = ue(c, xK), k = x({}, c, {
    activeStep: d,
    position: b,
    variant: R
  });
  let $;
  R === "progress" && (S === 1 ? $ = 100 : $ = Math.ceil(d / (S - 1) * 100));
  const P = SK(k);
  return /* @__PURE__ */ ht(TK, x({
    square: !0,
    elevation: 0,
    className: ve(P.root, f),
    ref: i,
    ownerState: k
  }, D, {
    children: [p, R === "text" && /* @__PURE__ */ ht(w.Fragment, {
      children: [d + 1, " / ", S]
    }), R === "dots" && /* @__PURE__ */ z(wK, {
      ownerState: k,
      className: P.dots,
      children: [...new Array(S)].map((O, I) => /* @__PURE__ */ z(EK, {
        className: ve(P.dot, I === d && P.dotActive),
        ownerState: k,
        dotActive: I === d
      }, I))
    }), R === "progress" && /* @__PURE__ */ z(RK, x({
      ownerState: k,
      className: P.progress,
      variant: "determinate",
      value: $
    }, v)), g]
  }));
});
process.env.NODE_ENV !== "production" && (X$.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the active step (zero based index).
   * Defines which dot is highlighted when the variant is 'dots'.
   * @default 0
   */
  activeStep: To,
  /**
   * A back button element. For instance, it can be a `Button` or an `IconButton`.
   */
  backButton: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Props applied to the `LinearProgress` element.
   */
  LinearProgressProps: t.object,
  /**
   * A next button element. For instance, it can be a `Button` or an `IconButton`.
   */
  nextButton: t.node,
  /**
   * Set the positioning type.
   * @default 'bottom'
   */
  position: t.oneOf(["bottom", "static", "top"]),
  /**
   * The total steps.
   */
  steps: To.isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * @default 'dots'
   */
  variant: t.oneOf(["dots", "progress", "text"])
});
const Aie = X$;
function Z$(e) {
  return We("MuiNativeSelect", e);
}
const OK = Ge("MuiNativeSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]), Aw = OK, kK = ["className", "disabled", "error", "IconComponent", "inputRef", "variant"], DK = (e) => {
  const {
    classes: o,
    variant: i,
    disabled: c,
    multiple: d,
    open: p,
    error: f
  } = e, v = {
    select: ["select", i, c && "disabled", d && "multiple", f && "error"],
    icon: ["icon", `icon${ce(i)}`, p && "iconOpen", c && "disabled"]
  };
  return Ye(v, Z$, o);
}, J$ = ({
  ownerState: e,
  theme: o
}) => x({
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  // When interacting quickly, the text can end up selected.
  // Native select can't be selected either.
  userSelect: "none",
  borderRadius: 0,
  // Reset
  cursor: "pointer",
  "&:focus": x({}, o.vars ? {
    backgroundColor: `rgba(${o.vars.palette.common.onBackgroundChannel} / 0.05)`
  } : {
    backgroundColor: o.palette.mode === "light" ? "rgba(0, 0, 0, 0.05)" : "rgba(255, 255, 255, 0.05)"
  }, {
    borderRadius: 0
    // Reset Chrome style
  }),
  // Remove IE11 arrow
  "&::-ms-expand": {
    display: "none"
  },
  [`&.${Aw.disabled}`]: {
    cursor: "default"
  },
  "&[multiple]": {
    height: "auto"
  },
  "&:not([multiple]) option, &:not([multiple]) optgroup": {
    backgroundColor: (o.vars || o).palette.background.paper
  },
  // Bump specificity to allow extending custom inputs
  "&&&": {
    paddingRight: 24,
    minWidth: 16
    // So it doesn't collapse.
  }
}, e.variant === "filled" && {
  "&&&": {
    paddingRight: 32
  }
}, e.variant === "outlined" && {
  borderRadius: (o.vars || o).shape.borderRadius,
  "&:focus": {
    borderRadius: (o.vars || o).shape.borderRadius
    // Reset the reset for Chrome style
  },
  "&&&": {
    paddingRight: 32
  }
}), MK = ee("select", {
  name: "MuiNativeSelect",
  slot: "Select",
  shouldForwardProp: Ao,
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.select, o[i.variant], i.error && o.error, {
      [`&.${Aw.multiple}`]: o.multiple
    }];
  }
})(J$), eI = ({
  ownerState: e,
  theme: o
}) => x({
  // We use a position absolute over a flexbox in order to forward the pointer events
  // to the input and to support wrapping tags..
  position: "absolute",
  right: 0,
  top: "calc(50% - .5em)",
  // Center vertically, height is 1em
  pointerEvents: "none",
  // Don't block pointer events on the select under the icon.
  color: (o.vars || o).palette.action.active,
  [`&.${Aw.disabled}`]: {
    color: (o.vars || o).palette.action.disabled
  }
}, e.open && {
  transform: "rotate(180deg)"
}, e.variant === "filled" && {
  right: 7
}, e.variant === "outlined" && {
  right: 7
}), NK = ee("svg", {
  name: "MuiNativeSelect",
  slot: "Icon",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.icon, i.variant && o[`icon${ce(i.variant)}`], i.open && o.iconOpen];
  }
})(eI), tI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const {
    className: c,
    disabled: d,
    error: p,
    IconComponent: f,
    inputRef: v,
    variant: g = "standard"
  } = o, b = ue(o, kK), S = x({}, o, {
    disabled: d,
    variant: g,
    error: p
  }), R = DK(S);
  return /* @__PURE__ */ ht(w.Fragment, {
    children: [/* @__PURE__ */ z(MK, x({
      ownerState: S,
      className: ve(R.select, c),
      disabled: d,
      ref: v || i
    }, b)), o.multiple ? null : /* @__PURE__ */ z(NK, {
      as: f,
      ownerState: S,
      className: R.icon
    })]
  });
});
process.env.NODE_ENV !== "production" && (tI.propTypes = {
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * The CSS class name of the select element.
   */
  className: t.string,
  /**
   * If `true`, the select is disabled.
   */
  disabled: t.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: t.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: t.elementType.isRequired,
  /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */
  inputRef: Lo,
  /**
   * @ignore
   */
  multiple: t.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: t.string,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: t.func,
  /**
   * The input value.
   */
  value: t.any,
  /**
   * The variant to use.
   */
  variant: t.oneOf(["standard", "outlined", "filled"])
});
const nI = tI, PK = ["className", "children", "classes", "IconComponent", "input", "inputProps", "variant"], $K = ["root"], IK = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"]
  }, Z$, o);
}, LK = /* @__PURE__ */ z($w, {}), _w = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    name: "MuiNativeSelect",
    props: o
  }), {
    className: d,
    children: p,
    classes: f = {},
    IconComponent: v = Ew,
    input: g = LK,
    inputProps: b
  } = c, S = ue(c, PK), R = Zi(), D = Bl({
    props: c,
    muiFormControl: R,
    states: ["variant"]
  }), k = x({}, c, {
    classes: f
  }), $ = IK(k), P = ue(f, $K);
  return /* @__PURE__ */ z(w.Fragment, {
    children: /* @__PURE__ */ w.cloneElement(g, x({
      // Most of the logic is implemented in `NativeSelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: nI,
      inputProps: x({
        children: p,
        classes: P,
        IconComponent: v,
        variant: D.variant,
        type: void 0
      }, b, g ? g.props.inputProps : {}),
      ref: i
    }, S, {
      className: ve($.root, g.props.className, d)
    }))
  });
});
process.env.NODE_ENV !== "production" && (_w.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: t.elementType,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   * @default <Input />
   */
  input: t.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attributes) applied to the `select` element.
   */
  inputProps: t.object,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {React.ChangeEvent<HTMLSelectElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: t.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The `input` value. The DOM API casts this to a string.
   */
  value: t.any,
  /**
   * The variant to use.
   */
  variant: t.oneOf(["filled", "outlined", "standard"])
});
_w.muiName = "Select";
const _ie = _w;
var pM;
const AK = ["children", "classes", "className", "label", "notched"], _K = ee("fieldset", {
  shouldForwardProp: Ao
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), BK = ee("legend", {
  shouldForwardProp: Ao
})(({
  ownerState: e,
  theme: o
}) => x({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden"
}, !e.withLabel && {
  padding: 0,
  lineHeight: "11px",
  // sync with `height` in `legend` styles
  transition: o.transitions.create("width", {
    duration: 150,
    easing: o.transitions.easing.easeOut
  })
}, e.withLabel && x({
  display: "block",
  // Fix conflict with normalize.css and sanitize.css
  padding: 0,
  height: 11,
  // sync with `lineHeight` in `legend` styles
  fontSize: "0.75em",
  visibility: "hidden",
  maxWidth: 0.01,
  transition: o.transitions.create("max-width", {
    duration: 50,
    easing: o.transitions.easing.easeOut
  }),
  whiteSpace: "nowrap",
  "& > span": {
    paddingLeft: 5,
    paddingRight: 5,
    display: "inline-block",
    opacity: 0,
    visibility: "visible"
  }
}, e.notched && {
  maxWidth: "100%",
  transition: o.transitions.create("max-width", {
    duration: 100,
    easing: o.transitions.easing.easeOut,
    delay: 50
  })
})));
function oI(e) {
  const {
    className: o,
    label: i,
    notched: c
  } = e, d = ue(e, AK), p = i != null && i !== "", f = x({}, e, {
    notched: c,
    withLabel: p
  });
  return /* @__PURE__ */ z(_K, x({
    "aria-hidden": !0,
    className: o,
    ownerState: f
  }, d, {
    children: /* @__PURE__ */ z(BK, {
      ownerState: f,
      children: p ? /* @__PURE__ */ z("span", {
        children: i
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        pM || (pM = /* @__PURE__ */ z("span", {
          className: "notranslate",
          children: "​"
        }))
      )
    })
  }));
}
process.env.NODE_ENV !== "production" && (oI.propTypes = {
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The label.
   */
  label: t.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: t.bool.isRequired,
  /**
   * @ignore
   */
  style: t.object
});
const zK = ["components", "fullWidth", "inputComponent", "label", "multiline", "notched", "slots", "type"], VK = (e) => {
  const {
    classes: o
  } = e, c = Ye({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, BW, o);
  return x({}, o, c);
}, FK = ee(m0, {
  shouldForwardProp: (e) => Ao(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: p0
})(({
  theme: e,
  ownerState: o
}) => {
  const i = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return x({
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${Is.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${Is.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : i
      }
    },
    [`&.${Is.focused} .${Is.notchedOutline}`]: {
      borderColor: (e.vars || e).palette[o.color].main,
      borderWidth: 2
    },
    [`&.${Is.error} .${Is.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.error.main
    },
    [`&.${Is.disabled} .${Is.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.action.disabled
    }
  }, o.startAdornment && {
    paddingLeft: 14
  }, o.endAdornment && {
    paddingRight: 14
  }, o.multiline && x({
    padding: "16.5px 14px"
  }, o.size === "small" && {
    padding: "8.5px 14px"
  }));
}), jK = ee(oI, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, o) => o.notchedOutline
})(({
  theme: e
}) => {
  const o = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : o
  };
}), UK = ee(h0, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: f0
})(({
  theme: e,
  ownerState: o
}) => x({
  padding: "16.5px 14px"
}, !e.vars && {
  "&:-webkit-autofill": {
    WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
    WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
    caretColor: e.palette.mode === "light" ? null : "#fff",
    borderRadius: "inherit"
  }
}, e.vars && {
  "&:-webkit-autofill": {
    borderRadius: "inherit"
  },
  [e.getColorSchemeSelector("dark")]: {
    "&:-webkit-autofill": {
      WebkitBoxShadow: "0 0 0 100px #266798 inset",
      WebkitTextFillColor: "#fff",
      caretColor: "#fff"
    }
  }
}, o.size === "small" && {
  padding: "8.5px 14px"
}, o.multiline && {
  padding: 0
}, o.startAdornment && {
  paddingLeft: 0
}, o.endAdornment && {
  paddingRight: 0
})), Bw = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d, p, f, v;
  const g = Ue({
    props: o,
    name: "MuiOutlinedInput"
  }), {
    components: b = {},
    fullWidth: S = !1,
    inputComponent: R = "input",
    label: D,
    multiline: k = !1,
    notched: $,
    slots: P = {},
    type: O = "text"
  } = g, I = ue(g, zK), _ = VK(g), A = Zi(), V = Bl({
    props: g,
    muiFormControl: A,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), B = x({}, g, {
    color: V.color || "primary",
    disabled: V.disabled,
    error: V.error,
    focused: V.focused,
    formControl: A,
    fullWidth: S,
    hiddenLabel: V.hiddenLabel,
    multiline: k,
    size: V.size,
    type: O
  }), M = (c = (d = P.root) != null ? d : b.Root) != null ? c : FK, F = (p = (f = P.input) != null ? f : b.Input) != null ? p : UK;
  return /* @__PURE__ */ z(v0, x({
    slots: {
      root: M,
      input: F
    },
    renderSuffix: (Y) => /* @__PURE__ */ z(jK, {
      ownerState: B,
      className: _.notchedOutline,
      label: D != null && D !== "" && V.required ? v || (v = /* @__PURE__ */ ht(w.Fragment, {
        children: [D, " ", "*"]
      })) : D,
      notched: typeof $ < "u" ? $ : !!(Y.startAdornment || Y.filled || Y.focused)
    }),
    fullWidth: S,
    inputComponent: R,
    multiline: k,
    ref: i,
    type: O
  }, I, {
    classes: x({}, _, {
      notchedOutline: null
    })
  }));
});
process.env.NODE_ENV !== "production" && (Bw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: t.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: t.oneOfType([t.oneOf(["primary", "secondary"]), t.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    Input: t.elementType,
    Root: t.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: t.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: t.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: t.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * The id of the `input` element.
   */
  id: t.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: t.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Lo,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: t.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: t.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: t.oneOfType([t.number, t.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: t.oneOfType([t.number, t.string]),
  /**
   * If `true`, a [TextareaAutosize](/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: t.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: t.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: t.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: t.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: t.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: t.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: t.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: t.oneOfType([t.number, t.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: t.shape({
    input: t.elementType,
    root: t.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: t.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: t.any
});
Bw.muiName = "Input";
const rI = Bw;
function HK(e) {
  return We("MuiPagination", e);
}
const WK = Ge("MuiPagination", ["root", "ul", "outlined", "text"]), Bie = WK, YK = ["boundaryCount", "componentName", "count", "defaultPage", "disabled", "hideNextButton", "hidePrevButton", "onChange", "page", "showFirstButton", "showLastButton", "siblingCount"];
function GK(e = {}) {
  const {
    boundaryCount: o = 1,
    componentName: i = "usePagination",
    count: c = 1,
    defaultPage: d = 1,
    disabled: p = !1,
    hideNextButton: f = !1,
    hidePrevButton: v = !1,
    onChange: g,
    page: b,
    showFirstButton: S = !1,
    showLastButton: R = !1,
    siblingCount: D = 1
  } = e, k = ue(e, YK), [$, P] = Eo({
    controlled: b,
    default: d,
    name: i,
    state: "page"
  }), O = (H, J) => {
    b || P(J), g && g(H, J);
  }, I = (H, J) => {
    const W = J - H + 1;
    return Array.from({
      length: W
    }, (te, Z) => H + Z);
  }, _ = I(1, Math.min(o, c)), A = I(Math.max(c - o + 1, o + 1), c), V = Math.max(
    Math.min(
      // Natural start
      $ - D,
      // Lower boundary when page is high
      c - o - D * 2 - 1
    ),
    // Greater than startPages
    o + 2
  ), B = Math.min(
    Math.max(
      // Natural end
      $ + D,
      // Upper boundary when page is low
      o + D * 2 + 2
    ),
    // Less than endPages
    A.length > 0 ? A[0] - 2 : c - 1
  ), M = [
    ...S ? ["first"] : [],
    ...v ? [] : ["previous"],
    ..._,
    // Start ellipsis
    // eslint-disable-next-line no-nested-ternary
    ...V > o + 2 ? ["start-ellipsis"] : o + 1 < c - o ? [o + 1] : [],
    // Sibling pages
    ...I(V, B),
    // End ellipsis
    // eslint-disable-next-line no-nested-ternary
    ...B < c - o - 1 ? ["end-ellipsis"] : c - o > o ? [c - o] : [],
    ...A,
    ...f ? [] : ["next"],
    ...R ? ["last"] : []
  ], F = (H) => {
    switch (H) {
      case "first":
        return 1;
      case "previous":
        return $ - 1;
      case "next":
        return $ + 1;
      case "last":
        return c;
      default:
        return null;
    }
  }, Y = M.map((H) => typeof H == "number" ? {
    onClick: (J) => {
      O(J, H);
    },
    type: "page",
    page: H,
    selected: H === $,
    disabled: p,
    "aria-current": H === $ ? "true" : void 0
  } : {
    onClick: (J) => {
      O(J, F(H));
    },
    type: H,
    page: F(H),
    selected: !1,
    disabled: p || H.indexOf("ellipsis") === -1 && (H === "next" || H === "last" ? $ >= c : $ <= 1)
  });
  return x({
    items: Y
  }, k);
}
function qK(e) {
  return We("MuiPaginationItem", e);
}
const KK = Ge("MuiPaginationItem", ["root", "page", "sizeSmall", "sizeLarge", "text", "textPrimary", "textSecondary", "outlined", "outlinedPrimary", "outlinedSecondary", "rounded", "ellipsis", "firstLast", "previousNext", "focusVisible", "disabled", "selected", "icon", "colorPrimary", "colorSecondary"]), li = KK, j1 = Cn(/* @__PURE__ */ z("path", {
  d: "M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"
}), "FirstPage"), U1 = Cn(/* @__PURE__ */ z("path", {
  d: "M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"
}), "LastPage"), fM = Cn(/* @__PURE__ */ z("path", {
  d: "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
}), "NavigateBefore"), mM = Cn(/* @__PURE__ */ z("path", {
  d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
}), "NavigateNext"), QK = ["className", "color", "component", "components", "disabled", "page", "selected", "shape", "size", "slots", "type", "variant"], aI = (e, o) => {
  const {
    ownerState: i
  } = e;
  return [o.root, o[i.variant], o[`size${ce(i.size)}`], i.variant === "text" && o[`text${ce(i.color)}`], i.variant === "outlined" && o[`outlined${ce(i.color)}`], i.shape === "rounded" && o.rounded, i.type === "page" && o.page, (i.type === "start-ellipsis" || i.type === "end-ellipsis") && o.ellipsis, (i.type === "previous" || i.type === "next") && o.previousNext, (i.type === "first" || i.type === "last") && o.firstLast];
}, XK = (e) => {
  const {
    classes: o,
    color: i,
    disabled: c,
    selected: d,
    size: p,
    shape: f,
    type: v,
    variant: g
  } = e, b = {
    root: ["root", `size${ce(p)}`, g, f, i !== "standard" && `color${ce(i)}`, i !== "standard" && `${g}${ce(i)}`, c && "disabled", d && "selected", {
      page: "page",
      first: "firstLast",
      last: "firstLast",
      "start-ellipsis": "ellipsis",
      "end-ellipsis": "ellipsis",
      previous: "previousNext",
      next: "previousNext"
    }[v]],
    icon: ["icon"]
  };
  return Ye(b, qK, o);
}, ZK = ee("div", {
  name: "MuiPaginationItem",
  slot: "Root",
  overridesResolver: aI
})(({
  theme: e,
  ownerState: o
}) => x({}, e.typography.body2, {
  borderRadius: 32 / 2,
  textAlign: "center",
  boxSizing: "border-box",
  minWidth: 32,
  padding: "0 6px",
  margin: "0 3px",
  color: (e.vars || e).palette.text.primary,
  height: "auto",
  [`&.${li.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  }
}, o.size === "small" && {
  minWidth: 26,
  borderRadius: 26 / 2,
  margin: "0 1px",
  padding: "0 4px"
}, o.size === "large" && {
  minWidth: 40,
  borderRadius: 40 / 2,
  padding: "0 10px",
  fontSize: e.typography.pxToRem(15)
})), JK = ee(Qo, {
  name: "MuiPaginationItem",
  slot: "Root",
  overridesResolver: aI
})(({
  theme: e,
  ownerState: o
}) => x({}, e.typography.body2, {
  borderRadius: 32 / 2,
  textAlign: "center",
  boxSizing: "border-box",
  minWidth: 32,
  height: 32,
  padding: "0 6px",
  margin: "0 3px",
  color: (e.vars || e).palette.text.primary,
  [`&.${li.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette.action.focus
  },
  [`&.${li.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  },
  transition: e.transitions.create(["color", "background-color"], {
    duration: e.transitions.duration.short
  }),
  "&:hover": {
    backgroundColor: (e.vars || e).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${li.selected}`]: {
    backgroundColor: (e.vars || e).palette.action.selected,
    "&:hover": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Wt(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (e.vars || e).palette.action.selected
      }
    },
    [`&.${li.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Wt(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
    },
    [`&.${li.disabled}`]: {
      opacity: 1,
      color: (e.vars || e).palette.action.disabled,
      backgroundColor: (e.vars || e).palette.action.selected
    }
  }
}, o.size === "small" && {
  minWidth: 26,
  height: 26,
  borderRadius: 26 / 2,
  margin: "0 1px",
  padding: "0 4px"
}, o.size === "large" && {
  minWidth: 40,
  height: 40,
  borderRadius: 40 / 2,
  padding: "0 10px",
  fontSize: e.typography.pxToRem(15)
}, o.shape === "rounded" && {
  borderRadius: (e.vars || e).shape.borderRadius
}), ({
  theme: e,
  ownerState: o
}) => x({}, o.variant === "text" && {
  [`&.${li.selected}`]: x({}, o.color !== "standard" && {
    color: (e.vars || e).palette[o.color].contrastText,
    backgroundColor: (e.vars || e).palette[o.color].main,
    "&:hover": {
      backgroundColor: (e.vars || e).palette[o.color].dark,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (e.vars || e).palette[o.color].main
      }
    },
    [`&.${li.focusVisible}`]: {
      backgroundColor: (e.vars || e).palette[o.color].dark
    }
  }, {
    [`&.${li.disabled}`]: {
      color: (e.vars || e).palette.action.disabled
    }
  })
}, o.variant === "outlined" && {
  border: e.vars ? `1px solid rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"}`,
  [`&.${li.selected}`]: x({}, o.color !== "standard" && {
    color: (e.vars || e).palette[o.color].main,
    border: `1px solid ${e.vars ? `rgba(${e.vars.palette[o.color].mainChannel} / 0.5)` : Wt(e.palette[o.color].main, 0.5)}`,
    backgroundColor: e.vars ? `rgba(${e.vars.palette[o.color].mainChannel} / ${e.vars.palette.action.activatedOpacity})` : Wt(e.palette[o.color].main, e.palette.action.activatedOpacity),
    "&:hover": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette[o.color].mainChannel} / calc(${e.vars.palette.action.activatedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Wt(e.palette[o.color].main, e.palette.action.activatedOpacity + e.palette.action.focusOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    [`&.${li.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette[o.color].mainChannel} / calc(${e.vars.palette.action.activatedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Wt(e.palette[o.color].main, e.palette.action.activatedOpacity + e.palette.action.focusOpacity)
    }
  }, {
    [`&.${li.disabled}`]: {
      borderColor: (e.vars || e).palette.action.disabledBackground,
      color: (e.vars || e).palette.action.disabled
    }
  })
})), eQ = ee("div", {
  name: "MuiPaginationItem",
  slot: "Icon",
  overridesResolver: (e, o) => o.icon
})(({
  theme: e,
  ownerState: o
}) => x({
  fontSize: e.typography.pxToRem(20),
  margin: "0 -8px"
}, o.size === "small" && {
  fontSize: e.typography.pxToRem(18)
}, o.size === "large" && {
  fontSize: e.typography.pxToRem(22)
})), iI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiPaginationItem"
  }), {
    className: d,
    color: p = "standard",
    component: f,
    components: v = {},
    disabled: g = !1,
    page: b,
    selected: S = !1,
    shape: R = "circular",
    size: D = "medium",
    slots: k = {},
    type: $ = "page",
    variant: P = "text"
  } = c, O = ue(c, QK), I = x({}, c, {
    color: p,
    disabled: g,
    selected: S,
    shape: R,
    size: D,
    type: $,
    variant: P
  }), _ = Mn(), A = XK(I), B = (_.direction === "rtl" ? {
    previous: k.next || v.next || mM,
    next: k.previous || v.previous || fM,
    last: k.first || v.first || j1,
    first: k.last || v.last || U1
  } : {
    previous: k.previous || v.previous || fM,
    next: k.next || v.next || mM,
    first: k.first || v.first || j1,
    last: k.last || v.last || U1
  })[$];
  return $ === "start-ellipsis" || $ === "end-ellipsis" ? /* @__PURE__ */ z(ZK, {
    ref: i,
    ownerState: I,
    className: ve(A.root, d),
    children: "…"
  }) : /* @__PURE__ */ ht(JK, x({
    ref: i,
    ownerState: I,
    component: f,
    disabled: g,
    className: ve(A.root, d)
  }, O, {
    children: [$ === "page" && b, B ? /* @__PURE__ */ z(eQ, {
      as: B,
      ownerState: I,
      className: A.icon
    }) : null]
  }));
});
process.env.NODE_ENV !== "production" && (iI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The active color.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'standard'
   */
  color: t.oneOfType([t.oneOf(["primary", "secondary", "standard"]), t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    first: t.elementType,
    last: t.elementType,
    next: t.elementType,
    previous: t.elementType
  }),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * The current page number.
   */
  page: t.node,
  /**
   * If `true` the pagination item is selected.
   * @default false
   */
  selected: t.bool,
  /**
   * The shape of the pagination item.
   * @default 'circular'
   */
  shape: t.oneOf(["circular", "rounded"]),
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["small", "medium", "large"]), t.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: t.shape({
    first: t.elementType,
    last: t.elementType,
    next: t.elementType,
    previous: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The type of pagination item.
   * @default 'page'
   */
  type: t.oneOf(["end-ellipsis", "first", "last", "next", "page", "previous", "start-ellipsis"]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: t.oneOfType([t.oneOf(["outlined", "text"]), t.string])
});
const tQ = iI, nQ = ["boundaryCount", "className", "color", "count", "defaultPage", "disabled", "getItemAriaLabel", "hideNextButton", "hidePrevButton", "onChange", "page", "renderItem", "shape", "showFirstButton", "showLastButton", "siblingCount", "size", "variant"], oQ = (e) => {
  const {
    classes: o,
    variant: i
  } = e;
  return Ye({
    root: ["root", i],
    ul: ["ul"]
  }, HK, o);
}, rQ = ee("nav", {
  name: "MuiPagination",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[i.variant]];
  }
})({}), aQ = ee("ul", {
  name: "MuiPagination",
  slot: "Ul",
  overridesResolver: (e, o) => o.ul
})({
  display: "flex",
  flexWrap: "wrap",
  alignItems: "center",
  padding: 0,
  margin: 0,
  listStyle: "none"
});
function iQ(e, o, i) {
  return e === "page" ? `${i ? "" : "Go to "}page ${o}` : `Go to ${e} page`;
}
const sI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiPagination"
  }), {
    boundaryCount: d = 1,
    className: p,
    color: f = "standard",
    count: v = 1,
    defaultPage: g = 1,
    disabled: b = !1,
    getItemAriaLabel: S = iQ,
    hideNextButton: R = !1,
    hidePrevButton: D = !1,
    renderItem: k = (Y) => /* @__PURE__ */ z(tQ, x({}, Y)),
    shape: $ = "circular",
    showFirstButton: P = !1,
    showLastButton: O = !1,
    siblingCount: I = 1,
    size: _ = "medium",
    variant: A = "text"
  } = c, V = ue(c, nQ), {
    items: B
  } = GK(x({}, c, {
    componentName: "Pagination"
  })), M = x({}, c, {
    boundaryCount: d,
    color: f,
    count: v,
    defaultPage: g,
    disabled: b,
    getItemAriaLabel: S,
    hideNextButton: R,
    hidePrevButton: D,
    renderItem: k,
    shape: $,
    showFirstButton: P,
    showLastButton: O,
    siblingCount: I,
    size: _,
    variant: A
  }), F = oQ(M);
  return /* @__PURE__ */ z(rQ, x({
    "aria-label": "pagination navigation",
    className: ve(F.root, p),
    ownerState: M,
    ref: i
  }, V, {
    children: /* @__PURE__ */ z(aQ, {
      className: F.ul,
      ownerState: M,
      children: B.map((Y, H) => /* @__PURE__ */ z("li", {
        children: k(x({}, Y, {
          color: f,
          "aria-label": S(Y.type, Y.page, Y.selected),
          shape: $,
          size: _,
          variant: A
        }))
      }, H))
    })
  }));
});
process.env.NODE_ENV !== "production" && (sI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Number of always visible pages at the beginning and end.
   * @default 1
   */
  boundaryCount: To,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The active color.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'standard'
   */
  color: t.oneOfType([t.oneOf(["primary", "secondary", "standard"]), t.string]),
  /**
   * The total number of pages.
   * @default 1
   */
  count: To,
  /**
   * The page selected by default when the component is uncontrolled.
   * @default 1
   */
  defaultPage: To,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous' | 'start-ellipsis' | 'end-ellipsis'). Defaults to 'page'.
   * @param {number} page The page number to format.
   * @param {bool} selected If true, the current page is selected.
   * @returns {string}
   */
  getItemAriaLabel: t.func,
  /**
   * If `true`, hide the next-page button.
   * @default false
   */
  hideNextButton: t.bool,
  /**
   * If `true`, hide the previous-page button.
   * @default false
   */
  hidePrevButton: t.bool,
  /**
   * Callback fired when the page is changed.
   *
   * @param {React.ChangeEvent<unknown>} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onChange: t.func,
  /**
   * The current page.
   */
  page: To,
  /**
   * Render the item.
   * @param {PaginationRenderItemParams} params The props to spread on a PaginationItem.
   * @returns {ReactNode}
   * @default (item) => <PaginationItem {...item} />
   */
  renderItem: t.func,
  /**
   * The shape of the pagination items.
   * @default 'circular'
   */
  shape: t.oneOf(["circular", "rounded"]),
  /**
   * If `true`, show the first-page button.
   * @default false
   */
  showFirstButton: t.bool,
  /**
   * If `true`, show the last-page button.
   * @default false
   */
  showLastButton: t.bool,
  /**
   * Number of always visible pages before and after the current page.
   * @default 1
   */
  siblingCount: To,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["small", "medium", "large"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: t.oneOfType([t.oneOf(["outlined", "text"]), t.string])
});
const zie = sI, sQ = Cn(/* @__PURE__ */ z("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "RadioButtonUnchecked"), lQ = Cn(/* @__PURE__ */ z("path", {
  d: "M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
}), "RadioButtonChecked"), cQ = ee("span", {
  shouldForwardProp: Ao
})({
  position: "relative",
  display: "flex"
}), uQ = ee(sQ)({
  // Scale applied to prevent dot misalignment in Safari
  transform: "scale(1)"
}), dQ = ee(lQ)(({
  theme: e,
  ownerState: o
}) => x({
  left: 0,
  position: "absolute",
  transform: "scale(0)",
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeIn,
    duration: e.transitions.duration.shortest
  })
}, o.checked && {
  transform: "scale(1)",
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeOut,
    duration: e.transitions.duration.shortest
  })
}));
function zw(e) {
  const {
    checked: o = !1,
    classes: i = {},
    fontSize: c
  } = e, d = x({}, e, {
    checked: o
  });
  return /* @__PURE__ */ ht(cQ, {
    className: i.root,
    ownerState: d,
    children: [/* @__PURE__ */ z(uQ, {
      fontSize: c,
      className: i.background,
      ownerState: d
    }), /* @__PURE__ */ z(dQ, {
      fontSize: c,
      className: i.dot,
      ownerState: d
    })]
  });
}
process.env.NODE_ENV !== "production" && (zw.propTypes = {
  /**
   * If `true`, the component is checked.
   */
  checked: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   */
  fontSize: t.oneOf(["small", "medium"])
});
const lI = /* @__PURE__ */ w.createContext(void 0);
process.env.NODE_ENV !== "production" && (lI.displayName = "RadioGroupContext");
const cI = lI;
function pQ() {
  return w.useContext(cI);
}
function fQ(e) {
  return We("MuiRadio", e);
}
const mQ = Ge("MuiRadio", ["root", "checked", "disabled", "colorPrimary", "colorSecondary", "sizeSmall"]), hM = mQ, hQ = ["checked", "checkedIcon", "color", "icon", "name", "onChange", "size", "className"], vQ = (e) => {
  const {
    classes: o,
    color: i,
    size: c
  } = e, d = {
    root: ["root", `color${ce(i)}`, c !== "medium" && `size${ce(c)}`]
  };
  return x({}, o, Ye(d, fQ, o));
}, gQ = ee(Rw, {
  shouldForwardProp: (e) => Ao(e) || e === "classes",
  name: "MuiRadio",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.size !== "medium" && o[`size${ce(i.size)}`], o[`color${ce(i.color)}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  color: (e.vars || e).palette.text.secondary
}, !o.disableRipple && {
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${o.color === "default" ? e.vars.palette.action.activeChannel : e.vars.palette[o.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Wt(o.color === "default" ? e.palette.action.active : e.palette[o.color].main, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  }
}, o.color !== "default" && {
  [`&.${hM.checked}`]: {
    color: (e.vars || e).palette[o.color].main
  }
}, {
  [`&.${hM.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  }
}));
function yQ(e, o) {
  return typeof o == "object" && o !== null ? e === o : String(e) === String(o);
}
const vM = /* @__PURE__ */ z(zw, {
  checked: !0
}), gM = /* @__PURE__ */ z(zw, {}), uI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d;
  const p = Ue({
    props: o,
    name: "MuiRadio"
  }), {
    checked: f,
    checkedIcon: v = vM,
    color: g = "primary",
    icon: b = gM,
    name: S,
    onChange: R,
    size: D = "medium",
    className: k
  } = p, $ = ue(p, hQ), P = x({}, p, {
    color: g,
    size: D
  }), O = vQ(P), I = pQ();
  let _ = f;
  const A = AC(R, I && I.onChange);
  let V = S;
  return I && (typeof _ > "u" && (_ = yQ(I.value, p.value)), typeof V > "u" && (V = I.name)), /* @__PURE__ */ z(gQ, x({
    type: "radio",
    icon: /* @__PURE__ */ w.cloneElement(b, {
      fontSize: (c = gM.props.fontSize) != null ? c : D
    }),
    checkedIcon: /* @__PURE__ */ w.cloneElement(v, {
      fontSize: (d = vM.props.fontSize) != null ? d : D
    }),
    ownerState: P,
    classes: O,
    name: V,
    checked: _,
    onChange: A,
    ref: i,
    className: ve(O.root, k)
  }, $));
});
process.env.NODE_ENV !== "production" && (uI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: t.bool,
  /**
   * The icon to display when the component is checked.
   * @default <RadioButtonIcon checked />
   */
  checkedIcon: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * If `true`, the component is disabled.
   */
  disabled: t.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: t.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <RadioButtonIcon />
   */
  icon: t.node,
  /**
   * The id of the `input` element.
   */
  id: t.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Lo,
  /**
   * Name attribute of the `input` element.
   */
  name: t.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: t.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: t.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["medium", "small"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   */
  value: t.any
});
const Vie = uI, bQ = ["actions", "children", "defaultValue", "name", "onChange", "value"], dI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: c,
    children: d,
    defaultValue: p,
    name: f,
    onChange: v,
    value: g
  } = o, b = ue(o, bQ), S = w.useRef(null), [R, D] = Eo({
    controlled: g,
    default: p,
    name: "RadioGroup"
  });
  w.useImperativeHandle(c, () => ({
    focus: () => {
      let O = S.current.querySelector("input:not(:disabled):checked");
      O || (O = S.current.querySelector("input:not(:disabled)")), O && O.focus();
    }
  }), []);
  const k = cn(i, S), $ = Na(f), P = w.useMemo(() => ({
    name: $,
    onChange(O) {
      D(O.target.value), v && v(O, O.target.value);
    },
    value: R
  }), [$, v, D, R]);
  return /* @__PURE__ */ z(cI.Provider, {
    value: P,
    children: /* @__PURE__ */ z(aY, x({
      role: "radiogroup",
      ref: k
    }, b, {
      children: d
    }))
  });
});
process.env.NODE_ENV !== "production" && (dI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * The name used to reference the value of the control.
   * If you don't provide this prop, it falls back to a randomly generated name.
   */
  name: t.string,
  /**
   * Callback fired when a radio button is selected.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * @param {string} value The value of the selected radio button.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: t.func,
  /**
   * Value of the selected radio button. The DOM API casts this to a string.
   */
  value: t.any
});
const Fie = dI, CQ = Cn(/* @__PURE__ */ z("path", {
  d: "M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
}), "Star"), xQ = Cn(/* @__PURE__ */ z("path", {
  d: "M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
}), "StarBorder");
function SQ(e) {
  return We("MuiRating", e);
}
const TQ = Ge("MuiRating", ["root", "sizeSmall", "sizeMedium", "sizeLarge", "readOnly", "disabled", "focusVisible", "visuallyHidden", "pristine", "label", "labelEmptyValueActive", "icon", "iconEmpty", "iconFilled", "iconHover", "iconFocus", "iconActive", "decimal"]), sv = TQ, wQ = ["value"], EQ = ["className", "defaultValue", "disabled", "emptyIcon", "emptyLabelText", "getLabelText", "highlightSelectedOnly", "icon", "IconContainerComponent", "max", "name", "onChange", "onChangeActive", "onMouseLeave", "onMouseMove", "precision", "readOnly", "size", "value"];
function RQ(e) {
  const o = e.toString().split(".")[1];
  return o ? o.length : 0;
}
function g1(e, o) {
  if (e == null)
    return e;
  const i = Math.round(e / o) * o;
  return Number(i.toFixed(RQ(o)));
}
const OQ = (e) => {
  const {
    classes: o,
    size: i,
    readOnly: c,
    disabled: d,
    emptyValueFocused: p,
    focusVisible: f
  } = e, v = {
    root: ["root", `size${ce(i)}`, d && "disabled", f && "focusVisible", c && "readOnly"],
    label: ["label", "pristine"],
    labelEmptyValue: [p && "labelEmptyValueActive"],
    icon: ["icon"],
    iconEmpty: ["iconEmpty"],
    iconFilled: ["iconFilled"],
    iconHover: ["iconHover"],
    iconFocus: ["iconFocus"],
    iconActive: ["iconActive"],
    decimal: ["decimal"],
    visuallyHidden: ["visuallyHidden"]
  };
  return Ye(v, SQ, o);
}, kQ = ee("span", {
  name: "MuiRating",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [{
      [`& .${sv.visuallyHidden}`]: o.visuallyHidden
    }, o.root, o[`size${ce(i.size)}`], i.readOnly && o.readOnly];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  display: "inline-flex",
  // Required to position the pristine input absolutely
  position: "relative",
  fontSize: e.typography.pxToRem(24),
  color: "#faaf00",
  cursor: "pointer",
  textAlign: "left",
  width: "min-content",
  WebkitTapHighlightColor: "transparent",
  [`&.${sv.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity,
    pointerEvents: "none"
  },
  [`&.${sv.focusVisible} .${sv.iconActive}`]: {
    outline: "1px solid #999"
  },
  [`& .${sv.visuallyHidden}`]: bN
}, o.size === "small" && {
  fontSize: e.typography.pxToRem(18)
}, o.size === "large" && {
  fontSize: e.typography.pxToRem(30)
}, o.readOnly && {
  pointerEvents: "none"
})), pI = ee("label", {
  name: "MuiRating",
  slot: "Label",
  overridesResolver: ({
    ownerState: e
  }, o) => [o.label, e.emptyValueFocused && o.labelEmptyValueActive]
})(({
  ownerState: e
}) => x({
  cursor: "inherit"
}, e.emptyValueFocused && {
  top: 0,
  bottom: 0,
  position: "absolute",
  outline: "1px solid #999",
  width: "100%"
})), DQ = ee("span", {
  name: "MuiRating",
  slot: "Icon",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.icon, i.iconEmpty && o.iconEmpty, i.iconFilled && o.iconFilled, i.iconHover && o.iconHover, i.iconFocus && o.iconFocus, i.iconActive && o.iconActive];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  // Fit wrapper to actual icon size.
  display: "flex",
  transition: e.transitions.create("transform", {
    duration: e.transitions.duration.shortest
  }),
  // Fix mouseLeave issue.
  // https://github.com/facebook/react/issues/4492
  pointerEvents: "none"
}, o.iconActive && {
  transform: "scale(1.2)"
}, o.iconEmpty && {
  color: (e.vars || e).palette.action.disabled
})), MQ = ee("span", {
  name: "MuiRating",
  slot: "Decimal",
  shouldForwardProp: (e) => Gv(e) && e !== "iconActive",
  overridesResolver: (e, o) => {
    const {
      iconActive: i
    } = e;
    return [o.decimal, i && o.iconActive];
  }
})(({
  iconActive: e
}) => x({
  position: "relative"
}, e && {
  transform: "scale(1.2)"
}));
function fI(e) {
  const o = ue(e, wQ);
  return /* @__PURE__ */ z("span", x({}, o));
}
process.env.NODE_ENV !== "production" && (fI.propTypes = {
  value: t.number.isRequired
});
function H1(e) {
  const {
    classes: o,
    disabled: i,
    emptyIcon: c,
    focus: d,
    getLabelText: p,
    highlightSelectedOnly: f,
    hover: v,
    icon: g,
    IconContainerComponent: b,
    isActive: S,
    itemValue: R,
    labelProps: D,
    name: k,
    onBlur: $,
    onChange: P,
    onClick: O,
    onFocus: I,
    readOnly: _,
    ownerState: A,
    ratingValue: V,
    ratingValueRounded: B
  } = e, M = f ? R === V : R <= V, F = R <= v, Y = R <= d, H = R === B, J = Na(), W = /* @__PURE__ */ z(DQ, {
    as: b,
    value: R,
    className: ve(o.icon, M ? o.iconFilled : o.iconEmpty, F && o.iconHover, Y && o.iconFocus, S && o.iconActive),
    ownerState: x({}, A, {
      iconEmpty: !M,
      iconFilled: M,
      iconHover: F,
      iconFocus: Y,
      iconActive: S
    }),
    children: c && !M ? c : g
  });
  return _ ? /* @__PURE__ */ z("span", x({}, D, {
    children: W
  })) : /* @__PURE__ */ ht(w.Fragment, {
    children: [/* @__PURE__ */ ht(pI, x({
      ownerState: x({}, A, {
        emptyValueFocused: void 0
      }),
      htmlFor: J
    }, D, {
      children: [W, /* @__PURE__ */ z("span", {
        className: o.visuallyHidden,
        children: p(R)
      })]
    })), /* @__PURE__ */ z("input", {
      className: o.visuallyHidden,
      onFocus: I,
      onBlur: $,
      onChange: P,
      onClick: O,
      disabled: i,
      value: R,
      id: J,
      type: "radio",
      name: k,
      checked: H
    })]
  });
}
process.env.NODE_ENV !== "production" && (H1.propTypes = {
  classes: t.object.isRequired,
  disabled: t.bool.isRequired,
  emptyIcon: t.node,
  focus: t.number.isRequired,
  getLabelText: t.func.isRequired,
  highlightSelectedOnly: t.bool.isRequired,
  hover: t.number.isRequired,
  icon: t.node,
  IconContainerComponent: t.elementType.isRequired,
  isActive: t.bool.isRequired,
  itemValue: t.number.isRequired,
  labelProps: t.object,
  name: t.string,
  onBlur: t.func.isRequired,
  onChange: t.func.isRequired,
  onClick: t.func.isRequired,
  onFocus: t.func.isRequired,
  ownerState: t.object.isRequired,
  ratingValue: t.number,
  ratingValueRounded: t.number,
  readOnly: t.bool.isRequired
});
const NQ = /* @__PURE__ */ z(CQ, {
  fontSize: "inherit"
}), PQ = /* @__PURE__ */ z(xQ, {
  fontSize: "inherit"
});
function $Q(e) {
  return `${e} Star${e !== 1 ? "s" : ""}`;
}
const mI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    name: "MuiRating",
    props: o
  }), {
    className: d,
    defaultValue: p = null,
    disabled: f = !1,
    emptyIcon: v = PQ,
    emptyLabelText: g = "Empty",
    getLabelText: b = $Q,
    highlightSelectedOnly: S = !1,
    icon: R = NQ,
    IconContainerComponent: D = fI,
    max: k = 5,
    name: $,
    onChange: P,
    onChangeActive: O,
    onMouseLeave: I,
    onMouseMove: _,
    precision: A = 1,
    readOnly: V = !1,
    size: B = "medium",
    value: M
  } = c, F = ue(c, EQ), Y = Na($), [H, J] = Eo({
    controlled: M,
    default: p,
    name: "Rating"
  }), W = g1(H, A), te = Mn(), [{
    hover: Z,
    focus: q
  }, Q] = w.useState({
    hover: -1,
    focus: -1
  });
  let re = W;
  Z !== -1 && (re = Z), q !== -1 && (re = q);
  const {
    isFocusVisibleRef: ie,
    onBlur: K,
    onFocus: ne,
    ref: se
  } = If(), [Fe, qe] = w.useState(!1), Me = w.useRef(), fe = cn(se, Me, i), De = ($e) => {
    _ && _($e);
    const Se = Me.current, {
      right: mt,
      left: Be,
      width: ft
    } = Se.getBoundingClientRect();
    let je;
    te.direction === "rtl" ? je = (mt - $e.clientX) / ft : je = ($e.clientX - Be) / ft;
    let Ve = g1(k * je + A / 2, A);
    Ve = jc(Ve, A, k), Q((st) => st.hover === Ve && st.focus === Ve ? st : {
      hover: Ve,
      focus: Ve
    }), qe(!1), O && Z !== Ve && O($e, Ve);
  }, be = ($e) => {
    I && I($e);
    const Se = -1;
    Q({
      hover: Se,
      focus: Se
    }), O && Z !== Se && O($e, Se);
  }, Ce = ($e) => {
    let Se = $e.target.value === "" ? null : parseFloat($e.target.value);
    Z !== -1 && (Se = Z), J(Se), P && P($e, Se);
  }, de = ($e) => {
    $e.clientX === 0 && $e.clientY === 0 || (Q({
      hover: -1,
      focus: -1
    }), J(null), P && parseFloat($e.target.value) === W && P($e, null));
  }, Ae = ($e) => {
    ne($e), ie.current === !0 && qe(!0);
    const Se = parseFloat($e.target.value);
    Q((mt) => ({
      hover: mt.hover,
      focus: Se
    }));
  }, at = ($e) => {
    if (Z !== -1)
      return;
    K($e), ie.current === !1 && qe(!1);
    const Se = -1;
    Q((mt) => ({
      hover: mt.hover,
      focus: Se
    }));
  }, [Oe, _e] = w.useState(!1), ye = x({}, c, {
    defaultValue: p,
    disabled: f,
    emptyIcon: v,
    emptyLabelText: g,
    emptyValueFocused: Oe,
    focusVisible: Fe,
    getLabelText: b,
    icon: R,
    IconContainerComponent: D,
    max: k,
    precision: A,
    readOnly: V,
    size: B
  }), ae = OQ(ye);
  return /* @__PURE__ */ ht(kQ, x({
    ref: fe,
    onMouseMove: De,
    onMouseLeave: be,
    className: ve(ae.root, d, V && "MuiRating-readOnly"),
    ownerState: ye,
    role: V ? "img" : null,
    "aria-label": V ? b(re) : null
  }, F, {
    children: [Array.from(new Array(k)).map(($e, Se) => {
      const mt = Se + 1, Be = {
        classes: ae,
        disabled: f,
        emptyIcon: v,
        focus: q,
        getLabelText: b,
        highlightSelectedOnly: S,
        hover: Z,
        icon: R,
        IconContainerComponent: D,
        name: Y,
        onBlur: at,
        onChange: Ce,
        onClick: de,
        onFocus: Ae,
        ratingValue: re,
        ratingValueRounded: W,
        readOnly: V,
        ownerState: ye
      }, ft = mt === Math.ceil(re) && (Z !== -1 || q !== -1);
      if (A < 1) {
        const je = Array.from(new Array(1 / A));
        return /* @__PURE__ */ z(MQ, {
          className: ve(ae.decimal, ft && ae.iconActive),
          ownerState: ye,
          iconActive: ft,
          children: je.map((Ve, st) => {
            const gt = g1(mt - 1 + (st + 1) * A, A);
            return /* @__PURE__ */ z(H1, x({}, Be, {
              // The icon is already displayed as active
              isActive: !1,
              itemValue: gt,
              labelProps: {
                style: je.length - 1 === st ? {} : {
                  width: gt === re ? `${(st + 1) * A * 100}%` : "0%",
                  overflow: "hidden",
                  position: "absolute"
                }
              }
            }), gt);
          })
        }, mt);
      }
      return /* @__PURE__ */ z(H1, x({}, Be, {
        isActive: ft,
        itemValue: mt
      }), mt);
    }), !V && !f && /* @__PURE__ */ ht(pI, {
      className: ve(ae.label, ae.labelEmptyValue),
      ownerState: ye,
      children: [/* @__PURE__ */ z("input", {
        className: ae.visuallyHidden,
        value: "",
        id: `${Y}-empty`,
        type: "radio",
        name: Y,
        checked: W == null,
        onFocus: () => _e(!0),
        onBlur: () => _e(!1),
        onChange: Ce
      }), /* @__PURE__ */ z("span", {
        className: ae.visuallyHidden,
        children: g
      })]
    })]
  }));
});
process.env.NODE_ENV !== "production" && (mI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The default value. Use when the component is not controlled.
   * @default null
   */
  defaultValue: t.number,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * The icon to display when empty.
   * @default <StarBorder fontSize="inherit" />
   */
  emptyIcon: t.node,
  /**
   * The label read when the rating input is empty.
   * @default 'Empty'
   */
  emptyLabelText: t.node,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the rating.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @param {number} value The rating label's value to format.
   * @returns {string}
   * @default function defaultLabelText(value) {
   *   return `${value} Star${value !== 1 ? 's' : ''}`;
   * }
   */
  getLabelText: t.func,
  /**
   * If `true`, only the selected icon will be highlighted.
   * @default false
   */
  highlightSelectedOnly: t.bool,
  /**
   * The icon to display.
   * @default <Star fontSize="inherit" />
   */
  icon: t.node,
  /**
   * The component containing the icon.
   * @default function IconContainer(props) {
   *   const { value, ...other } = props;
   *   return <span {...other} />;
   * }
   */
  IconContainerComponent: t.elementType,
  /**
   * Maximum rating.
   * @default 5
   */
  max: t.number,
  /**
   * The name attribute of the radio `input` elements.
   * This input `name` should be unique within the page.
   * Being unique within a form is insufficient since the `name` is used to generated IDs.
   */
  name: t.string,
  /**
   * Callback fired when the value changes.
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {number|null} value The new value.
   */
  onChange: t.func,
  /**
   * Callback function that is fired when the hover state changes.
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {number} value The new value.
   */
  onChangeActive: t.func,
  /**
   * @ignore
   */
  onMouseLeave: t.func,
  /**
   * @ignore
   */
  onMouseMove: t.func,
  /**
   * The minimum increment value change allowed.
   * @default 1
   */
  precision: Ko(t.number, (e) => e.precision < 0.1 ? new Error(["MUI: The prop `precision` should be above 0.1.", "A value below this limit has an imperceptible impact."].join(`
`)) : null),
  /**
   * Removes all hover effects and pointer events.
   * @default false
   */
  readOnly: t.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["small", "medium", "large"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The rating value.
   */
  value: t.number
});
const jie = mI;
function IQ(e) {
  return We("MuiScopedCssBaseline", e);
}
const LQ = Ge("MuiScopedCssBaseline", ["root"]), Uie = LQ, AQ = ["className", "component", "enableColorScheme"], _Q = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"]
  }, IQ, o);
}, BQ = ee("div", {
  name: "MuiScopedCssBaseline",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})(({
  theme: e,
  ownerState: o
}) => {
  const i = {};
  return o.enableColorScheme && e.colorSchemes && Object.entries(e.colorSchemes).forEach(([c, d]) => {
    var p;
    i[`&${e.getColorSchemeSelector(c).replace(/\s*&/, "")}`] = {
      colorScheme: (p = d.palette) == null ? void 0 : p.mode
    };
  }), x({}, ZP(e, o.enableColorScheme), JP(e), {
    "& *, & *::before, & *::after": {
      boxSizing: "inherit"
    },
    "& strong, & b": {
      fontWeight: e.typography.fontWeightBold
    }
  }, i);
}), hI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiScopedCssBaseline"
  }), {
    className: d,
    component: p = "div"
  } = c, f = ue(c, AQ), v = x({}, c, {
    component: p
  }), g = _Q(v);
  return /* @__PURE__ */ z(BQ, x({
    as: p,
    className: ve(g.root, d),
    ref: i,
    ownerState: v
  }, f));
});
process.env.NODE_ENV !== "production" && (hI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   */
  enableColorScheme: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Hie = hI;
function zQ(e) {
  return We("MuiSelect", e);
}
const VQ = Ge("MuiSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "focused", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]), lv = VQ;
var yM;
const FQ = ["aria-describedby", "aria-label", "autoFocus", "autoWidth", "children", "className", "defaultOpen", "defaultValue", "disabled", "displayEmpty", "error", "IconComponent", "inputRef", "labelId", "MenuProps", "multiple", "name", "onBlur", "onChange", "onClose", "onFocus", "onOpen", "open", "readOnly", "renderValue", "SelectDisplayProps", "tabIndex", "type", "value", "variant"], jQ = ee("div", {
  name: "MuiSelect",
  slot: "Select",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [
      // Win specificity over the input base
      {
        [`&.${lv.select}`]: o.select
      },
      {
        [`&.${lv.select}`]: o[i.variant]
      },
      {
        [`&.${lv.error}`]: o.error
      },
      {
        [`&.${lv.multiple}`]: o.multiple
      }
    ];
  }
})(J$, {
  // Win specificity over the input base
  [`&.${lv.select}`]: {
    height: "auto",
    // Resets for multiple select with chips
    minHeight: "1.4375em",
    // Required for select\text-field height consistency
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    overflow: "hidden"
  }
}), UQ = ee("svg", {
  name: "MuiSelect",
  slot: "Icon",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.icon, i.variant && o[`icon${ce(i.variant)}`], i.open && o.iconOpen];
  }
})(eI), HQ = ee("input", {
  shouldForwardProp: (e) => Gv(e) && e !== "classes",
  name: "MuiSelect",
  slot: "NativeInput",
  overridesResolver: (e, o) => o.nativeInput
})({
  bottom: 0,
  left: 0,
  position: "absolute",
  opacity: 0,
  pointerEvents: "none",
  width: "100%",
  boxSizing: "border-box"
});
function bM(e, o) {
  return typeof o == "object" && o !== null ? e === o : String(e) === String(o);
}
function WQ(e) {
  return e == null || typeof e == "string" && !e.trim();
}
const YQ = (e) => {
  const {
    classes: o,
    variant: i,
    disabled: c,
    multiple: d,
    open: p,
    error: f
  } = e, v = {
    select: ["select", i, c && "disabled", d && "multiple", f && "error"],
    icon: ["icon", `icon${ce(i)}`, p && "iconOpen", c && "disabled"],
    nativeInput: ["nativeInput"]
  };
  return Ye(v, zQ, o);
}, vI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c;
  const {
    "aria-describedby": d,
    "aria-label": p,
    autoFocus: f,
    autoWidth: v,
    children: g,
    className: b,
    defaultOpen: S,
    defaultValue: R,
    disabled: D,
    displayEmpty: k,
    error: $ = !1,
    IconComponent: P,
    inputRef: O,
    labelId: I,
    MenuProps: _ = {},
    multiple: A,
    name: V,
    onBlur: B,
    onChange: M,
    onClose: F,
    onFocus: Y,
    onOpen: H,
    open: J,
    readOnly: W,
    renderValue: te,
    SelectDisplayProps: Z = {},
    tabIndex: q,
    value: Q,
    variant: re = "standard"
  } = o, ie = ue(o, FQ), [K, ne] = Eo({
    controlled: Q,
    default: R,
    name: "Select"
  }), [se, Fe] = Eo({
    controlled: J,
    default: S,
    name: "Select"
  }), qe = w.useRef(null), Me = w.useRef(null), [fe, De] = w.useState(null), {
    current: be
  } = w.useRef(J != null), [Ce, de] = w.useState(), Ae = cn(i, O), at = w.useCallback((nt) => {
    Me.current = nt, nt && De(nt);
  }, []), Oe = fe == null ? void 0 : fe.parentNode;
  w.useImperativeHandle(Ae, () => ({
    focus: () => {
      Me.current.focus();
    },
    node: qe.current,
    value: K
  }), [K]), w.useEffect(() => {
    S && se && fe && !be && (de(v ? null : Oe.clientWidth), Me.current.focus());
  }, [fe, v]), w.useEffect(() => {
    f && Me.current.focus();
  }, [f]), w.useEffect(() => {
    if (!I)
      return;
    const nt = Dn(Me.current).getElementById(I);
    if (nt) {
      const Le = () => {
        getSelection().isCollapsed && Me.current.focus();
      };
      return nt.addEventListener("click", Le), () => {
        nt.removeEventListener("click", Le);
      };
    }
  }, [I]);
  const _e = (nt, Le) => {
    nt ? H && H(Le) : F && F(Le), be || (de(v ? null : Oe.clientWidth), Fe(nt));
  }, ye = (nt) => {
    nt.button === 0 && (nt.preventDefault(), Me.current.focus(), _e(!0, nt));
  }, ae = (nt) => {
    _e(!1, nt);
  }, $e = w.Children.toArray(g), Se = (nt) => {
    const Le = $e.find((et) => et.props.value === nt.target.value);
    Le !== void 0 && (ne(Le.props.value), M && M(nt, Le));
  }, mt = (nt) => (Le) => {
    let et;
    if (Le.currentTarget.hasAttribute("tabindex")) {
      if (A) {
        et = Array.isArray(K) ? K.slice() : [];
        const pt = K.indexOf(nt.props.value);
        pt === -1 ? et.push(nt.props.value) : et.splice(pt, 1);
      } else
        et = nt.props.value;
      if (nt.props.onClick && nt.props.onClick(Le), K !== et && (ne(et), M)) {
        const pt = Le.nativeEvent || Le, Dt = new pt.constructor(pt.type, pt);
        Object.defineProperty(Dt, "target", {
          writable: !0,
          value: {
            value: et,
            name: V
          }
        }), M(Dt, nt);
      }
      A || _e(!1, Le);
    }
  }, Be = (nt) => {
    W || [
      " ",
      "ArrowUp",
      "ArrowDown",
      // The native select doesn't respond to enter on macOS, but it's recommended by
      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/
      "Enter"
    ].indexOf(nt.key) !== -1 && (nt.preventDefault(), _e(!0, nt));
  }, ft = fe !== null && se, je = (nt) => {
    !ft && B && (Object.defineProperty(nt, "target", {
      writable: !0,
      value: {
        value: K,
        name: V
      }
    }), B(nt));
  };
  delete ie["aria-invalid"];
  let Ve, st;
  const gt = [];
  let Tt = !1, _t = !1;
  (GC({
    value: K
  }) || k) && (te ? Ve = te(K) : Tt = !0);
  const Zt = $e.map((nt) => {
    if (!/* @__PURE__ */ w.isValidElement(nt))
      return null;
    process.env.NODE_ENV !== "production" && Xi.isFragment(nt) && console.error(["MUI: The Select component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    let Le;
    if (A) {
      if (!Array.isArray(K))
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: The `value` prop must be an array when using the `Select` component with `multiple`." : Bs(2));
      Le = K.some((et) => bM(et, nt.props.value)), Le && Tt && gt.push(nt.props.children);
    } else
      Le = bM(K, nt.props.value), Le && Tt && (st = nt.props.children);
    return Le && (_t = !0), /* @__PURE__ */ w.cloneElement(nt, {
      "aria-selected": Le ? "true" : "false",
      onClick: mt(nt),
      onKeyUp: (et) => {
        et.key === " " && et.preventDefault(), nt.props.onKeyUp && nt.props.onKeyUp(et);
      },
      role: "option",
      selected: Le,
      value: void 0,
      // The value is most likely not a valid HTML attribute.
      "data-value": nt.props.value
      // Instead, we provide it as a data attribute.
    });
  });
  process.env.NODE_ENV !== "production" && w.useEffect(() => {
    if (!_t && !A && K !== "") {
      const nt = $e.map((Le) => Le.props.value);
      console.warn([`MUI: You have provided an out-of-range value \`${K}\` for the select ${V ? `(name="${V}") ` : ""}component.`, "Consider providing a value that matches one of the available options or ''.", `The available values are ${nt.filter((Le) => Le != null).map((Le) => `\`${Le}\``).join(", ") || '""'}.`].join(`
`));
    }
  }, [_t, $e, A, V, K]), Tt && (A ? gt.length === 0 ? Ve = null : Ve = gt.reduce((nt, Le, et) => (nt.push(Le), et < gt.length - 1 && nt.push(", "), nt), []) : Ve = st);
  let Vt = Ce;
  !v && be && fe && (Vt = Oe.clientWidth);
  let Te;
  typeof q < "u" ? Te = q : Te = D ? null : 0;
  const xe = Z.id || (V ? `mui-component-select-${V}` : void 0), ot = x({}, o, {
    variant: re,
    value: K,
    open: ft,
    error: $
  }), He = YQ(ot), it = x({}, _.PaperProps, (c = _.slotProps) == null ? void 0 : c.paper), Ze = Na();
  return /* @__PURE__ */ ht(w.Fragment, {
    children: [/* @__PURE__ */ z(jQ, x({
      ref: at,
      tabIndex: Te,
      role: "combobox",
      "aria-controls": Ze,
      "aria-disabled": D ? "true" : void 0,
      "aria-expanded": ft ? "true" : "false",
      "aria-haspopup": "listbox",
      "aria-label": p,
      "aria-labelledby": [I, xe].filter(Boolean).join(" ") || void 0,
      "aria-describedby": d,
      onKeyDown: Be,
      onMouseDown: D || W ? null : ye,
      onBlur: je,
      onFocus: Y
    }, Z, {
      ownerState: ot,
      className: ve(Z.className, He.select, b),
      id: xe,
      children: WQ(Ve) ? (
        // notranslate needed while Google Translate will not fix zero-width space issue
        yM || (yM = /* @__PURE__ */ z("span", {
          className: "notranslate",
          children: "​"
        }))
      ) : Ve
    })), /* @__PURE__ */ z(HQ, x({
      "aria-invalid": $,
      value: Array.isArray(K) ? K.join(",") : K,
      name: V,
      ref: qe,
      "aria-hidden": !0,
      onChange: Se,
      tabIndex: -1,
      disabled: D,
      className: He.nativeInput,
      autoFocus: f,
      ownerState: ot
    }, ie)), /* @__PURE__ */ z(UQ, {
      as: P,
      className: He.icon,
      ownerState: ot
    }), /* @__PURE__ */ z(dK, x({
      id: `menu-${V || ""}`,
      anchorEl: Oe,
      open: ft,
      onClose: ae,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "center"
      },
      transformOrigin: {
        vertical: "top",
        horizontal: "center"
      }
    }, _, {
      MenuListProps: x({
        "aria-labelledby": I,
        role: "listbox",
        "aria-multiselectable": A ? "true" : void 0,
        disableListWrap: !0,
        id: Ze
      }, _.MenuListProps),
      slotProps: x({}, _.slotProps, {
        paper: x({}, it, {
          style: x({
            minWidth: Vt
          }, it != null ? it.style : null)
        })
      }),
      children: Zt
    }))]
  });
});
process.env.NODE_ENV !== "production" && (vI.propTypes = {
  /**
   * @ignore
   */
  "aria-describedby": t.string,
  /**
   * @ignore
   */
  "aria-label": t.string,
  /**
   * @ignore
   */
  autoFocus: t.bool,
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */
  autoWidth: t.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `<MenuItem>` elements.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * The CSS class name of the select element.
   */
  className: t.string,
  /**
   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.
   * You can only use it when the `native` prop is `false` (default).
   */
  defaultOpen: t.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the select is disabled.
   */
  disabled: t.bool,
  /**
   * If `true`, the selected item is displayed even if its value is empty.
   */
  displayEmpty: t.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: t.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: t.elementType.isRequired,
  /**
   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`
   * Equivalent to `ref`
   */
  inputRef: Lo,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: t.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: t.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */
  multiple: t.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: t.string,
  /**
   * @ignore
   */
  onBlur: t.func,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected.
   */
  onChange: t.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: t.func,
  /**
   * @ignore
   */
  onFocus: t.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: t.func,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool,
  /**
   * @ignore
   */
  readOnly: t.bool,
  /**
   * Render the selected value.
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: t.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: t.object,
  /**
   * @ignore
   */
  tabIndex: t.oneOfType([t.number, t.string]),
  /**
   * @ignore
   */
  type: t.any,
  /**
   * The input value.
   */
  value: t.any,
  /**
   * The variant to use.
   */
  variant: t.oneOf(["standard", "outlined", "filled"])
});
const GQ = vI, qQ = ["autoWidth", "children", "classes", "className", "defaultOpen", "displayEmpty", "IconComponent", "id", "input", "inputProps", "label", "labelId", "MenuProps", "multiple", "native", "onClose", "onOpen", "open", "renderValue", "SelectDisplayProps", "variant"], KQ = ["root"], QQ = (e) => {
  const {
    classes: o
  } = e;
  return o;
}, Vw = {
  name: "MuiSelect",
  overridesResolver: (e, o) => o.root,
  shouldForwardProp: (e) => Ao(e) && e !== "variant",
  slot: "Root"
}, XQ = ee($w, Vw)(""), ZQ = ee(rI, Vw)(""), JQ = ee(h$, Vw)(""), Fw = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    name: "MuiSelect",
    props: o
  }), {
    autoWidth: d = !1,
    children: p,
    classes: f = {},
    className: v,
    defaultOpen: g = !1,
    displayEmpty: b = !1,
    IconComponent: S = Ew,
    id: R,
    input: D,
    inputProps: k,
    label: $,
    labelId: P,
    MenuProps: O,
    multiple: I = !1,
    native: _ = !1,
    onClose: A,
    onOpen: V,
    open: B,
    renderValue: M,
    SelectDisplayProps: F,
    variant: Y = "outlined"
  } = c, H = ue(c, qQ), J = _ ? nI : GQ, W = Zi(), te = Bl({
    props: c,
    muiFormControl: W,
    states: ["variant", "error"]
  }), Z = te.variant || Y, q = x({}, c, {
    variant: Z,
    classes: f
  }), Q = QQ(q), re = ue(Q, KQ), ie = D || {
    standard: /* @__PURE__ */ z(XQ, {
      ownerState: q
    }),
    outlined: /* @__PURE__ */ z(ZQ, {
      label: $,
      ownerState: q
    }),
    filled: /* @__PURE__ */ z(JQ, {
      ownerState: q
    })
  }[Z], K = cn(i, ie.ref);
  return /* @__PURE__ */ z(w.Fragment, {
    children: /* @__PURE__ */ w.cloneElement(ie, x({
      // Most of the logic is implemented in `SelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: J,
      inputProps: x({
        children: p,
        error: te.error,
        IconComponent: S,
        variant: Z,
        type: void 0,
        // We render a select. We can ignore the type provided by the `Input`.
        multiple: I
      }, _ ? {
        id: R
      } : {
        autoWidth: d,
        defaultOpen: g,
        displayEmpty: b,
        labelId: P,
        MenuProps: O,
        onClose: A,
        onOpen: V,
        open: B,
        renderValue: M,
        SelectDisplayProps: x({
          id: R
        }, F)
      }, k, {
        classes: k ? qi(re, k.classes) : re
      }, D ? D.props.inputProps : {})
    }, (I && _ || b) && Z === "outlined" ? {
      notched: !0
    } : {}, {
      ref: K,
      className: ve(ie.props.className, v, Q.root)
    }, !D && {
      variant: Z
    }, H))
  });
});
process.env.NODE_ENV !== "production" && (Fw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   * @default false
   */
  autoWidth: t.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
   *
   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, the component is initially open. Use when the component open state is not controlled (i.e. the `open` prop is not defined).
   * You can only use it when the `native` prop is `false` (default).
   * @default false
   */
  defaultOpen: t.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, a value is displayed even if no items are selected.
   *
   * In order to display a meaningful value, a function can be passed to the `renderValue` prop which
   * returns the value to be displayed when no items are selected.
   *
   * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.
   * The label should either be hidden or forced to a shrunk state.
   * @default false
   */
  displayEmpty: t.bool,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: t.elementType,
  /**
   * The `id` of the wrapper element or the `select` element when `native`.
   */
  id: t.string,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */
  input: t.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * When `native` is `true`, the attributes are applied on the `select` element.
   */
  inputProps: t.object,
  /**
   * See [OutlinedInput#label](/material-ui/api/outlined-input/#props)
   */
  label: t.node,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: t.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: t.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: t.bool,
  /**
   * If `true`, the component uses a native `select` element.
   * @default false
   */
  native: t.bool,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {SelectChangeEvent<Value>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event, not a change event, unless the change event is caused by browser autofill.
   * @param {object} [child] The react element that was selected when `native` is `false` (default).
   */
  onChange: t.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select collapses).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: t.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select expands).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: t.func,
  /**
   * If `true`, the component is shown.
   * You can only use it when the `native` prop is `false` (default).
   */
  open: t.bool,
  /**
   * Render the selected value.
   * You can only use it when the `native` prop is `false` (default).
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: t.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The `input` value. Providing an empty string will select no options.
   * Set to an empty string `''` if you don't want any of the available options to be selected.
   *
   * If the value is an object it must have reference equality with the option in order to be selected.
   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
   */
  value: t.oneOfType([t.oneOf([""]), t.any]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: t.oneOf(["filled", "outlined", "standard"])
});
Fw.muiName = "Select";
const gI = Fw;
function eX(e) {
  return We("MuiSkeleton", e);
}
const tX = Ge("MuiSkeleton", ["root", "text", "rectangular", "rounded", "circular", "pulse", "wave", "withChildren", "fitContent", "heightAuto"]), Wie = tX, nX = ["animation", "className", "component", "height", "style", "variant", "width"];
let QC = (e) => e, CM, xM, SM, TM;
const oX = (e) => {
  const {
    classes: o,
    variant: i,
    animation: c,
    hasChildren: d,
    width: p,
    height: f
  } = e;
  return Ye({
    root: ["root", i, c, d && "withChildren", d && !p && "fitContent", d && !f && "heightAuto"]
  }, eX, o);
}, rX = Qi(CM || (CM = QC`
  0% {
    opacity: 1;
  }

  50% {
    opacity: 0.4;
  }

  100% {
    opacity: 1;
  }
`)), aX = Qi(xM || (xM = QC`
  0% {
    transform: translateX(-100%);
  }

  50% {
    /* +0.5s of delay between each loop */
    transform: translateX(100%);
  }

  100% {
    transform: translateX(100%);
  }
`)), iX = ee("span", {
  name: "MuiSkeleton",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[i.variant], i.animation !== !1 && o[i.animation], i.hasChildren && o.withChildren, i.hasChildren && !i.width && o.fitContent, i.hasChildren && !i.height && o.heightAuto];
  }
})(({
  theme: e,
  ownerState: o
}) => {
  const i = iw(e.shape.borderRadius) || "px", c = Nl(e.shape.borderRadius);
  return x({
    display: "block",
    // Create a "on paper" color with sufficient contrast retaining the color
    backgroundColor: e.vars ? e.vars.palette.Skeleton.bg : di(e.palette.text.primary, e.palette.mode === "light" ? 0.11 : 0.13),
    height: "1.2em"
  }, o.variant === "text" && {
    marginTop: 0,
    marginBottom: 0,
    height: "auto",
    transformOrigin: "0 55%",
    transform: "scale(1, 0.60)",
    borderRadius: `${c}${i}/${Math.round(c / 0.6 * 10) / 10}${i}`,
    "&:empty:before": {
      content: '"\\00a0"'
    }
  }, o.variant === "circular" && {
    borderRadius: "50%"
  }, o.variant === "rounded" && {
    borderRadius: (e.vars || e).shape.borderRadius
  }, o.hasChildren && {
    "& > *": {
      visibility: "hidden"
    }
  }, o.hasChildren && !o.width && {
    maxWidth: "fit-content"
  }, o.hasChildren && !o.height && {
    height: "auto"
  });
}, ({
  ownerState: e
}) => e.animation === "pulse" && qc(SM || (SM = QC`
      animation: ${0} 2s ease-in-out 0.5s infinite;
    `), rX), ({
  ownerState: e,
  theme: o
}) => e.animation === "wave" && qc(TM || (TM = QC`
      position: relative;
      overflow: hidden;

      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */
      -webkit-mask-image: -webkit-radial-gradient(white, black);

      &::after {
        animation: ${0} 2s linear 0.5s infinite;
        background: linear-gradient(
          90deg,
          transparent,
          ${0},
          transparent
        );
        content: '';
        position: absolute;
        transform: translateX(-100%); /* Avoid flash during server-side hydration */
        bottom: 0;
        left: 0;
        right: 0;
        top: 0;
      }
    `), aX, (o.vars || o).palette.action.hover)), yI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiSkeleton"
  }), {
    animation: d = "pulse",
    className: p,
    component: f = "span",
    height: v,
    style: g,
    variant: b = "text",
    width: S
  } = c, R = ue(c, nX), D = x({}, c, {
    animation: d,
    component: f,
    variant: b,
    hasChildren: !!R.children
  }), k = oX(D);
  return /* @__PURE__ */ z(iX, x({
    as: f,
    ref: i,
    className: ve(k.root, p),
    ownerState: D
  }, R, {
    style: x({
      width: S,
      height: v
    }, g)
  }));
});
process.env.NODE_ENV !== "production" && (yI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The animation.
   * If `false` the animation effect is disabled.
   * @default 'pulse'
   */
  animation: t.oneOf(["pulse", "wave", !1]),
  /**
   * Optional children to infer width and height from.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Height of the skeleton.
   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.
   */
  height: t.oneOfType([t.number, t.string]),
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The type of content that will be rendered.
   * @default 'text'
   */
  variant: t.oneOfType([t.oneOf(["circular", "rectangular", "rounded", "text"]), t.string]),
  /**
   * Width of the skeleton.
   * Useful when the skeleton is inside an inline element with no width of its own.
   */
  width: t.oneOfType([t.number, t.string])
});
const Yie = yI, sX = (e) => !e || !Gi(e), lX = sX;
function cX(e) {
  return We("MuiSlider", e);
}
const uX = Ge("MuiSlider", ["root", "active", "colorPrimary", "colorSecondary", "colorError", "colorInfo", "colorSuccess", "colorWarning", "disabled", "dragging", "focusVisible", "mark", "markActive", "marked", "markLabel", "markLabelActive", "rail", "sizeSmall", "thumb", "thumbColorPrimary", "thumbColorSecondary", "thumbColorError", "thumbColorSuccess", "thumbColorInfo", "thumbColorWarning", "track", "trackInverted", "trackFalse", "thumbSizeSmall", "valueLabel", "valueLabelOpen", "valueLabelCircle", "valueLabelLabel", "vertical"]), Yi = uX, dX = (e) => {
  const {
    open: o
  } = e;
  return {
    offset: ve(o && Yi.valueLabelOpen),
    circle: Yi.valueLabelCircle,
    label: Yi.valueLabelLabel
  };
};
function bI(e) {
  const {
    children: o,
    className: i,
    value: c
  } = e, d = dX(e);
  return o ? /* @__PURE__ */ w.cloneElement(o, {
    className: ve(o.props.className)
  }, /* @__PURE__ */ ht(w.Fragment, {
    children: [o.props.children, /* @__PURE__ */ z("span", {
      className: ve(d.offset, i),
      "aria-hidden": !0,
      children: /* @__PURE__ */ z("span", {
        className: d.circle,
        children: /* @__PURE__ */ z("span", {
          className: d.label,
          children: c
        })
      })
    })]
  })) : null;
}
process.env.NODE_ENV !== "production" && (bI.propTypes = {
  children: t.element.isRequired,
  className: t.string,
  value: t.node
});
const pX = ["aria-label", "aria-valuetext", "aria-labelledby", "component", "components", "componentsProps", "color", "classes", "className", "disableSwap", "disabled", "getAriaLabel", "getAriaValueText", "marks", "max", "min", "name", "onChange", "onChangeCommitted", "orientation", "shiftStep", "size", "step", "scale", "slotProps", "slots", "tabIndex", "track", "value", "valueLabelDisplay", "valueLabelFormat"];
function wM(e) {
  return e;
}
const fX = ee("span", {
  name: "MuiSlider",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[`color${ce(i.color)}`], i.size !== "medium" && o[`size${ce(i.size)}`], i.marked && o.marked, i.orientation === "vertical" && o.vertical, i.track === "inverted" && o.trackInverted, i.track === !1 && o.trackFalse];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  borderRadius: 12,
  boxSizing: "content-box",
  display: "inline-block",
  position: "relative",
  cursor: "pointer",
  touchAction: "none",
  color: (e.vars || e).palette[o.color].main,
  WebkitTapHighlightColor: "transparent"
}, o.orientation === "horizontal" && x({
  height: 4,
  width: "100%",
  padding: "13px 0",
  // The primary input mechanism of the device includes a pointing device of limited accuracy.
  "@media (pointer: coarse)": {
    // Reach 42px touch target, about ~8mm on screen.
    padding: "20px 0"
  }
}, o.size === "small" && {
  height: 2
}, o.marked && {
  marginBottom: 20
}), o.orientation === "vertical" && x({
  height: "100%",
  width: 4,
  padding: "0 13px",
  // The primary input mechanism of the device includes a pointing device of limited accuracy.
  "@media (pointer: coarse)": {
    // Reach 42px touch target, about ~8mm on screen.
    padding: "0 20px"
  }
}, o.size === "small" && {
  width: 2
}, o.marked && {
  marginRight: 44
}), {
  "@media print": {
    colorAdjust: "exact"
  },
  [`&.${Yi.disabled}`]: {
    pointerEvents: "none",
    cursor: "default",
    color: (e.vars || e).palette.grey[400]
  },
  [`&.${Yi.dragging}`]: {
    [`& .${Yi.thumb}, & .${Yi.track}`]: {
      transition: "none"
    }
  }
})), mX = ee("span", {
  name: "MuiSlider",
  slot: "Rail",
  overridesResolver: (e, o) => o.rail
})(({
  ownerState: e
}) => x({
  display: "block",
  position: "absolute",
  borderRadius: "inherit",
  backgroundColor: "currentColor",
  opacity: 0.38
}, e.orientation === "horizontal" && {
  width: "100%",
  height: "inherit",
  top: "50%",
  transform: "translateY(-50%)"
}, e.orientation === "vertical" && {
  height: "100%",
  width: "inherit",
  left: "50%",
  transform: "translateX(-50%)"
}, e.track === "inverted" && {
  opacity: 1
})), hX = ee("span", {
  name: "MuiSlider",
  slot: "Track",
  overridesResolver: (e, o) => o.track
})(({
  theme: e,
  ownerState: o
}) => {
  const i = (
    // Same logic as the LinearProgress track color
    e.palette.mode === "light" ? e0(e.palette[o.color].main, 0.62) : t0(e.palette[o.color].main, 0.5)
  );
  return x({
    display: "block",
    position: "absolute",
    borderRadius: "inherit",
    border: "1px solid currentColor",
    backgroundColor: "currentColor",
    transition: e.transitions.create(["left", "width", "bottom", "height"], {
      duration: e.transitions.duration.shortest
    })
  }, o.size === "small" && {
    border: "none"
  }, o.orientation === "horizontal" && {
    height: "inherit",
    top: "50%",
    transform: "translateY(-50%)"
  }, o.orientation === "vertical" && {
    width: "inherit",
    left: "50%",
    transform: "translateX(-50%)"
  }, o.track === !1 && {
    display: "none"
  }, o.track === "inverted" && {
    backgroundColor: e.vars ? e.vars.palette.Slider[`${o.color}Track`] : i,
    borderColor: e.vars ? e.vars.palette.Slider[`${o.color}Track`] : i
  });
}), vX = ee("span", {
  name: "MuiSlider",
  slot: "Thumb",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.thumb, o[`thumbColor${ce(i.color)}`], i.size !== "medium" && o[`thumbSize${ce(i.size)}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  position: "absolute",
  width: 20,
  height: 20,
  boxSizing: "border-box",
  borderRadius: "50%",
  outline: 0,
  backgroundColor: "currentColor",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  transition: e.transitions.create(["box-shadow", "left", "bottom"], {
    duration: e.transitions.duration.shortest
  })
}, o.size === "small" && {
  width: 12,
  height: 12
}, o.orientation === "horizontal" && {
  top: "50%",
  transform: "translate(-50%, -50%)"
}, o.orientation === "vertical" && {
  left: "50%",
  transform: "translate(-50%, 50%)"
}, {
  "&::before": x({
    position: "absolute",
    content: '""',
    borderRadius: "inherit",
    width: "100%",
    height: "100%",
    boxShadow: (e.vars || e).shadows[2]
  }, o.size === "small" && {
    boxShadow: "none"
  }),
  "&::after": {
    position: "absolute",
    content: '""',
    borderRadius: "50%",
    // 42px is the hit target
    width: 42,
    height: 42,
    top: "50%",
    left: "50%",
    transform: "translate(-50%, -50%)"
  },
  [`&:hover, &.${Yi.focusVisible}`]: {
    boxShadow: `0px 0px 0px 8px ${e.vars ? `rgba(${e.vars.palette[o.color].mainChannel} / 0.16)` : Wt(e.palette[o.color].main, 0.16)}`,
    "@media (hover: none)": {
      boxShadow: "none"
    }
  },
  [`&.${Yi.active}`]: {
    boxShadow: `0px 0px 0px 14px ${e.vars ? `rgba(${e.vars.palette[o.color].mainChannel} / 0.16)` : Wt(e.palette[o.color].main, 0.16)}`
  },
  [`&.${Yi.disabled}`]: {
    "&:hover": {
      boxShadow: "none"
    }
  }
})), gX = ee(bI, {
  name: "MuiSlider",
  slot: "ValueLabel",
  overridesResolver: (e, o) => o.valueLabel
})(({
  theme: e,
  ownerState: o
}) => x({
  [`&.${Yi.valueLabelOpen}`]: {
    transform: `${o.orientation === "vertical" ? "translateY(-50%)" : "translateY(-100%)"} scale(1)`
  },
  zIndex: 1,
  whiteSpace: "nowrap"
}, e.typography.body2, {
  fontWeight: 500,
  transition: e.transitions.create(["transform"], {
    duration: e.transitions.duration.shortest
  }),
  transform: `${o.orientation === "vertical" ? "translateY(-50%)" : "translateY(-100%)"} scale(0)`,
  position: "absolute",
  backgroundColor: (e.vars || e).palette.grey[600],
  borderRadius: 2,
  color: (e.vars || e).palette.common.white,
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  padding: "0.25rem 0.75rem"
}, o.orientation === "horizontal" && {
  top: "-10px",
  transformOrigin: "bottom center",
  "&::before": {
    position: "absolute",
    content: '""',
    width: 8,
    height: 8,
    transform: "translate(-50%, 50%) rotate(45deg)",
    backgroundColor: "inherit",
    bottom: 0,
    left: "50%"
  }
}, o.orientation === "vertical" && {
  right: o.size === "small" ? "20px" : "30px",
  top: "50%",
  transformOrigin: "right center",
  "&::before": {
    position: "absolute",
    content: '""',
    width: 8,
    height: 8,
    transform: "translate(-50%, -50%) rotate(45deg)",
    backgroundColor: "inherit",
    right: -8,
    top: "50%"
  }
}, o.size === "small" && {
  fontSize: e.typography.pxToRem(12),
  padding: "0.25rem 0.5rem"
})), yX = ee("span", {
  name: "MuiSlider",
  slot: "Mark",
  shouldForwardProp: (e) => Gv(e) && e !== "markActive",
  overridesResolver: (e, o) => {
    const {
      markActive: i
    } = e;
    return [o.mark, i && o.markActive];
  }
})(({
  theme: e,
  ownerState: o,
  markActive: i
}) => x({
  position: "absolute",
  width: 2,
  height: 2,
  borderRadius: 1,
  backgroundColor: "currentColor"
}, o.orientation === "horizontal" && {
  top: "50%",
  transform: "translate(-1px, -50%)"
}, o.orientation === "vertical" && {
  left: "50%",
  transform: "translate(-50%, 1px)"
}, i && {
  backgroundColor: (e.vars || e).palette.background.paper,
  opacity: 0.8
})), bX = ee("span", {
  name: "MuiSlider",
  slot: "MarkLabel",
  shouldForwardProp: (e) => Gv(e) && e !== "markLabelActive",
  overridesResolver: (e, o) => o.markLabel
})(({
  theme: e,
  ownerState: o,
  markLabelActive: i
}) => x({}, e.typography.body2, {
  color: (e.vars || e).palette.text.secondary,
  position: "absolute",
  whiteSpace: "nowrap"
}, o.orientation === "horizontal" && {
  top: 30,
  transform: "translateX(-50%)",
  "@media (pointer: coarse)": {
    top: 40
  }
}, o.orientation === "vertical" && {
  left: 36,
  transform: "translateY(50%)",
  "@media (pointer: coarse)": {
    left: 44
  }
}, i && {
  color: (e.vars || e).palette.text.primary
})), CX = (e) => {
  const {
    disabled: o,
    dragging: i,
    marked: c,
    orientation: d,
    track: p,
    classes: f,
    color: v,
    size: g
  } = e, b = {
    root: ["root", o && "disabled", i && "dragging", c && "marked", d === "vertical" && "vertical", p === "inverted" && "trackInverted", p === !1 && "trackFalse", v && `color${ce(v)}`, g && `size${ce(g)}`],
    rail: ["rail"],
    track: ["track"],
    mark: ["mark"],
    markActive: ["markActive"],
    markLabel: ["markLabel"],
    markLabelActive: ["markLabelActive"],
    valueLabel: ["valueLabel"],
    thumb: ["thumb", o && "disabled", g && `thumbSize${ce(g)}`, v && `thumbColor${ce(v)}`],
    active: ["active"],
    disabled: ["disabled"],
    focusVisible: ["focusVisible"]
  };
  return Ye(b, cX, f);
}, xX = ({
  children: e
}) => e, CI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d, p, f, v, g, b, S, R, D, k, $, P, O, I, _, A, V, B, M, F, Y, H, J;
  const W = Ue({
    props: o,
    name: "MuiSlider"
  }), Z = Mn().direction === "rtl", {
    "aria-label": q,
    "aria-valuetext": Q,
    "aria-labelledby": re,
    // eslint-disable-next-line react/prop-types
    component: ie = "span",
    components: K = {},
    componentsProps: ne = {},
    color: se = "primary",
    classes: Fe,
    className: qe,
    disableSwap: Me = !1,
    disabled: fe = !1,
    getAriaLabel: De,
    getAriaValueText: be,
    marks: Ce = !1,
    max: de = 100,
    min: Ae = 0,
    orientation: at = "horizontal",
    shiftStep: Oe = 10,
    size: _e = "medium",
    step: ye = 1,
    scale: ae = wM,
    slotProps: $e,
    slots: Se,
    track: mt = "normal",
    valueLabelDisplay: Be = "off",
    valueLabelFormat: ft = wM
  } = W, je = ue(W, pX), Ve = x({}, W, {
    isRtl: Z,
    max: de,
    min: Ae,
    classes: Fe,
    disabled: fe,
    disableSwap: Me,
    orientation: at,
    marks: Ce,
    color: se,
    size: _e,
    step: ye,
    shiftStep: Oe,
    scale: ae,
    track: mt,
    valueLabelDisplay: Be,
    valueLabelFormat: ft
  }), {
    axisProps: st,
    getRootProps: gt,
    getHiddenInputProps: Tt,
    getThumbProps: _t,
    open: Zt,
    active: Vt,
    axis: Te,
    focusedThumbIndex: xe,
    range: ot,
    dragging: He,
    marks: it,
    values: Ze,
    trackOffset: nt,
    trackLeap: Le,
    getThumbStyle: et
  } = x3(x({}, Ve, {
    rootRef: i
  }));
  Ve.marked = it.length > 0 && it.some((ge) => ge.label), Ve.dragging = He, Ve.focusedThumbIndex = xe;
  const pt = CX(Ve), Dt = (c = (d = Se == null ? void 0 : Se.root) != null ? d : K.Root) != null ? c : fX, Nt = (p = (f = Se == null ? void 0 : Se.rail) != null ? f : K.Rail) != null ? p : mX, Jt = (v = (g = Se == null ? void 0 : Se.track) != null ? g : K.Track) != null ? v : hX, Yt = (b = (S = Se == null ? void 0 : Se.thumb) != null ? S : K.Thumb) != null ? b : vX, en = (R = (D = Se == null ? void 0 : Se.valueLabel) != null ? D : K.ValueLabel) != null ? R : gX, Nn = (k = ($ = Se == null ? void 0 : Se.mark) != null ? $ : K.Mark) != null ? k : yX, nn = (P = (O = Se == null ? void 0 : Se.markLabel) != null ? O : K.MarkLabel) != null ? P : bX, Un = (I = (_ = Se == null ? void 0 : Se.input) != null ? _ : K.Input) != null ? I : "input", Ro = (A = $e == null ? void 0 : $e.root) != null ? A : ne.root, Oo = (V = $e == null ? void 0 : $e.rail) != null ? V : ne.rail, Yr = (B = $e == null ? void 0 : $e.track) != null ? B : ne.track, _o = (M = $e == null ? void 0 : $e.thumb) != null ? M : ne.thumb, Pn = (F = $e == null ? void 0 : $e.valueLabel) != null ? F : ne.valueLabel, Tn = (Y = $e == null ? void 0 : $e.mark) != null ? Y : ne.mark, Hn = (H = $e == null ? void 0 : $e.markLabel) != null ? H : ne.markLabel, Zn = (J = $e == null ? void 0 : $e.input) != null ? J : ne.input, no = ln({
    elementType: Dt,
    getSlotProps: gt,
    externalSlotProps: Ro,
    externalForwardedProps: je,
    additionalProps: x({}, lX(Dt) && {
      as: ie
    }),
    ownerState: x({}, Ve, Ro == null ? void 0 : Ro.ownerState),
    className: [pt.root, qe]
  }), Xo = ln({
    elementType: Nt,
    externalSlotProps: Oo,
    ownerState: Ve,
    className: pt.rail
  }), Bo = ln({
    elementType: Jt,
    externalSlotProps: Yr,
    additionalProps: {
      style: x({}, st[Te].offset(nt), st[Te].leap(Le))
    },
    ownerState: x({}, Ve, Yr == null ? void 0 : Yr.ownerState),
    className: pt.track
  }), zo = ln({
    elementType: Yt,
    getSlotProps: _t,
    externalSlotProps: _o,
    ownerState: x({}, Ve, _o == null ? void 0 : _o.ownerState),
    className: pt.thumb
  }), Dr = ln({
    elementType: en,
    externalSlotProps: Pn,
    ownerState: x({}, Ve, Pn == null ? void 0 : Pn.ownerState),
    className: pt.valueLabel
  }), Vo = ln({
    elementType: Nn,
    externalSlotProps: Tn,
    ownerState: Ve,
    className: pt.mark
  }), go = ln({
    elementType: nn,
    externalSlotProps: Hn,
    ownerState: Ve,
    className: pt.markLabel
  }), ze = ln({
    elementType: Un,
    getSlotProps: Tt,
    externalSlotProps: Zn,
    ownerState: Ve
  });
  return /* @__PURE__ */ ht(Dt, x({}, no, {
    children: [/* @__PURE__ */ z(Nt, x({}, Xo)), /* @__PURE__ */ z(Jt, x({}, Bo)), it.filter((ge) => ge.value >= Ae && ge.value <= de).map((ge, rt) => {
      const bt = YC(ge.value, Ae, de), sn = st[Te].offset(bt);
      let yt;
      return mt === !1 ? yt = Ze.indexOf(ge.value) !== -1 : yt = mt === "normal" && (ot ? ge.value >= Ze[0] && ge.value <= Ze[Ze.length - 1] : ge.value <= Ze[0]) || mt === "inverted" && (ot ? ge.value <= Ze[0] || ge.value >= Ze[Ze.length - 1] : ge.value >= Ze[0]), /* @__PURE__ */ ht(w.Fragment, {
        children: [/* @__PURE__ */ z(Nn, x({
          "data-index": rt
        }, Vo, !Gi(Nn) && {
          markActive: yt
        }, {
          style: x({}, sn, Vo.style),
          className: ve(Vo.className, yt && pt.markActive)
        })), ge.label != null ? /* @__PURE__ */ z(nn, x({
          "aria-hidden": !0,
          "data-index": rt
        }, go, !Gi(nn) && {
          markLabelActive: yt
        }, {
          style: x({}, sn, go.style),
          className: ve(pt.markLabel, go.className, yt && pt.markLabelActive),
          children: ge.label
        })) : null]
      }, rt);
    }), Ze.map((ge, rt) => {
      const bt = YC(ge, Ae, de), sn = st[Te].offset(bt), yt = Be === "off" ? xX : en;
      return (
        /* TODO v6: Change component structure. It will help in avoiding the complicated React.cloneElement API added in SliderValueLabel component. Should be: Thumb -> Input, ValueLabel. Follow Joy UI's Slider structure. */
        /* @__PURE__ */ z(yt, x({}, !Gi(yt) && {
          valueLabelFormat: ft,
          valueLabelDisplay: Be,
          value: typeof ft == "function" ? ft(ae(ge), rt) : ft,
          index: rt,
          open: Zt === rt || Vt === rt || Be === "on",
          disabled: fe
        }, Dr, {
          children: /* @__PURE__ */ z(Yt, x({
            "data-index": rt
          }, zo, {
            className: ve(pt.thumb, zo.className, Vt === rt && pt.active, xe === rt && pt.focusVisible),
            style: x({}, sn, et(rt), zo.style),
            children: /* @__PURE__ */ z(Un, x({
              "data-index": rt,
              "aria-label": De ? De(rt) : q,
              "aria-valuenow": ae(ge),
              "aria-labelledby": re,
              "aria-valuetext": be ? be(ae(ge), rt) : Q,
              value: Ze[rt]
            }, ze))
          }))
        }), rt)
      );
    })]
  }));
});
process.env.NODE_ENV !== "production" && (CI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The label of the slider.
   */
  "aria-label": Ko(t.string, (e) => Array.isArray(e.value || e.defaultValue) && e["aria-label"] != null ? new Error("MUI: You need to use the `getAriaLabel` prop instead of `aria-label` when using a range slider.") : null),
  /**
   * The id of the element containing a label for the slider.
   */
  "aria-labelledby": t.string,
  /**
   * A string value that provides a user-friendly name for the current value of the slider.
   */
  "aria-valuetext": Ko(t.string, (e) => Array.isArray(e.value || e.defaultValue) && e["aria-valuetext"] != null ? new Error("MUI: You need to use the `getAriaValueText` prop instead of `aria-valuetext` when using a range slider.") : null),
  /**
   * @ignore
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    Input: t.elementType,
    Mark: t.elementType,
    MarkLabel: t.elementType,
    Rail: t.elementType,
    Root: t.elementType,
    Thumb: t.elementType,
    Track: t.elementType,
    ValueLabel: t.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: t.shape({
    input: t.oneOfType([t.func, t.object]),
    mark: t.oneOfType([t.func, t.object]),
    markLabel: t.oneOfType([t.func, t.object]),
    rail: t.oneOfType([t.func, t.object]),
    root: t.oneOfType([t.func, t.object]),
    thumb: t.oneOfType([t.func, t.object]),
    track: t.oneOfType([t.func, t.object]),
    valueLabel: t.oneOfType([t.func, t.shape({
      children: t.element,
      className: t.string,
      open: t.bool,
      style: t.object,
      value: t.number,
      valueLabelDisplay: t.oneOf(["auto", "off", "on"])
    })])
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.oneOfType([t.arrayOf(t.number), t.number]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, the active thumb doesn't swap when moving pointer over a thumb while dragging another thumb.
   * @default false
   */
  disableSwap: t.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the thumb labels of the slider.
   * This is important for screen reader users.
   * @param {number} index The thumb label's index to format.
   * @returns {string}
   */
  getAriaLabel: t.func,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the slider.
   * This is important for screen reader users.
   * @param {number} value The thumb label's value to format.
   * @param {number} index The thumb label's index to format.
   * @returns {string}
   */
  getAriaValueText: t.func,
  /**
   * Marks indicate predetermined values to which the user can move the slider.
   * If `true` the marks are spaced according the value of the `step` prop.
   * If an array, it should contain objects with `value` and an optional `label` keys.
   * @default false
   */
  marks: t.oneOfType([t.arrayOf(t.shape({
    label: t.node,
    value: t.number.isRequired
  })), t.bool]),
  /**
   * The maximum allowed value of the slider.
   * Should not be equal to min.
   * @default 100
   */
  max: t.number,
  /**
   * The minimum allowed value of the slider.
   * Should not be equal to max.
   * @default 0
   */
  min: t.number,
  /**
   * Name attribute of the hidden `input` element.
   */
  name: t.string,
  /**
   * Callback function that is fired when the slider's value changed.
   *
   * @param {Event} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event not a change event.
   * @param {number | number[]} value The new value.
   * @param {number} activeThumb Index of the currently moved thumb.
   */
  onChange: t.func,
  /**
   * Callback function that is fired when the `mouseup` is triggered.
   *
   * @param {React.SyntheticEvent | Event} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {number | number[]} value The new value.
   */
  onChangeCommitted: t.func,
  /**
   * The component orientation.
   * @default 'horizontal'
   */
  orientation: t.oneOf(["horizontal", "vertical"]),
  /**
   * A transformation function, to change the scale of the slider.
   * @param {any} x
   * @returns {any}
   * @default function Identity(x) {
   *   return x;
   * }
   */
  scale: t.func,
  /**
   * The granularity with which the slider can step through values when using Page Up/Page Down or Shift + Arrow Up/Arrow Down.
   * @default 10
   */
  shiftStep: t.number,
  /**
   * The size of the slider.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["small", "medium"]), t.string]),
  /**
   * The props used for each slot inside the Slider.
   * @default {}
   */
  slotProps: t.shape({
    input: t.oneOfType([t.func, t.object]),
    mark: t.oneOfType([t.func, t.object]),
    markLabel: t.oneOfType([t.func, t.object]),
    rail: t.oneOfType([t.func, t.object]),
    root: t.oneOfType([t.func, t.object]),
    thumb: t.oneOfType([t.func, t.object]),
    track: t.oneOfType([t.func, t.object]),
    valueLabel: t.oneOfType([t.func, t.shape({
      children: t.element,
      className: t.string,
      open: t.bool,
      style: t.object,
      value: t.number,
      valueLabelDisplay: t.oneOf(["auto", "off", "on"])
    })])
  }),
  /**
   * The components used for each slot inside the Slider.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: t.shape({
    input: t.elementType,
    mark: t.elementType,
    markLabel: t.elementType,
    rail: t.elementType,
    root: t.elementType,
    thumb: t.elementType,
    track: t.elementType,
    valueLabel: t.elementType
  }),
  /**
   * The granularity with which the slider can step through values. (A "discrete" slider.)
   * The `min` prop serves as the origin for the valid values.
   * We recommend (max - min) to be evenly divisible by the step.
   *
   * When step is `null`, the thumb can only be slid onto marks provided with the `marks` prop.
   * @default 1
   */
  step: t.number,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Tab index attribute of the hidden `input` element.
   */
  tabIndex: t.number,
  /**
   * The track presentation:
   *
   * - `normal` the track will render a bar representing the slider value.
   * - `inverted` the track will render a bar representing the remaining slider value.
   * - `false` the track will render without a bar.
   * @default 'normal'
   */
  track: t.oneOf(["inverted", "normal", !1]),
  /**
   * The value of the slider.
   * For ranged sliders, provide an array with two values.
   */
  value: t.oneOfType([t.arrayOf(t.number), t.number]),
  /**
   * Controls when the value label is displayed:
   *
   * - `auto` the value label will display when the thumb is hovered or focused.
   * - `on` will display persistently.
   * - `off` will never display.
   * @default 'off'
   */
  valueLabelDisplay: t.oneOf(["auto", "off", "on"]),
  /**
   * The format function the value label's value.
   *
   * When a function is provided, it should have the following signature:
   *
   * - {number} value The value label's value to format
   * - {number} index The value label's index to format
   * @param {any} x
   * @returns {any}
   * @default function Identity(x) {
   *   return x;
   * }
   */
  valueLabelFormat: t.oneOfType([t.func, t.string])
});
const Gie = CI;
function SX(e) {
  return We("MuiSnackbarContent", e);
}
const TX = Ge("MuiSnackbarContent", ["root", "message", "action"]), qie = TX, wX = ["action", "className", "message", "role"], EX = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"],
    action: ["action"],
    message: ["message"]
  }, SX, o);
}, RX = ee(Ya, {
  name: "MuiSnackbarContent",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})(({
  theme: e
}) => {
  const o = e.palette.mode === "light" ? 0.8 : 0.98, i = PC(e.palette.background.default, o);
  return x({}, e.typography.body2, {
    color: e.vars ? e.vars.palette.SnackbarContent.color : e.palette.getContrastText(i),
    backgroundColor: e.vars ? e.vars.palette.SnackbarContent.bg : i,
    display: "flex",
    alignItems: "center",
    flexWrap: "wrap",
    padding: "6px 16px",
    borderRadius: (e.vars || e).shape.borderRadius,
    flexGrow: 1,
    [e.breakpoints.up("sm")]: {
      flexGrow: "initial",
      minWidth: 288
    }
  });
}), OX = ee("div", {
  name: "MuiSnackbarContent",
  slot: "Message",
  overridesResolver: (e, o) => o.message
})({
  padding: "8px 0"
}), kX = ee("div", {
  name: "MuiSnackbarContent",
  slot: "Action",
  overridesResolver: (e, o) => o.action
})({
  display: "flex",
  alignItems: "center",
  marginLeft: "auto",
  paddingLeft: 16,
  marginRight: -8
}), xI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiSnackbarContent"
  }), {
    action: d,
    className: p,
    message: f,
    role: v = "alert"
  } = c, g = ue(c, wX), b = c, S = EX(b);
  return /* @__PURE__ */ ht(RX, x({
    role: v,
    square: !0,
    elevation: 6,
    className: ve(S.root, p),
    ownerState: b,
    ref: i
  }, g, {
    children: [/* @__PURE__ */ z(OX, {
      className: S.message,
      ownerState: b,
      children: f
    }), d ? /* @__PURE__ */ z(kX, {
      className: S.action,
      ownerState: b,
      children: d
    }) : null]
  }));
});
process.env.NODE_ENV !== "production" && (xI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The action to display. It renders after the message, at the end of the snackbar.
   */
  action: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The message to display.
   */
  message: t.node,
  /**
   * The ARIA role attribute of the element.
   * @default 'alert'
   */
  role: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const DX = xI;
function MX(e) {
  return We("MuiSnackbar", e);
}
const NX = Ge("MuiSnackbar", ["root", "anchorOriginTopCenter", "anchorOriginBottomCenter", "anchorOriginTopRight", "anchorOriginBottomRight", "anchorOriginTopLeft", "anchorOriginBottomLeft"]), Kie = NX, PX = ["onEnter", "onExited"], $X = ["action", "anchorOrigin", "autoHideDuration", "children", "className", "ClickAwayListenerProps", "ContentProps", "disableWindowBlurListener", "message", "onBlur", "onClose", "onFocus", "onMouseEnter", "onMouseLeave", "open", "resumeHideDuration", "TransitionComponent", "transitionDuration", "TransitionProps"], IX = (e) => {
  const {
    classes: o,
    anchorOrigin: i
  } = e, c = {
    root: ["root", `anchorOrigin${ce(i.vertical)}${ce(i.horizontal)}`]
  };
  return Ye(c, MX, o);
}, EM = ee("div", {
  name: "MuiSnackbar",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[`anchorOrigin${ce(i.anchorOrigin.vertical)}${ce(i.anchorOrigin.horizontal)}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => {
  const i = {
    left: "50%",
    right: "auto",
    transform: "translateX(-50%)"
  };
  return x({
    zIndex: (e.vars || e).zIndex.snackbar,
    position: "fixed",
    display: "flex",
    left: 8,
    right: 8,
    justifyContent: "center",
    alignItems: "center"
  }, o.anchorOrigin.vertical === "top" ? {
    top: 8
  } : {
    bottom: 8
  }, o.anchorOrigin.horizontal === "left" && {
    justifyContent: "flex-start"
  }, o.anchorOrigin.horizontal === "right" && {
    justifyContent: "flex-end"
  }, {
    [e.breakpoints.up("sm")]: x({}, o.anchorOrigin.vertical === "top" ? {
      top: 24
    } : {
      bottom: 24
    }, o.anchorOrigin.horizontal === "center" && i, o.anchorOrigin.horizontal === "left" && {
      left: 24,
      right: "auto"
    }, o.anchorOrigin.horizontal === "right" && {
      right: 24,
      left: "auto"
    })
  });
}), SI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiSnackbar"
  }), d = Mn(), p = {
    enter: d.transitions.duration.enteringScreen,
    exit: d.transitions.duration.leavingScreen
  }, {
    action: f,
    anchorOrigin: {
      vertical: v,
      horizontal: g
    } = {
      vertical: "bottom",
      horizontal: "left"
    },
    autoHideDuration: b = null,
    children: S,
    className: R,
    ClickAwayListenerProps: D,
    ContentProps: k,
    disableWindowBlurListener: $ = !1,
    message: P,
    open: O,
    TransitionComponent: I = Bv,
    transitionDuration: _ = p,
    TransitionProps: {
      onEnter: A,
      onExited: V
    } = {}
  } = c, B = ue(c.TransitionProps, PX), M = ue(c, $X), F = x({}, c, {
    anchorOrigin: {
      vertical: v,
      horizontal: g
    },
    autoHideDuration: b,
    disableWindowBlurListener: $,
    TransitionComponent: I,
    transitionDuration: _
  }), Y = IX(F), {
    getRootProps: H,
    onClickAway: J
  } = S3(x({}, F)), [W, te] = w.useState(!0), Z = ln({
    elementType: EM,
    getSlotProps: H,
    externalForwardedProps: M,
    ownerState: F,
    additionalProps: {
      ref: i
    },
    className: [Y.root, R]
  }), q = (re) => {
    te(!0), V && V(re);
  }, Q = (re, ie) => {
    te(!1), A && A(re, ie);
  };
  return !O && W ? null : /* @__PURE__ */ z(jC, x({
    onClickAway: J
  }, D, {
    children: /* @__PURE__ */ z(EM, x({}, Z, {
      children: /* @__PURE__ */ z(I, x({
        appear: !0,
        in: O,
        timeout: _,
        direction: v === "top" ? "down" : "up",
        onEnter: Q,
        onExited: q
      }, B, {
        children: S || /* @__PURE__ */ z(DX, x({
          message: P,
          action: f
        }, k))
      }))
    }))
  }));
});
process.env.NODE_ENV !== "production" && (SI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The action to display. It renders after the message, at the end of the snackbar.
   */
  action: t.node,
  /**
   * The anchor of the `Snackbar`.
   * On smaller screens, the component grows to occupy all the available width,
   * the horizontal alignment is ignored.
   * @default { vertical: 'bottom', horizontal: 'left' }
   */
  anchorOrigin: t.shape({
    horizontal: t.oneOf(["center", "left", "right"]).isRequired,
    vertical: t.oneOf(["bottom", "top"]).isRequired
  }),
  /**
   * The number of milliseconds to wait before automatically calling the
   * `onClose` function. `onClose` should then set the state of the `open`
   * prop to hide the Snackbar. This behavior is disabled by default with
   * the `null` value.
   * @default null
   */
  autoHideDuration: t.number,
  /**
   * Replace the `SnackbarContent` component.
   */
  children: t.element,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Props applied to the `ClickAwayListener` element.
   */
  ClickAwayListenerProps: t.object,
  /**
   * Props applied to the [`SnackbarContent`](/material-ui/api/snackbar-content/) element.
   */
  ContentProps: t.object,
  /**
   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.
   * @default false
   */
  disableWindowBlurListener: t.bool,
  /**
   * When displaying multiple consecutive snackbars using a single parent-rendered
   * `<Snackbar/>`, add the `key` prop to ensure independent treatment of each message.
   * For instance, use `<Snackbar key={message} />`. Otherwise, messages might update
   * in place, and features like `autoHideDuration` could be affected.
   */
  key: () => null,
  /**
   * The message to display.
   */
  message: t.node,
  /**
   * @ignore
   */
  onBlur: t.func,
  /**
   * Callback fired when the component requests to be closed.
   * Typically `onClose` is used to set state in the parent component,
   * which is used to control the `Snackbar` `open` prop.
   * The `reason` parameter can optionally be used to control the response to `onClose`,
   * for example ignoring `clickaway`.
   *
   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.
   * @param {string} reason Can be: `"timeout"` (`autoHideDuration` expired), `"clickaway"`, or `"escapeKeyDown"`.
   */
  onClose: t.func,
  /**
   * @ignore
   */
  onFocus: t.func,
  /**
   * @ignore
   */
  onMouseEnter: t.func,
  /**
   * @ignore
   */
  onMouseLeave: t.func,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool,
  /**
   * The number of milliseconds to wait before dismissing after user interaction.
   * If `autoHideDuration` prop isn't specified, it does nothing.
   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,
   * we default to `autoHideDuration / 2` ms.
   */
  resumeHideDuration: t.number,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Grow
   */
  TransitionComponent: t.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: t.oneOfType([t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @default {}
   */
  TransitionProps: t.object
});
const Qie = SI, LX = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"], AX = {
  entering: {
    transform: "none"
  },
  entered: {
    transform: "none"
  }
}, TI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Mn(), d = {
    enter: c.transitions.duration.enteringScreen,
    exit: c.transitions.duration.leavingScreen
  }, {
    addEndListener: p,
    appear: f = !0,
    children: v,
    easing: g,
    in: b,
    onEnter: S,
    onEntered: R,
    onEntering: D,
    onExit: k,
    onExited: $,
    onExiting: P,
    style: O,
    timeout: I = d,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: _ = bd
  } = o, A = ue(o, LX), V = w.useRef(null), B = cn(V, v.ref, i), M = (q) => (Q) => {
    if (q) {
      const re = V.current;
      Q === void 0 ? q(re) : q(re, Q);
    }
  }, F = M(D), Y = M((q, Q) => {
    i0(q);
    const re = Ki({
      style: O,
      timeout: I,
      easing: g
    }, {
      mode: "enter"
    });
    q.style.webkitTransition = c.transitions.create("transform", re), q.style.transition = c.transitions.create("transform", re), S && S(q, Q);
  }), H = M(R), J = M(P), W = M((q) => {
    const Q = Ki({
      style: O,
      timeout: I,
      easing: g
    }, {
      mode: "exit"
    });
    q.style.webkitTransition = c.transitions.create("transform", Q), q.style.transition = c.transitions.create("transform", Q), k && k(q);
  }), te = M($);
  return /* @__PURE__ */ z(_, x({
    appear: f,
    in: b,
    nodeRef: V,
    onEnter: Y,
    onEntered: H,
    onEntering: F,
    onExit: W,
    onExited: te,
    onExiting: J,
    addEndListener: (q) => {
      p && p(V.current, q);
    },
    timeout: I
  }, A, {
    children: (q, Q) => /* @__PURE__ */ w.cloneElement(v, x({
      style: x({
        transform: "scale(0)",
        visibility: q === "exited" && !b ? "hidden" : void 0
      }, AX[q], O, v.props.style),
      ref: B
    }, Q))
  }));
});
process.env.NODE_ENV !== "production" && (TI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: t.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: t.bool,
  /**
   * A single child content element.
   */
  children: Qc.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: t.oneOfType([t.shape({
    enter: t.string,
    exit: t.string
  }), t.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: t.bool,
  /**
   * @ignore
   */
  onEnter: t.func,
  /**
   * @ignore
   */
  onEntered: t.func,
  /**
   * @ignore
   */
  onEntering: t.func,
  /**
   * @ignore
   */
  onExit: t.func,
  /**
   * @ignore
   */
  onExited: t.func,
  /**
   * @ignore
   */
  onExiting: t.func,
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: t.oneOfType([t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })])
});
const _X = TI;
function BX(e) {
  return We("MuiSpeedDial", e);
}
const zX = Ge("MuiSpeedDial", ["root", "fab", "directionUp", "directionDown", "directionLeft", "directionRight", "actions", "actionsClosed"]), vC = zX, VX = ["ref"], FX = ["ariaLabel", "FabProps", "children", "className", "direction", "hidden", "icon", "onBlur", "onClose", "onFocus", "onKeyDown", "onMouseEnter", "onMouseLeave", "onOpen", "open", "openIcon", "TransitionComponent", "transitionDuration", "TransitionProps"], jX = ["ref"], UX = (e) => {
  const {
    classes: o,
    open: i,
    direction: c
  } = e, d = {
    root: ["root", `direction${ce(c)}`],
    fab: ["fab"],
    actions: ["actions", !i && "actionsClosed"]
  };
  return Ye(d, BX, o);
};
function cv(e) {
  if (e === "up" || e === "down")
    return "vertical";
  if (e === "right" || e === "left")
    return "horizontal";
}
const Fc = 32, gC = 16, HX = ee("div", {
  name: "MuiSpeedDial",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[`direction${ce(i.direction)}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  zIndex: (e.vars || e).zIndex.speedDial,
  display: "flex",
  alignItems: "center",
  pointerEvents: "none"
}, o.direction === "up" && {
  flexDirection: "column-reverse",
  [`& .${vC.actions}`]: {
    flexDirection: "column-reverse",
    marginBottom: -Fc,
    paddingBottom: gC + Fc
  }
}, o.direction === "down" && {
  flexDirection: "column",
  [`& .${vC.actions}`]: {
    flexDirection: "column",
    marginTop: -Fc,
    paddingTop: gC + Fc
  }
}, o.direction === "left" && {
  flexDirection: "row-reverse",
  [`& .${vC.actions}`]: {
    flexDirection: "row-reverse",
    marginRight: -Fc,
    paddingRight: gC + Fc
  }
}, o.direction === "right" && {
  flexDirection: "row",
  [`& .${vC.actions}`]: {
    flexDirection: "row",
    marginLeft: -Fc,
    paddingLeft: gC + Fc
  }
})), WX = ee(m$, {
  name: "MuiSpeedDial",
  slot: "Fab",
  overridesResolver: (e, o) => o.fab
})(() => ({
  pointerEvents: "auto"
})), YX = ee("div", {
  name: "MuiSpeedDial",
  slot: "Actions",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.actions, !i.open && o.actionsClosed];
  }
})(({
  ownerState: e
}) => x({
  display: "flex",
  pointerEvents: "auto"
}, !e.open && {
  transition: "top 0s linear 0.2s",
  pointerEvents: "none"
})), wI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiSpeedDial"
  }), d = Mn(), p = {
    enter: d.transitions.duration.enteringScreen,
    exit: d.transitions.duration.leavingScreen
  }, {
    ariaLabel: f,
    FabProps: {
      ref: v
    } = {},
    children: g,
    className: b,
    direction: S = "up",
    hidden: R = !1,
    icon: D,
    onBlur: k,
    onClose: $,
    onFocus: P,
    onKeyDown: O,
    onMouseEnter: I,
    onMouseLeave: _,
    onOpen: A,
    open: V,
    TransitionComponent: B = _X,
    transitionDuration: M = p,
    TransitionProps: F
  } = c, Y = ue(c.FabProps, VX), H = ue(c, FX), [J, W] = Eo({
    controlled: V,
    default: !1,
    name: "SpeedDial",
    state: "open"
  }), te = x({}, c, {
    open: J,
    direction: S
  }), Z = UX(te), q = Pl(), Q = w.useRef(0), re = w.useRef(), ie = w.useRef([]);
  ie.current = [ie.current[0]];
  const K = w.useCallback((de) => {
    ie.current[0] = de;
  }, []), ne = cn(v, K), se = (de, Ae) => (at) => {
    ie.current[de + 1] = at, Ae && Ae(at);
  }, Fe = (de) => {
    O && O(de);
    const Ae = de.key.replace("Arrow", "").toLowerCase(), {
      current: at = Ae
    } = re;
    if (de.key === "Escape") {
      W(!1), ie.current[0].focus(), $ && $(de, "escapeKeyDown");
      return;
    }
    if (cv(Ae) === cv(at) && cv(Ae) !== void 0) {
      de.preventDefault();
      const Oe = Ae === at ? 1 : -1, _e = jc(Q.current + Oe, 0, ie.current.length - 1);
      ie.current[_e].focus(), Q.current = _e, re.current = at;
    }
  };
  w.useEffect(() => {
    J || (Q.current = 0, re.current = void 0);
  }, [J]);
  const qe = (de) => {
    de.type === "mouseleave" && _ && _(de), de.type === "blur" && k && k(de), q.clear(), de.type === "blur" ? q.start(0, () => {
      W(!1), $ && $(de, "blur");
    }) : (W(!1), $ && $(de, "mouseLeave"));
  }, Me = (de) => {
    Y.onClick && Y.onClick(de), q.clear(), J ? (W(!1), $ && $(de, "toggle")) : (W(!0), A && A(de, "toggle"));
  }, fe = (de) => {
    de.type === "mouseenter" && I && I(de), de.type === "focus" && P && P(de), q.clear(), J || q.start(0, () => {
      W(!0), A && A(de, {
        focus: "focus",
        mouseenter: "mouseEnter"
      }[de.type]);
    });
  }, De = f.replace(/^[^a-z]+|[^\w:.-]+/gi, ""), be = w.Children.toArray(g).filter((de) => (process.env.NODE_ENV !== "production" && Xi.isFragment(de) && console.error(["MUI: The SpeedDial component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), /* @__PURE__ */ w.isValidElement(de))), Ce = be.map((de, Ae) => {
    const at = de.props, {
      FabProps: {
        ref: Oe
      } = {},
      tooltipPlacement: _e
    } = at, ye = ue(at.FabProps, jX), ae = _e || (cv(S) === "vertical" ? "left" : "top");
    return /* @__PURE__ */ w.cloneElement(de, {
      FabProps: x({}, ye, {
        ref: se(Ae, Oe)
      }),
      delay: 30 * (J ? Ae : be.length - Ae),
      open: J,
      tooltipPlacement: ae,
      id: `${De}-action-${Ae}`
    });
  });
  return /* @__PURE__ */ ht(HX, x({
    className: ve(Z.root, b),
    ref: i,
    role: "presentation",
    onKeyDown: Fe,
    onBlur: qe,
    onFocus: fe,
    onMouseEnter: fe,
    onMouseLeave: qe,
    ownerState: te
  }, H, {
    children: [/* @__PURE__ */ z(B, x({
      in: !R,
      timeout: M,
      unmountOnExit: !0
    }, F, {
      children: /* @__PURE__ */ z(WX, x({
        color: "primary",
        "aria-label": f,
        "aria-haspopup": "true",
        "aria-expanded": J,
        "aria-controls": `${De}-actions`
      }, Y, {
        onClick: Me,
        className: ve(Z.fab, Y.className),
        ref: ne,
        ownerState: te,
        children: /* @__PURE__ */ w.isValidElement(D) && As(D, ["SpeedDialIcon"]) ? /* @__PURE__ */ w.cloneElement(D, {
          open: J
        }) : D
      }))
    })), /* @__PURE__ */ z(YX, {
      id: `${De}-actions`,
      role: "menu",
      "aria-orientation": cv(S),
      className: ve(Z.actions, !J && Z.actionsClosed),
      ownerState: te,
      children: Ce
    })]
  }));
});
process.env.NODE_ENV !== "production" && (wI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The aria-label of the button element.
   * Also used to provide the `id` for the `SpeedDial` element and its children.
   */
  ariaLabel: t.string.isRequired,
  /**
   * SpeedDialActions to display when the SpeedDial is `open`.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The direction the actions open relative to the floating action button.
   * @default 'up'
   */
  direction: t.oneOf(["down", "left", "right", "up"]),
  /**
   * Props applied to the [`Fab`](/material-ui/api/fab/) element.
   * @default {}
   */
  FabProps: t.object,
  /**
   * If `true`, the SpeedDial is hidden.
   * @default false
   */
  hidden: t.bool,
  /**
   * The icon to display in the SpeedDial Fab. The `SpeedDialIcon` component
   * provides a default Icon with animation.
   */
  icon: t.node,
  /**
   * @ignore
   */
  onBlur: t.func,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"toggle"`, `"blur"`, `"mouseLeave"`, `"escapeKeyDown"`.
   */
  onClose: t.func,
  /**
   * @ignore
   */
  onFocus: t.func,
  /**
   * @ignore
   */
  onKeyDown: t.func,
  /**
   * @ignore
   */
  onMouseEnter: t.func,
  /**
   * @ignore
   */
  onMouseLeave: t.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"toggle"`, `"focus"`, `"mouseEnter"`.
   */
  onOpen: t.func,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool,
  /**
   * The icon to display in the SpeedDial Fab when the SpeedDial is open.
   */
  openIcon: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Zoom
   */
  TransitionComponent: t.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: t.oneOfType([t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: t.object
});
const Xie = wI;
function GX(e) {
  return We("MuiTooltip", e);
}
const qX = Ge("MuiTooltip", ["popper", "popperInteractive", "popperArrow", "popperClose", "tooltip", "tooltipArrow", "touch", "tooltipPlacementLeft", "tooltipPlacementRight", "tooltipPlacementTop", "tooltipPlacementBottom", "arrow"]), Wc = qX, KX = ["arrow", "children", "classes", "components", "componentsProps", "describeChild", "disableFocusListener", "disableHoverListener", "disableInteractive", "disableTouchListener", "enterDelay", "enterNextDelay", "enterTouchDelay", "followCursor", "id", "leaveDelay", "leaveTouchDelay", "onClose", "onOpen", "open", "placement", "PopperComponent", "PopperProps", "slotProps", "slots", "title", "TransitionComponent", "TransitionProps"];
function QX(e) {
  return Math.round(e * 1e5) / 1e5;
}
const XX = (e) => {
  const {
    classes: o,
    disableInteractive: i,
    arrow: c,
    touch: d,
    placement: p
  } = e, f = {
    popper: ["popper", !i && "popperInteractive", c && "popperArrow"],
    tooltip: ["tooltip", c && "tooltipArrow", d && "touch", `tooltipPlacement${ce(p.split("-")[0])}`],
    arrow: ["arrow"]
  };
  return Ye(f, GX, o);
}, ZX = ee(Qv, {
  name: "MuiTooltip",
  slot: "Popper",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.popper, !i.disableInteractive && o.popperInteractive, i.arrow && o.popperArrow, !i.open && o.popperClose];
  }
})(({
  theme: e,
  ownerState: o,
  open: i
}) => x({
  zIndex: (e.vars || e).zIndex.tooltip,
  pointerEvents: "none"
}, !o.disableInteractive && {
  pointerEvents: "auto"
}, !i && {
  pointerEvents: "none"
}, o.arrow && {
  [`&[data-popper-placement*="bottom"] .${Wc.arrow}`]: {
    top: 0,
    marginTop: "-0.71em",
    "&::before": {
      transformOrigin: "0 100%"
    }
  },
  [`&[data-popper-placement*="top"] .${Wc.arrow}`]: {
    bottom: 0,
    marginBottom: "-0.71em",
    "&::before": {
      transformOrigin: "100% 0"
    }
  },
  [`&[data-popper-placement*="right"] .${Wc.arrow}`]: x({}, o.isRtl ? {
    right: 0,
    marginRight: "-0.71em"
  } : {
    left: 0,
    marginLeft: "-0.71em"
  }, {
    height: "1em",
    width: "0.71em",
    "&::before": {
      transformOrigin: "100% 100%"
    }
  }),
  [`&[data-popper-placement*="left"] .${Wc.arrow}`]: x({}, o.isRtl ? {
    left: 0,
    marginLeft: "-0.71em"
  } : {
    right: 0,
    marginRight: "-0.71em"
  }, {
    height: "1em",
    width: "0.71em",
    "&::before": {
      transformOrigin: "0 0"
    }
  })
})), JX = ee("div", {
  name: "MuiTooltip",
  slot: "Tooltip",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.tooltip, i.touch && o.touch, i.arrow && o.tooltipArrow, o[`tooltipPlacement${ce(i.placement.split("-")[0])}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  backgroundColor: e.vars ? e.vars.palette.Tooltip.bg : Wt(e.palette.grey[700], 0.92),
  borderRadius: (e.vars || e).shape.borderRadius,
  color: (e.vars || e).palette.common.white,
  fontFamily: e.typography.fontFamily,
  padding: "4px 8px",
  fontSize: e.typography.pxToRem(11),
  maxWidth: 300,
  margin: 2,
  wordWrap: "break-word",
  fontWeight: e.typography.fontWeightMedium
}, o.arrow && {
  position: "relative",
  margin: 0
}, o.touch && {
  padding: "8px 16px",
  fontSize: e.typography.pxToRem(14),
  lineHeight: `${QX(16 / 14)}em`,
  fontWeight: e.typography.fontWeightRegular
}, {
  [`.${Wc.popper}[data-popper-placement*="left"] &`]: x({
    transformOrigin: "right center"
  }, o.isRtl ? x({
    marginLeft: "14px"
  }, o.touch && {
    marginLeft: "24px"
  }) : x({
    marginRight: "14px"
  }, o.touch && {
    marginRight: "24px"
  })),
  [`.${Wc.popper}[data-popper-placement*="right"] &`]: x({
    transformOrigin: "left center"
  }, o.isRtl ? x({
    marginRight: "14px"
  }, o.touch && {
    marginRight: "24px"
  }) : x({
    marginLeft: "14px"
  }, o.touch && {
    marginLeft: "24px"
  })),
  [`.${Wc.popper}[data-popper-placement*="top"] &`]: x({
    transformOrigin: "center bottom",
    marginBottom: "14px"
  }, o.touch && {
    marginBottom: "24px"
  }),
  [`.${Wc.popper}[data-popper-placement*="bottom"] &`]: x({
    transformOrigin: "center top",
    marginTop: "14px"
  }, o.touch && {
    marginTop: "24px"
  })
})), eZ = ee("span", {
  name: "MuiTooltip",
  slot: "Arrow",
  overridesResolver: (e, o) => o.arrow
})(({
  theme: e
}) => ({
  overflow: "hidden",
  position: "absolute",
  width: "1em",
  height: "0.71em",
  boxSizing: "border-box",
  color: e.vars ? e.vars.palette.Tooltip.bg : Wt(e.palette.grey[700], 0.9),
  "&::before": {
    content: '""',
    margin: "auto",
    display: "block",
    width: "100%",
    height: "100%",
    backgroundColor: "currentColor",
    transform: "rotate(45deg)"
  }
}));
let yC = !1;
const RM = new Hv();
let uv = {
  x: 0,
  y: 0
};
function bC(e, o) {
  return (i) => {
    o && o(i), e(i);
  };
}
const EI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d, p, f, v, g, b, S, R, D, k, $, P, O, I, _, A, V, B;
  const M = Ue({
    props: o,
    name: "MuiTooltip"
  }), {
    arrow: F = !1,
    children: Y,
    components: H = {},
    componentsProps: J = {},
    describeChild: W = !1,
    disableFocusListener: te = !1,
    disableHoverListener: Z = !1,
    disableInteractive: q = !1,
    disableTouchListener: Q = !1,
    enterDelay: re = 100,
    enterNextDelay: ie = 0,
    enterTouchDelay: K = 700,
    followCursor: ne = !1,
    id: se,
    leaveDelay: Fe = 0,
    leaveTouchDelay: qe = 1500,
    onClose: Me,
    onOpen: fe,
    open: De,
    placement: be = "bottom",
    PopperComponent: Ce,
    PopperProps: de = {},
    slotProps: Ae = {},
    slots: at = {},
    title: Oe,
    TransitionComponent: _e = Bv,
    TransitionProps: ye
  } = M, ae = ue(M, KX), $e = /* @__PURE__ */ w.isValidElement(Y) ? Y : /* @__PURE__ */ z("span", {
    children: Y
  }), Se = Mn(), mt = Se.direction === "rtl", [Be, ft] = w.useState(), [je, Ve] = w.useState(null), st = w.useRef(!1), gt = q || ne, Tt = Pl(), _t = Pl(), Zt = Pl(), Vt = Pl(), [Te, xe] = Eo({
    controlled: De,
    default: !1,
    name: "Tooltip",
    state: "open"
  });
  let ot = Te;
  if (process.env.NODE_ENV !== "production") {
    const {
      current: yt
    } = w.useRef(De !== void 0);
    w.useEffect(() => {
      Be && Be.disabled && !yt && Oe !== "" && Be.tagName.toLowerCase() === "button" && console.error(["MUI: You are providing a disabled `button` child to the Tooltip component.", "A disabled element does not fire events.", "Tooltip needs to listen to the child element's events to display the title.", "", "Add a simple wrapper element, such as a `span`."].join(`
`));
    }, [Oe, Be, yt]);
  }
  const He = Na(se), it = w.useRef(), Ze = St(() => {
    it.current !== void 0 && (document.body.style.WebkitUserSelect = it.current, it.current = void 0), Vt.clear();
  });
  w.useEffect(() => Ze, [Ze]);
  const nt = (yt) => {
    RM.clear(), yC = !0, xe(!0), fe && !ot && fe(yt);
  }, Le = St(
    /**
     * @param {React.SyntheticEvent | Event} event
     */
    (yt) => {
      RM.start(800 + Fe, () => {
        yC = !1;
      }), xe(!1), Me && ot && Me(yt), Tt.start(Se.transitions.duration.shortest, () => {
        st.current = !1;
      });
    }
  ), et = (yt) => {
    st.current && yt.type !== "touchstart" || (Be && Be.removeAttribute("title"), _t.clear(), Zt.clear(), re || yC && ie ? _t.start(yC ? ie : re, () => {
      nt(yt);
    }) : nt(yt));
  }, pt = (yt) => {
    _t.clear(), Zt.start(Fe, () => {
      Le(yt);
    });
  }, {
    isFocusVisibleRef: Dt,
    onBlur: Nt,
    onFocus: Jt,
    ref: Yt
  } = If(), [, en] = w.useState(!1), Nn = (yt) => {
    Nt(yt), Dt.current === !1 && (en(!1), pt(yt));
  }, nn = (yt) => {
    Be || ft(yt.currentTarget), Jt(yt), Dt.current === !0 && (en(!0), et(yt));
  }, Un = (yt) => {
    st.current = !0;
    const dn = $e.props;
    dn.onTouchStart && dn.onTouchStart(yt);
  }, Ro = (yt) => {
    Un(yt), Zt.clear(), Tt.clear(), Ze(), it.current = document.body.style.WebkitUserSelect, document.body.style.WebkitUserSelect = "none", Vt.start(K, () => {
      document.body.style.WebkitUserSelect = it.current, et(yt);
    });
  }, Oo = (yt) => {
    $e.props.onTouchEnd && $e.props.onTouchEnd(yt), Ze(), Zt.start(qe, () => {
      Le(yt);
    });
  };
  w.useEffect(() => {
    if (!ot)
      return;
    function yt(dn) {
      (dn.key === "Escape" || dn.key === "Esc") && Le(dn);
    }
    return document.addEventListener("keydown", yt), () => {
      document.removeEventListener("keydown", yt);
    };
  }, [Le, ot]);
  const Yr = cn($e.ref, Yt, ft, i);
  !Oe && Oe !== 0 && (ot = !1);
  const _o = w.useRef(), Pn = (yt) => {
    const dn = $e.props;
    dn.onMouseMove && dn.onMouseMove(yt), uv = {
      x: yt.clientX,
      y: yt.clientY
    }, _o.current && _o.current.update();
  }, Tn = {}, Hn = typeof Oe == "string";
  W ? (Tn.title = !ot && Hn && !Z ? Oe : null, Tn["aria-describedby"] = ot ? He : null) : (Tn["aria-label"] = Hn ? Oe : null, Tn["aria-labelledby"] = ot && !Hn ? He : null);
  const Zn = x({}, Tn, ae, $e.props, {
    className: ve(ae.className, $e.props.className),
    onTouchStart: Un,
    ref: Yr
  }, ne ? {
    onMouseMove: Pn
  } : {});
  process.env.NODE_ENV !== "production" && (Zn["data-mui-internal-clone-element"] = !0, w.useEffect(() => {
    Be && !Be.getAttribute("data-mui-internal-clone-element") && console.error(["MUI: The `children` component of the Tooltip is not forwarding its props correctly.", "Please make sure that props are spread on the same element that the ref is applied to."].join(`
`));
  }, [Be]));
  const no = {};
  Q || (Zn.onTouchStart = Ro, Zn.onTouchEnd = Oo), Z || (Zn.onMouseOver = bC(et, Zn.onMouseOver), Zn.onMouseLeave = bC(pt, Zn.onMouseLeave), gt || (no.onMouseOver = et, no.onMouseLeave = pt)), te || (Zn.onFocus = bC(nn, Zn.onFocus), Zn.onBlur = bC(Nn, Zn.onBlur), gt || (no.onFocus = nn, no.onBlur = Nn)), process.env.NODE_ENV !== "production" && $e.props.title && console.error(["MUI: You have provided a `title` prop to the child of <Tooltip />.", `Remove this title prop \`${$e.props.title}\` or the Tooltip component.`].join(`
`));
  const Xo = w.useMemo(() => {
    var yt;
    let dn = [{
      name: "arrow",
      enabled: !!je,
      options: {
        element: je,
        padding: 4
      }
    }];
    return (yt = de.popperOptions) != null && yt.modifiers && (dn = dn.concat(de.popperOptions.modifiers)), x({}, de.popperOptions, {
      modifiers: dn
    });
  }, [je, de]), Bo = x({}, M, {
    isRtl: mt,
    arrow: F,
    disableInteractive: gt,
    placement: be,
    PopperComponentProp: Ce,
    touch: st.current
  }), zo = XX(Bo), Dr = (c = (d = at.popper) != null ? d : H.Popper) != null ? c : ZX, Vo = (p = (f = (v = at.transition) != null ? v : H.Transition) != null ? f : _e) != null ? p : Bv, go = (g = (b = at.tooltip) != null ? b : H.Tooltip) != null ? g : JX, ze = (S = (R = at.arrow) != null ? R : H.Arrow) != null ? S : eZ, ge = Cf(Dr, x({}, de, (D = Ae.popper) != null ? D : J.popper, {
    className: ve(zo.popper, de == null ? void 0 : de.className, (k = ($ = Ae.popper) != null ? $ : J.popper) == null ? void 0 : k.className)
  }), Bo), rt = Cf(Vo, x({}, ye, (P = Ae.transition) != null ? P : J.transition), Bo), bt = Cf(go, x({}, (O = Ae.tooltip) != null ? O : J.tooltip, {
    className: ve(zo.tooltip, (I = (_ = Ae.tooltip) != null ? _ : J.tooltip) == null ? void 0 : I.className)
  }), Bo), sn = Cf(ze, x({}, (A = Ae.arrow) != null ? A : J.arrow, {
    className: ve(zo.arrow, (V = (B = Ae.arrow) != null ? B : J.arrow) == null ? void 0 : V.className)
  }), Bo);
  return /* @__PURE__ */ ht(w.Fragment, {
    children: [/* @__PURE__ */ w.cloneElement($e, Zn), /* @__PURE__ */ z(Dr, x({
      as: Ce ?? Qv,
      placement: be,
      anchorEl: ne ? {
        getBoundingClientRect: () => ({
          top: uv.y,
          left: uv.x,
          right: uv.x,
          bottom: uv.y,
          width: 0,
          height: 0
        })
      } : Be,
      popperRef: _o,
      open: Be ? ot : !1,
      id: He,
      transition: !0
    }, no, ge, {
      popperOptions: Xo,
      children: ({
        TransitionProps: yt
      }) => /* @__PURE__ */ z(Vo, x({
        timeout: Se.transitions.duration.shorter
      }, yt, rt, {
        children: /* @__PURE__ */ ht(go, x({}, bt, {
          children: [Oe, F ? /* @__PURE__ */ z(ze, x({}, sn, {
            ref: Ve
          })) : null]
        }))
      }))
    }))]
  });
});
process.env.NODE_ENV !== "production" && (EI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, adds an arrow to the tooltip.
   * @default false
   */
  arrow: t.bool,
  /**
   * Tooltip reference element.
   */
  children: Qc.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    Arrow: t.elementType,
    Popper: t.elementType,
    Tooltip: t.elementType,
    Transition: t.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: t.shape({
    arrow: t.object,
    popper: t.object,
    tooltip: t.object,
    transition: t.object
  }),
  /**
   * Set to `true` if the `title` acts as an accessible description.
   * By default the `title` acts as an accessible label for the child.
   * @default false
   */
  describeChild: t.bool,
  /**
   * Do not respond to focus-visible events.
   * @default false
   */
  disableFocusListener: t.bool,
  /**
   * Do not respond to hover events.
   * @default false
   */
  disableHoverListener: t.bool,
  /**
   * Makes a tooltip not interactive, i.e. it will close when the user
   * hovers over the tooltip before the `leaveDelay` is expired.
   * @default false
   */
  disableInteractive: t.bool,
  /**
   * Do not respond to long press touch events.
   * @default false
   */
  disableTouchListener: t.bool,
  /**
   * The number of milliseconds to wait before showing the tooltip.
   * This prop won't impact the enter touch delay (`enterTouchDelay`).
   * @default 100
   */
  enterDelay: t.number,
  /**
   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
   * @default 0
   */
  enterNextDelay: t.number,
  /**
   * The number of milliseconds a user must touch the element before showing the tooltip.
   * @default 700
   */
  enterTouchDelay: t.number,
  /**
   * If `true`, the tooltip follow the cursor over the wrapped element.
   * @default false
   */
  followCursor: t.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: t.string,
  /**
   * The number of milliseconds to wait before hiding the tooltip.
   * This prop won't impact the leave touch delay (`leaveTouchDelay`).
   * @default 0
   */
  leaveDelay: t.number,
  /**
   * The number of milliseconds after the user stops touching an element before hiding the tooltip.
   * @default 1500
   */
  leaveTouchDelay: t.number,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: t.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: t.func,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool,
  /**
   * Tooltip placement.
   * @default 'bottom'
   */
  placement: t.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The component used for the popper.
   * @default Popper
   */
  PopperComponent: t.elementType,
  /**
   * Props applied to the [`Popper`](/material-ui/api/popper/) element.
   * @default {}
   */
  PopperProps: t.object,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: t.shape({
    arrow: t.object,
    popper: t.object,
    tooltip: t.object,
    transition: t.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: t.shape({
    arrow: t.elementType,
    popper: t.elementType,
    tooltip: t.elementType,
    transition: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Tooltip title. Zero-length titles string, undefined, null and false are never displayed.
   */
  title: t.node,
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Grow
   */
  TransitionComponent: t.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: t.object
});
const tZ = EI;
function nZ(e) {
  return We("MuiSpeedDialAction", e);
}
const oZ = Ge("MuiSpeedDialAction", ["fab", "fabClosed", "staticTooltip", "staticTooltipClosed", "staticTooltipLabel", "tooltipPlacementLeft", "tooltipPlacementRight"]), rZ = oZ, aZ = ["className", "delay", "FabProps", "icon", "id", "open", "TooltipClasses", "tooltipOpen", "tooltipPlacement", "tooltipTitle"], iZ = (e) => {
  const {
    open: o,
    tooltipPlacement: i,
    classes: c
  } = e, d = {
    fab: ["fab", !o && "fabClosed"],
    staticTooltip: ["staticTooltip", `tooltipPlacement${ce(i)}`, !o && "staticTooltipClosed"],
    staticTooltipLabel: ["staticTooltipLabel"]
  };
  return Ye(d, nZ, c);
}, sZ = ee(m$, {
  name: "MuiSpeedDialAction",
  slot: "Fab",
  skipVariantsResolver: !1,
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.fab, !i.open && o.fabClosed];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  margin: 8,
  color: (e.vars || e).palette.text.secondary,
  backgroundColor: (e.vars || e).palette.background.paper,
  "&:hover": {
    backgroundColor: e.vars ? e.vars.palette.SpeedDialAction.fabHoverBg : PC(e.palette.background.paper, 0.15)
  },
  transition: `${e.transitions.create("transform", {
    duration: e.transitions.duration.shorter
  })}, opacity 0.8s`,
  opacity: 1
}, !o.open && {
  opacity: 0,
  transform: "scale(0)"
})), lZ = ee("span", {
  name: "MuiSpeedDialAction",
  slot: "StaticTooltip",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.staticTooltip, !i.open && o.staticTooltipClosed, o[`tooltipPlacement${ce(i.tooltipPlacement)}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => ({
  position: "relative",
  display: "flex",
  alignItems: "center",
  [`& .${rZ.staticTooltipLabel}`]: x({
    transition: e.transitions.create(["transform", "opacity"], {
      duration: e.transitions.duration.shorter
    }),
    opacity: 1
  }, !o.open && {
    opacity: 0,
    transform: "scale(0.5)"
  }, o.tooltipPlacement === "left" && {
    transformOrigin: "100% 50%",
    right: "100%",
    marginRight: 8
  }, o.tooltipPlacement === "right" && {
    transformOrigin: "0% 50%",
    left: "100%",
    marginLeft: 8
  })
})), cZ = ee("span", {
  name: "MuiSpeedDialAction",
  slot: "StaticTooltipLabel",
  overridesResolver: (e, o) => o.staticTooltipLabel
})(({
  theme: e
}) => x({
  position: "absolute"
}, e.typography.body1, {
  backgroundColor: (e.vars || e).palette.background.paper,
  borderRadius: (e.vars || e).shape.borderRadius,
  boxShadow: (e.vars || e).shadows[1],
  color: (e.vars || e).palette.text.secondary,
  padding: "4px 16px",
  wordBreak: "keep-all"
})), RI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiSpeedDialAction"
  }), {
    className: d,
    delay: p = 0,
    FabProps: f = {},
    icon: v,
    id: g,
    open: b,
    TooltipClasses: S,
    tooltipOpen: R = !1,
    tooltipPlacement: D = "left",
    tooltipTitle: k
  } = c, $ = ue(c, aZ), P = x({}, c, {
    tooltipPlacement: D
  }), O = iZ(P), [I, _] = w.useState(R), A = () => {
    _(!1);
  }, V = () => {
    _(!0);
  }, B = {
    transitionDelay: `${p}ms`
  }, M = /* @__PURE__ */ z(sZ, x({
    size: "small",
    className: ve(O.fab, d),
    tabIndex: -1,
    role: "menuitem",
    ownerState: P
  }, f, {
    style: x({}, B, f.style),
    children: v
  }));
  return R ? /* @__PURE__ */ ht(lZ, x({
    id: g,
    ref: i,
    className: O.staticTooltip,
    ownerState: P
  }, $, {
    children: [/* @__PURE__ */ z(cZ, {
      style: B,
      id: `${g}-label`,
      className: O.staticTooltipLabel,
      ownerState: P,
      children: k
    }), /* @__PURE__ */ w.cloneElement(M, {
      "aria-labelledby": `${g}-label`
    })]
  })) : (!b && I && _(!1), /* @__PURE__ */ z(tZ, x({
    id: g,
    ref: i,
    title: k,
    placement: D,
    onClose: A,
    onOpen: V,
    open: b && I,
    classes: S
  }, $, {
    children: M
  })));
});
process.env.NODE_ENV !== "production" && (RI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Adds a transition delay, to allow a series of SpeedDialActions to be animated.
   * @default 0
   */
  delay: t.number,
  /**
   * Props applied to the [`Fab`](/material-ui/api/fab/) component.
   * @default {}
   */
  FabProps: t.object,
  /**
   * The icon to display in the SpeedDial Fab.
   */
  icon: t.node,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: t.string,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * `classes` prop applied to the [`Tooltip`](/material-ui/api/tooltip/) element.
   */
  TooltipClasses: t.object,
  /**
   * Make the tooltip always visible when the SpeedDial is open.
   * @default false
   */
  tooltipOpen: t.bool,
  /**
   * Placement of the tooltip.
   * @default 'left'
   */
  tooltipPlacement: t.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Label to display in the tooltip.
   */
  tooltipTitle: t.node
});
const Zie = RI, uZ = Cn(/* @__PURE__ */ z("path", {
  d: "M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
}), "Add");
function dZ(e) {
  return We("MuiSpeedDialIcon", e);
}
const pZ = Ge("MuiSpeedDialIcon", ["root", "icon", "iconOpen", "iconWithOpenIconOpen", "openIcon", "openIconOpen"]), sd = pZ, fZ = ["className", "icon", "open", "openIcon"], mZ = (e) => {
  const {
    classes: o,
    open: i,
    openIcon: c
  } = e;
  return Ye({
    root: ["root"],
    icon: ["icon", i && "iconOpen", c && i && "iconWithOpenIconOpen"],
    openIcon: ["openIcon", i && "openIconOpen"]
  }, dZ, o);
}, hZ = ee("span", {
  name: "MuiSpeedDialIcon",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [{
      [`& .${sd.icon}`]: o.icon
    }, {
      [`& .${sd.icon}`]: i.open && o.iconOpen
    }, {
      [`& .${sd.icon}`]: i.open && i.openIcon && o.iconWithOpenIconOpen
    }, {
      [`& .${sd.openIcon}`]: o.openIcon
    }, {
      [`& .${sd.openIcon}`]: i.open && o.openIconOpen
    }, o.root];
  }
})(({
  theme: e,
  ownerState: o
}) => ({
  height: 24,
  [`& .${sd.icon}`]: x({
    transition: e.transitions.create(["transform", "opacity"], {
      duration: e.transitions.duration.short
    })
  }, o.open && x({
    transform: "rotate(45deg)"
  }, o.openIcon && {
    opacity: 0
  })),
  [`& .${sd.openIcon}`]: x({
    position: "absolute",
    transition: e.transitions.create(["transform", "opacity"], {
      duration: e.transitions.duration.short
    }),
    opacity: 0,
    transform: "rotate(-45deg)"
  }, o.open && {
    transform: "rotate(0deg)",
    opacity: 1
  })
})), jw = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiSpeedDialIcon"
  }), {
    className: d,
    icon: p,
    openIcon: f
  } = c, v = ue(c, fZ), g = c, b = mZ(g);
  function S(R, D) {
    return /* @__PURE__ */ w.isValidElement(R) ? /* @__PURE__ */ w.cloneElement(R, {
      className: D
    }) : R;
  }
  return /* @__PURE__ */ ht(hZ, x({
    className: ve(b.root, d),
    ref: i,
    ownerState: g
  }, v, {
    children: [f ? S(f, b.openIcon) : null, p ? S(p, b.icon) : /* @__PURE__ */ z(uZ, {
      className: b.icon
    })]
  }));
});
process.env.NODE_ENV !== "production" && (jw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The icon to display.
   */
  icon: t.node,
  /**
   * @ignore
   * If `true`, the component is shown.
   */
  open: t.bool,
  /**
   * The icon to display in the SpeedDial Floating Action Button when the SpeedDial is open.
   */
  openIcon: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
jw.muiName = "SpeedDialIcon";
const Jie = jw, Uw = /* @__PURE__ */ w.createContext({});
process.env.NODE_ENV !== "production" && (Uw.displayName = "StepperContext");
function ese() {
  return w.useContext(Uw);
}
const zf = Uw, Hw = /* @__PURE__ */ w.createContext({});
process.env.NODE_ENV !== "production" && (Hw.displayName = "StepContext");
function tse() {
  return w.useContext(Hw);
}
const Xv = Hw;
function vZ(e) {
  return We("MuiStep", e);
}
const gZ = Ge("MuiStep", ["root", "horizontal", "vertical", "alternativeLabel", "completed"]), nse = gZ, yZ = ["active", "children", "className", "component", "completed", "disabled", "expanded", "index", "last"], bZ = (e) => {
  const {
    classes: o,
    orientation: i,
    alternativeLabel: c,
    completed: d
  } = e;
  return Ye({
    root: ["root", i, c && "alternativeLabel", d && "completed"]
  }, vZ, o);
}, CZ = ee("div", {
  name: "MuiStep",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[i.orientation], i.alternativeLabel && o.alternativeLabel, i.completed && o.completed];
  }
})(({
  ownerState: e
}) => x({}, e.orientation === "horizontal" && {
  paddingLeft: 8,
  paddingRight: 8
}, e.alternativeLabel && {
  flex: 1,
  position: "relative"
})), OI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiStep"
  }), {
    active: d,
    children: p,
    className: f,
    component: v = "div",
    completed: g,
    disabled: b,
    expanded: S = !1,
    index: R,
    last: D
  } = c, k = ue(c, yZ), {
    activeStep: $,
    connector: P,
    alternativeLabel: O,
    orientation: I,
    nonLinear: _
  } = w.useContext(zf);
  let [A = !1, V = !1, B = !1] = [d, g, b];
  $ === R ? A = d !== void 0 ? d : !0 : !_ && $ > R ? V = g !== void 0 ? g : !0 : !_ && $ < R && (B = b !== void 0 ? b : !0);
  const M = w.useMemo(() => ({
    index: R,
    last: D,
    expanded: S,
    icon: R + 1,
    active: A,
    completed: V,
    disabled: B
  }), [R, D, S, A, V, B]), F = x({}, c, {
    active: A,
    orientation: I,
    alternativeLabel: O,
    completed: V,
    disabled: B,
    expanded: S,
    component: v
  }), Y = bZ(F), H = /* @__PURE__ */ ht(CZ, x({
    as: v,
    className: ve(Y.root, f),
    ref: i,
    ownerState: F
  }, k, {
    children: [P && O && R !== 0 ? P : null, p]
  }));
  return /* @__PURE__ */ z(Xv.Provider, {
    value: M,
    children: P && !O && R !== 0 ? /* @__PURE__ */ ht(w.Fragment, {
      children: [P, H]
    }) : H
  });
});
process.env.NODE_ENV !== "production" && (OI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Sets the step as active. Is passed to child components.
   */
  active: t.bool,
  /**
   * Should be `Step` sub-components such as `StepLabel`, `StepContent`.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Mark the step as completed. Is passed to child components.
   */
  completed: t.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the step is disabled, will also disable the button if
   * `StepButton` is a child of `Step`. Is passed to child components.
   */
  disabled: t.bool,
  /**
   * Expand the step.
   * @default false
   */
  expanded: t.bool,
  /**
   * The position of the step.
   * The prop defaults to the value inherited from the parent Stepper component.
   */
  index: To,
  /**
   * If `true`, the Step is displayed as rendered last.
   * The prop defaults to the value inherited from the parent Stepper component.
   */
  last: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const ose = OI, xZ = Cn(/* @__PURE__ */ z("path", {
  d: "M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24zm-2 17l-5-5 1.4-1.4 3.6 3.6 7.6-7.6L19 8l-9 9z"
}), "CheckCircle"), SZ = Cn(/* @__PURE__ */ z("path", {
  d: "M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"
}), "Warning");
function TZ(e) {
  return We("MuiStepIcon", e);
}
const wZ = Ge("MuiStepIcon", ["root", "active", "completed", "error", "text"]), y1 = wZ;
var OM;
const EZ = ["active", "className", "completed", "error", "icon"], RZ = (e) => {
  const {
    classes: o,
    active: i,
    completed: c,
    error: d
  } = e;
  return Ye({
    root: ["root", i && "active", c && "completed", d && "error"],
    text: ["text"]
  }, TZ, o);
}, b1 = ee(P1, {
  name: "MuiStepIcon",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})(({
  theme: e
}) => ({
  display: "block",
  transition: e.transitions.create("color", {
    duration: e.transitions.duration.shortest
  }),
  color: (e.vars || e).palette.text.disabled,
  [`&.${y1.completed}`]: {
    color: (e.vars || e).palette.primary.main
  },
  [`&.${y1.active}`]: {
    color: (e.vars || e).palette.primary.main
  },
  [`&.${y1.error}`]: {
    color: (e.vars || e).palette.error.main
  }
})), OZ = ee("text", {
  name: "MuiStepIcon",
  slot: "Text",
  overridesResolver: (e, o) => o.text
})(({
  theme: e
}) => ({
  fill: (e.vars || e).palette.primary.contrastText,
  fontSize: e.typography.caption.fontSize,
  fontFamily: e.typography.fontFamily
})), kI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiStepIcon"
  }), {
    active: d = !1,
    className: p,
    completed: f = !1,
    error: v = !1,
    icon: g
  } = c, b = ue(c, EZ), S = x({}, c, {
    active: d,
    completed: f,
    error: v
  }), R = RZ(S);
  if (typeof g == "number" || typeof g == "string") {
    const D = ve(p, R.root);
    return v ? /* @__PURE__ */ z(b1, x({
      as: SZ,
      className: D,
      ref: i,
      ownerState: S
    }, b)) : f ? /* @__PURE__ */ z(b1, x({
      as: xZ,
      className: D,
      ref: i,
      ownerState: S
    }, b)) : /* @__PURE__ */ ht(b1, x({
      className: D,
      ref: i,
      ownerState: S
    }, b, {
      children: [OM || (OM = /* @__PURE__ */ z("circle", {
        cx: "12",
        cy: "12",
        r: "12"
      })), /* @__PURE__ */ z(OZ, {
        className: R.text,
        x: "12",
        y: "12",
        textAnchor: "middle",
        dominantBaseline: "central",
        ownerState: S,
        children: g
      })]
    }));
  }
  return g;
});
process.env.NODE_ENV !== "production" && (kI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Whether this step is active.
   * @default false
   */
  active: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Mark the step as completed. Is passed to child components.
   * @default false
   */
  completed: t.bool,
  /**
   * If `true`, the step is marked as failed.
   * @default false
   */
  error: t.bool,
  /**
   * The label displayed in the step icon.
   */
  icon: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const kZ = kI;
function DZ(e) {
  return We("MuiStepLabel", e);
}
const MZ = Ge("MuiStepLabel", ["root", "horizontal", "vertical", "label", "active", "completed", "error", "disabled", "iconContainer", "alternativeLabel", "labelContainer"]), Yc = MZ, NZ = ["children", "className", "componentsProps", "error", "icon", "optional", "slotProps", "StepIconComponent", "StepIconProps"], PZ = (e) => {
  const {
    classes: o,
    orientation: i,
    active: c,
    completed: d,
    error: p,
    disabled: f,
    alternativeLabel: v
  } = e;
  return Ye({
    root: ["root", i, p && "error", f && "disabled", v && "alternativeLabel"],
    label: ["label", c && "active", d && "completed", p && "error", f && "disabled", v && "alternativeLabel"],
    iconContainer: ["iconContainer", c && "active", d && "completed", p && "error", f && "disabled", v && "alternativeLabel"],
    labelContainer: ["labelContainer", v && "alternativeLabel"]
  }, DZ, o);
}, $Z = ee("span", {
  name: "MuiStepLabel",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[i.orientation]];
  }
})(({
  ownerState: e
}) => x({
  display: "flex",
  alignItems: "center",
  [`&.${Yc.alternativeLabel}`]: {
    flexDirection: "column"
  },
  [`&.${Yc.disabled}`]: {
    cursor: "default"
  }
}, e.orientation === "vertical" && {
  textAlign: "left",
  padding: "8px 0"
})), IZ = ee("span", {
  name: "MuiStepLabel",
  slot: "Label",
  overridesResolver: (e, o) => o.label
})(({
  theme: e
}) => x({}, e.typography.body2, {
  display: "block",
  transition: e.transitions.create("color", {
    duration: e.transitions.duration.shortest
  }),
  [`&.${Yc.active}`]: {
    color: (e.vars || e).palette.text.primary,
    fontWeight: 500
  },
  [`&.${Yc.completed}`]: {
    color: (e.vars || e).palette.text.primary,
    fontWeight: 500
  },
  [`&.${Yc.alternativeLabel}`]: {
    marginTop: 16
  },
  [`&.${Yc.error}`]: {
    color: (e.vars || e).palette.error.main
  }
})), LZ = ee("span", {
  name: "MuiStepLabel",
  slot: "IconContainer",
  overridesResolver: (e, o) => o.iconContainer
})(() => ({
  flexShrink: 0,
  // Fix IE11 issue
  display: "flex",
  paddingRight: 8,
  [`&.${Yc.alternativeLabel}`]: {
    paddingRight: 0
  }
})), AZ = ee("span", {
  name: "MuiStepLabel",
  slot: "LabelContainer",
  overridesResolver: (e, o) => o.labelContainer
})(({
  theme: e
}) => ({
  width: "100%",
  color: (e.vars || e).palette.text.secondary,
  [`&.${Yc.alternativeLabel}`]: {
    textAlign: "center"
  }
})), Ww = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c;
  const d = Ue({
    props: o,
    name: "MuiStepLabel"
  }), {
    children: p,
    className: f,
    componentsProps: v = {},
    error: g = !1,
    icon: b,
    optional: S,
    slotProps: R = {},
    StepIconComponent: D,
    StepIconProps: k
  } = d, $ = ue(d, NZ), {
    alternativeLabel: P,
    orientation: O
  } = w.useContext(zf), {
    active: I,
    disabled: _,
    completed: A,
    icon: V
  } = w.useContext(Xv), B = b || V;
  let M = D;
  B && !M && (M = kZ);
  const F = x({}, d, {
    active: I,
    alternativeLabel: P,
    completed: A,
    disabled: _,
    error: g,
    orientation: O
  }), Y = PZ(F), H = (c = R.label) != null ? c : v.label;
  return /* @__PURE__ */ ht($Z, x({
    className: ve(Y.root, f),
    ref: i,
    ownerState: F
  }, $, {
    children: [B || M ? /* @__PURE__ */ z(LZ, {
      className: Y.iconContainer,
      ownerState: F,
      children: /* @__PURE__ */ z(M, x({
        completed: A,
        active: I,
        error: g,
        icon: B
      }, k))
    }) : null, /* @__PURE__ */ ht(AZ, {
      className: Y.labelContainer,
      ownerState: F,
      children: [p ? /* @__PURE__ */ z(IZ, x({
        ownerState: F
      }, H, {
        className: ve(Y.label, H == null ? void 0 : H.className),
        children: p
      })) : null, S]
    })]
  }));
});
process.env.NODE_ENV !== "production" && (Ww.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * In most cases will simply be a string containing a title for the label.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  componentsProps: t.shape({
    label: t.object
  }),
  /**
   * If `true`, the step is marked as failed.
   * @default false
   */
  error: t.bool,
  /**
   * Override the default label of the step icon.
   */
  icon: t.node,
  /**
   * The optional node to display.
   */
  optional: t.node,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: t.shape({
    label: t.object
  }),
  /**
   * The component to render in place of the [`StepIcon`](/material-ui/api/step-icon/).
   */
  StepIconComponent: t.elementType,
  /**
   * Props applied to the [`StepIcon`](/material-ui/api/step-icon/) element.
   */
  StepIconProps: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
Ww.muiName = "StepLabel";
const _Z = Ww;
function BZ(e) {
  return We("MuiStepButton", e);
}
const zZ = Ge("MuiStepButton", ["root", "horizontal", "vertical", "touchRipple"]), kM = zZ, VZ = ["children", "className", "icon", "optional"], FZ = (e) => {
  const {
    classes: o,
    orientation: i
  } = e;
  return Ye({
    root: ["root", i],
    touchRipple: ["touchRipple"]
  }, BZ, o);
}, jZ = ee(Qo, {
  name: "MuiStepButton",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [{
      [`& .${kM.touchRipple}`]: o.touchRipple
    }, o.root, o[i.orientation]];
  }
})(({
  ownerState: e
}) => x({
  width: "100%",
  padding: "24px 16px",
  margin: "-24px -16px",
  boxSizing: "content-box"
}, e.orientation === "vertical" && {
  justifyContent: "flex-start",
  padding: "8px",
  margin: "-8px"
}, {
  [`& .${kM.touchRipple}`]: {
    color: "rgba(0, 0, 0, 0.3)"
  }
})), DI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiStepButton"
  }), {
    children: d,
    className: p,
    icon: f,
    optional: v
  } = c, g = ue(c, VZ), {
    disabled: b,
    active: S
  } = w.useContext(Xv), {
    orientation: R
  } = w.useContext(zf), D = x({}, c, {
    orientation: R
  }), k = FZ(D), $ = {
    icon: f,
    optional: v
  }, P = As(d, ["StepLabel"]) ? /* @__PURE__ */ w.cloneElement(d, $) : /* @__PURE__ */ z(_Z, x({}, $, {
    children: d
  }));
  return /* @__PURE__ */ z(jZ, x({
    focusRipple: !0,
    disabled: b,
    TouchRippleProps: {
      className: k.touchRipple
    },
    className: ve(k.root, p),
    ref: i,
    ownerState: D,
    "aria-current": S ? "step" : void 0
  }, g, {
    children: P
  }));
});
process.env.NODE_ENV !== "production" && (DI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Can be a `StepLabel` or a node to place inside `StepLabel` as children.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The icon displayed by the step label.
   */
  icon: t.node,
  /**
   * The optional node to display.
   */
  optional: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const rse = DI;
function UZ(e) {
  return We("MuiStepConnector", e);
}
const HZ = Ge("MuiStepConnector", ["root", "horizontal", "vertical", "alternativeLabel", "active", "completed", "disabled", "line", "lineHorizontal", "lineVertical"]), ase = HZ, WZ = ["className"], YZ = (e) => {
  const {
    classes: o,
    orientation: i,
    alternativeLabel: c,
    active: d,
    completed: p,
    disabled: f
  } = e, v = {
    root: ["root", i, c && "alternativeLabel", d && "active", p && "completed", f && "disabled"],
    line: ["line", `line${ce(i)}`]
  };
  return Ye(v, UZ, o);
}, GZ = ee("div", {
  name: "MuiStepConnector",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[i.orientation], i.alternativeLabel && o.alternativeLabel, i.completed && o.completed];
  }
})(({
  ownerState: e
}) => x({
  flex: "1 1 auto"
}, e.orientation === "vertical" && {
  marginLeft: 12
  // half icon
}, e.alternativeLabel && {
  position: "absolute",
  top: 8 + 4,
  left: "calc(-50% + 20px)",
  right: "calc(50% + 20px)"
})), qZ = ee("span", {
  name: "MuiStepConnector",
  slot: "Line",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.line, o[`line${ce(i.orientation)}`]];
  }
})(({
  ownerState: e,
  theme: o
}) => {
  const i = o.palette.mode === "light" ? o.palette.grey[400] : o.palette.grey[600];
  return x({
    display: "block",
    borderColor: o.vars ? o.vars.palette.StepConnector.border : i
  }, e.orientation === "horizontal" && {
    borderTopStyle: "solid",
    borderTopWidth: 1
  }, e.orientation === "vertical" && {
    borderLeftStyle: "solid",
    borderLeftWidth: 1,
    minHeight: 24
  });
}), MI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiStepConnector"
  }), {
    className: d
  } = c, p = ue(c, WZ), {
    alternativeLabel: f,
    orientation: v = "horizontal"
  } = w.useContext(zf), {
    active: g,
    disabled: b,
    completed: S
  } = w.useContext(Xv), R = x({}, c, {
    alternativeLabel: f,
    orientation: v,
    active: g,
    completed: S,
    disabled: b
  }), D = YZ(R);
  return /* @__PURE__ */ z(GZ, x({
    className: ve(D.root, d),
    ref: i,
    ownerState: R
  }, p, {
    children: /* @__PURE__ */ z(qZ, {
      className: D.line,
      ownerState: R
    })
  }));
});
process.env.NODE_ENV !== "production" && (MI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const KZ = MI;
function QZ(e) {
  return We("MuiStepContent", e);
}
const XZ = Ge("MuiStepContent", ["root", "last", "transition"]), ise = XZ, ZZ = ["children", "className", "TransitionComponent", "transitionDuration", "TransitionProps"], JZ = (e) => {
  const {
    classes: o,
    last: i
  } = e;
  return Ye({
    root: ["root", i && "last"],
    transition: ["transition"]
  }, QZ, o);
}, eJ = ee("div", {
  name: "MuiStepContent",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.last && o.last];
  }
})(({
  ownerState: e,
  theme: o
}) => x({
  marginLeft: 12,
  // half icon
  paddingLeft: 8 + 12,
  // margin + half icon
  paddingRight: 8,
  borderLeft: o.vars ? `1px solid ${o.vars.palette.StepContent.border}` : `1px solid ${o.palette.mode === "light" ? o.palette.grey[400] : o.palette.grey[600]}`
}, e.last && {
  borderLeft: "none"
})), tJ = ee(mw, {
  name: "MuiStepContent",
  slot: "Transition",
  overridesResolver: (e, o) => o.transition
})({}), NI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiStepContent"
  }), {
    children: d,
    className: p,
    TransitionComponent: f = mw,
    transitionDuration: v = "auto",
    TransitionProps: g
  } = c, b = ue(c, ZZ), {
    orientation: S
  } = w.useContext(zf), {
    active: R,
    last: D,
    expanded: k
  } = w.useContext(Xv), $ = x({}, c, {
    last: D
  }), P = JZ($);
  process.env.NODE_ENV !== "production" && S !== "vertical" && console.error("MUI: <StepContent /> is only designed for use with the vertical stepper.");
  let O = v;
  return v === "auto" && !f.muiSupportAuto && (O = void 0), /* @__PURE__ */ z(eJ, x({
    className: ve(P.root, p),
    ref: i,
    ownerState: $
  }, b, {
    children: /* @__PURE__ */ z(tJ, x({
      as: f,
      in: R || k,
      className: P.transition,
      ownerState: $,
      timeout: O,
      unmountOnExit: !0
    }, g, {
      children: d
    }))
  }));
});
process.env.NODE_ENV !== "production" && (NI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Collapse
   */
  TransitionComponent: t.elementType,
  /**
   * Adjust the duration of the content expand transition.
   * Passed as a prop to the transition component.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: t.oneOfType([t.oneOf(["auto"]), t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: t.object
});
const sse = NI;
function nJ(e) {
  return We("MuiStepper", e);
}
const oJ = Ge("MuiStepper", ["root", "horizontal", "vertical", "alternativeLabel"]), lse = oJ, rJ = ["activeStep", "alternativeLabel", "children", "className", "component", "connector", "nonLinear", "orientation"], aJ = (e) => {
  const {
    orientation: o,
    alternativeLabel: i,
    classes: c
  } = e;
  return Ye({
    root: ["root", o, i && "alternativeLabel"]
  }, nJ, c);
}, iJ = ee("div", {
  name: "MuiStepper",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[i.orientation], i.alternativeLabel && o.alternativeLabel];
  }
})(({
  ownerState: e
}) => x({
  display: "flex"
}, e.orientation === "horizontal" && {
  flexDirection: "row",
  alignItems: "center"
}, e.orientation === "vertical" && {
  flexDirection: "column"
}, e.alternativeLabel && {
  alignItems: "flex-start"
})), sJ = /* @__PURE__ */ z(KZ, {}), PI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiStepper"
  }), {
    activeStep: d = 0,
    alternativeLabel: p = !1,
    children: f,
    className: v,
    component: g = "div",
    connector: b = sJ,
    nonLinear: S = !1,
    orientation: R = "horizontal"
  } = c, D = ue(c, rJ), k = x({}, c, {
    alternativeLabel: p,
    orientation: R,
    component: g
  }), $ = aJ(k), P = w.Children.toArray(f).filter(Boolean), O = P.map((_, A) => /* @__PURE__ */ w.cloneElement(_, x({
    index: A,
    last: A + 1 === P.length
  }, _.props))), I = w.useMemo(() => ({
    activeStep: d,
    alternativeLabel: p,
    connector: b,
    nonLinear: S,
    orientation: R
  }), [d, p, b, S, R]);
  return /* @__PURE__ */ z(zf.Provider, {
    value: I,
    children: /* @__PURE__ */ z(iJ, x({
      as: g,
      ownerState: k,
      className: ve($.root, v),
      ref: i
    }, D, {
      children: O
    }))
  });
});
process.env.NODE_ENV !== "production" && (PI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the active step (zero based index).
   * Set to -1 to disable all the steps.
   * @default 0
   */
  activeStep: To,
  /**
   * If set to 'true' and orientation is horizontal,
   * then the step label will be positioned under the icon.
   * @default false
   */
  alternativeLabel: t.bool,
  /**
   * Two or more `<Step />` components.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * An element to be placed between each step.
   * @default <StepConnector />
   */
  connector: t.element,
  /**
   * If set the `Stepper` will not assist in controlling steps for linear flow.
   * @default false
   */
  nonLinear: t.bool,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: t.oneOf(["horizontal", "vertical"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const cse = PI, lJ = ["anchor", "classes", "className", "width", "style"], cJ = ee("div", {
  shouldForwardProp: Ao
})(({
  theme: e,
  ownerState: o
}) => x({
  position: "fixed",
  top: 0,
  left: 0,
  bottom: 0,
  zIndex: e.zIndex.drawer - 1
}, o.anchor === "left" && {
  right: "auto"
}, o.anchor === "right" && {
  left: "auto",
  right: 0
}, o.anchor === "top" && {
  bottom: "auto",
  right: 0
}, o.anchor === "bottom" && {
  top: "auto",
  bottom: 0,
  right: 0
})), $I = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const {
    anchor: c,
    classes: d = {},
    className: p,
    width: f,
    style: v
  } = o, g = ue(o, lJ), b = o;
  return /* @__PURE__ */ z(cJ, x({
    className: ve("PrivateSwipeArea-root", d.root, d[`anchor${ce(c)}`], p),
    ref: i,
    style: x({
      [pd(c) ? "width" : "height"]: f
    }, v),
    ownerState: b
  }, g));
});
process.env.NODE_ENV !== "production" && ($I.propTypes = {
  /**
   * Side on which to attach the discovery area.
   */
  anchor: t.oneOf(["left", "top", "right", "bottom"]).isRequired,
  /**
   * @ignore
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The width of the left most (or right most) area in `px` where the
   * drawer can be swiped open from.
   */
  width: t.number.isRequired
});
const uJ = $I, dJ = ["BackdropProps"], pJ = ["anchor", "disableBackdropTransition", "disableDiscovery", "disableSwipeToOpen", "hideBackdrop", "hysteresis", "allowSwipeInChildren", "minFlingVelocity", "ModalProps", "onClose", "onOpen", "open", "PaperProps", "SwipeAreaProps", "swipeAreaWidth", "transitionDuration", "variant"], CC = 3, C1 = 20;
let Ml = null;
function x1(e, o, i) {
  return e === "right" ? i.body.offsetWidth - o[0].pageX : o[0].pageX;
}
function S1(e, o, i) {
  return e === "bottom" ? i.innerHeight - o[0].clientY : o[0].clientY;
}
function dv(e, o) {
  return e ? o.clientWidth : o.clientHeight;
}
function DM(e, o, i, c) {
  return Math.min(Math.max(i ? o - e : c + o - e, 0), c);
}
function fJ(e, o) {
  const i = [];
  for (; e && e !== o.parentElement; ) {
    const c = Wr(o).getComputedStyle(e);
    // Ignore the scroll children if the element is absolute positioned.
    c.getPropertyValue("position") === "absolute" || // Ignore the scroll children if the element has an overflowX hidden
    c.getPropertyValue("overflow-x") === "hidden" || (e.clientWidth > 0 && e.scrollWidth > e.clientWidth || e.clientHeight > 0 && e.scrollHeight > e.clientHeight) && i.push(e), e = e.parentElement;
  }
  return i;
}
function mJ({
  domTreeShapes: e,
  start: o,
  current: i,
  anchor: c
}) {
  const d = {
    scrollPosition: {
      x: "scrollLeft",
      y: "scrollTop"
    },
    scrollLength: {
      x: "scrollWidth",
      y: "scrollHeight"
    },
    clientLength: {
      x: "clientWidth",
      y: "clientHeight"
    }
  };
  return e.some((p) => {
    let f = i >= o;
    (c === "top" || c === "left") && (f = !f);
    const v = c === "left" || c === "right" ? "x" : "y", g = Math.round(p[d.scrollPosition[v]]), b = g > 0, S = g + p[d.clientLength[v]] < p[d.scrollLength[v]];
    return !!(f && S || !f && b);
  });
}
const hJ = typeof navigator < "u" && /iPad|iPhone|iPod/.test(navigator.userAgent), II = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = jv({
    name: "MuiSwipeableDrawer",
    props: o
  }), d = Mn(), p = {
    enter: d.transitions.duration.enteringScreen,
    exit: d.transitions.duration.leavingScreen
  }, {
    anchor: f = "left",
    disableBackdropTransition: v = !1,
    disableDiscovery: g = !1,
    disableSwipeToOpen: b = hJ,
    hideBackdrop: S,
    hysteresis: R = 0.52,
    allowSwipeInChildren: D = !1,
    minFlingVelocity: k = 450,
    ModalProps: {
      BackdropProps: $
    } = {},
    onClose: P,
    onOpen: O,
    open: I = !1,
    PaperProps: _ = {},
    SwipeAreaProps: A,
    swipeAreaWidth: V = 20,
    transitionDuration: B = p,
    variant: M = "temporary"
    // Mobile first.
  } = c, F = ue(c.ModalProps, dJ), Y = ue(c, pJ), [H, J] = w.useState(!1), W = w.useRef({
    isSwiping: null
  }), te = w.useRef(), Z = w.useRef(), q = w.useRef(), Q = cn(_.ref, q), re = w.useRef(!1), ie = w.useRef();
  so(() => {
    ie.current = null;
  }, [I]);
  const K = w.useCallback((Me, fe = {}) => {
    const {
      mode: De = null,
      changeTransition: be = !0
    } = fe, Ce = yv(d, f), de = ["right", "bottom"].indexOf(Ce) !== -1 ? 1 : -1, Ae = pd(f), at = Ae ? `translate(${de * Me}px, 0)` : `translate(0, ${de * Me}px)`, Oe = q.current.style;
    Oe.webkitTransform = at, Oe.transform = at;
    let _e = "";
    if (De && (_e = d.transitions.create("all", Ki({
      easing: void 0,
      style: void 0,
      timeout: B
    }, {
      mode: De
    }))), be && (Oe.webkitTransition = _e, Oe.transition = _e), !v && !S) {
      const ye = Z.current.style;
      ye.opacity = 1 - Me / dv(Ae, q.current), be && (ye.webkitTransition = _e, ye.transition = _e);
    }
  }, [f, v, S, d, B]), ne = St((Me) => {
    if (!re.current)
      return;
    if (Ml = null, re.current = !1, zC.flushSync(() => {
      J(!1);
    }), !W.current.isSwiping) {
      W.current.isSwiping = null;
      return;
    }
    W.current.isSwiping = null;
    const fe = yv(d, f), De = pd(f);
    let be;
    De ? be = x1(fe, Me.changedTouches, Dn(Me.currentTarget)) : be = S1(fe, Me.changedTouches, Wr(Me.currentTarget));
    const Ce = De ? W.current.startX : W.current.startY, de = dv(De, q.current), Ae = DM(be, Ce, I, de), at = Ae / de;
    if (Math.abs(W.current.velocity) > k && (ie.current = Math.abs((de - Ae) / W.current.velocity) * 1e3), I) {
      W.current.velocity > k || at > R ? P() : K(0, {
        mode: "exit"
      });
      return;
    }
    W.current.velocity < -k || 1 - at > R ? O() : K(dv(De, q.current), {
      mode: "enter"
    });
  }), se = (Me = !1) => {
    if (!H) {
      (Me || !(g && D)) && zC.flushSync(() => {
        J(!0);
      });
      const fe = pd(f);
      !I && q.current && K(dv(fe, q.current) + (g ? 15 : -C1), {
        changeTransition: !1
      }), W.current.velocity = 0, W.current.lastTime = null, W.current.lastTranslate = null, W.current.paperHit = !1, re.current = !0;
    }
  }, Fe = St((Me) => {
    if (!q.current || !re.current || Ml !== null && Ml !== W.current)
      return;
    se(!0);
    const fe = yv(d, f), De = pd(f), be = x1(fe, Me.touches, Dn(Me.currentTarget)), Ce = S1(fe, Me.touches, Wr(Me.currentTarget));
    if (I && q.current.contains(Me.target) && Ml === null) {
      const _e = fJ(Me.target, q.current);
      if (mJ({
        domTreeShapes: _e,
        start: De ? W.current.startX : W.current.startY,
        current: De ? be : Ce,
        anchor: f
      })) {
        Ml = !0;
        return;
      }
      Ml = W.current;
    }
    if (W.current.isSwiping == null) {
      const _e = Math.abs(be - W.current.startX), ye = Math.abs(Ce - W.current.startY), ae = De ? _e > ye && _e > CC : ye > _e && ye > CC;
      if (ae && Me.cancelable && Me.preventDefault(), ae === !0 || (De ? ye > CC : _e > CC)) {
        if (W.current.isSwiping = ae, !ae) {
          ne(Me);
          return;
        }
        W.current.startX = be, W.current.startY = Ce, !g && !I && (De ? W.current.startX -= C1 : W.current.startY -= C1);
      }
    }
    if (!W.current.isSwiping)
      return;
    const de = dv(De, q.current);
    let Ae = De ? W.current.startX : W.current.startY;
    I && !W.current.paperHit && (Ae = Math.min(Ae, de));
    const at = DM(De ? be : Ce, Ae, I, de);
    if (I)
      if (W.current.paperHit)
        at === 0 && (W.current.startX = be, W.current.startY = Ce);
      else if (De ? be < de : Ce < de)
        W.current.paperHit = !0, W.current.startX = be, W.current.startY = Ce;
      else
        return;
    W.current.lastTranslate === null && (W.current.lastTranslate = at, W.current.lastTime = performance.now() + 1);
    const Oe = (at - W.current.lastTranslate) / (performance.now() - W.current.lastTime) * 1e3;
    W.current.velocity = W.current.velocity * 0.4 + Oe * 0.6, W.current.lastTranslate = at, W.current.lastTime = performance.now(), Me.cancelable && Me.preventDefault(), K(at);
  }), qe = St((Me) => {
    if (Me.defaultPrevented || Me.defaultMuiPrevented || I && (S || !Z.current.contains(Me.target)) && !q.current.contains(Me.target))
      return;
    const fe = yv(d, f), De = pd(f), be = x1(fe, Me.touches, Dn(Me.currentTarget)), Ce = S1(fe, Me.touches, Wr(Me.currentTarget));
    if (!I) {
      var de;
      if (b || !(Me.target === te.current || (de = q.current) != null && de.contains(Me.target) && (typeof D == "function" ? D(Me, te.current, q.current) : D)))
        return;
      if (De) {
        if (be > V)
          return;
      } else if (Ce > V)
        return;
    }
    Me.defaultMuiPrevented = !0, Ml = null, W.current.startX = be, W.current.startY = Ce, se();
  });
  return w.useEffect(() => {
    if (M === "temporary") {
      const Me = Dn(q.current);
      return Me.addEventListener("touchstart", qe), Me.addEventListener("touchmove", Fe, {
        passive: !I
      }), Me.addEventListener("touchend", ne), () => {
        Me.removeEventListener("touchstart", qe), Me.removeEventListener("touchmove", Fe, {
          passive: !I
        }), Me.removeEventListener("touchend", ne);
      };
    }
  }, [M, I, qe, Fe, ne]), w.useEffect(() => () => {
    Ml === W.current && (Ml = null);
  }, []), w.useEffect(() => {
    I || J(!1);
  }, [I]), /* @__PURE__ */ ht(w.Fragment, {
    children: [/* @__PURE__ */ z(M7, x({
      open: M === "temporary" && H ? !0 : I,
      variant: M,
      ModalProps: x({
        BackdropProps: x({}, $, {
          ref: Z
        })
      }, M === "temporary" && {
        keepMounted: !0
      }, F),
      hideBackdrop: S,
      PaperProps: x({}, _, {
        style: x({
          pointerEvents: M === "temporary" && !I && !D ? "none" : ""
        }, _.style),
        ref: Q
      }),
      anchor: f,
      transitionDuration: ie.current || B,
      onClose: P,
      ref: i
    }, Y)), !b && M === "temporary" && /* @__PURE__ */ z(UC, {
      children: /* @__PURE__ */ z(uJ, x({
        anchor: f,
        ref: te,
        width: V
      }, A))
    })]
  });
});
process.env.NODE_ENV !== "production" && (II.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If set to true, the swipe event will open the drawer even if the user begins the swipe on one of the drawer's children.
   * This can be useful in scenarios where the drawer is partially visible.
   * You can customize it further with a callback that determines which children the user can drag over to open the drawer
   * (for example, to ignore other elements that handle touch move events, like sliders).
   *
   * @param {TouchEvent} event The 'touchstart' event
   * @param {HTMLDivElement} swipeArea The swipe area element
   * @param {HTMLDivElement} paper The drawer's paper element
   *
   * @default false
   */
  allowSwipeInChildren: t.oneOfType([t.func, t.bool]),
  /**
   * @ignore
   */
  anchor: t.oneOf(["bottom", "left", "right", "top"]),
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Disable the backdrop transition.
   * This can improve the FPS on low-end devices.
   * @default false
   */
  disableBackdropTransition: t.bool,
  /**
   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit
   * to promote accidental discovery of the swipe gesture.
   * @default false
   */
  disableDiscovery: t.bool,
  /**
   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers
   * navigation actions. Swipe to open is disabled on iOS browsers by default.
   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)
   */
  disableSwipeToOpen: t.bool,
  /**
   * @ignore
   */
  hideBackdrop: t.bool,
  /**
   * Affects how far the drawer must be opened/closed to change its state.
   * Specified as percent (0-1) of the width of the drawer
   * @default 0.52
   */
  hysteresis: t.number,
  /**
   * Defines, from which (average) velocity on, the swipe is
   * defined as complete although hysteresis isn't reached.
   * Good threshold is between 250 - 1000 px/s
   * @default 450
   */
  minFlingVelocity: t.number,
  /**
   * @ignore
   */
  ModalProps: t.shape({
    BackdropProps: t.shape({
      component: Kc
    })
  }),
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent<{}>} event The event source of the callback.
   */
  onClose: t.func.isRequired,
  /**
   * Callback fired when the component requests to be opened.
   *
   * @param {React.SyntheticEvent<{}>} event The event source of the callback.
   */
  onOpen: t.func.isRequired,
  /**
   * If `true`, the component is shown.
   * @default false
   */
  open: t.bool,
  /**
   * @ignore
   */
  PaperProps: t.shape({
    component: Kc,
    style: t.object
  }),
  /**
   * The element is used to intercept the touch events on the edge.
   */
  SwipeAreaProps: t.object,
  /**
   * The width of the left most (or right most) area in `px` that
   * the drawer can be swiped open from.
   * @default 20
   */
  swipeAreaWidth: t.number,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: t.oneOfType([t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })]),
  /**
   * @ignore
   */
  variant: t.oneOf(["permanent", "persistent", "temporary"])
});
const use = II;
function vJ(e) {
  return We("MuiSwitch", e);
}
const gJ = Ge("MuiSwitch", ["root", "edgeStart", "edgeEnd", "switchBase", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium", "checked", "disabled", "input", "thumb", "track"]), aa = gJ, yJ = ["className", "color", "edge", "size", "sx"], bJ = (e) => {
  const {
    classes: o,
    edge: i,
    size: c,
    color: d,
    checked: p,
    disabled: f
  } = e, v = {
    root: ["root", i && `edge${ce(i)}`, `size${ce(c)}`],
    switchBase: ["switchBase", `color${ce(d)}`, p && "checked", f && "disabled"],
    thumb: ["thumb"],
    track: ["track"],
    input: ["input"]
  }, g = Ye(v, vJ, o);
  return x({}, o, g);
}, CJ = ee("span", {
  name: "MuiSwitch",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.edge && o[`edge${ce(i.edge)}`], o[`size${ce(i.size)}`]];
  }
})(({
  ownerState: e
}) => x({
  display: "inline-flex",
  width: 34 + 12 * 2,
  height: 14 + 12 * 2,
  overflow: "hidden",
  padding: 12,
  boxSizing: "border-box",
  position: "relative",
  flexShrink: 0,
  zIndex: 0,
  // Reset the stacking context.
  verticalAlign: "middle",
  // For correct alignment with the text.
  "@media print": {
    colorAdjust: "exact"
  }
}, e.edge === "start" && {
  marginLeft: -8
}, e.edge === "end" && {
  marginRight: -8
}, e.size === "small" && {
  width: 40,
  height: 24,
  padding: 7,
  [`& .${aa.thumb}`]: {
    width: 16,
    height: 16
  },
  [`& .${aa.switchBase}`]: {
    padding: 4,
    [`&.${aa.checked}`]: {
      transform: "translateX(16px)"
    }
  }
})), xJ = ee(Rw, {
  name: "MuiSwitch",
  slot: "SwitchBase",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.switchBase, {
      [`& .${aa.input}`]: o.input
    }, i.color !== "default" && o[`color${ce(i.color)}`]];
  }
})(({
  theme: e
}) => ({
  position: "absolute",
  top: 0,
  left: 0,
  zIndex: 1,
  // Render above the focus ripple.
  color: e.vars ? e.vars.palette.Switch.defaultColor : `${e.palette.mode === "light" ? e.palette.common.white : e.palette.grey[300]}`,
  transition: e.transitions.create(["left", "transform"], {
    duration: e.transitions.duration.shortest
  }),
  [`&.${aa.checked}`]: {
    transform: "translateX(20px)"
  },
  [`&.${aa.disabled}`]: {
    color: e.vars ? e.vars.palette.Switch.defaultDisabledColor : `${e.palette.mode === "light" ? e.palette.grey[100] : e.palette.grey[600]}`
  },
  [`&.${aa.checked} + .${aa.track}`]: {
    opacity: 0.5
  },
  [`&.${aa.disabled} + .${aa.track}`]: {
    opacity: e.vars ? e.vars.opacity.switchTrackDisabled : `${e.palette.mode === "light" ? 0.12 : 0.2}`
  },
  [`& .${aa.input}`]: {
    left: "-100%",
    width: "300%"
  }
}), ({
  theme: e,
  ownerState: o
}) => x({
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Wt(e.palette.action.active, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  }
}, o.color !== "default" && {
  [`&.${aa.checked}`]: {
    color: (e.vars || e).palette[o.color].main,
    "&:hover": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette[o.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Wt(e.palette[o.color].main, e.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    [`&.${aa.disabled}`]: {
      color: e.vars ? e.vars.palette.Switch[`${o.color}DisabledColor`] : `${e.palette.mode === "light" ? e0(e.palette[o.color].main, 0.62) : t0(e.palette[o.color].main, 0.55)}`
    }
  },
  [`&.${aa.checked} + .${aa.track}`]: {
    backgroundColor: (e.vars || e).palette[o.color].main
  }
})), SJ = ee("span", {
  name: "MuiSwitch",
  slot: "Track",
  overridesResolver: (e, o) => o.track
})(({
  theme: e
}) => ({
  height: "100%",
  width: "100%",
  borderRadius: 14 / 2,
  zIndex: -1,
  transition: e.transitions.create(["opacity", "background-color"], {
    duration: e.transitions.duration.shortest
  }),
  backgroundColor: e.vars ? e.vars.palette.common.onBackground : `${e.palette.mode === "light" ? e.palette.common.black : e.palette.common.white}`,
  opacity: e.vars ? e.vars.opacity.switchTrack : `${e.palette.mode === "light" ? 0.38 : 0.3}`
})), TJ = ee("span", {
  name: "MuiSwitch",
  slot: "Thumb",
  overridesResolver: (e, o) => o.thumb
})(({
  theme: e
}) => ({
  boxShadow: (e.vars || e).shadows[1],
  backgroundColor: "currentColor",
  width: 20,
  height: 20,
  borderRadius: "50%"
})), LI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiSwitch"
  }), {
    className: d,
    color: p = "primary",
    edge: f = !1,
    size: v = "medium",
    sx: g
  } = c, b = ue(c, yJ), S = x({}, c, {
    color: p,
    edge: f,
    size: v
  }), R = bJ(S), D = /* @__PURE__ */ z(TJ, {
    className: R.thumb,
    ownerState: S
  });
  return /* @__PURE__ */ ht(CJ, {
    className: ve(R.root, d),
    sx: g,
    ownerState: S,
    children: [/* @__PURE__ */ z(xJ, x({
      type: "checkbox",
      icon: D,
      checkedIcon: D,
      ref: i,
      ownerState: S
    }, b, {
      classes: x({}, R, {
        root: R.switchBase
      })
    })), /* @__PURE__ */ z(SJ, {
      className: R.track,
      ownerState: S
    })]
  });
});
process.env.NODE_ENV !== "production" && (LI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: t.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: t.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: t.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: t.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: t.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: t.node,
  /**
   * The id of the `input` element.
   */
  id: t.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Lo,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: t.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: t.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense switch styling.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["medium", "small"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: t.any
});
const dse = LI;
function wJ(e) {
  return We("MuiTab", e);
}
const EJ = Ge("MuiTab", ["root", "labelIcon", "textColorInherit", "textColorPrimary", "textColorSecondary", "selected", "disabled", "fullWidth", "wrapped", "iconWrapper"]), ld = EJ, RJ = ["className", "disabled", "disableFocusRipple", "fullWidth", "icon", "iconPosition", "indicator", "label", "onChange", "onClick", "onFocus", "selected", "selectionFollowsFocus", "textColor", "value", "wrapped"], OJ = (e) => {
  const {
    classes: o,
    textColor: i,
    fullWidth: c,
    wrapped: d,
    icon: p,
    label: f,
    selected: v,
    disabled: g
  } = e, b = {
    root: ["root", p && f && "labelIcon", `textColor${ce(i)}`, c && "fullWidth", d && "wrapped", v && "selected", g && "disabled"],
    iconWrapper: ["iconWrapper"]
  };
  return Ye(b, wJ, o);
}, kJ = ee(Qo, {
  name: "MuiTab",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.label && i.icon && o.labelIcon, o[`textColor${ce(i.textColor)}`], i.fullWidth && o.fullWidth, i.wrapped && o.wrapped];
  }
})(({
  theme: e,
  ownerState: o
}) => x({}, e.typography.button, {
  maxWidth: 360,
  minWidth: 90,
  position: "relative",
  minHeight: 48,
  flexShrink: 0,
  padding: "12px 16px",
  overflow: "hidden",
  whiteSpace: "normal",
  textAlign: "center"
}, o.label && {
  flexDirection: o.iconPosition === "top" || o.iconPosition === "bottom" ? "column" : "row"
}, {
  lineHeight: 1.25
}, o.icon && o.label && {
  minHeight: 72,
  paddingTop: 9,
  paddingBottom: 9,
  [`& > .${ld.iconWrapper}`]: x({}, o.iconPosition === "top" && {
    marginBottom: 6
  }, o.iconPosition === "bottom" && {
    marginTop: 6
  }, o.iconPosition === "start" && {
    marginRight: e.spacing(1)
  }, o.iconPosition === "end" && {
    marginLeft: e.spacing(1)
  })
}, o.textColor === "inherit" && {
  color: "inherit",
  opacity: 0.6,
  // same opacity as theme.palette.text.secondary
  [`&.${ld.selected}`]: {
    opacity: 1
  },
  [`&.${ld.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  }
}, o.textColor === "primary" && {
  color: (e.vars || e).palette.text.secondary,
  [`&.${ld.selected}`]: {
    color: (e.vars || e).palette.primary.main
  },
  [`&.${ld.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  }
}, o.textColor === "secondary" && {
  color: (e.vars || e).palette.text.secondary,
  [`&.${ld.selected}`]: {
    color: (e.vars || e).palette.secondary.main
  },
  [`&.${ld.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  }
}, o.fullWidth && {
  flexShrink: 1,
  flexGrow: 1,
  flexBasis: 0,
  maxWidth: "none"
}, o.wrapped && {
  fontSize: e.typography.pxToRem(12)
})), AI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiTab"
  }), {
    className: d,
    disabled: p = !1,
    disableFocusRipple: f = !1,
    // eslint-disable-next-line react/prop-types
    fullWidth: v,
    icon: g,
    iconPosition: b = "top",
    // eslint-disable-next-line react/prop-types
    indicator: S,
    label: R,
    onChange: D,
    onClick: k,
    onFocus: $,
    // eslint-disable-next-line react/prop-types
    selected: P,
    // eslint-disable-next-line react/prop-types
    selectionFollowsFocus: O,
    // eslint-disable-next-line react/prop-types
    textColor: I = "inherit",
    value: _,
    wrapped: A = !1
  } = c, V = ue(c, RJ), B = x({}, c, {
    disabled: p,
    disableFocusRipple: f,
    selected: P,
    icon: !!g,
    iconPosition: b,
    label: !!R,
    fullWidth: v,
    textColor: I,
    wrapped: A
  }), M = OJ(B), F = g && R && /* @__PURE__ */ w.isValidElement(g) ? /* @__PURE__ */ w.cloneElement(g, {
    className: ve(M.iconWrapper, g.props.className)
  }) : g, Y = (J) => {
    !P && D && D(J, _), k && k(J);
  }, H = (J) => {
    O && !P && D && D(J, _), $ && $(J);
  };
  return /* @__PURE__ */ ht(kJ, x({
    focusRipple: !f,
    className: ve(M.root, d),
    ref: i,
    role: "tab",
    "aria-selected": P,
    disabled: p,
    onClick: Y,
    onFocus: H,
    ownerState: B,
    tabIndex: P ? 0 : -1
  }, V, {
    children: [b === "top" || b === "start" ? /* @__PURE__ */ ht(w.Fragment, {
      children: [F, R]
    }) : /* @__PURE__ */ ht(w.Fragment, {
      children: [R, F]
    }), S]
  }));
});
process.env.NODE_ENV !== "production" && (AI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: o0,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: t.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: t.bool,
  /**
   * The icon to display.
   */
  icon: t.oneOfType([t.element, t.string]),
  /**
   * The position of the icon relative to the label.
   * @default 'top'
   */
  iconPosition: t.oneOf(["bottom", "end", "start", "top"]),
  /**
   * The label element.
   */
  label: t.node,
  /**
   * @ignore
   */
  onChange: t.func,
  /**
   * @ignore
   */
  onClick: t.func,
  /**
   * @ignore
   */
  onFocus: t.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * You can provide your own value. Otherwise, we fallback to the child position index.
   */
  value: t.any,
  /**
   * Tab labels appear in a single row.
   * They can use a second line if needed.
   * @default false
   */
  wrapped: t.bool
});
const pse = AI, _I = /* @__PURE__ */ w.createContext();
process.env.NODE_ENV !== "production" && (_I.displayName = "TableContext");
const BI = _I;
function DJ(e) {
  return We("MuiTable", e);
}
const MJ = Ge("MuiTable", ["root", "stickyHeader"]), fse = MJ, NJ = ["className", "component", "padding", "size", "stickyHeader"], PJ = (e) => {
  const {
    classes: o,
    stickyHeader: i
  } = e;
  return Ye({
    root: ["root", i && "stickyHeader"]
  }, DJ, o);
}, $J = ee("table", {
  name: "MuiTable",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.stickyHeader && o.stickyHeader];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  display: "table",
  width: "100%",
  borderCollapse: "collapse",
  borderSpacing: 0,
  "& caption": x({}, e.typography.body2, {
    padding: e.spacing(2),
    color: (e.vars || e).palette.text.secondary,
    textAlign: "left",
    captionSide: "bottom"
  })
}, o.stickyHeader && {
  borderCollapse: "separate"
})), MM = "table", zI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiTable"
  }), {
    className: d,
    component: p = MM,
    padding: f = "normal",
    size: v = "medium",
    stickyHeader: g = !1
  } = c, b = ue(c, NJ), S = x({}, c, {
    component: p,
    padding: f,
    size: v,
    stickyHeader: g
  }), R = PJ(S), D = w.useMemo(() => ({
    padding: f,
    size: v,
    stickyHeader: g
  }), [f, v, g]);
  return /* @__PURE__ */ z(BI.Provider, {
    value: D,
    children: /* @__PURE__ */ z($J, x({
      as: p,
      role: p === MM ? null : "table",
      ref: i,
      className: ve(R.root, d),
      ownerState: S
    }, b))
  });
});
process.env.NODE_ENV !== "production" && (zI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the table, normally `TableHead` and `TableBody`.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Allows TableCells to inherit padding of the Table.
   * @default 'normal'
   */
  padding: t.oneOf(["checkbox", "none", "normal"]),
  /**
   * Allows TableCells to inherit size of the Table.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["medium", "small"]), t.string]),
  /**
   * Set the header sticky.
   *
   * ⚠️ It doesn't work with IE11.
   * @default false
   */
  stickyHeader: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const mse = zI, VI = /* @__PURE__ */ w.createContext();
process.env.NODE_ENV !== "production" && (VI.displayName = "Tablelvl2Context");
const Zv = VI;
function IJ(e) {
  return We("MuiTableBody", e);
}
const LJ = Ge("MuiTableBody", ["root"]), hse = LJ, AJ = ["className", "component"], _J = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"]
  }, IJ, o);
}, BJ = ee("tbody", {
  name: "MuiTableBody",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({
  display: "table-row-group"
}), zJ = {
  variant: "body"
}, NM = "tbody", FI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiTableBody"
  }), {
    className: d,
    component: p = NM
  } = c, f = ue(c, AJ), v = x({}, c, {
    component: p
  }), g = _J(v);
  return /* @__PURE__ */ z(Zv.Provider, {
    value: zJ,
    children: /* @__PURE__ */ z(BJ, x({
      className: ve(g.root, d),
      as: p,
      ref: i,
      role: p === NM ? null : "rowgroup",
      ownerState: v
    }, f))
  });
});
process.env.NODE_ENV !== "production" && (FI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `TableRow`.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const vse = FI;
function VJ(e) {
  return We("MuiTableCell", e);
}
const FJ = Ge("MuiTableCell", ["root", "head", "body", "footer", "sizeSmall", "sizeMedium", "paddingCheckbox", "paddingNone", "alignLeft", "alignCenter", "alignRight", "alignJustify", "stickyHeader"]), jJ = FJ, UJ = ["align", "className", "component", "padding", "scope", "size", "sortDirection", "variant"], HJ = (e) => {
  const {
    classes: o,
    variant: i,
    align: c,
    padding: d,
    size: p,
    stickyHeader: f
  } = e, v = {
    root: ["root", i, f && "stickyHeader", c !== "inherit" && `align${ce(c)}`, d !== "normal" && `padding${ce(d)}`, `size${ce(p)}`]
  };
  return Ye(v, VJ, o);
}, WJ = ee("td", {
  name: "MuiTableCell",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[i.variant], o[`size${ce(i.size)}`], i.padding !== "normal" && o[`padding${ce(i.padding)}`], i.align !== "inherit" && o[`align${ce(i.align)}`], i.stickyHeader && o.stickyHeader];
  }
})(({
  theme: e,
  ownerState: o
}) => x({}, e.typography.body2, {
  display: "table-cell",
  verticalAlign: "inherit",
  // Workaround for a rendering bug with spanned columns in Chrome 62.0.
  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.
  borderBottom: e.vars ? `1px solid ${e.vars.palette.TableCell.border}` : `1px solid
    ${e.palette.mode === "light" ? e0(Wt(e.palette.divider, 1), 0.88) : t0(Wt(e.palette.divider, 1), 0.68)}`,
  textAlign: "left",
  padding: 16
}, o.variant === "head" && {
  color: (e.vars || e).palette.text.primary,
  lineHeight: e.typography.pxToRem(24),
  fontWeight: e.typography.fontWeightMedium
}, o.variant === "body" && {
  color: (e.vars || e).palette.text.primary
}, o.variant === "footer" && {
  color: (e.vars || e).palette.text.secondary,
  lineHeight: e.typography.pxToRem(21),
  fontSize: e.typography.pxToRem(12)
}, o.size === "small" && {
  padding: "6px 16px",
  [`&.${jJ.paddingCheckbox}`]: {
    width: 24,
    // prevent the checkbox column from growing
    padding: "0 12px 0 16px",
    "& > *": {
      padding: 0
    }
  }
}, o.padding === "checkbox" && {
  width: 48,
  // prevent the checkbox column from growing
  padding: "0 0 0 4px"
}, o.padding === "none" && {
  padding: 0
}, o.align === "left" && {
  textAlign: "left"
}, o.align === "center" && {
  textAlign: "center"
}, o.align === "right" && {
  textAlign: "right",
  flexDirection: "row-reverse"
}, o.align === "justify" && {
  textAlign: "justify"
}, o.stickyHeader && {
  position: "sticky",
  top: 0,
  zIndex: 2,
  backgroundColor: (e.vars || e).palette.background.default
})), jI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiTableCell"
  }), {
    align: d = "inherit",
    className: p,
    component: f,
    padding: v,
    scope: g,
    size: b,
    sortDirection: S,
    variant: R
  } = c, D = ue(c, UJ), k = w.useContext(BI), $ = w.useContext(Zv), P = $ && $.variant === "head";
  let O;
  f ? O = f : O = P ? "th" : "td";
  let I = g;
  O === "td" ? I = void 0 : !I && P && (I = "col");
  const _ = R || $ && $.variant, A = x({}, c, {
    align: d,
    component: O,
    padding: v || (k && k.padding ? k.padding : "normal"),
    size: b || (k && k.size ? k.size : "medium"),
    sortDirection: S,
    stickyHeader: _ === "head" && k && k.stickyHeader,
    variant: _
  }), V = HJ(A);
  let B = null;
  return S && (B = S === "asc" ? "ascending" : "descending"), /* @__PURE__ */ z(WJ, x({
    as: O,
    ref: i,
    className: ve(V.root, p),
    "aria-sort": B,
    scope: I,
    ownerState: A
  }, D));
});
process.env.NODE_ENV !== "production" && (jI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the table cell content.
   *
   * Monetary or generally number fields **should be right aligned** as that allows
   * you to add them up quickly in your head without having to worry about decimals.
   * @default 'inherit'
   */
  align: t.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Sets the padding applied to the cell.
   * The prop defaults to the value (`'default'`) inherited from the parent Table component.
   */
  padding: t.oneOf(["checkbox", "none", "normal"]),
  /**
   * Set scope attribute.
   */
  scope: t.string,
  /**
   * Specify the size of the cell.
   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.
   */
  size: t.oneOfType([t.oneOf(["medium", "small"]), t.string]),
  /**
   * Set aria-sort direction.
   */
  sortDirection: t.oneOf(["asc", "desc", !1]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Specify the cell type.
   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.
   */
  variant: t.oneOfType([t.oneOf(["body", "footer", "head"]), t.string])
});
const W1 = jI;
function YJ(e) {
  return We("MuiTableContainer", e);
}
const GJ = Ge("MuiTableContainer", ["root"]), gse = GJ, qJ = ["className", "component"], KJ = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"]
  }, YJ, o);
}, QJ = ee("div", {
  name: "MuiTableContainer",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({
  width: "100%",
  overflowX: "auto"
}), UI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiTableContainer"
  }), {
    className: d,
    component: p = "div"
  } = c, f = ue(c, qJ), v = x({}, c, {
    component: p
  }), g = KJ(v);
  return /* @__PURE__ */ z(QJ, x({
    ref: i,
    as: p,
    className: ve(g.root, d),
    ownerState: v
  }, f));
});
process.env.NODE_ENV !== "production" && (UI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `Table`.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const yse = UI;
function XJ(e) {
  return We("MuiTableFooter", e);
}
const ZJ = Ge("MuiTableFooter", ["root"]), bse = ZJ, JJ = ["className", "component"], eee = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"]
  }, XJ, o);
}, tee = ee("tfoot", {
  name: "MuiTableFooter",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({
  display: "table-footer-group"
}), nee = {
  variant: "footer"
}, PM = "tfoot", HI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiTableFooter"
  }), {
    className: d,
    component: p = PM
  } = c, f = ue(c, JJ), v = x({}, c, {
    component: p
  }), g = eee(v);
  return /* @__PURE__ */ z(Zv.Provider, {
    value: nee,
    children: /* @__PURE__ */ z(tee, x({
      as: p,
      className: ve(g.root, d),
      ref: i,
      role: p === PM ? null : "rowgroup",
      ownerState: v
    }, f))
  });
});
process.env.NODE_ENV !== "production" && (HI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `TableRow`.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Cse = HI;
function oee(e) {
  return We("MuiTableHead", e);
}
const ree = Ge("MuiTableHead", ["root"]), xse = ree, aee = ["className", "component"], iee = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"]
  }, oee, o);
}, see = ee("thead", {
  name: "MuiTableHead",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({
  display: "table-header-group"
}), lee = {
  variant: "head"
}, $M = "thead", WI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiTableHead"
  }), {
    className: d,
    component: p = $M
  } = c, f = ue(c, aee), v = x({}, c, {
    component: p
  }), g = iee(v);
  return /* @__PURE__ */ z(Zv.Provider, {
    value: lee,
    children: /* @__PURE__ */ z(see, x({
      as: p,
      className: ve(g.root, d),
      ref: i,
      role: p === $M ? null : "rowgroup",
      ownerState: v
    }, f))
  });
});
process.env.NODE_ENV !== "production" && (WI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `TableRow`.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Sse = WI;
function cee(e) {
  return We("MuiToolbar", e);
}
const uee = Ge("MuiToolbar", ["root", "gutters", "regular", "dense"]), Tse = uee, dee = ["className", "component", "disableGutters", "variant"], pee = (e) => {
  const {
    classes: o,
    disableGutters: i,
    variant: c
  } = e;
  return Ye({
    root: ["root", !i && "gutters", c]
  }, cee, o);
}, fee = ee("div", {
  name: "MuiToolbar",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, !i.disableGutters && o.gutters, o[i.variant]];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  position: "relative",
  display: "flex",
  alignItems: "center"
}, !o.disableGutters && {
  paddingLeft: e.spacing(2),
  paddingRight: e.spacing(2),
  [e.breakpoints.up("sm")]: {
    paddingLeft: e.spacing(3),
    paddingRight: e.spacing(3)
  }
}, o.variant === "dense" && {
  minHeight: 48
}), ({
  theme: e,
  ownerState: o
}) => o.variant === "regular" && e.mixins.toolbar), YI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiToolbar"
  }), {
    className: d,
    component: p = "div",
    disableGutters: f = !1,
    variant: v = "regular"
  } = c, g = ue(c, dee), b = x({}, c, {
    component: p,
    disableGutters: f,
    variant: v
  }), S = pee(b);
  return /* @__PURE__ */ z(fee, x({
    as: p,
    className: ve(S.root, d),
    ref: i,
    ownerState: b
  }, g));
});
process.env.NODE_ENV !== "production" && (YI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.
   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, disables gutter padding.
   * @default false
   */
  disableGutters: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * @default 'regular'
   */
  variant: t.oneOfType([t.oneOf(["dense", "regular"]), t.string])
});
const mee = YI, GI = Cn(/* @__PURE__ */ z("path", {
  d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
}), "KeyboardArrowLeft"), qI = Cn(/* @__PURE__ */ z("path", {
  d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
}), "KeyboardArrowRight"), hee = ["backIconButtonProps", "count", "disabled", "getItemAriaLabel", "nextIconButtonProps", "onPageChange", "page", "rowsPerPage", "showFirstButton", "showLastButton", "slots", "slotProps"], KI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d, p, f, v, g, b, S;
  const {
    backIconButtonProps: R,
    count: D,
    disabled: k = !1,
    getItemAriaLabel: $,
    nextIconButtonProps: P,
    onPageChange: O,
    page: I,
    rowsPerPage: _,
    showFirstButton: A,
    showLastButton: V,
    slots: B = {},
    slotProps: M = {}
  } = o, F = ue(o, hee), Y = Mn(), H = (Ae) => {
    O(Ae, 0);
  }, J = (Ae) => {
    O(Ae, I - 1);
  }, W = (Ae) => {
    O(Ae, I + 1);
  }, te = (Ae) => {
    O(Ae, Math.max(0, Math.ceil(D / _) - 1));
  }, Z = (c = B.firstButton) != null ? c : Wi, q = (d = B.lastButton) != null ? d : Wi, Q = (p = B.nextButton) != null ? p : Wi, re = (f = B.previousButton) != null ? f : Wi, ie = (v = B.firstButtonIcon) != null ? v : j1, K = (g = B.lastButtonIcon) != null ? g : U1, ne = (b = B.nextButtonIcon) != null ? b : qI, se = (S = B.previousButtonIcon) != null ? S : GI, Fe = Y.direction === "rtl" ? q : Z, qe = Y.direction === "rtl" ? Q : re, Me = Y.direction === "rtl" ? re : Q, fe = Y.direction === "rtl" ? Z : q, De = Y.direction === "rtl" ? M.lastButton : M.firstButton, be = Y.direction === "rtl" ? M.nextButton : M.previousButton, Ce = Y.direction === "rtl" ? M.previousButton : M.nextButton, de = Y.direction === "rtl" ? M.firstButton : M.lastButton;
  return /* @__PURE__ */ ht("div", x({
    ref: i
  }, F, {
    children: [A && /* @__PURE__ */ z(Fe, x({
      onClick: H,
      disabled: k || I === 0,
      "aria-label": $("first", I),
      title: $("first", I)
    }, De, {
      children: Y.direction === "rtl" ? /* @__PURE__ */ z(K, x({}, M.lastButtonIcon)) : /* @__PURE__ */ z(ie, x({}, M.firstButtonIcon))
    })), /* @__PURE__ */ z(qe, x({
      onClick: J,
      disabled: k || I === 0,
      color: "inherit",
      "aria-label": $("previous", I),
      title: $("previous", I)
    }, be ?? R, {
      children: Y.direction === "rtl" ? /* @__PURE__ */ z(ne, x({}, M.nextButtonIcon)) : /* @__PURE__ */ z(se, x({}, M.previousButtonIcon))
    })), /* @__PURE__ */ z(Me, x({
      onClick: W,
      disabled: k || (D !== -1 ? I >= Math.ceil(D / _) - 1 : !1),
      color: "inherit",
      "aria-label": $("next", I),
      title: $("next", I)
    }, Ce ?? P, {
      children: Y.direction === "rtl" ? /* @__PURE__ */ z(se, x({}, M.previousButtonIcon)) : /* @__PURE__ */ z(ne, x({}, M.nextButtonIcon))
    })), V && /* @__PURE__ */ z(fe, x({
      onClick: te,
      disabled: k || I >= Math.ceil(D / _) - 1,
      "aria-label": $("last", I),
      title: $("last", I)
    }, de, {
      children: Y.direction === "rtl" ? /* @__PURE__ */ z(ie, x({}, M.firstButtonIcon)) : /* @__PURE__ */ z(K, x({}, M.lastButtonIcon))
    }))]
  }));
});
process.env.NODE_ENV !== "production" && (KI.propTypes = {
  /**
   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.
   */
  backIconButtonProps: t.object,
  /**
   * The total number of rows.
   */
  count: t.number.isRequired,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   *
   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.
   * @param {number} page The page number to format.
   * @returns {string}
   */
  getItemAriaLabel: t.func.isRequired,
  /**
   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.
   */
  nextIconButtonProps: t.object,
  /**
   * Callback fired when the page is changed.
   *
   * @param {object} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onPageChange: t.func.isRequired,
  /**
   * The zero-based index of the current page.
   */
  page: t.number.isRequired,
  /**
   * The number of rows per page.
   */
  rowsPerPage: t.number.isRequired,
  /**
   * If `true`, show the first-page button.
   */
  showFirstButton: t.bool.isRequired,
  /**
   * If `true`, show the last-page button.
   */
  showLastButton: t.bool.isRequired,
  /**
   * The props used for each slot inside the TablePaginationActions.
   * @default {}
   */
  slotProps: t.shape({
    firstButton: t.object,
    firstButtonIcon: t.object,
    lastButton: t.object,
    lastButtonIcon: t.object,
    nextButton: t.object,
    nextButtonIcon: t.object,
    previousButton: t.object,
    previousButtonIcon: t.object
  }),
  /**
   * The components used for each slot inside the TablePaginationActions.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: t.shape({
    firstButton: t.elementType,
    firstButtonIcon: t.elementType,
    lastButton: t.elementType,
    lastButtonIcon: t.elementType,
    nextButton: t.elementType,
    nextButtonIcon: t.elementType,
    previousButton: t.elementType,
    previousButtonIcon: t.elementType
  })
});
const vee = KI;
function gee(e) {
  return We("MuiTablePagination", e);
}
const yee = Ge("MuiTablePagination", ["root", "toolbar", "spacer", "selectLabel", "selectRoot", "select", "selectIcon", "input", "menuItem", "displayedRows", "actions"]), Rv = yee;
var IM;
const bee = ["ActionsComponent", "backIconButtonProps", "className", "colSpan", "component", "count", "disabled", "getItemAriaLabel", "labelDisplayedRows", "labelRowsPerPage", "nextIconButtonProps", "onPageChange", "onRowsPerPageChange", "page", "rowsPerPage", "rowsPerPageOptions", "SelectProps", "showFirstButton", "showLastButton", "slotProps", "slots"], Cee = ee(W1, {
  name: "MuiTablePagination",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})(({
  theme: e
}) => ({
  overflow: "auto",
  color: (e.vars || e).palette.text.primary,
  fontSize: e.typography.pxToRem(14),
  // Increase the specificity to override TableCell.
  "&:last-child": {
    padding: 0
  }
})), xee = ee(mee, {
  name: "MuiTablePagination",
  slot: "Toolbar",
  overridesResolver: (e, o) => x({
    [`& .${Rv.actions}`]: o.actions
  }, o.toolbar)
})(({
  theme: e
}) => ({
  minHeight: 52,
  paddingRight: 2,
  [`${e.breakpoints.up("xs")} and (orientation: landscape)`]: {
    minHeight: 52
  },
  [e.breakpoints.up("sm")]: {
    minHeight: 52,
    paddingRight: 2
  },
  [`& .${Rv.actions}`]: {
    flexShrink: 0,
    marginLeft: 20
  }
})), See = ee("div", {
  name: "MuiTablePagination",
  slot: "Spacer",
  overridesResolver: (e, o) => o.spacer
})({
  flex: "1 1 100%"
}), Tee = ee("p", {
  name: "MuiTablePagination",
  slot: "SelectLabel",
  overridesResolver: (e, o) => o.selectLabel
})(({
  theme: e
}) => x({}, e.typography.body2, {
  flexShrink: 0
})), wee = ee(gI, {
  name: "MuiTablePagination",
  slot: "Select",
  overridesResolver: (e, o) => x({
    [`& .${Rv.selectIcon}`]: o.selectIcon,
    [`& .${Rv.select}`]: o.select
  }, o.input, o.selectRoot)
})({
  color: "inherit",
  fontSize: "inherit",
  flexShrink: 0,
  marginRight: 32,
  marginLeft: 8,
  [`& .${Rv.select}`]: {
    paddingLeft: 8,
    paddingRight: 24,
    textAlign: "right",
    textAlignLast: "right"
    // Align <select> on Chrome.
  }
}), Eee = ee(yK, {
  name: "MuiTablePagination",
  slot: "MenuItem",
  overridesResolver: (e, o) => o.menuItem
})({}), Ree = ee("p", {
  name: "MuiTablePagination",
  slot: "DisplayedRows",
  overridesResolver: (e, o) => o.displayedRows
})(({
  theme: e
}) => x({}, e.typography.body2, {
  flexShrink: 0
}));
function Oee({
  from: e,
  to: o,
  count: i
}) {
  return `${e}–${o} of ${i !== -1 ? i : `more than ${o}`}`;
}
function kee(e) {
  return `Go to ${e} page`;
}
const Dee = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"],
    toolbar: ["toolbar"],
    spacer: ["spacer"],
    selectLabel: ["selectLabel"],
    select: ["select"],
    input: ["input"],
    selectIcon: ["selectIcon"],
    menuItem: ["menuItem"],
    displayedRows: ["displayedRows"],
    actions: ["actions"]
  }, gee, o);
}, QI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c;
  const d = Ue({
    props: o,
    name: "MuiTablePagination"
  }), {
    ActionsComponent: p = vee,
    backIconButtonProps: f,
    className: v,
    colSpan: g,
    component: b = W1,
    count: S,
    disabled: R = !1,
    getItemAriaLabel: D = kee,
    labelDisplayedRows: k = Oee,
    labelRowsPerPage: $ = "Rows per page:",
    nextIconButtonProps: P,
    onPageChange: O,
    onRowsPerPageChange: I,
    page: _,
    rowsPerPage: A,
    rowsPerPageOptions: V = [10, 25, 50, 100],
    SelectProps: B = {},
    showFirstButton: M = !1,
    showLastButton: F = !1,
    slotProps: Y = {},
    slots: H = {}
  } = d, J = ue(d, bee), W = d, te = Dee(W), Z = (c = Y == null ? void 0 : Y.select) != null ? c : B, q = Z.native ? "option" : Eee;
  let Q;
  (b === W1 || b === "td") && (Q = g || 1e3);
  const re = Na(Z.id), ie = Na(Z.labelId), K = () => S === -1 ? (_ + 1) * A : A === -1 ? S : Math.min(S, (_ + 1) * A);
  return /* @__PURE__ */ z(Cee, x({
    colSpan: Q,
    ref: i,
    as: b,
    ownerState: W,
    className: ve(te.root, v)
  }, J, {
    children: /* @__PURE__ */ ht(xee, {
      className: te.toolbar,
      children: [/* @__PURE__ */ z(See, {
        className: te.spacer
      }), V.length > 1 && /* @__PURE__ */ z(Tee, {
        className: te.selectLabel,
        id: ie,
        children: $
      }), V.length > 1 && /* @__PURE__ */ z(wee, x({
        variant: "standard"
      }, !Z.variant && {
        input: IM || (IM = /* @__PURE__ */ z(v0, {}))
      }, {
        value: A,
        onChange: I,
        id: re,
        labelId: ie
      }, Z, {
        classes: x({}, Z.classes, {
          // TODO v5 remove `classes.input`
          root: ve(te.input, te.selectRoot, (Z.classes || {}).root),
          select: ve(te.select, (Z.classes || {}).select),
          // TODO v5 remove `selectIcon`
          icon: ve(te.selectIcon, (Z.classes || {}).icon)
        }),
        disabled: R,
        children: V.map((ne) => /* @__PURE__ */ iN(q, x({}, !Gi(q) && {
          ownerState: W
        }, {
          className: te.menuItem,
          key: ne.label ? ne.label : ne,
          value: ne.value ? ne.value : ne
        }), ne.label ? ne.label : ne))
      })), /* @__PURE__ */ z(Ree, {
        className: te.displayedRows,
        children: k({
          from: S === 0 ? 0 : _ * A + 1,
          to: K(),
          count: S === -1 ? -1 : S,
          page: _
        })
      }), /* @__PURE__ */ z(p, {
        className: te.actions,
        backIconButtonProps: f,
        count: S,
        nextIconButtonProps: P,
        onPageChange: O,
        page: _,
        rowsPerPage: A,
        showFirstButton: M,
        showLastButton: F,
        slotProps: Y.actions,
        slots: H.actions,
        getItemAriaLabel: D,
        disabled: R
      })]
    })
  }));
});
process.env.NODE_ENV !== "production" && (QI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The component used for displaying the actions.
   * Either a string to use a HTML element or a component.
   * @default TablePaginationActions
   */
  ActionsComponent: t.elementType,
  /**
   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) component.
   *
   * This prop is an alias for `slotProps.actions.previousButton` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.actions.previousButton` instead.
   */
  backIconButtonProps: t.object,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * @ignore
   */
  colSpan: t.number,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The total number of rows.
   *
   * To enable server side pagination for an unknown number of items, provide -1.
   */
  count: To.isRequired,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').
   * @returns {string}
   * @default function defaultGetAriaLabel(type) {
   *   return `Go to ${type} page`;
   * }
   */
  getItemAriaLabel: t.func,
  /**
   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`
   * object.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default function defaultLabelDisplayedRows({ from, to, count }) {
   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;
   * }
   */
  labelDisplayedRows: t.func,
  /**
   * Customize the rows per page label.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Rows per page:'
   */
  labelRowsPerPage: t.node,
  /**
   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.
   *
   * This prop is an alias for `slotProps.actions.nextButton` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.actions.nextButton` instead.
   */
  nextIconButtonProps: t.object,
  /**
   * Callback fired when the page is changed.
   *
   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onPageChange: t.func.isRequired,
  /**
   * Callback fired when the number of rows per page is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   */
  onRowsPerPageChange: t.func,
  /**
   * The zero-based index of the current page.
   */
  page: Ko(To.isRequired, (e) => {
    const {
      count: o,
      page: i,
      rowsPerPage: c
    } = e;
    if (o === -1)
      return null;
    const d = Math.max(0, Math.ceil(o / c) - 1);
    return i < 0 || i > d ? new Error(`MUI: The page prop of a TablePagination is out of range (0 to ${d}, but page is ${i}).`) : null;
  }),
  /**
   * The number of rows per page.
   *
   * Set -1 to display all the rows.
   */
  rowsPerPage: To.isRequired,
  /**
   * Customizes the options of the rows per page select field. If less than two options are
   * available, no select field will be displayed.
   * Use -1 for the value with a custom label to show all the rows.
   * @default [10, 25, 50, 100]
   */
  rowsPerPageOptions: t.arrayOf(t.oneOfType([t.number, t.shape({
    label: t.string.isRequired,
    value: t.number.isRequired
  })]).isRequired),
  /**
   * Props applied to the rows per page [`Select`](/material-ui/api/select/) element.
   *
   * This prop is an alias for `slotProps.select` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.select` instead.
   *
   * @default {}
   */
  SelectProps: t.object,
  /**
   * If `true`, show the first-page button.
   * @default false
   */
  showFirstButton: t.bool,
  /**
   * If `true`, show the last-page button.
   * @default false
   */
  showLastButton: t.bool,
  /**
   * The props used for each slot inside the TablePagination.
   * @default {}
   */
  slotProps: t.shape({
    actions: t.shape({
      firstButton: t.object,
      firstButtonIcon: t.object,
      lastButton: t.object,
      lastButtonIcon: t.object,
      nextButton: t.object,
      nextButtonIcon: t.object,
      previousButton: t.object,
      previousButtonIcon: t.object
    }),
    select: t.object
  }),
  /**
   * The components used for each slot inside the TablePagination.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: t.shape({
    actions: t.shape({
      firstButton: t.elementType,
      firstButtonIcon: t.elementType,
      lastButton: t.elementType,
      lastButtonIcon: t.elementType,
      nextButton: t.elementType,
      nextButtonIcon: t.elementType,
      previousButton: t.elementType,
      previousButtonIcon: t.elementType
    })
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const wse = QI;
function Mee(e) {
  return We("MuiTableRow", e);
}
const Nee = Ge("MuiTableRow", ["root", "selected", "hover", "head", "footer"]), LM = Nee, Pee = ["className", "component", "hover", "selected"], $ee = (e) => {
  const {
    classes: o,
    selected: i,
    hover: c,
    head: d,
    footer: p
  } = e;
  return Ye({
    root: ["root", i && "selected", c && "hover", d && "head", p && "footer"]
  }, Mee, o);
}, Iee = ee("tr", {
  name: "MuiTableRow",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.head && o.head, i.footer && o.footer];
  }
})(({
  theme: e
}) => ({
  color: "inherit",
  display: "table-row",
  verticalAlign: "middle",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  [`&.${LM.hover}:hover`]: {
    backgroundColor: (e.vars || e).palette.action.hover
  },
  [`&.${LM.selected}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Wt(e.palette.primary.main, e.palette.action.selectedOpacity),
    "&:hover": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Wt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity)
    }
  }
})), AM = "tr", XI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiTableRow"
  }), {
    className: d,
    component: p = AM,
    hover: f = !1,
    selected: v = !1
  } = c, g = ue(c, Pee), b = w.useContext(Zv), S = x({}, c, {
    component: p,
    hover: f,
    selected: v,
    head: b && b.variant === "head",
    footer: b && b.variant === "footer"
  }), R = $ee(S);
  return /* @__PURE__ */ z(Iee, x({
    as: p,
    ref: i,
    className: ve(R.root, d),
    role: p === AM ? null : "row",
    ownerState: S
  }, g));
});
process.env.NODE_ENV !== "production" && (XI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Should be valid `<tr>` children such as `TableCell`.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the table row will shade on hover.
   * @default false
   */
  hover: t.bool,
  /**
   * If `true`, the table row will have the selected shading.
   * @default false
   */
  selected: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Ese = XI, Lee = Cn(/* @__PURE__ */ z("path", {
  d: "M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
}), "ArrowDownward");
function Aee(e) {
  return We("MuiTableSortLabel", e);
}
const _ee = Ge("MuiTableSortLabel", ["root", "active", "icon", "iconDirectionDesc", "iconDirectionAsc"]), T1 = _ee, Bee = ["active", "children", "className", "direction", "hideSortIcon", "IconComponent"], zee = (e) => {
  const {
    classes: o,
    direction: i,
    active: c
  } = e, d = {
    root: ["root", c && "active"],
    icon: ["icon", `iconDirection${ce(i)}`]
  };
  return Ye(d, Aee, o);
}, Vee = ee(Qo, {
  name: "MuiTableSortLabel",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.active && o.active];
  }
})(({
  theme: e
}) => ({
  cursor: "pointer",
  display: "inline-flex",
  justifyContent: "flex-start",
  flexDirection: "inherit",
  alignItems: "center",
  "&:focus": {
    color: (e.vars || e).palette.text.secondary
  },
  "&:hover": {
    color: (e.vars || e).palette.text.secondary,
    [`& .${T1.icon}`]: {
      opacity: 0.5
    }
  },
  [`&.${T1.active}`]: {
    color: (e.vars || e).palette.text.primary,
    [`& .${T1.icon}`]: {
      opacity: 1,
      color: (e.vars || e).palette.text.secondary
    }
  }
})), Fee = ee("span", {
  name: "MuiTableSortLabel",
  slot: "Icon",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.icon, o[`iconDirection${ce(i.direction)}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => x({
  fontSize: 18,
  marginRight: 4,
  marginLeft: 4,
  opacity: 0,
  transition: e.transitions.create(["opacity", "transform"], {
    duration: e.transitions.duration.shorter
  }),
  userSelect: "none"
}, o.direction === "desc" && {
  transform: "rotate(0deg)"
}, o.direction === "asc" && {
  transform: "rotate(180deg)"
})), ZI = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiTableSortLabel"
  }), {
    active: d = !1,
    children: p,
    className: f,
    direction: v = "asc",
    hideSortIcon: g = !1,
    IconComponent: b = Lee
  } = c, S = ue(c, Bee), R = x({}, c, {
    active: d,
    direction: v,
    hideSortIcon: g,
    IconComponent: b
  }), D = zee(R);
  return /* @__PURE__ */ ht(Vee, x({
    className: ve(D.root, f),
    component: "span",
    disableRipple: !0,
    ownerState: R,
    ref: i
  }, S, {
    children: [p, g && !d ? null : /* @__PURE__ */ z(Fee, {
      as: b,
      className: ve(D.icon),
      ownerState: R
    })]
  }));
});
process.env.NODE_ENV !== "production" && (ZI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the label will have the active styling (should be true for the sorted column).
   * @default false
   */
  active: t.bool,
  /**
   * Label contents, the arrow will be appended automatically.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The current sort direction.
   * @default 'asc'
   */
  direction: t.oneOf(["asc", "desc"]),
  /**
   * Hide sort icon when active is false.
   * @default false
   */
  hideSortIcon: t.bool,
  /**
   * Sort icon to use.
   * @default ArrowDownwardIcon
   */
  IconComponent: t.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Rse = ZI;
function jee(e) {
  return (1 + Math.sin(Math.PI * e - Math.PI / 2)) / 2;
}
function Uee(e, o, i, c = {}, d = () => {
}) {
  const {
    ease: p = jee,
    duration: f = 300
    // standard
  } = c;
  let v = null;
  const g = o[e];
  let b = !1;
  const S = () => {
    b = !0;
  }, R = (D) => {
    if (b) {
      d(new Error("Animation cancelled"));
      return;
    }
    v === null && (v = D);
    const k = Math.min(1, (D - v) / f);
    if (o[e] = p(k) * (i - g) + g, k >= 1) {
      requestAnimationFrame(() => {
        d(null);
      });
      return;
    }
    requestAnimationFrame(R);
  };
  return g === i ? (d(new Error("Element already at target position")), S) : (requestAnimationFrame(R), S);
}
const Hee = ["onChange"], Wee = {
  width: 99,
  height: 99,
  position: "absolute",
  top: -9999,
  overflow: "scroll"
};
function JI(e) {
  const {
    onChange: o
  } = e, i = ue(e, Hee), c = w.useRef(), d = w.useRef(null), p = () => {
    c.current = d.current.offsetHeight - d.current.clientHeight;
  };
  return so(() => {
    const f = $f(() => {
      const g = c.current;
      p(), g !== c.current && o(c.current);
    }), v = Wr(d.current);
    return v.addEventListener("resize", f), () => {
      f.clear(), v.removeEventListener("resize", f);
    };
  }, [o]), w.useEffect(() => {
    p(), o(c.current);
  }, [o]), /* @__PURE__ */ z("div", x({
    style: Wee,
    ref: d
  }, i));
}
process.env.NODE_ENV !== "production" && (JI.propTypes = {
  onChange: t.func.isRequired
});
function Yee(e) {
  return We("MuiTabScrollButton", e);
}
const Gee = Ge("MuiTabScrollButton", ["root", "vertical", "horizontal", "disabled"]), qee = Gee, Kee = ["className", "slots", "slotProps", "direction", "orientation", "disabled"], Qee = (e) => {
  const {
    classes: o,
    orientation: i,
    disabled: c
  } = e;
  return Ye({
    root: ["root", i, c && "disabled"]
  }, Yee, o);
}, Xee = ee(Qo, {
  name: "MuiTabScrollButton",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, i.orientation && o[i.orientation]];
  }
})(({
  ownerState: e
}) => x({
  width: 40,
  flexShrink: 0,
  opacity: 0.8,
  [`&.${qee.disabled}`]: {
    opacity: 0
  }
}, e.orientation === "vertical" && {
  width: "100%",
  height: 40,
  "& svg": {
    transform: `rotate(${e.isRtl ? -90 : 90}deg)`
  }
})), eL = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d;
  const p = Ue({
    props: o,
    name: "MuiTabScrollButton"
  }), {
    className: f,
    slots: v = {},
    slotProps: g = {},
    direction: b
  } = p, S = ue(p, Kee), D = Mn().direction === "rtl", k = x({
    isRtl: D
  }, p), $ = Qee(k), P = (c = v.StartScrollButtonIcon) != null ? c : GI, O = (d = v.EndScrollButtonIcon) != null ? d : qI, I = ln({
    elementType: P,
    externalSlotProps: g.startScrollButtonIcon,
    additionalProps: {
      fontSize: "small"
    },
    ownerState: k
  }), _ = ln({
    elementType: O,
    externalSlotProps: g.endScrollButtonIcon,
    additionalProps: {
      fontSize: "small"
    },
    ownerState: k
  });
  return /* @__PURE__ */ z(Xee, x({
    component: "div",
    className: ve($.root, f),
    ref: i,
    role: null,
    ownerState: k,
    tabIndex: null
  }, S, {
    children: b === "left" ? /* @__PURE__ */ z(P, x({}, I)) : /* @__PURE__ */ z(O, x({}, _))
  }));
});
process.env.NODE_ENV !== "production" && (eL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The direction the button should indicate.
   */
  direction: t.oneOf(["left", "right"]).isRequired,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * The component orientation (layout flow direction).
   */
  orientation: t.oneOf(["horizontal", "vertical"]).isRequired,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   * @default {}
   */
  slotProps: t.shape({
    endScrollButtonIcon: t.oneOfType([t.func, t.object]),
    startScrollButtonIcon: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: t.shape({
    EndScrollButtonIcon: t.elementType,
    StartScrollButtonIcon: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Zee = eL;
function Jee(e) {
  return We("MuiTabs", e);
}
const ete = Ge("MuiTabs", ["root", "vertical", "flexContainer", "flexContainerVertical", "centered", "scroller", "fixed", "scrollableX", "scrollableY", "hideScrollbar", "scrollButtons", "scrollButtonsHideMobile", "indicator"]), w1 = ete, tte = ["aria-label", "aria-labelledby", "action", "centered", "children", "className", "component", "allowScrollButtonsMobile", "indicatorColor", "onChange", "orientation", "ScrollButtonComponent", "scrollButtons", "selectionFollowsFocus", "slots", "slotProps", "TabIndicatorProps", "TabScrollButtonProps", "textColor", "value", "variant", "visibleScrollbar"], _M = (e, o) => e === o ? e.firstChild : o && o.nextElementSibling ? o.nextElementSibling : e.firstChild, BM = (e, o) => e === o ? e.lastChild : o && o.previousElementSibling ? o.previousElementSibling : e.lastChild, xC = (e, o, i) => {
  let c = !1, d = i(e, o);
  for (; d; ) {
    if (d === e.firstChild) {
      if (c)
        return;
      c = !0;
    }
    const p = d.disabled || d.getAttribute("aria-disabled") === "true";
    if (!d.hasAttribute("tabindex") || p)
      d = i(e, d);
    else {
      d.focus();
      return;
    }
  }
}, nte = (e) => {
  const {
    vertical: o,
    fixed: i,
    hideScrollbar: c,
    scrollableX: d,
    scrollableY: p,
    centered: f,
    scrollButtonsHideMobile: v,
    classes: g
  } = e;
  return Ye({
    root: ["root", o && "vertical"],
    scroller: ["scroller", i && "fixed", c && "hideScrollbar", d && "scrollableX", p && "scrollableY"],
    flexContainer: ["flexContainer", o && "flexContainerVertical", f && "centered"],
    indicator: ["indicator"],
    scrollButtons: ["scrollButtons", v && "scrollButtonsHideMobile"],
    scrollableX: [d && "scrollableX"],
    hideScrollbar: [c && "hideScrollbar"]
  }, Jee, g);
}, ote = ee("div", {
  name: "MuiTabs",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [{
      [`& .${w1.scrollButtons}`]: o.scrollButtons
    }, {
      [`& .${w1.scrollButtons}`]: i.scrollButtonsHideMobile && o.scrollButtonsHideMobile
    }, o.root, i.vertical && o.vertical];
  }
})(({
  ownerState: e,
  theme: o
}) => x({
  overflow: "hidden",
  minHeight: 48,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  display: "flex"
}, e.vertical && {
  flexDirection: "column"
}, e.scrollButtonsHideMobile && {
  [`& .${w1.scrollButtons}`]: {
    [o.breakpoints.down("sm")]: {
      display: "none"
    }
  }
})), rte = ee("div", {
  name: "MuiTabs",
  slot: "Scroller",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.scroller, i.fixed && o.fixed, i.hideScrollbar && o.hideScrollbar, i.scrollableX && o.scrollableX, i.scrollableY && o.scrollableY];
  }
})(({
  ownerState: e
}) => x({
  position: "relative",
  display: "inline-block",
  flex: "1 1 auto",
  whiteSpace: "nowrap"
}, e.fixed && {
  overflowX: "hidden",
  width: "100%"
}, e.hideScrollbar && {
  // Hide dimensionless scrollbar on macOS
  scrollbarWidth: "none",
  // Firefox
  "&::-webkit-scrollbar": {
    display: "none"
    // Safari + Chrome
  }
}, e.scrollableX && {
  overflowX: "auto",
  overflowY: "hidden"
}, e.scrollableY && {
  overflowY: "auto",
  overflowX: "hidden"
})), ate = ee("div", {
  name: "MuiTabs",
  slot: "FlexContainer",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.flexContainer, i.vertical && o.flexContainerVertical, i.centered && o.centered];
  }
})(({
  ownerState: e
}) => x({
  display: "flex"
}, e.vertical && {
  flexDirection: "column"
}, e.centered && {
  justifyContent: "center"
})), ite = ee("span", {
  name: "MuiTabs",
  slot: "Indicator",
  overridesResolver: (e, o) => o.indicator
})(({
  ownerState: e,
  theme: o
}) => x({
  position: "absolute",
  height: 2,
  bottom: 0,
  width: "100%",
  transition: o.transitions.create()
}, e.indicatorColor === "primary" && {
  backgroundColor: (o.vars || o).palette.primary.main
}, e.indicatorColor === "secondary" && {
  backgroundColor: (o.vars || o).palette.secondary.main
}, e.vertical && {
  height: "100%",
  width: 2,
  right: 0
})), ste = ee(JI)({
  overflowX: "auto",
  overflowY: "hidden",
  // Hide dimensionless scrollbar on macOS
  scrollbarWidth: "none",
  // Firefox
  "&::-webkit-scrollbar": {
    display: "none"
    // Safari + Chrome
  }
}), zM = {};
let VM = !1;
const tL = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiTabs"
  }), d = Mn(), p = d.direction === "rtl", {
    "aria-label": f,
    "aria-labelledby": v,
    action: g,
    centered: b = !1,
    children: S,
    className: R,
    component: D = "div",
    allowScrollButtonsMobile: k = !1,
    indicatorColor: $ = "primary",
    onChange: P,
    orientation: O = "horizontal",
    ScrollButtonComponent: I = Zee,
    scrollButtons: _ = "auto",
    selectionFollowsFocus: A,
    slots: V = {},
    slotProps: B = {},
    TabIndicatorProps: M = {},
    TabScrollButtonProps: F = {},
    textColor: Y = "primary",
    value: H,
    variant: J = "standard",
    visibleScrollbar: W = !1
  } = c, te = ue(c, tte), Z = J === "scrollable", q = O === "vertical", Q = q ? "scrollTop" : "scrollLeft", re = q ? "top" : "left", ie = q ? "bottom" : "right", K = q ? "clientHeight" : "clientWidth", ne = q ? "height" : "width", se = x({}, c, {
    component: D,
    allowScrollButtonsMobile: k,
    indicatorColor: $,
    orientation: O,
    vertical: q,
    scrollButtons: _,
    textColor: Y,
    variant: J,
    visibleScrollbar: W,
    fixed: !Z,
    hideScrollbar: Z && !W,
    scrollableX: Z && !q,
    scrollableY: Z && q,
    centered: b && !Z,
    scrollButtonsHideMobile: !k
  }), Fe = nte(se), qe = ln({
    elementType: V.StartScrollButtonIcon,
    externalSlotProps: B.startScrollButtonIcon,
    ownerState: se
  }), Me = ln({
    elementType: V.EndScrollButtonIcon,
    externalSlotProps: B.endScrollButtonIcon,
    ownerState: se
  });
  process.env.NODE_ENV !== "production" && b && Z && console.error('MUI: You can not use the `centered={true}` and `variant="scrollable"` properties at the same time on a `Tabs` component.');
  const [fe, De] = w.useState(!1), [be, Ce] = w.useState(zM), [de, Ae] = w.useState(!1), [at, Oe] = w.useState(!1), [_e, ye] = w.useState(!1), [ae, $e] = w.useState({
    overflow: "hidden",
    scrollbarWidth: 0
  }), Se = /* @__PURE__ */ new Map(), mt = w.useRef(null), Be = w.useRef(null), ft = () => {
    const Le = mt.current;
    let et;
    if (Le) {
      const Dt = Le.getBoundingClientRect();
      et = {
        clientWidth: Le.clientWidth,
        scrollLeft: Le.scrollLeft,
        scrollTop: Le.scrollTop,
        scrollLeftNormalized: mj(Le, d.direction),
        scrollWidth: Le.scrollWidth,
        top: Dt.top,
        bottom: Dt.bottom,
        left: Dt.left,
        right: Dt.right
      };
    }
    let pt;
    if (Le && H !== !1) {
      const Dt = Be.current.children;
      if (Dt.length > 0) {
        const Nt = Dt[Se.get(H)];
        process.env.NODE_ENV !== "production" && (Nt || console.error(["MUI: The `value` provided to the Tabs component is invalid.", `None of the Tabs' children match with "${H}".`, Se.keys ? `You can provide one of the following values: ${Array.from(Se.keys()).join(", ")}.` : null].join(`
`))), pt = Nt ? Nt.getBoundingClientRect() : null, process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "test" && !VM && pt && pt.width === 0 && pt.height === 0 && // if the whole Tabs component is hidden, don't warn
        et.clientWidth !== 0 && (et = null, console.error(["MUI: The `value` provided to the Tabs component is invalid.", `The Tab with this \`value\` ("${H}") is not part of the document layout.`, "Make sure the tab item is present in the document or that it's not `display: none`."].join(`
`)), VM = !0);
      }
    }
    return {
      tabsMeta: et,
      tabMeta: pt
    };
  }, je = St(() => {
    const {
      tabsMeta: Le,
      tabMeta: et
    } = ft();
    let pt = 0, Dt;
    if (q)
      Dt = "top", et && Le && (pt = et.top - Le.top + Le.scrollTop);
    else if (Dt = p ? "right" : "left", et && Le) {
      const Jt = p ? Le.scrollLeftNormalized + Le.clientWidth - Le.scrollWidth : Le.scrollLeft;
      pt = (p ? -1 : 1) * (et[Dt] - Le[Dt] + Jt);
    }
    const Nt = {
      [Dt]: pt,
      // May be wrong until the font is loaded.
      [ne]: et ? et[ne] : 0
    };
    if (isNaN(be[Dt]) || isNaN(be[ne]))
      Ce(Nt);
    else {
      const Jt = Math.abs(be[Dt] - Nt[Dt]), Yt = Math.abs(be[ne] - Nt[ne]);
      (Jt >= 1 || Yt >= 1) && Ce(Nt);
    }
  }), Ve = (Le, {
    animation: et = !0
  } = {}) => {
    et ? Uee(Q, mt.current, Le, {
      duration: d.transitions.duration.standard
    }) : mt.current[Q] = Le;
  }, st = (Le) => {
    let et = mt.current[Q];
    q ? et += Le : (et += Le * (p ? -1 : 1), et *= p && gN() === "reverse" ? -1 : 1), Ve(et);
  }, gt = () => {
    const Le = mt.current[K];
    let et = 0;
    const pt = Array.from(Be.current.children);
    for (let Dt = 0; Dt < pt.length; Dt += 1) {
      const Nt = pt[Dt];
      if (et + Nt[K] > Le) {
        Dt === 0 && (et = Le);
        break;
      }
      et += Nt[K];
    }
    return et;
  }, Tt = () => {
    st(-1 * gt());
  }, _t = () => {
    st(gt());
  }, Zt = w.useCallback((Le) => {
    $e({
      overflow: null,
      scrollbarWidth: Le
    });
  }, []), Vt = () => {
    const Le = {};
    Le.scrollbarSizeListener = Z ? /* @__PURE__ */ z(ste, {
      onChange: Zt,
      className: ve(Fe.scrollableX, Fe.hideScrollbar)
    }) : null;
    const pt = Z && (_ === "auto" && (de || at) || _ === !0);
    return Le.scrollButtonStart = pt ? /* @__PURE__ */ z(I, x({
      slots: {
        StartScrollButtonIcon: V.StartScrollButtonIcon
      },
      slotProps: {
        startScrollButtonIcon: qe
      },
      orientation: O,
      direction: p ? "right" : "left",
      onClick: Tt,
      disabled: !de
    }, F, {
      className: ve(Fe.scrollButtons, F.className)
    })) : null, Le.scrollButtonEnd = pt ? /* @__PURE__ */ z(I, x({
      slots: {
        EndScrollButtonIcon: V.EndScrollButtonIcon
      },
      slotProps: {
        endScrollButtonIcon: Me
      },
      orientation: O,
      direction: p ? "left" : "right",
      onClick: _t,
      disabled: !at
    }, F, {
      className: ve(Fe.scrollButtons, F.className)
    })) : null, Le;
  }, Te = St((Le) => {
    const {
      tabsMeta: et,
      tabMeta: pt
    } = ft();
    if (!(!pt || !et)) {
      if (pt[re] < et[re]) {
        const Dt = et[Q] + (pt[re] - et[re]);
        Ve(Dt, {
          animation: Le
        });
      } else if (pt[ie] > et[ie]) {
        const Dt = et[Q] + (pt[ie] - et[ie]);
        Ve(Dt, {
          animation: Le
        });
      }
    }
  }), xe = St(() => {
    Z && _ !== !1 && ye(!_e);
  });
  w.useEffect(() => {
    const Le = $f(() => {
      mt.current && je();
    });
    let et;
    const pt = (Jt) => {
      Jt.forEach((Yt) => {
        Yt.removedNodes.forEach((en) => {
          var Nn;
          (Nn = et) == null || Nn.unobserve(en);
        }), Yt.addedNodes.forEach((en) => {
          var Nn;
          (Nn = et) == null || Nn.observe(en);
        });
      }), Le(), xe();
    }, Dt = Wr(mt.current);
    Dt.addEventListener("resize", Le);
    let Nt;
    return typeof ResizeObserver < "u" && (et = new ResizeObserver(Le), Array.from(Be.current.children).forEach((Jt) => {
      et.observe(Jt);
    })), typeof MutationObserver < "u" && (Nt = new MutationObserver(pt), Nt.observe(Be.current, {
      childList: !0
    })), () => {
      var Jt, Yt;
      Le.clear(), Dt.removeEventListener("resize", Le), (Jt = Nt) == null || Jt.disconnect(), (Yt = et) == null || Yt.disconnect();
    };
  }, [je, xe]), w.useEffect(() => {
    const Le = Array.from(Be.current.children), et = Le.length;
    if (typeof IntersectionObserver < "u" && et > 0 && Z && _ !== !1) {
      const pt = Le[0], Dt = Le[et - 1], Nt = {
        root: mt.current,
        threshold: 0.99
      }, Jt = (nn) => {
        Ae(!nn[0].isIntersecting);
      }, Yt = new IntersectionObserver(Jt, Nt);
      Yt.observe(pt);
      const en = (nn) => {
        Oe(!nn[0].isIntersecting);
      }, Nn = new IntersectionObserver(en, Nt);
      return Nn.observe(Dt), () => {
        Yt.disconnect(), Nn.disconnect();
      };
    }
  }, [Z, _, _e, S == null ? void 0 : S.length]), w.useEffect(() => {
    De(!0);
  }, []), w.useEffect(() => {
    je();
  }), w.useEffect(() => {
    Te(zM !== be);
  }, [Te, be]), w.useImperativeHandle(g, () => ({
    updateIndicator: je,
    updateScrollButtons: xe
  }), [je, xe]);
  const ot = /* @__PURE__ */ z(ite, x({}, M, {
    className: ve(Fe.indicator, M.className),
    ownerState: se,
    style: x({}, be, M.style)
  }));
  let He = 0;
  const it = w.Children.map(S, (Le) => {
    if (!/* @__PURE__ */ w.isValidElement(Le))
      return null;
    process.env.NODE_ENV !== "production" && Xi.isFragment(Le) && console.error(["MUI: The Tabs component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    const et = Le.props.value === void 0 ? He : Le.props.value;
    Se.set(et, He);
    const pt = et === H;
    return He += 1, /* @__PURE__ */ w.cloneElement(Le, x({
      fullWidth: J === "fullWidth",
      indicator: pt && !fe && ot,
      selected: pt,
      selectionFollowsFocus: A,
      onChange: P,
      textColor: Y,
      value: et
    }, He === 1 && H === !1 && !Le.props.tabIndex ? {
      tabIndex: 0
    } : {}));
  }), Ze = (Le) => {
    const et = Be.current, pt = Dn(et).activeElement;
    if (pt.getAttribute("role") !== "tab")
      return;
    let Nt = O === "horizontal" ? "ArrowLeft" : "ArrowUp", Jt = O === "horizontal" ? "ArrowRight" : "ArrowDown";
    switch (O === "horizontal" && p && (Nt = "ArrowRight", Jt = "ArrowLeft"), Le.key) {
      case Nt:
        Le.preventDefault(), xC(et, pt, BM);
        break;
      case Jt:
        Le.preventDefault(), xC(et, pt, _M);
        break;
      case "Home":
        Le.preventDefault(), xC(et, null, _M);
        break;
      case "End":
        Le.preventDefault(), xC(et, null, BM);
        break;
    }
  }, nt = Vt();
  return /* @__PURE__ */ ht(ote, x({
    className: ve(Fe.root, R),
    ownerState: se,
    ref: i,
    as: D
  }, te, {
    children: [nt.scrollButtonStart, nt.scrollbarSizeListener, /* @__PURE__ */ ht(rte, {
      className: Fe.scroller,
      ownerState: se,
      style: {
        overflow: ae.overflow,
        [q ? `margin${p ? "Left" : "Right"}` : "marginBottom"]: W ? void 0 : -ae.scrollbarWidth
      },
      ref: mt,
      children: [/* @__PURE__ */ z(ate, {
        "aria-label": f,
        "aria-labelledby": v,
        "aria-orientation": O === "vertical" ? "vertical" : null,
        className: Fe.flexContainer,
        ownerState: se,
        onKeyDown: Ze,
        ref: Be,
        role: "tablist",
        children: it
      }), fe && ot]
    }), nt.scrollButtonEnd]
  }));
});
process.env.NODE_ENV !== "production" && (tL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Callback fired when the component mounts.
   * This is useful when you want to trigger an action programmatically.
   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`
   *
   * @param {object} actions This object contains all possible actions
   * that can be triggered programmatically.
   */
  action: Lo,
  /**
   * If `true`, the scroll buttons aren't forced hidden on mobile.
   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.
   * @default false
   */
  allowScrollButtonsMobile: t.bool,
  /**
   * The label for the Tabs as a string.
   */
  "aria-label": t.string,
  /**
   * An id or list of ids separated by a space that label the Tabs.
   */
  "aria-labelledby": t.string,
  /**
   * If `true`, the tabs are centered.
   * This prop is intended for large views.
   * @default false
   */
  centered: t.bool,
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Determines the color of the indicator.
   * @default 'primary'
   */
  indicatorColor: t.oneOfType([t.oneOf(["primary", "secondary"]), t.string]),
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {any} value We default to the index of the child (number)
   */
  onChange: t.func,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: t.oneOf(["horizontal", "vertical"]),
  /**
   * The component used to render the scroll buttons.
   * @default TabScrollButton
   */
  ScrollButtonComponent: t.elementType,
  /**
   * Determine behavior of scroll buttons when tabs are set to scroll:
   *
   * - `auto` will only present them when not all the items are visible.
   * - `true` will always present them.
   * - `false` will never present them.
   *
   * By default the scroll buttons are hidden on mobile.
   * This behavior can be disabled with `allowScrollButtonsMobile`.
   * @default 'auto'
   */
  scrollButtons: t.oneOf(["auto", !1, !0]),
  /**
   * If `true` the selected tab changes on focus. Otherwise it only
   * changes on activation.
   */
  selectionFollowsFocus: t.bool,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   * @default {}
   */
  slotProps: t.shape({
    endScrollButtonIcon: t.oneOfType([t.func, t.object]),
    startScrollButtonIcon: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: t.shape({
    EndScrollButtonIcon: t.elementType,
    StartScrollButtonIcon: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Props applied to the tab indicator element.
   * @default  {}
   */
  TabIndicatorProps: t.object,
  /**
   * Props applied to the [`TabScrollButton`](/material-ui/api/tab-scroll-button/) element.
   * @default {}
   */
  TabScrollButtonProps: t.object,
  /**
   * Determines the color of the `Tab`.
   * @default 'primary'
   */
  textColor: t.oneOf(["inherit", "primary", "secondary"]),
  /**
   * The value of the currently selected `Tab`.
   * If you don't want any selected `Tab`, you can set this prop to `false`.
   */
  value: t.any,
  /**
   * Determines additional display behavior of the tabs:
   *
   *  - `scrollable` will invoke scrolling properties and allow for horizontally
   *  scrolling (or swiping) of the tab bar.
   *  - `fullWidth` will make the tabs grow to use all the available space,
   *  which should be used for small views, like on mobile.
   *  - `standard` will render the default state.
   * @default 'standard'
   */
  variant: t.oneOf(["fullWidth", "scrollable", "standard"]),
  /**
   * If `true`, the scrollbar is visible. It can be useful when displaying
   * a long vertical list of tabs.
   * @default false
   */
  visibleScrollbar: t.bool
});
const Ose = tL;
function lte(e) {
  return We("MuiTextField", e);
}
const cte = Ge("MuiTextField", ["root"]), kse = cte, ute = ["autoComplete", "autoFocus", "children", "className", "color", "defaultValue", "disabled", "error", "FormHelperTextProps", "fullWidth", "helperText", "id", "InputLabelProps", "inputProps", "InputProps", "inputRef", "label", "maxRows", "minRows", "multiline", "name", "onBlur", "onChange", "onFocus", "placeholder", "required", "rows", "select", "SelectProps", "type", "value", "variant"], dte = {
  standard: $w,
  filled: h$,
  outlined: rI
}, pte = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"]
  }, lte, o);
}, fte = ee(W7, {
  name: "MuiTextField",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({}), nL = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiTextField"
  }), {
    autoComplete: d,
    autoFocus: p = !1,
    children: f,
    className: v,
    color: g = "primary",
    defaultValue: b,
    disabled: S = !1,
    error: R = !1,
    FormHelperTextProps: D,
    fullWidth: k = !1,
    helperText: $,
    id: P,
    InputLabelProps: O,
    inputProps: I,
    InputProps: _,
    inputRef: A,
    label: V,
    maxRows: B,
    minRows: M,
    multiline: F = !1,
    name: Y,
    onBlur: H,
    onChange: J,
    onFocus: W,
    placeholder: te,
    required: Z = !1,
    rows: q,
    select: Q = !1,
    SelectProps: re,
    type: ie,
    value: K,
    variant: ne = "outlined"
  } = c, se = ue(c, ute), Fe = x({}, c, {
    autoFocus: p,
    color: g,
    disabled: S,
    error: R,
    fullWidth: k,
    multiline: F,
    required: Z,
    select: Q,
    variant: ne
  }), qe = pte(Fe);
  process.env.NODE_ENV !== "production" && Q && !f && console.error("MUI: `children` must be passed when using the `TextField` component with `select`.");
  const Me = {};
  ne === "outlined" && (O && typeof O.shrink < "u" && (Me.notched = O.shrink), Me.label = V), Q && ((!re || !re.native) && (Me.id = void 0), Me["aria-describedby"] = void 0);
  const fe = Na(P), De = $ && fe ? `${fe}-helper-text` : void 0, be = V && fe ? `${fe}-label` : void 0, Ce = dte[ne], de = /* @__PURE__ */ z(Ce, x({
    "aria-describedby": De,
    autoComplete: d,
    autoFocus: p,
    defaultValue: b,
    fullWidth: k,
    multiline: F,
    name: Y,
    rows: q,
    maxRows: B,
    minRows: M,
    type: ie,
    value: K,
    id: fe,
    inputRef: A,
    onBlur: H,
    onChange: J,
    onFocus: W,
    placeholder: te,
    inputProps: I
  }, Me, _));
  return /* @__PURE__ */ ht(fte, x({
    className: ve(qe.root, v),
    disabled: S,
    error: R,
    fullWidth: k,
    ref: i,
    required: Z,
    color: g,
    variant: ne,
    ownerState: Fe
  }, se, {
    children: [V != null && V !== "" && /* @__PURE__ */ z(AG, x({
      htmlFor: fe,
      id: be
    }, O, {
      children: V
    })), Q ? /* @__PURE__ */ z(gI, x({
      "aria-describedby": De,
      id: fe,
      labelId: be,
      value: K,
      input: de
    }, re, {
      children: f
    })) : de, $ && /* @__PURE__ */ z(dY, x({
      id: De
    }, D, {
      children: $
    }))]
  }));
});
process.env.NODE_ENV !== "production" && (nL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: t.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: t.bool,
  /**
   * @ignore
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: t.bool,
  /**
   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.
   */
  FormHelperTextProps: t.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * The helper text content.
   */
  helperText: t.node,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: t.string,
  /**
   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   */
  InputLabelProps: t.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: t.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](/material-ui/api/filled-input/),
   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)
   * component depending on the `variant` prop value.
   */
  InputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Lo,
  /**
   * The label content.
   */
  label: t.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: t.oneOf(["dense", "none", "normal"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: t.oneOfType([t.number, t.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: t.oneOfType([t.number, t.string]),
  /**
   * If `true`, a `textarea` element is rendered instead of an input.
   * @default false
   */
  multiline: t.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: t.string,
  /**
   * @ignore
   */
  onBlur: t.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: t.func,
  /**
   * @ignore
   */
  onFocus: t.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: t.string,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: t.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: t.oneOfType([t.number, t.string]),
  /**
   * Render a [`Select`](/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.
   * If this option is set you must pass the options of the select as children.
   * @default false
   */
  select: t.bool,
  /**
   * Props applied to the [`Select`](/material-ui/api/select/) element.
   */
  SelectProps: t.object,
  /**
   * The size of the component.
   */
  size: t.oneOfType([t.oneOf(["medium", "small"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */
  type: t.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: t.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: t.oneOf(["filled", "outlined", "standard"])
});
const mte = nL;
function hte(e) {
  return We("MuiToggleButton", e);
}
const vte = Ge("MuiToggleButton", ["root", "disabled", "selected", "standard", "primary", "secondary", "sizeSmall", "sizeMedium", "sizeLarge", "fullWidth"]), Sf = vte, oL = /* @__PURE__ */ w.createContext({});
process.env.NODE_ENV !== "production" && (oL.displayName = "ToggleButtonGroupContext");
const rL = oL, aL = /* @__PURE__ */ w.createContext(void 0);
process.env.NODE_ENV !== "production" && (aL.displayName = "ToggleButtonGroupButtonContext");
const iL = aL;
function gte(e, o) {
  return o === void 0 || e === void 0 ? !1 : Array.isArray(o) ? o.indexOf(e) >= 0 : e === o;
}
const yte = ["value"], bte = ["children", "className", "color", "disabled", "disableFocusRipple", "fullWidth", "onChange", "onClick", "selected", "size", "value"], Cte = (e) => {
  const {
    classes: o,
    fullWidth: i,
    selected: c,
    disabled: d,
    size: p,
    color: f
  } = e, v = {
    root: ["root", c && "selected", d && "disabled", i && "fullWidth", `size${ce(p)}`, f]
  };
  return Ye(v, hte, o);
}, xte = ee(Qo, {
  name: "MuiToggleButton",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [o.root, o[`size${ce(i.size)}`]];
  }
})(({
  theme: e,
  ownerState: o
}) => {
  let i = o.color === "standard" ? e.palette.text.primary : e.palette[o.color].main, c;
  return e.vars && (i = o.color === "standard" ? e.vars.palette.text.primary : e.vars.palette[o.color].main, c = o.color === "standard" ? e.vars.palette.text.primaryChannel : e.vars.palette[o.color].mainChannel), x({}, e.typography.button, {
    borderRadius: (e.vars || e).shape.borderRadius,
    padding: 11,
    border: `1px solid ${(e.vars || e).palette.divider}`,
    color: (e.vars || e).palette.action.active
  }, o.fullWidth && {
    width: "100%"
  }, {
    [`&.${Sf.disabled}`]: {
      color: (e.vars || e).palette.action.disabled,
      border: `1px solid ${(e.vars || e).palette.action.disabledBackground}`
    },
    "&:hover": {
      textDecoration: "none",
      // Reset on mouse devices
      backgroundColor: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : di(e.palette.text.primary, e.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    [`&.${Sf.selected}`]: {
      color: i,
      backgroundColor: e.vars ? `rgba(${c} / ${e.vars.palette.action.selectedOpacity})` : di(i, e.palette.action.selectedOpacity),
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${c} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : di(i, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: e.vars ? `rgba(${c} / ${e.vars.palette.action.selectedOpacity})` : di(i, e.palette.action.selectedOpacity)
        }
      }
    }
  }, o.size === "small" && {
    padding: 7,
    fontSize: e.typography.pxToRem(13)
  }, o.size === "large" && {
    padding: 15,
    fontSize: e.typography.pxToRem(15)
  });
}), sL = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = w.useContext(rL), {
    value: d
  } = c, p = ue(c, yte), f = w.useContext(iL), v = n0(x({}, p, {
    selected: gte(o.value, d)
  }), o), g = Ue({
    props: v,
    name: "MuiToggleButton"
  }), {
    children: b,
    className: S,
    color: R = "standard",
    disabled: D = !1,
    disableFocusRipple: k = !1,
    fullWidth: $ = !1,
    onChange: P,
    onClick: O,
    selected: I,
    size: _ = "medium",
    value: A
  } = g, V = ue(g, bte), B = x({}, g, {
    color: R,
    disabled: D,
    disableFocusRipple: k,
    fullWidth: $,
    size: _
  }), M = Cte(B), F = (H) => {
    O && (O(H, A), H.defaultPrevented) || P && P(H, A);
  }, Y = f || "";
  return /* @__PURE__ */ z(xte, x({
    className: ve(p.className, M.root, S, Y),
    disabled: D,
    focusRipple: !k,
    ref: i,
    onClick: F,
    onChange: P,
    value: A,
    ownerState: B,
    "aria-pressed": I
  }, V, {
    children: b
  }));
});
process.env.NODE_ENV !== "production" && (sL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the button when it is in an active state.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'standard'
   */
  color: t.oneOfType([t.oneOf(["standard", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: t.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: t.bool,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * Callback fired when the state changes.
   *
   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.
   * @param {any} value of the selected button.
   */
  onChange: t.func,
  /**
   * Callback fired when the button is clicked.
   *
   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.
   * @param {any} value of the selected button.
   */
  onClick: t.func,
  /**
   * If `true`, the button is rendered in an active state.
   */
  selected: t.bool,
  /**
   * The size of the component.
   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["small", "medium", "large"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The value to associate with the button when selected in a
   * ToggleButtonGroup.
   */
  value: t.any.isRequired
});
const Dse = sL;
function Ste(e) {
  return We("MuiToggleButtonGroup", e);
}
const Tte = Ge("MuiToggleButtonGroup", ["root", "selected", "vertical", "disabled", "grouped", "groupedHorizontal", "groupedVertical", "fullWidth", "firstButton", "lastButton", "middleButton"]), fo = Tte, wte = ["children", "className", "color", "disabled", "exclusive", "fullWidth", "onChange", "orientation", "size", "value"], Ete = (e) => {
  const {
    classes: o,
    orientation: i,
    fullWidth: c,
    disabled: d
  } = e, p = {
    root: ["root", i === "vertical" && "vertical", c && "fullWidth"],
    grouped: ["grouped", `grouped${ce(i)}`, d && "disabled"],
    firstButton: ["firstButton"],
    lastButton: ["lastButton"],
    middleButton: ["middleButton"]
  };
  return Ye(p, Ste, o);
}, Rte = ee("div", {
  name: "MuiToggleButtonGroup",
  slot: "Root",
  overridesResolver: (e, o) => {
    const {
      ownerState: i
    } = e;
    return [{
      [`& .${fo.grouped}`]: o.grouped
    }, {
      [`& .${fo.grouped}`]: o[`grouped${ce(i.orientation)}`]
    }, {
      [`& .${fo.firstButton}`]: o.firstButton
    }, {
      [`& .${fo.lastButton}`]: o.lastButton
    }, {
      [`& .${fo.middleButton}`]: o.middleButton
    }, o.root, i.orientation === "vertical" && o.vertical, i.fullWidth && o.fullWidth];
  }
})(({
  ownerState: e,
  theme: o
}) => x({
  display: "inline-flex",
  borderRadius: (o.vars || o).shape.borderRadius
}, e.orientation === "vertical" && {
  flexDirection: "column"
}, e.fullWidth && {
  width: "100%"
}, {
  [`& .${fo.grouped}`]: x({}, e.orientation === "horizontal" ? {
    [`&.${fo.selected} + .${fo.grouped}.${fo.selected}`]: {
      borderLeft: 0,
      marginLeft: 0
    }
  } : {
    [`&.${fo.selected} + .${fo.grouped}.${fo.selected}`]: {
      borderTop: 0,
      marginTop: 0
    }
  })
}, e.orientation === "horizontal" ? {
  [`& .${fo.firstButton},& .${fo.middleButton}`]: {
    borderTopRightRadius: 0,
    borderBottomRightRadius: 0
  },
  [`& .${fo.lastButton},& .${fo.middleButton}`]: {
    marginLeft: -1,
    borderLeft: "1px solid transparent",
    borderTopLeftRadius: 0,
    borderBottomLeftRadius: 0
  }
} : {
  [`& .${fo.firstButton},& .${fo.middleButton}`]: {
    borderBottomLeftRadius: 0,
    borderBottomRightRadius: 0
  },
  [`& .${fo.lastButton},& .${fo.middleButton}`]: {
    marginTop: -1,
    borderTop: "1px solid transparent",
    borderTopLeftRadius: 0,
    borderTopRightRadius: 0
  }
}, e.orientation === "horizontal" ? {
  [`& .${fo.lastButton}.${Sf.disabled},& .${fo.middleButton}.${Sf.disabled}`]: {
    borderLeft: "1px solid transparent"
  }
} : {
  [`& .${fo.lastButton}.${Sf.disabled},& .${fo.middleButton}.${Sf.disabled}`]: {
    borderTop: "1px solid transparent"
  }
})), lL = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiToggleButtonGroup"
  }), {
    children: d,
    className: p,
    color: f = "standard",
    disabled: v = !1,
    exclusive: g = !1,
    fullWidth: b = !1,
    onChange: S,
    orientation: R = "horizontal",
    size: D = "medium",
    value: k
  } = c, $ = ue(c, wte), P = x({}, c, {
    disabled: v,
    fullWidth: b,
    orientation: R,
    size: D
  }), O = Ete(P), I = w.useCallback((F, Y) => {
    if (!S)
      return;
    const H = k && k.indexOf(Y);
    let J;
    k && H >= 0 ? (J = k.slice(), J.splice(H, 1)) : J = k ? k.concat(Y) : [Y], S(F, J);
  }, [S, k]), _ = w.useCallback((F, Y) => {
    S && S(F, k === Y ? null : Y);
  }, [S, k]), A = w.useMemo(() => ({
    className: O.grouped,
    onChange: g ? _ : I,
    value: k,
    size: D,
    fullWidth: b,
    color: f,
    disabled: v
  }), [O.grouped, g, _, I, k, D, b, f, v]), V = yN(d), B = V.length, M = (F) => {
    const Y = F === 0, H = F === B - 1;
    return Y && H ? "" : Y ? O.firstButton : H ? O.lastButton : O.middleButton;
  };
  return /* @__PURE__ */ z(Rte, x({
    role: "group",
    className: ve(O.root, p),
    ref: i,
    ownerState: P
  }, $, {
    children: /* @__PURE__ */ z(rL.Provider, {
      value: A,
      children: V.map((F, Y) => (process.env.NODE_ENV !== "production" && Xi.isFragment(F) && console.error(["MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), /* @__PURE__ */ z(iL.Provider, {
        value: M(Y),
        children: F
      }, Y)))
    })
  }));
});
process.env.NODE_ENV !== "production" && (lL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the button when it is selected.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'standard'
   */
  color: t.oneOfType([t.oneOf(["standard", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, only allow one of the child ToggleButton values to be selected.
   * @default false
   */
  exclusive: t.bool,
  /**
   * If `true`, the button group will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.
   * @param {any} value of the selected buttons. When `exclusive` is true
   * this is a single value; when false an array of selected values. If no value
   * is selected and `exclusive` is true the value is null; when false an empty array.
   */
  onChange: t.func,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: t.oneOf(["horizontal", "vertical"]),
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["small", "medium", "large"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The currently selected value within the group or an array of selected
   * values when `exclusive` is false.
   *
   * The value must have reference equality with the option in order to be selected.
   */
  value: t.any
});
const Mse = lL, Ote = ["getTrigger", "target"];
function kte(e, o) {
  const {
    disableHysteresis: i = !1,
    threshold: c = 100,
    target: d
  } = o, p = e.current;
  return d && (e.current = d.pageYOffset !== void 0 ? d.pageYOffset : d.scrollTop), !i && p !== void 0 && e.current < p ? !1 : e.current > c;
}
const Dte = typeof window < "u" ? window : null;
function Nse(e = {}) {
  const {
    getTrigger: o = kte,
    target: i = Dte
  } = e, c = ue(e, Ote), d = w.useRef(), [p, f] = w.useState(() => o(d, c));
  return w.useEffect(() => {
    const v = () => {
      f(o(d, x({
        target: i
      }, c)));
    };
    return v(), i.addEventListener("scroll", v, {
      passive: !0
    }), () => {
      i.removeEventListener("scroll", v, {
        passive: !0
      });
    };
  }, [i, o, JSON.stringify(c)]), p;
}
const Mte = ["localeText"], XC = /* @__PURE__ */ w.createContext(null);
process.env.NODE_ENV !== "production" && (XC.displayName = "MuiPickersAdapterContext");
const Yw = function(o) {
  var i;
  const {
    localeText: c
  } = o, d = ue(o, Mte), {
    utils: p,
    localeText: f
  } = (i = w.useContext(XC)) != null ? i : {
    utils: void 0,
    localeText: void 0
  }, v = Ue({
    // We don't want to pass the `localeText` prop to the theme, that way it will always return the theme value,
    // We will then merge this theme value with our value manually
    props: d,
    name: "MuiLocalizationProvider"
  }), {
    children: g,
    dateAdapter: b,
    dateFormats: S,
    dateLibInstance: R,
    adapterLocale: D,
    localeText: k
  } = v, $ = w.useMemo(() => x({}, k, f, c), [k, f, c]), P = w.useMemo(() => {
    if (!b)
      return p || null;
    const _ = new b({
      locale: D,
      formats: S,
      instance: R
    });
    if (!_.isMUIAdapter)
      throw new Error(["MUI: The date adapter should be imported from `@mui/x-date-pickers` or `@mui/x-date-pickers-pro`, not from `@date-io`", "For example, `import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'` instead of `import AdapterDayjs from '@date-io/dayjs'`", "More information on the installation documentation: https://mui.com/x/react-date-pickers/getting-started/#installation"].join(`
`));
    return _;
  }, [b, D, S, R, p]), O = w.useMemo(() => P ? {
    minDate: P.date("1900-01-01T00:00:00.000"),
    maxDate: P.date("2099-12-31T00:00:00.000")
  } : null, [P]), I = w.useMemo(() => ({
    utils: P,
    defaultDates: O,
    localeText: $
  }), [O, P, $]);
  return /* @__PURE__ */ z(XC.Provider, {
    value: I,
    children: g
  });
};
process.env.NODE_ENV !== "production" && (Yw.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Locale for the date library you are using
   */
  adapterLocale: t.any,
  children: t.node,
  /**
   * Date library adapter class function.
   * @see See the localization provider {@link https://mui.com/x/react-date-pickers/getting-started/#setup-your-date-library-adapter date adapter setup section} for more details.
   */
  dateAdapter: t.func,
  /**
   * Formats that are used for any child pickers
   */
  dateFormats: t.shape({
    dayOfMonth: t.string,
    fullDate: t.string,
    fullDateTime: t.string,
    fullDateTime12h: t.string,
    fullDateTime24h: t.string,
    fullDateWithWeekday: t.string,
    fullTime: t.string,
    fullTime12h: t.string,
    fullTime24h: t.string,
    hours12h: t.string,
    hours24h: t.string,
    keyboardDate: t.string,
    keyboardDateTime: t.string,
    keyboardDateTime12h: t.string,
    keyboardDateTime24h: t.string,
    meridiem: t.string,
    minutes: t.string,
    month: t.string,
    monthAndDate: t.string,
    monthAndYear: t.string,
    monthShort: t.string,
    normalDate: t.string,
    normalDateWithWeekday: t.string,
    seconds: t.string,
    shortDate: t.string,
    weekday: t.string,
    weekdayShort: t.string,
    year: t.string
  }),
  /**
   * Date library instance you are using, if it has some global overrides
   * ```jsx
   * dateLibInstance={momentTimeZone}
   * ```
   */
  dateLibInstance: t.any,
  /**
   * Locale for components texts
   */
  localeText: t.object
});
const Nte = (e) => ({
  components: {
    MuiLocalizationProvider: {
      defaultProps: {
        localeText: x({}, e)
      }
    }
  }
}), cL = {
  // Calendar navigation
  previousMonth: "Previous month",
  nextMonth: "Next month",
  // View navigation
  openPreviousView: "open previous view",
  openNextView: "open next view",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "year view is open, switch to calendar view" : "calendar view is open, switch to year view",
  // DateRange placeholders
  start: "Start",
  end: "End",
  // Action bar
  cancelButtonLabel: "Cancel",
  clearButtonLabel: "Clear",
  okButtonLabel: "OK",
  todayButtonLabel: "Today",
  // Toolbar titles
  datePickerToolbarTitle: "Select date",
  dateTimePickerToolbarTitle: "Select date & time",
  timePickerToolbarTitle: "Select time",
  dateRangePickerToolbarTitle: "Select date range",
  // Clock labels
  clockLabelText: (e, o, i) => `Select ${e}. ${o === null ? "No time selected" : `Selected time is ${i.format(o, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} hours`,
  minutesClockNumberText: (e) => `${e} minutes`,
  secondsClockNumberText: (e) => `${e} seconds`,
  // Digital clock labels
  selectViewText: (e) => `Select ${e}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Week number",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Week ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, o) => e !== null && o.isValid(e) ? `Choose date, selected date is ${o.format(e, "fullDate")}` : "Choose date",
  openTimePickerDialogue: (e, o) => e !== null && o.isValid(e) ? `Choose time, selected time is ${o.format(e, "fullTime")}` : "Choose time",
  fieldClearLabel: "Clear value",
  // Table labels
  timeTableLabel: "pick time",
  dateTableLabel: "pick date",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Y".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, Pte = cL;
Nte(cL);
const Cd = () => {
  const e = w.useContext(XC);
  if (e === null)
    throw new Error(["MUI: Can not find the date and time pickers localization context.", "It looks like you forgot to wrap your component in LocalizationProvider.", "This can also happen if you are bundling multiple versions of the `@mui/x-date-pickers` package"].join(`
`));
  if (e.utils === null)
    throw new Error(["MUI: Can not find the date and time pickers adapter from its localization context.", "It looks like you forgot to pass a `dateAdapter` to your LocalizationProvider."].join(`
`));
  const o = w.useMemo(() => x({}, Pte, e.localeText), [e.localeText]);
  return w.useMemo(() => x({}, e, {
    localeText: o
  }), [e, o]);
}, to = () => Cd().utils, Jv = () => Cd().defaultDates, Zc = () => Cd().localeText, y0 = (e) => {
  const o = to(), i = w.useRef();
  return i.current === void 0 && (i.current = o.dateWithTimezone(void 0, e)), i.current;
}, $te = Cn(/* @__PURE__ */ z("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown"), Ite = Cn(/* @__PURE__ */ z("path", {
  d: "M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z"
}), "ArrowLeft"), Lte = Cn(/* @__PURE__ */ z("path", {
  d: "M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"
}), "ArrowRight"), Ate = Cn(/* @__PURE__ */ z("path", {
  d: "M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z"
}), "Calendar");
Cn(/* @__PURE__ */ ht(w.Fragment, {
  children: [/* @__PURE__ */ z("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }), /* @__PURE__ */ z("path", {
    d: "M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z"
  })]
}), "Clock");
Cn(/* @__PURE__ */ z("path", {
  d: "M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"
}), "DateRange");
Cn(/* @__PURE__ */ ht(w.Fragment, {
  children: [/* @__PURE__ */ z("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }), /* @__PURE__ */ z("path", {
    d: "M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z"
  })]
}), "Time");
const _te = Cn(/* @__PURE__ */ z("path", {
  d: "M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Clear");
function Bte(e) {
  return We("MuiPickersArrowSwitcher", e);
}
Ge("MuiPickersArrowSwitcher", ["root", "spacer", "button"]);
const zte = ["children", "className", "slots", "slotProps", "isNextDisabled", "isNextHidden", "onGoToNext", "nextLabel", "isPreviousDisabled", "isPreviousHidden", "onGoToPrevious", "previousLabel"], Vte = ["ownerState"], Fte = ["ownerState"], jte = ee("div", {
  name: "MuiPickersArrowSwitcher",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({
  display: "flex"
}), Ute = ee("div", {
  name: "MuiPickersArrowSwitcher",
  slot: "Spacer",
  overridesResolver: (e, o) => o.spacer
})(({
  theme: e
}) => ({
  width: e.spacing(3)
})), FM = ee(Wi, {
  name: "MuiPickersArrowSwitcher",
  slot: "Button",
  overridesResolver: (e, o) => o.button
})(({
  ownerState: e
}) => x({}, e.hidden && {
  visibility: "hidden"
})), Hte = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"],
    spacer: ["spacer"],
    button: ["button"]
  }, Bte, o);
}, Wte = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d, p, f;
  const g = Mn().direction === "rtl", b = Ue({
    props: o,
    name: "MuiPickersArrowSwitcher"
  }), {
    children: S,
    className: R,
    slots: D,
    slotProps: k,
    isNextDisabled: $,
    isNextHidden: P,
    onGoToNext: O,
    nextLabel: I,
    isPreviousDisabled: _,
    isPreviousHidden: A,
    onGoToPrevious: V,
    previousLabel: B
  } = b, M = ue(b, zte), F = b, Y = Hte(F), H = {
    isDisabled: $,
    isHidden: P,
    goTo: O,
    label: I
  }, J = {
    isDisabled: _,
    isHidden: A,
    goTo: V,
    label: B
  }, W = (c = D == null ? void 0 : D.previousIconButton) != null ? c : FM, te = ln({
    elementType: W,
    externalSlotProps: k == null ? void 0 : k.previousIconButton,
    additionalProps: {
      size: "medium",
      title: J.label,
      "aria-label": J.label,
      disabled: J.isDisabled,
      edge: "end",
      onClick: J.goTo
    },
    ownerState: x({}, F, {
      hidden: J.isHidden
    }),
    className: Y.button
  }), Z = (d = D == null ? void 0 : D.nextIconButton) != null ? d : FM, q = ln({
    elementType: Z,
    externalSlotProps: k == null ? void 0 : k.nextIconButton,
    additionalProps: {
      size: "medium",
      title: H.label,
      "aria-label": H.label,
      disabled: H.isDisabled,
      edge: "start",
      onClick: H.goTo
    },
    ownerState: x({}, F, {
      hidden: H.isHidden
    }),
    className: Y.button
  }), Q = (p = D == null ? void 0 : D.leftArrowIcon) != null ? p : Ite, re = ln({
    elementType: Q,
    externalSlotProps: k == null ? void 0 : k.leftArrowIcon,
    additionalProps: {
      fontSize: "inherit"
    },
    ownerState: void 0
  }), ie = ue(re, Vte), K = (f = D == null ? void 0 : D.rightArrowIcon) != null ? f : Lte, ne = ln({
    elementType: K,
    externalSlotProps: k == null ? void 0 : k.rightArrowIcon,
    additionalProps: {
      fontSize: "inherit"
    },
    ownerState: void 0
  }), se = ue(ne, Fte);
  return /* @__PURE__ */ ht(jte, x({
    ref: i,
    className: ve(Y.root, R),
    ownerState: F
  }, M, {
    children: [/* @__PURE__ */ z(W, x({}, te, {
      children: g ? /* @__PURE__ */ z(K, x({}, se)) : /* @__PURE__ */ z(Q, x({}, ie))
    })), S ? /* @__PURE__ */ z(wo, {
      variant: "subtitle1",
      component: "span",
      children: S
    }) : /* @__PURE__ */ z(Ute, {
      className: Y.spacer,
      ownerState: F
    }), /* @__PURE__ */ z(Z, x({}, q, {
      children: g ? /* @__PURE__ */ z(Q, x({}, ie)) : /* @__PURE__ */ z(K, x({}, se))
    }))]
  }));
}), pv = (e, o) => e.length !== o.length ? !1 : o.every((i) => e.includes(i)), Yte = ({
  openTo: e,
  defaultOpenTo: o,
  views: i,
  defaultViews: c
}) => {
  const d = i ?? c;
  let p;
  if (e != null)
    p = e;
  else if (d.includes(o))
    p = o;
  else if (d.length > 0)
    p = d[0];
  else
    throw new Error("MUI: The `views` prop must contain at least one view");
  return {
    views: d,
    openTo: p
  };
}, Gte = ["hours", "minutes", "seconds"], qte = (e) => Gte.includes(e), jM = (e, o) => o.getHours(e) * 3600 + o.getMinutes(e) * 60 + o.getSeconds(e), Kte = (e, o) => (i, c) => e ? o.isAfter(i, c) : jM(i, o) > jM(c, o);
let E1 = !1;
function uL({
  onChange: e,
  onViewChange: o,
  openTo: i,
  view: c,
  views: d,
  autoFocus: p,
  focusedView: f,
  onFocusedViewChange: v
}) {
  var g, b;
  process.env.NODE_ENV !== "production" && (E1 || (c != null && !d.includes(c) && (console.warn(`MUI: \`view="${c}"\` is not a valid prop.`, `It must be an element of \`views=["${d.join('", "')}"]\`.`), E1 = !0), c == null && i != null && !d.includes(i) && (console.warn(`MUI: \`openTo="${i}"\` is not a valid prop.`, `It must be an element of \`views=["${d.join('", "')}"]\`.`), E1 = !0)));
  const S = w.useRef(i), R = w.useRef(d), D = w.useRef(d.includes(i) ? i : d[0]), [k, $] = Eo({
    name: "useViews",
    state: "view",
    controlled: c,
    default: D.current
  }), P = w.useRef(p ? k : null), [O, I] = Eo({
    name: "useViews",
    state: "focusedView",
    controlled: f,
    default: P.current
  });
  w.useEffect(() => {
    (S.current && S.current !== i || R.current && R.current.some((H) => !d.includes(H))) && ($(d.includes(i) ? i : d[0]), R.current = d, S.current = i);
  }, [i, $, k, d]);
  const _ = d.indexOf(k), A = (g = d[_ - 1]) != null ? g : null, V = (b = d[_ + 1]) != null ? b : null, B = St((H, J) => {
    I(J ? H : (W) => H === W ? null : W), v == null || v(H, J);
  }), M = St((H) => {
    B(H, !0), H !== k && ($(H), o && o(H));
  }), F = St(() => {
    V && M(V);
  }), Y = St((H, J, W) => {
    const te = J === "finish", Z = W ? (
      // handles case like `DateTimePicker`, where a view might return a `finish` selection state
      // but we it's not the final view given all `views` -> overall selection state should be `partial`.
      d.indexOf(W) < d.length - 1
    ) : !!V;
    if (e(H, te && Z ? "partial" : J, W), W && W !== k) {
      const Q = d[d.indexOf(W) + 1];
      Q && M(Q);
    } else
      te && F();
  });
  return {
    view: k,
    setView: M,
    focusedView: O,
    setFocusedView: B,
    nextView: V,
    previousView: A,
    // Always return up to date default view instead of the initial one (i.e. defaultView.current)
    defaultView: d.includes(i) ? i : d[0],
    goToNextView: F,
    setValueAndGoToNextView: Y
  };
}
function Qte(e, {
  disableFuture: o,
  maxDate: i,
  timezone: c
}) {
  const d = to();
  return w.useMemo(() => {
    const p = d.dateWithTimezone(void 0, c), f = d.startOfMonth(o && d.isBefore(p, i) ? p : i);
    return !d.isAfter(f, e);
  }, [o, i, e, d, c]);
}
function Xte(e, {
  disablePast: o,
  minDate: i,
  timezone: c
}) {
  const d = to();
  return w.useMemo(() => {
    const p = d.dateWithTimezone(void 0, c), f = d.startOfMonth(o && d.isAfter(p, i) ? p : i);
    return !d.isBefore(f, e);
  }, [o, i, e, d, c]);
}
const zv = 36, b0 = 2, C0 = 320, Zte = 280, Gw = 334, Jte = ee("div")({
  overflow: "hidden",
  width: C0,
  maxHeight: Gw,
  display: "flex",
  flexDirection: "column",
  margin: "0 auto"
}), Ov = ({
  date: e,
  disableFuture: o,
  disablePast: i,
  maxDate: c,
  minDate: d,
  isDateDisabled: p,
  utils: f,
  timezone: v
}) => {
  const g = f.startOfDay(f.dateWithTimezone(void 0, v));
  i && f.isBefore(d, g) && (d = g), o && f.isAfter(c, g) && (c = g);
  let b = e, S = e;
  for (f.isBefore(e, d) && (b = d, S = null), f.isAfter(e, c) && (S && (S = c), b = null); b || S; ) {
    if (b && f.isAfter(b, c) && (b = null), S && f.isBefore(S, d) && (S = null), b) {
      if (!p(b))
        return b;
      b = f.addDays(b, 1);
    }
    if (S) {
      if (!p(S))
        return S;
      S = f.addDays(S, -1);
    }
  }
  return null;
}, ene = (e, o) => o == null || !e.isValid(o) ? null : o, vi = (e, o, i) => o == null || !e.isValid(o) ? i : o, tne = (e, o, i) => !e.isValid(o) && o != null && !e.isValid(i) && i != null ? !0 : e.isEqual(o, i), qw = (e, o) => {
  const c = [e.startOfYear(o)];
  for (; c.length < 12; ) {
    const d = c[c.length - 1];
    c.push(e.addMonths(d, 1));
  }
  return c;
}, Y1 = (e, o, i) => {
  let c = o;
  return c = e.setHours(c, e.getHours(i)), c = e.setMinutes(c, e.getMinutes(i)), c = e.setSeconds(c, e.getSeconds(i)), c;
}, dL = (e, o, i) => i === "date" ? e.startOfDay(e.dateWithTimezone(void 0, o)) : e.dateWithTimezone(void 0, o), nne = ["year", "month", "day"], UM = (e) => nne.includes(e), Kw = (e, {
  format: o,
  views: i
}, c) => {
  if (o != null)
    return o;
  const d = e.formats;
  return pv(i, ["year"]) ? d.year : pv(i, ["month"]) ? d.month : pv(i, ["day"]) ? d.dayOfMonth : pv(i, ["month", "year"]) ? `${d.month} ${d.year}` : pv(i, ["day", "month"]) ? `${d.month} ${d.dayOfMonth}` : c ? /en/.test(e.getCurrentLocaleCode()) ? d.normalDateWithWeekday : d.normalDate : d.keyboardDate;
}, one = (e, o) => {
  const i = e.startOfWeek(o);
  return [0, 1, 2, 3, 4, 5, 6].map((c) => e.addDays(i, c));
}, Qw = ({
  timezone: e,
  value: o,
  defaultValue: i,
  onChange: c,
  valueManager: d
}) => {
  var p, f;
  const v = to(), g = w.useRef(i), b = (p = o ?? g.current) != null ? p : d.emptyValue, S = w.useMemo(() => d.getTimezone(v, b), [v, d, b]), R = St((P) => S == null ? P : d.setTimezone(v, S, P)), D = (f = e ?? S) != null ? f : "default", k = w.useMemo(() => d.setTimezone(v, D, b), [d, v, D, b]), $ = St((P, ...O) => {
    const I = R(P);
    c == null || c(I, ...O);
  });
  return {
    value: k,
    handleValueChange: $,
    timezone: D
  };
}, Xw = ({
  name: e,
  timezone: o,
  value: i,
  defaultValue: c,
  onChange: d,
  valueManager: p
}) => {
  const [f, v] = Eo({
    name: e,
    state: "value",
    controlled: i,
    default: c ?? p.emptyValue
  }), g = St((b, ...S) => {
    v(b), d == null || d(b, ...S);
  });
  return Qw({
    timezone: o,
    value: f,
    defaultValue: void 0,
    onChange: g,
    valueManager: p
  });
}, Ls = {
  year: 1,
  month: 2,
  day: 3,
  hours: 4,
  minutes: 5,
  seconds: 6,
  milliseconds: 7
}, rne = (e) => Math.max(...e.map((o) => {
  var i;
  return (i = Ls[o.type]) != null ? i : 1;
})), fv = (e, o, i) => {
  if (o === Ls.year)
    return e.startOfYear(i);
  if (o === Ls.month)
    return e.startOfMonth(i);
  if (o === Ls.day)
    return e.startOfDay(i);
  let c = i;
  return o < Ls.minutes && (c = e.setMinutes(c, 0)), o < Ls.seconds && (c = e.setSeconds(c, 0)), o < Ls.milliseconds && (c = e.setMilliseconds(c, 0)), c;
}, ane = ({
  props: e,
  utils: o,
  granularity: i,
  timezone: c,
  getTodayDate: d
}) => {
  var p;
  let f = d ? d() : fv(o, i, dL(o, c));
  e.minDate != null && o.isAfterDay(e.minDate, f) && (f = fv(o, i, e.minDate)), e.maxDate != null && o.isBeforeDay(e.maxDate, f) && (f = fv(o, i, e.maxDate));
  const v = Kte((p = e.disableIgnoringDatePartForTimeValidation) != null ? p : !1, o);
  return e.minTime != null && v(e.minTime, f) && (f = fv(o, i, e.disableIgnoringDatePartForTimeValidation ? e.minTime : Y1(o, f, e.minTime))), e.maxTime != null && v(f, e.maxTime) && (f = fv(o, i, e.disableIgnoringDatePartForTimeValidation ? e.maxTime : Y1(o, f, e.maxTime))), f;
}, Zw = (e, o) => {
  const i = e.formatTokenMap[o];
  if (i == null)
    throw new Error([`MUI: The token "${o}" is not supported by the Date and Time Pickers.`, "Please try using another token or open an issue on https://github.com/mui/mui-x/issues/new/choose if you think it should be supported."].join(`
`));
  return typeof i == "string" ? {
    type: i,
    contentType: i === "meridiem" ? "letter" : "digit",
    maxLength: void 0
  } : {
    type: i.sectionType,
    contentType: i.contentType,
    maxLength: i.maxLength
  };
}, ine = (e) => {
  switch (e) {
    case "ArrowUp":
      return 1;
    case "ArrowDown":
      return -1;
    case "PageUp":
      return 5;
    case "PageDown":
      return -5;
    default:
      return 0;
  }
}, x0 = (e, o, i) => {
  const c = [], d = e.dateWithTimezone(void 0, o), p = e.startOfWeek(d), f = e.endOfWeek(d);
  let v = p;
  for (; e.isBefore(v, f); )
    c.push(v), v = e.addDays(v, 1);
  return c.map((g) => e.formatByString(g, i));
}, pL = (e, o, i, c) => {
  switch (i) {
    case "month":
      return qw(e, e.dateWithTimezone(void 0, o)).map((d) => e.formatByString(d, c));
    case "weekDay":
      return x0(e, o, c);
    case "meridiem": {
      const d = e.dateWithTimezone(void 0, o);
      return [e.startOfDay(d), e.endOfDay(d)].map((p) => e.formatByString(p, c));
    }
    default:
      return [];
  }
}, fL = (e, o, i) => {
  let c = o;
  for (c = Number(c).toString(); c.length < i; )
    c = `0${c}`;
  return c;
}, mL = (e, o, i, c, d) => {
  if (process.env.NODE_ENV !== "production" && d.type !== "day" && d.contentType === "digit-with-letter")
    throw new Error([`MUI: The token "${d.format}" is a digit format with letter in it.'
             This type of format is only supported for 'day' sections`].join(`
`));
  if (d.type === "day" && d.contentType === "digit-with-letter") {
    const f = e.setDate(c.longestMonth, i);
    return e.formatByString(f, d.format);
  }
  const p = i.toString();
  return d.hasLeadingZerosInInput ? fL(e, p, d.maxLength) : p;
}, sne = (e, o, i, c, d, p, f) => {
  const v = ine(c), g = c === "Home", b = c === "End", S = i.value === "" || g || b, R = () => {
    const k = d[i.type]({
      currentDate: p,
      format: i.format,
      contentType: i.contentType
    }), $ = (_) => mL(e, o, _, k, i), P = i.type === "minutes" && f != null && f.minutesStep ? f.minutesStep : 1;
    let I = parseInt(i.value, 10) + v * P;
    if (S) {
      if (i.type === "year" && !b && !g)
        return e.formatByString(e.dateWithTimezone(void 0, o), i.format);
      v > 0 || g ? I = k.minimum : I = k.maximum;
    }
    return I % P !== 0 && ((v < 0 || g) && (I += P - (P + I) % P), (v > 0 || b) && (I -= I % P)), I > k.maximum ? $(k.minimum + (I - k.maximum - 1) % (k.maximum - k.minimum + 1)) : I < k.minimum ? $(k.maximum - (k.minimum - I - 1) % (k.maximum - k.minimum + 1)) : $(I);
  }, D = () => {
    const k = pL(e, o, i.type, i.format);
    if (k.length === 0)
      return i.value;
    if (S)
      return v > 0 || g ? k[0] : k[k.length - 1];
    const P = (k.indexOf(i.value) + k.length + v) % k.length;
    return k[P];
  };
  return i.contentType === "digit" || i.contentType === "digit-with-letter" ? R() : D();
}, Jw = (e, o) => {
  let i = e.value || e.placeholder;
  const c = o === "non-input" ? e.hasLeadingZerosInFormat : e.hasLeadingZerosInInput;
  return o === "non-input" && e.hasLeadingZerosInInput && !e.hasLeadingZerosInFormat && (i = Number(i).toString()), ["input-rtl", "input-ltr"].includes(o) && e.contentType === "digit" && !c && i.length === 1 && (i = `${i}‎`), o === "input-rtl" && (i = `⁨${i}⁩`), i;
}, Tf = (e) => e.replace(/[\u2066\u2067\u2068\u2069]/g, ""), hL = (e, o) => {
  let i = 0, c = o ? 1 : 0;
  const d = [];
  for (let p = 0; p < e.length; p += 1) {
    const f = e[p], v = Jw(f, o ? "input-rtl" : "input-ltr"), g = `${f.startSeparator}${v}${f.endSeparator}`, b = Tf(g).length, S = g.length, R = Tf(v), D = c + v.indexOf(R[0]) + f.startSeparator.length, k = D + R.length;
    d.push(x({}, f, {
      start: i,
      end: i + b,
      startInInput: D,
      endInInput: k
    })), i += b, c += S;
  }
  return d;
}, lne = (e, o, i, c, d) => {
  switch (c.type) {
    case "year":
      return i.fieldYearPlaceholder({
        digitAmount: e.formatByString(e.dateWithTimezone(void 0, o), d).length,
        format: d
      });
    case "month":
      return i.fieldMonthPlaceholder({
        contentType: c.contentType,
        format: d
      });
    case "day":
      return i.fieldDayPlaceholder({
        format: d
      });
    case "weekDay":
      return i.fieldWeekDayPlaceholder({
        contentType: c.contentType,
        format: d
      });
    case "hours":
      return i.fieldHoursPlaceholder({
        format: d
      });
    case "minutes":
      return i.fieldMinutesPlaceholder({
        format: d
      });
    case "seconds":
      return i.fieldSecondsPlaceholder({
        format: d
      });
    case "meridiem":
      return i.fieldMeridiemPlaceholder({
        format: d
      });
    default:
      return d;
  }
}, HM = (e, o, i, c) => {
  if (process.env.NODE_ENV !== "production" && Zw(e, i).type === "weekDay")
    throw new Error("changeSectionValueFormat doesn't support week day formats");
  return e.formatByString(e.parse(o, i), c);
}, vL = (e, o, i) => e.formatByString(e.dateWithTimezone(void 0, o), i).length === 4, gL = (e, o, i, c, d) => {
  if (i !== "digit")
    return !1;
  const p = e.dateWithTimezone(void 0, o);
  switch (c) {
    case "year":
      return vL(e, o, d) ? e.formatByString(e.setYear(p, 1), d) === "0001" : e.formatByString(e.setYear(p, 2001), d) === "01";
    case "month":
      return e.formatByString(e.startOfYear(p), d).length > 1;
    case "day":
      return e.formatByString(e.startOfMonth(p), d).length > 1;
    case "weekDay":
      return e.formatByString(e.startOfWeek(p), d).length > 1;
    case "hours":
      return e.formatByString(e.setHours(p, 1), d).length > 1;
    case "minutes":
      return e.formatByString(e.setMinutes(p, 1), d).length > 1;
    case "seconds":
      return e.formatByString(e.setSeconds(p, 1), d).length > 1;
    default:
      throw new Error("Invalid section type");
  }
}, cne = (e, o) => {
  const i = [], {
    start: c,
    end: d
  } = e.escapedCharacters, p = new RegExp(`(\\${c}[^\\${d}]*\\${d})+`, "g");
  let f = null;
  for (; f = p.exec(o); )
    i.push({
      start: f.index,
      end: p.lastIndex - 1
    });
  return i;
}, WM = (e, o, i, c, d, p, f, v) => {
  let g = "";
  const b = [], S = e.date(), R = (A) => {
    if (A === "")
      return null;
    const V = Zw(e, A), B = gL(e, o, V.contentType, V.type, A), M = f ? B : V.contentType === "digit", F = d != null && e.isValid(d);
    let Y = F ? e.formatByString(d, A) : "", H = null;
    if (M)
      if (B)
        H = Y === "" ? e.formatByString(S, A).length : Y.length;
      else {
        if (V.maxLength == null)
          throw new Error(`MUI: The token ${A} should have a 'maxDigitNumber' property on it's adapter`);
        H = V.maxLength, F && (Y = fL(e, Y, H));
      }
    return b.push(x({}, V, {
      format: A,
      maxLength: H,
      value: Y,
      placeholder: lne(e, o, i, V, A),
      hasLeadingZeros: B,
      hasLeadingZerosInFormat: B,
      hasLeadingZerosInInput: M,
      startSeparator: b.length === 0 ? g : "",
      endSeparator: "",
      modified: !1
    })), null;
  };
  let D = 10, k = c, $ = e.expandFormat(c);
  for (; $ !== k; )
    if (k = $, $ = e.expandFormat(k), D -= 1, D < 0)
      throw new Error("MUI: The format expansion seems to be  enter in an infinite loop. Please open an issue with the format passed to the picker component");
  const P = $, O = cne(e, P), I = new RegExp(`^(${Object.keys(e.formatTokenMap).sort((A, V) => V.length - A.length).join("|")})`, "g");
  let _ = "";
  for (let A = 0; A < P.length; A += 1) {
    const V = O.find((H) => H.start <= A && H.end >= A), B = P[A], M = V != null, F = `${_}${P.slice(A)}`, Y = I.test(F);
    !M && B.match(/([A-Za-z]+)/) && Y ? (_ = F.slice(0, I.lastIndex), A += I.lastIndex - 1) : M && (V == null ? void 0 : V.start) === A || (V == null ? void 0 : V.end) === A || (R(_), _ = "", b.length === 0 ? g += B : b[b.length - 1].endSeparator += B);
  }
  return R(_), b.map((A) => {
    const V = (B) => {
      let M = B;
      return v && M !== null && M.includes(" ") && (M = `⁩${M}⁦`), p === "spacious" && ["/", ".", "-"].includes(M) && (M = ` ${M} `), M;
    };
    return A.startSeparator = V(A.startSeparator), A.endSeparator = V(A.endSeparator), A;
  });
}, une = (e, o) => {
  const i = o.some((v) => v.type === "day"), c = [], d = [];
  for (let v = 0; v < o.length; v += 1) {
    const g = o[v];
    i && g.type === "weekDay" || (c.push(g.format), d.push(Jw(g, "non-input")));
  }
  const p = c.join(" "), f = d.join(" ");
  return e.parse(f, p);
}, dne = (e, o) => {
  const c = e.map((d) => {
    const p = Jw(d, o ? "input-rtl" : "input-ltr");
    return `${d.startSeparator}${p}${d.endSeparator}`;
  }).join("");
  return o ? `⁦${c}⁩` : c;
}, pne = (e, o) => {
  const i = e.dateWithTimezone(void 0, o), c = e.endOfYear(i), d = e.endOfDay(i), {
    maxDaysInMonth: p,
    longestMonth: f
  } = qw(e, i).reduce((v, g) => {
    const b = e.getDaysInMonth(g);
    return b > v.maxDaysInMonth ? {
      maxDaysInMonth: b,
      longestMonth: g
    } : v;
  }, {
    maxDaysInMonth: 0,
    longestMonth: null
  });
  return {
    year: ({
      format: v
    }) => ({
      minimum: 0,
      maximum: vL(e, o, v) ? 9999 : 99
    }),
    month: () => ({
      minimum: 1,
      // Assumption: All years have the same amount of months
      maximum: e.getMonth(c) + 1
    }),
    day: ({
      currentDate: v
    }) => ({
      minimum: 1,
      maximum: v != null && e.isValid(v) ? e.getDaysInMonth(v) : p,
      longestMonth: f
    }),
    weekDay: ({
      format: v,
      contentType: g
    }) => {
      if (g === "digit") {
        const b = x0(e, o, v).map(Number);
        return {
          minimum: Math.min(...b),
          maximum: Math.max(...b)
        };
      }
      return {
        minimum: 1,
        maximum: 7
      };
    },
    hours: ({
      format: v
    }) => {
      const g = e.getHours(d);
      return e.formatByString(e.endOfDay(i), v) !== g.toString() ? {
        minimum: 1,
        maximum: Number(e.formatByString(e.startOfDay(i), v))
      } : {
        minimum: 0,
        maximum: g
      };
    },
    minutes: () => ({
      minimum: 0,
      // Assumption: All years have the same amount of minutes
      maximum: e.getMinutes(d)
    }),
    seconds: () => ({
      minimum: 0,
      // Assumption: All years have the same amount of seconds
      maximum: e.getSeconds(d)
    }),
    meridiem: () => ({
      minimum: 0,
      maximum: 0
    })
  };
};
let YM = !1;
const GM = (e, o) => {
  if (process.env.NODE_ENV !== "production" && !YM) {
    const i = [];
    ["date", "date-time"].includes(o) && i.push("weekDay", "day", "month", "year"), ["time", "date-time"].includes(o) && i.push("hours", "minutes", "seconds", "meridiem");
    const c = e.find((d) => !i.includes(d.type));
    c && (console.warn(`MUI: The field component you are using is not compatible with the "${c.type} date section.`, `The supported date sections are ["${i.join('", "')}"]\`.`), YM = !0);
  }
}, fne = (e, o, i, c, d) => {
  switch (i.type) {
    case "year":
      return e.setYear(d, e.getYear(c));
    case "month":
      return e.setMonth(d, e.getMonth(c));
    case "weekDay": {
      const p = x0(e, o, i.format), f = e.formatByString(c, i.format), v = p.indexOf(f), b = p.indexOf(i.value) - v;
      return e.addDays(c, b);
    }
    case "day":
      return e.setDate(d, e.getDate(c));
    case "meridiem": {
      const p = e.getHours(c) < 12, f = e.getHours(d);
      return p && f >= 12 ? e.addHours(d, -12) : !p && f < 12 ? e.addHours(d, 12) : d;
    }
    case "hours":
      return e.setHours(d, e.getHours(c));
    case "minutes":
      return e.setMinutes(d, e.getMinutes(c));
    case "seconds":
      return e.setSeconds(d, e.getSeconds(c));
    default:
      return d;
  }
}, qM = {
  year: 1,
  month: 2,
  day: 3,
  weekDay: 4,
  hours: 5,
  minutes: 6,
  seconds: 7,
  meridiem: 8
}, KM = (e, o, i, c, d, p) => (
  // cloning sections before sort to avoid mutating it
  [...c].sort((f, v) => qM[f.type] - qM[v.type]).reduce((f, v) => !p || v.modified ? fne(e, o, v, i, f) : f, d)
), mne = () => navigator.userAgent.toLowerCase().indexOf("android") > -1, hne = (e, o) => {
  const i = {};
  if (!o)
    return e.forEach((g, b) => {
      const S = b === 0 ? null : b - 1, R = b === e.length - 1 ? null : b + 1;
      i[b] = {
        leftIndex: S,
        rightIndex: R
      };
    }), {
      neighbors: i,
      startIndex: 0,
      endIndex: e.length - 1
    };
  const c = {}, d = {};
  let p = 0, f = 0, v = e.length - 1;
  for (; v >= 0; ) {
    f = e.findIndex(
      // eslint-disable-next-line @typescript-eslint/no-loop-func
      (g, b) => {
        var S;
        return b >= p && ((S = g.endSeparator) == null ? void 0 : S.includes(" ")) && // Special case where the spaces were not there in the initial input
        g.endSeparator !== " / ";
      }
    ), f === -1 && (f = e.length - 1);
    for (let g = f; g >= p; g -= 1)
      d[g] = v, c[v] = g, v -= 1;
    p = f + 1;
  }
  return e.forEach((g, b) => {
    const S = d[b], R = S === 0 ? null : c[S - 1], D = S === e.length - 1 ? null : c[S + 1];
    i[b] = {
      leftIndex: R,
      rightIndex: D
    };
  }), {
    neighbors: i,
    startIndex: c[0],
    endIndex: c[e.length - 1]
  };
}, vne = ["value", "referenceDate"], Al = {
  emptyValue: null,
  getTodayValue: dL,
  getInitialReferenceValue: (e) => {
    let {
      value: o,
      referenceDate: i
    } = e, c = ue(e, vne);
    return o != null && c.utils.isValid(o) ? o : i ?? ane(c);
  },
  cleanValue: ene,
  areValuesEqual: tne,
  isSameError: (e, o) => e === o,
  hasError: (e) => e != null,
  defaultErrorState: null,
  getTimezone: (e, o) => o == null || !e.isValid(o) ? null : e.getTimezone(o),
  setTimezone: (e, o, i) => i == null ? null : e.setTimezone(i, o)
}, gne = {
  updateReferenceValue: (e, o, i) => o == null || !e.isValid(o) ? i : o,
  getSectionsFromValue: (e, o, i, c, d) => !e.isValid(o) && !!i ? i : hL(d(o), c),
  getValueStrFromSections: dne,
  getActiveDateManager: (e, o) => ({
    date: o.value,
    referenceDate: o.referenceValue,
    getSections: (i) => i,
    getNewValuesFromNewActiveDate: (i) => ({
      value: i,
      referenceValue: i == null || !e.isValid(i) ? o.referenceValue : i
    })
  }),
  parseValueStr: (e, o, i) => i(e.trim(), o)
}, yL = (e) => {
  if (e !== void 0)
    return Object.keys(e).reduce((o, i) => x({}, o, {
      [`${i.slice(0, 1).toLowerCase()}${i.slice(1)}`]: e[i]
    }), {});
};
function yne(e) {
  return We("MuiPickersDay", e);
}
const cd = Ge("MuiPickersDay", ["root", "dayWithMargin", "dayOutsideMonth", "hiddenDaySpacingFiller", "today", "selected", "disabled"]), bne = ["autoFocus", "className", "day", "disabled", "disableHighlightToday", "disableMargin", "hidden", "isAnimating", "onClick", "onDaySelect", "onFocus", "onBlur", "onKeyDown", "onMouseDown", "onMouseEnter", "outsideCurrentMonth", "selected", "showDaysOutsideCurrentMonth", "children", "today", "isFirstVisibleCell", "isLastVisibleCell"], Cne = (e) => {
  const {
    selected: o,
    disableMargin: i,
    disableHighlightToday: c,
    today: d,
    disabled: p,
    outsideCurrentMonth: f,
    showDaysOutsideCurrentMonth: v,
    classes: g
  } = e, b = f && !v;
  return Ye({
    root: ["root", o && !b && "selected", p && "disabled", !i && "dayWithMargin", !c && d && "today", f && v && "dayOutsideMonth", b && "hiddenDaySpacingFiller"],
    hiddenDaySpacingFiller: ["hiddenDaySpacingFiller"]
  }, yne, g);
}, bL = ({
  theme: e,
  ownerState: o
}) => x({}, e.typography.caption, {
  width: zv,
  height: zv,
  borderRadius: "50%",
  padding: 0,
  // explicitly setting to `transparent` to avoid potentially getting impacted by change from the overridden component
  backgroundColor: "transparent",
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.short
  }),
  color: (e.vars || e).palette.text.primary,
  "@media (pointer: fine)": {
    "&:hover": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.hoverOpacity})` : di(e.palette.primary.main, e.palette.action.hoverOpacity)
    }
  },
  "&:focus": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.focusOpacity})` : di(e.palette.primary.main, e.palette.action.focusOpacity),
    [`&.${cd.selected}`]: {
      willChange: "background-color",
      backgroundColor: (e.vars || e).palette.primary.dark
    }
  },
  [`&.${cd.selected}`]: {
    color: (e.vars || e).palette.primary.contrastText,
    backgroundColor: (e.vars || e).palette.primary.main,
    fontWeight: e.typography.fontWeightMedium,
    "&:hover": {
      willChange: "background-color",
      backgroundColor: (e.vars || e).palette.primary.dark
    }
  },
  [`&.${cd.disabled}:not(.${cd.selected})`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${cd.disabled}&.${cd.selected}`]: {
    opacity: 0.6
  }
}, !o.disableMargin && {
  margin: `0 ${b0}px`
}, o.outsideCurrentMonth && o.showDaysOutsideCurrentMonth && {
  color: (e.vars || e).palette.text.secondary
}, !o.disableHighlightToday && o.today && {
  [`&:not(.${cd.selected})`]: {
    border: `1px solid ${(e.vars || e).palette.text.secondary}`
  }
}), CL = (e, o) => {
  const {
    ownerState: i
  } = e;
  return [o.root, !i.disableMargin && o.dayWithMargin, !i.disableHighlightToday && i.today && o.today, !i.outsideCurrentMonth && i.showDaysOutsideCurrentMonth && o.dayOutsideMonth, i.outsideCurrentMonth && !i.showDaysOutsideCurrentMonth && o.hiddenDaySpacingFiller];
}, xne = ee(Qo, {
  name: "MuiPickersDay",
  slot: "Root",
  overridesResolver: CL
})(bL), Sne = ee("div", {
  name: "MuiPickersDay",
  slot: "Root",
  overridesResolver: CL
})(({
  theme: e,
  ownerState: o
}) => x({}, bL({
  theme: e,
  ownerState: o
}), {
  // visibility: 'hidden' does not work here as it hides the element from screen readers as well
  opacity: 0,
  pointerEvents: "none"
})), mv = () => {
}, xL = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiPickersDay"
  }), {
    autoFocus: d = !1,
    className: p,
    day: f,
    disabled: v = !1,
    disableHighlightToday: g = !1,
    disableMargin: b = !1,
    isAnimating: S,
    onClick: R,
    onDaySelect: D,
    onFocus: k = mv,
    onBlur: $ = mv,
    onKeyDown: P = mv,
    onMouseDown: O = mv,
    onMouseEnter: I = mv,
    outsideCurrentMonth: _,
    selected: A = !1,
    showDaysOutsideCurrentMonth: V = !1,
    children: B,
    today: M = !1
  } = c, F = ue(c, bne), Y = x({}, c, {
    autoFocus: d,
    disabled: v,
    disableHighlightToday: g,
    disableMargin: b,
    selected: A,
    showDaysOutsideCurrentMonth: V,
    today: M
  }), H = Cne(Y), J = to(), W = w.useRef(null), te = cn(W, i);
  so(() => {
    d && !v && !S && !_ && W.current.focus();
  }, [d, v, S, _]);
  const Z = (Q) => {
    O(Q), _ && Q.preventDefault();
  }, q = (Q) => {
    v || D(f), _ && Q.currentTarget.focus(), R && R(Q);
  };
  return _ && !V ? /* @__PURE__ */ z(Sne, {
    className: ve(H.root, H.hiddenDaySpacingFiller, p),
    ownerState: Y,
    role: F.role
  }) : /* @__PURE__ */ z(xne, x({
    className: ve(H.root, p),
    ref: te,
    centerRipple: !0,
    disabled: v,
    tabIndex: A ? 0 : -1,
    onKeyDown: (Q) => P(Q, f),
    onFocus: (Q) => k(Q, f),
    onBlur: (Q) => $(Q, f),
    onMouseEnter: (Q) => I(Q, f),
    onClick: q,
    onMouseDown: Z
  }, F, {
    ownerState: Y,
    children: B || J.format(f, "dayOfMonth")
  }));
});
process.env.NODE_ENV !== "production" && (xL.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: t.oneOfType([t.func, t.shape({
    current: t.shape({
      focusVisible: t.func.isRequired
    })
  })]),
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  className: t.string,
  component: t.elementType,
  /**
   * The date to show.
   */
  day: t.any.isRequired,
  /**
   * If `true`, renders as disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: t.bool,
  /**
   * If `true`, days are rendering without margin. Useful for displaying linked range of days.
   * @default false
   */
  disableMargin: t.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: t.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: t.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: t.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: t.string,
  isAnimating: t.bool,
  /**
   * If `true`, day is the first visible cell of the month.
   * Either the first day of the month or the first day of the week depending on `showDaysOutsideCurrentMonth`.
   */
  isFirstVisibleCell: t.bool.isRequired,
  /**
   * If `true`, day is the last visible cell of the month.
   * Either the last day of the month or the last day of the week depending on `showDaysOutsideCurrentMonth`.
   */
  isLastVisibleCell: t.bool.isRequired,
  onBlur: t.func,
  onDaySelect: t.func.isRequired,
  onFocus: t.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: t.func,
  onKeyDown: t.func,
  onMouseEnter: t.func,
  /**
   * If `true`, day is outside of month and will be hidden.
   */
  outsideCurrentMonth: t.bool.isRequired,
  /**
   * If `true`, renders as selected.
   * @default false
   */
  selected: t.bool,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: t.bool,
  style: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * @default 0
   */
  tabIndex: t.number,
  /**
   * If `true`, renders as today date.
   * @default false
   */
  today: t.bool,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: t.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: t.oneOfType([t.func, t.shape({
    current: t.shape({
      pulsate: t.func.isRequired,
      start: t.func.isRequired,
      stop: t.func.isRequired
    })
  })])
});
const Tne = /* @__PURE__ */ w.memo(xL);
function SL(e, o, i, c) {
  const {
    value: d,
    onError: p
  } = e, f = Cd(), v = w.useRef(c), g = o({
    adapter: f,
    value: d,
    props: e
  });
  return w.useEffect(() => {
    p && !i(g, v.current) && p(g, d), v.current = g;
  }, [i, p, v, g, d]), g;
}
const wne = (e) => {
  const o = to(), i = Zc(), c = Cd(), p = Mn().direction === "rtl", {
    valueManager: f,
    fieldValueManager: v,
    valueType: g,
    validator: b,
    internalProps: S,
    internalProps: {
      value: R,
      defaultValue: D,
      referenceDate: k,
      onChange: $,
      format: P,
      formatDensity: O = "dense",
      selectedSections: I,
      onSelectedSectionsChange: _,
      shouldRespectLeadingZeros: A = !1,
      timezone: V
    }
  } = e, {
    timezone: B,
    value: M,
    handleValueChange: F
  } = Qw({
    timezone: V,
    value: R,
    defaultValue: D,
    onChange: $,
    valueManager: f
  }), Y = w.useMemo(() => pne(o, B), [o, B]), H = w.useCallback((fe, De = null) => v.getSectionsFromValue(o, fe, De, p, (be) => WM(o, B, i, P, be, O, A, p)), [v, P, i, p, A, o, O, B]), J = w.useMemo(() => v.getValueStrFromSections(H(f.emptyValue), p), [v, H, f.emptyValue, p]), [W, te] = w.useState(() => {
    const fe = H(M);
    GM(fe, g);
    const De = {
      sections: fe,
      value: M,
      referenceValue: f.emptyValue,
      tempValueStrAndroid: null
    }, be = rne(fe), Ce = f.getInitialReferenceValue({
      referenceDate: k,
      value: M,
      utils: o,
      props: S,
      granularity: be,
      timezone: B
    });
    return x({}, De, {
      referenceValue: Ce
    });
  }), [Z, q] = Eo({
    controlled: I,
    default: null,
    name: "useField",
    state: "selectedSectionIndexes"
  }), Q = (fe) => {
    q(fe), _ == null || _(fe), te((De) => x({}, De, {
      selectedSectionQuery: null
    }));
  }, re = w.useMemo(() => {
    if (Z == null)
      return null;
    if (Z === "all")
      return {
        startIndex: 0,
        endIndex: W.sections.length - 1,
        shouldSelectBoundarySelectors: !0
      };
    if (typeof Z == "number")
      return {
        startIndex: Z,
        endIndex: Z
      };
    if (typeof Z == "string") {
      const fe = W.sections.findIndex((De) => De.type === Z);
      return {
        startIndex: fe,
        endIndex: fe
      };
    }
    return Z;
  }, [Z, W.sections]), ie = ({
    value: fe,
    referenceValue: De,
    sections: be
  }) => {
    if (te((de) => x({}, de, {
      sections: be,
      value: fe,
      referenceValue: De,
      tempValueStrAndroid: null
    })), f.areValuesEqual(o, W.value, fe))
      return;
    const Ce = {
      validationError: b({
        adapter: c,
        value: fe,
        props: x({}, S, {
          value: fe,
          timezone: B
        })
      })
    };
    F(fe, Ce);
  }, K = (fe, De) => {
    const be = [...W.sections];
    return be[fe] = x({}, be[fe], {
      value: De,
      modified: !0
    }), hL(be, p);
  }, ne = () => {
    ie({
      value: f.emptyValue,
      referenceValue: W.referenceValue,
      sections: H(f.emptyValue)
    });
  }, se = () => {
    if (re == null)
      return;
    const fe = W.sections[re.startIndex], De = v.getActiveDateManager(o, W, fe), Ce = De.getSections(W.sections).filter((Oe) => Oe.value !== "").length === (fe.value === "" ? 0 : 1), de = K(re.startIndex, ""), Ae = Ce ? null : o.date(/* @__PURE__ */ new Date("")), at = De.getNewValuesFromNewActiveDate(Ae);
    (Ae != null && !o.isValid(Ae)) != (De.date != null && !o.isValid(De.date)) ? ie(x({}, at, {
      sections: de
    })) : te((Oe) => x({}, Oe, at, {
      sections: de,
      tempValueStrAndroid: null
    }));
  }, Fe = (fe) => {
    const De = (de, Ae) => {
      const at = o.parse(de, P);
      if (at == null || !o.isValid(at))
        return null;
      const Oe = WM(o, B, i, P, at, O, A, p);
      return KM(o, B, at, Oe, Ae, !1);
    }, be = v.parseValueStr(fe, W.referenceValue, De), Ce = v.updateReferenceValue(o, be, W.referenceValue);
    ie({
      value: be,
      referenceValue: Ce,
      sections: H(be, W.sections)
    });
  }, qe = ({
    activeSection: fe,
    newSectionValue: De,
    shouldGoToNextSection: be
  }) => {
    be && re && re.startIndex < W.sections.length - 1 ? Q(re.startIndex + 1) : re && re.startIndex !== re.endIndex && Q(re.startIndex);
    const Ce = v.getActiveDateManager(o, W, fe), de = K(re.startIndex, De), Ae = Ce.getSections(de), at = une(o, Ae);
    let Oe, _e;
    if (at != null && o.isValid(at)) {
      const ye = KM(o, B, at, Ae, Ce.referenceDate, !0);
      Oe = Ce.getNewValuesFromNewActiveDate(ye), _e = !0;
    } else
      Oe = Ce.getNewValuesFromNewActiveDate(at), _e = (at != null && !o.isValid(at)) != (Ce.date != null && !o.isValid(Ce.date));
    return _e ? ie(x({}, Oe, {
      sections: de
    })) : te((ye) => x({}, ye, Oe, {
      sections: de,
      tempValueStrAndroid: null
    }));
  }, Me = (fe) => te((De) => x({}, De, {
    tempValueStrAndroid: fe
  }));
  return w.useEffect(() => {
    const fe = H(W.value);
    GM(fe, g), te((De) => x({}, De, {
      sections: fe
    }));
  }, [P, o.locale]), w.useEffect(() => {
    let fe = !1;
    f.areValuesEqual(o, W.value, M) ? fe = f.getTimezone(o, W.value) !== f.getTimezone(o, M) : fe = !0, fe && te((De) => x({}, De, {
      value: M,
      referenceValue: v.updateReferenceValue(o, M, De.referenceValue),
      sections: H(M)
    }));
  }, [M]), {
    state: W,
    selectedSectionIndexes: re,
    setSelectedSections: Q,
    clearValue: ne,
    clearActiveSection: se,
    updateSectionValue: qe,
    updateValueFromValueStr: Fe,
    setTempAndroidValueStr: Me,
    sectionsValueBoundaries: Y,
    placeholder: J,
    timezone: B
  };
}, Ene = 5e3, vf = (e) => e.saveQuery != null, Rne = ({
  sections: e,
  updateSectionValue: o,
  sectionsValueBoundaries: i,
  setTempAndroidValueStr: c,
  timezone: d
}) => {
  const p = to(), [f, v] = w.useState(null), g = St(() => v(null));
  w.useEffect(() => {
    var k;
    f != null && ((k = e[f.sectionIndex]) == null ? void 0 : k.type) !== f.sectionType && g();
  }, [e, f, g]), w.useEffect(() => {
    if (f != null) {
      const k = setTimeout(() => g(), Ene);
      return () => {
        window.clearTimeout(k);
      };
    }
    return () => {
    };
  }, [f, g]);
  const b = ({
    keyPressed: k,
    sectionIndex: $
  }, P, O) => {
    const I = k.toLowerCase(), _ = e[$];
    if (f != null && (!O || O(f.value)) && f.sectionIndex === $) {
      const V = `${f.value}${I}`, B = P(V, _);
      if (!vf(B))
        return v({
          sectionIndex: $,
          value: V,
          sectionType: _.type
        }), B;
    }
    const A = P(I, _);
    return vf(A) && !A.saveQuery ? (g(), null) : (v({
      sectionIndex: $,
      value: I,
      sectionType: _.type
    }), vf(A) ? null : A);
  }, S = (k) => {
    const $ = (I, _, A) => {
      const V = _.filter((B) => B.toLowerCase().startsWith(A));
      return V.length === 0 ? {
        saveQuery: !1
      } : {
        sectionValue: V[0],
        shouldGoToNextSection: V.length === 1
      };
    }, P = (I, _, A, V) => {
      const B = (M) => pL(p, d, _.type, M);
      if (_.contentType === "letter")
        return $(_.format, B(_.format), I);
      if (A && V != null && Zw(p, A).contentType === "letter") {
        const M = B(A), F = $(A, M, I);
        return vf(F) ? {
          saveQuery: !1
        } : x({}, F, {
          sectionValue: V(F.sectionValue, M)
        });
      }
      return {
        saveQuery: !1
      };
    };
    return b(k, (I, _) => {
      switch (_.type) {
        case "month": {
          const A = (V) => HM(p, V, p.formats.month, _.format);
          return P(I, _, p.formats.month, A);
        }
        case "weekDay": {
          const A = (V, B) => B.indexOf(V).toString();
          return P(I, _, p.formats.weekday, A);
        }
        case "meridiem":
          return P(I, _);
        default:
          return {
            saveQuery: !1
          };
      }
    });
  }, R = (k) => {
    const $ = (O, I) => {
      const _ = +`${O}`, A = i[I.type]({
        currentDate: null,
        format: I.format,
        contentType: I.contentType
      });
      if (_ > A.maximum)
        return {
          saveQuery: !1
        };
      if (_ < A.minimum)
        return {
          saveQuery: !0
        };
      const V = +`${O}0` > A.maximum || O.length === A.maximum.toString().length;
      return {
        sectionValue: mL(p, d, _, A, I),
        shouldGoToNextSection: V
      };
    };
    return b(k, (O, I) => {
      if (I.contentType === "digit" || I.contentType === "digit-with-letter")
        return $(O, I);
      if (I.type === "month") {
        const _ = gL(p, d, "digit", "month", "MM"), A = $(O, {
          type: I.type,
          format: "MM",
          hasLeadingZerosInFormat: _,
          hasLeadingZerosInInput: !0,
          contentType: "digit",
          maxLength: 2
        });
        if (vf(A))
          return A;
        const V = HM(p, A.sectionValue, "MM", I.format);
        return x({}, A, {
          sectionValue: V
        });
      }
      if (I.type === "weekDay") {
        const _ = $(O, I);
        if (vf(_))
          return _;
        const A = x0(p, d, I.format)[Number(_.sectionValue) - 1];
        return x({}, _, {
          sectionValue: A
        });
      }
      return {
        saveQuery: !1
      };
    }, (O) => !Number.isNaN(Number(O)));
  };
  return {
    applyCharacterEditing: St((k) => {
      const $ = e[k.sectionIndex], O = !Number.isNaN(Number(k.keyPressed)) ? R(k) : S(k);
      O == null ? c(null) : o({
        activeSection: $,
        newSectionValue: O.sectionValue,
        shouldGoToNextSection: O.shouldGoToNextSection
      });
    }),
    resetCharacterQuery: g
  };
};
function One(e, o) {
  return Array.isArray(o) ? o.every((i) => e.indexOf(i) !== -1) : e.indexOf(o) !== -1;
}
const kne = (e, o) => (i) => {
  (i.key === "Enter" || i.key === " ") && (e(i), i.preventDefault(), i.stopPropagation()), o && o(i);
}, ZC = (e = document) => {
  const o = e.activeElement;
  return o ? o.shadowRoot ? ZC(o.shadowRoot) : o : null;
}, Dne = "@media (pointer: fine)", Mne = ["onClick", "onKeyDown", "onFocus", "onBlur", "onMouseUp", "onPaste", "error", "clearable", "onClear", "disabled"], Nne = (e) => {
  const o = to(), {
    state: i,
    selectedSectionIndexes: c,
    setSelectedSections: d,
    clearValue: p,
    clearActiveSection: f,
    updateSectionValue: v,
    updateValueFromValueStr: g,
    setTempAndroidValueStr: b,
    sectionsValueBoundaries: S,
    placeholder: R,
    timezone: D
  } = wne(e), {
    inputRef: k,
    internalProps: $,
    internalProps: {
      readOnly: P = !1,
      unstableFieldRef: O,
      minutesStep: I
    },
    forwardedProps: {
      onClick: _,
      onKeyDown: A,
      onFocus: V,
      onBlur: B,
      onMouseUp: M,
      onPaste: F,
      error: Y,
      clearable: H,
      onClear: J,
      disabled: W
    },
    fieldValueManager: te,
    valueManager: Z,
    validator: q
  } = e, Q = ue(e.forwardedProps, Mne), {
    applyCharacterEditing: re,
    resetCharacterQuery: ie
  } = Rne({
    sections: i.sections,
    updateSectionValue: v,
    sectionsValueBoundaries: S,
    setTempAndroidValueStr: b,
    timezone: D
  }), K = w.useRef(null), ne = cn(k, K), se = w.useRef(void 0), qe = Mn().direction === "rtl", Me = w.useMemo(() => hne(i.sections, qe), [i.sections, qe]), fe = () => {
    var je;
    if (P) {
      d(null);
      return;
    }
    const Ve = (je = K.current.selectionStart) != null ? je : 0;
    let st;
    Ve <= i.sections[0].startInInput || Ve >= i.sections[i.sections.length - 1].endInInput ? st = 1 : st = i.sections.findIndex((Tt) => Tt.startInInput - Tt.startSeparator.length > Ve);
    const gt = st === -1 ? i.sections.length - 1 : st - 1;
    d(gt);
  }, De = St((je, ...Ve) => {
    je.isDefaultPrevented() || (_ == null || _(je, ...Ve), fe());
  }), be = St((je) => {
    M == null || M(je), je.preventDefault();
  }), Ce = St((...je) => {
    V == null || V(...je);
    const Ve = K.current;
    window.clearTimeout(se.current), se.current = setTimeout(() => {
      !Ve || Ve !== K.current || c != null || P || (// avoid selecting all sections when focusing empty field without value
      Ve.value.length && Number(Ve.selectionEnd) - Number(Ve.selectionStart) === Ve.value.length ? d("all") : fe());
    });
  }), de = St((...je) => {
    B == null || B(...je), d(null);
  }), Ae = St((je) => {
    if (F == null || F(je), P) {
      je.preventDefault();
      return;
    }
    const Ve = je.clipboardData.getData("text");
    if (c && c.startIndex === c.endIndex) {
      const st = i.sections[c.startIndex], gt = /^[a-zA-Z]+$/.test(Ve), Tt = /^[0-9]+$/.test(Ve), _t = /^(([a-zA-Z]+)|)([0-9]+)(([a-zA-Z]+)|)$/.test(Ve);
      if (st.contentType === "letter" && gt || st.contentType === "digit" && Tt || st.contentType === "digit-with-letter" && _t) {
        ie(), v({
          activeSection: st,
          newSectionValue: Ve,
          shouldGoToNextSection: !0
        }), je.preventDefault();
        return;
      }
      if (gt || Tt) {
        je.preventDefault();
        return;
      }
    }
    je.preventDefault(), ie(), g(Ve);
  }), at = St((je) => {
    if (P)
      return;
    const Ve = je.target.value;
    if (Ve === "") {
      ie(), p();
      return;
    }
    const st = je.nativeEvent.data, gt = st && st.length > 1, Tt = gt ? st : Ve, _t = Tf(Tt);
    if (c == null || gt) {
      g(gt ? st : _t);
      return;
    }
    let Zt;
    if (c.startIndex === 0 && c.endIndex === i.sections.length - 1 && _t.length === 1)
      Zt = _t;
    else {
      const Vt = Tf(te.getValueStrFromSections(i.sections, qe));
      let Te = -1, xe = -1;
      for (let Ze = 0; Ze < Vt.length; Ze += 1)
        Te === -1 && Vt[Ze] !== _t[Ze] && (Te = Ze), xe === -1 && Vt[Vt.length - Ze - 1] !== _t[_t.length - Ze - 1] && (xe = Ze);
      const ot = i.sections[c.startIndex];
      if (Te < ot.start || Vt.length - xe - 1 > ot.end)
        return;
      const it = _t.length - Vt.length + ot.end - Tf(ot.endSeparator || "").length;
      Zt = _t.slice(ot.start + Tf(ot.startSeparator || "").length, it);
    }
    if (Zt.length === 0) {
      mne() ? b(Tt) : (ie(), f());
      return;
    }
    re({
      keyPressed: Zt,
      sectionIndex: c.startIndex
    });
  }), Oe = St((je) => {
    switch (A == null || A(je), !0) {
      case (je.key === "a" && (je.ctrlKey || je.metaKey)): {
        je.preventDefault(), d("all");
        break;
      }
      case je.key === "ArrowRight": {
        if (je.preventDefault(), c == null)
          d(Me.startIndex);
        else if (c.startIndex !== c.endIndex)
          d(c.endIndex);
        else {
          const Ve = Me.neighbors[c.startIndex].rightIndex;
          Ve !== null && d(Ve);
        }
        break;
      }
      case je.key === "ArrowLeft": {
        if (je.preventDefault(), c == null)
          d(Me.endIndex);
        else if (c.startIndex !== c.endIndex)
          d(c.startIndex);
        else {
          const Ve = Me.neighbors[c.startIndex].leftIndex;
          Ve !== null && d(Ve);
        }
        break;
      }
      case je.key === "Delete": {
        if (je.preventDefault(), P)
          break;
        c == null || c.startIndex === 0 && c.endIndex === i.sections.length - 1 ? p() : f(), ie();
        break;
      }
      case ["ArrowUp", "ArrowDown", "Home", "End", "PageUp", "PageDown"].includes(je.key): {
        if (je.preventDefault(), P || c == null)
          break;
        const Ve = i.sections[c.startIndex], st = te.getActiveDateManager(o, i, Ve), gt = sne(o, D, Ve, je.key, S, st.date, {
          minutesStep: I
        });
        v({
          activeSection: Ve,
          newSectionValue: gt,
          shouldGoToNextSection: !1
        });
        break;
      }
    }
  });
  so(() => {
    if (!K.current)
      return;
    if (c == null) {
      K.current.scrollLeft && (K.current.scrollLeft = 0);
      return;
    }
    const je = i.sections[c.startIndex], Ve = i.sections[c.endIndex];
    let st = je.startInInput, gt = Ve.endInInput;
    if (c.shouldSelectBoundarySelectors && (st -= je.startSeparator.length, gt += Ve.endSeparator.length), st !== K.current.selectionStart || gt !== K.current.selectionEnd) {
      const Tt = K.current.scrollTop;
      K.current === ZC(document) && K.current.setSelectionRange(st, gt), K.current.scrollTop = Tt;
    }
  });
  const _e = SL(x({}, $, {
    value: i.value,
    timezone: D
  }), q, Z.isSameError, Z.defaultErrorState), ye = w.useMemo(() => Y !== void 0 ? Y : Z.hasError(_e), [Z, _e, Y]);
  w.useEffect(() => {
    !ye && !c && ie();
  }, [i.referenceValue, c, ye]), w.useEffect(() => (K.current && K.current === document.activeElement && d("all"), () => window.clearTimeout(se.current)), []), w.useEffect(() => {
    i.tempValueStrAndroid != null && c != null && (ie(), f());
  }, [i.tempValueStrAndroid]);
  const ae = w.useMemo(() => {
    var je;
    return (je = i.tempValueStrAndroid) != null ? je : te.getValueStrFromSections(i.sections, qe);
  }, [i.sections, te, i.tempValueStrAndroid, qe]), $e = w.useMemo(() => c == null || i.sections[c.startIndex].contentType === "letter" ? "text" : "numeric", [c, i.sections]), Se = K.current && K.current === ZC(document), mt = Z.areValuesEqual(o, i.value, Z.emptyValue), Be = !Se && mt;
  w.useImperativeHandle(O, () => ({
    getSections: () => i.sections,
    getActiveSectionIndex: () => {
      var je, Ve;
      const st = (je = K.current.selectionStart) != null ? je : 0, gt = (Ve = K.current.selectionEnd) != null ? Ve : 0;
      if (st === 0 && gt === 0)
        return null;
      const Tt = st <= i.sections[0].startInInput ? 1 : i.sections.findIndex((_t) => _t.startInInput - _t.startSeparator.length > st);
      return Tt === -1 ? i.sections.length - 1 : Tt - 1;
    },
    setSelectedSections: (je) => d(je)
  }));
  const ft = St((je, ...Ve) => {
    var st;
    je.preventDefault(), J == null || J(je, ...Ve), p(), K == null || (st = K.current) == null || st.focus(), d(0);
  });
  return x({
    placeholder: R,
    autoComplete: "off",
    disabled: !!W
  }, Q, {
    value: Be ? "" : ae,
    inputMode: $e,
    readOnly: P,
    onClick: De,
    onFocus: Ce,
    onBlur: de,
    onPaste: Ae,
    onChange: at,
    onKeyDown: Oe,
    onMouseUp: be,
    onClear: ft,
    error: ye,
    ref: ne,
    clearable: !!(H && !mt && !P && !W)
  });
}, S0 = ({
  props: e,
  value: o,
  adapter: i
}) => {
  if (o === null)
    return null;
  const {
    shouldDisableDate: c,
    shouldDisableMonth: d,
    shouldDisableYear: p,
    disablePast: f,
    disableFuture: v,
    timezone: g
  } = e, b = i.utils.dateWithTimezone(void 0, g), S = vi(i.utils, e.minDate, i.defaultDates.minDate), R = vi(i.utils, e.maxDate, i.defaultDates.maxDate);
  switch (!0) {
    case !i.utils.isValid(o):
      return "invalidDate";
    case !!(c && c(o)):
      return "shouldDisableDate";
    case !!(d && d(o)):
      return "shouldDisableMonth";
    case !!(p && p(o)):
      return "shouldDisableYear";
    case !!(v && i.utils.isAfterDay(o, b)):
      return "disableFuture";
    case !!(f && i.utils.isBeforeDay(o, b)):
      return "disablePast";
    case !!(S && i.utils.isBeforeDay(o, S)):
      return "minDate";
    case !!(R && i.utils.isAfterDay(o, R)):
      return "maxDate";
    default:
      return null;
  }
}, G1 = ["disablePast", "disableFuture", "minDate", "maxDate", "shouldDisableDate", "shouldDisableMonth", "shouldDisableYear"], q1 = ["disablePast", "disableFuture", "minTime", "maxTime", "shouldDisableClock", "shouldDisableTime", "minutesStep", "ampm", "disableIgnoringDatePartForTimeValidation"], TL = ["minDateTime", "maxDateTime"], Pne = [...G1, ...q1, ...TL], wL = (e) => Pne.reduce((o, i) => (e.hasOwnProperty(i) && (o[i] = e[i]), o), {}), $ne = ["value", "defaultValue", "referenceDate", "format", "formatDensity", "onChange", "timezone", "readOnly", "onError", "shouldRespectLeadingZeros", "selectedSections", "onSelectedSectionsChange", "unstableFieldRef"], Ine = (e, o) => {
  const i = x({}, e), c = {}, d = (p) => {
    i.hasOwnProperty(p) && (c[p] = i[p], delete i[p]);
  };
  return $ne.forEach(d), o === "date" ? G1.forEach(d) : o === "time" ? q1.forEach(d) : o === "date-time" && (G1.forEach(d), q1.forEach(d), TL.forEach(d)), {
    forwardedProps: i,
    internalProps: c
  };
}, Lne = (e) => {
  var o, i, c;
  const d = to(), p = Jv();
  return x({}, e, {
    disablePast: (o = e.disablePast) != null ? o : !1,
    disableFuture: (i = e.disableFuture) != null ? i : !1,
    format: (c = e.format) != null ? c : d.formats.keyboardDate,
    minDate: vi(d, e.minDate, p.minDate),
    maxDate: vi(d, e.maxDate, p.maxDate)
  });
}, Ane = ({
  props: e,
  inputRef: o
}) => {
  const i = Lne(e), {
    forwardedProps: c,
    internalProps: d
  } = Ine(i, "date");
  return Nne({
    inputRef: o,
    forwardedProps: c,
    internalProps: d,
    valueManager: Al,
    fieldValueManager: gne,
    validator: S0,
    valueType: "date"
  });
}, _ne = ee(H9)({
  [`& .${Tv.container}`]: {
    outline: 0
  },
  [`& .${Tv.paper}`]: {
    outline: 0,
    minWidth: C0
  }
}), Bne = ee(a7)({
  "&:first-of-type": {
    padding: 0
  }
});
function zne(e) {
  var o, i;
  const {
    children: c,
    onDismiss: d,
    open: p,
    slots: f,
    slotProps: v
  } = e, g = (o = f == null ? void 0 : f.dialog) != null ? o : _ne, b = (i = f == null ? void 0 : f.mobileTransition) != null ? i : _f;
  return /* @__PURE__ */ z(g, x({
    open: p,
    onClose: d
  }, v == null ? void 0 : v.dialog, {
    TransitionComponent: b,
    TransitionProps: v == null ? void 0 : v.mobileTransition,
    PaperComponent: f == null ? void 0 : f.mobilePaper,
    PaperProps: v == null ? void 0 : v.mobilePaper,
    children: /* @__PURE__ */ z(Bne, {
      children: c
    })
  }));
}
function Vne(e) {
  return We("MuiPickersPopper", e);
}
Ge("MuiPickersPopper", ["root", "paper"]);
const Fne = "@media (prefers-reduced-motion: reduce)", Ef = typeof navigator < "u" && navigator.userAgent.match(/android\s(\d+)|OS\s(\d+)/i), QM = Ef && Ef[1] ? parseInt(Ef[1], 10) : null, XM = Ef && Ef[2] ? parseInt(Ef[2], 10) : null, jne = QM && QM < 10 || XM && XM < 13 || !1, EL = () => Z1(Fne, {
  defaultMatches: !1
}) || jne, Une = ["PaperComponent", "popperPlacement", "ownerState", "children", "paperSlotProps", "paperClasses", "onPaperClick", "onPaperTouchStart"], Hne = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"],
    paper: ["paper"]
  }, Vne, o);
}, Wne = ee(Qv, {
  name: "MuiPickersPopper",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})(({
  theme: e
}) => ({
  zIndex: e.zIndex.modal
})), Yne = ee(Ya, {
  name: "MuiPickersPopper",
  slot: "Paper",
  overridesResolver: (e, o) => o.paper
})(({
  ownerState: e
}) => x({
  outline: 0,
  transformOrigin: "top center"
}, e.placement.includes("top") && {
  transformOrigin: "bottom center"
}));
function Gne(e, o) {
  return o.documentElement.clientWidth < e.clientX || o.documentElement.clientHeight < e.clientY;
}
function qne(e, o) {
  const i = w.useRef(!1), c = w.useRef(!1), d = w.useRef(null), p = w.useRef(!1);
  w.useEffect(() => {
    if (!e)
      return;
    function g() {
      p.current = !0;
    }
    return document.addEventListener("mousedown", g, !0), document.addEventListener("touchstart", g, !0), () => {
      document.removeEventListener("mousedown", g, !0), document.removeEventListener("touchstart", g, !0), p.current = !1;
    };
  }, [e]);
  const f = St((g) => {
    if (!p.current)
      return;
    const b = c.current;
    c.current = !1;
    const S = Dn(d.current);
    if (!d.current || // is a TouchEvent?
    "clientX" in g && Gne(g, S))
      return;
    if (i.current) {
      i.current = !1;
      return;
    }
    let R;
    g.composedPath ? R = g.composedPath().indexOf(d.current) > -1 : R = !S.documentElement.contains(g.target) || d.current.contains(g.target), !R && !b && o(g);
  }), v = () => {
    c.current = !0;
  };
  return w.useEffect(() => {
    if (e) {
      const g = Dn(d.current), b = () => {
        i.current = !0;
      };
      return g.addEventListener("touchstart", f), g.addEventListener("touchmove", b), () => {
        g.removeEventListener("touchstart", f), g.removeEventListener("touchmove", b);
      };
    }
  }, [e, f]), w.useEffect(() => {
    if (e) {
      const g = Dn(d.current);
      return g.addEventListener("click", f), () => {
        g.removeEventListener("click", f), c.current = !1;
      };
    }
  }, [e, f]), [d, v, v];
}
const Kne = /* @__PURE__ */ w.forwardRef((e, o) => {
  const {
    PaperComponent: i,
    popperPlacement: c,
    ownerState: d,
    children: p,
    paperSlotProps: f,
    paperClasses: v,
    onPaperClick: g,
    onPaperTouchStart: b
    // picks up the style props provided by `Transition`
    // https://mui.com/material-ui/transitions/#child-requirement
  } = e, S = ue(e, Une), R = x({}, d, {
    placement: c
  }), D = ln({
    elementType: i,
    externalSlotProps: f,
    additionalProps: {
      tabIndex: -1,
      elevation: 8,
      ref: o
    },
    className: v,
    ownerState: R
  });
  return /* @__PURE__ */ z(i, x({}, S, D, {
    onClick: (k) => {
      var $;
      g(k), ($ = D.onClick) == null || $.call(D, k);
    },
    onTouchStart: (k) => {
      var $;
      b(k), ($ = D.onTouchStart) == null || $.call(D, k);
    },
    ownerState: R,
    children: p
  }));
});
function Qne(e) {
  var o, i, c, d;
  const p = Ue({
    props: e,
    name: "MuiPickersPopper"
  }), {
    anchorEl: f,
    children: v,
    containerRef: g = null,
    shouldRestoreFocus: b,
    onBlur: S,
    onDismiss: R,
    open: D,
    role: k,
    placement: $,
    slots: P,
    slotProps: O,
    reduceAnimations: I
  } = p;
  w.useEffect(() => {
    function ne(se) {
      D && (se.key === "Escape" || se.key === "Esc") && R();
    }
    return document.addEventListener("keydown", ne), () => {
      document.removeEventListener("keydown", ne);
    };
  }, [R, D]);
  const _ = w.useRef(null);
  w.useEffect(() => {
    k === "tooltip" || b && !b() || (D ? _.current = ZC(document) : _.current && _.current instanceof HTMLElement && setTimeout(() => {
      _.current instanceof HTMLElement && _.current.focus();
    }));
  }, [D, k, b]);
  const [A, V, B] = qne(D, S ?? R), M = w.useRef(null), F = cn(M, g), Y = cn(F, A), H = p, J = Hne(H), W = EL(), te = I ?? W, Z = (ne) => {
    ne.key === "Escape" && (ne.stopPropagation(), R());
  }, q = ((o = P == null ? void 0 : P.desktopTransition) != null ? o : te) ? _f : Bv, Q = (i = P == null ? void 0 : P.desktopTrapFocus) != null ? i : $v, re = (c = P == null ? void 0 : P.desktopPaper) != null ? c : Yne, ie = (d = P == null ? void 0 : P.popper) != null ? d : Wne, K = ln({
    elementType: ie,
    externalSlotProps: O == null ? void 0 : O.popper,
    additionalProps: {
      transition: !0,
      role: k,
      open: D,
      anchorEl: f,
      placement: $,
      onKeyDown: Z
    },
    className: J.root,
    ownerState: p
  });
  return /* @__PURE__ */ z(ie, x({}, K, {
    children: ({
      TransitionProps: ne,
      placement: se
    }) => /* @__PURE__ */ z(Q, x({
      open: D,
      disableAutoFocus: !0,
      disableRestoreFocus: !0,
      disableEnforceFocus: k === "tooltip",
      isEnabled: () => !0
    }, O == null ? void 0 : O.desktopTrapFocus, {
      children: /* @__PURE__ */ z(q, x({}, ne, O == null ? void 0 : O.desktopTransition, {
        children: /* @__PURE__ */ z(Kne, {
          PaperComponent: re,
          ownerState: H,
          popperPlacement: se,
          ref: Y,
          onPaperClick: V,
          onPaperTouchStart: B,
          paperClasses: J.paper,
          paperSlotProps: O == null ? void 0 : O.desktopPaper,
          children: v
        })
      }))
    }))
  }));
}
function Xne(e) {
  return We("MuiPickersToolbar", e);
}
Ge("MuiPickersToolbar", ["root", "content"]);
const Zne = (e) => {
  const {
    classes: o,
    isLandscape: i
  } = e;
  return Ye({
    root: ["root"],
    content: ["content"],
    penIconButton: ["penIconButton", i && "penIconButtonLandscape"]
  }, Xne, o);
}, Jne = ee("div", {
  name: "MuiPickersToolbar",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})(({
  theme: e,
  ownerState: o
}) => x({
  display: "flex",
  flexDirection: "column",
  alignItems: "flex-start",
  justifyContent: "space-between",
  padding: e.spacing(2, 3)
}, o.isLandscape && {
  height: "auto",
  maxWidth: 160,
  padding: 16,
  justifyContent: "flex-start",
  flexWrap: "wrap"
})), eoe = ee("div", {
  name: "MuiPickersToolbar",
  slot: "Content",
  overridesResolver: (e, o) => o.content
})(({
  ownerState: e
}) => {
  var o;
  return {
    display: "flex",
    flexWrap: "wrap",
    width: "100%",
    justifyContent: e.isLandscape ? "flex-start" : "space-between",
    flexDirection: e.isLandscape ? (o = e.landscapeDirection) != null ? o : "column" : "row",
    flex: 1,
    alignItems: e.isLandscape ? "flex-start" : "center"
  };
}), toe = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiPickersToolbar"
  }), {
    children: d,
    className: p,
    toolbarTitle: f,
    hidden: v,
    titleId: g
  } = c, b = c, S = Zne(b);
  return v ? null : /* @__PURE__ */ ht(Jne, {
    ref: i,
    className: ve(S.root, p),
    ownerState: b,
    children: [/* @__PURE__ */ z(wo, {
      color: "text.secondary",
      variant: "overline",
      id: g,
      children: f
    }), /* @__PURE__ */ z(eoe, {
      className: S.content,
      ownerState: b,
      children: d
    })]
  });
}), noe = ({
  open: e,
  onOpen: o,
  onClose: i
}) => {
  const c = w.useRef(typeof e == "boolean").current, [d, p] = w.useState(!1);
  w.useEffect(() => {
    if (c) {
      if (typeof e != "boolean")
        throw new Error("You must not mix controlling and uncontrolled mode for `open` prop");
      p(e);
    }
  }, [c, e]);
  const f = w.useCallback((v) => {
    c || p(v), v && o && o(), !v && i && i();
  }, [c, o, i]);
  return {
    isOpen: d,
    setIsOpen: f
  };
}, ooe = (e) => {
  const {
    action: o,
    hasChanged: i,
    dateState: c,
    isControlled: d
  } = e, p = !d && !c.hasBeenModifiedSinceMount;
  return o.name === "setValueFromField" ? !0 : o.name === "setValueFromAction" ? p && ["accept", "today", "clear"].includes(o.pickerAction) ? !0 : i(c.lastPublishedValue) : o.name === "setValueFromView" && o.selectionState !== "shallow" || o.name === "setValueFromShortcut" ? p ? !0 : i(c.lastPublishedValue) : !1;
}, roe = (e) => {
  const {
    action: o,
    hasChanged: i,
    dateState: c,
    isControlled: d,
    closeOnSelect: p
  } = e, f = !d && !c.hasBeenModifiedSinceMount;
  return o.name === "setValueFromAction" ? f && ["accept", "today", "clear"].includes(o.pickerAction) ? !0 : i(c.lastCommittedValue) : o.name === "setValueFromView" && o.selectionState === "finish" && p ? f ? !0 : i(c.lastCommittedValue) : o.name === "setValueFromShortcut" ? o.changeImportance === "accept" && i(c.lastCommittedValue) : !1;
}, aoe = (e) => {
  const {
    action: o,
    closeOnSelect: i
  } = e;
  return o.name === "setValueFromAction" ? !0 : o.name === "setValueFromView" ? o.selectionState === "finish" && i : o.name === "setValueFromShortcut" ? o.changeImportance === "accept" : !1;
}, ioe = ({
  props: e,
  valueManager: o,
  valueType: i,
  wrapperVariant: c,
  validator: d
}) => {
  const {
    onAccept: p,
    onChange: f,
    value: v,
    defaultValue: g,
    closeOnSelect: b = c === "desktop",
    selectedSections: S,
    onSelectedSectionsChange: R,
    timezone: D
  } = e, {
    current: k
  } = w.useRef(g), {
    current: $
  } = w.useRef(v !== void 0);
  process.env.NODE_ENV !== "production" && (w.useEffect(() => {
    $ !== (v !== void 0) && console.error([`MUI: A component is changing the ${$ ? "" : "un"}controlled value of a picker to be ${$ ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", "Decide between using a controlled or uncontrolled valuefor the lifetime of the component.", "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
  }, [v]), w.useEffect(() => {
    !$ && k !== g && console.error(["MUI: A component is changing the defaultValue of an uncontrolled picker after being initialized. To suppress this warning opt to use a controlled value."].join(`
`));
  }, [JSON.stringify(k)]));
  const P = to(), O = Cd(), [I, _] = Eo({
    controlled: S,
    default: null,
    name: "usePickerValue",
    state: "selectedSections"
  }), {
    isOpen: A,
    setIsOpen: V
  } = noe(e), [B, M] = w.useState(() => {
    let Ce;
    return v !== void 0 ? Ce = v : k !== void 0 ? Ce = k : Ce = o.emptyValue, {
      draft: Ce,
      lastPublishedValue: Ce,
      lastCommittedValue: Ce,
      lastControlledValue: v,
      hasBeenModifiedSinceMount: !1
    };
  }), {
    timezone: F,
    handleValueChange: Y
  } = Qw({
    timezone: D,
    value: v,
    defaultValue: k,
    onChange: f,
    valueManager: o
  });
  SL(x({}, e, {
    value: B.draft,
    timezone: F
  }), d, o.isSameError, o.defaultErrorState);
  const H = St((Ce) => {
    const de = {
      action: Ce,
      dateState: B,
      hasChanged: (_e) => !o.areValuesEqual(P, Ce.value, _e),
      isControlled: $,
      closeOnSelect: b
    }, Ae = ooe(de), at = roe(de), Oe = aoe(de);
    if (M((_e) => x({}, _e, {
      draft: Ce.value,
      lastPublishedValue: Ae ? Ce.value : _e.lastPublishedValue,
      lastCommittedValue: at ? Ce.value : _e.lastCommittedValue,
      hasBeenModifiedSinceMount: !0
    })), Ae) {
      const ye = {
        validationError: Ce.name === "setValueFromField" ? Ce.context.validationError : d({
          adapter: O,
          value: Ce.value,
          props: x({}, e, {
            value: Ce.value,
            timezone: F
          })
        })
      };
      Ce.name === "setValueFromShortcut" && Ce.shortcut != null && (ye.shortcut = Ce.shortcut), Y(Ce.value, ye);
    }
    at && p && p(Ce.value), Oe && V(!1);
  });
  if (v !== void 0 && (B.lastControlledValue === void 0 || !o.areValuesEqual(P, B.lastControlledValue, v))) {
    const Ce = o.areValuesEqual(P, B.draft, v);
    M((de) => x({}, de, {
      lastControlledValue: v
    }, Ce ? {} : {
      lastCommittedValue: v,
      lastPublishedValue: v,
      draft: v,
      hasBeenModifiedSinceMount: !0
    }));
  }
  const J = St(() => {
    H({
      value: o.emptyValue,
      name: "setValueFromAction",
      pickerAction: "clear"
    });
  }), W = St(() => {
    H({
      value: B.lastPublishedValue,
      name: "setValueFromAction",
      pickerAction: "accept"
    });
  }), te = St(() => {
    H({
      value: B.lastPublishedValue,
      name: "setValueFromAction",
      pickerAction: "dismiss"
    });
  }), Z = St(() => {
    H({
      value: B.lastCommittedValue,
      name: "setValueFromAction",
      pickerAction: "cancel"
    });
  }), q = St(() => {
    H({
      value: o.getTodayValue(P, F, i),
      name: "setValueFromAction",
      pickerAction: "today"
    });
  }), Q = St(() => V(!0)), re = St(() => V(!1)), ie = St((Ce, de = "partial") => H({
    name: "setValueFromView",
    value: Ce,
    selectionState: de
  })), K = St((Ce, de, Ae) => H({
    name: "setValueFromShortcut",
    value: Ce,
    changeImportance: de ?? "accept",
    shortcut: Ae
  })), ne = St((Ce, de) => H({
    name: "setValueFromField",
    value: Ce,
    context: de
  })), se = St((Ce) => {
    _(Ce), R == null || R(Ce);
  }), Fe = {
    onClear: J,
    onAccept: W,
    onDismiss: te,
    onCancel: Z,
    onSetToday: q,
    onOpen: Q,
    onClose: re
  }, qe = {
    value: B.draft,
    onChange: ne,
    selectedSections: I,
    onSelectedSectionsChange: se
  }, Me = w.useMemo(() => o.cleanValue(P, B.draft), [P, o, B.draft]), fe = {
    value: Me,
    onChange: ie,
    onClose: re,
    open: A,
    onSelectedSectionsChange: se
  }, be = x({}, Fe, {
    value: Me,
    onChange: ie,
    onSelectShortcut: K,
    isValid: (Ce) => {
      const de = d({
        adapter: O,
        value: Ce,
        props: x({}, e, {
          value: Ce,
          timezone: F
        })
      });
      return !o.hasError(de);
    }
  });
  return {
    open: A,
    fieldProps: qe,
    viewProps: fe,
    layoutProps: be,
    actions: Fe
  };
}, soe = ["className", "sx"], loe = ({
  props: e,
  propsFromPickerValue: o,
  additionalViewProps: i,
  inputRef: c,
  autoFocusView: d
}) => {
  const {
    onChange: p,
    open: f,
    onSelectedSectionsChange: v,
    onClose: g
  } = o, {
    views: b,
    openTo: S,
    onViewChange: R,
    disableOpenPicker: D,
    viewRenderers: k,
    timezone: $
  } = e, P = ue(e, soe), {
    view: O,
    setView: I,
    defaultView: _,
    focusedView: A,
    setFocusedView: V,
    setValueAndGoToNextView: B
  } = uL({
    view: void 0,
    views: b,
    openTo: S,
    onChange: p,
    onViewChange: R,
    autoFocus: d
  }), {
    hasUIView: M,
    viewModeLookup: F
  } = w.useMemo(() => b.reduce((q, Q) => {
    let re;
    return D ? re = "field" : k[Q] != null ? re = "UI" : re = "field", q.viewModeLookup[Q] = re, re === "UI" && (q.hasUIView = !0), q;
  }, {
    hasUIView: !1,
    viewModeLookup: {}
  }), [D, k, b]), Y = w.useMemo(() => b.reduce((q, Q) => k[Q] != null && qte(Q) ? q + 1 : q, 0), [k, b]), H = F[O], J = St(() => H === "UI"), [W, te] = w.useState(H === "UI" ? O : null);
  return W !== O && F[O] === "UI" && te(O), so(() => {
    H === "field" && f && (g(), setTimeout(() => {
      c == null || c.current.focus(), v(O);
    }));
  }, [O]), so(() => {
    if (!f)
      return;
    let q = O;
    H === "field" && W != null && (q = W), q !== _ && F[q] === "UI" && F[_] === "UI" && (q = _), q !== O && I(q), V(q, !0);
  }, [f]), {
    hasUIView: M,
    shouldRestoreFocus: J,
    layoutProps: {
      views: b,
      view: W,
      onViewChange: I
    },
    renderCurrentView: () => {
      if (W == null)
        return null;
      const q = k[W];
      return q == null ? null : q(x({}, P, i, o, {
        views: b,
        timezone: $,
        onChange: B,
        view: W,
        onViewChange: I,
        focusedView: A,
        onFocusedViewChange: V,
        showViewSwitcher: Y > 1,
        timeViewsCount: Y
      }));
    }
  };
};
function ZM() {
  return typeof window > "u" ? "portrait" : window.screen && window.screen.orientation && window.screen.orientation.angle ? Math.abs(window.screen.orientation.angle) === 90 ? "landscape" : "portrait" : window.orientation && Math.abs(Number(window.orientation)) === 90 ? "landscape" : "portrait";
}
const coe = (e, o) => {
  const [i, c] = w.useState(ZM);
  return so(() => {
    const p = () => {
      c(ZM());
    };
    return window.addEventListener("orientationchange", p), () => {
      window.removeEventListener("orientationchange", p);
    };
  }, []), One(e, ["hours", "minutes", "seconds"]) ? !1 : (o || i) === "landscape";
}, uoe = ({
  props: e,
  propsFromPickerValue: o,
  propsFromPickerViews: i,
  wrapperVariant: c
}) => {
  const {
    orientation: d
  } = e, p = coe(i.views, d);
  return {
    layoutProps: x({}, i, o, {
      isLandscape: p,
      wrapperVariant: c,
      disabled: e.disabled,
      readOnly: e.readOnly
    })
  };
}, RL = (e, o = "warning") => {
  let i = !1;
  const c = Array.isArray(e) ? e.join(`
`) : e;
  return () => {
    i || (i = !0, o === "error" ? console.error(c) : console.warn(c));
  };
}, doe = RL(["The `renderInput` prop has been removed in version 6.0 of the Date and Time Pickers.", "You can replace it with the `textField` component slot in most cases.", "For more information, please have a look at the migration guide (https://mui.com/x/migration/migration-pickers-v5/#input-renderer-required-in-v5)."]), OL = ({
  props: e,
  valueManager: o,
  valueType: i,
  wrapperVariant: c,
  inputRef: d,
  additionalViewProps: p,
  validator: f,
  autoFocusView: v
}) => {
  process.env.NODE_ENV !== "production" && e.renderInput != null && doe();
  const g = ioe({
    props: e,
    valueManager: o,
    valueType: i,
    wrapperVariant: c,
    validator: f
  }), b = loe({
    props: e,
    inputRef: d,
    additionalViewProps: p,
    autoFocusView: v,
    propsFromPickerValue: g.viewProps
  }), S = uoe({
    props: e,
    wrapperVariant: c,
    propsFromPickerValue: g.layoutProps,
    propsFromPickerViews: b.layoutProps
  });
  return {
    // Picker value
    open: g.open,
    actions: g.actions,
    fieldProps: g.fieldProps,
    // Picker views
    renderCurrentView: b.renderCurrentView,
    hasUIView: b.hasUIView,
    shouldRestoreFocus: b.shouldRestoreFocus,
    // Picker layout
    layoutProps: S.layoutProps
  };
};
function kL(e) {
  return We("MuiPickersLayout", e);
}
const R1 = Ge("MuiPickersLayout", ["root", "landscape", "contentWrapper", "toolbar", "actionBar", "tabs", "shortcuts"]), poe = ["onAccept", "onClear", "onCancel", "onSetToday", "actions"];
function DL(e) {
  const {
    onAccept: o,
    onClear: i,
    onCancel: c,
    onSetToday: d,
    actions: p
  } = e, f = ue(e, poe), v = Zc();
  if (p == null || p.length === 0)
    return null;
  const g = p == null ? void 0 : p.map((b) => {
    switch (b) {
      case "clear":
        return /* @__PURE__ */ z(mC, {
          onClick: i,
          children: v.clearButtonLabel
        }, b);
      case "cancel":
        return /* @__PURE__ */ z(mC, {
          onClick: c,
          children: v.cancelButtonLabel
        }, b);
      case "accept":
        return /* @__PURE__ */ z(mC, {
          onClick: o,
          children: v.okButtonLabel
        }, b);
      case "today":
        return /* @__PURE__ */ z(mC, {
          onClick: d,
          children: v.todayButtonLabel
        }, b);
      default:
        return null;
    }
  });
  return /* @__PURE__ */ z(Q9, x({}, f, {
    children: g
  }));
}
process.env.NODE_ENV !== "production" && (DL.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Ordered array of actions to display.
   * If empty, does not display that action bar.
   * @default `['cancel', 'accept']` for mobile and `[]` for desktop
   */
  actions: t.arrayOf(t.oneOf(["accept", "cancel", "clear", "today"]).isRequired),
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: t.bool,
  onAccept: t.func.isRequired,
  onCancel: t.func.isRequired,
  onClear: t.func.isRequired,
  onSetToday: t.func.isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const foe = ["items", "changeImportance", "isLandscape", "onChange", "isValid"], moe = ["getValue"];
function ML(e) {
  const {
    items: o,
    changeImportance: i,
    onChange: c,
    isValid: d
  } = e, p = ue(e, foe);
  if (o == null || o.length === 0)
    return null;
  const f = o.map((v) => {
    let {
      getValue: g
    } = v, b = ue(v, moe);
    const S = g({
      isValid: d
    });
    return {
      label: b.label,
      onClick: () => {
        c(S, i, b);
      },
      disabled: !d(S)
    };
  });
  return /* @__PURE__ */ z(z$, x({
    dense: !0,
    sx: [{
      maxHeight: Gw,
      maxWidth: 200,
      overflow: "auto"
    }, ...Array.isArray(p.sx) ? p.sx : [p.sx]]
  }, p, {
    children: f.map((v) => /* @__PURE__ */ z(Dq, {
      children: /* @__PURE__ */ z(CP, x({}, v))
    }, v.label))
  }));
}
process.env.NODE_ENV !== "production" && (ML.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Importance of the change when picking a shortcut:
   * - "accept": fires `onChange`, fires `onAccept` and closes the picker.
   * - "set": fires `onChange` but do not fire `onAccept` and does not close the picker.
   * @default "accept"
   */
  changeImportance: t.oneOf(["accept", "set"]),
  className: t.string,
  component: t.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: t.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: t.bool,
  isLandscape: t.bool.isRequired,
  isValid: t.func.isRequired,
  /**
   * Ordered array of shortcuts to display.
   * If empty, does not display the shortcuts.
   * @default `[]`
   */
  items: t.arrayOf(t.shape({
    getValue: t.func.isRequired,
    label: t.string.isRequired
  })),
  onChange: t.func.isRequired,
  style: t.object,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
function hoe(e) {
  return e.view !== null;
}
const voe = (e) => {
  const {
    classes: o,
    isLandscape: i
  } = e;
  return Ye({
    root: ["root", i && "landscape"],
    contentWrapper: ["contentWrapper"],
    toolbar: ["toolbar"],
    actionBar: ["actionBar"],
    tabs: ["tabs"],
    landscape: ["landscape"],
    shortcuts: ["shortcuts"]
  }, kL, o);
}, goe = (e) => {
  var o, i;
  const {
    wrapperVariant: c,
    onAccept: d,
    onClear: p,
    onCancel: f,
    onSetToday: v,
    view: g,
    views: b,
    onViewChange: S,
    value: R,
    onChange: D,
    onSelectShortcut: k,
    isValid: $,
    isLandscape: P,
    disabled: O,
    readOnly: I,
    children: _,
    components: A,
    componentsProps: V,
    slots: B,
    slotProps: M
    // TODO: Remove this "as" hack. It get introduced to mark `value` prop in PickersLayoutProps as not required.
    // The true type should be
    // - For pickers value: TDate | null
    // - For range pickers value: [TDate | null, TDate | null]
  } = e, F = B ?? yL(A), Y = M ?? V, H = voe(e), J = (o = F == null ? void 0 : F.actionBar) != null ? o : DL, W = ln({
    elementType: J,
    externalSlotProps: Y == null ? void 0 : Y.actionBar,
    additionalProps: {
      onAccept: d,
      onClear: p,
      onCancel: f,
      onSetToday: v,
      actions: c === "desktop" ? [] : ["cancel", "accept"],
      className: H.actionBar
    },
    ownerState: x({}, e, {
      wrapperVariant: c
    })
  }), te = /* @__PURE__ */ z(J, x({}, W)), Z = F == null ? void 0 : F.toolbar, q = ln({
    elementType: Z,
    externalSlotProps: Y == null ? void 0 : Y.toolbar,
    additionalProps: {
      isLandscape: P,
      onChange: D,
      value: R,
      view: g,
      onViewChange: S,
      views: b,
      disabled: O,
      readOnly: I,
      className: H.toolbar
    },
    ownerState: x({}, e, {
      wrapperVariant: c
    })
  }), Q = hoe(q) && Z ? /* @__PURE__ */ z(Z, x({}, q)) : null, re = _, ie = F == null ? void 0 : F.tabs, K = g && ie ? /* @__PURE__ */ z(ie, x({
    view: g,
    onViewChange: S,
    className: H.tabs
  }, Y == null ? void 0 : Y.tabs)) : null, ne = (i = F == null ? void 0 : F.shortcuts) != null ? i : ML, se = ln({
    elementType: ne,
    externalSlotProps: Y == null ? void 0 : Y.shortcuts,
    additionalProps: {
      isValid: $,
      isLandscape: P,
      onChange: k,
      className: H.shortcuts
    },
    ownerState: {
      isValid: $,
      isLandscape: P,
      onChange: k,
      className: H.shortcuts,
      wrapperVariant: c
    }
  }), Fe = g && ne ? /* @__PURE__ */ z(ne, x({}, se)) : null;
  return {
    toolbar: Q,
    content: re,
    tabs: K,
    actionBar: te,
    shortcuts: Fe
  };
}, yoe = goe, boe = (e) => {
  const {
    isLandscape: o,
    classes: i
  } = e;
  return Ye({
    root: ["root", o && "landscape"],
    contentWrapper: ["contentWrapper"]
  }, kL, i);
}, NL = ee("div", {
  name: "MuiPickersLayout",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})(({
  theme: e,
  ownerState: o
}) => ({
  display: "grid",
  gridAutoColumns: "max-content auto max-content",
  gridAutoRows: "max-content auto max-content",
  [`& .${R1.toolbar}`]: o.isLandscape ? {
    gridColumn: e.direction === "rtl" ? 3 : 1,
    gridRow: "2 / 3"
  } : {
    gridColumn: "2 / 4",
    gridRow: 1
  },
  [`.${R1.shortcuts}`]: o.isLandscape ? {
    gridColumn: "2 / 4",
    gridRow: 1
  } : {
    gridColumn: e.direction === "rtl" ? 3 : 1,
    gridRow: "2 / 3"
  },
  [`& .${R1.actionBar}`]: {
    gridColumn: "1 / 4",
    gridRow: 3
  }
}));
NL.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  as: t.elementType,
  ownerState: t.shape({
    isLandscape: t.bool.isRequired
  }).isRequired,
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
};
const Coe = ee("div", {
  name: "MuiPickersLayout",
  slot: "ContentWrapper",
  overridesResolver: (e, o) => o.contentWrapper
})({
  gridColumn: 2,
  gridRow: 2,
  display: "flex",
  flexDirection: "column"
}), eE = function(o) {
  const i = Ue({
    props: o,
    name: "MuiPickersLayout"
  }), {
    toolbar: c,
    content: d,
    tabs: p,
    actionBar: f,
    shortcuts: v
  } = yoe(i), {
    sx: g,
    className: b,
    isLandscape: S,
    ref: R,
    wrapperVariant: D
  } = i, k = i, $ = boe(k);
  return /* @__PURE__ */ ht(NL, {
    ref: R,
    sx: g,
    className: ve(b, $.root),
    ownerState: k,
    children: [S ? v : c, S ? c : v, /* @__PURE__ */ z(Coe, {
      className: $.contentWrapper,
      children: D === "desktop" ? /* @__PURE__ */ ht(w.Fragment, {
        children: [d, p]
      }) : /* @__PURE__ */ ht(w.Fragment, {
        children: [p, d]
      })
    }), f]
  });
};
process.env.NODE_ENV !== "production" && (eE.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  className: t.string,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  disabled: t.bool,
  isLandscape: t.bool.isRequired,
  isValid: t.func.isRequired,
  onAccept: t.func.isRequired,
  onCancel: t.func.isRequired,
  onChange: t.func.isRequired,
  onClear: t.func.isRequired,
  onClose: t.func.isRequired,
  onDismiss: t.func.isRequired,
  onOpen: t.func.isRequired,
  onSelectShortcut: t.func.isRequired,
  onSetToday: t.func.isRequired,
  onViewChange: t.func.isRequired,
  /**
   * Force rendering in particular orientation.
   */
  orientation: t.oneOf(["landscape", "portrait"]),
  readOnly: t.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  value: t.any,
  view: t.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]),
  views: t.arrayOf(t.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]).isRequired).isRequired,
  wrapperVariant: t.oneOf(["desktop", "mobile"])
});
const xoe = (e) => We("MuiPickersSlideTransition", e), si = Ge("MuiPickersSlideTransition", ["root", "slideEnter-left", "slideEnter-right", "slideEnterActive", "slideExit", "slideExitActiveLeft-left", "slideExitActiveLeft-right"]), Soe = ["children", "className", "reduceAnimations", "slideDirection", "transKey", "classes"], Toe = (e) => {
  const {
    classes: o,
    slideDirection: i
  } = e, c = {
    root: ["root"],
    exit: ["slideExit"],
    enterActive: ["slideEnterActive"],
    enter: [`slideEnter-${i}`],
    exitActive: [`slideExitActiveLeft-${i}`]
  };
  return Ye(c, xoe, o);
}, woe = ee(pw, {
  name: "MuiPickersSlideTransition",
  slot: "Root",
  overridesResolver: (e, o) => [o.root, {
    [`.${si["slideEnter-left"]}`]: o["slideEnter-left"]
  }, {
    [`.${si["slideEnter-right"]}`]: o["slideEnter-right"]
  }, {
    [`.${si.slideEnterActive}`]: o.slideEnterActive
  }, {
    [`.${si.slideExit}`]: o.slideExit
  }, {
    [`.${si["slideExitActiveLeft-left"]}`]: o["slideExitActiveLeft-left"]
  }, {
    [`.${si["slideExitActiveLeft-right"]}`]: o["slideExitActiveLeft-right"]
  }]
})(({
  theme: e
}) => {
  const o = e.transitions.create("transform", {
    duration: e.transitions.duration.complex,
    easing: "cubic-bezier(0.35, 0.8, 0.4, 1)"
  });
  return {
    display: "block",
    position: "relative",
    overflowX: "hidden",
    "& > *": {
      position: "absolute",
      top: 0,
      right: 0,
      left: 0
    },
    [`& .${si["slideEnter-left"]}`]: {
      willChange: "transform",
      transform: "translate(100%)",
      zIndex: 1
    },
    [`& .${si["slideEnter-right"]}`]: {
      willChange: "transform",
      transform: "translate(-100%)",
      zIndex: 1
    },
    [`& .${si.slideEnterActive}`]: {
      transform: "translate(0%)",
      transition: o
    },
    [`& .${si.slideExit}`]: {
      transform: "translate(0%)"
    },
    [`& .${si["slideExitActiveLeft-left"]}`]: {
      willChange: "transform",
      transform: "translate(-100%)",
      transition: o,
      zIndex: 0
    },
    [`& .${si["slideExitActiveLeft-right"]}`]: {
      willChange: "transform",
      transform: "translate(100%)",
      transition: o,
      zIndex: 0
    }
  };
});
function Eoe(e) {
  const o = Ue({
    props: e,
    name: "MuiPickersSlideTransition"
  }), {
    children: i,
    className: c,
    reduceAnimations: d,
    transKey: p
    // extracting `classes` from `other`
  } = o, f = ue(o, Soe), v = Toe(o), g = Mn();
  if (d)
    return /* @__PURE__ */ z("div", {
      className: ve(v.root, c),
      children: i
    });
  const b = {
    exit: v.exit,
    enterActive: v.enterActive,
    enter: v.enter,
    exitActive: v.exitActive
  };
  return /* @__PURE__ */ z(woe, {
    className: ve(v.root, c),
    childFactory: (S) => /* @__PURE__ */ w.cloneElement(S, {
      classNames: b
    }),
    role: "presentation",
    children: /* @__PURE__ */ z(E4, x({
      mountOnEnter: !0,
      unmountOnExit: !0,
      timeout: g.transitions.duration.complex,
      classNames: b
    }, f, {
      children: i
    }), p)
  });
}
const PL = ({
  shouldDisableDate: e,
  shouldDisableMonth: o,
  shouldDisableYear: i,
  minDate: c,
  maxDate: d,
  disableFuture: p,
  disablePast: f,
  timezone: v
}) => {
  const g = Cd();
  return w.useCallback((b) => S0({
    adapter: g,
    value: b,
    props: {
      shouldDisableDate: e,
      shouldDisableMonth: o,
      shouldDisableYear: i,
      minDate: c,
      maxDate: d,
      disableFuture: p,
      disablePast: f,
      timezone: v
    }
  }) !== null, [g, e, o, i, c, d, p, f, v]);
}, Roe = (e) => We("MuiDayCalendar", e);
Ge("MuiDayCalendar", ["root", "header", "weekDayLabel", "loadingContainer", "slideTransition", "monthContainer", "weekContainer", "weekNumberLabel", "weekNumber"]);
const Ooe = ["parentProps", "day", "focusableDay", "selectedDays", "isDateDisabled", "currentMonthNumber", "isViewFocused"], koe = ["ownerState"], Doe = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"],
    header: ["header"],
    weekDayLabel: ["weekDayLabel"],
    loadingContainer: ["loadingContainer"],
    slideTransition: ["slideTransition"],
    monthContainer: ["monthContainer"],
    weekContainer: ["weekContainer"],
    weekNumberLabel: ["weekNumberLabel"],
    weekNumber: ["weekNumber"]
  }, Roe, o);
}, $L = (zv + b0 * 2) * 6, Moe = ee("div", {
  name: "MuiDayCalendar",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({}), Noe = ee("div", {
  name: "MuiDayCalendar",
  slot: "Header",
  overridesResolver: (e, o) => o.header
})({
  display: "flex",
  justifyContent: "center",
  alignItems: "center"
}), Poe = ee(wo, {
  name: "MuiDayCalendar",
  slot: "WeekDayLabel",
  overridesResolver: (e, o) => o.weekDayLabel
})(({
  theme: e
}) => ({
  width: 36,
  height: 40,
  margin: "0 2px",
  textAlign: "center",
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  color: (e.vars || e).palette.text.secondary
})), $oe = ee(wo, {
  name: "MuiDayCalendar",
  slot: "WeekNumberLabel",
  overridesResolver: (e, o) => o.weekNumberLabel
})(({
  theme: e
}) => ({
  width: 36,
  height: 40,
  margin: "0 2px",
  textAlign: "center",
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  color: e.palette.text.disabled
})), Ioe = ee(wo, {
  name: "MuiDayCalendar",
  slot: "WeekNumber",
  overridesResolver: (e, o) => o.weekNumber
})(({
  theme: e
}) => x({}, e.typography.caption, {
  width: zv,
  height: zv,
  padding: 0,
  margin: `0 ${b0}px`,
  color: e.palette.text.disabled,
  fontSize: "0.75rem",
  alignItems: "center",
  justifyContent: "center",
  display: "inline-flex"
})), Loe = ee("div", {
  name: "MuiDayCalendar",
  slot: "LoadingContainer",
  overridesResolver: (e, o) => o.loadingContainer
})({
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  minHeight: $L
}), Aoe = ee(Eoe, {
  name: "MuiDayCalendar",
  slot: "SlideTransition",
  overridesResolver: (e, o) => o.slideTransition
})({
  minHeight: $L
}), _oe = ee("div", {
  name: "MuiDayCalendar",
  slot: "MonthContainer",
  overridesResolver: (e, o) => o.monthContainer
})({
  overflow: "hidden"
}), Boe = ee("div", {
  name: "MuiDayCalendar",
  slot: "WeekContainer",
  overridesResolver: (e, o) => o.weekContainer
})({
  margin: `${b0}px 0`,
  display: "flex",
  justifyContent: "center"
});
function zoe(e) {
  var o, i, c;
  let {
    parentProps: d,
    day: p,
    focusableDay: f,
    selectedDays: v,
    isDateDisabled: g,
    currentMonthNumber: b,
    isViewFocused: S
  } = e, R = ue(e, Ooe);
  const {
    disabled: D,
    disableHighlightToday: k,
    isMonthSwitchingAnimating: $,
    showDaysOutsideCurrentMonth: P,
    components: O,
    componentsProps: I,
    slots: _,
    slotProps: A,
    timezone: V
  } = d, B = to(), M = y0(V), F = f !== null && B.isSameDay(p, f), Y = v.some((ie) => B.isSameDay(ie, p)), H = B.isSameDay(p, M), J = (o = (i = _ == null ? void 0 : _.day) != null ? i : O == null ? void 0 : O.Day) != null ? o : Tne, W = ln({
    elementType: J,
    externalSlotProps: (c = A == null ? void 0 : A.day) != null ? c : I == null ? void 0 : I.day,
    additionalProps: x({
      disableHighlightToday: k,
      showDaysOutsideCurrentMonth: P,
      role: "gridcell",
      isAnimating: $,
      // it is used in date range dragging logic by accessing `dataset.timestamp`
      "data-timestamp": B.toJsDate(p).valueOf()
    }, R),
    ownerState: x({}, d, {
      day: p,
      selected: Y
    })
  }), te = ue(W, koe), Z = w.useMemo(() => D || g(p), [D, g, p]), q = w.useMemo(() => B.getMonth(p) !== b, [B, p, b]), Q = w.useMemo(() => {
    const ie = B.startOfMonth(B.setMonth(p, b));
    return P ? B.isSameDay(p, B.startOfWeek(ie)) : B.isSameDay(p, ie);
  }, [b, p, P, B]), re = w.useMemo(() => {
    const ie = B.endOfMonth(B.setMonth(p, b));
    return P ? B.isSameDay(p, B.endOfWeek(ie)) : B.isSameDay(p, ie);
  }, [b, p, P, B]);
  return /* @__PURE__ */ z(J, x({}, te, {
    day: p,
    disabled: Z,
    autoFocus: S && F,
    today: H,
    outsideCurrentMonth: q,
    isFirstVisibleCell: Q,
    isLastVisibleCell: re,
    selected: Y,
    tabIndex: F ? 0 : -1,
    "aria-selected": Y,
    "aria-current": H ? "date" : void 0
  }));
}
function Voe(e) {
  const o = Ue({
    props: e,
    name: "MuiDayCalendar"
  }), {
    onFocusedDayChange: i,
    className: c,
    currentMonth: d,
    selectedDays: p,
    focusedDay: f,
    loading: v,
    onSelectedDaysChange: g,
    onMonthSwitchingAnimationEnd: b,
    readOnly: S,
    reduceAnimations: R,
    renderLoading: D = () => /* @__PURE__ */ z("span", {
      children: "..."
    }),
    slideDirection: k,
    TransitionProps: $,
    disablePast: P,
    disableFuture: O,
    minDate: I,
    maxDate: _,
    shouldDisableDate: A,
    shouldDisableMonth: V,
    shouldDisableYear: B,
    dayOfWeekFormatter: M,
    hasFocus: F,
    onFocusedViewChange: Y,
    gridLabelId: H,
    displayWeekNumber: J,
    fixedWeekNumber: W,
    autoFocus: te,
    timezone: Z
  } = o, q = y0(Z), Q = to(), re = Doe(o), K = Mn().direction === "rtl", ne = M || ((Be, ft) => Q.format(ft, "weekdayShort").charAt(0).toUpperCase()), se = PL({
    shouldDisableDate: A,
    shouldDisableMonth: V,
    shouldDisableYear: B,
    minDate: I,
    maxDate: _,
    disablePast: P,
    disableFuture: O,
    timezone: Z
  }), Fe = Zc(), [qe, Me] = Eo({
    name: "DayCalendar",
    state: "hasFocus",
    controlled: F,
    default: te ?? !1
  }), [fe, De] = w.useState(() => f || q), be = St((Be) => {
    S || g(Be);
  }), Ce = (Be) => {
    se(Be) || (i(Be), De(Be), Y == null || Y(!0), Me(!0));
  }, de = St((Be, ft) => {
    switch (Be.key) {
      case "ArrowUp":
        Ce(Q.addDays(ft, -7)), Be.preventDefault();
        break;
      case "ArrowDown":
        Ce(Q.addDays(ft, 7)), Be.preventDefault();
        break;
      case "ArrowLeft": {
        const je = Q.addDays(ft, K ? 1 : -1), Ve = Q.addMonths(ft, K ? 1 : -1), st = Ov({
          utils: Q,
          date: je,
          minDate: K ? je : Q.startOfMonth(Ve),
          maxDate: K ? Q.endOfMonth(Ve) : je,
          isDateDisabled: se,
          timezone: Z
        });
        Ce(st || je), Be.preventDefault();
        break;
      }
      case "ArrowRight": {
        const je = Q.addDays(ft, K ? -1 : 1), Ve = Q.addMonths(ft, K ? -1 : 1), st = Ov({
          utils: Q,
          date: je,
          minDate: K ? Q.startOfMonth(Ve) : je,
          maxDate: K ? je : Q.endOfMonth(Ve),
          isDateDisabled: se,
          timezone: Z
        });
        Ce(st || je), Be.preventDefault();
        break;
      }
      case "Home":
        Ce(Q.startOfWeek(ft)), Be.preventDefault();
        break;
      case "End":
        Ce(Q.endOfWeek(ft)), Be.preventDefault();
        break;
      case "PageUp":
        Ce(Q.addMonths(ft, 1)), Be.preventDefault();
        break;
      case "PageDown":
        Ce(Q.addMonths(ft, -1)), Be.preventDefault();
        break;
    }
  }), Ae = St((Be, ft) => Ce(ft)), at = St((Be, ft) => {
    qe && Q.isSameDay(fe, ft) && (Y == null || Y(!1));
  }), Oe = Q.getMonth(d), _e = w.useMemo(() => p.filter((Be) => !!Be).map((Be) => Q.startOfDay(Be)), [Q, p]), ye = Oe, ae = w.useMemo(() => /* @__PURE__ */ w.createRef(), [ye]), $e = Q.startOfWeek(q), Se = w.useMemo(() => {
    const Be = Q.startOfMonth(d), ft = Q.endOfMonth(d);
    return se(fe) || Q.isAfterDay(fe, ft) || Q.isBeforeDay(fe, Be) ? Ov({
      utils: Q,
      date: fe,
      minDate: Be,
      maxDate: ft,
      disablePast: P,
      disableFuture: O,
      isDateDisabled: se,
      timezone: Z
    }) : fe;
  }, [d, O, P, fe, se, Q, Z]), mt = w.useMemo(() => {
    const Be = Q.setTimezone(d, Z), ft = Q.getWeekArray(Be);
    let je = Q.addMonths(Be, 1);
    for (; W && ft.length < W; ) {
      const Ve = Q.getWeekArray(je), st = Q.isSameDay(ft[ft.length - 1][0], Ve[0][0]);
      Ve.slice(st ? 1 : 0).forEach((gt) => {
        ft.length < W && ft.push(gt);
      }), je = Q.addMonths(je, 1);
    }
    return ft;
  }, [d, W, Q, Z]);
  return /* @__PURE__ */ ht(Moe, {
    role: "grid",
    "aria-labelledby": H,
    className: re.root,
    children: [/* @__PURE__ */ ht(Noe, {
      role: "row",
      className: re.header,
      children: [J && /* @__PURE__ */ z($oe, {
        variant: "caption",
        role: "columnheader",
        "aria-label": Fe.calendarWeekNumberHeaderLabel,
        className: re.weekNumberLabel,
        children: Fe.calendarWeekNumberHeaderText
      }), one(Q, q).map((Be, ft) => {
        var je;
        const Ve = Q.format(Be, "weekdayShort");
        return /* @__PURE__ */ z(Poe, {
          variant: "caption",
          role: "columnheader",
          "aria-label": Q.format(Q.addDays($e, ft), "weekday"),
          className: re.weekDayLabel,
          children: (je = ne == null ? void 0 : ne(Ve, Be)) != null ? je : Ve
        }, Ve + ft.toString());
      })]
    }), v ? /* @__PURE__ */ z(Loe, {
      className: re.loadingContainer,
      children: D()
    }) : /* @__PURE__ */ z(Aoe, x({
      transKey: ye,
      onExited: b,
      reduceAnimations: R,
      slideDirection: k,
      className: ve(c, re.slideTransition)
    }, $, {
      nodeRef: ae,
      children: /* @__PURE__ */ z(_oe, {
        ref: ae,
        role: "rowgroup",
        className: re.monthContainer,
        children: mt.map((Be, ft) => /* @__PURE__ */ ht(Boe, {
          role: "row",
          className: re.weekContainer,
          "aria-rowindex": ft + 1,
          children: [J && /* @__PURE__ */ z(Ioe, {
            className: re.weekNumber,
            role: "rowheader",
            "aria-label": Fe.calendarWeekNumberAriaLabelText(Q.getWeekNumber(Be[0])),
            children: Fe.calendarWeekNumberText(Q.getWeekNumber(Be[0]))
          }), Be.map((je, Ve) => /* @__PURE__ */ z(zoe, {
            parentProps: o,
            day: je,
            selectedDays: _e,
            focusableDay: Se,
            onKeyDown: de,
            onFocus: Ae,
            onBlur: at,
            onDaySelect: be,
            isDateDisabled: se,
            currentMonthNumber: Oe,
            isViewFocused: qe,
            "aria-colindex": Ve + 1
          }, je.toString()))]
        }, `week-${Be[0]}`))
      })
    }))]
  });
}
const Foe = (e, o, i) => (c, d) => {
  switch (d.type) {
    case "changeMonth":
      return x({}, c, {
        slideDirection: d.direction,
        currentMonth: d.newMonth,
        isMonthSwitchingAnimating: !e
      });
    case "finishMonthSwitchingAnimation":
      return x({}, c, {
        isMonthSwitchingAnimating: !1
      });
    case "changeFocusedDay": {
      if (c.focusedDay != null && d.focusedDay != null && i.isSameDay(d.focusedDay, c.focusedDay))
        return c;
      const p = d.focusedDay != null && !o && !i.isSameMonth(c.currentMonth, d.focusedDay);
      return x({}, c, {
        focusedDay: d.focusedDay,
        isMonthSwitchingAnimating: p && !e && !d.withoutMonthSwitchingAnimation,
        currentMonth: p ? i.startOfMonth(d.focusedDay) : c.currentMonth,
        slideDirection: d.focusedDay != null && i.isAfterDay(d.focusedDay, c.currentMonth) ? "left" : "right"
      });
    }
    default:
      throw new Error("missing support");
  }
}, joe = (e) => {
  const {
    value: o,
    referenceDate: i,
    defaultCalendarMonth: c,
    disableFuture: d,
    disablePast: p,
    disableSwitchToMonthOnDayFocus: f = !1,
    maxDate: v,
    minDate: g,
    onMonthChange: b,
    reduceAnimations: S,
    shouldDisableDate: R,
    timezone: D
  } = e, k = to(), $ = w.useRef(Foe(!!S, f, k)).current, P = w.useMemo(
    () => {
      let F = null;
      return i ? F = i : c && (F = k.startOfMonth(c)), Al.getInitialReferenceValue({
        value: o,
        utils: k,
        timezone: D,
        props: e,
        referenceDate: F,
        granularity: Ls.day
      });
    },
    []
    // eslint-disable-line react-hooks/exhaustive-deps
  ), [O, I] = w.useReducer($, {
    isMonthSwitchingAnimating: !1,
    focusedDay: P,
    currentMonth: k.startOfMonth(P),
    slideDirection: "left"
  }), _ = w.useCallback((F) => {
    I(x({
      type: "changeMonth"
    }, F)), b && b(F.newMonth);
  }, [b]), A = w.useCallback((F) => {
    const Y = F;
    k.isSameMonth(Y, O.currentMonth) || _({
      newMonth: k.startOfMonth(Y),
      direction: k.isAfterDay(Y, O.currentMonth) ? "left" : "right"
    });
  }, [O.currentMonth, _, k]), V = PL({
    shouldDisableDate: R,
    minDate: g,
    maxDate: v,
    disableFuture: d,
    disablePast: p,
    timezone: D
  }), B = w.useCallback(() => {
    I({
      type: "finishMonthSwitchingAnimation"
    });
  }, []), M = St((F, Y) => {
    V(F) || I({
      type: "changeFocusedDay",
      focusedDay: F,
      withoutMonthSwitchingAnimation: Y
    });
  });
  return {
    referenceDate: P,
    calendarState: O,
    changeMonth: A,
    changeFocusedDay: M,
    isDateDisabled: V,
    onMonthSwitchingAnimationEnd: B,
    handleChangeMonth: _
  };
}, Uoe = ["ownerState"], Hoe = ({
  clearable: e,
  fieldProps: o,
  InputProps: i,
  onClear: c,
  slots: d,
  slotProps: p,
  components: f,
  componentsProps: v
}) => {
  var g, b, S, R, D, k;
  const $ = Zc(), P = (g = (b = d == null ? void 0 : d.clearButton) != null ? b : f == null ? void 0 : f.ClearButton) != null ? g : Wi, O = ln({
    elementType: P,
    externalSlotProps: (S = p == null ? void 0 : p.clearButton) != null ? S : v == null ? void 0 : v.clearButton,
    ownerState: {},
    className: "clearButton",
    additionalProps: {
      title: $.fieldClearLabel
    }
  }), I = ue(O, Uoe), _ = (R = (D = d == null ? void 0 : d.clearIcon) != null ? D : f == null ? void 0 : f.ClearIcon) != null ? R : _te, A = ln({
    elementType: _,
    externalSlotProps: (k = p == null ? void 0 : p.clearIcon) != null ? k : v == null ? void 0 : v.clearIcon,
    ownerState: {}
  }), V = x({}, i, {
    endAdornment: /* @__PURE__ */ ht(w.Fragment, {
      children: [e && /* @__PURE__ */ z(P$, {
        position: "end",
        sx: {
          marginRight: i != null && i.endAdornment ? -1 : -1.5
        },
        children: /* @__PURE__ */ z(P, x({}, I, {
          onClick: c,
          children: /* @__PURE__ */ z(_, x({
            fontSize: "small"
          }, A))
        }))
      }), i == null ? void 0 : i.endAdornment]
    })
  }), B = x({}, o, {
    sx: [{
      "& .clearButton": {
        opacity: 1
      },
      "@media (pointer: fine)": {
        "& .clearButton": {
          opacity: 0
        },
        "&:hover, &:focus-within": {
          ".clearButton": {
            opacity: 1
          }
        }
      }
    }, ...Array.isArray(o.sx) ? o.sx : [o.sx]]
  });
  return {
    InputProps: V,
    fieldProps: B
  };
}, Woe = ["components", "componentsProps", "slots", "slotProps", "InputProps", "inputProps"], Yoe = ["inputRef"], Goe = ["ref", "onPaste", "onKeyDown", "inputMode", "readOnly", "clearable", "onClear"], tE = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d, p;
  const f = Ue({
    props: o,
    name: "MuiDateField"
  }), {
    components: v,
    componentsProps: g,
    slots: b,
    slotProps: S,
    InputProps: R,
    inputProps: D
  } = f, k = ue(f, Woe), $ = f, P = (c = (d = b == null ? void 0 : b.textField) != null ? d : v == null ? void 0 : v.TextField) != null ? c : mte, O = ln({
    elementType: P,
    externalSlotProps: (p = S == null ? void 0 : S.textField) != null ? p : g == null ? void 0 : g.textField,
    externalForwardedProps: k,
    ownerState: $
  }), {
    inputRef: I
  } = O, _ = ue(O, Yoe);
  _.inputProps = x({}, D, _.inputProps), _.InputProps = x({}, R, _.InputProps);
  const A = Ane({
    props: _,
    inputRef: I
  }), {
    ref: V,
    onPaste: B,
    onKeyDown: M,
    inputMode: F,
    readOnly: Y,
    clearable: H,
    onClear: J
  } = A, W = ue(A, Goe), {
    InputProps: te,
    fieldProps: Z
  } = Hoe({
    onClear: J,
    clearable: H,
    fieldProps: W,
    InputProps: W.InputProps,
    slots: b,
    slotProps: S,
    components: v,
    componentsProps: g
  });
  return /* @__PURE__ */ z(P, x({
    ref: i
  }, Z, {
    InputProps: x({}, te, {
      readOnly: Y
    }),
    inputProps: x({}, W.inputProps, {
      inputMode: F,
      onPaste: B,
      onKeyDown: M,
      ref: V
    })
  }));
});
process.env.NODE_ENV !== "production" && (tE.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: t.bool,
  className: t.string,
  /**
   * If `true`, a clear button will be shown in the field allowing value clearing.
   * @default false
   */
  clearable: t.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOf(["error", "info", "primary", "secondary", "success", "warning"]),
  component: t.elementType,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: t.bool,
  /**
   * Format of the date when rendered in the input(s).
   */
  format: t.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: t.oneOf(["dense", "spacious"]),
  /**
   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.
   */
  FormHelperTextProps: t.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * The helper text content.
   */
  helperText: t.node,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: t.bool,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: t.string,
  /**
   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   */
  InputLabelProps: t.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: t.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](/material-ui/api/filled-input/),
   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)
   * component depending on the `variant` prop value.
   */
  InputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Lo,
  /**
   * The label content.
   */
  label: t.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: t.oneOf(["dense", "none", "normal"]),
  /**
   * Maximal selectable date.
   */
  maxDate: t.any,
  /**
   * Minimal selectable date.
   */
  minDate: t.any,
  /**
   * Name attribute of the `input` element.
   */
  name: t.string,
  onBlur: t.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: t.func,
  /**
   * Callback fired when the clear button is clicked.
   */
  onClear: t.func,
  /**
   * Callback fired when the error associated to the current value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TError} error The new error.
   * @param {TValue} value The value associated to the error.
   */
  onError: t.func,
  onFocus: t.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: t.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   * @default false
   */
  readOnly: t.bool,
  /**
   * The date used to generate a part of the new value that is not present in the format when both `value` and `defaultValue` are empty.
   * For example, on time fields it will be used to determine the date to set.
   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`. Value is rounded to the most granular section used.
   */
  referenceDate: t.any,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: t.bool,
  /**
   * The currently selected sections.
   * This prop accept four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If an object with a `startIndex` and `endIndex` properties are provided, the sections between those two indexes will be selected.
   * 3. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 4. If `null` is provided, no section will be selected
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: t.oneOfType([t.oneOf(["all", "day", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), t.number, t.shape({
    endIndex: t.number.isRequired,
    startIndex: t.number.isRequired
  })]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: t.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: t.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: t.func,
  /**
   * If `true`, the format will respect the leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `8/16/2018`)
   * If `false`, the format will always add leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `08/16/2018`)
   *
   * Warning n°1: Luxon is not able to respect the leading zeroes when using macro tokens (e.g: "DD"), so `shouldRespectLeadingZeros={true}` might lead to inconsistencies when using `AdapterLuxon`.
   *
   * Warning n°2: When `shouldRespectLeadingZeros={true}`, the field will add an invisible character on the sections containing a single digit to make sure `onChange` is fired.
   * If you need to get the clean value from the input, you can remove this character using `input.value.replace(/\u200e/g, '')`.
   *
   * Warning n°3: When used in strict mode, dayjs and moment require to respect the leading zeros.
   * This mean that when using `shouldRespectLeadingZeros={false}`, if you retrieve the value directly from the input (not listening to `onChange`) and your format contains tokens without leading zeros, the value will not be parsed by your library.
   *
   * @default `false`
   */
  shouldRespectLeadingZeros: t.bool,
  /**
   * The size of the component.
   */
  size: t.oneOf(["medium", "small"]),
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  style: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The ref object used to imperatively interact with the field.
   */
  unstableFieldRef: t.oneOfType([t.func, t.object]),
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: t.oneOf(["filled", "outlined", "standard"])
});
const qoe = (e) => We("MuiPickersFadeTransitionGroup", e);
Ge("MuiPickersFadeTransitionGroup", ["root"]);
const Koe = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"]
  }, qoe, o);
}, Qoe = ee(pw, {
  name: "MuiPickersFadeTransitionGroup",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({
  display: "block",
  position: "relative"
});
function IL(e) {
  const o = Ue({
    props: e,
    name: "MuiPickersFadeTransitionGroup"
  }), {
    children: i,
    className: c,
    reduceAnimations: d,
    transKey: p
  } = o, f = Koe(o), v = Mn();
  return d ? i : /* @__PURE__ */ z(Qoe, {
    className: ve(f.root, c),
    children: /* @__PURE__ */ z(_f, {
      appear: !1,
      mountOnEnter: !0,
      unmountOnExit: !0,
      timeout: {
        appear: v.transitions.duration.enteringScreen,
        enter: v.transitions.duration.enteringScreen,
        exit: 0
      },
      children: i
    }, p)
  });
}
function Xoe(e) {
  return We("MuiPickersMonth", e);
}
const SC = Ge("MuiPickersMonth", ["root", "monthButton", "disabled", "selected"]), Zoe = ["autoFocus", "children", "disabled", "selected", "value", "tabIndex", "onClick", "onKeyDown", "onFocus", "onBlur", "aria-current", "aria-label", "monthsPerRow"], Joe = (e) => {
  const {
    disabled: o,
    selected: i,
    classes: c
  } = e;
  return Ye({
    root: ["root"],
    monthButton: ["monthButton", o && "disabled", i && "selected"]
  }, Xoe, c);
}, ere = ee("div", {
  name: "MuiPickersMonth",
  slot: "Root",
  overridesResolver: (e, o) => [o.root]
})(({
  ownerState: e
}) => ({
  flexBasis: e.monthsPerRow === 3 ? "33.3%" : "25%",
  display: "flex",
  alignItems: "center",
  justifyContent: "center"
})), tre = ee("button", {
  name: "MuiPickersMonth",
  slot: "MonthButton",
  overridesResolver: (e, o) => [o.monthButton, {
    [`&.${SC.disabled}`]: o.disabled
  }, {
    [`&.${SC.selected}`]: o.selected
  }]
})(({
  theme: e
}) => x({
  color: "unset",
  backgroundColor: "transparent",
  border: 0,
  outline: 0
}, e.typography.subtitle1, {
  margin: "8px 0",
  height: 36,
  width: 72,
  borderRadius: 18,
  cursor: "pointer",
  "&:focus": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : di(e.palette.action.active, e.palette.action.hoverOpacity)
  },
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : di(e.palette.action.active, e.palette.action.hoverOpacity)
  },
  "&:disabled": {
    cursor: "auto",
    pointerEvents: "none"
  },
  [`&.${SC.disabled}`]: {
    color: (e.vars || e).palette.text.secondary
  },
  [`&.${SC.selected}`]: {
    color: (e.vars || e).palette.primary.contrastText,
    backgroundColor: (e.vars || e).palette.primary.main,
    "&:focus, &:hover": {
      backgroundColor: (e.vars || e).palette.primary.dark
    }
  }
})), nre = /* @__PURE__ */ w.memo(function(o) {
  const i = Ue({
    props: o,
    name: "MuiPickersMonth"
  }), {
    autoFocus: c,
    children: d,
    disabled: p,
    selected: f,
    value: v,
    tabIndex: g,
    onClick: b,
    onKeyDown: S,
    onFocus: R,
    onBlur: D,
    "aria-current": k,
    "aria-label": $
    // We don't want to forward this prop to the root element
  } = i, P = ue(i, Zoe), O = w.useRef(null), I = Joe(i);
  return so(() => {
    if (c) {
      var _;
      (_ = O.current) == null || _.focus();
    }
  }, [c]), /* @__PURE__ */ z(ere, x({
    className: I.root,
    ownerState: i
  }, P, {
    children: /* @__PURE__ */ z(tre, {
      ref: O,
      disabled: p,
      type: "button",
      role: "radio",
      tabIndex: p ? -1 : g,
      "aria-current": k,
      "aria-checked": f,
      "aria-label": $,
      onClick: (_) => b(_, v),
      onKeyDown: (_) => S(_, v),
      onFocus: (_) => R(_, v),
      onBlur: (_) => D(_, v),
      className: I.monthButton,
      ownerState: i,
      children: d
    })
  }));
});
function ore(e) {
  return We("MuiMonthCalendar", e);
}
Ge("MuiMonthCalendar", ["root"]);
const rre = ["className", "value", "defaultValue", "referenceDate", "disabled", "disableFuture", "disablePast", "maxDate", "minDate", "onChange", "shouldDisableMonth", "readOnly", "disableHighlightToday", "autoFocus", "onMonthFocus", "hasFocus", "onFocusedViewChange", "monthsPerRow", "timezone", "gridLabelId"], are = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"]
  }, ore, o);
};
function ire(e, o) {
  const i = to(), c = Jv(), d = Ue({
    props: e,
    name: o
  });
  return x({
    disableFuture: !1,
    disablePast: !1
  }, d, {
    minDate: vi(i, d.minDate, c.minDate),
    maxDate: vi(i, d.maxDate, c.maxDate)
  });
}
const sre = ee("div", {
  name: "MuiMonthCalendar",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({
  display: "flex",
  flexWrap: "wrap",
  alignContent: "stretch",
  padding: "0 4px",
  width: C0,
  // avoid padding increasing width over defined
  boxSizing: "border-box"
}), LL = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = ire(o, "MuiMonthCalendar"), {
    className: d,
    value: p,
    defaultValue: f,
    referenceDate: v,
    disabled: g,
    disableFuture: b,
    disablePast: S,
    maxDate: R,
    minDate: D,
    onChange: k,
    shouldDisableMonth: $,
    readOnly: P,
    disableHighlightToday: O,
    autoFocus: I = !1,
    onMonthFocus: _,
    hasFocus: A,
    onFocusedViewChange: V,
    monthsPerRow: B = 3,
    timezone: M,
    gridLabelId: F
  } = c, Y = ue(c, rre), {
    value: H,
    handleValueChange: J,
    timezone: W
  } = Xw({
    name: "MonthCalendar",
    timezone: M,
    value: p,
    defaultValue: f,
    onChange: k,
    valueManager: Al
  }), te = y0(W), Z = Nf(), q = to(), Q = w.useMemo(
    () => Al.getInitialReferenceValue({
      value: H,
      utils: q,
      props: c,
      timezone: W,
      referenceDate: v,
      granularity: Ls.month
    }),
    []
    // eslint-disable-line react-hooks/exhaustive-deps
  ), re = c, ie = are(re), K = w.useMemo(() => q.getMonth(te), [q, te]), ne = w.useMemo(() => H != null ? q.getMonth(H) : O ? null : q.getMonth(Q), [H, q, O, Q]), [se, Fe] = w.useState(() => ne || K), [qe, Me] = Eo({
    name: "MonthCalendar",
    state: "hasFocus",
    controlled: A,
    default: I ?? !1
  }), fe = St((Oe) => {
    Me(Oe), V && V(Oe);
  }), De = w.useCallback((Oe) => {
    const _e = q.startOfMonth(S && q.isAfter(te, D) ? te : D), ye = q.startOfMonth(b && q.isBefore(te, R) ? te : R), ae = q.startOfMonth(Oe);
    return q.isBefore(ae, _e) || q.isAfter(ae, ye) ? !0 : $ ? $(ae) : !1;
  }, [b, S, R, D, te, $, q]), be = St((Oe, _e) => {
    if (P)
      return;
    const ye = q.setMonth(H ?? Q, _e);
    J(ye);
  }), Ce = St((Oe) => {
    De(q.setMonth(H ?? Q, Oe)) || (Fe(Oe), fe(!0), _ && _(Oe));
  });
  w.useEffect(() => {
    Fe((Oe) => ne !== null && Oe !== ne ? ne : Oe);
  }, [ne]);
  const de = St((Oe, _e) => {
    switch (Oe.key) {
      case "ArrowUp":
        Ce((12 + _e - 3) % 12), Oe.preventDefault();
        break;
      case "ArrowDown":
        Ce((12 + _e + 3) % 12), Oe.preventDefault();
        break;
      case "ArrowLeft":
        Ce((12 + _e + (Z.direction === "ltr" ? -1 : 1)) % 12), Oe.preventDefault();
        break;
      case "ArrowRight":
        Ce((12 + _e + (Z.direction === "ltr" ? 1 : -1)) % 12), Oe.preventDefault();
        break;
    }
  }), Ae = St((Oe, _e) => {
    Ce(_e);
  }), at = St((Oe, _e) => {
    se === _e && fe(!1);
  });
  return /* @__PURE__ */ z(sre, x({
    ref: i,
    className: ve(ie.root, d),
    ownerState: re,
    role: "radiogroup",
    "aria-labelledby": F
  }, Y, {
    children: qw(q, H ?? Q).map((Oe) => {
      const _e = q.getMonth(Oe), ye = q.format(Oe, "monthShort"), ae = q.format(Oe, "month"), $e = _e === ne, Se = g || De(Oe);
      return /* @__PURE__ */ z(nre, {
        selected: $e,
        value: _e,
        onClick: be,
        onKeyDown: de,
        autoFocus: qe && _e === se,
        disabled: Se,
        tabIndex: _e === se ? 0 : -1,
        onFocus: Ae,
        onBlur: at,
        "aria-current": K === _e ? "date" : void 0,
        "aria-label": ae,
        monthsPerRow: B,
        children: ye
      }, ye);
    })
  }));
});
process.env.NODE_ENV !== "production" && (LL.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  autoFocus: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * className applied to the root element.
   */
  className: t.string,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true` picker is disabled
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  gridLabelId: t.string,
  hasFocus: t.bool,
  /**
   * Maximal selectable date.
   */
  maxDate: t.any,
  /**
   * Minimal selectable date.
   */
  minDate: t.any,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: t.oneOf([3, 4]),
  /**
   * Callback fired when the value changes.
   * @template TDate
   * @param {TDate} value The new value.
   */
  onChange: t.func,
  onFocusedViewChange: t.func,
  onMonthFocus: t.func,
  /**
   * If `true` picker is readonly
   */
  readOnly: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid month using the validation props, except callbacks such as `shouldDisableMonth`.
   */
  referenceDate: t.any,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: t.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any
});
function lre(e) {
  return We("MuiPickersYear", e);
}
const TC = Ge("MuiPickersYear", ["root", "yearButton", "selected", "disabled"]), cre = ["autoFocus", "className", "children", "disabled", "selected", "value", "tabIndex", "onClick", "onKeyDown", "onFocus", "onBlur", "aria-current", "yearsPerRow"], ure = (e) => {
  const {
    disabled: o,
    selected: i,
    classes: c
  } = e;
  return Ye({
    root: ["root"],
    yearButton: ["yearButton", o && "disabled", i && "selected"]
  }, lre, c);
}, dre = ee("div", {
  name: "MuiPickersYear",
  slot: "Root",
  overridesResolver: (e, o) => [o.root]
})(({
  ownerState: e
}) => ({
  flexBasis: e.yearsPerRow === 3 ? "33.3%" : "25%",
  display: "flex",
  alignItems: "center",
  justifyContent: "center"
})), pre = ee("button", {
  name: "MuiPickersYear",
  slot: "YearButton",
  overridesResolver: (e, o) => [o.yearButton, {
    [`&.${TC.disabled}`]: o.disabled
  }, {
    [`&.${TC.selected}`]: o.selected
  }]
})(({
  theme: e
}) => x({
  color: "unset",
  backgroundColor: "transparent",
  border: 0,
  outline: 0
}, e.typography.subtitle1, {
  margin: "6px 0",
  height: 36,
  width: 72,
  borderRadius: 18,
  cursor: "pointer",
  "&:focus": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.focusOpacity})` : di(e.palette.action.active, e.palette.action.focusOpacity)
  },
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : di(e.palette.action.active, e.palette.action.hoverOpacity)
  },
  "&:disabled": {
    cursor: "auto",
    pointerEvents: "none"
  },
  [`&.${TC.disabled}`]: {
    color: (e.vars || e).palette.text.secondary
  },
  [`&.${TC.selected}`]: {
    color: (e.vars || e).palette.primary.contrastText,
    backgroundColor: (e.vars || e).palette.primary.main,
    "&:focus, &:hover": {
      backgroundColor: (e.vars || e).palette.primary.dark
    }
  }
})), fre = /* @__PURE__ */ w.memo(function(o) {
  const i = Ue({
    props: o,
    name: "MuiPickersYear"
  }), {
    autoFocus: c,
    className: d,
    children: p,
    disabled: f,
    selected: v,
    value: g,
    tabIndex: b,
    onClick: S,
    onKeyDown: R,
    onFocus: D,
    onBlur: k,
    "aria-current": $
    // We don't want to forward this prop to the root element
  } = i, P = ue(i, cre), O = w.useRef(null), I = ure(i);
  return w.useEffect(() => {
    c && O.current.focus();
  }, [c]), /* @__PURE__ */ z(dre, x({
    className: ve(I.root, d),
    ownerState: i
  }, P, {
    children: /* @__PURE__ */ z(pre, {
      ref: O,
      disabled: f,
      type: "button",
      role: "radio",
      tabIndex: f ? -1 : b,
      "aria-current": $,
      "aria-checked": v,
      onClick: (_) => S(_, g),
      onKeyDown: (_) => R(_, g),
      onFocus: (_) => D(_, g),
      onBlur: (_) => k(_, g),
      className: I.yearButton,
      ownerState: i,
      children: p
    })
  }));
});
function mre(e) {
  return We("MuiYearCalendar", e);
}
Ge("MuiYearCalendar", ["root"]);
const hre = ["autoFocus", "className", "value", "defaultValue", "referenceDate", "disabled", "disableFuture", "disablePast", "maxDate", "minDate", "onChange", "readOnly", "shouldDisableYear", "disableHighlightToday", "onYearFocus", "hasFocus", "onFocusedViewChange", "yearsPerRow", "timezone", "gridLabelId"], vre = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"]
  }, mre, o);
};
function gre(e, o) {
  var i;
  const c = to(), d = Jv(), p = Ue({
    props: e,
    name: o
  });
  return x({
    disablePast: !1,
    disableFuture: !1
  }, p, {
    yearsPerRow: (i = p.yearsPerRow) != null ? i : 3,
    minDate: vi(c, p.minDate, d.minDate),
    maxDate: vi(c, p.maxDate, d.maxDate)
  });
}
const yre = ee("div", {
  name: "MuiYearCalendar",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({
  display: "flex",
  flexDirection: "row",
  flexWrap: "wrap",
  overflowY: "auto",
  height: "100%",
  padding: "0 4px",
  width: C0,
  maxHeight: Zte,
  // avoid padding increasing width over defined
  boxSizing: "border-box",
  position: "relative"
}), AL = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = gre(o, "MuiYearCalendar"), {
    autoFocus: d,
    className: p,
    value: f,
    defaultValue: v,
    referenceDate: g,
    disabled: b,
    disableFuture: S,
    disablePast: R,
    maxDate: D,
    minDate: k,
    onChange: $,
    readOnly: P,
    shouldDisableYear: O,
    disableHighlightToday: I,
    onYearFocus: _,
    hasFocus: A,
    onFocusedViewChange: V,
    yearsPerRow: B,
    timezone: M,
    gridLabelId: F
  } = c, Y = ue(c, hre), {
    value: H,
    handleValueChange: J,
    timezone: W
  } = Xw({
    name: "YearCalendar",
    timezone: M,
    value: f,
    defaultValue: v,
    onChange: $,
    valueManager: Al
  }), te = y0(W), Z = Nf(), q = to(), Q = w.useMemo(
    () => Al.getInitialReferenceValue({
      value: H,
      utils: q,
      props: c,
      timezone: W,
      referenceDate: g,
      granularity: Ls.year
    }),
    []
    // eslint-disable-line react-hooks/exhaustive-deps
  ), re = c, ie = vre(re), K = w.useMemo(() => q.getYear(te), [q, te]), ne = w.useMemo(() => H != null ? q.getYear(H) : I ? null : q.getYear(Q), [H, q, I, Q]), [se, Fe] = w.useState(() => ne || K), [qe, Me] = Eo({
    name: "YearCalendar",
    state: "hasFocus",
    controlled: A,
    default: d ?? !1
  }), fe = St((ye) => {
    Me(ye), V && V(ye);
  }), De = w.useCallback((ye) => {
    if (R && q.isBeforeYear(ye, te) || S && q.isAfterYear(ye, te) || k && q.isBeforeYear(ye, k) || D && q.isAfterYear(ye, D))
      return !0;
    if (!O)
      return !1;
    const ae = q.startOfYear(ye);
    return O(ae);
  }, [S, R, D, k, te, O, q]), be = St((ye, ae) => {
    if (P)
      return;
    const $e = q.setYear(H ?? Q, ae);
    J($e);
  }), Ce = St((ye) => {
    De(q.setYear(H ?? Q, ye)) || (Fe(ye), fe(!0), _ == null || _(ye));
  });
  w.useEffect(() => {
    Fe((ye) => ne !== null && ye !== ne ? ne : ye);
  }, [ne]);
  const de = St((ye, ae) => {
    switch (ye.key) {
      case "ArrowUp":
        Ce(ae - B), ye.preventDefault();
        break;
      case "ArrowDown":
        Ce(ae + B), ye.preventDefault();
        break;
      case "ArrowLeft":
        Ce(ae + (Z.direction === "ltr" ? -1 : 1)), ye.preventDefault();
        break;
      case "ArrowRight":
        Ce(ae + (Z.direction === "ltr" ? 1 : -1)), ye.preventDefault();
        break;
    }
  }), Ae = St((ye, ae) => {
    Ce(ae);
  }), at = St((ye, ae) => {
    se === ae && fe(!1);
  }), Oe = w.useRef(null), _e = cn(i, Oe);
  return w.useEffect(() => {
    if (d || Oe.current === null)
      return;
    const ye = Oe.current.querySelector('[tabindex="0"]');
    if (!ye)
      return;
    const ae = ye.offsetHeight, $e = ye.offsetTop, Se = Oe.current.clientHeight, mt = Oe.current.scrollTop, Be = $e + ae;
    ae > Se || $e < mt || (Oe.current.scrollTop = Be - Se / 2 - ae / 2);
  }, [d]), /* @__PURE__ */ z(yre, x({
    ref: _e,
    className: ve(ie.root, p),
    ownerState: re,
    role: "radiogroup",
    "aria-labelledby": F
  }, Y, {
    children: q.getYearRange(k, D).map((ye) => {
      const ae = q.getYear(ye), $e = ae === ne, Se = b || De(ye);
      return /* @__PURE__ */ z(fre, {
        selected: $e,
        value: ae,
        onClick: be,
        onKeyDown: de,
        autoFocus: qe && ae === se,
        disabled: Se,
        tabIndex: ae === se ? 0 : -1,
        onFocus: Ae,
        onBlur: at,
        "aria-current": K === ae ? "date" : void 0,
        yearsPerRow: B,
        children: q.format(ye, "year")
      }, q.format(ye, "year"));
    })
  }));
});
process.env.NODE_ENV !== "production" && (AL.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  autoFocus: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * className applied to the root element.
   */
  className: t.string,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true` picker is disabled
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  gridLabelId: t.string,
  hasFocus: t.bool,
  /**
   * Maximal selectable date.
   */
  maxDate: t.any,
  /**
   * Minimal selectable date.
   */
  minDate: t.any,
  /**
   * Callback fired when the value changes.
   * @template TDate
   * @param {TDate} value The new value.
   */
  onChange: t.func,
  onFocusedViewChange: t.func,
  onYearFocus: t.func,
  /**
   * If `true` picker is readonly
   */
  readOnly: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid year using the validation props, except callbacks such as `shouldDisableYear`.
   */
  referenceDate: t.any,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: t.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * Years rendered per row.
   * @default 3
   */
  yearsPerRow: t.oneOf([3, 4])
});
const bre = (e) => We("MuiPickersCalendarHeader", e), Cre = Ge("MuiPickersCalendarHeader", ["root", "labelContainer", "label", "switchViewButton", "switchViewIcon"]), xre = ["slots", "slotProps", "components", "componentsProps", "currentMonth", "disabled", "disableFuture", "disablePast", "maxDate", "minDate", "onMonthChange", "onViewChange", "view", "reduceAnimations", "views", "labelId", "className", "timezone"], Sre = ["ownerState"], Tre = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"],
    labelContainer: ["labelContainer"],
    label: ["label"],
    switchViewButton: ["switchViewButton"],
    switchViewIcon: ["switchViewIcon"]
  }, bre, o);
}, wre = ee("div", {
  name: "MuiPickersCalendarHeader",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({
  display: "flex",
  alignItems: "center",
  marginTop: 16,
  marginBottom: 8,
  paddingLeft: 24,
  paddingRight: 12,
  // prevent jumping in safari
  maxHeight: 30,
  minHeight: 30
}), Ere = ee("div", {
  name: "MuiPickersCalendarHeader",
  slot: "LabelContainer",
  overridesResolver: (e, o) => o.labelContainer
})(({
  theme: e
}) => x({
  display: "flex",
  overflow: "hidden",
  alignItems: "center",
  cursor: "pointer",
  marginRight: "auto"
}, e.typography.body1, {
  fontWeight: e.typography.fontWeightMedium
})), Rre = ee("div", {
  name: "MuiPickersCalendarHeader",
  slot: "Label",
  overridesResolver: (e, o) => o.label
})({
  marginRight: 6
}), Ore = ee(Wi, {
  name: "MuiPickersCalendarHeader",
  slot: "SwitchViewButton",
  overridesResolver: (e, o) => o.switchViewButton
})(({
  ownerState: e
}) => x({
  marginRight: "auto"
}, e.view === "year" && {
  [`.${Cre.switchViewIcon}`]: {
    transform: "rotate(180deg)"
  }
})), kre = ee($te, {
  name: "MuiPickersCalendarHeader",
  slot: "SwitchViewIcon",
  overridesResolver: (e, o) => o.switchViewIcon
})(({
  theme: e
}) => ({
  willChange: "transform",
  transition: e.transitions.create("transform"),
  transform: "rotate(0deg)"
})), _L = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d, p, f;
  const v = Zc(), g = to(), b = Ue({
    props: o,
    name: "MuiPickersCalendarHeader"
  }), {
    slots: S,
    slotProps: R,
    components: D,
    currentMonth: k,
    disabled: $,
    disableFuture: P,
    disablePast: O,
    maxDate: I,
    minDate: _,
    onMonthChange: A,
    onViewChange: V,
    view: B,
    reduceAnimations: M,
    views: F,
    labelId: Y,
    className: H,
    timezone: J
  } = b, W = ue(b, xre), te = b, Z = Tre(b), q = (c = (d = S == null ? void 0 : S.switchViewButton) != null ? d : D == null ? void 0 : D.SwitchViewButton) != null ? c : Ore, Q = ln({
    elementType: q,
    externalSlotProps: R == null ? void 0 : R.switchViewButton,
    additionalProps: {
      size: "small",
      "aria-label": v.calendarViewSwitchingButtonAriaLabel(B)
    },
    ownerState: te,
    className: Z.switchViewButton
  }), re = (p = (f = S == null ? void 0 : S.switchViewIcon) != null ? f : D == null ? void 0 : D.SwitchViewIcon) != null ? p : kre, ie = ln({
    elementType: re,
    externalSlotProps: R == null ? void 0 : R.switchViewIcon,
    ownerState: void 0,
    className: Z.switchViewIcon
  }), K = ue(ie, Sre), ne = () => A(g.addMonths(k, 1), "left"), se = () => A(g.addMonths(k, -1), "right"), Fe = Qte(k, {
    disableFuture: P,
    maxDate: I,
    timezone: J
  }), qe = Xte(k, {
    disablePast: O,
    minDate: _,
    timezone: J
  }), Me = () => {
    if (!(F.length === 1 || !V || $))
      if (F.length === 2)
        V(F.find((fe) => fe !== B) || F[0]);
      else {
        const fe = F.indexOf(B) !== 0 ? 0 : 1;
        V(F[fe]);
      }
  };
  return F.length === 1 && F[0] === "year" ? null : /* @__PURE__ */ ht(wre, x({}, W, {
    ownerState: te,
    className: ve(H, Z.root),
    ref: i,
    children: [/* @__PURE__ */ ht(Ere, {
      role: "presentation",
      onClick: Me,
      ownerState: te,
      "aria-live": "polite",
      className: Z.labelContainer,
      children: [/* @__PURE__ */ z(IL, {
        reduceAnimations: M,
        transKey: g.format(k, "monthAndYear"),
        children: /* @__PURE__ */ z(Rre, {
          id: Y,
          ownerState: te,
          className: Z.label,
          children: g.format(k, "monthAndYear")
        })
      }), F.length > 1 && !$ && /* @__PURE__ */ z(q, x({}, Q, {
        children: /* @__PURE__ */ z(re, x({}, K))
      }))]
    }), /* @__PURE__ */ z(_f, {
      in: B === "day",
      children: /* @__PURE__ */ z(Wte, {
        slots: S,
        slotProps: R,
        onGoToPrevious: se,
        isPreviousDisabled: qe,
        previousLabel: v.previousMonth,
        onGoToNext: ne,
        isNextDisabled: Fe,
        nextLabel: v.nextMonth
      })
    })]
  }));
});
process.env.NODE_ENV !== "production" && (_L.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * className applied to the root element.
   */
  className: t.string,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  currentMonth: t.any.isRequired,
  disabled: t.bool,
  disableFuture: t.bool,
  disablePast: t.bool,
  labelId: t.string,
  maxDate: t.any.isRequired,
  minDate: t.any.isRequired,
  onMonthChange: t.func.isRequired,
  onViewChange: t.func,
  reduceAnimations: t.bool.isRequired,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  timezone: t.string.isRequired,
  view: t.oneOf(["day", "month", "year"]).isRequired,
  views: t.arrayOf(t.oneOf(["day", "month", "year"]).isRequired).isRequired
});
const Dre = (e) => We("MuiDateCalendar", e);
Ge("MuiDateCalendar", ["root", "viewTransitionContainer"]);
const Mre = ["autoFocus", "onViewChange", "value", "defaultValue", "referenceDate", "disableFuture", "disablePast", "defaultCalendarMonth", "onChange", "onYearChange", "onMonthChange", "reduceAnimations", "shouldDisableDate", "shouldDisableMonth", "shouldDisableYear", "view", "views", "openTo", "className", "disabled", "readOnly", "minDate", "maxDate", "disableHighlightToday", "focusedView", "onFocusedViewChange", "showDaysOutsideCurrentMonth", "fixedWeekNumber", "dayOfWeekFormatter", "components", "componentsProps", "slots", "slotProps", "loading", "renderLoading", "displayWeekNumber", "yearsPerRow", "monthsPerRow", "timezone"], Nre = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"],
    viewTransitionContainer: ["viewTransitionContainer"]
  }, Dre, o);
};
function Pre(e, o) {
  var i, c, d, p, f, v, g;
  const b = to(), S = Jv(), R = EL(), D = Ue({
    props: e,
    name: o
  });
  return x({}, D, {
    loading: (i = D.loading) != null ? i : !1,
    disablePast: (c = D.disablePast) != null ? c : !1,
    disableFuture: (d = D.disableFuture) != null ? d : !1,
    openTo: (p = D.openTo) != null ? p : "day",
    views: (f = D.views) != null ? f : ["year", "day"],
    reduceAnimations: (v = D.reduceAnimations) != null ? v : R,
    renderLoading: (g = D.renderLoading) != null ? g : () => /* @__PURE__ */ z("span", {
      children: "..."
    }),
    minDate: vi(b, D.minDate, S.minDate),
    maxDate: vi(b, D.maxDate, S.maxDate)
  });
}
const $re = ee(Jte, {
  name: "MuiDateCalendar",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({
  display: "flex",
  flexDirection: "column",
  height: Gw
}), Ire = ee(IL, {
  name: "MuiDateCalendar",
  slot: "ViewTransitionContainer",
  overridesResolver: (e, o) => o.viewTransitionContainer
})({}), BL = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d, p;
  const f = to(), v = Na(), g = Pre(o, "MuiDateCalendar"), {
    autoFocus: b,
    onViewChange: S,
    value: R,
    defaultValue: D,
    referenceDate: k,
    disableFuture: $,
    disablePast: P,
    defaultCalendarMonth: O,
    onChange: I,
    onYearChange: _,
    onMonthChange: A,
    reduceAnimations: V,
    shouldDisableDate: B,
    shouldDisableMonth: M,
    shouldDisableYear: F,
    view: Y,
    views: H,
    openTo: J,
    className: W,
    disabled: te,
    readOnly: Z,
    minDate: q,
    maxDate: Q,
    disableHighlightToday: re,
    focusedView: ie,
    onFocusedViewChange: K,
    showDaysOutsideCurrentMonth: ne,
    fixedWeekNumber: se,
    dayOfWeekFormatter: Fe,
    components: qe,
    componentsProps: Me,
    slots: fe,
    slotProps: De,
    loading: be,
    renderLoading: Ce,
    displayWeekNumber: de,
    yearsPerRow: Ae,
    monthsPerRow: at,
    timezone: Oe
  } = g, _e = ue(g, Mre), {
    value: ye,
    handleValueChange: ae,
    timezone: $e
  } = Xw({
    name: "DateCalendar",
    timezone: Oe,
    value: R,
    defaultValue: D,
    onChange: I,
    valueManager: Al
  }), {
    view: Se,
    setView: mt,
    focusedView: Be,
    setFocusedView: ft,
    goToNextView: je,
    setValueAndGoToNextView: Ve
  } = uL({
    view: Y,
    views: H,
    openTo: J,
    onChange: ae,
    onViewChange: S,
    autoFocus: b,
    focusedView: ie,
    onFocusedViewChange: K
  }), {
    referenceDate: st,
    calendarState: gt,
    changeFocusedDay: Tt,
    changeMonth: _t,
    handleChangeMonth: Zt,
    isDateDisabled: Vt,
    onMonthSwitchingAnimationEnd: Te
  } = joe({
    value: ye,
    defaultCalendarMonth: O,
    referenceDate: k,
    reduceAnimations: V,
    onMonthChange: A,
    minDate: q,
    maxDate: Q,
    shouldDisableDate: B,
    disablePast: P,
    disableFuture: $,
    timezone: $e
  }), xe = te && ye || q, ot = te && ye || Q, He = `${v}-grid-label`, it = Be !== null, Ze = (c = (d = fe == null ? void 0 : fe.calendarHeader) != null ? d : qe == null ? void 0 : qe.CalendarHeader) != null ? c : _L, nt = ln({
    elementType: Ze,
    externalSlotProps: (p = De == null ? void 0 : De.calendarHeader) != null ? p : Me == null ? void 0 : Me.calendarHeader,
    additionalProps: {
      views: H,
      view: Se,
      currentMonth: gt.currentMonth,
      onViewChange: mt,
      onMonthChange: (nn, Un) => Zt({
        newMonth: nn,
        direction: Un
      }),
      minDate: xe,
      maxDate: ot,
      disabled: te,
      disablePast: P,
      disableFuture: $,
      reduceAnimations: V,
      timezone: $e,
      labelId: He,
      slots: fe,
      slotProps: De
    },
    ownerState: g
  }), Le = St((nn) => {
    const Un = f.startOfMonth(nn), Ro = f.endOfMonth(nn), Oo = Vt(nn) ? Ov({
      utils: f,
      date: nn,
      minDate: f.isBefore(q, Un) ? Un : q,
      maxDate: f.isAfter(Q, Ro) ? Ro : Q,
      disablePast: P,
      disableFuture: $,
      isDateDisabled: Vt,
      timezone: $e
    }) : nn;
    Oo ? (Ve(Oo, "finish"), A == null || A(Un)) : (je(), _t(Un)), Tt(Oo, !0);
  }), et = St((nn) => {
    const Un = f.startOfYear(nn), Ro = f.endOfYear(nn), Oo = Vt(nn) ? Ov({
      utils: f,
      date: nn,
      minDate: f.isBefore(q, Un) ? Un : q,
      maxDate: f.isAfter(Q, Ro) ? Ro : Q,
      disablePast: P,
      disableFuture: $,
      isDateDisabled: Vt,
      timezone: $e
    }) : nn;
    Oo ? (Ve(Oo, "finish"), _ == null || _(Oo)) : (je(), _t(Un)), Tt(Oo, !0);
  }), pt = St((nn) => ae(nn && Y1(f, nn, ye ?? st), "finish", Se));
  w.useEffect(() => {
    ye != null && f.isValid(ye) && _t(ye);
  }, [ye]);
  const Dt = g, Nt = Nre(Dt), Jt = {
    disablePast: P,
    disableFuture: $,
    maxDate: Q,
    minDate: q
  }, Yt = {
    disableHighlightToday: re,
    readOnly: Z,
    disabled: te,
    timezone: $e,
    gridLabelId: He
  }, en = w.useRef(Se);
  w.useEffect(() => {
    en.current !== Se && (Be === en.current && ft(Se, !0), en.current = Se);
  }, [Be, ft, Se]);
  const Nn = w.useMemo(() => [ye], [ye]);
  return /* @__PURE__ */ ht($re, x({
    ref: i,
    className: ve(Nt.root, W),
    ownerState: Dt
  }, _e, {
    children: [/* @__PURE__ */ z(Ze, x({}, nt)), /* @__PURE__ */ z(Ire, {
      reduceAnimations: V,
      className: Nt.viewTransitionContainer,
      transKey: Se,
      ownerState: Dt,
      children: /* @__PURE__ */ ht("div", {
        children: [Se === "year" && /* @__PURE__ */ z(AL, x({}, Jt, Yt, {
          value: ye,
          onChange: et,
          shouldDisableYear: F,
          hasFocus: it,
          onFocusedViewChange: (nn) => ft("year", nn),
          yearsPerRow: Ae,
          referenceDate: st
        })), Se === "month" && /* @__PURE__ */ z(LL, x({}, Jt, Yt, {
          hasFocus: it,
          className: W,
          value: ye,
          onChange: Le,
          shouldDisableMonth: M,
          onFocusedViewChange: (nn) => ft("month", nn),
          monthsPerRow: at,
          referenceDate: st
        })), Se === "day" && /* @__PURE__ */ z(Voe, x({}, gt, Jt, Yt, {
          onMonthSwitchingAnimationEnd: Te,
          onFocusedDayChange: Tt,
          reduceAnimations: V,
          selectedDays: Nn,
          onSelectedDaysChange: pt,
          shouldDisableDate: B,
          shouldDisableMonth: M,
          shouldDisableYear: F,
          hasFocus: it,
          onFocusedViewChange: (nn) => ft("day", nn),
          showDaysOutsideCurrentMonth: ne,
          fixedWeekNumber: se,
          dayOfWeekFormatter: Fe,
          displayWeekNumber: de,
          components: qe,
          componentsProps: Me,
          slots: fe,
          slotProps: De,
          loading: be,
          renderLoading: Ce
        }))]
      })
    })]
  }));
});
process.env.NODE_ENV !== "production" && (BL.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  className: t.string,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: t.func,
  /**
   * Default calendar month displayed when `value` and `defaultValue` are empty.
   * @deprecated Consider using `referenceDate` instead.
   */
  defaultCalendarMonth: t.any,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: t.bool,
  /**
   * Calendar will show more weeks in order to match this value.
   * Put it to 6 for having fix number of week in Gregorian calendars
   * @default undefined
   */
  fixedWeekNumber: t.number,
  /**
   * Controlled focused view.
   */
  focusedView: t.oneOf(["day", "month", "year"]),
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: t.bool,
  /**
   * Maximal selectable date.
   */
  maxDate: t.any,
  /**
   * Minimal selectable date.
   */
  minDate: t.any,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: t.oneOf([3, 4]),
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TView The view type. Will be one of date or time views.
   * @param {TValue} value The new value.
   * @param {PickerSelectionState | undefined} selectionState Indicates if the date selection is complete.
   * @param {TView | undefined} selectedView Indicates the view in which the selection has been made.
   */
  onChange: t.func,
  /**
   * Callback fired on focused view change.
   * @template TView
   * @param {TView} view The new view to focus or not.
   * @param {boolean} hasFocus `true` if the view should be focused.
   */
  onFocusedViewChange: t.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: t.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: t.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: t.func,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: t.oneOf(["day", "month", "year"]),
  /**
   * Make picker read only.
   * @default false
   */
  readOnly: t.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`.
   */
  referenceDate: t.any,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: t.func,
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: t.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: t.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: t.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: t.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: t.oneOf(["day", "month", "year"]),
  /**
   * Available views.
   */
  views: t.arrayOf(t.oneOf(["day", "month", "year"]).isRequired),
  /**
   * Years rendered per row.
   * @default 3
   */
  yearsPerRow: t.oneOf([3, 4])
});
function Lre(e) {
  return We("MuiDatePickerToolbar", e);
}
Ge("MuiDatePickerToolbar", ["root", "title"]);
const Are = ["value", "isLandscape", "onChange", "toolbarFormat", "toolbarPlaceholder", "views", "className"], _re = (e) => {
  const {
    classes: o
  } = e;
  return Ye({
    root: ["root"],
    title: ["title"]
  }, Lre, o);
}, Bre = ee(toe, {
  name: "MuiDatePickerToolbar",
  slot: "Root",
  overridesResolver: (e, o) => o.root
})({}), zre = ee(wo, {
  name: "MuiDatePickerToolbar",
  slot: "Title",
  overridesResolver: (e, o) => o.title
})(({
  ownerState: e
}) => x({}, e.isLandscape && {
  margin: "auto 16px auto auto"
})), zL = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiDatePickerToolbar"
  }), {
    value: d,
    isLandscape: p,
    toolbarFormat: f,
    toolbarPlaceholder: v = "––",
    views: g,
    className: b
  } = c, S = ue(c, Are), R = to(), D = Zc(), k = _re(c), $ = w.useMemo(() => {
    if (!d)
      return v;
    const O = Kw(R, {
      format: f,
      views: g
    }, !0);
    return R.formatByString(d, O);
  }, [d, f, v, R, g]), P = c;
  return /* @__PURE__ */ z(Bre, x({
    ref: i,
    toolbarTitle: D.datePickerToolbarTitle,
    isLandscape: p,
    className: ve(k.root, b)
  }, S, {
    children: /* @__PURE__ */ z(zre, {
      variant: "h4",
      align: p ? "left" : "center",
      ownerState: P,
      className: k.title,
      children: $
    })
  }));
});
process.env.NODE_ENV !== "production" && (zL.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * className applied to the root component.
   */
  className: t.string,
  disabled: t.bool,
  /**
   * If `true`, show the toolbar even in desktop mode.
   * @default `true` for Desktop, `false` for Mobile.
   */
  hidden: t.bool,
  isLandscape: t.bool.isRequired,
  onChange: t.func.isRequired,
  /**
   * Callback called when a toolbar is clicked
   * @template TView
   * @param {TView} view The view to open
   */
  onViewChange: t.func.isRequired,
  readOnly: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  titleId: t.string,
  /**
   * Toolbar date format.
   */
  toolbarFormat: t.string,
  /**
   * Toolbar value placeholder—it is displayed when the value is empty.
   * @default "––"
   */
  toolbarPlaceholder: t.node,
  value: t.any,
  /**
   * Currently visible picker view.
   */
  view: t.oneOf(["day", "month", "year"]).isRequired,
  views: t.arrayOf(t.oneOf(["day", "month", "year"]).isRequired).isRequired
});
function VL(e, o) {
  var i, c, d, p;
  const f = to(), v = Jv(), g = Ue({
    props: e,
    name: o
  }), b = w.useMemo(() => {
    var R;
    return ((R = g.localeText) == null ? void 0 : R.toolbarTitle) == null ? g.localeText : x({}, g.localeText, {
      datePickerToolbarTitle: g.localeText.toolbarTitle
    });
  }, [g.localeText]), S = (i = g.slots) != null ? i : yL(g.components);
  return x({}, g, {
    localeText: b
  }, Yte({
    views: g.views,
    openTo: g.openTo,
    defaultViews: ["year", "day"],
    defaultOpenTo: "day"
  }), {
    disableFuture: (c = g.disableFuture) != null ? c : !1,
    disablePast: (d = g.disablePast) != null ? d : !1,
    minDate: vi(f, g.minDate, v.minDate),
    maxDate: vi(f, g.maxDate, v.maxDate),
    slots: x({
      toolbar: zL
    }, S),
    slotProps: (p = g.slotProps) != null ? p : g.componentsProps
  });
}
const Vre = ["props", "getOpenDialogAriaText"], Fre = ["ownerState"], jre = ["ownerState"], Ure = (e) => {
  var o, i, c, d, p;
  let {
    props: f,
    getOpenDialogAriaText: v
  } = e, g = ue(e, Vre);
  const {
    slots: b,
    slotProps: S,
    className: R,
    sx: D,
    format: k,
    formatDensity: $,
    timezone: P,
    name: O,
    label: I,
    inputRef: _,
    readOnly: A,
    disabled: V,
    autoFocus: B,
    localeText: M,
    reduceAnimations: F
  } = f, Y = to(), H = w.useRef(null), J = w.useRef(null), W = Na(), te = (o = S == null || (i = S.toolbar) == null ? void 0 : i.hidden) != null ? o : !1, {
    open: Z,
    actions: q,
    hasUIView: Q,
    layoutProps: re,
    renderCurrentView: ie,
    shouldRestoreFocus: K,
    fieldProps: ne
  } = OL(x({}, g, {
    props: f,
    inputRef: H,
    autoFocusView: !0,
    additionalViewProps: {},
    wrapperVariant: "desktop"
  })), se = (c = b.inputAdornment) != null ? c : P$, Fe = ln({
    elementType: se,
    externalSlotProps: S == null ? void 0 : S.inputAdornment,
    additionalProps: {
      position: "end"
    },
    ownerState: f
  }), qe = ue(Fe, Fre), Me = (d = b.openPickerButton) != null ? d : Wi, fe = ln({
    elementType: Me,
    externalSlotProps: S == null ? void 0 : S.openPickerButton,
    additionalProps: {
      disabled: V || A,
      onClick: Z ? q.onClose : q.onOpen,
      "aria-label": v(ne.value, Y),
      edge: qe.position
    },
    ownerState: f
  }), De = ue(fe, jre), be = b.openPickerIcon, Ce = b.field, de = ln({
    elementType: Ce,
    externalSlotProps: S == null ? void 0 : S.field,
    additionalProps: x({}, ne, te && {
      id: W
    }, {
      readOnly: A,
      disabled: V,
      className: R,
      sx: D,
      format: k,
      formatDensity: $,
      timezone: P,
      label: I,
      name: O,
      autoFocus: B && !f.open,
      focused: Z ? !0 : void 0
    }),
    ownerState: f
  });
  Q && (de.InputProps = x({}, de.InputProps, {
    ref: J,
    [`${qe.position}Adornment`]: /* @__PURE__ */ z(se, x({}, qe, {
      children: /* @__PURE__ */ z(Me, x({}, De, {
        children: /* @__PURE__ */ z(be, x({}, S == null ? void 0 : S.openPickerIcon))
      }))
    }))
  }));
  const Ae = x({
    textField: b.textField,
    clearIcon: b.clearIcon,
    clearButton: b.clearButton
  }, de.slots), at = (p = b.layout) != null ? p : eE, Oe = cn(H, de.inputRef, _);
  let _e = W;
  te && (I ? _e = `${W}-label` : _e = void 0);
  const ye = x({}, S, {
    toolbar: x({}, S == null ? void 0 : S.toolbar, {
      titleId: W
    }),
    popper: x({
      "aria-labelledby": _e
    }, S == null ? void 0 : S.popper)
  });
  return {
    renderPicker: () => /* @__PURE__ */ ht(Yw, {
      localeText: M,
      children: [/* @__PURE__ */ z(Ce, x({}, de, {
        slots: Ae,
        slotProps: ye,
        inputRef: Oe
      })), /* @__PURE__ */ z(Qne, x({
        role: "dialog",
        placement: "bottom-start",
        anchorEl: J.current
      }, q, {
        open: Z,
        slots: b,
        slotProps: ye,
        shouldRestoreFocus: K,
        reduceAnimations: F,
        children: /* @__PURE__ */ z(at, x({}, re, ye == null ? void 0 : ye.layout, {
          slots: b,
          slotProps: ye,
          children: ie()
        }))
      }))]
    })
  };
}, Rf = ({
  view: e,
  onViewChange: o,
  views: i,
  focusedView: c,
  onFocusedViewChange: d,
  value: p,
  defaultValue: f,
  referenceDate: v,
  onChange: g,
  className: b,
  classes: S,
  disableFuture: R,
  disablePast: D,
  minDate: k,
  maxDate: $,
  shouldDisableDate: P,
  shouldDisableMonth: O,
  shouldDisableYear: I,
  reduceAnimations: _,
  onMonthChange: A,
  monthsPerRow: V,
  onYearChange: B,
  yearsPerRow: M,
  defaultCalendarMonth: F,
  components: Y,
  componentsProps: H,
  slots: J,
  slotProps: W,
  loading: te,
  renderLoading: Z,
  disableHighlightToday: q,
  readOnly: Q,
  disabled: re,
  showDaysOutsideCurrentMonth: ie,
  dayOfWeekFormatter: K,
  sx: ne,
  autoFocus: se,
  fixedWeekNumber: Fe,
  displayWeekNumber: qe,
  timezone: Me
}) => /* @__PURE__ */ z(BL, {
  view: e,
  onViewChange: o,
  views: i.filter(UM),
  focusedView: c && UM(c) ? c : null,
  onFocusedViewChange: d,
  value: p,
  defaultValue: f,
  referenceDate: v,
  onChange: g,
  className: b,
  classes: S,
  disableFuture: R,
  disablePast: D,
  minDate: k,
  maxDate: $,
  shouldDisableDate: P,
  shouldDisableMonth: O,
  shouldDisableYear: I,
  reduceAnimations: _,
  onMonthChange: A,
  monthsPerRow: V,
  onYearChange: B,
  yearsPerRow: M,
  defaultCalendarMonth: F,
  components: Y,
  componentsProps: H,
  slots: J,
  slotProps: W,
  loading: te,
  renderLoading: Z,
  disableHighlightToday: q,
  readOnly: Q,
  disabled: re,
  showDaysOutsideCurrentMonth: ie,
  dayOfWeekFormatter: K,
  sx: ne,
  autoFocus: se,
  fixedWeekNumber: Fe,
  displayWeekNumber: qe,
  timezone: Me
}), FL = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d, p, f;
  const v = Zc(), g = to(), b = VL(o, "MuiDesktopDatePicker"), S = x({
    day: Rf,
    month: Rf,
    year: Rf
  }, b.viewRenderers), R = x({}, b, {
    viewRenderers: S,
    format: Kw(g, b, !1),
    yearsPerRow: (c = b.yearsPerRow) != null ? c : 4,
    slots: x({
      openPickerIcon: Ate,
      field: tE
    }, b.slots),
    slotProps: x({}, b.slotProps, {
      field: (k) => {
        var $;
        return x({}, s0(($ = b.slotProps) == null ? void 0 : $.field, k), wL(b), {
          ref: i
        });
      },
      toolbar: x({
        hidden: !0
      }, (d = b.slotProps) == null ? void 0 : d.toolbar)
    })
  }), {
    renderPicker: D
  } = Ure({
    props: R,
    valueManager: Al,
    valueType: "date",
    getOpenDialogAriaText: (p = (f = R.localeText) == null ? void 0 : f.openDatePickerDialogue) != null ? p : v.openDatePickerDialogue,
    validator: S0
  });
  return D();
});
FL.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: t.bool,
  /**
   * Class name applied to the root element.
   */
  className: t.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: t.bool,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: t.func,
  /**
   * Default calendar month displayed when `value` and `defaultValue` are empty.
   * @deprecated Consider using `referenceDate` instead.
   */
  defaultCalendarMonth: t.any,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: t.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: t.bool,
  /**
   * Calendar will show more weeks in order to match this value.
   * Put it to 6 for having fix number of week in Gregorian calendars
   * @default undefined
   */
  fixedWeekNumber: t.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: t.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: t.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Lo,
  /**
   * The label content.
   */
  label: t.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: t.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: t.object,
  /**
   * Maximal selectable date.
   */
  maxDate: t.any,
  /**
   * Minimal selectable date.
   */
  minDate: t.any,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: t.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: t.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   */
  onAccept: t.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: t.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: t.func,
  /**
   * Callback fired when the error associated to the current value changes.
   * If the error has a non-null value, then the `TextField` will be rendered in `error` state.
   *
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TError} error The new error describing why the current value is not valid.
   * @param {TValue} value The value associated to the error.
   */
  onError: t.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: t.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: t.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: t.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: t.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: t.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: t.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: t.oneOf(["day", "month", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: t.oneOf(["landscape", "portrait"]),
  readOnly: t.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: t.any,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: t.func,
  /**
   * The currently selected sections.
   * This prop accept four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If an object with a `startIndex` and `endIndex` properties are provided, the sections between those two indexes will be selected.
   * 3. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 4. If `null` is provided, no section will be selected
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: t.oneOfType([t.oneOf(["all", "day", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), t.number, t.shape({
    endIndex: t.number.isRequired,
    startIndex: t.number.isRequired
  })]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: t.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: t.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: t.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: t.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: t.oneOf(["day", "month", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be the used.
   */
  viewRenderers: t.shape({
    day: t.func,
    month: t.func,
    year: t.func
  }),
  /**
   * Available views.
   */
  views: t.arrayOf(t.oneOf(["day", "month", "year"]).isRequired),
  /**
   * Years rendered per row.
   * @default 4
   */
  yearsPerRow: t.oneOf([3, 4])
};
const Hre = ["props", "getOpenDialogAriaText"], Wre = (e) => {
  var o, i, c;
  let {
    props: d,
    getOpenDialogAriaText: p
  } = e, f = ue(e, Hre);
  const {
    slots: v,
    slotProps: g,
    className: b,
    sx: S,
    format: R,
    formatDensity: D,
    timezone: k,
    name: $,
    label: P,
    inputRef: O,
    readOnly: I,
    disabled: _,
    localeText: A
  } = d, V = to(), B = w.useRef(null), M = Na(), F = (o = g == null || (i = g.toolbar) == null ? void 0 : i.hidden) != null ? o : !1, {
    open: Y,
    actions: H,
    layoutProps: J,
    renderCurrentView: W,
    fieldProps: te
  } = OL(x({}, f, {
    props: d,
    inputRef: B,
    autoFocusView: !0,
    additionalViewProps: {},
    wrapperVariant: "mobile"
  })), Z = v.field, q = ln({
    elementType: Z,
    externalSlotProps: g == null ? void 0 : g.field,
    additionalProps: x({}, te, F && {
      id: M
    }, !(_ || I) && {
      onClick: H.onOpen,
      onKeyDown: kne(H.onOpen)
    }, {
      readOnly: I ?? !0,
      disabled: _,
      className: b,
      sx: S,
      format: R,
      formatDensity: D,
      timezone: k,
      label: P,
      name: $
    }),
    ownerState: d
  });
  q.inputProps = x({}, q.inputProps, {
    "aria-label": p(te.value, V)
  });
  const Q = x({
    textField: v.textField
  }, q.slots), re = (c = v.layout) != null ? c : eE, ie = cn(B, q.inputRef, O);
  let K = M;
  F && (P ? K = `${M}-label` : K = void 0);
  const ne = x({}, g, {
    toolbar: x({}, g == null ? void 0 : g.toolbar, {
      titleId: M
    }),
    mobilePaper: x({
      "aria-labelledby": K
    }, g == null ? void 0 : g.mobilePaper)
  });
  return {
    renderPicker: () => /* @__PURE__ */ ht(Yw, {
      localeText: A,
      children: [/* @__PURE__ */ z(Z, x({}, q, {
        slots: Q,
        slotProps: ne,
        inputRef: ie
      })), /* @__PURE__ */ z(zne, x({}, H, {
        open: Y,
        slots: v,
        slotProps: ne,
        children: /* @__PURE__ */ z(re, x({}, J, ne == null ? void 0 : ne.layout, {
          slots: v,
          slotProps: ne,
          children: W()
        }))
      }))]
    })
  };
}, jL = /* @__PURE__ */ w.forwardRef(function(o, i) {
  var c, d, p;
  const f = Zc(), v = to(), g = VL(o, "MuiMobileDatePicker"), b = x({
    day: Rf,
    month: Rf,
    year: Rf
  }, g.viewRenderers), S = x({}, g, {
    viewRenderers: b,
    format: Kw(v, g, !1),
    slots: x({
      field: tE
    }, g.slots),
    slotProps: x({}, g.slotProps, {
      field: (D) => {
        var k;
        return x({}, s0((k = g.slotProps) == null ? void 0 : k.field, D), wL(g), {
          ref: i
        });
      },
      toolbar: x({
        hidden: !1
      }, (c = g.slotProps) == null ? void 0 : c.toolbar)
    })
  }), {
    renderPicker: R
  } = Wre({
    props: S,
    valueManager: Al,
    valueType: "date",
    getOpenDialogAriaText: (d = (p = S.localeText) == null ? void 0 : p.openDatePickerDialogue) != null ? d : f.openDatePickerDialogue,
    validator: S0
  });
  return R();
});
jL.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: t.bool,
  /**
   * Class name applied to the root element.
   */
  className: t.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: t.bool,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: t.func,
  /**
   * Default calendar month displayed when `value` and `defaultValue` are empty.
   * @deprecated Consider using `referenceDate` instead.
   */
  defaultCalendarMonth: t.any,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: t.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: t.bool,
  /**
   * Calendar will show more weeks in order to match this value.
   * Put it to 6 for having fix number of week in Gregorian calendars
   * @default undefined
   */
  fixedWeekNumber: t.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: t.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: t.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Lo,
  /**
   * The label content.
   */
  label: t.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: t.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: t.object,
  /**
   * Maximal selectable date.
   */
  maxDate: t.any,
  /**
   * Minimal selectable date.
   */
  minDate: t.any,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: t.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: t.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   */
  onAccept: t.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: t.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: t.func,
  /**
   * Callback fired when the error associated to the current value changes.
   * If the error has a non-null value, then the `TextField` will be rendered in `error` state.
   *
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TError} error The new error describing why the current value is not valid.
   * @param {TValue} value The value associated to the error.
   */
  onError: t.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: t.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: t.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: t.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: t.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: t.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: t.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: t.oneOf(["day", "month", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: t.oneOf(["landscape", "portrait"]),
  readOnly: t.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: t.any,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: t.func,
  /**
   * The currently selected sections.
   * This prop accept four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If an object with a `startIndex` and `endIndex` properties are provided, the sections between those two indexes will be selected.
   * 3. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 4. If `null` is provided, no section will be selected
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: t.oneOfType([t.oneOf(["all", "day", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), t.number, t.shape({
    endIndex: t.number.isRequired,
    startIndex: t.number.isRequired
  })]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: t.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: t.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: t.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: t.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: t.oneOf(["day", "month", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be the used.
   */
  viewRenderers: t.shape({
    day: t.func,
    month: t.func,
    year: t.func
  }),
  /**
   * Available views.
   */
  views: t.arrayOf(t.oneOf(["day", "month", "year"]).isRequired),
  /**
   * Years rendered per row.
   * @default 3
   */
  yearsPerRow: t.oneOf([3, 4])
};
const Yre = ["desktopModeMediaQuery"], Gre = /* @__PURE__ */ w.forwardRef(function(o, i) {
  const c = Ue({
    props: o,
    name: "MuiDatePicker"
  }), {
    desktopModeMediaQuery: d = Dne
  } = c, p = ue(c, Yre);
  return Z1(d, {
    defaultMatches: !0
  }) ? /* @__PURE__ */ z(FL, x({
    ref: i
  }, p)) : /* @__PURE__ */ z(jL, x({
    ref: i
  }, p));
});
process.env.NODE_ENV !== "production" && (Gre.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: t.bool,
  /**
   * Class name applied to the root element.
   */
  className: t.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: t.bool,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: t.func,
  /**
   * Default calendar month displayed when `value` and `defaultValue` are empty.
   * @deprecated Consider using `referenceDate` instead.
   */
  defaultCalendarMonth: t.any,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * CSS media query when `Mobile` mode will be changed to `Desktop`.
   * @default '@media (pointer: fine)'
   * @example '@media (min-width: 720px)' or theme.breakpoints.up("sm")
   */
  desktopModeMediaQuery: t.string,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: t.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: t.bool,
  /**
   * Calendar will show more weeks in order to match this value.
   * Put it to 6 for having fix number of week in Gregorian calendars
   * @default undefined
   */
  fixedWeekNumber: t.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: t.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: t.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Lo,
  /**
   * The label content.
   */
  label: t.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: t.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: t.object,
  /**
   * Maximal selectable date.
   */
  maxDate: t.any,
  /**
   * Minimal selectable date.
   */
  minDate: t.any,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: t.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: t.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   */
  onAccept: t.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: t.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: t.func,
  /**
   * Callback fired when the error associated to the current value changes.
   * If the error has a non-null value, then the `TextField` will be rendered in `error` state.
   *
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TError} error The new error describing why the current value is not valid.
   * @param {TValue} value The value associated to the error.
   */
  onError: t.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: t.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: t.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: t.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: t.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: t.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: t.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: t.oneOf(["day", "month", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: t.oneOf(["landscape", "portrait"]),
  readOnly: t.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: t.any,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: t.func,
  /**
   * The currently selected sections.
   * This prop accept four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If an object with a `startIndex` and `endIndex` properties are provided, the sections between those two indexes will be selected.
   * 3. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 4. If `null` is provided, no section will be selected
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: t.oneOfType([t.oneOf(["all", "day", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), t.number, t.shape({
    endIndex: t.number.isRequired,
    startIndex: t.number.isRequired
  })]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: t.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: t.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: t.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: t.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: t.oneOf(["day", "month", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be the used.
   */
  viewRenderers: t.shape({
    day: t.func,
    month: t.func,
    year: t.func
  }),
  /**
   * Available views.
   */
  views: t.arrayOf(t.oneOf(["day", "month", "year"]).isRequired),
  /**
   * Years rendered per row.
   * @default 4 on desktop, 3 on mobile
   */
  yearsPerRow: t.oneOf([3, 4])
});
const Hr = {}, qre = {}, Kre = {}, Qre = {}, Xre = {};
Hr.extend(Kre);
Hr.extend(Qre);
Hr.extend(Xre);
const Zre = RL(["Your locale has not been found.", "Either the locale key is not a supported one. Locales supported by dayjs are available here: https://github.com/iamkun/dayjs/tree/dev/src/locale", "Or you forget to import the locale from 'dayjs/locale/{localeUsed}'", "fallback on English locale"]), Jre = {
  // Year
  YY: "year",
  YYYY: {
    sectionType: "year",
    contentType: "digit",
    maxLength: 4
  },
  // Month
  M: {
    sectionType: "month",
    contentType: "digit",
    maxLength: 2
  },
  MM: "month",
  MMM: {
    sectionType: "month",
    contentType: "letter"
  },
  MMMM: {
    sectionType: "month",
    contentType: "letter"
  },
  // Day of the month
  D: {
    sectionType: "day",
    contentType: "digit",
    maxLength: 2
  },
  DD: "day",
  Do: {
    sectionType: "day",
    contentType: "digit-with-letter"
  },
  // Day of the week
  d: {
    sectionType: "weekDay",
    contentType: "digit",
    maxLength: 2
  },
  dd: {
    sectionType: "weekDay",
    contentType: "letter"
  },
  ddd: {
    sectionType: "weekDay",
    contentType: "letter"
  },
  dddd: {
    sectionType: "weekDay",
    contentType: "letter"
  },
  // Meridiem
  A: "meridiem",
  a: "meridiem",
  // Hours
  H: {
    sectionType: "hours",
    contentType: "digit",
    maxLength: 2
  },
  HH: "hours",
  h: {
    sectionType: "hours",
    contentType: "digit",
    maxLength: 2
  },
  hh: "hours",
  // Minutes
  m: {
    sectionType: "minutes",
    contentType: "digit",
    maxLength: 2
  },
  mm: "minutes",
  // Seconds
  s: {
    sectionType: "seconds",
    contentType: "digit",
    maxLength: 2
  },
  ss: "seconds"
}, eae = {
  year: "YYYY",
  month: "MMMM",
  monthShort: "MMM",
  dayOfMonth: "D",
  weekday: "dddd",
  weekdayShort: "dd",
  hours24h: "HH",
  hours12h: "hh",
  meridiem: "A",
  minutes: "mm",
  seconds: "ss",
  fullDate: "ll",
  fullDateWithWeekday: "dddd, LL",
  keyboardDate: "L",
  shortDate: "MMM D",
  normalDate: "D MMMM",
  normalDateWithWeekday: "ddd, MMM D",
  monthAndYear: "MMMM YYYY",
  monthAndDate: "MMMM D",
  fullTime: "LT",
  fullTime12h: "hh:mm A",
  fullTime24h: "HH:mm",
  fullDateTime: "lll",
  fullDateTime12h: "ll hh:mm A",
  fullDateTime24h: "ll HH:mm",
  keyboardDateTime: "L LT",
  keyboardDateTime12h: "L hh:mm A",
  keyboardDateTime24h: "L HH:mm"
}, O1 = ["Missing UTC plugin", "To be able to use UTC or timezones, you have to enable the `utc` plugin", "Find more information on https://mui.com/x/react-date-pickers/timezone/#day-js-and-utc"].join(`
`), JM = ["Missing timezone plugin", "To be able to use timezones, you have to enable both the `utc` and the `timezone` plugin", "Find more information on https://mui.com/x/react-date-pickers/timezone/#day-js-and-timezone"].join(`
`), tae = (e, o) => o ? (...i) => e(...i).locale(o) : e;
class Pse {
  constructor({
    locale: o,
    formats: i,
    instance: c
  } = {}) {
    var d;
    this.isMUIAdapter = !0, this.isTimezoneCompatible = !0, this.lib = "dayjs", this.rawDayJsInstance = void 0, this.dayjs = void 0, this.locale = void 0, this.formats = void 0, this.escapedCharacters = {
      start: "[",
      end: "]"
    }, this.formatTokenMap = Jre, this.setLocaleToValue = (p) => {
      const f = this.getCurrentLocaleCode();
      return f === p.locale() ? p : p.locale(f);
    }, this.hasUTCPlugin = () => typeof Hr.utc < "u", this.hasTimezonePlugin = () => typeof Hr.tz < "u", this.isSame = (p, f, v) => {
      const g = this.setTimezone(f, this.getTimezone(p));
      return p.format(v) === g.format(v);
    }, this.cleanTimezone = (p) => {
      switch (p) {
        case "default":
          return;
        case "system":
          return Hr.tz.guess();
        default:
          return p;
      }
    }, this.createSystemDate = (p) => {
      if (this.rawDayJsInstance)
        return this.rawDayJsInstance(p);
      if (this.hasUTCPlugin() && this.hasTimezonePlugin()) {
        const f = Hr.tz.guess();
        return f !== "UTC" ? Hr.tz(p, f) : Hr(p);
      }
      return Hr(p);
    }, this.createUTCDate = (p) => {
      if (!this.hasUTCPlugin())
        throw new Error(O1);
      return Hr.utc(p);
    }, this.createTZDate = (p, f) => {
      if (!this.hasUTCPlugin())
        throw new Error(O1);
      if (!this.hasTimezonePlugin())
        throw new Error(JM);
      const v = p !== void 0 && !p.endsWith("Z");
      return Hr(p).tz(this.cleanTimezone(f), v);
    }, this.getLocaleFormats = () => {
      const p = Hr.Ls, f = this.locale || "en";
      let v = p[f];
      return v === void 0 && (Zre(), v = p.en), v.formats;
    }, this.adjustOffset = (p) => {
      if (!this.hasTimezonePlugin())
        return p;
      const f = this.getTimezone(p);
      if (f !== "UTC") {
        var v, g;
        const b = p.tz(this.cleanTimezone(f), !0);
        return ((v = b.$offset) != null ? v : 0) === ((g = p.$offset) != null ? g : 0) ? p : b;
      }
      return p;
    }, this.date = (p) => p === null ? null : this.dayjs(p), this.dateWithTimezone = (p, f) => {
      if (p === null)
        return null;
      let v;
      return f === "UTC" ? v = this.createUTCDate(p) : f === "system" || f === "default" && !this.hasTimezonePlugin() ? v = this.createSystemDate(p) : v = this.createTZDate(p, f), this.locale === void 0 ? v : v.locale(this.locale);
    }, this.getTimezone = (p) => {
      if (this.hasTimezonePlugin()) {
        var f;
        const v = (f = p.$x) == null ? void 0 : f.$timezone;
        if (v)
          return v;
      }
      return this.hasUTCPlugin() && p.isUTC() ? "UTC" : "system";
    }, this.setTimezone = (p, f) => {
      if (this.getTimezone(p) === f)
        return p;
      if (f === "UTC") {
        if (!this.hasUTCPlugin())
          throw new Error(O1);
        return p.utc();
      }
      if (f === "system")
        return p.local();
      if (!this.hasTimezonePlugin()) {
        if (f === "default")
          return p;
        throw new Error(JM);
      }
      return Hr.tz(p, this.cleanTimezone(f));
    }, this.toJsDate = (p) => p.toDate(), this.parseISO = (p) => this.dayjs(p), this.toISO = (p) => p.toISOString(), this.parse = (p, f) => p === "" ? null : this.dayjs(p, f, this.locale, !0), this.getCurrentLocaleCode = () => this.locale || "en", this.is12HourCycleInCurrentLocale = () => /A|a/.test(this.getLocaleFormats().LT || ""), this.expandFormat = (p) => {
      const f = this.getLocaleFormats(), v = (g) => g.replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, (b, S, R) => S || R.slice(1));
      return p.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g, (g, b, S) => {
        const R = S && S.toUpperCase();
        return b || f[S] || v(f[R]);
      });
    }, this.getFormatHelperText = (p) => this.expandFormat(p).replace(/a/gi, "(a|p)m").toLocaleLowerCase(), this.isNull = (p) => p === null, this.isValid = (p) => this.dayjs(p).isValid(), this.format = (p, f) => this.formatByString(p, this.formats[f]), this.formatByString = (p, f) => this.dayjs(p).format(f), this.formatNumber = (p) => p, this.getDiff = (p, f, v) => p.diff(f, v), this.isEqual = (p, f) => p === null && f === null ? !0 : this.dayjs(p).toDate().getTime() === this.dayjs(f).toDate().getTime(), this.isSameYear = (p, f) => this.isSame(p, f, "YYYY"), this.isSameMonth = (p, f) => this.isSame(p, f, "YYYY-MM"), this.isSameDay = (p, f) => this.isSame(p, f, "YYYY-MM-DD"), this.isSameHour = (p, f) => p.isSame(f, "hour"), this.isAfter = (p, f) => p > f, this.isAfterYear = (p, f) => this.hasUTCPlugin() ? !this.isSameYear(p, f) && p.utc() > f.utc() : p.isAfter(f, "year"), this.isAfterDay = (p, f) => this.hasUTCPlugin() ? !this.isSameDay(p, f) && p.utc() > f.utc() : p.isAfter(f, "day"), this.isBefore = (p, f) => p < f, this.isBeforeYear = (p, f) => this.hasUTCPlugin() ? !this.isSameYear(p, f) && p.utc() < f.utc() : p.isBefore(f, "year"), this.isBeforeDay = (p, f) => this.hasUTCPlugin() ? !this.isSameDay(p, f) && p.utc() < f.utc() : p.isBefore(f, "day"), this.isWithinRange = (p, [f, v]) => p >= f && p <= v, this.startOfYear = (p) => this.adjustOffset(p.startOf("year")), this.startOfMonth = (p) => this.adjustOffset(p.startOf("month")), this.startOfWeek = (p) => this.adjustOffset(p.startOf("week")), this.startOfDay = (p) => this.adjustOffset(p.startOf("day")), this.endOfYear = (p) => this.adjustOffset(p.endOf("year")), this.endOfMonth = (p) => this.adjustOffset(p.endOf("month")), this.endOfWeek = (p) => this.adjustOffset(p.endOf("week")), this.endOfDay = (p) => this.adjustOffset(p.endOf("day")), this.addYears = (p, f) => this.adjustOffset(f < 0 ? p.subtract(Math.abs(f), "year") : p.add(f, "year")), this.addMonths = (p, f) => this.adjustOffset(f < 0 ? p.subtract(Math.abs(f), "month") : p.add(f, "month")), this.addWeeks = (p, f) => this.adjustOffset(f < 0 ? p.subtract(Math.abs(f), "week") : p.add(f, "week")), this.addDays = (p, f) => this.adjustOffset(f < 0 ? p.subtract(Math.abs(f), "day") : p.add(f, "day")), this.addHours = (p, f) => this.adjustOffset(f < 0 ? p.subtract(Math.abs(f), "hour") : p.add(f, "hour")), this.addMinutes = (p, f) => this.adjustOffset(f < 0 ? p.subtract(Math.abs(f), "minute") : p.add(f, "minute")), this.addSeconds = (p, f) => this.adjustOffset(f < 0 ? p.subtract(Math.abs(f), "second") : p.add(f, "second")), this.getYear = (p) => p.year(), this.getMonth = (p) => p.month(), this.getDate = (p) => p.date(), this.getHours = (p) => p.hour(), this.getMinutes = (p) => p.minute(), this.getSeconds = (p) => p.second(), this.getMilliseconds = (p) => p.millisecond(), this.setYear = (p, f) => this.adjustOffset(p.set("year", f)), this.setMonth = (p, f) => this.adjustOffset(p.set("month", f)), this.setDate = (p, f) => this.adjustOffset(p.set("date", f)), this.setHours = (p, f) => this.adjustOffset(p.set("hour", f)), this.setMinutes = (p, f) => this.adjustOffset(p.set("minute", f)), this.setSeconds = (p, f) => this.adjustOffset(p.set("second", f)), this.setMilliseconds = (p, f) => this.adjustOffset(p.set("millisecond", f)), this.getDaysInMonth = (p) => p.daysInMonth(), this.getNextMonth = (p) => this.addMonths(p, 1), this.getPreviousMonth = (p) => this.addMonths(p, -1), this.getMonthArray = (p) => {
      const v = [p.startOf("year")];
      for (; v.length < 12; ) {
        const g = v[v.length - 1];
        v.push(this.addMonths(g, 1));
      }
      return v;
    }, this.mergeDateAndTime = (p, f) => p.hour(f.hour()).minute(f.minute()).second(f.second()), this.getWeekdays = () => {
      const p = this.dayjs().startOf("week");
      return [0, 1, 2, 3, 4, 5, 6].map((f) => this.formatByString(this.addDays(p, f), "dd"));
    }, this.getWeekArray = (p) => {
      const f = this.setLocaleToValue(p), v = f.startOf("month").startOf("week"), g = f.endOf("month").endOf("week");
      let b = 0, S = v;
      const R = [];
      for (; S < g; ) {
        const D = Math.floor(b / 7);
        R[D] = R[D] || [], R[D].push(S), S = this.addDays(S, 1), b += 1;
      }
      return R;
    }, this.getWeekNumber = (p) => p.week(), this.getYearRange = (p, f) => {
      const v = p.startOf("year"), g = f.endOf("year"), b = [];
      let S = v;
      for (; S < g; )
        b.push(S), S = this.addYears(S, 1);
      return b;
    }, this.getMeridiemText = (p) => p === "am" ? "AM" : "PM", this.rawDayJsInstance = c, this.dayjs = tae((d = this.rawDayJsInstance) != null ? d : Hr, o), this.locale = o, this.formats = x({}, eae, i), Hr.extend(qre);
  }
}
export {
  mae as Accordion,
  vae as AccordionActions,
  yae as AccordionDetails,
  Cae as AccordionSummary,
  Pse as AdapterDayjs,
  xae as Alert,
  wae as AlertTitle,
  Rae as AppBar,
  kae as Autocomplete,
  m6 as Avatar,
  Dae as AvatarGroup,
  kP as Backdrop,
  Nae as Badge,
  $ae as BottomNavigation,
  Iae as BottomNavigationAction,
  Lse as Box,
  Lae as Breadcrumbs,
  mC as Button,
  Qo as ButtonBase,
  Aae as ButtonGroup,
  BP as ButtonGroupButtonContext,
  AP as ButtonGroupContext,
  Bae as Card,
  zae as CardActionArea,
  Fae as CardActions,
  Uae as CardContent,
  Hae as CardHeader,
  Yae as CardMedia,
  Gae as Checkbox,
  CP as Chip,
  Kae as CircularProgress,
  jC as ClickAwayListener,
  mw as Collapse,
  Bse as Column,
  Qae as Container,
  k9 as CssBaseline,
  Gre as DatePicker,
  H9 as Dialog,
  Q9 as DialogActions,
  a7 as DialogContent,
  rie as DialogContentText,
  aie as DialogTitle,
  iie as Divider,
  M7 as Drawer,
  o4 as Experimental_CssVarsProvider,
  m$ as Fab,
  _f as Fade,
  h$ as FilledInput,
  W7 as FormControl,
  uie as FormControlLabel,
  aY as FormGroup,
  dY as FormHelperText,
  yY as FormLabel,
  vY as FormLabelRoot,
  ww as GlobalStyles,
  pie as Grid,
  Bv as Grow,
  QY as Hidden,
  gie as Icon,
  Wi as IconButton,
  bie as ImageList,
  Cie as ImageListItem,
  Sie as ImageListItemBar,
  $w as Input,
  P$ as InputAdornment,
  v0 as InputBase,
  AG as InputLabel,
  qG as LinearProgress,
  Eie as Link,
  z$ as List,
  Dq as ListItem,
  Mie as ListItemAvatar,
  Oie as ListItemButton,
  Nie as ListItemIcon,
  Sq as ListItemSecondaryAction,
  Pie as ListItemText,
  SW as ListSubheader,
  Yw as LocalizationProvider,
  dK as Menu,
  yK as MenuItem,
  Yq as MenuList,
  Aie as MobileStepper,
  Ow as Modal,
  Q5 as ModalManager,
  _ie as NativeSelect,
  UC as NoSsr,
  rI as OutlinedInput,
  zie as Pagination,
  tQ as PaginationItem,
  Ya as Paper,
  eK as Popover,
  G$ as PopoverPaper,
  Jq as PopoverRoot,
  Qv as Popper,
  Iv as Portal,
  Vie as Radio,
  Fie as RadioGroup,
  jie as Rating,
  Vse as Row,
  Hie as ScopedCssBaseline,
  gI as Select,
  Yie as Skeleton,
  S7 as Slide,
  Gie as Slider,
  yX as SliderMark,
  bX as SliderMarkLabel,
  mX as SliderRail,
  fX as SliderRoot,
  vX as SliderThumb,
  hX as SliderTrack,
  gX as SliderValueLabel,
  Qie as Snackbar,
  DX as SnackbarContent,
  Xie as SpeedDial,
  Zie as SpeedDialAction,
  Jie as SpeedDialIcon,
  Y7 as Stack,
  ose as Step,
  rse as StepButton,
  KZ as StepConnector,
  sse as StepContent,
  Xv as StepContext,
  kZ as StepIcon,
  _Z as StepLabel,
  cse as Stepper,
  zf as StepperContext,
  KV as StyledEngineProvider,
  P1 as SvgIcon,
  use as SwipeableDrawer,
  dse as Switch,
  Gc as THEME_ID,
  pse as Tab,
  Zee as TabScrollButton,
  mse as Table,
  vse as TableBody,
  W1 as TableCell,
  yse as TableContainer,
  Cse as TableFooter,
  Sse as TableHead,
  wse as TablePagination,
  Ese as TableRow,
  Rse as TableSortLabel,
  Ose as Tabs,
  mte as TextField,
  cP as TextareaAutosize,
  MN as ThemeProvider,
  Dse as ToggleButton,
  Mse as ToggleButtonGroup,
  mee as Toolbar,
  tZ as Tooltip,
  wo as Typography,
  fie as Unstable_Grid2,
  $v as Unstable_TrapFocus,
  dae as Utils,
  _X as Zoom,
  hae as accordionActionsClasses,
  aC as accordionClasses,
  gae as accordionDetailsClasses,
  xf as accordionSummaryClasses,
  mU as adaptV4Theme,
  PD as alertClasses,
  Tae as alertTitleClasses,
  di as alpha,
  Eae as appBarClasses,
  yn as autocompleteClasses,
  s6 as avatarClasses,
  g6 as avatarGroupClasses,
  Mae as backdropClasses,
  zc as badgeClasses,
  NP as bottomNavigationActionClasses,
  Pae as bottomNavigationClasses,
  Ase as boxClasses,
  J6 as breadcrumbsClasses,
  T5 as buttonBaseClasses,
  fC as buttonClasses,
  kr as buttonGroupClasses,
  ce as capitalize,
  f1 as cardActionAreaClasses,
  Vae as cardActionsClasses,
  _ae as cardClasses,
  jae as cardContentClasses,
  FD as cardHeaderClasses,
  Wae as cardMediaClasses,
  m1 as checkboxClasses,
  On as chipClasses,
  qae as circularProgressClasses,
  pae as collapseClasses,
  lae as colors,
  Zae as containerClasses,
  AC as createChainedFunction,
  R3 as createFilterOptions,
  QV as createMuiTheme,
  vU as createStyles,
  Cn as createSvgIcon,
  Dv as createTheme,
  qc as css,
  Jae as darkScrollbar,
  IC as darken,
  $f as debounce,
  $l as decomposeColor,
  nj as deprecatedPropType,
  tie as dialogActionsClasses,
  Tv as dialogClasses,
  nie as dialogContentClasses,
  oie as dialogContentTextClasses,
  t7 as dialogTitleClasses,
  YD as dividerClasses,
  sie as drawerClasses,
  aN as duration,
  XV as easing,
  QF as emphasize,
  ee as experimentalStyled,
  PN as experimental_extendTheme,
  i4 as experimental_sx,
  qD as fabClasses,
  Ha as filledInputClasses,
  lie as formControlClasses,
  bv as formControlLabelClasses,
  die as formGroupClasses,
  KD as formHelperTextClasses,
  wv as formLabelClasses,
  We as generateUtilityClass,
  Ge as generateUtilityClasses,
  n5 as getAccordionActionsUtilityClass,
  s5 as getAccordionDetailsUtilityClass,
  O5 as getAccordionSummaryUtilityClass,
  X4 as getAccordionUtilityClass,
  eW as getAlertTitleUtilityClass,
  M3 as getAlertUtilityClass,
  aW as getAppBarUtilityClass,
  jW as getAutocompleteUtilityClass,
  h6 as getAvatarGroupUtilityClass,
  a6 as getAvatarUtilityClass,
  T6 as getBackdropUtilityClass,
  D6 as getBadgeUtilityClass,
  F6 as getBottomNavigationActionUtilityClass,
  A6 as getBottomNavigationUtilityClass,
  X6 as getBreadcrumbsUtilityClass,
  x5 as getButtonBaseUtilityClass,
  f8 as getButtonGroupUtilityClass,
  i8 as getButtonUtilityClass,
  w8 as getCardActionAreaUtilityClass,
  M8 as getCardActionsUtilityClass,
  L8 as getCardContentUtilityClass,
  V8 as getCardHeaderUtilityClass,
  q8 as getCardMediaUtilityClass,
  b8 as getCardUtilityClass,
  c9 as getCheckboxUtilityClass,
  wW as getChipUtilityClass,
  g9 as getCircularProgressUtilityClass,
  P4 as getCollapseUtilityClass,
  Xae as getContainerUtilityClass,
  KF as getContrastRatio,
  W9 as getDialogActionsUtilityClass,
  i7 as getDialogContentTextUtilityClass,
  X9 as getDialogContentUtilityClass,
  J9 as getDialogTitleUtilityClass,
  A9 as getDialogUtilityClass,
  m7 as getDividerUtilityClass,
  T7 as getDrawerUtilityClass,
  N7 as getFabUtilityClass,
  VW as getFilledInputUtilityClass,
  q7 as getFormControlLabelUtilityClasses,
  V7 as getFormControlUtilityClasses,
  eY as getFormGroupUtilityClass,
  iY as getFormHelperTextUtilityClasses,
  pY as getFormLabelUtilityClasses,
  mie as getGrid2UtilityClass,
  bY as getGridUtilityClass,
  P3 as getIconButtonUtilityClass,
  XY as getIconUtilityClass,
  pG as getImageListItemBarUtilityClass,
  sG as getImageListItemUtilityClass,
  nG as getImageListUtilityClass,
  a4 as getInitColorSchemeScript,
  EG as getInputAdornmentUtilityClass,
  NW as getInputBaseUtilityClass,
  NG as getInputLabelUtilityClasses,
  AW as getInputUtilityClass,
  _G as getLinearProgressUtilityClass,
  KG as getLinkUtilityClass,
  Mq as getListItemAvatarUtilityClass,
  dq as getListItemButtonUtilityClass,
  Lq as getListItemIconUtilityClass,
  gq as getListItemSecondaryActionClassesUtilityClass,
  Vq as getListItemTextUtilityClass,
  cq as getListItemUtilityClass,
  gW as getListSubheaderUtilityClass,
  rq as getListUtilityClass,
  $C as getLuminance,
  pK as getMenuItemUtilityClass,
  tK as getMenuUtilityClass,
  bK as getMobileStepperUtilityClass,
  M9 as getModalUtilityClass,
  Z$ as getNativeSelectUtilityClasses,
  uM as getOffsetLeft,
  cM as getOffsetTop,
  BW as getOutlinedInputUtilityClass,
  BC as getOverlayAlpha,
  qK as getPaginationItemUtilityClass,
  HK as getPaginationUtilityClass,
  z4 as getPaperUtilityClass,
  Gq as getPopoverUtilityClass,
  fQ as getRadioUtilityClass,
  SQ as getRatingUtilityClass,
  IQ as getScopedCssBaselineUtilityClass,
  zQ as getSelectUtilityClasses,
  eX as getSkeletonUtilityClass,
  cX as getSliderUtilityClass,
  SX as getSnackbarContentUtilityClass,
  MX as getSnackbarUtilityClass,
  nZ as getSpeedDialActionUtilityClass,
  dZ as getSpeedDialIconUtilityClass,
  BX as getSpeedDialUtilityClass,
  BZ as getStepButtonUtilityClass,
  UZ as getStepConnectorUtilityClass,
  QZ as getStepContentUtilityClass,
  TZ as getStepIconUtilityClass,
  DZ as getStepLabelUtilityClass,
  vZ as getStepUtilityClass,
  nJ as getStepperUtilityClass,
  s4 as getSvgIconUtilityClass,
  vJ as getSwitchUtilityClass,
  Yee as getTabScrollButtonUtilityClass,
  wJ as getTabUtilityClass,
  IJ as getTableBodyUtilityClass,
  VJ as getTableCellUtilityClass,
  YJ as getTableContainerUtilityClass,
  XJ as getTableFooterUtilityClass,
  oee as getTableHeadUtilityClass,
  gee as getTablePaginationUtilityClass,
  Mee as getTableRowUtilityClass,
  Aee as getTableSortLabelUtilityClass,
  DJ as getTableUtilityClass,
  Jee as getTabsUtilityClass,
  lte as getTextFieldUtilityClass,
  Ste as getToggleButtonGroupUtilityClass,
  hte as getToggleButtonUtilityClass,
  cee as getToolbarUtilityClass,
  GX as getTooltipUtilityClass,
  bae as getTouchRippleUtilityClass,
  G3 as getTypographyUtilityClass,
  hie as grid2Classes,
  _v as gridClasses,
  dN as hexToRgb,
  pN as hslToRgb,
  I3 as iconButtonClasses,
  vie as iconClasses,
  yie as imageListClasses,
  xie as imageListItemBarClasses,
  ZD as imageListItemClasses,
  JD as inputAdornmentClasses,
  Ua as inputBaseClasses,
  Uc as inputClasses,
  Tie as inputLabelClasses,
  As as isMuiElement,
  Qi as keyframes,
  LC as lighten,
  wie as linearProgressClasses,
  XG as linkClasses,
  Rie as listClasses,
  Die as listItemAvatarClasses,
  bf as listItemButtonClasses,
  yf as listItemClasses,
  sM as listItemIconClasses,
  kie as listItemSecondaryActionClasses,
  KC as listItemTextClasses,
  Oae as listSubheaderClasses,
  YU as makeStyles,
  Iie as menuClasses,
  iv as menuItemClasses,
  Lie as mobileStepperClasses,
  eie as modalClasses,
  Aw as nativeSelectClasses,
  Is as outlinedInputClasses,
  Dn as ownerDocument,
  Wr as ownerWindow,
  Bie as paginationClasses,
  li as paginationItemClasses,
  fae as paperClasses,
  $ie as popoverClasses,
  ZV as private_createMixins,
  rN as private_createTypography,
  $N as private_excludeVariablesFromRoot,
  hM as radioClasses,
  sv as ratingClasses,
  Uv as recomposeColor,
  hN as requirePropFactory,
  xU as responsiveFontSizes,
  qF as rgbToHex,
  Uie as scopedCssBaselineClasses,
  lv as selectClasses,
  Mv as setRef,
  NN as shouldSkipGeneratingVar,
  Wie as skeletonClasses,
  Yi as sliderClasses,
  Kie as snackbarClasses,
  qie as snackbarContentClasses,
  rZ as speedDialActionClasses,
  vC as speedDialClasses,
  sd as speedDialIconClasses,
  cie as stackClasses,
  kM as stepButtonClasses,
  nse as stepClasses,
  ase as stepConnectorClasses,
  ise as stepContentClasses,
  y1 as stepIconClasses,
  Yc as stepLabelClasses,
  lse as stepperClasses,
  ee as styled,
  cae as styles,
  uae as svgIconClasses,
  aa as switchClasses,
  ld as tabClasses,
  qee as tabScrollButtonClasses,
  hse as tableBodyClasses,
  jJ as tableCellClasses,
  fse as tableClasses,
  gse as tableContainerClasses,
  bse as tableFooterClasses,
  xse as tableHeadClasses,
  Rv as tablePaginationClasses,
  LM as tableRowClasses,
  T1 as tableSortLabelClasses,
  w1 as tabsClasses,
  kse as textFieldClasses,
  Sf as toggleButtonClasses,
  fo as toggleButtonGroupClasses,
  Tse as toolbarClasses,
  Wc as tooltipClasses,
  ui as touchRippleClasses,
  Sae as typographyClasses,
  p4 as unstable_ClassNameGenerator,
  Ye as unstable_composeClasses,
  hU as unstable_createMuiStrictModeTheme,
  iw as unstable_getUnit,
  Nl as unstable_toUnitless,
  so as unstable_useEnhancedEffect,
  Na as unstable_useId,
  o0 as unsupportedProp,
  D3 as useAutocomplete,
  r4 as useColorScheme,
  Eo as useControlled,
  St as useEventCallback,
  cn as useForkRef,
  Zi as useFormControl,
  If as useIsFocusVisible,
  Z1 as useMediaQuery,
  GK as usePagination,
  pQ as useRadioGroup,
  Nse as useScrollTrigger,
  tse as useStepContext,
  ese as useStepperContext,
  Mn as useTheme,
  Ue as useThemeProps,
  GU as withStyles,
  qU as withTheme
};
