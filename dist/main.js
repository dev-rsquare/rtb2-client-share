import { b as iU, c as sU, g as lU, a as cU, l as uU, o as dU, p as pU, r as fU, d as ns, i as tN, e as pe, f as bg, h as nN, j as mU, u as Gf, G as iT, P as t, s as BT, k as yg, m as hU, n as oN, q as vU, _ as le, t as gU, v as y, w as rN, x as qs, y as Jc, T as bU, z as fe, A as We, C as og, D as kd, E as yU, F as CU, H as oD, I as TU, J as rg, K as ru, L as Kf, M as xU, N as SU, O as kU, Q as Jn, R as eo, S as VC, U as BC, V as Bv, W as wU, X as aN, Y as RU, Z as EU, $ as au, a0 as iN, a1 as OU, a2 as rs, a3 as PU, a4 as Ye, a5 as DU, a6 as MU, a7 as Yt, a8 as $U, a9 as gT, aa as zT, ab as FT, ac as rD } from "./Box-ccaa8459.js";
import { B as Bpe, ad as zpe } from "./Box-ccaa8459.js";
import * as k from "react";
import Ia, { Children as NU, isValidElement as sT, cloneElement as lT, createElement as sN } from "react";
import { jsx as _, jsxs as st } from "react/jsx-runtime";
import { Row as jpe } from "./components/Row/index.js";
import { Column as Hpe } from "./components/Column/index.js";
const LU = {
  50: "#fce4ec",
  100: "#f8bbd0",
  200: "#f48fb1",
  300: "#f06292",
  400: "#ec407a",
  500: "#e91e63",
  600: "#d81b60",
  700: "#c2185b",
  800: "#ad1457",
  900: "#880e4f",
  A100: "#ff80ab",
  A200: "#ff4081",
  A400: "#f50057",
  A700: "#c51162"
}, IU = LU, AU = {
  50: "#ede7f6",
  100: "#d1c4e9",
  200: "#b39ddb",
  300: "#9575cd",
  400: "#7e57c2",
  500: "#673ab7",
  600: "#5e35b1",
  700: "#512da8",
  800: "#4527a0",
  900: "#311b92",
  A100: "#b388ff",
  A200: "#7c4dff",
  A400: "#651fff",
  A700: "#6200ea"
}, _U = AU, VU = {
  50: "#e8eaf6",
  100: "#c5cae9",
  200: "#9fa8da",
  300: "#7986cb",
  400: "#5c6bc0",
  500: "#3f51b5",
  600: "#3949ab",
  700: "#303f9f",
  800: "#283593",
  900: "#1a237e",
  A100: "#8c9eff",
  A200: "#536dfe",
  A400: "#3d5afe",
  A700: "#304ffe"
}, BU = VU, zU = {
  50: "#e0f7fa",
  100: "#b2ebf2",
  200: "#80deea",
  300: "#4dd0e1",
  400: "#26c6da",
  500: "#00bcd4",
  600: "#00acc1",
  700: "#0097a7",
  800: "#00838f",
  900: "#006064",
  A100: "#84ffff",
  A200: "#18ffff",
  A400: "#00e5ff",
  A700: "#00b8d4"
}, FU = zU, jU = {
  50: "#e0f2f1",
  100: "#b2dfdb",
  200: "#80cbc4",
  300: "#4db6ac",
  400: "#26a69a",
  500: "#009688",
  600: "#00897b",
  700: "#00796b",
  800: "#00695c",
  900: "#004d40",
  A100: "#a7ffeb",
  A200: "#64ffda",
  A400: "#1de9b6",
  A700: "#00bfa5"
}, UU = jU, HU = {
  50: "#f1f8e9",
  100: "#dcedc8",
  200: "#c5e1a5",
  300: "#aed581",
  400: "#9ccc65",
  500: "#8bc34a",
  600: "#7cb342",
  700: "#689f38",
  800: "#558b2f",
  900: "#33691e",
  A100: "#ccff90",
  A200: "#b2ff59",
  A400: "#76ff03",
  A700: "#64dd17"
}, WU = HU, YU = {
  50: "#f9fbe7",
  100: "#f0f4c3",
  200: "#e6ee9c",
  300: "#dce775",
  400: "#d4e157",
  500: "#cddc39",
  600: "#c0ca33",
  700: "#afb42b",
  800: "#9e9d24",
  900: "#827717",
  A100: "#f4ff81",
  A200: "#eeff41",
  A400: "#c6ff00",
  A700: "#aeea00"
}, qU = YU, GU = {
  50: "#fffde7",
  100: "#fff9c4",
  200: "#fff59d",
  300: "#fff176",
  400: "#ffee58",
  500: "#ffeb3b",
  600: "#fdd835",
  700: "#fbc02d",
  800: "#f9a825",
  900: "#f57f17",
  A100: "#ffff8d",
  A200: "#ffff00",
  A400: "#ffea00",
  A700: "#ffd600"
}, KU = GU, QU = {
  50: "#fff8e1",
  100: "#ffecb3",
  200: "#ffe082",
  300: "#ffd54f",
  400: "#ffca28",
  500: "#ffc107",
  600: "#ffb300",
  700: "#ffa000",
  800: "#ff8f00",
  900: "#ff6f00",
  A100: "#ffe57f",
  A200: "#ffd740",
  A400: "#ffc400",
  A700: "#ffab00"
}, XU = QU, ZU = {
  50: "#fbe9e7",
  100: "#ffccbc",
  200: "#ffab91",
  300: "#ff8a65",
  400: "#ff7043",
  500: "#ff5722",
  600: "#f4511e",
  700: "#e64a19",
  800: "#d84315",
  900: "#bf360c",
  A100: "#ff9e80",
  A200: "#ff6e40",
  A400: "#ff3d00",
  A700: "#dd2c00"
}, JU = ZU, eH = {
  50: "#efebe9",
  100: "#d7ccc8",
  200: "#bcaaa4",
  300: "#a1887f",
  400: "#8d6e63",
  500: "#795548",
  600: "#6d4c41",
  700: "#5d4037",
  800: "#4e342e",
  900: "#3e2723",
  A100: "#d7ccc8",
  A200: "#bcaaa4",
  A400: "#8d6e63",
  A700: "#5d4037"
}, tH = eH, nH = {
  50: "#eceff1",
  100: "#cfd8dc",
  200: "#b0bec5",
  300: "#90a4ae",
  400: "#78909c",
  500: "#607d8b",
  600: "#546e7a",
  700: "#455a64",
  800: "#37474f",
  900: "#263238",
  A100: "#cfd8dc",
  A200: "#b0bec5",
  A400: "#78909c",
  A700: "#455a64"
}, oH = nH, hue = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  amber: XU,
  blue: iU,
  blueGrey: oH,
  brown: tH,
  common: sU,
  cyan: FU,
  deepOrange: JU,
  deepPurple: _U,
  green: lU,
  grey: cU,
  indigo: BU,
  lightBlue: uU,
  lightGreen: WU,
  lime: qU,
  orange: dU,
  pink: IU,
  purple: pU,
  red: fU,
  teal: UU,
  yellow: KU
}, Symbol.toStringTag, { value: "Module" })), rH = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ns,
  isPlainObject: tN
}, Symbol.toStringTag, { value: "Module" })), aH = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: pe
}, Symbol.toStringTag, { value: "Module" })), iH = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: bg,
  private_createBreakpoints: nN,
  unstable_applyStyles: mU
}, Symbol.toStringTag, { value: "Module" }));
function lN({
  styles: e,
  themeId: n,
  defaultTheme: a = {}
}) {
  const s = Gf(a), u = typeof e == "function" ? e(n && s[n] || s) : e;
  return /* @__PURE__ */ _(iT, {
    styles: u
  });
}
process.env.NODE_ENV !== "production" && (lN.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: t.object,
  /**
   * @ignore
   */
  styles: t.oneOfType([t.array, t.func, t.number, t.object, t.string, t.bool]),
  /**
   * @ignore
   */
  themeId: t.string
});
const sH = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: BT,
  extendSxProp: yg,
  unstable_createStyleFunctionSx: hU,
  unstable_defaultSxConfig: oN
}, Symbol.toStringTag, { value: "Module" }));
var gw = { exports: {} }, Vn = {};
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aD;
function lH() {
  if (aD)
    return Vn;
  aD = 1;
  var e = Symbol.for("react.element"), n = Symbol.for("react.portal"), a = Symbol.for("react.fragment"), s = Symbol.for("react.strict_mode"), u = Symbol.for("react.profiler"), d = Symbol.for("react.provider"), p = Symbol.for("react.context"), h = Symbol.for("react.server_context"), g = Symbol.for("react.forward_ref"), b = Symbol.for("react.suspense"), x = Symbol.for("react.suspense_list"), S = Symbol.for("react.memo"), E = Symbol.for("react.lazy"), R = Symbol.for("react.offscreen"), $;
  $ = Symbol.for("react.module.reference");
  function M(O) {
    if (typeof O == "object" && O !== null) {
      var N = O.$$typeof;
      switch (N) {
        case e:
          switch (O = O.type, O) {
            case a:
            case u:
            case s:
            case b:
            case x:
              return O;
            default:
              switch (O = O && O.$$typeof, O) {
                case h:
                case p:
                case g:
                case E:
                case S:
                case d:
                  return O;
                default:
                  return N;
              }
          }
        case n:
          return N;
      }
    }
  }
  return Vn.ContextConsumer = p, Vn.ContextProvider = d, Vn.Element = e, Vn.ForwardRef = g, Vn.Fragment = a, Vn.Lazy = E, Vn.Memo = S, Vn.Portal = n, Vn.Profiler = u, Vn.StrictMode = s, Vn.Suspense = b, Vn.SuspenseList = x, Vn.isAsyncMode = function() {
    return !1;
  }, Vn.isConcurrentMode = function() {
    return !1;
  }, Vn.isContextConsumer = function(O) {
    return M(O) === p;
  }, Vn.isContextProvider = function(O) {
    return M(O) === d;
  }, Vn.isElement = function(O) {
    return typeof O == "object" && O !== null && O.$$typeof === e;
  }, Vn.isForwardRef = function(O) {
    return M(O) === g;
  }, Vn.isFragment = function(O) {
    return M(O) === a;
  }, Vn.isLazy = function(O) {
    return M(O) === E;
  }, Vn.isMemo = function(O) {
    return M(O) === S;
  }, Vn.isPortal = function(O) {
    return M(O) === n;
  }, Vn.isProfiler = function(O) {
    return M(O) === u;
  }, Vn.isStrictMode = function(O) {
    return M(O) === s;
  }, Vn.isSuspense = function(O) {
    return M(O) === b;
  }, Vn.isSuspenseList = function(O) {
    return M(O) === x;
  }, Vn.isValidElementType = function(O) {
    return typeof O == "string" || typeof O == "function" || O === a || O === u || O === s || O === b || O === x || O === R || typeof O == "object" && O !== null && (O.$$typeof === E || O.$$typeof === S || O.$$typeof === d || O.$$typeof === p || O.$$typeof === g || O.$$typeof === $ || O.getModuleId !== void 0);
  }, Vn.typeOf = M, Vn;
}
var Bn = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var iD;
function cH() {
  return iD || (iD = 1, process.env.NODE_ENV !== "production" && function() {
    var e = Symbol.for("react.element"), n = Symbol.for("react.portal"), a = Symbol.for("react.fragment"), s = Symbol.for("react.strict_mode"), u = Symbol.for("react.profiler"), d = Symbol.for("react.provider"), p = Symbol.for("react.context"), h = Symbol.for("react.server_context"), g = Symbol.for("react.forward_ref"), b = Symbol.for("react.suspense"), x = Symbol.for("react.suspense_list"), S = Symbol.for("react.memo"), E = Symbol.for("react.lazy"), R = Symbol.for("react.offscreen"), $ = !1, M = !1, O = !1, N = !1, V = !1, I;
    I = Symbol.for("react.module.reference");
    function z(ae) {
      return !!(typeof ae == "string" || typeof ae == "function" || ae === a || ae === u || V || ae === s || ae === b || ae === x || N || ae === R || $ || M || O || typeof ae == "object" && ae !== null && (ae.$$typeof === E || ae.$$typeof === S || ae.$$typeof === d || ae.$$typeof === p || ae.$$typeof === g || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      ae.$$typeof === I || ae.getModuleId !== void 0));
    }
    function B(ae) {
      if (typeof ae == "object" && ae !== null) {
        var Pe = ae.$$typeof;
        switch (Pe) {
          case e:
            var ke = ae.type;
            switch (ke) {
              case a:
              case u:
              case s:
              case b:
              case x:
                return ke;
              default:
                var pt = ke && ke.$$typeof;
                switch (pt) {
                  case h:
                  case p:
                  case g:
                  case E:
                  case S:
                  case d:
                    return pt;
                  default:
                    return Pe;
                }
            }
          case n:
            return Pe;
        }
      }
    }
    var P = p, F = d, H = e, U = g, Q = a, Y = E, te = S, Z = n, q = u, X = s, oe = b, ie = x, K = !1, ne = !1;
    function se(ae) {
      return K || (K = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function ze(ae) {
      return ne || (ne = !0, console.warn("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function Ue(ae) {
      return B(ae) === p;
    }
    function Oe(ae) {
      return B(ae) === d;
    }
    function ue(ae) {
      return typeof ae == "object" && ae !== null && ae.$$typeof === e;
    }
    function xe(ae) {
      return B(ae) === g;
    }
    function me(ae) {
      return B(ae) === a;
    }
    function Se(ae) {
      return B(ae) === E;
    }
    function ce(ae) {
      return B(ae) === S;
    }
    function Le(ae) {
      return B(ae) === n;
    }
    function Ze(ae) {
      return B(ae) === u;
    }
    function Ee(ae) {
      return B(ae) === s;
    }
    function Ae(ae) {
      return B(ae) === b;
    }
    function Ce(ae) {
      return B(ae) === x;
    }
    Bn.ContextConsumer = P, Bn.ContextProvider = F, Bn.Element = H, Bn.ForwardRef = U, Bn.Fragment = Q, Bn.Lazy = Y, Bn.Memo = te, Bn.Portal = Z, Bn.Profiler = q, Bn.StrictMode = X, Bn.Suspense = oe, Bn.SuspenseList = ie, Bn.isAsyncMode = se, Bn.isConcurrentMode = ze, Bn.isContextConsumer = Ue, Bn.isContextProvider = Oe, Bn.isElement = ue, Bn.isForwardRef = xe, Bn.isFragment = me, Bn.isLazy = Se, Bn.isMemo = ce, Bn.isPortal = Le, Bn.isProfiler = Ze, Bn.isStrictMode = Ee, Bn.isSuspense = Ae, Bn.isSuspenseList = Ce, Bn.isValidElementType = z, Bn.typeOf = B;
  }()), Bn;
}
process.env.NODE_ENV === "production" ? gw.exports = lH() : gw.exports = cH();
var sD = gw.exports;
const uH = /^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;
function cN(e) {
  const n = `${e}`.match(uH);
  return n && n[1] || "";
}
function uN(e, n = "") {
  return e.displayName || e.name || cN(e) || n;
}
function lD(e, n, a) {
  const s = uN(n);
  return e.displayName || (s !== "" ? `${a}(${s})` : a);
}
function Vw(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return uN(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case sD.ForwardRef:
          return lD(e, e.render, "ForwardRef");
        case sD.Memo:
          return lD(e, e.type, "memo");
        default:
          return;
      }
  }
}
const dH = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Vw,
  getFunctionName: cN
}, Symbol.toStringTag, { value: "Module" })), pH = ["ownerState"], fH = ["variants"], mH = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"];
function hH(e) {
  return Object.keys(e).length === 0;
}
function vH(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function Yk(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const gH = bg(), cD = (e) => e && e.charAt(0).toLowerCase() + e.slice(1);
function zC({
  defaultTheme: e,
  theme: n,
  themeId: a
}) {
  return hH(n) ? e : n[a] || n;
}
function bH(e) {
  return e ? (n, a) => a[e] : null;
}
function cT(e, n) {
  let {
    ownerState: a
  } = n, s = le(n, pH);
  const u = typeof e == "function" ? e(y({
    ownerState: a
  }, s)) : e;
  if (Array.isArray(u))
    return u.flatMap((d) => cT(d, y({
      ownerState: a
    }, s)));
  if (u && typeof u == "object" && Array.isArray(u.variants)) {
    const {
      variants: d = []
    } = u;
    let h = le(u, fH);
    return d.forEach((g) => {
      let b = !0;
      typeof g.props == "function" ? b = g.props(y({
        ownerState: a
      }, s, a)) : Object.keys(g.props).forEach((x) => {
        (a == null ? void 0 : a[x]) !== g.props[x] && s[x] !== g.props[x] && (b = !1);
      }), b && (Array.isArray(h) || (h = [h]), h.push(typeof g.style == "function" ? g.style(y({
        ownerState: a
      }, s, a)) : g.style));
    }), h;
  }
  return u;
}
function yH(e = {}) {
  const {
    themeId: n,
    defaultTheme: a = gH,
    rootShouldForwardProp: s = Yk,
    slotShouldForwardProp: u = Yk
  } = e, d = (p) => BT(y({}, p, {
    theme: zC(y({}, p, {
      defaultTheme: a,
      themeId: n
    }))
  }));
  return d.__mui_systemSx = !0, (p, h = {}) => {
    vU(p, (B) => B.filter((P) => !(P != null && P.__mui_systemSx)));
    const {
      name: g,
      slot: b,
      skipVariantsResolver: x,
      skipSx: S,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: E = bH(cD(b))
    } = h, R = le(h, mH), $ = x !== void 0 ? x : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      b && b !== "Root" && b !== "root" || !1
    ), M = S || !1;
    let O;
    process.env.NODE_ENV !== "production" && g && (O = `${g}-${cD(b || "Root")}`);
    let N = Yk;
    b === "Root" || b === "root" ? N = s : b ? N = u : vH(p) && (N = void 0);
    const V = gU(p, y({
      shouldForwardProp: N,
      label: O
    }, R)), I = (B) => typeof B == "function" && B.__emotion_real !== B || tN(B) ? (P) => cT(B, y({}, P, {
      theme: zC({
        theme: P.theme,
        defaultTheme: a,
        themeId: n
      })
    })) : B, z = (B, ...P) => {
      let F = I(B);
      const H = P ? P.map(I) : [];
      g && E && H.push((Y) => {
        const te = zC(y({}, Y, {
          defaultTheme: a,
          themeId: n
        }));
        if (!te.components || !te.components[g] || !te.components[g].styleOverrides)
          return null;
        const Z = te.components[g].styleOverrides, q = {};
        return Object.entries(Z).forEach(([X, oe]) => {
          q[X] = cT(oe, y({}, Y, {
            theme: te
          }));
        }), E(Y, q);
      }), g && !$ && H.push((Y) => {
        var te;
        const Z = zC(y({}, Y, {
          defaultTheme: a,
          themeId: n
        })), q = Z == null || (te = Z.components) == null || (te = te[g]) == null ? void 0 : te.variants;
        return cT({
          variants: q
        }, y({}, Y, {
          theme: Z
        }));
      }), M || H.push(d);
      const U = H.length - P.length;
      if (Array.isArray(B) && U > 0) {
        const Y = new Array(U).fill("");
        F = [...B, ...Y], F.raw = [...B.raw, ...Y];
      }
      const Q = V(F, ...H);
      if (process.env.NODE_ENV !== "production") {
        let Y;
        g && (Y = `${g}${pe(b || "")}`), Y === void 0 && (Y = `Styled(${Vw(p)})`), Q.displayName = Y;
      }
      return p.muiName && (Q.muiName = p.muiName), Q;
    };
    return V.withConfig && (z.withConfig = V.withConfig), z;
  };
}
const CH = yH(), Bw = CH;
function jT(e, n) {
  const a = y({}, n);
  return Object.keys(e).forEach((s) => {
    if (s.toString().match(/^(components|slots)$/))
      a[s] = y({}, e[s], a[s]);
    else if (s.toString().match(/^(componentsProps|slotProps)$/)) {
      const u = e[s] || {}, d = n[s];
      a[s] = {}, !d || !Object.keys(d) ? a[s] = u : !u || !Object.keys(u) ? a[s] = d : (a[s] = y({}, d), Object.keys(u).forEach((p) => {
        a[s][p] = jT(u[p], d[p]);
      }));
    } else
      a[s] === void 0 && (a[s] = e[s]);
  }), a;
}
function zw(e) {
  const {
    theme: n,
    name: a,
    props: s
  } = e;
  return !n || !n.components || !n.components[a] || !n.components[a].defaultProps ? s : jT(n.components[a].defaultProps, s);
}
function Cg({
  props: e,
  name: n,
  defaultTheme: a,
  themeId: s
}) {
  let u = Gf(a);
  return s && (u = u[s] || u), zw({
    theme: u,
    name: n,
    props: e
  });
}
const TH = typeof window < "u" ? k.useLayoutEffect : k.useEffect, ro = TH;
function xH(e, n, a, s, u) {
  const [d, p] = k.useState(() => u && a ? a(e).matches : s ? s(e).matches : n);
  return ro(() => {
    let h = !0;
    if (!a)
      return;
    const g = a(e), b = () => {
      h && p(g.matches);
    };
    return b(), g.addListener(b), () => {
      h = !1, g.removeListener(b);
    };
  }, [e, a]), d;
}
const dN = k["useSyncExternalStore"];
function SH(e, n, a, s, u) {
  const d = k.useCallback(() => n, [n]), p = k.useMemo(() => {
    if (u && a)
      return () => a(e).matches;
    if (s !== null) {
      const {
        matches: x
      } = s(e);
      return () => x;
    }
    return d;
  }, [d, e, s, u, a]), [h, g] = k.useMemo(() => {
    if (a === null)
      return [d, () => () => {
      }];
    const x = a(e);
    return [() => x.matches, (S) => (x.addListener(S), () => {
      x.removeListener(S);
    })];
  }, [d, a, e]);
  return dN(g, h, p);
}
function Tg(e, n = {}) {
  const a = rN(), s = typeof window < "u" && typeof window.matchMedia < "u", {
    defaultMatches: u = !1,
    matchMedia: d = s ? window.matchMedia : null,
    ssrMatchMedia: p = null,
    noSsr: h = !1
  } = zw({
    name: "MuiUseMediaQuery",
    props: n,
    theme: a
  });
  process.env.NODE_ENV !== "production" && typeof e == "function" && a === null && console.error(["MUI: The `query` argument provided is invalid.", "You are providing a function without a theme in the context.", "One of the parent elements needs to use a ThemeProvider."].join(`
`));
  let g = typeof e == "function" ? e(a) : e;
  g = g.replace(/^@media( ?)/m, "");
  const x = (dN !== void 0 ? SH : xH)(g, u, d, p, h);
  return process.env.NODE_ENV !== "production" && k.useDebugValue({
    query: g,
    match: x
  }), x;
}
function Fw(e, n = 0, a = 1) {
  return process.env.NODE_ENV !== "production" && (e < n || e > a) && console.error(`MUI: The value provided ${e} is out of range [${n}, ${a}].`), Jc(e, n, a);
}
function pN(e) {
  e = e.slice(1);
  const n = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let a = e.match(n);
  return a && a[0].length === 1 && (a = a.map((s) => s + s)), a ? `rgb${a.length === 4 ? "a" : ""}(${a.map((s, u) => u < 3 ? parseInt(s, 16) : Math.round(parseInt(s, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function kH(e) {
  const n = e.toString(16);
  return n.length === 1 ? `0${n}` : n;
}
function jl(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return jl(pN(e));
  const n = e.indexOf("("), a = e.substring(0, n);
  if (["rgb", "rgba", "hsl", "hsla", "color"].indexOf(a) === -1)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : qs(9, e));
  let s = e.substring(n + 1, e.length - 1), u;
  if (a === "color") {
    if (s = s.split(" "), u = s.shift(), s.length === 4 && s[3].charAt(0) === "/" && (s[3] = s[3].slice(1)), ["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].indexOf(u) === -1)
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${u}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : qs(10, u));
  } else
    s = s.split(",");
  return s = s.map((d) => parseFloat(d)), {
    type: a,
    values: s,
    colorSpace: u
  };
}
function xg(e) {
  const {
    type: n,
    colorSpace: a
  } = e;
  let {
    values: s
  } = e;
  return n.indexOf("rgb") !== -1 ? s = s.map((u, d) => d < 3 ? parseInt(u, 10) : u) : n.indexOf("hsl") !== -1 && (s[1] = `${s[1]}%`, s[2] = `${s[2]}%`), n.indexOf("color") !== -1 ? s = `${a} ${s.join(" ")}` : s = `${s.join(", ")}`, `${n}(${s})`;
}
function wH(e) {
  if (e.indexOf("#") === 0)
    return e;
  const {
    values: n
  } = jl(e);
  return `#${n.map((a, s) => kH(s === 3 ? Math.round(255 * a) : a)).join("")}`;
}
function fN(e) {
  e = jl(e);
  const {
    values: n
  } = e, a = n[0], s = n[1] / 100, u = n[2] / 100, d = s * Math.min(u, 1 - u), p = (b, x = (b + a / 30) % 12) => u - d * Math.max(Math.min(x - 3, 9 - x, 1), -1);
  let h = "rgb";
  const g = [Math.round(p(0) * 255), Math.round(p(8) * 255), Math.round(p(4) * 255)];
  return e.type === "hsla" && (h += "a", g.push(n[3])), xg({
    type: h,
    values: g
  });
}
function bT(e) {
  e = jl(e);
  let n = e.type === "hsl" || e.type === "hsla" ? jl(fN(e)).values : e.values;
  return n = n.map((a) => (e.type !== "color" && (a /= 255), a <= 0.03928 ? a / 12.92 : ((a + 0.055) / 1.055) ** 2.4)), Number((0.2126 * n[0] + 0.7152 * n[1] + 0.0722 * n[2]).toFixed(3));
}
function RH(e, n) {
  const a = bT(e), s = bT(n);
  return (Math.max(a, s) + 0.05) / (Math.min(a, s) + 0.05);
}
function Kr(e, n) {
  return e = jl(e), n = Fw(n), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${n}` : e.values[3] = n, xg(e);
}
function yT(e, n) {
  if (e = jl(e), n = Fw(n), e.type.indexOf("hsl") !== -1)
    e.values[2] *= 1 - n;
  else if (e.type.indexOf("rgb") !== -1 || e.type.indexOf("color") !== -1)
    for (let a = 0; a < 3; a += 1)
      e.values[a] *= 1 - n;
  return xg(e);
}
function CT(e, n) {
  if (e = jl(e), n = Fw(n), e.type.indexOf("hsl") !== -1)
    e.values[2] += (100 - e.values[2]) * n;
  else if (e.type.indexOf("rgb") !== -1)
    for (let a = 0; a < 3; a += 1)
      e.values[a] += (255 - e.values[a]) * n;
  else if (e.type.indexOf("color") !== -1)
    for (let a = 0; a < 3; a += 1)
      e.values[a] += (1 - e.values[a]) * n;
  return xg(e);
}
function EH(e, n = 0.15) {
  return bT(e) > 0.5 ? yT(e, n) : CT(e, n);
}
function Xo(e, n) {
  return process.env.NODE_ENV === "production" ? () => null : function(...s) {
    return e(...s) || n(...s);
  };
}
function OH(e) {
  const {
    prototype: n = {}
  } = e;
  return !!n.isReactComponent;
}
function mN(e, n, a, s, u) {
  const d = e[n], p = u || n;
  if (d == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let h;
  const g = d.type;
  return typeof g == "function" && !OH(g) && (h = "Did you accidentally use a plain function component for an element instead?"), h !== void 0 ? new Error(`Invalid ${s} \`${p}\` supplied to \`${a}\`. Expected an element that can hold a ref. ${h} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const hN = Xo(t.element, mN);
hN.isRequired = Xo(t.element.isRequired, mN);
const su = hN;
function PH(e) {
  const {
    prototype: n = {}
  } = e;
  return !!n.isReactComponent;
}
function DH(e, n, a, s, u) {
  const d = e[n], p = u || n;
  if (d == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let h;
  return typeof d == "function" && !PH(d) && (h = "Did you accidentally provide a plain function component instead?"), h !== void 0 ? new Error(`Invalid ${s} \`${p}\` supplied to \`${a}\`. Expected an element type that can hold a ref. ${h} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const iu = Xo(t.elementType, DH), MH = "exact-prop: ​";
function Pd(e) {
  return process.env.NODE_ENV === "production" ? e : y({}, e, {
    [MH]: (n) => {
      const a = Object.keys(n).filter((s) => !e.hasOwnProperty(s));
      return a.length > 0 ? new Error(`The following props are not supported: ${a.map((s) => `\`${s}\``).join(", ")}. Please remove them.`) : null;
    }
  });
}
function Gs(e, n, a, s, u) {
  if (process.env.NODE_ENV === "production")
    return null;
  const d = e[n], p = u || n;
  return d == null ? null : d && d.nodeType !== 1 ? new Error(`Invalid ${s} \`${p}\` supplied to \`${a}\`. Expected an HTMLElement.`) : null;
}
const $H = t.oneOfType([t.func, t.object]), Wn = $H;
function TT(...e) {
  return e.reduce((n, a) => a == null ? n : function(...u) {
    n.apply(this, u), a.apply(this, u);
  }, () => {
  });
}
function Qf(e, n = 166) {
  let a;
  function s(...u) {
    const d = () => {
      e.apply(this, u);
    };
    clearTimeout(a), a = setTimeout(d, n);
  }
  return s.clear = () => {
    clearTimeout(a);
  }, s;
}
function NH(e, n) {
  return process.env.NODE_ENV === "production" ? () => null : (a, s, u, d, p) => {
    const h = u || "<<anonymous>>", g = p || s;
    return typeof a[s] < "u" ? new Error(`The ${d} \`${g}\` of \`${h}\` is deprecated. ${n}`) : null;
  };
}
function Hs(e, n) {
  var a, s;
  return /* @__PURE__ */ k.isValidElement(e) && n.indexOf(
    // For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    (a = e.type.muiName) != null ? a : (s = e.type) == null || (s = s._payload) == null || (s = s.value) == null ? void 0 : s.muiName
  ) !== -1;
}
function $n(e) {
  return e && e.ownerDocument || document;
}
function Qr(e) {
  return $n(e).defaultView || window;
}
function vN(e, n) {
  if (process.env.NODE_ENV === "production")
    return () => null;
  const a = n ? y({}, n.propTypes) : null;
  return (u) => (d, p, h, g, b, ...x) => {
    const S = b || p, E = a == null ? void 0 : a[S];
    if (E) {
      const R = E(d, p, h, g, b, ...x);
      if (R)
        return R;
    }
    return typeof d[p] < "u" && !d[u] ? new Error(`The prop \`${S}\` of \`${e}\` can only be used together with the \`${u}\` prop.`) : null;
  };
}
function ag(e, n) {
  typeof e == "function" ? e(n) : e && (e.current = n);
}
let uD = 0;
function LH(e) {
  const [n, a] = k.useState(e), s = e || n;
  return k.useEffect(() => {
    n == null && (uD += 1, a(`mui-${uD}`));
  }, [n]), s;
}
const dD = k["useId".toString()];
function pa(e) {
  if (dD !== void 0) {
    const n = dD();
    return e ?? n;
  }
  return LH(e);
}
function UT(e, n, a, s, u) {
  if (process.env.NODE_ENV === "production")
    return null;
  const d = u || n;
  return typeof e[n] < "u" ? new Error(`The prop \`${d}\` is not supported. Please remove it.`) : null;
}
function Eo({
  controlled: e,
  default: n,
  name: a,
  state: s = "value"
}) {
  const {
    current: u
  } = k.useRef(e !== void 0), [d, p] = k.useState(n), h = u ? e : d;
  if (process.env.NODE_ENV !== "production") {
    k.useEffect(() => {
      u !== (e !== void 0) && console.error([`MUI: A component is changing the ${u ? "" : "un"}controlled ${s} state of ${a} to be ${u ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${a} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [s, a, e]);
    const {
      current: b
    } = k.useRef(n);
    k.useEffect(() => {
      !u && b !== n && console.error([`MUI: A component is changing the default ${s} state of an uncontrolled ${a} after being initialized. To suppress this warning opt to use a controlled ${a}.`].join(`
`));
    }, [JSON.stringify(n)]);
  }
  const g = k.useCallback((b) => {
    u || p(b);
  }, []);
  return [h, g];
}
function kt(e) {
  const n = k.useRef(e);
  return ro(() => {
    n.current = e;
  }), k.useRef((...a) => (
    // @ts-expect-error hide `this`
    (0, n.current)(...a)
  )).current;
}
function cn(...e) {
  return k.useMemo(() => e.every((n) => n == null) ? null : (n) => {
    e.forEach((a) => {
      ag(a, n);
    });
  }, e);
}
const pD = {};
function IH(e, n) {
  const a = k.useRef(pD);
  return a.current === pD && (a.current = e(n)), a;
}
const AH = [];
function _H(e) {
  k.useEffect(e, AH);
}
class Sg {
  constructor() {
    this.currentId = 0, this.clear = () => {
      this.currentId !== 0 && (clearTimeout(this.currentId), this.currentId = 0);
    }, this.disposeEffect = () => this.clear;
  }
  static create() {
    return new Sg();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(n, a) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = 0, a();
    }, n);
  }
}
function Fl() {
  const e = IH(Sg.create).current;
  return _H(e.disposeEffect), e;
}
let HT = !0, bw = !1;
const VH = new Sg(), BH = {
  text: !0,
  search: !0,
  url: !0,
  tel: !0,
  email: !0,
  password: !0,
  number: !0,
  date: !0,
  month: !0,
  week: !0,
  time: !0,
  datetime: !0,
  "datetime-local": !0
};
function zH(e) {
  const {
    type: n,
    tagName: a
  } = e;
  return !!(a === "INPUT" && BH[n] && !e.readOnly || a === "TEXTAREA" && !e.readOnly || e.isContentEditable);
}
function FH(e) {
  e.metaKey || e.altKey || e.ctrlKey || (HT = !0);
}
function qk() {
  HT = !1;
}
function jH() {
  this.visibilityState === "hidden" && bw && (HT = !0);
}
function UH(e) {
  e.addEventListener("keydown", FH, !0), e.addEventListener("mousedown", qk, !0), e.addEventListener("pointerdown", qk, !0), e.addEventListener("touchstart", qk, !0), e.addEventListener("visibilitychange", jH, !0);
}
function HH(e) {
  const {
    target: n
  } = e;
  try {
    return n.matches(":focus-visible");
  } catch {
  }
  return HT || zH(n);
}
function Xf() {
  const e = k.useCallback((u) => {
    u != null && UH(u.ownerDocument);
  }, []), n = k.useRef(!1);
  function a() {
    return n.current ? (bw = !0, VH.start(100, () => {
      bw = !1;
    }), n.current = !1, !0) : !1;
  }
  function s(u) {
    return HH(u) ? (n.current = !0, !0) : !1;
  }
  return {
    isFocusVisibleRef: n,
    onFocus: s,
    onBlur: a,
    ref: e
  };
}
function gN(e) {
  const n = e.documentElement.clientWidth;
  return Math.abs(window.innerWidth - n);
}
let Ef;
function bN() {
  if (Ef)
    return Ef;
  const e = document.createElement("div"), n = document.createElement("div");
  return n.style.width = "10px", n.style.height = "1px", e.appendChild(n), e.dir = "rtl", e.style.fontSize = "14px", e.style.width = "4px", e.style.height = "1px", e.style.position = "absolute", e.style.top = "-1000px", e.style.overflow = "scroll", document.body.appendChild(e), Ef = "reverse", e.scrollLeft > 0 ? Ef = "default" : (e.scrollLeft = 1, e.scrollLeft === 0 && (Ef = "negative")), document.body.removeChild(e), Ef;
}
function WH(e, n) {
  const a = e.scrollLeft;
  if (n !== "rtl")
    return a;
  switch (bN()) {
    case "negative":
      return e.scrollWidth - e.clientWidth + a;
    case "reverse":
      return e.scrollWidth - e.clientWidth - a;
    default:
      return a;
  }
}
const YH = (e) => {
  const n = k.useRef({});
  return k.useEffect(() => {
    n.current = e;
  }), n.current;
}, jw = YH;
function yN(e) {
  return k.Children.toArray(e).filter((n) => /* @__PURE__ */ k.isValidElement(n));
}
const qH = {
  border: 0,
  clip: "rect(0 0 0 0)",
  height: "1px",
  margin: -1,
  overflow: "hidden",
  padding: 0,
  position: "absolute",
  whiteSpace: "nowrap",
  width: "1px"
}, CN = qH;
function GH(e) {
  const n = typeof e;
  switch (n) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return n;
  }
}
function KH(e) {
  return typeof e == "number" && isFinite(e) && Math.floor(e) === e;
}
const QH = Number.isInteger || KH;
function TN(e, n, a, s) {
  const u = e[n];
  if (u == null || !QH(u)) {
    const d = GH(u);
    return new RangeError(`Invalid ${s} \`${n}\` of type \`${d}\` supplied to \`${a}\`, expected \`integer\`.`);
  }
  return null;
}
function xN(e, n, ...a) {
  return e[n] === void 0 ? null : TN(e, n, ...a);
}
function yw() {
  return null;
}
xN.isRequired = TN;
yw.isRequired = yw;
const Ro = process.env.NODE_ENV === "production" ? yw : xN;
function He(e, n, a = void 0) {
  const s = {};
  return Object.keys(e).forEach(
    // `Object.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.
    // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208
    (u) => {
      s[u] = e[u].reduce((d, p) => {
        if (p) {
          const h = n(p);
          h !== "" && d.push(h), a && a[p] && d.push(a[p]);
        }
        return d;
      }, []).join(" ");
    }
  ), s;
}
const SN = /* @__PURE__ */ k.createContext(null);
process.env.NODE_ENV !== "production" && (SN.displayName = "ThemeContext");
const kN = SN;
function Uw() {
  const e = k.useContext(kN);
  return process.env.NODE_ENV !== "production" && k.useDebugValue(e), e;
}
const XH = typeof Symbol == "function" && Symbol.for, ZH = XH ? Symbol.for("mui.nested") : "__THEME_NESTED__";
function JH(e, n) {
  if (typeof n == "function") {
    const a = n(e);
    return process.env.NODE_ENV !== "production" && (a || console.error(["MUI: You should return an object from your theme function, i.e.", "<ThemeProvider theme={() => ({})} />"].join(`
`))), a;
  }
  return y({}, e, n);
}
function xT(e) {
  const {
    children: n,
    theme: a
  } = e, s = Uw();
  process.env.NODE_ENV !== "production" && s === null && typeof a == "function" && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const u = k.useMemo(() => {
    const d = s === null ? a : JH(s, a);
    return d != null && (d[ZH] = s !== null), d;
  }, [a, s]);
  return /* @__PURE__ */ _(kN.Provider, {
    value: u,
    children: n
  });
}
process.env.NODE_ENV !== "production" && (xT.propTypes = {
  /**
   * Your component tree.
   */
  children: t.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: t.oneOfType([t.object, t.func]).isRequired
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (xT.propTypes = Pd(xT.propTypes));
const fD = {};
function mD(e, n, a, s = !1) {
  return k.useMemo(() => {
    const u = e && n[e] || n;
    if (typeof a == "function") {
      const d = a(u), p = e ? y({}, n, {
        [e]: d
      }) : d;
      return s ? () => p : p;
    }
    return e ? y({}, n, {
      [e]: a
    }) : y({}, n, a);
  }, [e, n, a, s]);
}
function ig(e) {
  const {
    children: n,
    theme: a,
    themeId: s
  } = e, u = rN(fD), d = Uw() || fD;
  process.env.NODE_ENV !== "production" && (u === null && typeof a == "function" || s && u && !u[s] && typeof a == "function") && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const p = mD(s, u, a), h = mD(s, d, a, !0);
  return /* @__PURE__ */ _(xT, {
    theme: h,
    children: /* @__PURE__ */ _(bU.Provider, {
      value: p,
      children: n
    })
  });
}
process.env.NODE_ENV !== "production" && (ig.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Your component tree.
   */
  children: t.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: t.oneOfType([t.func, t.object]).isRequired,
  /**
   * The design system's unique id for getting the corresponded theme when there are multiple design systems.
   */
  themeId: t.string
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (ig.propTypes = Pd(ig.propTypes));
const Hw = "mode", Ww = "color-scheme", wN = "data-color-scheme";
function e4(e) {
  const {
    defaultMode: n = "light",
    defaultLightColorScheme: a = "light",
    defaultDarkColorScheme: s = "dark",
    modeStorageKey: u = Hw,
    colorSchemeStorageKey: d = Ww,
    attribute: p = wN,
    colorSchemeNode: h = "document.documentElement"
  } = e || {};
  return /* @__PURE__ */ _("script", {
    // eslint-disable-next-line react/no-danger
    dangerouslySetInnerHTML: {
      __html: `(function() {
try {
  var mode = localStorage.getItem('${u}') || '${n}';
  var colorScheme = '';
  if (mode === 'system') {
    // handle system mode
    var mql = window.matchMedia('(prefers-color-scheme: dark)');
    if (mql.matches) {
      colorScheme = localStorage.getItem('${d}-dark') || '${s}';
    } else {
      colorScheme = localStorage.getItem('${d}-light') || '${a}';
    }
  }
  if (mode === 'light') {
    colorScheme = localStorage.getItem('${d}-light') || '${a}';
  }
  if (mode === 'dark') {
    colorScheme = localStorage.getItem('${d}-dark') || '${s}';
  }
  if (colorScheme) {
    ${h}.setAttribute('${p}', colorScheme);
  }
} catch(e){}})();`
    }
  }, "mui-color-scheme-init");
}
function hD(e) {
  if (typeof window < "u" && e === "system")
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
function RN(e, n) {
  if (e.mode === "light" || e.mode === "system" && e.systemMode === "light")
    return n("light");
  if (e.mode === "dark" || e.mode === "system" && e.systemMode === "dark")
    return n("dark");
}
function t4(e) {
  return RN(e, (n) => {
    if (n === "light")
      return e.lightColorScheme;
    if (n === "dark")
      return e.darkColorScheme;
  });
}
function Gk(e, n) {
  if (typeof window > "u")
    return;
  let a;
  try {
    a = localStorage.getItem(e) || void 0, a || localStorage.setItem(e, n);
  } catch {
  }
  return a || n;
}
function n4(e) {
  const {
    defaultMode: n = "light",
    defaultLightColorScheme: a,
    defaultDarkColorScheme: s,
    supportedColorSchemes: u = [],
    modeStorageKey: d = Hw,
    colorSchemeStorageKey: p = Ww,
    storageWindow: h = typeof window > "u" ? void 0 : window
  } = e, g = u.join(","), [b, x] = k.useState(() => {
    const O = Gk(d, n), N = Gk(`${p}-light`, a), V = Gk(`${p}-dark`, s);
    return {
      mode: O,
      systemMode: hD(O),
      lightColorScheme: N,
      darkColorScheme: V
    };
  }), S = t4(b), E = k.useCallback((O) => {
    x((N) => {
      if (O === N.mode)
        return N;
      const V = O || n;
      try {
        localStorage.setItem(d, V);
      } catch {
      }
      return y({}, N, {
        mode: V,
        systemMode: hD(V)
      });
    });
  }, [d, n]), R = k.useCallback((O) => {
    O ? typeof O == "string" ? O && !g.includes(O) ? console.error(`\`${O}\` does not exist in \`theme.colorSchemes\`.`) : x((N) => {
      const V = y({}, N);
      return RN(N, (I) => {
        try {
          localStorage.setItem(`${p}-${I}`, O);
        } catch {
        }
        I === "light" && (V.lightColorScheme = O), I === "dark" && (V.darkColorScheme = O);
      }), V;
    }) : x((N) => {
      const V = y({}, N), I = O.light === null ? a : O.light, z = O.dark === null ? s : O.dark;
      if (I)
        if (!g.includes(I))
          console.error(`\`${I}\` does not exist in \`theme.colorSchemes\`.`);
        else {
          V.lightColorScheme = I;
          try {
            localStorage.setItem(`${p}-light`, I);
          } catch {
          }
        }
      if (z)
        if (!g.includes(z))
          console.error(`\`${z}\` does not exist in \`theme.colorSchemes\`.`);
        else {
          V.darkColorScheme = z;
          try {
            localStorage.setItem(`${p}-dark`, z);
          } catch {
          }
        }
      return V;
    }) : x((N) => {
      try {
        localStorage.setItem(`${p}-light`, a), localStorage.setItem(`${p}-dark`, s);
      } catch {
      }
      return y({}, N, {
        lightColorScheme: a,
        darkColorScheme: s
      });
    });
  }, [g, p, a, s]), $ = k.useCallback((O) => {
    b.mode === "system" && x((N) => y({}, N, {
      systemMode: O != null && O.matches ? "dark" : "light"
    }));
  }, [b.mode]), M = k.useRef($);
  return M.current = $, k.useEffect(() => {
    const O = (...V) => M.current(...V), N = window.matchMedia("(prefers-color-scheme: dark)");
    return N.addListener(O), O(N), () => N.removeListener(O);
  }, []), k.useEffect(() => {
    const O = (N) => {
      const V = N.newValue;
      typeof N.key == "string" && N.key.startsWith(p) && (!V || g.match(V)) && (N.key.endsWith("light") && R({
        light: V
      }), N.key.endsWith("dark") && R({
        dark: V
      })), N.key === d && (!V || ["light", "dark", "system"].includes(V)) && E(V || n);
    };
    if (h)
      return h.addEventListener("storage", O), () => h.removeEventListener("storage", O);
  }, [R, E, d, p, g, n, h]), y({}, b, {
    colorScheme: S,
    setMode: E,
    setColorScheme: R
  });
}
const o4 = ["colorSchemes", "components", "generateCssVars", "cssVarPrefix"], r4 = "*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
function a4(e) {
  const {
    themeId: n,
    /**
     * This `theme` object needs to follow a certain structure to
     * be used correctly by the finel `CssVarsProvider`. It should have a
     * `colorSchemes` key with the light and dark (and any other) palette.
     * It should also ideally have a vars object created using `prepareCssVars`.
     */
    theme: a = {},
    attribute: s = wN,
    modeStorageKey: u = Hw,
    colorSchemeStorageKey: d = Ww,
    defaultMode: p = "light",
    defaultColorScheme: h,
    disableTransitionOnChange: g = !1,
    resolveTheme: b,
    excludeVariablesFromRoot: x
  } = e;
  (!a.colorSchemes || typeof h == "string" && !a.colorSchemes[h] || typeof h == "object" && !a.colorSchemes[h == null ? void 0 : h.light] || typeof h == "object" && !a.colorSchemes[h == null ? void 0 : h.dark]) && console.error(`MUI: \`${h}\` does not exist in \`theme.colorSchemes\`.`);
  const S = /* @__PURE__ */ k.createContext(void 0);
  process.env.NODE_ENV !== "production" && (S.displayName = "ColorSchemeContext");
  const E = () => {
    const N = k.useContext(S);
    if (!N)
      throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `useColorScheme` must be called under <CssVarsProvider />" : qs(19));
    return N;
  };
  function R({
    children: N,
    theme: V = a,
    modeStorageKey: I = u,
    colorSchemeStorageKey: z = d,
    attribute: B = s,
    defaultMode: P = p,
    defaultColorScheme: F = h,
    disableTransitionOnChange: H = g,
    storageWindow: U = typeof window > "u" ? void 0 : window,
    documentNode: Q = typeof document > "u" ? void 0 : document,
    colorSchemeNode: Y = typeof document > "u" ? void 0 : document.documentElement,
    colorSchemeSelector: te = ":root",
    disableNestedContext: Z = !1,
    disableStyleSheetGeneration: q = !1
  }) {
    const X = k.useRef(!1), oe = Uw(), ie = k.useContext(S), K = !!ie && !Z, ne = V[n], se = ne || V, {
      colorSchemes: ze = {},
      components: Ue = {},
      generateCssVars: Oe = () => ({
        vars: {},
        css: {}
      }),
      cssVarPrefix: ue
    } = se, xe = le(se, o4), me = Object.keys(ze), Se = typeof F == "string" ? F : F.light, ce = typeof F == "string" ? F : F.dark, {
      mode: Le,
      setMode: Ze,
      systemMode: Ee,
      lightColorScheme: Ae,
      darkColorScheme: Ce,
      colorScheme: ae,
      setColorScheme: Pe
    } = n4({
      supportedColorSchemes: me,
      defaultLightColorScheme: Se,
      defaultDarkColorScheme: ce,
      modeStorageKey: I,
      colorSchemeStorageKey: z,
      defaultMode: P,
      storageWindow: U
    });
    let ke = Le, pt = ae;
    K && (ke = ie.mode, pt = ie.colorScheme);
    const _e = (() => ke || (P === "system" ? p : P))(), dt = (() => pt || (_e === "dark" ? ce : Se))(), {
      css: ge,
      vars: ve
    } = Oe(), qe = y({}, xe, {
      components: Ue,
      colorSchemes: ze,
      cssVarPrefix: ue,
      vars: ve,
      getColorSchemeSelector: (we) => `[${B}="${we}"] &`
    }), vt = {}, yt = {};
    Object.entries(ze).forEach(([we, Re]) => {
      const {
        css: at,
        vars: Ke
      } = Oe(we);
      qe.vars = ns(qe.vars, Ke), we === dt && (Object.keys(Re).forEach((et) => {
        Re[et] && typeof Re[et] == "object" ? qe[et] = y({}, qe[et], Re[et]) : qe[et] = Re[et];
      }), qe.palette && (qe.palette.colorScheme = we));
      const lt = (() => typeof F == "string" ? F : P === "dark" ? F.dark : F.light)();
      if (we === lt) {
        if (x) {
          const et = {};
          x(ue).forEach((rt) => {
            et[rt] = at[rt], delete at[rt];
          }), vt[`[${B}="${we}"]`] = et;
        }
        vt[`${te}, [${B}="${we}"]`] = at;
      } else
        yt[`${te === ":root" ? "" : te}[${B}="${we}"]`] = at;
    }), qe.vars = ns(qe.vars, ve), k.useEffect(() => {
      pt && Y && Y.setAttribute(B, pt);
    }, [pt, B, Y]), k.useEffect(() => {
      let we;
      if (H && X.current && Q) {
        const Re = Q.createElement("style");
        Re.appendChild(Q.createTextNode(r4)), Q.head.appendChild(Re), window.getComputedStyle(Q.body), we = setTimeout(() => {
          Q.head.removeChild(Re);
        }, 1);
      }
      return () => {
        clearTimeout(we);
      };
    }, [pt, H, Q]), k.useEffect(() => (X.current = !0, () => {
      X.current = !1;
    }), []);
    const Mt = k.useMemo(() => ({
      mode: ke,
      systemMode: Ee,
      setMode: Ze,
      lightColorScheme: Ae,
      darkColorScheme: Ce,
      colorScheme: pt,
      setColorScheme: Pe,
      allColorSchemes: me
    }), [me, pt, Ce, Ae, ke, Pe, Ze, Ee]);
    let bt = !0;
    (q || K && (oe == null ? void 0 : oe.cssVarPrefix) === ue) && (bt = !1);
    const wt = /* @__PURE__ */ st(k.Fragment, {
      children: [bt && /* @__PURE__ */ st(k.Fragment, {
        children: [/* @__PURE__ */ _(iT, {
          styles: {
            [te]: ge
          }
        }), /* @__PURE__ */ _(iT, {
          styles: vt
        }), /* @__PURE__ */ _(iT, {
          styles: yt
        })]
      }), /* @__PURE__ */ _(ig, {
        themeId: ne ? n : void 0,
        theme: b ? b(qe) : qe,
        children: N
      })]
    });
    return K ? wt : /* @__PURE__ */ _(S.Provider, {
      value: Mt,
      children: wt
    });
  }
  process.env.NODE_ENV !== "production" && (R.propTypes = {
    /**
     * The body attribute name to attach colorScheme.
     */
    attribute: t.string,
    /**
     * The component tree.
     */
    children: t.node,
    /**
     * The node used to attach the color-scheme attribute
     */
    colorSchemeNode: t.any,
    /**
     * The CSS selector for attaching the generated custom properties
     */
    colorSchemeSelector: t.string,
    /**
     * localStorage key used to store `colorScheme`
     */
    colorSchemeStorageKey: t.string,
    /**
     * The initial color scheme used.
     */
    defaultColorScheme: t.oneOfType([t.string, t.object]),
    /**
     * The initial mode used.
     */
    defaultMode: t.string,
    /**
     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.
     */
    disableNestedContext: t.bool,
    /**
     * If `true`, the style sheet won't be generated.
     *
     * This is useful for controlling nested CssVarsProvider behavior.
     */
    disableStyleSheetGeneration: t.bool,
    /**
     * Disable CSS transitions when switching between modes or color schemes.
     */
    disableTransitionOnChange: t.bool,
    /**
     * The document to attach the attribute to.
     */
    documentNode: t.any,
    /**
     * The key in the local storage used to store current color scheme.
     */
    modeStorageKey: t.string,
    /**
     * The window that attaches the 'storage' event listener.
     * @default window
     */
    storageWindow: t.any,
    /**
     * The calculated theme object that will be passed through context.
     */
    theme: t.object
  });
  const $ = typeof h == "string" ? h : h.light, M = typeof h == "string" ? h : h.dark;
  return {
    CssVarsProvider: R,
    useColorScheme: E,
    getInitColorSchemeScript: (N) => e4(y({
      attribute: s,
      colorSchemeStorageKey: d,
      defaultMode: p,
      defaultLightColorScheme: $,
      defaultDarkColorScheme: M,
      modeStorageKey: u
    }, N))
  };
}
function i4(e = "") {
  function n(...s) {
    if (!s.length)
      return "";
    const u = s[0];
    return typeof u == "string" && !u.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${u}${n(...s.slice(1))})` : `, ${u}`;
  }
  return (s, ...u) => `var(--${e ? `${e}-` : ""}${s}${n(...u)})`;
}
const vD = (e, n, a, s = []) => {
  let u = e;
  n.forEach((d, p) => {
    p === n.length - 1 ? Array.isArray(u) ? u[Number(d)] = a : u && typeof u == "object" && (u[d] = a) : u && typeof u == "object" && (u[d] || (u[d] = s.includes(d) ? [] : {}), u = u[d]);
  });
}, s4 = (e, n, a) => {
  function s(u, d = [], p = []) {
    Object.entries(u).forEach(([h, g]) => {
      (!a || a && !a([...d, h])) && g != null && (typeof g == "object" && Object.keys(g).length > 0 ? s(g, [...d, h], Array.isArray(g) ? [...p, h] : p) : n([...d, h], g, p));
    });
  }
  s(e);
}, l4 = (e, n) => typeof n == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((s) => e.includes(s)) || e[e.length - 1].toLowerCase().indexOf("opacity") >= 0 ? n : `${n}px` : n;
function Kk(e, n) {
  const {
    prefix: a,
    shouldSkipGeneratingVar: s
  } = n || {}, u = {}, d = {}, p = {};
  return s4(
    e,
    (h, g, b) => {
      if ((typeof g == "string" || typeof g == "number") && (!s || !s(h, g))) {
        const x = `--${a ? `${a}-` : ""}${h.join("-")}`;
        Object.assign(u, {
          [x]: l4(h, g)
        }), vD(d, h, `var(${x})`, b), vD(p, h, `var(${x}, ${g})`, b);
      }
    },
    (h) => h[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: u,
    vars: d,
    varsWithDefaults: p
  };
}
function sg(e) {
  "@babel/helpers - typeof";
  return sg = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(n) {
    return typeof n;
  } : function(n) {
    return n && typeof Symbol == "function" && n.constructor === Symbol && n !== Symbol.prototype ? "symbol" : typeof n;
  }, sg(e);
}
function c4(e, n) {
  if (sg(e) != "object" || !e)
    return e;
  var a = e[Symbol.toPrimitive];
  if (a !== void 0) {
    var s = a.call(e, n || "default");
    if (sg(s) != "object")
      return s;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (n === "string" ? String : Number)(e);
}
function u4(e) {
  var n = c4(e, "string");
  return sg(n) == "symbol" ? n : String(n);
}
const d4 = ["colorSchemes", "components", "defaultColorScheme"];
function p4(e, n) {
  const {
    colorSchemes: a = {},
    defaultColorScheme: s = "light"
  } = e, u = le(e, d4), {
    vars: d,
    css: p,
    varsWithDefaults: h
  } = Kk(u, n);
  let g = h;
  const b = {}, {
    [s]: x
  } = a, S = le(a, [s].map(u4));
  if (Object.entries(S || {}).forEach(([R, $]) => {
    const {
      vars: M,
      css: O,
      varsWithDefaults: N
    } = Kk($, n);
    g = ns(g, N), b[R] = {
      css: O,
      vars: M
    };
  }), x) {
    const {
      css: R,
      vars: $,
      varsWithDefaults: M
    } = Kk(x, n);
    g = ns(g, M), b[s] = {
      css: R,
      vars: $
    };
  }
  return {
    vars: g,
    generateCssVars: (R) => {
      var $;
      if (!R) {
        var M;
        const N = y({}, p);
        return {
          css: N,
          vars: d,
          selector: (n == null || (M = n.getSelector) == null ? void 0 : M.call(n, R, N)) || ":root"
        };
      }
      const O = y({}, b[R].css);
      return {
        css: O,
        vars: b[R].vars,
        selector: (n == null || ($ = n.getSelector) == null ? void 0 : $.call(n, R, O)) || ":root"
      };
    }
  };
}
const f4 = ["className", "component", "disableGutters", "fixed", "maxWidth", "classes"], m4 = bg(), h4 = Bw("div", {
  name: "MuiContainer",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[`maxWidth${pe(String(a.maxWidth))}`], a.fixed && n.fixed, a.disableGutters && n.disableGutters];
  }
}), v4 = (e) => Cg({
  props: e,
  name: "MuiContainer",
  defaultTheme: m4
}), g4 = (e, n) => {
  const a = (g) => We(n, g), {
    classes: s,
    fixed: u,
    disableGutters: d,
    maxWidth: p
  } = e, h = {
    root: ["root", p && `maxWidth${pe(String(p))}`, u && "fixed", d && "disableGutters"]
  };
  return He(h, a, s);
};
function b4(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: n = h4,
    useThemeProps: a = v4,
    componentName: s = "MuiContainer"
  } = e, u = n(({
    theme: p,
    ownerState: h
  }) => y({
    width: "100%",
    marginLeft: "auto",
    boxSizing: "border-box",
    marginRight: "auto",
    display: "block"
  }, !h.disableGutters && {
    paddingLeft: p.spacing(2),
    paddingRight: p.spacing(2),
    // @ts-ignore module augmentation fails if custom breakpoints are used
    [p.breakpoints.up("sm")]: {
      paddingLeft: p.spacing(3),
      paddingRight: p.spacing(3)
    }
  }), ({
    theme: p,
    ownerState: h
  }) => h.fixed && Object.keys(p.breakpoints.values).reduce((g, b) => {
    const x = b, S = p.breakpoints.values[x];
    return S !== 0 && (g[p.breakpoints.up(x)] = {
      maxWidth: `${S}${p.breakpoints.unit}`
    }), g;
  }, {}), ({
    theme: p,
    ownerState: h
  }) => y({}, h.maxWidth === "xs" && {
    // @ts-ignore module augmentation fails if custom breakpoints are used
    [p.breakpoints.up("xs")]: {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      maxWidth: Math.max(p.breakpoints.values.xs, 444)
    }
  }, h.maxWidth && // @ts-ignore module augmentation fails if custom breakpoints are used
  h.maxWidth !== "xs" && {
    // @ts-ignore module augmentation fails if custom breakpoints are used
    [p.breakpoints.up(h.maxWidth)]: {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      maxWidth: `${p.breakpoints.values[h.maxWidth]}${p.breakpoints.unit}`
    }
  })), d = /* @__PURE__ */ k.forwardRef(function(h, g) {
    const b = a(h), {
      className: x,
      component: S = "div",
      disableGutters: E = !1,
      fixed: R = !1,
      maxWidth: $ = "lg"
    } = b, M = le(b, f4), O = y({}, b, {
      component: S,
      disableGutters: E,
      fixed: R,
      maxWidth: $
    }), N = g4(O, s);
    return (
      // @ts-ignore theme is injected by the styled util
      /* @__PURE__ */ _(u, y({
        as: S,
        ownerState: O,
        className: fe(N.root, x),
        ref: g
      }, M))
    );
  });
  return process.env.NODE_ENV !== "production" && (d.propTypes = {
    children: t.node,
    classes: t.object,
    className: t.string,
    component: t.elementType,
    disableGutters: t.bool,
    fixed: t.bool,
    maxWidth: t.oneOfType([t.oneOf(["xs", "sm", "md", "lg", "xl", !1]), t.string]),
    sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
  }), d;
}
const y4 = (e, n) => e.filter((a) => n.includes(a)), Zf = (e, n, a) => {
  const s = e.keys[0];
  Array.isArray(n) ? n.forEach((u, d) => {
    a((p, h) => {
      d <= e.keys.length - 1 && (d === 0 ? Object.assign(p, h) : p[e.up(e.keys[d])] = h);
    }, u);
  }) : n && typeof n == "object" ? (Object.keys(n).length > e.keys.length ? e.keys : y4(e.keys, Object.keys(n))).forEach((d) => {
    if (e.keys.indexOf(d) !== -1) {
      const p = n[d];
      p !== void 0 && a((h, g) => {
        s === d ? Object.assign(h, g) : h[e.up(d)] = g;
      }, p);
    }
  }) : (typeof n == "number" || typeof n == "string") && a((u, d) => {
    Object.assign(u, d);
  }, n);
};
function Ul(e) {
  return e ? `Level${e}` : "";
}
function kg(e) {
  return e.unstable_level > 0 && e.container;
}
function EN(e) {
  return function(a) {
    return `var(--Grid-${a}Spacing${Ul(e.unstable_level)})`;
  };
}
function Yw(e) {
  return function(a) {
    return e.unstable_level === 0 ? `var(--Grid-${a}Spacing)` : `var(--Grid-${a}Spacing${Ul(e.unstable_level - 1)})`;
  };
}
function qw(e) {
  return e.unstable_level === 0 ? "var(--Grid-columns)" : `var(--Grid-columns${Ul(e.unstable_level - 1)})`;
}
const C4 = ({
  theme: e,
  ownerState: n
}) => {
  const a = EN(n), s = {};
  return Zf(e.breakpoints, n.gridSize, (u, d) => {
    let p = {};
    d === !0 && (p = {
      flexBasis: 0,
      flexGrow: 1,
      maxWidth: "100%"
    }), d === "auto" && (p = {
      flexBasis: "auto",
      flexGrow: 0,
      flexShrink: 0,
      maxWidth: "none",
      width: "auto"
    }), typeof d == "number" && (p = {
      flexGrow: 0,
      flexBasis: "auto",
      width: `calc(100% * ${d} / ${qw(n)}${kg(n) ? ` + ${a("column")}` : ""})`
    }), u(s, p);
  }), s;
}, T4 = ({
  theme: e,
  ownerState: n
}) => {
  const a = {};
  return Zf(e.breakpoints, n.gridOffset, (s, u) => {
    let d = {};
    u === "auto" && (d = {
      marginLeft: "auto"
    }), typeof u == "number" && (d = {
      marginLeft: u === 0 ? "0px" : `calc(100% * ${u} / ${qw(n)})`
    }), s(a, d);
  }), a;
}, x4 = ({
  theme: e,
  ownerState: n
}) => {
  if (!n.container)
    return {};
  const a = kg(n) ? {
    [`--Grid-columns${Ul(n.unstable_level)}`]: qw(n)
  } : {
    "--Grid-columns": 12
  };
  return Zf(e.breakpoints, n.columns, (s, u) => {
    s(a, {
      [`--Grid-columns${Ul(n.unstable_level)}`]: u
    });
  }), a;
}, S4 = ({
  theme: e,
  ownerState: n
}) => {
  if (!n.container)
    return {};
  const a = Yw(n), s = kg(n) ? {
    // Set the default spacing as its parent spacing.
    // It will be overridden if spacing props are provided
    [`--Grid-rowSpacing${Ul(n.unstable_level)}`]: a("row")
  } : {};
  return Zf(e.breakpoints, n.rowSpacing, (u, d) => {
    var p;
    u(s, {
      [`--Grid-rowSpacing${Ul(n.unstable_level)}`]: typeof d == "string" ? d : (p = e.spacing) == null ? void 0 : p.call(e, d)
    });
  }), s;
}, k4 = ({
  theme: e,
  ownerState: n
}) => {
  if (!n.container)
    return {};
  const a = Yw(n), s = kg(n) ? {
    // Set the default spacing as its parent spacing.
    // It will be overridden if spacing props are provided
    [`--Grid-columnSpacing${Ul(n.unstable_level)}`]: a("column")
  } : {};
  return Zf(e.breakpoints, n.columnSpacing, (u, d) => {
    var p;
    u(s, {
      [`--Grid-columnSpacing${Ul(n.unstable_level)}`]: typeof d == "string" ? d : (p = e.spacing) == null ? void 0 : p.call(e, d)
    });
  }), s;
}, w4 = ({
  theme: e,
  ownerState: n
}) => {
  if (!n.container)
    return {};
  const a = {};
  return Zf(e.breakpoints, n.direction, (s, u) => {
    s(a, {
      flexDirection: u
    });
  }), a;
}, R4 = ({
  ownerState: e
}) => {
  const n = EN(e), a = Yw(e);
  return y({
    minWidth: 0,
    boxSizing: "border-box"
  }, e.container && y({
    display: "flex",
    flexWrap: "wrap"
  }, e.wrap && e.wrap !== "wrap" && {
    flexWrap: e.wrap
  }, {
    margin: `calc(${n("row")} / -2) calc(${n("column")} / -2)`
  }, e.disableEqualOverflow && {
    margin: `calc(${n("row")} * -1) 0px 0px calc(${n("column")} * -1)`
  }), (!e.container || kg(e)) && y({
    padding: `calc(${a("row")} / 2) calc(${a("column")} / 2)`
  }, (e.disableEqualOverflow || e.parentDisableEqualOverflow) && {
    padding: `${a("row")} 0px 0px ${a("column")}`
  }));
}, E4 = (e) => {
  const n = [];
  return Object.entries(e).forEach(([a, s]) => {
    s !== !1 && s !== void 0 && n.push(`grid-${a}-${String(s)}`);
  }), n;
}, O4 = (e, n = "xs") => {
  function a(s) {
    return s === void 0 ? !1 : typeof s == "string" && !Number.isNaN(Number(s)) || typeof s == "number" && s > 0;
  }
  if (a(e))
    return [`spacing-${n}-${String(e)}`];
  if (typeof e == "object" && !Array.isArray(e)) {
    const s = [];
    return Object.entries(e).forEach(([u, d]) => {
      a(d) && s.push(`spacing-${u}-${String(d)}`);
    }), s;
  }
  return [];
}, P4 = (e) => e === void 0 ? [] : typeof e == "object" ? Object.entries(e).map(([n, a]) => `direction-${n}-${a}`) : [`direction-xs-${String(e)}`], D4 = ["className", "children", "columns", "container", "component", "direction", "wrap", "spacing", "rowSpacing", "columnSpacing", "disableEqualOverflow", "unstable_level"], M4 = bg(), $4 = Bw("div", {
  name: "MuiGrid",
  slot: "Root",
  overridesResolver: (e, n) => n.root
});
function N4(e) {
  return Cg({
    props: e,
    name: "MuiGrid",
    defaultTheme: M4
  });
}
function L4(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: n = $4,
    useThemeProps: a = N4,
    componentName: s = "MuiGrid"
  } = e, u = /* @__PURE__ */ k.createContext(void 0);
  process.env.NODE_ENV !== "production" && (u.displayName = "GridOverflowContext");
  const d = (g, b) => {
    const {
      container: x,
      direction: S,
      spacing: E,
      wrap: R,
      gridSize: $
    } = g, M = {
      root: ["root", x && "container", R !== "wrap" && `wrap-xs-${String(R)}`, ...P4(S), ...E4($), ...x ? O4(E, b.breakpoints.keys[0]) : []]
    };
    return He(M, (O) => We(s, O), {});
  }, p = n(x4, k4, S4, C4, w4, R4, T4), h = /* @__PURE__ */ k.forwardRef(function(b, x) {
    var S, E, R, $, M, O, N, V;
    const I = Gf(), z = a(b), B = yg(z), P = k.useContext(u), {
      className: F,
      children: H,
      columns: U = 12,
      container: Q = !1,
      component: Y = "div",
      direction: te = "row",
      wrap: Z = "wrap",
      spacing: q = 0,
      rowSpacing: X = q,
      columnSpacing: oe = q,
      disableEqualOverflow: ie,
      unstable_level: K = 0
    } = B, ne = le(B, D4);
    let se = ie;
    K && ie !== void 0 && (se = b.disableEqualOverflow);
    const ze = {}, Ue = {}, Oe = {};
    Object.entries(ne).forEach(([Ee, Ae]) => {
      I.breakpoints.values[Ee] !== void 0 ? ze[Ee] = Ae : I.breakpoints.values[Ee.replace("Offset", "")] !== void 0 ? Ue[Ee.replace("Offset", "")] = Ae : Oe[Ee] = Ae;
    });
    const ue = (S = b.columns) != null ? S : K ? void 0 : U, xe = (E = b.spacing) != null ? E : K ? void 0 : q, me = (R = ($ = b.rowSpacing) != null ? $ : b.spacing) != null ? R : K ? void 0 : X, Se = (M = (O = b.columnSpacing) != null ? O : b.spacing) != null ? M : K ? void 0 : oe, ce = y({}, B, {
      level: K,
      columns: ue,
      container: Q,
      direction: te,
      wrap: Z,
      spacing: xe,
      rowSpacing: me,
      columnSpacing: Se,
      gridSize: ze,
      gridOffset: Ue,
      disableEqualOverflow: (N = (V = se) != null ? V : P) != null ? N : !1,
      // use context value if exists.
      parentDisableEqualOverflow: P
      // for nested grid
    }), Le = d(ce, I);
    let Ze = /* @__PURE__ */ _(p, y({
      ref: x,
      as: Y,
      ownerState: ce,
      className: fe(Le.root, F)
    }, Oe, {
      children: k.Children.map(H, (Ee) => {
        if (/* @__PURE__ */ k.isValidElement(Ee) && Hs(Ee, ["Grid"])) {
          var Ae;
          return /* @__PURE__ */ k.cloneElement(Ee, {
            unstable_level: (Ae = Ee.props.unstable_level) != null ? Ae : K + 1
          });
        }
        return Ee;
      })
    }));
    return se !== void 0 && se !== (P ?? !1) && (Ze = /* @__PURE__ */ _(u.Provider, {
      value: se,
      children: Ze
    })), Ze;
  });
  return process.env.NODE_ENV !== "production" && (h.propTypes = {
    children: t.node,
    className: t.string,
    columns: t.oneOfType([t.arrayOf(t.number), t.number, t.object]),
    columnSpacing: t.oneOfType([t.arrayOf(t.oneOfType([t.number, t.string])), t.number, t.object, t.string]),
    component: t.elementType,
    container: t.bool,
    direction: t.oneOfType([t.oneOf(["column-reverse", "column", "row-reverse", "row"]), t.arrayOf(t.oneOf(["column-reverse", "column", "row-reverse", "row"])), t.object]),
    disableEqualOverflow: t.bool,
    lg: t.oneOfType([t.oneOf(["auto"]), t.number, t.bool]),
    lgOffset: t.oneOfType([t.oneOf(["auto"]), t.number]),
    md: t.oneOfType([t.oneOf(["auto"]), t.number, t.bool]),
    mdOffset: t.oneOfType([t.oneOf(["auto"]), t.number]),
    rowSpacing: t.oneOfType([t.arrayOf(t.oneOfType([t.number, t.string])), t.number, t.object, t.string]),
    sm: t.oneOfType([t.oneOf(["auto"]), t.number, t.bool]),
    smOffset: t.oneOfType([t.oneOf(["auto"]), t.number]),
    spacing: t.oneOfType([t.arrayOf(t.oneOfType([t.number, t.string])), t.number, t.object, t.string]),
    sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
    wrap: t.oneOf(["nowrap", "wrap-reverse", "wrap"]),
    xl: t.oneOfType([t.oneOf(["auto"]), t.number, t.bool]),
    xlOffset: t.oneOfType([t.oneOf(["auto"]), t.number]),
    xs: t.oneOfType([t.oneOf(["auto"]), t.number, t.bool]),
    xsOffset: t.oneOfType([t.oneOf(["auto"]), t.number])
  }), h.muiName = "Grid", h;
}
const I4 = ["component", "direction", "spacing", "divider", "children", "className", "useFlexGap"], A4 = bg(), _4 = Bw("div", {
  name: "MuiStack",
  slot: "Root",
  overridesResolver: (e, n) => n.root
});
function V4(e) {
  return Cg({
    props: e,
    name: "MuiStack",
    defaultTheme: A4
  });
}
function B4(e, n) {
  const a = k.Children.toArray(e).filter(Boolean);
  return a.reduce((s, u, d) => (s.push(u), d < a.length - 1 && s.push(/* @__PURE__ */ k.cloneElement(n, {
    key: `separator-${d}`
  })), s), []);
}
const z4 = (e) => ({
  row: "Left",
  "row-reverse": "Right",
  column: "Top",
  "column-reverse": "Bottom"
})[e], F4 = ({
  ownerState: e,
  theme: n
}) => {
  let a = y({
    display: "flex",
    flexDirection: "column"
  }, og({
    theme: n
  }, kd({
    values: e.direction,
    breakpoints: n.breakpoints.values
  }), (s) => ({
    flexDirection: s
  })));
  if (e.spacing) {
    const s = yU(n), u = Object.keys(n.breakpoints.values).reduce((g, b) => ((typeof e.spacing == "object" && e.spacing[b] != null || typeof e.direction == "object" && e.direction[b] != null) && (g[b] = !0), g), {}), d = kd({
      values: e.direction,
      base: u
    }), p = kd({
      values: e.spacing,
      base: u
    });
    typeof d == "object" && Object.keys(d).forEach((g, b, x) => {
      if (!d[g]) {
        const E = b > 0 ? d[x[b - 1]] : "column";
        d[g] = E;
      }
    }), a = ns(a, og({
      theme: n
    }, p, (g, b) => e.useFlexGap ? {
      gap: oD(s, g)
    } : {
      // The useFlexGap={false} implement relies on each child to give up control of the margin.
      // We need to reset the margin to avoid double spacing.
      "& > :not(style):not(style)": {
        margin: 0
      },
      "& > :not(style) ~ :not(style)": {
        [`margin${z4(b ? d[b] : e.direction)}`]: oD(s, g)
      }
    }));
  }
  return a = CU(n.breakpoints, a), a;
};
function j4(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: n = _4,
    useThemeProps: a = V4,
    componentName: s = "MuiStack"
  } = e, u = () => He({
    root: ["root"]
  }, (g) => We(s, g), {}), d = n(F4), p = /* @__PURE__ */ k.forwardRef(function(g, b) {
    const x = a(g), S = yg(x), {
      component: E = "div",
      direction: R = "column",
      spacing: $ = 0,
      divider: M,
      children: O,
      className: N,
      useFlexGap: V = !1
    } = S, I = le(S, I4), z = {
      direction: R,
      spacing: $,
      useFlexGap: V
    }, B = u();
    return /* @__PURE__ */ _(d, y({
      as: E,
      ownerState: z,
      ref: b,
      className: fe(B.root, N)
    }, I, {
      children: M ? B4(O, M) : O
    }));
  });
  return process.env.NODE_ENV !== "production" && (p.propTypes = {
    children: t.node,
    direction: t.oneOfType([t.oneOf(["column-reverse", "column", "row-reverse", "row"]), t.arrayOf(t.oneOf(["column-reverse", "column", "row-reverse", "row"])), t.object]),
    divider: t.node,
    spacing: t.oneOfType([t.arrayOf(t.oneOfType([t.number, t.string])), t.number, t.object, t.string]),
    sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
  }), p;
}
const U4 = ["defaultProps", "mixins", "overrides", "palette", "props", "styleOverrides"], H4 = ["type", "mode"];
function W4(e) {
  process.env.NODE_ENV !== "production" && console.warn(["MUI: adaptV4Theme() is deprecated.", "Follow the upgrade guide on https://mui.com/r/migration-v4#theme."].join(`
`));
  const {
    defaultProps: n = {},
    mixins: a = {},
    overrides: s = {},
    palette: u = {},
    props: d = {},
    styleOverrides: p = {}
  } = e, h = le(e, U4), g = y({}, h, {
    components: {}
  });
  Object.keys(n).forEach((M) => {
    const O = g.components[M] || {};
    O.defaultProps = n[M], g.components[M] = O;
  }), Object.keys(d).forEach((M) => {
    const O = g.components[M] || {};
    O.defaultProps = d[M], g.components[M] = O;
  }), Object.keys(p).forEach((M) => {
    const O = g.components[M] || {};
    O.styleOverrides = p[M], g.components[M] = O;
  }), Object.keys(s).forEach((M) => {
    const O = g.components[M] || {};
    O.styleOverrides = s[M], g.components[M] = O;
  }), g.spacing = TU(e.spacing);
  const b = nN(e.breakpoints || {}), x = g.spacing;
  g.mixins = y({
    gutters: (M = {}) => y({
      paddingLeft: x(2),
      paddingRight: x(2)
    }, M, {
      [b.up("sm")]: y({
        paddingLeft: x(3),
        paddingRight: x(3)
      }, M[b.up("sm")])
    })
  }, a);
  const {
    type: S,
    mode: E
  } = u, R = le(u, H4), $ = E || S || "light";
  return g.palette = y({
    // theme.palette.text.hint
    text: {
      hint: $ === "dark" ? "rgba(255, 255, 255, 0.5)" : "rgba(0, 0, 0, 0.38)"
    },
    mode: $,
    type: $
  }, R), g;
}
function Y4(e, ...n) {
  return rg(ns({
    unstable_strictMode: !0
  }, e), ...n);
}
let gD = !1;
function q4(e) {
  return gD || (console.warn(["MUI: createStyles from @mui/material/styles is deprecated.", "Please use @mui/styles/createStyles"].join(`
`)), gD = !0), e;
}
function bD(e) {
  return String(parseFloat(e)).length === String(e).length;
}
function Gw(e) {
  return String(e).match(/[\d.\-+]*\s*(.*)/)[1] || "";
}
function zl(e) {
  return parseFloat(e);
}
function G4(e) {
  return (n, a) => {
    const s = Gw(n);
    if (s === a)
      return n;
    let u = zl(n);
    s !== "px" && (s === "em" || s === "rem") && (u = zl(n) * zl(e));
    let d = u;
    if (a !== "px")
      if (a === "em")
        d = u / zl(e);
      else if (a === "rem")
        d = u / zl(e);
      else
        return n;
    return parseFloat(d.toFixed(5)) + a;
  };
}
function K4({
  size: e,
  grid: n
}) {
  const a = e - e % n, s = a + n;
  return e - a < s - e ? a : s;
}
function Q4({
  lineHeight: e,
  pixels: n,
  htmlFontSize: a
}) {
  return n / (e * a);
}
function X4({
  cssProperty: e,
  min: n,
  max: a,
  unit: s = "rem",
  breakpoints: u = [600, 900, 1200],
  transform: d = null
}) {
  const p = {
    [e]: `${n}${s}`
  }, h = (a - n) / u[u.length - 1];
  return u.forEach((g) => {
    let b = n + h * g;
    d !== null && (b = d(b)), p[`@media (min-width:${g}px)`] = {
      [e]: `${Math.round(b * 1e4) / 1e4}${s}`
    };
  }), p;
}
function Z4(e, n = {}) {
  const {
    breakpoints: a = ["sm", "md", "lg"],
    disableAlign: s = !1,
    factor: u = 2,
    variants: d = ["h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "caption", "button", "overline"]
  } = n, p = y({}, e);
  p.typography = y({}, p.typography);
  const h = p.typography, g = G4(h.htmlFontSize), b = a.map((x) => p.breakpoints.values[x]);
  return d.forEach((x) => {
    const S = h[x], E = parseFloat(g(S.fontSize, "rem"));
    if (E <= 1)
      return;
    const R = E, $ = 1 + (R - 1) / u;
    let {
      lineHeight: M
    } = S;
    if (!bD(M) && !s)
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported non-unitless line height with grid alignment.
Use unitless line heights instead.` : qs(6));
    bD(M) || (M = parseFloat(g(M, "rem")) / parseFloat(E));
    let O = null;
    s || (O = (N) => K4({
      size: N,
      grid: Q4({
        pixels: 4,
        lineHeight: M,
        htmlFontSize: h.htmlFontSize
      })
    })), h[x] = y({}, S, X4({
      cssProperty: "fontSize",
      min: $,
      max: R,
      unit: "rem",
      breakpoints: b,
      transform: O
    }));
  }), p;
}
const J4 = rg(), WT = J4;
function En() {
  const e = Gf(WT);
  return process.env.NODE_ENV !== "production" && k.useDebugValue(e), e[ru] || e;
}
function Ie({
  props: e,
  name: n
}) {
  return Cg({
    props: e,
    name: n,
    defaultTheme: WT,
    themeId: ru
  });
}
var wg = {}, Qk = { exports: {} }, yD;
function e5() {
  return yD || (yD = 1, function(e) {
    function n(a, s) {
      if (a == null)
        return {};
      var u = {}, d = Object.keys(a), p, h;
      for (h = 0; h < d.length; h++)
        p = d[h], !(s.indexOf(p) >= 0) && (u[p] = a[p]);
      return u;
    }
    e.exports = n, e.exports.__esModule = !0, e.exports.default = e.exports;
  }(Qk)), Qk.exports;
}
const ON = /* @__PURE__ */ Kf(xU), t5 = /* @__PURE__ */ Kf(rH), n5 = /* @__PURE__ */ Kf(aH), o5 = /* @__PURE__ */ Kf(dH), r5 = /* @__PURE__ */ Kf(iH), a5 = /* @__PURE__ */ Kf(sH);
var Jf = kU;
Object.defineProperty(wg, "__esModule", {
  value: !0
});
var i5 = wg.default = C5, PN = wg.shouldForwardProp = uT;
wg.systemDefaultTheme = void 0;
var bi = Jf(SU()), Cw = Jf(e5()), CD = h5(ON), s5 = t5, l5 = Jf(n5), c5 = Jf(o5), u5 = Jf(r5), d5 = Jf(a5);
const p5 = ["ownerState"], f5 = ["variants"], m5 = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"];
function DN(e) {
  if (typeof WeakMap != "function")
    return null;
  var n = /* @__PURE__ */ new WeakMap(), a = /* @__PURE__ */ new WeakMap();
  return (DN = function(s) {
    return s ? a : n;
  })(e);
}
function h5(e, n) {
  if (!n && e && e.__esModule)
    return e;
  if (e === null || typeof e != "object" && typeof e != "function")
    return { default: e };
  var a = DN(n);
  if (a && a.has(e))
    return a.get(e);
  var s = { __proto__: null }, u = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var d in e)
    if (d !== "default" && Object.prototype.hasOwnProperty.call(e, d)) {
      var p = u ? Object.getOwnPropertyDescriptor(e, d) : null;
      p && (p.get || p.set) ? Object.defineProperty(s, d, p) : s[d] = e[d];
    }
  return s.default = e, a && a.set(e, s), s;
}
function v5(e) {
  return Object.keys(e).length === 0;
}
function g5(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function uT(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const b5 = wg.systemDefaultTheme = (0, u5.default)(), TD = (e) => e && e.charAt(0).toLowerCase() + e.slice(1);
function FC({
  defaultTheme: e,
  theme: n,
  themeId: a
}) {
  return v5(n) ? e : n[a] || n;
}
function y5(e) {
  return e ? (n, a) => a[e] : null;
}
function dT(e, n) {
  let {
    ownerState: a
  } = n, s = (0, Cw.default)(n, p5);
  const u = typeof e == "function" ? e((0, bi.default)({
    ownerState: a
  }, s)) : e;
  if (Array.isArray(u))
    return u.flatMap((d) => dT(d, (0, bi.default)({
      ownerState: a
    }, s)));
  if (u && typeof u == "object" && Array.isArray(u.variants)) {
    const {
      variants: d = []
    } = u;
    let h = (0, Cw.default)(u, f5);
    return d.forEach((g) => {
      let b = !0;
      typeof g.props == "function" ? b = g.props((0, bi.default)({
        ownerState: a
      }, s, a)) : Object.keys(g.props).forEach((x) => {
        (a == null ? void 0 : a[x]) !== g.props[x] && s[x] !== g.props[x] && (b = !1);
      }), b && (Array.isArray(h) || (h = [h]), h.push(typeof g.style == "function" ? g.style((0, bi.default)({
        ownerState: a
      }, s, a)) : g.style));
    }), h;
  }
  return u;
}
function C5(e = {}) {
  const {
    themeId: n,
    defaultTheme: a = b5,
    rootShouldForwardProp: s = uT,
    slotShouldForwardProp: u = uT
  } = e, d = (p) => (0, d5.default)((0, bi.default)({}, p, {
    theme: FC((0, bi.default)({}, p, {
      defaultTheme: a,
      themeId: n
    }))
  }));
  return d.__mui_systemSx = !0, (p, h = {}) => {
    (0, CD.internal_processStyles)(p, (B) => B.filter((P) => !(P != null && P.__mui_systemSx)));
    const {
      name: g,
      slot: b,
      skipVariantsResolver: x,
      skipSx: S,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: E = y5(TD(b))
    } = h, R = (0, Cw.default)(h, m5), $ = x !== void 0 ? x : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      b && b !== "Root" && b !== "root" || !1
    ), M = S || !1;
    let O;
    process.env.NODE_ENV !== "production" && g && (O = `${g}-${TD(b || "Root")}`);
    let N = uT;
    b === "Root" || b === "root" ? N = s : b ? N = u : g5(p) && (N = void 0);
    const V = (0, CD.default)(p, (0, bi.default)({
      shouldForwardProp: N,
      label: O
    }, R)), I = (B) => typeof B == "function" && B.__emotion_real !== B || (0, s5.isPlainObject)(B) ? (P) => dT(B, (0, bi.default)({}, P, {
      theme: FC({
        theme: P.theme,
        defaultTheme: a,
        themeId: n
      })
    })) : B, z = (B, ...P) => {
      let F = I(B);
      const H = P ? P.map(I) : [];
      g && E && H.push((Y) => {
        const te = FC((0, bi.default)({}, Y, {
          defaultTheme: a,
          themeId: n
        }));
        if (!te.components || !te.components[g] || !te.components[g].styleOverrides)
          return null;
        const Z = te.components[g].styleOverrides, q = {};
        return Object.entries(Z).forEach(([X, oe]) => {
          q[X] = dT(oe, (0, bi.default)({}, Y, {
            theme: te
          }));
        }), E(Y, q);
      }), g && !$ && H.push((Y) => {
        var te;
        const Z = FC((0, bi.default)({}, Y, {
          defaultTheme: a,
          themeId: n
        })), q = Z == null || (te = Z.components) == null || (te = te[g]) == null ? void 0 : te.variants;
        return dT({
          variants: q
        }, (0, bi.default)({}, Y, {
          theme: Z
        }));
      }), M || H.push(d);
      const U = H.length - P.length;
      if (Array.isArray(B) && U > 0) {
        const Y = new Array(U).fill("");
        F = [...B, ...Y], F.raw = [...B.raw, ...Y];
      }
      const Q = V(F, ...H);
      if (process.env.NODE_ENV !== "production") {
        let Y;
        g && (Y = `${g}${(0, l5.default)(b || "")}`), Y === void 0 && (Y = `Styled(${(0, c5.default)(p)})`), Q.displayName = Y;
      }
      return p.muiName && (Q.muiName = p.muiName), Q;
    };
    return V.withConfig && (z.withConfig = V.withConfig), z;
  };
}
const Vo = (e) => PN(e) && e !== "classes", Rg = PN, T5 = i5({
  themeId: ru,
  defaultTheme: WT,
  rootShouldForwardProp: Vo
}), J = T5, x5 = ["theme"];
function MN(e) {
  let {
    theme: n
  } = e, a = le(e, x5);
  const s = n[ru];
  return /* @__PURE__ */ _(ig, y({}, a, {
    themeId: s ? ru : void 0,
    theme: s || n
  }));
}
process.env.NODE_ENV !== "production" && (MN.propTypes = {
  /**
   * Your component tree.
   */
  children: t.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: t.oneOfType([t.object, t.func]).isRequired
});
function S5() {
  throw new Error(process.env.NODE_ENV !== "production" ? `MUI: makeStyles is no longer exported from @mui/material/styles.
You have to import it from @mui/styles.
See https://mui.com/r/migration-v4/#mui-material-styles for more details.` : qs(14));
}
function k5() {
  throw new Error(process.env.NODE_ENV !== "production" ? `MUI: withStyles is no longer exported from @mui/material/styles.
You have to import it from @mui/styles.
See https://mui.com/r/migration-v4/#mui-material-styles for more details.` : qs(15));
}
function w5() {
  throw new Error(process.env.NODE_ENV !== "production" ? `MUI: withTheme is no longer exported from @mui/material/styles.
You have to import it from @mui/styles.
See https://mui.com/r/migration-v4/#mui-material-styles for more details.` : qs(16));
}
function $N(e) {
  var n;
  return !!e[0].match(/(cssVarPrefix|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((n = e[1]) != null && n.match(/(mode|contrastThreshold|tonalOffset)/));
}
const R5 = (e) => {
  let n;
  return e < 1 ? n = 5.11916 * e ** 2 : n = 4.5 * Math.log(e + 1) + 2, (n / 100).toFixed(2);
}, ST = R5, E5 = ["colorSchemes", "cssVarPrefix", "shouldSkipGeneratingVar"], O5 = ["palette"], P5 = [...Array(25)].map((e, n) => {
  if (n === 0)
    return;
  const a = ST(n);
  return `linear-gradient(rgba(255 255 255 / ${a}), rgba(255 255 255 / ${a}))`;
});
function D5(e, n) {
  n.forEach((a) => {
    e[a] || (e[a] = {});
  });
}
function Je(e, n, a) {
  !e[n] && a && (e[n] = a);
}
function zv(e) {
  return !e || !e.startsWith("hsl") ? e : wU(e);
}
function qc(e, n) {
  `${n}Channel` in e || (e[`${n}Channel`] = Bv(zv(e[n]), `MUI: Can't create \`palette.${n}Channel\` because \`palette.${n}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${n}Channel\` as a string (in rgb format, e.g. "12 12 12") or undefined if you want to remove the channel token.`));
}
const Fs = (e) => {
  try {
    return e();
  } catch {
  }
}, M5 = (e = "mui") => i4(e);
function NN(e = {}, ...n) {
  var a, s, u, d, p, h;
  const {
    colorSchemes: g = {},
    cssVarPrefix: b = "mui",
    shouldSkipGeneratingVar: x = $N
  } = e, S = le(e, E5), E = M5(b), R = rg(y({}, S, g.light && {
    palette: (a = g.light) == null ? void 0 : a.palette
  })), {
    palette: $
  } = R, M = le(R, O5), {
    palette: O
  } = rg({
    palette: y({
      mode: "dark"
    }, (s = g.dark) == null ? void 0 : s.palette)
  });
  let N = y({}, M, {
    cssVarPrefix: b,
    getCssVar: E,
    colorSchemes: y({}, g, {
      light: y({}, g.light, {
        palette: $,
        opacity: y({
          inputPlaceholder: 0.42,
          inputUnderline: 0.42,
          switchTrackDisabled: 0.12,
          switchTrack: 0.38
        }, (u = g.light) == null ? void 0 : u.opacity),
        overlays: ((d = g.light) == null ? void 0 : d.overlays) || []
      }),
      dark: y({}, g.dark, {
        palette: O,
        opacity: y({
          inputPlaceholder: 0.5,
          inputUnderline: 0.7,
          switchTrackDisabled: 0.2,
          switchTrack: 0.3
        }, (p = g.dark) == null ? void 0 : p.opacity),
        overlays: ((h = g.dark) == null ? void 0 : h.overlays) || P5
      })
    })
  });
  Object.keys(N.colorSchemes).forEach((B) => {
    const P = N.colorSchemes[B].palette, F = (H) => {
      const U = H.split("-"), Q = U[1], Y = U[2];
      return E(H, P[Q][Y]);
    };
    if (B === "light" ? (Je(P.common, "background", "#fff"), Je(P.common, "onBackground", "#000")) : (Je(P.common, "background", "#000"), Je(P.common, "onBackground", "#fff")), D5(P, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), B === "light") {
      Je(P.Alert, "errorColor", Jn(P.error.light, 0.6)), Je(P.Alert, "infoColor", Jn(P.info.light, 0.6)), Je(P.Alert, "successColor", Jn(P.success.light, 0.6)), Je(P.Alert, "warningColor", Jn(P.warning.light, 0.6)), Je(P.Alert, "errorFilledBg", F("palette-error-main")), Je(P.Alert, "infoFilledBg", F("palette-info-main")), Je(P.Alert, "successFilledBg", F("palette-success-main")), Je(P.Alert, "warningFilledBg", F("palette-warning-main")), Je(P.Alert, "errorFilledColor", Fs(() => $.getContrastText(P.error.main))), Je(P.Alert, "infoFilledColor", Fs(() => $.getContrastText(P.info.main))), Je(P.Alert, "successFilledColor", Fs(() => $.getContrastText(P.success.main))), Je(P.Alert, "warningFilledColor", Fs(() => $.getContrastText(P.warning.main))), Je(P.Alert, "errorStandardBg", eo(P.error.light, 0.9)), Je(P.Alert, "infoStandardBg", eo(P.info.light, 0.9)), Je(P.Alert, "successStandardBg", eo(P.success.light, 0.9)), Je(P.Alert, "warningStandardBg", eo(P.warning.light, 0.9)), Je(P.Alert, "errorIconColor", F("palette-error-main")), Je(P.Alert, "infoIconColor", F("palette-info-main")), Je(P.Alert, "successIconColor", F("palette-success-main")), Je(P.Alert, "warningIconColor", F("palette-warning-main")), Je(P.AppBar, "defaultBg", F("palette-grey-100")), Je(P.Avatar, "defaultBg", F("palette-grey-400")), Je(P.Button, "inheritContainedBg", F("palette-grey-300")), Je(P.Button, "inheritContainedHoverBg", F("palette-grey-A100")), Je(P.Chip, "defaultBorder", F("palette-grey-400")), Je(P.Chip, "defaultAvatarColor", F("palette-grey-700")), Je(P.Chip, "defaultIconColor", F("palette-grey-700")), Je(P.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), Je(P.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), Je(P.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), Je(P.LinearProgress, "primaryBg", eo(P.primary.main, 0.62)), Je(P.LinearProgress, "secondaryBg", eo(P.secondary.main, 0.62)), Je(P.LinearProgress, "errorBg", eo(P.error.main, 0.62)), Je(P.LinearProgress, "infoBg", eo(P.info.main, 0.62)), Je(P.LinearProgress, "successBg", eo(P.success.main, 0.62)), Je(P.LinearProgress, "warningBg", eo(P.warning.main, 0.62)), Je(P.Skeleton, "bg", `rgba(${F("palette-text-primaryChannel")} / 0.11)`), Je(P.Slider, "primaryTrack", eo(P.primary.main, 0.62)), Je(P.Slider, "secondaryTrack", eo(P.secondary.main, 0.62)), Je(P.Slider, "errorTrack", eo(P.error.main, 0.62)), Je(P.Slider, "infoTrack", eo(P.info.main, 0.62)), Je(P.Slider, "successTrack", eo(P.success.main, 0.62)), Je(P.Slider, "warningTrack", eo(P.warning.main, 0.62));
      const H = VC(P.background.default, 0.8);
      Je(P.SnackbarContent, "bg", H), Je(P.SnackbarContent, "color", Fs(() => $.getContrastText(H))), Je(P.SpeedDialAction, "fabHoverBg", VC(P.background.paper, 0.15)), Je(P.StepConnector, "border", F("palette-grey-400")), Je(P.StepContent, "border", F("palette-grey-400")), Je(P.Switch, "defaultColor", F("palette-common-white")), Je(P.Switch, "defaultDisabledColor", F("palette-grey-100")), Je(P.Switch, "primaryDisabledColor", eo(P.primary.main, 0.62)), Je(P.Switch, "secondaryDisabledColor", eo(P.secondary.main, 0.62)), Je(P.Switch, "errorDisabledColor", eo(P.error.main, 0.62)), Je(P.Switch, "infoDisabledColor", eo(P.info.main, 0.62)), Je(P.Switch, "successDisabledColor", eo(P.success.main, 0.62)), Je(P.Switch, "warningDisabledColor", eo(P.warning.main, 0.62)), Je(P.TableCell, "border", eo(BC(P.divider, 1), 0.88)), Je(P.Tooltip, "bg", BC(P.grey[700], 0.92));
    } else {
      Je(P.Alert, "errorColor", eo(P.error.light, 0.6)), Je(P.Alert, "infoColor", eo(P.info.light, 0.6)), Je(P.Alert, "successColor", eo(P.success.light, 0.6)), Je(P.Alert, "warningColor", eo(P.warning.light, 0.6)), Je(P.Alert, "errorFilledBg", F("palette-error-dark")), Je(P.Alert, "infoFilledBg", F("palette-info-dark")), Je(P.Alert, "successFilledBg", F("palette-success-dark")), Je(P.Alert, "warningFilledBg", F("palette-warning-dark")), Je(P.Alert, "errorFilledColor", Fs(() => O.getContrastText(P.error.dark))), Je(P.Alert, "infoFilledColor", Fs(() => O.getContrastText(P.info.dark))), Je(P.Alert, "successFilledColor", Fs(() => O.getContrastText(P.success.dark))), Je(P.Alert, "warningFilledColor", Fs(() => O.getContrastText(P.warning.dark))), Je(P.Alert, "errorStandardBg", Jn(P.error.light, 0.9)), Je(P.Alert, "infoStandardBg", Jn(P.info.light, 0.9)), Je(P.Alert, "successStandardBg", Jn(P.success.light, 0.9)), Je(P.Alert, "warningStandardBg", Jn(P.warning.light, 0.9)), Je(P.Alert, "errorIconColor", F("palette-error-main")), Je(P.Alert, "infoIconColor", F("palette-info-main")), Je(P.Alert, "successIconColor", F("palette-success-main")), Je(P.Alert, "warningIconColor", F("palette-warning-main")), Je(P.AppBar, "defaultBg", F("palette-grey-900")), Je(P.AppBar, "darkBg", F("palette-background-paper")), Je(P.AppBar, "darkColor", F("palette-text-primary")), Je(P.Avatar, "defaultBg", F("palette-grey-600")), Je(P.Button, "inheritContainedBg", F("palette-grey-800")), Je(P.Button, "inheritContainedHoverBg", F("palette-grey-700")), Je(P.Chip, "defaultBorder", F("palette-grey-700")), Je(P.Chip, "defaultAvatarColor", F("palette-grey-300")), Je(P.Chip, "defaultIconColor", F("palette-grey-300")), Je(P.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), Je(P.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), Je(P.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), Je(P.LinearProgress, "primaryBg", Jn(P.primary.main, 0.5)), Je(P.LinearProgress, "secondaryBg", Jn(P.secondary.main, 0.5)), Je(P.LinearProgress, "errorBg", Jn(P.error.main, 0.5)), Je(P.LinearProgress, "infoBg", Jn(P.info.main, 0.5)), Je(P.LinearProgress, "successBg", Jn(P.success.main, 0.5)), Je(P.LinearProgress, "warningBg", Jn(P.warning.main, 0.5)), Je(P.Skeleton, "bg", `rgba(${F("palette-text-primaryChannel")} / 0.13)`), Je(P.Slider, "primaryTrack", Jn(P.primary.main, 0.5)), Je(P.Slider, "secondaryTrack", Jn(P.secondary.main, 0.5)), Je(P.Slider, "errorTrack", Jn(P.error.main, 0.5)), Je(P.Slider, "infoTrack", Jn(P.info.main, 0.5)), Je(P.Slider, "successTrack", Jn(P.success.main, 0.5)), Je(P.Slider, "warningTrack", Jn(P.warning.main, 0.5));
      const H = VC(P.background.default, 0.98);
      Je(P.SnackbarContent, "bg", H), Je(P.SnackbarContent, "color", Fs(() => O.getContrastText(H))), Je(P.SpeedDialAction, "fabHoverBg", VC(P.background.paper, 0.15)), Je(P.StepConnector, "border", F("palette-grey-600")), Je(P.StepContent, "border", F("palette-grey-600")), Je(P.Switch, "defaultColor", F("palette-grey-300")), Je(P.Switch, "defaultDisabledColor", F("palette-grey-600")), Je(P.Switch, "primaryDisabledColor", Jn(P.primary.main, 0.55)), Je(P.Switch, "secondaryDisabledColor", Jn(P.secondary.main, 0.55)), Je(P.Switch, "errorDisabledColor", Jn(P.error.main, 0.55)), Je(P.Switch, "infoDisabledColor", Jn(P.info.main, 0.55)), Je(P.Switch, "successDisabledColor", Jn(P.success.main, 0.55)), Je(P.Switch, "warningDisabledColor", Jn(P.warning.main, 0.55)), Je(P.TableCell, "border", Jn(BC(P.divider, 1), 0.68)), Je(P.Tooltip, "bg", BC(P.grey[700], 0.92));
    }
    qc(P.background, "default"), qc(P.common, "background"), qc(P.common, "onBackground"), qc(P, "divider"), Object.keys(P).forEach((H) => {
      const U = P[H];
      U && typeof U == "object" && (U.main && Je(P[H], "mainChannel", Bv(zv(U.main))), U.light && Je(P[H], "lightChannel", Bv(zv(U.light))), U.dark && Je(P[H], "darkChannel", Bv(zv(U.dark))), U.contrastText && Je(P[H], "contrastTextChannel", Bv(zv(U.contrastText))), H === "text" && (qc(P[H], "primary"), qc(P[H], "secondary")), H === "action" && (U.active && qc(P[H], "active"), U.selected && qc(P[H], "selected")));
    });
  }), N = n.reduce((B, P) => ns(B, P), N);
  const V = {
    prefix: b,
    shouldSkipGeneratingVar: x
  }, {
    vars: I,
    generateCssVars: z
  } = p4(N, V);
  return N.vars = I, N.generateCssVars = z, N.shouldSkipGeneratingVar = x, N.unstable_sxConfig = y({}, oN, S == null ? void 0 : S.unstable_sxConfig), N.unstable_sx = function(P) {
    return BT({
      sx: P,
      theme: this
    });
  }, N;
}
const $5 = (e) => [...[...Array(24)].map((n, a) => `--${e ? `${e}-` : ""}overlays-${a + 1}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], LN = $5, N5 = NN(), {
  CssVarsProvider: L5,
  useColorScheme: I5,
  getInitColorSchemeScript: A5
} = a4({
  themeId: ru,
  theme: N5,
  attribute: "data-mui-color-scheme",
  modeStorageKey: "mui-mode",
  colorSchemeStorageKey: "mui-color-scheme",
  defaultColorScheme: {
    light: "light",
    dark: "dark"
  },
  resolveTheme: (e) => {
    const n = y({}, e, {
      typography: aN(e.palette, e.typography)
    });
    return n.unstable_sx = function(s) {
      return BT({
        sx: s,
        theme: this
      });
    }, n;
  },
  excludeVariablesFromRoot: LN
});
function _5() {
  throw new Error(process.env.NODE_ENV !== "production" ? "MUI: The `experimental_sx` has been moved to `theme.unstable_sx`.For more details, see https://github.com/mui/material-ui/pull/35150." : qs(20));
}
const vue = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Experimental_CssVarsProvider: L5,
  StyledEngineProvider: RU,
  THEME_ID: ru,
  ThemeProvider: MN,
  adaptV4Theme: W4,
  alpha: Kr,
  createMuiTheme: EU,
  createStyles: q4,
  createTheme: rg,
  css: au,
  darken: yT,
  decomposeColor: jl,
  duration: iN,
  easing: OU,
  emphasize: EH,
  experimentalStyled: J,
  experimental_extendTheme: NN,
  experimental_sx: _5,
  getContrastRatio: RH,
  getInitColorSchemeScript: A5,
  getLuminance: bT,
  getOverlayAlpha: ST,
  hexToRgb: pN,
  hslToRgb: fN,
  keyframes: rs,
  lighten: CT,
  makeStyles: S5,
  private_createMixins: PU,
  private_createTypography: aN,
  private_excludeVariablesFromRoot: LN,
  recomposeColor: xg,
  responsiveFontSizes: Z4,
  rgbToHex: wH,
  shouldSkipGeneratingVar: $N,
  styled: J,
  unstable_createMuiStrictModeTheme: Y4,
  unstable_getUnit: Gw,
  unstable_toUnitless: zl,
  useColorScheme: I5,
  useTheme: En,
  useThemeProps: Ie,
  withStyles: k5,
  withTheme: w5
}, Symbol.toStringTag, { value: "Module" }));
function V5(e) {
  return We("MuiSvgIcon", e);
}
const B5 = Ye("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]), gue = B5, z5 = ["children", "className", "color", "component", "fontSize", "htmlColor", "inheritViewBox", "titleAccess", "viewBox"], F5 = (e) => {
  const {
    color: n,
    fontSize: a,
    classes: s
  } = e, u = {
    root: ["root", n !== "inherit" && `color${pe(n)}`, `fontSize${pe(a)}`]
  };
  return He(u, V5, s);
}, j5 = J("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.color !== "inherit" && n[`color${pe(a.color)}`], n[`fontSize${pe(a.fontSize)}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => {
  var a, s, u, d, p, h, g, b, x, S, E, R, $;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    // the <svg> will define the property that has `currentColor`
    // e.g. heroicons uses fill="none" and stroke="currentColor"
    fill: n.hasSvgAsChild ? void 0 : "currentColor",
    flexShrink: 0,
    transition: (a = e.transitions) == null || (s = a.create) == null ? void 0 : s.call(a, "fill", {
      duration: (u = e.transitions) == null || (u = u.duration) == null ? void 0 : u.shorter
    }),
    fontSize: {
      inherit: "inherit",
      small: ((d = e.typography) == null || (p = d.pxToRem) == null ? void 0 : p.call(d, 20)) || "1.25rem",
      medium: ((h = e.typography) == null || (g = h.pxToRem) == null ? void 0 : g.call(h, 24)) || "1.5rem",
      large: ((b = e.typography) == null || (x = b.pxToRem) == null ? void 0 : x.call(b, 35)) || "2.1875rem"
    }[n.fontSize],
    // TODO v5 deprecate, v6 remove for sx
    color: (S = (E = (e.vars || e).palette) == null || (E = E[n.color]) == null ? void 0 : E.main) != null ? S : {
      action: (R = (e.vars || e).palette) == null || (R = R.action) == null ? void 0 : R.active,
      disabled: ($ = (e.vars || e).palette) == null || ($ = $.action) == null ? void 0 : $.disabled,
      inherit: void 0
    }[n.color]
  };
}), Kw = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiSvgIcon"
  }), {
    children: u,
    className: d,
    color: p = "inherit",
    component: h = "svg",
    fontSize: g = "medium",
    htmlColor: b,
    inheritViewBox: x = !1,
    titleAccess: S,
    viewBox: E = "0 0 24 24"
  } = s, R = le(s, z5), $ = /* @__PURE__ */ k.isValidElement(u) && u.type === "svg", M = y({}, s, {
    color: p,
    component: h,
    fontSize: g,
    instanceFontSize: n.fontSize,
    inheritViewBox: x,
    viewBox: E,
    hasSvgAsChild: $
  }), O = {};
  x || (O.viewBox = E);
  const N = F5(M);
  return /* @__PURE__ */ st(j5, y({
    as: h,
    className: fe(N.root, d),
    focusable: "false",
    color: b,
    "aria-hidden": S ? void 0 : !0,
    role: S ? "img" : void 0,
    ref: a
  }, O, R, $ && u.props, {
    ownerState: M,
    children: [$ ? u.props.children : u, S ? /* @__PURE__ */ _("title", {
      children: S
    }) : null]
  }));
});
process.env.NODE_ENV !== "production" && (Kw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: t.oneOfType([t.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: t.oneOfType([t.oneOf(["inherit", "large", "medium", "small"]), t.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: t.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: t.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: t.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: t.string
});
Kw.muiName = "SvgIcon";
const Tw = Kw;
function Tn(e, n) {
  function a(s, u) {
    return /* @__PURE__ */ _(Tw, y({
      "data-testid": `${n}Icon`,
      ref: u
    }, s, {
      children: e
    }));
  }
  return process.env.NODE_ENV !== "production" && (a.displayName = `${n}Icon`), a.muiName = Tw.muiName, /* @__PURE__ */ k.memo(/* @__PURE__ */ k.forwardRef(a));
}
const U5 = {
  configure: (e) => {
    process.env.NODE_ENV !== "production" && console.warn(["MUI: `ClassNameGenerator` import from `@mui/material/utils` is outdated and might cause unexpected issues.", "", "You should use `import { unstable_ClassNameGenerator } from '@mui/material/className'` instead", "", "The detail of the issue: https://github.com/mui/material-ui/issues/30011#issuecomment-1024993401", "", "The updated documentation: https://mui.com/guides/classname-generator/"].join(`
`)), DU.configure(e);
  }
}, bue = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  capitalize: pe,
  createChainedFunction: TT,
  createSvgIcon: Tn,
  debounce: Qf,
  deprecatedPropType: NH,
  isMuiElement: Hs,
  ownerDocument: $n,
  ownerWindow: Qr,
  requirePropFactory: vN,
  setRef: ag,
  unstable_ClassNameGenerator: U5,
  unstable_useEnhancedEffect: ro,
  unstable_useId: pa,
  unsupportedProp: UT,
  useControlled: Eo,
  useEventCallback: kt,
  useForkRef: cn,
  useIsFocusVisible: Xf
}, Symbol.toStringTag, { value: "Module" }));
var xw = { exports: {} }, zn = {};
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var xD;
function H5() {
  if (xD)
    return zn;
  xD = 1;
  var e = Symbol.for("react.element"), n = Symbol.for("react.portal"), a = Symbol.for("react.fragment"), s = Symbol.for("react.strict_mode"), u = Symbol.for("react.profiler"), d = Symbol.for("react.provider"), p = Symbol.for("react.context"), h = Symbol.for("react.server_context"), g = Symbol.for("react.forward_ref"), b = Symbol.for("react.suspense"), x = Symbol.for("react.suspense_list"), S = Symbol.for("react.memo"), E = Symbol.for("react.lazy"), R = Symbol.for("react.offscreen"), $;
  $ = Symbol.for("react.module.reference");
  function M(O) {
    if (typeof O == "object" && O !== null) {
      var N = O.$$typeof;
      switch (N) {
        case e:
          switch (O = O.type, O) {
            case a:
            case u:
            case s:
            case b:
            case x:
              return O;
            default:
              switch (O = O && O.$$typeof, O) {
                case h:
                case p:
                case g:
                case E:
                case S:
                case d:
                  return O;
                default:
                  return N;
              }
          }
        case n:
          return N;
      }
    }
  }
  return zn.ContextConsumer = p, zn.ContextProvider = d, zn.Element = e, zn.ForwardRef = g, zn.Fragment = a, zn.Lazy = E, zn.Memo = S, zn.Portal = n, zn.Profiler = u, zn.StrictMode = s, zn.Suspense = b, zn.SuspenseList = x, zn.isAsyncMode = function() {
    return !1;
  }, zn.isConcurrentMode = function() {
    return !1;
  }, zn.isContextConsumer = function(O) {
    return M(O) === p;
  }, zn.isContextProvider = function(O) {
    return M(O) === d;
  }, zn.isElement = function(O) {
    return typeof O == "object" && O !== null && O.$$typeof === e;
  }, zn.isForwardRef = function(O) {
    return M(O) === g;
  }, zn.isFragment = function(O) {
    return M(O) === a;
  }, zn.isLazy = function(O) {
    return M(O) === E;
  }, zn.isMemo = function(O) {
    return M(O) === S;
  }, zn.isPortal = function(O) {
    return M(O) === n;
  }, zn.isProfiler = function(O) {
    return M(O) === u;
  }, zn.isStrictMode = function(O) {
    return M(O) === s;
  }, zn.isSuspense = function(O) {
    return M(O) === b;
  }, zn.isSuspenseList = function(O) {
    return M(O) === x;
  }, zn.isValidElementType = function(O) {
    return typeof O == "string" || typeof O == "function" || O === a || O === u || O === s || O === b || O === x || O === R || typeof O == "object" && O !== null && (O.$$typeof === E || O.$$typeof === S || O.$$typeof === d || O.$$typeof === p || O.$$typeof === g || O.$$typeof === $ || O.getModuleId !== void 0);
  }, zn.typeOf = M, zn;
}
var Fn = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var SD;
function W5() {
  return SD || (SD = 1, process.env.NODE_ENV !== "production" && function() {
    var e = Symbol.for("react.element"), n = Symbol.for("react.portal"), a = Symbol.for("react.fragment"), s = Symbol.for("react.strict_mode"), u = Symbol.for("react.profiler"), d = Symbol.for("react.provider"), p = Symbol.for("react.context"), h = Symbol.for("react.server_context"), g = Symbol.for("react.forward_ref"), b = Symbol.for("react.suspense"), x = Symbol.for("react.suspense_list"), S = Symbol.for("react.memo"), E = Symbol.for("react.lazy"), R = Symbol.for("react.offscreen"), $ = !1, M = !1, O = !1, N = !1, V = !1, I;
    I = Symbol.for("react.module.reference");
    function z(ae) {
      return !!(typeof ae == "string" || typeof ae == "function" || ae === a || ae === u || V || ae === s || ae === b || ae === x || N || ae === R || $ || M || O || typeof ae == "object" && ae !== null && (ae.$$typeof === E || ae.$$typeof === S || ae.$$typeof === d || ae.$$typeof === p || ae.$$typeof === g || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      ae.$$typeof === I || ae.getModuleId !== void 0));
    }
    function B(ae) {
      if (typeof ae == "object" && ae !== null) {
        var Pe = ae.$$typeof;
        switch (Pe) {
          case e:
            var ke = ae.type;
            switch (ke) {
              case a:
              case u:
              case s:
              case b:
              case x:
                return ke;
              default:
                var pt = ke && ke.$$typeof;
                switch (pt) {
                  case h:
                  case p:
                  case g:
                  case E:
                  case S:
                  case d:
                    return pt;
                  default:
                    return Pe;
                }
            }
          case n:
            return Pe;
        }
      }
    }
    var P = p, F = d, H = e, U = g, Q = a, Y = E, te = S, Z = n, q = u, X = s, oe = b, ie = x, K = !1, ne = !1;
    function se(ae) {
      return K || (K = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function ze(ae) {
      return ne || (ne = !0, console.warn("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function Ue(ae) {
      return B(ae) === p;
    }
    function Oe(ae) {
      return B(ae) === d;
    }
    function ue(ae) {
      return typeof ae == "object" && ae !== null && ae.$$typeof === e;
    }
    function xe(ae) {
      return B(ae) === g;
    }
    function me(ae) {
      return B(ae) === a;
    }
    function Se(ae) {
      return B(ae) === E;
    }
    function ce(ae) {
      return B(ae) === S;
    }
    function Le(ae) {
      return B(ae) === n;
    }
    function Ze(ae) {
      return B(ae) === u;
    }
    function Ee(ae) {
      return B(ae) === s;
    }
    function Ae(ae) {
      return B(ae) === b;
    }
    function Ce(ae) {
      return B(ae) === x;
    }
    Fn.ContextConsumer = P, Fn.ContextProvider = F, Fn.Element = H, Fn.ForwardRef = U, Fn.Fragment = Q, Fn.Lazy = Y, Fn.Memo = te, Fn.Portal = Z, Fn.Profiler = q, Fn.StrictMode = X, Fn.Suspense = oe, Fn.SuspenseList = ie, Fn.isAsyncMode = se, Fn.isConcurrentMode = ze, Fn.isContextConsumer = Ue, Fn.isContextProvider = Oe, Fn.isElement = ue, Fn.isForwardRef = xe, Fn.isFragment = me, Fn.isLazy = Se, Fn.isMemo = ce, Fn.isPortal = Le, Fn.isProfiler = Ze, Fn.isStrictMode = Ee, Fn.isSuspense = Ae, Fn.isSuspenseList = Ce, Fn.isValidElementType = z, Fn.typeOf = B;
  }()), Fn;
}
process.env.NODE_ENV === "production" ? xw.exports = H5() : xw.exports = W5();
var as = xw.exports;
function Sw(e, n) {
  return Sw = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(s, u) {
    return s.__proto__ = u, s;
  }, Sw(e, n);
}
function Qw(e, n) {
  e.prototype = Object.create(n.prototype), e.prototype.constructor = e, Sw(e, n);
}
function Y5(e, n) {
  return e.classList ? !!n && e.classList.contains(n) : (" " + (e.className.baseVal || e.className) + " ").indexOf(" " + n + " ") !== -1;
}
function q5(e, n) {
  e.classList ? e.classList.add(n) : Y5(e, n) || (typeof e.className == "string" ? e.className = e.className + " " + n : e.setAttribute("class", (e.className && e.className.baseVal || "") + " " + n));
}
function kD(e, n) {
  return e.replace(new RegExp("(^|\\s)" + n + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
}
function G5(e, n) {
  e.classList ? e.classList.remove(n) : typeof e.className == "string" ? e.className = kD(e.className, n) : e.setAttribute("class", kD(e.className && e.className.baseVal || "", n));
}
var kw = { exports: {} }, Na = {}, jC = { exports: {} }, Xk = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var wD;
function K5() {
  return wD || (wD = 1, function(e) {
    function n(K, ne) {
      var se = K.length;
      K.push(ne);
      e:
        for (; 0 < se; ) {
          var ze = se - 1 >>> 1, Ue = K[ze];
          if (0 < u(Ue, ne))
            K[ze] = ne, K[se] = Ue, se = ze;
          else
            break e;
        }
    }
    function a(K) {
      return K.length === 0 ? null : K[0];
    }
    function s(K) {
      if (K.length === 0)
        return null;
      var ne = K[0], se = K.pop();
      if (se !== ne) {
        K[0] = se;
        e:
          for (var ze = 0, Ue = K.length, Oe = Ue >>> 1; ze < Oe; ) {
            var ue = 2 * (ze + 1) - 1, xe = K[ue], me = ue + 1, Se = K[me];
            if (0 > u(xe, se))
              me < Ue && 0 > u(Se, xe) ? (K[ze] = Se, K[me] = se, ze = me) : (K[ze] = xe, K[ue] = se, ze = ue);
            else if (me < Ue && 0 > u(Se, se))
              K[ze] = Se, K[me] = se, ze = me;
            else
              break e;
          }
      }
      return ne;
    }
    function u(K, ne) {
      var se = K.sortIndex - ne.sortIndex;
      return se !== 0 ? se : K.id - ne.id;
    }
    if (typeof performance == "object" && typeof performance.now == "function") {
      var d = performance;
      e.unstable_now = function() {
        return d.now();
      };
    } else {
      var p = Date, h = p.now();
      e.unstable_now = function() {
        return p.now() - h;
      };
    }
    var g = [], b = [], x = 1, S = null, E = 3, R = !1, $ = !1, M = !1, O = typeof setTimeout == "function" ? setTimeout : null, N = typeof clearTimeout == "function" ? clearTimeout : null, V = typeof setImmediate < "u" ? setImmediate : null;
    typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
    function I(K) {
      for (var ne = a(b); ne !== null; ) {
        if (ne.callback === null)
          s(b);
        else if (ne.startTime <= K)
          s(b), ne.sortIndex = ne.expirationTime, n(g, ne);
        else
          break;
        ne = a(b);
      }
    }
    function z(K) {
      if (M = !1, I(K), !$)
        if (a(g) !== null)
          $ = !0, oe(B);
        else {
          var ne = a(b);
          ne !== null && ie(z, ne.startTime - K);
        }
    }
    function B(K, ne) {
      $ = !1, M && (M = !1, N(H), H = -1), R = !0;
      var se = E;
      try {
        for (I(ne), S = a(g); S !== null && (!(S.expirationTime > ne) || K && !Y()); ) {
          var ze = S.callback;
          if (typeof ze == "function") {
            S.callback = null, E = S.priorityLevel;
            var Ue = ze(S.expirationTime <= ne);
            ne = e.unstable_now(), typeof Ue == "function" ? S.callback = Ue : S === a(g) && s(g), I(ne);
          } else
            s(g);
          S = a(g);
        }
        if (S !== null)
          var Oe = !0;
        else {
          var ue = a(b);
          ue !== null && ie(z, ue.startTime - ne), Oe = !1;
        }
        return Oe;
      } finally {
        S = null, E = se, R = !1;
      }
    }
    var P = !1, F = null, H = -1, U = 5, Q = -1;
    function Y() {
      return !(e.unstable_now() - Q < U);
    }
    function te() {
      if (F !== null) {
        var K = e.unstable_now();
        Q = K;
        var ne = !0;
        try {
          ne = F(!0, K);
        } finally {
          ne ? Z() : (P = !1, F = null);
        }
      } else
        P = !1;
    }
    var Z;
    if (typeof V == "function")
      Z = function() {
        V(te);
      };
    else if (typeof MessageChannel < "u") {
      var q = new MessageChannel(), X = q.port2;
      q.port1.onmessage = te, Z = function() {
        X.postMessage(null);
      };
    } else
      Z = function() {
        O(te, 0);
      };
    function oe(K) {
      F = K, P || (P = !0, Z());
    }
    function ie(K, ne) {
      H = O(function() {
        K(e.unstable_now());
      }, ne);
    }
    e.unstable_IdlePriority = 5, e.unstable_ImmediatePriority = 1, e.unstable_LowPriority = 4, e.unstable_NormalPriority = 3, e.unstable_Profiling = null, e.unstable_UserBlockingPriority = 2, e.unstable_cancelCallback = function(K) {
      K.callback = null;
    }, e.unstable_continueExecution = function() {
      $ || R || ($ = !0, oe(B));
    }, e.unstable_forceFrameRate = function(K) {
      0 > K || 125 < K ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : U = 0 < K ? Math.floor(1e3 / K) : 5;
    }, e.unstable_getCurrentPriorityLevel = function() {
      return E;
    }, e.unstable_getFirstCallbackNode = function() {
      return a(g);
    }, e.unstable_next = function(K) {
      switch (E) {
        case 1:
        case 2:
        case 3:
          var ne = 3;
          break;
        default:
          ne = E;
      }
      var se = E;
      E = ne;
      try {
        return K();
      } finally {
        E = se;
      }
    }, e.unstable_pauseExecution = function() {
    }, e.unstable_requestPaint = function() {
    }, e.unstable_runWithPriority = function(K, ne) {
      switch (K) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          K = 3;
      }
      var se = E;
      E = K;
      try {
        return ne();
      } finally {
        E = se;
      }
    }, e.unstable_scheduleCallback = function(K, ne, se) {
      var ze = e.unstable_now();
      switch (typeof se == "object" && se !== null ? (se = se.delay, se = typeof se == "number" && 0 < se ? ze + se : ze) : se = ze, K) {
        case 1:
          var Ue = -1;
          break;
        case 2:
          Ue = 250;
          break;
        case 5:
          Ue = 1073741823;
          break;
        case 4:
          Ue = 1e4;
          break;
        default:
          Ue = 5e3;
      }
      return Ue = se + Ue, K = { id: x++, callback: ne, priorityLevel: K, startTime: se, expirationTime: Ue, sortIndex: -1 }, se > ze ? (K.sortIndex = se, n(b, K), a(g) === null && K === a(b) && (M ? (N(H), H = -1) : M = !0, ie(z, se - ze))) : (K.sortIndex = Ue, n(g, K), $ || R || ($ = !0, oe(B))), K;
    }, e.unstable_shouldYield = Y, e.unstable_wrapCallback = function(K) {
      var ne = E;
      return function() {
        var se = E;
        E = ne;
        try {
          return K.apply(this, arguments);
        } finally {
          E = se;
        }
      };
    };
  }(Xk)), Xk;
}
var Zk = {};
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var RD;
function Q5() {
  return RD || (RD = 1, function(e) {
    process.env.NODE_ENV !== "production" && function() {
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var n = !1, a = !1, s = 5;
      function u(Ke, lt) {
        var et = Ke.length;
        Ke.push(lt), h(Ke, lt, et);
      }
      function d(Ke) {
        return Ke.length === 0 ? null : Ke[0];
      }
      function p(Ke) {
        if (Ke.length === 0)
          return null;
        var lt = Ke[0], et = Ke.pop();
        return et !== lt && (Ke[0] = et, g(Ke, et, 0)), lt;
      }
      function h(Ke, lt, et) {
        for (var rt = et; rt > 0; ) {
          var je = rt - 1 >>> 1, nt = Ke[je];
          if (b(nt, lt) > 0)
            Ke[je] = lt, Ke[rt] = nt, rt = je;
          else
            return;
        }
      }
      function g(Ke, lt, et) {
        for (var rt = et, je = Ke.length, nt = je >>> 1; rt < nt; ) {
          var ht = (rt + 1) * 2 - 1, $t = Ke[ht], Lt = ht + 1, Jt = Ke[Lt];
          if (b($t, lt) < 0)
            Lt < je && b(Jt, $t) < 0 ? (Ke[rt] = Jt, Ke[Lt] = lt, rt = Lt) : (Ke[rt] = $t, Ke[ht] = lt, rt = ht);
          else if (Lt < je && b(Jt, lt) < 0)
            Ke[rt] = Jt, Ke[Lt] = lt, rt = Lt;
          else
            return;
        }
      }
      function b(Ke, lt) {
        var et = Ke.sortIndex - lt.sortIndex;
        return et !== 0 ? et : Ke.id - lt.id;
      }
      var x = 1, S = 2, E = 3, R = 4, $ = 5;
      function M(Ke, lt) {
      }
      var O = typeof performance == "object" && typeof performance.now == "function";
      if (O) {
        var N = performance;
        e.unstable_now = function() {
          return N.now();
        };
      } else {
        var V = Date, I = V.now();
        e.unstable_now = function() {
          return V.now() - I;
        };
      }
      var z = 1073741823, B = -1, P = 250, F = 5e3, H = 1e4, U = z, Q = [], Y = [], te = 1, Z = null, q = E, X = !1, oe = !1, ie = !1, K = typeof setTimeout == "function" ? setTimeout : null, ne = typeof clearTimeout == "function" ? clearTimeout : null, se = typeof setImmediate < "u" ? setImmediate : null;
      typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
      function ze(Ke) {
        for (var lt = d(Y); lt !== null; ) {
          if (lt.callback === null)
            p(Y);
          else if (lt.startTime <= Ke)
            p(Y), lt.sortIndex = lt.expirationTime, u(Q, lt);
          else
            return;
          lt = d(Y);
        }
      }
      function Ue(Ke) {
        if (ie = !1, ze(Ke), !oe)
          if (d(Q) !== null)
            oe = !0, bt(Oe);
          else {
            var lt = d(Y);
            lt !== null && wt(Ue, lt.startTime - Ke);
          }
      }
      function Oe(Ke, lt) {
        oe = !1, ie && (ie = !1, we()), X = !0;
        var et = q;
        try {
          var rt;
          if (!a)
            return ue(Ke, lt);
        } finally {
          Z = null, q = et, X = !1;
        }
      }
      function ue(Ke, lt) {
        var et = lt;
        for (ze(et), Z = d(Q); Z !== null && !n && !(Z.expirationTime > et && (!Ke || dt())); ) {
          var rt = Z.callback;
          if (typeof rt == "function") {
            Z.callback = null, q = Z.priorityLevel;
            var je = Z.expirationTime <= et, nt = rt(je);
            et = e.unstable_now(), typeof nt == "function" ? Z.callback = nt : Z === d(Q) && p(Q), ze(et);
          } else
            p(Q);
          Z = d(Q);
        }
        if (Z !== null)
          return !0;
        var ht = d(Y);
        return ht !== null && wt(Ue, ht.startTime - et), !1;
      }
      function xe(Ke, lt) {
        switch (Ke) {
          case x:
          case S:
          case E:
          case R:
          case $:
            break;
          default:
            Ke = E;
        }
        var et = q;
        q = Ke;
        try {
          return lt();
        } finally {
          q = et;
        }
      }
      function me(Ke) {
        var lt;
        switch (q) {
          case x:
          case S:
          case E:
            lt = E;
            break;
          default:
            lt = q;
            break;
        }
        var et = q;
        q = lt;
        try {
          return Ke();
        } finally {
          q = et;
        }
      }
      function Se(Ke) {
        var lt = q;
        return function() {
          var et = q;
          q = lt;
          try {
            return Ke.apply(this, arguments);
          } finally {
            q = et;
          }
        };
      }
      function ce(Ke, lt, et) {
        var rt = e.unstable_now(), je;
        if (typeof et == "object" && et !== null) {
          var nt = et.delay;
          typeof nt == "number" && nt > 0 ? je = rt + nt : je = rt;
        } else
          je = rt;
        var ht;
        switch (Ke) {
          case x:
            ht = B;
            break;
          case S:
            ht = P;
            break;
          case $:
            ht = U;
            break;
          case R:
            ht = H;
            break;
          case E:
          default:
            ht = F;
            break;
        }
        var $t = je + ht, Lt = {
          id: te++,
          callback: lt,
          priorityLevel: Ke,
          startTime: je,
          expirationTime: $t,
          sortIndex: -1
        };
        return je > rt ? (Lt.sortIndex = je, u(Y, Lt), d(Q) === null && Lt === d(Y) && (ie ? we() : ie = !0, wt(Ue, je - rt))) : (Lt.sortIndex = $t, u(Q, Lt), !oe && !X && (oe = !0, bt(Oe))), Lt;
      }
      function Le() {
      }
      function Ze() {
        !oe && !X && (oe = !0, bt(Oe));
      }
      function Ee() {
        return d(Q);
      }
      function Ae(Ke) {
        Ke.callback = null;
      }
      function Ce() {
        return q;
      }
      var ae = !1, Pe = null, ke = -1, pt = s, _e = -1;
      function dt() {
        var Ke = e.unstable_now() - _e;
        return !(Ke < pt);
      }
      function ge() {
      }
      function ve(Ke) {
        if (Ke < 0 || Ke > 125) {
          console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
          return;
        }
        Ke > 0 ? pt = Math.floor(1e3 / Ke) : pt = s;
      }
      var qe = function() {
        if (Pe !== null) {
          var Ke = e.unstable_now();
          _e = Ke;
          var lt = !0, et = !0;
          try {
            et = Pe(lt, Ke);
          } finally {
            et ? vt() : (ae = !1, Pe = null);
          }
        } else
          ae = !1;
      }, vt;
      if (typeof se == "function")
        vt = function() {
          se(qe);
        };
      else if (typeof MessageChannel < "u") {
        var yt = new MessageChannel(), Mt = yt.port2;
        yt.port1.onmessage = qe, vt = function() {
          Mt.postMessage(null);
        };
      } else
        vt = function() {
          K(qe, 0);
        };
      function bt(Ke) {
        Pe = Ke, ae || (ae = !0, vt());
      }
      function wt(Ke, lt) {
        ke = K(function() {
          Ke(e.unstable_now());
        }, lt);
      }
      function we() {
        ne(ke), ke = -1;
      }
      var Re = ge, at = null;
      e.unstable_IdlePriority = $, e.unstable_ImmediatePriority = x, e.unstable_LowPriority = R, e.unstable_NormalPriority = E, e.unstable_Profiling = at, e.unstable_UserBlockingPriority = S, e.unstable_cancelCallback = Ae, e.unstable_continueExecution = Ze, e.unstable_forceFrameRate = ve, e.unstable_getCurrentPriorityLevel = Ce, e.unstable_getFirstCallbackNode = Ee, e.unstable_next = me, e.unstable_pauseExecution = Le, e.unstable_requestPaint = Re, e.unstable_runWithPriority = xe, e.unstable_scheduleCallback = ce, e.unstable_shouldYield = dt, e.unstable_wrapCallback = Se, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    }();
  }(Zk)), Zk;
}
var ED;
function IN() {
  return ED || (ED = 1, process.env.NODE_ENV === "production" ? jC.exports = K5() : jC.exports = Q5()), jC.exports;
}
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var OD;
function X5() {
  if (OD)
    return Na;
  OD = 1;
  var e = Ia, n = IN();
  function a(i) {
    for (var l = "https://reactjs.org/docs/error-decoder.html?invariant=" + i, m = 1; m < arguments.length; m++)
      l += "&args[]=" + encodeURIComponent(arguments[m]);
    return "Minified React error #" + i + "; visit " + l + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
  }
  var s = /* @__PURE__ */ new Set(), u = {};
  function d(i, l) {
    p(i, l), p(i + "Capture", l);
  }
  function p(i, l) {
    for (u[i] = l, i = 0; i < l.length; i++)
      s.add(l[i]);
  }
  var h = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u"), g = Object.prototype.hasOwnProperty, b = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, x = {}, S = {};
  function E(i) {
    return g.call(S, i) ? !0 : g.call(x, i) ? !1 : b.test(i) ? S[i] = !0 : (x[i] = !0, !1);
  }
  function R(i, l, m, C) {
    if (m !== null && m.type === 0)
      return !1;
    switch (typeof l) {
      case "function":
      case "symbol":
        return !0;
      case "boolean":
        return C ? !1 : m !== null ? !m.acceptsBooleans : (i = i.toLowerCase().slice(0, 5), i !== "data-" && i !== "aria-");
      default:
        return !1;
    }
  }
  function $(i, l, m, C) {
    if (l === null || typeof l > "u" || R(i, l, m, C))
      return !0;
    if (C)
      return !1;
    if (m !== null)
      switch (m.type) {
        case 3:
          return !l;
        case 4:
          return l === !1;
        case 5:
          return isNaN(l);
        case 6:
          return isNaN(l) || 1 > l;
      }
    return !1;
  }
  function M(i, l, m, C, w, L, W) {
    this.acceptsBooleans = l === 2 || l === 3 || l === 4, this.attributeName = C, this.attributeNamespace = w, this.mustUseProperty = m, this.propertyName = i, this.type = l, this.sanitizeURL = L, this.removeEmptyString = W;
  }
  var O = {};
  "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(i) {
    O[i] = new M(i, 0, !1, i, null, !1, !1);
  }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(i) {
    var l = i[0];
    O[l] = new M(l, 1, !1, i[1], null, !1, !1);
  }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(i) {
    O[i] = new M(i, 2, !1, i.toLowerCase(), null, !1, !1);
  }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(i) {
    O[i] = new M(i, 2, !1, i, null, !1, !1);
  }), "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(i) {
    O[i] = new M(i, 3, !1, i.toLowerCase(), null, !1, !1);
  }), ["checked", "multiple", "muted", "selected"].forEach(function(i) {
    O[i] = new M(i, 3, !0, i, null, !1, !1);
  }), ["capture", "download"].forEach(function(i) {
    O[i] = new M(i, 4, !1, i, null, !1, !1);
  }), ["cols", "rows", "size", "span"].forEach(function(i) {
    O[i] = new M(i, 6, !1, i, null, !1, !1);
  }), ["rowSpan", "start"].forEach(function(i) {
    O[i] = new M(i, 5, !1, i.toLowerCase(), null, !1, !1);
  });
  var N = /[\-:]([a-z])/g;
  function V(i) {
    return i[1].toUpperCase();
  }
  "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(i) {
    var l = i.replace(
      N,
      V
    );
    O[l] = new M(l, 1, !1, i, null, !1, !1);
  }), "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(i) {
    var l = i.replace(N, V);
    O[l] = new M(l, 1, !1, i, "http://www.w3.org/1999/xlink", !1, !1);
  }), ["xml:base", "xml:lang", "xml:space"].forEach(function(i) {
    var l = i.replace(N, V);
    O[l] = new M(l, 1, !1, i, "http://www.w3.org/XML/1998/namespace", !1, !1);
  }), ["tabIndex", "crossOrigin"].forEach(function(i) {
    O[i] = new M(i, 1, !1, i.toLowerCase(), null, !1, !1);
  }), O.xlinkHref = new M("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1), ["src", "href", "action", "formAction"].forEach(function(i) {
    O[i] = new M(i, 1, !1, i.toLowerCase(), null, !0, !0);
  });
  function I(i, l, m, C) {
    var w = O.hasOwnProperty(l) ? O[l] : null;
    (w !== null ? w.type !== 0 : C || !(2 < l.length) || l[0] !== "o" && l[0] !== "O" || l[1] !== "n" && l[1] !== "N") && ($(l, m, w, C) && (m = null), C || w === null ? E(l) && (m === null ? i.removeAttribute(l) : i.setAttribute(l, "" + m)) : w.mustUseProperty ? i[w.propertyName] = m === null ? w.type === 3 ? !1 : "" : m : (l = w.attributeName, C = w.attributeNamespace, m === null ? i.removeAttribute(l) : (w = w.type, m = w === 3 || w === 4 && m === !0 ? "" : "" + m, C ? i.setAttributeNS(C, l, m) : i.setAttribute(l, m))));
  }
  var z = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, B = Symbol.for("react.element"), P = Symbol.for("react.portal"), F = Symbol.for("react.fragment"), H = Symbol.for("react.strict_mode"), U = Symbol.for("react.profiler"), Q = Symbol.for("react.provider"), Y = Symbol.for("react.context"), te = Symbol.for("react.forward_ref"), Z = Symbol.for("react.suspense"), q = Symbol.for("react.suspense_list"), X = Symbol.for("react.memo"), oe = Symbol.for("react.lazy"), ie = Symbol.for("react.offscreen"), K = Symbol.iterator;
  function ne(i) {
    return i === null || typeof i != "object" ? null : (i = K && i[K] || i["@@iterator"], typeof i == "function" ? i : null);
  }
  var se = Object.assign, ze;
  function Ue(i) {
    if (ze === void 0)
      try {
        throw Error();
      } catch (m) {
        var l = m.stack.trim().match(/\n( *(at )?)/);
        ze = l && l[1] || "";
      }
    return `
` + ze + i;
  }
  var Oe = !1;
  function ue(i, l) {
    if (!i || Oe)
      return "";
    Oe = !0;
    var m = Error.prepareStackTrace;
    Error.prepareStackTrace = void 0;
    try {
      if (l)
        if (l = function() {
          throw Error();
        }, Object.defineProperty(l.prototype, "props", { set: function() {
          throw Error();
        } }), typeof Reflect == "object" && Reflect.construct) {
          try {
            Reflect.construct(l, []);
          } catch (Fe) {
            var C = Fe;
          }
          Reflect.construct(i, [], l);
        } else {
          try {
            l.call();
          } catch (Fe) {
            C = Fe;
          }
          i.call(l.prototype);
        }
      else {
        try {
          throw Error();
        } catch (Fe) {
          C = Fe;
        }
        i();
      }
    } catch (Fe) {
      if (Fe && C && typeof Fe.stack == "string") {
        for (var w = Fe.stack.split(`
`), L = C.stack.split(`
`), W = w.length - 1, re = L.length - 1; 1 <= W && 0 <= re && w[W] !== L[re]; )
          re--;
        for (; 1 <= W && 0 <= re; W--, re--)
          if (w[W] !== L[re]) {
            if (W !== 1 || re !== 1)
              do
                if (W--, re--, 0 > re || w[W] !== L[re]) {
                  var de = `
` + w[W].replace(" at new ", " at ");
                  return i.displayName && de.includes("<anonymous>") && (de = de.replace("<anonymous>", i.displayName)), de;
                }
              while (1 <= W && 0 <= re);
            break;
          }
      }
    } finally {
      Oe = !1, Error.prepareStackTrace = m;
    }
    return (i = i ? i.displayName || i.name : "") ? Ue(i) : "";
  }
  function xe(i) {
    switch (i.tag) {
      case 5:
        return Ue(i.type);
      case 16:
        return Ue("Lazy");
      case 13:
        return Ue("Suspense");
      case 19:
        return Ue("SuspenseList");
      case 0:
      case 2:
      case 15:
        return i = ue(i.type, !1), i;
      case 11:
        return i = ue(i.type.render, !1), i;
      case 1:
        return i = ue(i.type, !0), i;
      default:
        return "";
    }
  }
  function me(i) {
    if (i == null)
      return null;
    if (typeof i == "function")
      return i.displayName || i.name || null;
    if (typeof i == "string")
      return i;
    switch (i) {
      case F:
        return "Fragment";
      case P:
        return "Portal";
      case U:
        return "Profiler";
      case H:
        return "StrictMode";
      case Z:
        return "Suspense";
      case q:
        return "SuspenseList";
    }
    if (typeof i == "object")
      switch (i.$$typeof) {
        case Y:
          return (i.displayName || "Context") + ".Consumer";
        case Q:
          return (i._context.displayName || "Context") + ".Provider";
        case te:
          var l = i.render;
          return i = i.displayName, i || (i = l.displayName || l.name || "", i = i !== "" ? "ForwardRef(" + i + ")" : "ForwardRef"), i;
        case X:
          return l = i.displayName || null, l !== null ? l : me(i.type) || "Memo";
        case oe:
          l = i._payload, i = i._init;
          try {
            return me(i(l));
          } catch {
          }
      }
    return null;
  }
  function Se(i) {
    var l = i.type;
    switch (i.tag) {
      case 24:
        return "Cache";
      case 9:
        return (l.displayName || "Context") + ".Consumer";
      case 10:
        return (l._context.displayName || "Context") + ".Provider";
      case 18:
        return "DehydratedFragment";
      case 11:
        return i = l.render, i = i.displayName || i.name || "", l.displayName || (i !== "" ? "ForwardRef(" + i + ")" : "ForwardRef");
      case 7:
        return "Fragment";
      case 5:
        return l;
      case 4:
        return "Portal";
      case 3:
        return "Root";
      case 6:
        return "Text";
      case 16:
        return me(l);
      case 8:
        return l === H ? "StrictMode" : "Mode";
      case 22:
        return "Offscreen";
      case 12:
        return "Profiler";
      case 21:
        return "Scope";
      case 13:
        return "Suspense";
      case 19:
        return "SuspenseList";
      case 25:
        return "TracingMarker";
      case 1:
      case 0:
      case 17:
      case 2:
      case 14:
      case 15:
        if (typeof l == "function")
          return l.displayName || l.name || null;
        if (typeof l == "string")
          return l;
    }
    return null;
  }
  function ce(i) {
    switch (typeof i) {
      case "boolean":
      case "number":
      case "string":
      case "undefined":
        return i;
      case "object":
        return i;
      default:
        return "";
    }
  }
  function Le(i) {
    var l = i.type;
    return (i = i.nodeName) && i.toLowerCase() === "input" && (l === "checkbox" || l === "radio");
  }
  function Ze(i) {
    var l = Le(i) ? "checked" : "value", m = Object.getOwnPropertyDescriptor(i.constructor.prototype, l), C = "" + i[l];
    if (!i.hasOwnProperty(l) && typeof m < "u" && typeof m.get == "function" && typeof m.set == "function") {
      var w = m.get, L = m.set;
      return Object.defineProperty(i, l, { configurable: !0, get: function() {
        return w.call(this);
      }, set: function(W) {
        C = "" + W, L.call(this, W);
      } }), Object.defineProperty(i, l, { enumerable: m.enumerable }), { getValue: function() {
        return C;
      }, setValue: function(W) {
        C = "" + W;
      }, stopTracking: function() {
        i._valueTracker = null, delete i[l];
      } };
    }
  }
  function Ee(i) {
    i._valueTracker || (i._valueTracker = Ze(i));
  }
  function Ae(i) {
    if (!i)
      return !1;
    var l = i._valueTracker;
    if (!l)
      return !0;
    var m = l.getValue(), C = "";
    return i && (C = Le(i) ? i.checked ? "true" : "false" : i.value), i = C, i !== m ? (l.setValue(i), !0) : !1;
  }
  function Ce(i) {
    if (i = i || (typeof document < "u" ? document : void 0), typeof i > "u")
      return null;
    try {
      return i.activeElement || i.body;
    } catch {
      return i.body;
    }
  }
  function ae(i, l) {
    var m = l.checked;
    return se({}, l, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: m ?? i._wrapperState.initialChecked });
  }
  function Pe(i, l) {
    var m = l.defaultValue == null ? "" : l.defaultValue, C = l.checked != null ? l.checked : l.defaultChecked;
    m = ce(l.value != null ? l.value : m), i._wrapperState = { initialChecked: C, initialValue: m, controlled: l.type === "checkbox" || l.type === "radio" ? l.checked != null : l.value != null };
  }
  function ke(i, l) {
    l = l.checked, l != null && I(i, "checked", l, !1);
  }
  function pt(i, l) {
    ke(i, l);
    var m = ce(l.value), C = l.type;
    if (m != null)
      C === "number" ? (m === 0 && i.value === "" || i.value != m) && (i.value = "" + m) : i.value !== "" + m && (i.value = "" + m);
    else if (C === "submit" || C === "reset") {
      i.removeAttribute("value");
      return;
    }
    l.hasOwnProperty("value") ? dt(i, l.type, m) : l.hasOwnProperty("defaultValue") && dt(i, l.type, ce(l.defaultValue)), l.checked == null && l.defaultChecked != null && (i.defaultChecked = !!l.defaultChecked);
  }
  function _e(i, l, m) {
    if (l.hasOwnProperty("value") || l.hasOwnProperty("defaultValue")) {
      var C = l.type;
      if (!(C !== "submit" && C !== "reset" || l.value !== void 0 && l.value !== null))
        return;
      l = "" + i._wrapperState.initialValue, m || l === i.value || (i.value = l), i.defaultValue = l;
    }
    m = i.name, m !== "" && (i.name = ""), i.defaultChecked = !!i._wrapperState.initialChecked, m !== "" && (i.name = m);
  }
  function dt(i, l, m) {
    (l !== "number" || Ce(i.ownerDocument) !== i) && (m == null ? i.defaultValue = "" + i._wrapperState.initialValue : i.defaultValue !== "" + m && (i.defaultValue = "" + m));
  }
  var ge = Array.isArray;
  function ve(i, l, m, C) {
    if (i = i.options, l) {
      l = {};
      for (var w = 0; w < m.length; w++)
        l["$" + m[w]] = !0;
      for (m = 0; m < i.length; m++)
        w = l.hasOwnProperty("$" + i[m].value), i[m].selected !== w && (i[m].selected = w), w && C && (i[m].defaultSelected = !0);
    } else {
      for (m = "" + ce(m), l = null, w = 0; w < i.length; w++) {
        if (i[w].value === m) {
          i[w].selected = !0, C && (i[w].defaultSelected = !0);
          return;
        }
        l !== null || i[w].disabled || (l = i[w]);
      }
      l !== null && (l.selected = !0);
    }
  }
  function qe(i, l) {
    if (l.dangerouslySetInnerHTML != null)
      throw Error(a(91));
    return se({}, l, { value: void 0, defaultValue: void 0, children: "" + i._wrapperState.initialValue });
  }
  function vt(i, l) {
    var m = l.value;
    if (m == null) {
      if (m = l.children, l = l.defaultValue, m != null) {
        if (l != null)
          throw Error(a(92));
        if (ge(m)) {
          if (1 < m.length)
            throw Error(a(93));
          m = m[0];
        }
        l = m;
      }
      l == null && (l = ""), m = l;
    }
    i._wrapperState = { initialValue: ce(m) };
  }
  function yt(i, l) {
    var m = ce(l.value), C = ce(l.defaultValue);
    m != null && (m = "" + m, m !== i.value && (i.value = m), l.defaultValue == null && i.defaultValue !== m && (i.defaultValue = m)), C != null && (i.defaultValue = "" + C);
  }
  function Mt(i) {
    var l = i.textContent;
    l === i._wrapperState.initialValue && l !== "" && l !== null && (i.value = l);
  }
  function bt(i) {
    switch (i) {
      case "svg":
        return "http://www.w3.org/2000/svg";
      case "math":
        return "http://www.w3.org/1998/Math/MathML";
      default:
        return "http://www.w3.org/1999/xhtml";
    }
  }
  function wt(i, l) {
    return i == null || i === "http://www.w3.org/1999/xhtml" ? bt(l) : i === "http://www.w3.org/2000/svg" && l === "foreignObject" ? "http://www.w3.org/1999/xhtml" : i;
  }
  var we, Re = function(i) {
    return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(l, m, C, w) {
      MSApp.execUnsafeLocalFunction(function() {
        return i(l, m, C, w);
      });
    } : i;
  }(function(i, l) {
    if (i.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in i)
      i.innerHTML = l;
    else {
      for (we = we || document.createElement("div"), we.innerHTML = "<svg>" + l.valueOf().toString() + "</svg>", l = we.firstChild; i.firstChild; )
        i.removeChild(i.firstChild);
      for (; l.firstChild; )
        i.appendChild(l.firstChild);
    }
  });
  function at(i, l) {
    if (l) {
      var m = i.firstChild;
      if (m && m === i.lastChild && m.nodeType === 3) {
        m.nodeValue = l;
        return;
      }
    }
    i.textContent = l;
  }
  var Ke = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0
  }, lt = ["Webkit", "ms", "Moz", "O"];
  Object.keys(Ke).forEach(function(i) {
    lt.forEach(function(l) {
      l = l + i.charAt(0).toUpperCase() + i.substring(1), Ke[l] = Ke[i];
    });
  });
  function et(i, l, m) {
    return l == null || typeof l == "boolean" || l === "" ? "" : m || typeof l != "number" || l === 0 || Ke.hasOwnProperty(i) && Ke[i] ? ("" + l).trim() : l + "px";
  }
  function rt(i, l) {
    i = i.style;
    for (var m in l)
      if (l.hasOwnProperty(m)) {
        var C = m.indexOf("--") === 0, w = et(m, l[m], C);
        m === "float" && (m = "cssFloat"), C ? i.setProperty(m, w) : i[m] = w;
      }
  }
  var je = se({ menuitem: !0 }, { area: !0, base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 });
  function nt(i, l) {
    if (l) {
      if (je[i] && (l.children != null || l.dangerouslySetInnerHTML != null))
        throw Error(a(137, i));
      if (l.dangerouslySetInnerHTML != null) {
        if (l.children != null)
          throw Error(a(60));
        if (typeof l.dangerouslySetInnerHTML != "object" || !("__html" in l.dangerouslySetInnerHTML))
          throw Error(a(61));
      }
      if (l.style != null && typeof l.style != "object")
        throw Error(a(62));
    }
  }
  function ht(i, l) {
    if (i.indexOf("-") === -1)
      return typeof l.is == "string";
    switch (i) {
      case "annotation-xml":
      case "color-profile":
      case "font-face":
      case "font-face-src":
      case "font-face-uri":
      case "font-face-format":
      case "font-face-name":
      case "missing-glyph":
        return !1;
      default:
        return !0;
    }
  }
  var $t = null;
  function Lt(i) {
    return i = i.target || i.srcElement || window, i.correspondingUseElement && (i = i.correspondingUseElement), i.nodeType === 3 ? i.parentNode : i;
  }
  var Jt = null, qt = null, en = null;
  function Nn(i) {
    if (i = Du(i)) {
      if (typeof Jt != "function")
        throw Error(a(280));
      var l = i.stateNode;
      l && (l = jt(l), Jt(i.stateNode, i.type, l));
    }
  }
  function nn(i) {
    qt ? en ? en.push(i) : en = [i] : qt = i;
  }
  function Yn() {
    if (qt) {
      var i = qt, l = en;
      if (en = qt = null, Nn(i), l)
        for (i = 0; i < l.length; i++)
          Nn(l[i]);
    }
  }
  function Po(i, l) {
    return i(l);
  }
  function Do() {
  }
  var Zr = !1;
  function Bo(i, l, m) {
    if (Zr)
      return i(l, m);
    Zr = !0;
    try {
      return Po(i, l, m);
    } finally {
      Zr = !1, (qt !== null || en !== null) && (Do(), Yn());
    }
  }
  function Ln(i, l) {
    var m = i.stateNode;
    if (m === null)
      return null;
    var C = jt(m);
    if (C === null)
      return null;
    m = C[l];
    e:
      switch (l) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
          (C = !C.disabled) || (i = i.type, C = !(i === "button" || i === "input" || i === "select" || i === "textarea")), i = !C;
          break e;
        default:
          i = !1;
      }
    if (i)
      return null;
    if (m && typeof m != "function")
      throw Error(a(231, l, typeof m));
    return m;
  }
  var wn = !1;
  if (h)
    try {
      var qn = {};
      Object.defineProperty(qn, "passive", { get: function() {
        wn = !0;
      } }), window.addEventListener("test", qn, qn), window.removeEventListener("test", qn, qn);
    } catch {
      wn = !1;
    }
  function to(i, l, m, C, w, L, W, re, de) {
    var Fe = Array.prototype.slice.call(arguments, 3);
    try {
      l.apply(m, Fe);
    } catch (ut) {
      this.onError(ut);
    }
  }
  var ao = !1, Jo = null, zo = !1, Fo = null, Nr = { onError: function(i) {
    ao = !0, Jo = i;
  } };
  function jo(i, l, m, C, w, L, W, re, de) {
    ao = !1, Jo = null, to.apply(Nr, arguments);
  }
  function Co(i, l, m, C, w, L, W, re, de) {
    if (jo.apply(this, arguments), ao) {
      if (ao) {
        var Fe = Jo;
        ao = !1, Jo = null;
      } else
        throw Error(a(198));
      zo || (zo = !0, Fo = Fe);
    }
  }
  function Ge(i) {
    var l = i, m = i;
    if (i.alternate)
      for (; l.return; )
        l = l.return;
    else {
      i = l;
      do
        l = i, l.flags & 4098 && (m = l.return), i = l.return;
      while (i);
    }
    return l.tag === 3 ? m : null;
  }
  function Te(i) {
    if (i.tag === 13) {
      var l = i.memoizedState;
      if (l === null && (i = i.alternate, i !== null && (l = i.memoizedState)), l !== null)
        return l.dehydrated;
    }
    return null;
  }
  function it(i) {
    if (Ge(i) !== i)
      throw Error(a(188));
  }
  function Tt(i) {
    var l = i.alternate;
    if (!l) {
      if (l = Ge(i), l === null)
        throw Error(a(188));
      return l !== i ? null : i;
    }
    for (var m = i, C = l; ; ) {
      var w = m.return;
      if (w === null)
        break;
      var L = w.alternate;
      if (L === null) {
        if (C = w.return, C !== null) {
          m = C;
          continue;
        }
        break;
      }
      if (w.child === L.child) {
        for (L = w.child; L; ) {
          if (L === m)
            return it(w), i;
          if (L === C)
            return it(w), l;
          L = L.sibling;
        }
        throw Error(a(188));
      }
      if (m.return !== C.return)
        m = w, C = L;
      else {
        for (var W = !1, re = w.child; re; ) {
          if (re === m) {
            W = !0, m = w, C = L;
            break;
          }
          if (re === C) {
            W = !0, C = w, m = L;
            break;
          }
          re = re.sibling;
        }
        if (!W) {
          for (re = L.child; re; ) {
            if (re === m) {
              W = !0, m = L, C = w;
              break;
            }
            if (re === C) {
              W = !0, C = L, m = w;
              break;
            }
            re = re.sibling;
          }
          if (!W)
            throw Error(a(189));
        }
      }
      if (m.alternate !== C)
        throw Error(a(190));
    }
    if (m.tag !== 3)
      throw Error(a(188));
    return m.stateNode.current === m ? i : l;
  }
  function ln(i) {
    return i = Tt(i), i !== null ? Ct(i) : null;
  }
  function Ct(i) {
    if (i.tag === 5 || i.tag === 6)
      return i;
    for (i = i.child; i !== null; ) {
      var l = Ct(i);
      if (l !== null)
        return l;
      i = i.sibling;
    }
    return null;
  }
  var pn = n.unstable_scheduleCallback, fr = n.unstable_cancelCallback, Gl = n.unstable_shouldYield, mx = n.unstable_requestPaint, uo = n.unstable_now, hx = n.unstable_getCurrentPriorityLevel, ki = n.unstable_ImmediatePriority, fn = n.unstable_UserBlockingPriority, ss = n.unstable_NormalPriority, Bg = n.unstable_LowPriority, sm = n.unstable_IdlePriority, cu = null, Va = null;
  function zg(i) {
    if (Va && typeof Va.onCommitFiberRoot == "function")
      try {
        Va.onCommitFiberRoot(cu, i, void 0, (i.current.flags & 128) === 128);
      } catch {
      }
  }
  var fa = Math.clz32 ? Math.clz32 : vx, Fg = Math.log, jg = Math.LN2;
  function vx(i) {
    return i >>>= 0, i === 0 ? 32 : 31 - (Fg(i) / jg | 0) | 0;
  }
  var Ld = 64, Kl = 4194304;
  function Qs(i) {
    switch (i & -i) {
      case 1:
        return 1;
      case 2:
        return 2;
      case 4:
        return 4;
      case 8:
        return 8;
      case 16:
        return 16;
      case 32:
        return 32;
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return i & 4194240;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return i & 130023424;
      case 134217728:
        return 134217728;
      case 268435456:
        return 268435456;
      case 536870912:
        return 536870912;
      case 1073741824:
        return 1073741824;
      default:
        return i;
    }
  }
  function Ba(i, l) {
    var m = i.pendingLanes;
    if (m === 0)
      return 0;
    var C = 0, w = i.suspendedLanes, L = i.pingedLanes, W = m & 268435455;
    if (W !== 0) {
      var re = W & ~w;
      re !== 0 ? C = Qs(re) : (L &= W, L !== 0 && (C = Qs(L)));
    } else
      W = m & ~w, W !== 0 ? C = Qs(W) : L !== 0 && (C = Qs(L));
    if (C === 0)
      return 0;
    if (l !== 0 && l !== C && !(l & w) && (w = C & -C, L = l & -l, w >= L || w === 16 && (L & 4194240) !== 0))
      return l;
    if (C & 4 && (C |= m & 16), l = i.entangledLanes, l !== 0)
      for (i = i.entanglements, l &= C; 0 < l; )
        m = 31 - fa(l), w = 1 << m, C |= i[m], l &= ~w;
    return C;
  }
  function lm(i, l) {
    switch (i) {
      case 1:
      case 2:
      case 4:
        return l + 250;
      case 8:
      case 16:
      case 32:
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return l + 5e3;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return -1;
      case 134217728:
      case 268435456:
      case 536870912:
      case 1073741824:
        return -1;
      default:
        return -1;
    }
  }
  function Id(i, l) {
    for (var m = i.suspendedLanes, C = i.pingedLanes, w = i.expirationTimes, L = i.pendingLanes; 0 < L; ) {
      var W = 31 - fa(L), re = 1 << W, de = w[W];
      de === -1 ? (!(re & m) || re & C) && (w[W] = lm(re, l)) : de <= l && (i.expiredLanes |= re), L &= ~re;
    }
  }
  function cm(i) {
    return i = i.pendingLanes & -1073741825, i !== 0 ? i : i & 1073741824 ? 1073741824 : 0;
  }
  function Ad() {
    var i = Ld;
    return Ld <<= 1, !(Ld & 4194240) && (Ld = 64), i;
  }
  function um(i) {
    for (var l = [], m = 0; 31 > m; m++)
      l.push(i);
    return l;
  }
  function Xs(i, l, m) {
    i.pendingLanes |= l, l !== 536870912 && (i.suspendedLanes = 0, i.pingedLanes = 0), i = i.eventTimes, l = 31 - fa(l), i[l] = m;
  }
  function gx(i, l) {
    var m = i.pendingLanes & ~l;
    i.pendingLanes = l, i.suspendedLanes = 0, i.pingedLanes = 0, i.expiredLanes &= l, i.mutableReadLanes &= l, i.entangledLanes &= l, l = i.entanglements;
    var C = i.eventTimes;
    for (i = i.expirationTimes; 0 < m; ) {
      var w = 31 - fa(m), L = 1 << w;
      l[w] = 0, C[w] = -1, i[w] = -1, m &= ~L;
    }
  }
  function uu(i, l) {
    var m = i.entangledLanes |= l;
    for (i = i.entanglements; m; ) {
      var C = 31 - fa(m), w = 1 << C;
      w & l | i[C] & l && (i[C] |= l), m &= ~w;
    }
  }
  var Mn = 0;
  function dm(i) {
    return i &= -i, 1 < i ? 4 < i ? i & 268435455 ? 16 : 536870912 : 4 : 1;
  }
  var Ug, _d, jn, Hg, pm, on = !1, du = [], To = null, ma = null, ha = null, pu = /* @__PURE__ */ new Map(), Mo = /* @__PURE__ */ new Map(), In = [], bx = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
  function za(i, l) {
    switch (i) {
      case "focusin":
      case "focusout":
        To = null;
        break;
      case "dragenter":
      case "dragleave":
        ma = null;
        break;
      case "mouseover":
      case "mouseout":
        ha = null;
        break;
      case "pointerover":
      case "pointerout":
        pu.delete(l.pointerId);
        break;
      case "gotpointercapture":
      case "lostpointercapture":
        Mo.delete(l.pointerId);
    }
  }
  function mr(i, l, m, C, w, L) {
    return i === null || i.nativeEvent !== L ? (i = { blockedOn: l, domEventName: m, eventSystemFlags: C, nativeEvent: L, targetContainers: [w] }, l !== null && (l = Du(l), l !== null && _d(l)), i) : (i.eventSystemFlags |= C, l = i.targetContainers, w !== null && l.indexOf(w) === -1 && l.push(w), i);
  }
  function ls(i, l, m, C, w) {
    switch (l) {
      case "focusin":
        return To = mr(To, i, l, m, C, w), !0;
      case "dragenter":
        return ma = mr(ma, i, l, m, C, w), !0;
      case "mouseover":
        return ha = mr(ha, i, l, m, C, w), !0;
      case "pointerover":
        var L = w.pointerId;
        return pu.set(L, mr(pu.get(L) || null, i, l, m, C, w)), !0;
      case "gotpointercapture":
        return L = w.pointerId, Mo.set(L, mr(Mo.get(L) || null, i, l, m, C, w)), !0;
    }
    return !1;
  }
  function Wg(i) {
    var l = ga(i.target);
    if (l !== null) {
      var m = Ge(l);
      if (m !== null) {
        if (l = m.tag, l === 13) {
          if (l = Te(m), l !== null) {
            i.blockedOn = l, pm(i.priority, function() {
              jn(m);
            });
            return;
          }
        } else if (l === 3 && m.stateNode.current.memoizedState.isDehydrated) {
          i.blockedOn = m.tag === 3 ? m.stateNode.containerInfo : null;
          return;
        }
      }
    }
    i.blockedOn = null;
  }
  function Ql(i) {
    if (i.blockedOn !== null)
      return !1;
    for (var l = i.targetContainers; 0 < l.length; ) {
      var m = zd(i.domEventName, i.eventSystemFlags, l[0], i.nativeEvent);
      if (m === null) {
        m = i.nativeEvent;
        var C = new m.constructor(m.type, m);
        $t = C, m.target.dispatchEvent(C), $t = null;
      } else
        return l = Du(m), l !== null && _d(l), i.blockedOn = m, !1;
      l.shift();
    }
    return !0;
  }
  function fm(i, l, m) {
    Ql(i) && m.delete(l);
  }
  function Yg() {
    on = !1, To !== null && Ql(To) && (To = null), ma !== null && Ql(ma) && (ma = null), ha !== null && Ql(ha) && (ha = null), pu.forEach(fm), Mo.forEach(fm);
  }
  function fu(i, l) {
    i.blockedOn === l && (i.blockedOn = null, on || (on = !0, n.unstable_scheduleCallback(n.unstable_NormalPriority, Yg)));
  }
  function mu(i) {
    function l(w) {
      return fu(w, i);
    }
    if (0 < du.length) {
      fu(du[0], i);
      for (var m = 1; m < du.length; m++) {
        var C = du[m];
        C.blockedOn === i && (C.blockedOn = null);
      }
    }
    for (To !== null && fu(To, i), ma !== null && fu(ma, i), ha !== null && fu(ha, i), pu.forEach(l), Mo.forEach(l), m = 0; m < In.length; m++)
      C = In[m], C.blockedOn === i && (C.blockedOn = null);
    for (; 0 < In.length && (m = In[0], m.blockedOn === null); )
      Wg(m), m.blockedOn === null && In.shift();
  }
  var Xl = z.ReactCurrentBatchConfig, Zs = !0;
  function qg(i, l, m, C) {
    var w = Mn, L = Xl.transition;
    Xl.transition = null;
    try {
      Mn = 1, Bd(i, l, m, C);
    } finally {
      Mn = w, Xl.transition = L;
    }
  }
  function Vd(i, l, m, C) {
    var w = Mn, L = Xl.transition;
    Xl.transition = null;
    try {
      Mn = 4, Bd(i, l, m, C);
    } finally {
      Mn = w, Xl.transition = L;
    }
  }
  function Bd(i, l, m, C) {
    if (Zs) {
      var w = zd(i, l, m, C);
      if (w === null)
        Zd(i, l, C, hu, m), za(i, C);
      else if (ls(w, i, l, m, C))
        C.stopPropagation();
      else if (za(i, C), l & 4 && -1 < bx.indexOf(i)) {
        for (; w !== null; ) {
          var L = Du(w);
          if (L !== null && Ug(L), L = zd(i, l, m, C), L === null && Zd(i, l, C, hu, m), L === w)
            break;
          w = L;
        }
        w !== null && C.stopPropagation();
      } else
        Zd(i, l, C, null, m);
    }
  }
  var hu = null;
  function zd(i, l, m, C) {
    if (hu = null, i = Lt(C), i = ga(i), i !== null)
      if (l = Ge(i), l === null)
        i = null;
      else if (m = l.tag, m === 13) {
        if (i = Te(l), i !== null)
          return i;
        i = null;
      } else if (m === 3) {
        if (l.stateNode.current.memoizedState.isDehydrated)
          return l.tag === 3 ? l.stateNode.containerInfo : null;
        i = null;
      } else
        l !== i && (i = null);
    return hu = i, null;
  }
  function mm(i) {
    switch (i) {
      case "cancel":
      case "click":
      case "close":
      case "contextmenu":
      case "copy":
      case "cut":
      case "auxclick":
      case "dblclick":
      case "dragend":
      case "dragstart":
      case "drop":
      case "focusin":
      case "focusout":
      case "input":
      case "invalid":
      case "keydown":
      case "keypress":
      case "keyup":
      case "mousedown":
      case "mouseup":
      case "paste":
      case "pause":
      case "play":
      case "pointercancel":
      case "pointerdown":
      case "pointerup":
      case "ratechange":
      case "reset":
      case "resize":
      case "seeked":
      case "submit":
      case "touchcancel":
      case "touchend":
      case "touchstart":
      case "volumechange":
      case "change":
      case "selectionchange":
      case "textInput":
      case "compositionstart":
      case "compositionend":
      case "compositionupdate":
      case "beforeblur":
      case "afterblur":
      case "beforeinput":
      case "blur":
      case "fullscreenchange":
      case "focus":
      case "hashchange":
      case "popstate":
      case "select":
      case "selectstart":
        return 1;
      case "drag":
      case "dragenter":
      case "dragexit":
      case "dragleave":
      case "dragover":
      case "mousemove":
      case "mouseout":
      case "mouseover":
      case "pointermove":
      case "pointerout":
      case "pointerover":
      case "scroll":
      case "toggle":
      case "touchmove":
      case "wheel":
      case "mouseenter":
      case "mouseleave":
      case "pointerenter":
      case "pointerleave":
        return 4;
      case "message":
        switch (hx()) {
          case ki:
            return 1;
          case fn:
            return 4;
          case ss:
          case Bg:
            return 16;
          case sm:
            return 536870912;
          default:
            return 16;
        }
      default:
        return 16;
    }
  }
  var wi = null, vu = null, gu = null;
  function hm() {
    if (gu)
      return gu;
    var i, l = vu, m = l.length, C, w = "value" in wi ? wi.value : wi.textContent, L = w.length;
    for (i = 0; i < m && l[i] === w[i]; i++)
      ;
    var W = m - i;
    for (C = 1; C <= W && l[m - C] === w[L - C]; C++)
      ;
    return gu = w.slice(i, 1 < C ? 1 - C : void 0);
  }
  function Zl(i) {
    var l = i.keyCode;
    return "charCode" in i ? (i = i.charCode, i === 0 && l === 13 && (i = 13)) : i = l, i === 10 && (i = 13), 32 <= i || i === 13 ? i : 0;
  }
  function bu() {
    return !0;
  }
  function Gg() {
    return !1;
  }
  function Jr(i) {
    function l(m, C, w, L, W) {
      this._reactName = m, this._targetInst = w, this.type = C, this.nativeEvent = L, this.target = W, this.currentTarget = null;
      for (var re in i)
        i.hasOwnProperty(re) && (m = i[re], this[re] = m ? m(L) : L[re]);
      return this.isDefaultPrevented = (L.defaultPrevented != null ? L.defaultPrevented : L.returnValue === !1) ? bu : Gg, this.isPropagationStopped = Gg, this;
    }
    return se(l.prototype, { preventDefault: function() {
      this.defaultPrevented = !0;
      var m = this.nativeEvent;
      m && (m.preventDefault ? m.preventDefault() : typeof m.returnValue != "unknown" && (m.returnValue = !1), this.isDefaultPrevented = bu);
    }, stopPropagation: function() {
      var m = this.nativeEvent;
      m && (m.stopPropagation ? m.stopPropagation() : typeof m.cancelBubble != "unknown" && (m.cancelBubble = !0), this.isPropagationStopped = bu);
    }, persist: function() {
    }, isPersistent: bu }), l;
  }
  var cs = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(i) {
    return i.timeStamp || Date.now();
  }, defaultPrevented: 0, isTrusted: 0 }, Fd = Jr(cs), Jl = se({}, cs, { view: 0, detail: 0 }), Kg = Jr(Jl), jd, vm, yu, Uo = se({}, Jl, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: Cm, button: 0, buttons: 0, relatedTarget: function(i) {
    return i.relatedTarget === void 0 ? i.fromElement === i.srcElement ? i.toElement : i.fromElement : i.relatedTarget;
  }, movementX: function(i) {
    return "movementX" in i ? i.movementX : (i !== yu && (yu && i.type === "mousemove" ? (jd = i.screenX - yu.screenX, vm = i.screenY - yu.screenY) : vm = jd = 0, yu = i), jd);
  }, movementY: function(i) {
    return "movementY" in i ? i.movementY : vm;
  } }), Ud = Jr(Uo), Qg = se({}, Uo, { dataTransfer: 0 }), Xg = Jr(Qg), yx = se({}, Jl, { relatedTarget: 0 }), us = Jr(yx), gm = se({}, cs, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), Zg = Jr(gm), Cx = se({}, cs, { clipboardData: function(i) {
    return "clipboardData" in i ? i.clipboardData : window.clipboardData;
  } }), Tx = Jr(Cx), xx = se({}, cs, { data: 0 }), bm = Jr(xx), ym = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified"
  }, Jg = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta"
  }, eb = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
  function tb(i) {
    var l = this.nativeEvent;
    return l.getModifierState ? l.getModifierState(i) : (i = eb[i]) ? !!l[i] : !1;
  }
  function Cm() {
    return tb;
  }
  var Ri = se({}, Jl, { key: function(i) {
    if (i.key) {
      var l = ym[i.key] || i.key;
      if (l !== "Unidentified")
        return l;
    }
    return i.type === "keypress" ? (i = Zl(i), i === 13 ? "Enter" : String.fromCharCode(i)) : i.type === "keydown" || i.type === "keyup" ? Jg[i.keyCode] || "Unidentified" : "";
  }, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: Cm, charCode: function(i) {
    return i.type === "keypress" ? Zl(i) : 0;
  }, keyCode: function(i) {
    return i.type === "keydown" || i.type === "keyup" ? i.keyCode : 0;
  }, which: function(i) {
    return i.type === "keypress" ? Zl(i) : i.type === "keydown" || i.type === "keyup" ? i.keyCode : 0;
  } }), Sx = Jr(Ri), Tm = se({}, Uo, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Hd = Jr(Tm), xm = se({}, Jl, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: Cm }), kx = Jr(xm), Wd = se({}, cs, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), nb = Jr(Wd), Lr = se({}, Uo, {
    deltaX: function(i) {
      return "deltaX" in i ? i.deltaX : "wheelDeltaX" in i ? -i.wheelDeltaX : 0;
    },
    deltaY: function(i) {
      return "deltaY" in i ? i.deltaY : "wheelDeltaY" in i ? -i.wheelDeltaY : "wheelDelta" in i ? -i.wheelDelta : 0;
    },
    deltaZ: 0,
    deltaMode: 0
  }), Ei = Jr(Lr), xo = [9, 13, 27, 32], Fa = h && "CompositionEvent" in window, Js = null;
  h && "documentMode" in document && (Js = document.documentMode);
  var Yd = h && "TextEvent" in window && !Js, ob = h && (!Fa || Js && 8 < Js && 11 >= Js), ec = String.fromCharCode(32), rb = !1;
  function ab(i, l) {
    switch (i) {
      case "keyup":
        return xo.indexOf(l.keyCode) !== -1;
      case "keydown":
        return l.keyCode !== 229;
      case "keypress":
      case "mousedown":
      case "focusout":
        return !0;
      default:
        return !1;
    }
  }
  function qd(i) {
    return i = i.detail, typeof i == "object" && "data" in i ? i.data : null;
  }
  var tc = !1;
  function wx(i, l) {
    switch (i) {
      case "compositionend":
        return qd(l);
      case "keypress":
        return l.which !== 32 ? null : (rb = !0, ec);
      case "textInput":
        return i = l.data, i === ec && rb ? null : i;
      default:
        return null;
    }
  }
  function Rx(i, l) {
    if (tc)
      return i === "compositionend" || !Fa && ab(i, l) ? (i = hm(), gu = vu = wi = null, tc = !1, i) : null;
    switch (i) {
      case "paste":
        return null;
      case "keypress":
        if (!(l.ctrlKey || l.altKey || l.metaKey) || l.ctrlKey && l.altKey) {
          if (l.char && 1 < l.char.length)
            return l.char;
          if (l.which)
            return String.fromCharCode(l.which);
        }
        return null;
      case "compositionend":
        return ob && l.locale !== "ko" ? null : l.data;
      default:
        return null;
    }
  }
  var ib = { color: !0, date: !0, datetime: !0, "datetime-local": !0, email: !0, month: !0, number: !0, password: !0, range: !0, search: !0, tel: !0, text: !0, time: !0, url: !0, week: !0 };
  function sb(i) {
    var l = i && i.nodeName && i.nodeName.toLowerCase();
    return l === "input" ? !!ib[i.type] : l === "textarea";
  }
  function lb(i, l, m, C) {
    nn(C), l = Eu(l, "onChange"), 0 < l.length && (m = new Fd("onChange", "change", null, m, C), i.push({ event: m, listeners: l }));
  }
  var Cu = null, nc = null;
  function oc(i) {
    Xd(i, 0);
  }
  function rc(i) {
    var l = ic(i);
    if (Ae(l))
      return i;
  }
  function cb(i, l) {
    if (i === "change")
      return l;
  }
  var Sm = !1;
  if (h) {
    var km;
    if (h) {
      var wm = "oninput" in document;
      if (!wm) {
        var ub = document.createElement("div");
        ub.setAttribute("oninput", "return;"), wm = typeof ub.oninput == "function";
      }
      km = wm;
    } else
      km = !1;
    Sm = km && (!document.documentMode || 9 < document.documentMode);
  }
  function db() {
    Cu && (Cu.detachEvent("onpropertychange", pb), nc = Cu = null);
  }
  function pb(i) {
    if (i.propertyName === "value" && rc(nc)) {
      var l = [];
      lb(l, nc, i, Lt(i)), Bo(oc, l);
    }
  }
  function Ex(i, l, m) {
    i === "focusin" ? (db(), Cu = l, nc = m, Cu.attachEvent("onpropertychange", pb)) : i === "focusout" && db();
  }
  function Ox(i) {
    if (i === "selectionchange" || i === "keyup" || i === "keydown")
      return rc(nc);
  }
  function Px(i, l) {
    if (i === "click")
      return rc(l);
  }
  function fb(i, l) {
    if (i === "input" || i === "change")
      return rc(l);
  }
  function Dx(i, l) {
    return i === l && (i !== 0 || 1 / i === 1 / l) || i !== i && l !== l;
  }
  var va = typeof Object.is == "function" ? Object.is : Dx;
  function Tu(i, l) {
    if (va(i, l))
      return !0;
    if (typeof i != "object" || i === null || typeof l != "object" || l === null)
      return !1;
    var m = Object.keys(i), C = Object.keys(l);
    if (m.length !== C.length)
      return !1;
    for (C = 0; C < m.length; C++) {
      var w = m[C];
      if (!g.call(l, w) || !va(i[w], l[w]))
        return !1;
    }
    return !0;
  }
  function mb(i) {
    for (; i && i.firstChild; )
      i = i.firstChild;
    return i;
  }
  function hb(i, l) {
    var m = mb(i);
    i = 0;
    for (var C; m; ) {
      if (m.nodeType === 3) {
        if (C = i + m.textContent.length, i <= l && C >= l)
          return { node: m, offset: l - i };
        i = C;
      }
      e: {
        for (; m; ) {
          if (m.nextSibling) {
            m = m.nextSibling;
            break e;
          }
          m = m.parentNode;
        }
        m = void 0;
      }
      m = mb(m);
    }
  }
  function vb(i, l) {
    return i && l ? i === l ? !0 : i && i.nodeType === 3 ? !1 : l && l.nodeType === 3 ? vb(i, l.parentNode) : "contains" in i ? i.contains(l) : i.compareDocumentPosition ? !!(i.compareDocumentPosition(l) & 16) : !1 : !1;
  }
  function Gd() {
    for (var i = window, l = Ce(); l instanceof i.HTMLIFrameElement; ) {
      try {
        var m = typeof l.contentWindow.location.href == "string";
      } catch {
        m = !1;
      }
      if (m)
        i = l.contentWindow;
      else
        break;
      l = Ce(i.document);
    }
    return l;
  }
  function Oi(i) {
    var l = i && i.nodeName && i.nodeName.toLowerCase();
    return l && (l === "input" && (i.type === "text" || i.type === "search" || i.type === "tel" || i.type === "url" || i.type === "password") || l === "textarea" || i.contentEditable === "true");
  }
  function Kd(i) {
    var l = Gd(), m = i.focusedElem, C = i.selectionRange;
    if (l !== m && m && m.ownerDocument && vb(m.ownerDocument.documentElement, m)) {
      if (C !== null && Oi(m)) {
        if (l = C.start, i = C.end, i === void 0 && (i = l), "selectionStart" in m)
          m.selectionStart = l, m.selectionEnd = Math.min(i, m.value.length);
        else if (i = (l = m.ownerDocument || document) && l.defaultView || window, i.getSelection) {
          i = i.getSelection();
          var w = m.textContent.length, L = Math.min(C.start, w);
          C = C.end === void 0 ? L : Math.min(C.end, w), !i.extend && L > C && (w = C, C = L, L = w), w = hb(m, L);
          var W = hb(
            m,
            C
          );
          w && W && (i.rangeCount !== 1 || i.anchorNode !== w.node || i.anchorOffset !== w.offset || i.focusNode !== W.node || i.focusOffset !== W.offset) && (l = l.createRange(), l.setStart(w.node, w.offset), i.removeAllRanges(), L > C ? (i.addRange(l), i.extend(W.node, W.offset)) : (l.setEnd(W.node, W.offset), i.addRange(l)));
        }
      }
      for (l = [], i = m; i = i.parentNode; )
        i.nodeType === 1 && l.push({ element: i, left: i.scrollLeft, top: i.scrollTop });
      for (typeof m.focus == "function" && m.focus(), m = 0; m < l.length; m++)
        i = l[m], i.element.scrollLeft = i.left, i.element.scrollTop = i.top;
    }
  }
  var gb = h && "documentMode" in document && 11 >= document.documentMode, ja = null, Rm = null, xu = null, Em = !1;
  function bb(i, l, m) {
    var C = m.window === m ? m.document : m.nodeType === 9 ? m : m.ownerDocument;
    Em || ja == null || ja !== Ce(C) || (C = ja, "selectionStart" in C && Oi(C) ? C = { start: C.selectionStart, end: C.selectionEnd } : (C = (C.ownerDocument && C.ownerDocument.defaultView || window).getSelection(), C = { anchorNode: C.anchorNode, anchorOffset: C.anchorOffset, focusNode: C.focusNode, focusOffset: C.focusOffset }), xu && Tu(xu, C) || (xu = C, C = Eu(Rm, "onSelect"), 0 < C.length && (l = new Fd("onSelect", "select", null, l, m), i.push({ event: l, listeners: C }), l.target = ja)));
  }
  function Qd(i, l) {
    var m = {};
    return m[i.toLowerCase()] = l.toLowerCase(), m["Webkit" + i] = "webkit" + l, m["Moz" + i] = "moz" + l, m;
  }
  var el = { animationend: Qd("Animation", "AnimationEnd"), animationiteration: Qd("Animation", "AnimationIteration"), animationstart: Qd("Animation", "AnimationStart"), transitionend: Qd("Transition", "TransitionEnd") }, Om = {}, Pm = {};
  h && (Pm = document.createElement("div").style, "AnimationEvent" in window || (delete el.animationend.animation, delete el.animationiteration.animation, delete el.animationstart.animation), "TransitionEvent" in window || delete el.transitionend.transition);
  function Ho(i) {
    if (Om[i])
      return Om[i];
    if (!el[i])
      return i;
    var l = el[i], m;
    for (m in l)
      if (l.hasOwnProperty(m) && m in Pm)
        return Om[i] = l[m];
    return i;
  }
  var Dm = Ho("animationend"), yb = Ho("animationiteration"), Cb = Ho("animationstart"), Tb = Ho("transitionend"), xb = /* @__PURE__ */ new Map(), Sb = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
  function Pi(i, l) {
    xb.set(i, l), d(l, [i]);
  }
  for (var Su = 0; Su < Sb.length; Su++) {
    var tl = Sb[Su], Mx = tl.toLowerCase(), ku = tl[0].toUpperCase() + tl.slice(1);
    Pi(Mx, "on" + ku);
  }
  Pi(Dm, "onAnimationEnd"), Pi(yb, "onAnimationIteration"), Pi(Cb, "onAnimationStart"), Pi("dblclick", "onDoubleClick"), Pi("focusin", "onFocus"), Pi("focusout", "onBlur"), Pi(Tb, "onTransitionEnd"), p("onMouseEnter", ["mouseout", "mouseover"]), p("onMouseLeave", ["mouseout", "mouseover"]), p("onPointerEnter", ["pointerout", "pointerover"]), p("onPointerLeave", ["pointerout", "pointerover"]), d("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")), d("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")), d("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), d("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")), d("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")), d("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
  var wu = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), $x = new Set("cancel close invalid load scroll toggle".split(" ").concat(wu));
  function kb(i, l, m) {
    var C = i.type || "unknown-event";
    i.currentTarget = m, Co(C, l, void 0, i), i.currentTarget = null;
  }
  function Xd(i, l) {
    l = (l & 4) !== 0;
    for (var m = 0; m < i.length; m++) {
      var C = i[m], w = C.event;
      C = C.listeners;
      e: {
        var L = void 0;
        if (l)
          for (var W = C.length - 1; 0 <= W; W--) {
            var re = C[W], de = re.instance, Fe = re.currentTarget;
            if (re = re.listener, de !== L && w.isPropagationStopped())
              break e;
            kb(w, re, Fe), L = de;
          }
        else
          for (W = 0; W < C.length; W++) {
            if (re = C[W], de = re.instance, Fe = re.currentTarget, re = re.listener, de !== L && w.isPropagationStopped())
              break e;
            kb(w, re, Fe), L = de;
          }
      }
    }
    if (zo)
      throw i = Fo, zo = !1, Fo = null, i;
  }
  function Un(i, l) {
    var m = l[_m];
    m === void 0 && (m = l[_m] = /* @__PURE__ */ new Set());
    var C = i + "__bubble";
    m.has(C) || (wb(l, i, 2, !1), m.add(C));
  }
  function ds(i, l, m) {
    var C = 0;
    l && (C |= 4), wb(m, i, C, l);
  }
  var Di = "_reactListening" + Math.random().toString(36).slice(2);
  function ac(i) {
    if (!i[Di]) {
      i[Di] = !0, s.forEach(function(m) {
        m !== "selectionchange" && ($x.has(m) || ds(m, !1, i), ds(m, !0, i));
      });
      var l = i.nodeType === 9 ? i : i.ownerDocument;
      l === null || l[Di] || (l[Di] = !0, ds("selectionchange", !1, l));
    }
  }
  function wb(i, l, m, C) {
    switch (mm(l)) {
      case 1:
        var w = qg;
        break;
      case 4:
        w = Vd;
        break;
      default:
        w = Bd;
    }
    m = w.bind(null, l, m, i), w = void 0, !wn || l !== "touchstart" && l !== "touchmove" && l !== "wheel" || (w = !0), C ? w !== void 0 ? i.addEventListener(l, m, { capture: !0, passive: w }) : i.addEventListener(l, m, !0) : w !== void 0 ? i.addEventListener(l, m, { passive: w }) : i.addEventListener(l, m, !1);
  }
  function Zd(i, l, m, C, w) {
    var L = C;
    if (!(l & 1) && !(l & 2) && C !== null)
      e:
        for (; ; ) {
          if (C === null)
            return;
          var W = C.tag;
          if (W === 3 || W === 4) {
            var re = C.stateNode.containerInfo;
            if (re === w || re.nodeType === 8 && re.parentNode === w)
              break;
            if (W === 4)
              for (W = C.return; W !== null; ) {
                var de = W.tag;
                if ((de === 3 || de === 4) && (de = W.stateNode.containerInfo, de === w || de.nodeType === 8 && de.parentNode === w))
                  return;
                W = W.return;
              }
            for (; re !== null; ) {
              if (W = ga(re), W === null)
                return;
              if (de = W.tag, de === 5 || de === 6) {
                C = L = W;
                continue e;
              }
              re = re.parentNode;
            }
          }
          C = C.return;
        }
    Bo(function() {
      var Fe = L, ut = Lt(m), ft = [];
      e: {
        var ct = xb.get(i);
        if (ct !== void 0) {
          var Et = Fd, It = i;
          switch (i) {
            case "keypress":
              if (Zl(m) === 0)
                break e;
            case "keydown":
            case "keyup":
              Et = Sx;
              break;
            case "focusin":
              It = "focus", Et = us;
              break;
            case "focusout":
              It = "blur", Et = us;
              break;
            case "beforeblur":
            case "afterblur":
              Et = us;
              break;
            case "click":
              if (m.button === 2)
                break e;
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
              Et = Ud;
              break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
              Et = Xg;
              break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
              Et = kx;
              break;
            case Dm:
            case yb:
            case Cb:
              Et = Zg;
              break;
            case Tb:
              Et = nb;
              break;
            case "scroll":
              Et = Kg;
              break;
            case "wheel":
              Et = Ei;
              break;
            case "copy":
            case "cut":
            case "paste":
              Et = Tx;
              break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
              Et = Hd;
          }
          var Vt = (l & 4) !== 0, bo = !Vt && i === "scroll", De = Vt ? ct !== null ? ct + "Capture" : null : ct;
          Vt = [];
          for (var be = Fe, Ne; be !== null; ) {
            Ne = be;
            var gt = Ne.stateNode;
            if (Ne.tag === 5 && gt !== null && (Ne = gt, De !== null && (gt = Ln(be, De), gt != null && Vt.push(Ru(be, gt, Ne)))), bo)
              break;
            be = be.return;
          }
          0 < Vt.length && (ct = new Et(ct, It, null, m, ut), ft.push({ event: ct, listeners: Vt }));
        }
      }
      if (!(l & 7)) {
        e: {
          if (ct = i === "mouseover" || i === "pointerover", Et = i === "mouseout" || i === "pointerout", ct && m !== $t && (It = m.relatedTarget || m.fromElement) && (ga(It) || It[Mi]))
            break e;
          if ((Et || ct) && (ct = ut.window === ut ? ut : (ct = ut.ownerDocument) ? ct.defaultView || ct.parentWindow : window, Et ? (It = m.relatedTarget || m.toElement, Et = Fe, It = It ? ga(It) : null, It !== null && (bo = Ge(It), It !== bo || It.tag !== 5 && It.tag !== 6) && (It = null)) : (Et = null, It = Fe), Et !== It)) {
            if (Vt = Ud, gt = "onMouseLeave", De = "onMouseEnter", be = "mouse", (i === "pointerout" || i === "pointerover") && (Vt = Hd, gt = "onPointerLeave", De = "onPointerEnter", be = "pointer"), bo = Et == null ? ct : ic(Et), Ne = It == null ? ct : ic(It), ct = new Vt(gt, be + "leave", Et, m, ut), ct.target = bo, ct.relatedTarget = Ne, gt = null, ga(ut) === Fe && (Vt = new Vt(De, be + "enter", It, m, ut), Vt.target = Ne, Vt.relatedTarget = bo, gt = Vt), bo = gt, Et && It)
              t: {
                for (Vt = Et, De = It, be = 0, Ne = Vt; Ne; Ne = nl(Ne))
                  be++;
                for (Ne = 0, gt = De; gt; gt = nl(gt))
                  Ne++;
                for (; 0 < be - Ne; )
                  Vt = nl(Vt), be--;
                for (; 0 < Ne - be; )
                  De = nl(De), Ne--;
                for (; be--; ) {
                  if (Vt === De || De !== null && Vt === De.alternate)
                    break t;
                  Vt = nl(Vt), De = nl(De);
                }
                Vt = null;
              }
            else
              Vt = null;
            Et !== null && Mm(ft, ct, Et, Vt, !1), It !== null && bo !== null && Mm(ft, bo, It, Vt, !0);
          }
        }
        e: {
          if (ct = Fe ? ic(Fe) : window, Et = ct.nodeName && ct.nodeName.toLowerCase(), Et === "select" || Et === "input" && ct.type === "file")
            var Bt = cb;
          else if (sb(ct))
            if (Sm)
              Bt = fb;
            else {
              Bt = Ox;
              var At = Ex;
            }
          else
            (Et = ct.nodeName) && Et.toLowerCase() === "input" && (ct.type === "checkbox" || ct.type === "radio") && (Bt = Px);
          if (Bt && (Bt = Bt(i, Fe))) {
            lb(ft, Bt, m, ut);
            break e;
          }
          At && At(i, ct, Fe), i === "focusout" && (At = ct._wrapperState) && At.controlled && ct.type === "number" && dt(ct, "number", ct.value);
        }
        switch (At = Fe ? ic(Fe) : window, i) {
          case "focusin":
            (sb(At) || At.contentEditable === "true") && (ja = At, Rm = Fe, xu = null);
            break;
          case "focusout":
            xu = Rm = ja = null;
            break;
          case "mousedown":
            Em = !0;
            break;
          case "contextmenu":
          case "mouseup":
          case "dragend":
            Em = !1, bb(ft, m, ut);
            break;
          case "selectionchange":
            if (gb)
              break;
          case "keydown":
          case "keyup":
            bb(ft, m, ut);
        }
        var Ft;
        if (Fa)
          e: {
            switch (i) {
              case "compositionstart":
                var Xt = "onCompositionStart";
                break e;
              case "compositionend":
                Xt = "onCompositionEnd";
                break e;
              case "compositionupdate":
                Xt = "onCompositionUpdate";
                break e;
            }
            Xt = void 0;
          }
        else
          tc ? ab(i, m) && (Xt = "onCompositionEnd") : i === "keydown" && m.keyCode === 229 && (Xt = "onCompositionStart");
        Xt && (ob && m.locale !== "ko" && (tc || Xt !== "onCompositionStart" ? Xt === "onCompositionEnd" && tc && (Ft = hm()) : (wi = ut, vu = "value" in wi ? wi.value : wi.textContent, tc = !0)), At = Eu(Fe, Xt), 0 < At.length && (Xt = new bm(Xt, i, null, m, ut), ft.push({ event: Xt, listeners: At }), Ft ? Xt.data = Ft : (Ft = qd(m), Ft !== null && (Xt.data = Ft)))), (Ft = Yd ? wx(i, m) : Rx(i, m)) && (Fe = Eu(Fe, "onBeforeInput"), 0 < Fe.length && (ut = new bm("onBeforeInput", "beforeinput", null, m, ut), ft.push({ event: ut, listeners: Fe }), ut.data = Ft));
      }
      Xd(ft, l);
    });
  }
  function Ru(i, l, m) {
    return { instance: i, listener: l, currentTarget: m };
  }
  function Eu(i, l) {
    for (var m = l + "Capture", C = []; i !== null; ) {
      var w = i, L = w.stateNode;
      w.tag === 5 && L !== null && (w = L, L = Ln(i, m), L != null && C.unshift(Ru(i, L, w)), L = Ln(i, l), L != null && C.push(Ru(i, L, w))), i = i.return;
    }
    return C;
  }
  function nl(i) {
    if (i === null)
      return null;
    do
      i = i.return;
    while (i && i.tag !== 5);
    return i || null;
  }
  function Mm(i, l, m, C, w) {
    for (var L = l._reactName, W = []; m !== null && m !== C; ) {
      var re = m, de = re.alternate, Fe = re.stateNode;
      if (de !== null && de === C)
        break;
      re.tag === 5 && Fe !== null && (re = Fe, w ? (de = Ln(m, L), de != null && W.unshift(Ru(m, de, re))) : w || (de = Ln(m, L), de != null && W.push(Ru(m, de, re)))), m = m.return;
    }
    W.length !== 0 && i.push({ event: l, listeners: W });
  }
  var $m = /\r\n?/g, Nx = /\u0000|\uFFFD/g;
  function Nm(i) {
    return (typeof i == "string" ? i : "" + i).replace($m, `
`).replace(Nx, "");
  }
  function Jd(i, l, m) {
    if (l = Nm(l), Nm(i) !== l && m)
      throw Error(a(425));
  }
  function ep() {
  }
  var Lm = null, ol = null;
  function Ou(i, l) {
    return i === "textarea" || i === "noscript" || typeof l.children == "string" || typeof l.children == "number" || typeof l.dangerouslySetInnerHTML == "object" && l.dangerouslySetInnerHTML !== null && l.dangerouslySetInnerHTML.__html != null;
  }
  var rl = typeof setTimeout == "function" ? setTimeout : void 0, Rb = typeof clearTimeout == "function" ? clearTimeout : void 0, Im = typeof Promise == "function" ? Promise : void 0, Am = typeof queueMicrotask == "function" ? queueMicrotask : typeof Im < "u" ? function(i) {
    return Im.resolve(null).then(i).catch(Lx);
  } : rl;
  function Lx(i) {
    setTimeout(function() {
      throw i;
    });
  }
  function ps(i, l) {
    var m = l, C = 0;
    do {
      var w = m.nextSibling;
      if (i.removeChild(m), w && w.nodeType === 8)
        if (m = w.data, m === "/$") {
          if (C === 0) {
            i.removeChild(w), mu(l);
            return;
          }
          C--;
        } else
          m !== "$" && m !== "$?" && m !== "$!" || C++;
      m = w;
    } while (m);
    mu(l);
  }
  function Ua(i) {
    for (; i != null; i = i.nextSibling) {
      var l = i.nodeType;
      if (l === 1 || l === 3)
        break;
      if (l === 8) {
        if (l = i.data, l === "$" || l === "$!" || l === "$?")
          break;
        if (l === "/$")
          return null;
      }
    }
    return i;
  }
  function Pu(i) {
    i = i.previousSibling;
    for (var l = 0; i; ) {
      if (i.nodeType === 8) {
        var m = i.data;
        if (m === "$" || m === "$!" || m === "$?") {
          if (l === 0)
            return i;
          l--;
        } else
          m === "/$" && l++;
      }
      i = i.previousSibling;
    }
    return null;
  }
  var fs = Math.random().toString(36).slice(2), oi = "__reactFiber$" + fs, al = "__reactProps$" + fs, Mi = "__reactContainer$" + fs, _m = "__reactEvents$" + fs, Ix = "__reactListeners$" + fs, Vm = "__reactHandles$" + fs;
  function ga(i) {
    var l = i[oi];
    if (l)
      return l;
    for (var m = i.parentNode; m; ) {
      if (l = m[Mi] || m[oi]) {
        if (m = l.alternate, l.child !== null || m !== null && m.child !== null)
          for (i = Pu(i); i !== null; ) {
            if (m = i[oi])
              return m;
            i = Pu(i);
          }
        return l;
      }
      i = m, m = i.parentNode;
    }
    return null;
  }
  function Du(i) {
    return i = i[oi] || i[Mi], !i || i.tag !== 5 && i.tag !== 6 && i.tag !== 13 && i.tag !== 3 ? null : i;
  }
  function ic(i) {
    if (i.tag === 5 || i.tag === 6)
      return i.stateNode;
    throw Error(a(33));
  }
  function jt(i) {
    return i[al] || null;
  }
  var ms = [], Gn = -1;
  function an(i) {
    return { current: i };
  }
  function Rn(i) {
    0 > Gn || (i.current = ms[Gn], ms[Gn] = null, Gn--);
  }
  function On(i, l) {
    Gn++, ms[Gn] = i.current, i.current = l;
  }
  var ri = {}, Qt = an(ri), po = an(!1), Ir = ri;
  function ba(i, l) {
    var m = i.type.contextTypes;
    if (!m)
      return ri;
    var C = i.stateNode;
    if (C && C.__reactInternalMemoizedUnmaskedChildContext === l)
      return C.__reactInternalMemoizedMaskedChildContext;
    var w = {}, L;
    for (L in m)
      w[L] = l[L];
    return C && (i = i.stateNode, i.__reactInternalMemoizedUnmaskedChildContext = l, i.__reactInternalMemoizedMaskedChildContext = w), w;
  }
  function no(i) {
    return i = i.childContextTypes, i != null;
  }
  function ya() {
    Rn(po), Rn(Qt);
  }
  function hs(i, l, m) {
    if (Qt.current !== ri)
      throw Error(a(168));
    On(Qt, l), On(po, m);
  }
  function Mu(i, l, m) {
    var C = i.stateNode;
    if (l = l.childContextTypes, typeof C.getChildContext != "function")
      return m;
    C = C.getChildContext();
    for (var w in C)
      if (!(w in l))
        throw Error(a(108, Se(i) || "Unknown", w));
    return se({}, m, C);
  }
  function tp(i) {
    return i = (i = i.stateNode) && i.__reactInternalMemoizedMergedChildContext || ri, Ir = Qt.current, On(Qt, i), On(po, po.current), !0;
  }
  function Eb(i, l, m) {
    var C = i.stateNode;
    if (!C)
      throw Error(a(169));
    m ? (i = Mu(i, l, Ir), C.__reactInternalMemoizedMergedChildContext = i, Rn(po), Rn(Qt), On(Qt, i)) : Rn(po), On(po, m);
  }
  var ea = null, Wo = !1, $u = !1;
  function Bm(i) {
    ea === null ? ea = [i] : ea.push(i);
  }
  function zm(i) {
    Wo = !0, Bm(i);
  }
  function Ar() {
    if (!$u && ea !== null) {
      $u = !0;
      var i = 0, l = Mn;
      try {
        var m = ea;
        for (Mn = 1; i < m.length; i++) {
          var C = m[i];
          do
            C = C(!0);
          while (C !== null);
        }
        ea = null, Wo = !1;
      } catch (w) {
        throw ea !== null && (ea = ea.slice(i + 1)), pn(ki, Ar), w;
      } finally {
        Mn = l, $u = !1;
      }
    }
    return null;
  }
  var vs = [], _r = 0, il = null, sc = 0, Vr = [], hr = 0, Ca = null, er = 1, $i = "";
  function ta(i, l) {
    vs[_r++] = sc, vs[_r++] = il, il = i, sc = l;
  }
  function Fm(i, l, m) {
    Vr[hr++] = er, Vr[hr++] = $i, Vr[hr++] = Ca, Ca = i;
    var C = er;
    i = $i;
    var w = 32 - fa(C) - 1;
    C &= ~(1 << w), m += 1;
    var L = 32 - fa(l) + w;
    if (30 < L) {
      var W = w - w % 5;
      L = (C & (1 << W) - 1).toString(32), C >>= W, w -= W, er = 1 << 32 - fa(l) + w | m << w | C, $i = L + i;
    } else
      er = 1 << L | m << w | C, $i = i;
  }
  function np(i) {
    i.return !== null && (ta(i, 1), Fm(i, 1, 0));
  }
  function jm(i) {
    for (; i === il; )
      il = vs[--_r], vs[_r] = null, sc = vs[--_r], vs[_r] = null;
    for (; i === Ca; )
      Ca = Vr[--hr], Vr[hr] = null, $i = Vr[--hr], Vr[hr] = null, er = Vr[--hr], Vr[hr] = null;
  }
  var na = null, Br = null, Kn = !1, Ta = null;
  function Um(i, l) {
    var m = Ea(5, null, null, 0);
    m.elementType = "DELETED", m.stateNode = l, m.return = i, l = i.deletions, l === null ? (i.deletions = [m], i.flags |= 16) : l.push(m);
  }
  function Ob(i, l) {
    switch (i.tag) {
      case 5:
        var m = i.type;
        return l = l.nodeType !== 1 || m.toLowerCase() !== l.nodeName.toLowerCase() ? null : l, l !== null ? (i.stateNode = l, na = i, Br = Ua(l.firstChild), !0) : !1;
      case 6:
        return l = i.pendingProps === "" || l.nodeType !== 3 ? null : l, l !== null ? (i.stateNode = l, na = i, Br = null, !0) : !1;
      case 13:
        return l = l.nodeType !== 8 ? null : l, l !== null ? (m = Ca !== null ? { id: er, overflow: $i } : null, i.memoizedState = { dehydrated: l, treeContext: m, retryLane: 1073741824 }, m = Ea(18, null, null, 0), m.stateNode = l, m.return = i, i.child = m, na = i, Br = null, !0) : !1;
      default:
        return !1;
    }
  }
  function op(i) {
    return (i.mode & 1) !== 0 && (i.flags & 128) === 0;
  }
  function rp(i) {
    if (Kn) {
      var l = Br;
      if (l) {
        var m = l;
        if (!Ob(i, l)) {
          if (op(i))
            throw Error(a(418));
          l = Ua(m.nextSibling);
          var C = na;
          l && Ob(i, l) ? Um(C, m) : (i.flags = i.flags & -4097 | 2, Kn = !1, na = i);
        }
      } else {
        if (op(i))
          throw Error(a(418));
        i.flags = i.flags & -4097 | 2, Kn = !1, na = i;
      }
    }
  }
  function Pb(i) {
    for (i = i.return; i !== null && i.tag !== 5 && i.tag !== 3 && i.tag !== 13; )
      i = i.return;
    na = i;
  }
  function ap(i) {
    if (i !== na)
      return !1;
    if (!Kn)
      return Pb(i), Kn = !0, !1;
    var l;
    if ((l = i.tag !== 3) && !(l = i.tag !== 5) && (l = i.type, l = l !== "head" && l !== "body" && !Ou(i.type, i.memoizedProps)), l && (l = Br)) {
      if (op(i))
        throw Db(), Error(a(418));
      for (; l; )
        Um(i, l), l = Ua(l.nextSibling);
    }
    if (Pb(i), i.tag === 13) {
      if (i = i.memoizedState, i = i !== null ? i.dehydrated : null, !i)
        throw Error(a(317));
      e: {
        for (i = i.nextSibling, l = 0; i; ) {
          if (i.nodeType === 8) {
            var m = i.data;
            if (m === "/$") {
              if (l === 0) {
                Br = Ua(i.nextSibling);
                break e;
              }
              l--;
            } else
              m !== "$" && m !== "$!" && m !== "$?" || l++;
          }
          i = i.nextSibling;
        }
        Br = null;
      }
    } else
      Br = na ? Ua(i.stateNode.nextSibling) : null;
    return !0;
  }
  function Db() {
    for (var i = Br; i; )
      i = Ua(i.nextSibling);
  }
  function io() {
    Br = na = null, Kn = !1;
  }
  function Hm(i) {
    Ta === null ? Ta = [i] : Ta.push(i);
  }
  var ip = z.ReactCurrentBatchConfig;
  function oa(i, l) {
    if (i && i.defaultProps) {
      l = se({}, l), i = i.defaultProps;
      for (var m in i)
        l[m] === void 0 && (l[m] = i[m]);
      return l;
    }
    return l;
  }
  var ai = an(null), sp = null, gs = null, Wm = null;
  function Ym() {
    Wm = gs = sp = null;
  }
  function bs(i) {
    var l = ai.current;
    Rn(ai), i._currentValue = l;
  }
  function Yo(i, l, m) {
    for (; i !== null; ) {
      var C = i.alternate;
      if ((i.childLanes & l) !== l ? (i.childLanes |= l, C !== null && (C.childLanes |= l)) : C !== null && (C.childLanes & l) !== l && (C.childLanes |= l), i === m)
        break;
      i = i.return;
    }
  }
  function xt(i, l) {
    sp = i, Wm = gs = null, i = i.dependencies, i !== null && i.firstContext !== null && (i.lanes & l && (So = !0), i.firstContext = null);
  }
  function go(i) {
    var l = i._currentValue;
    if (Wm !== i)
      if (i = { context: i, memoizedValue: l, next: null }, gs === null) {
        if (sp === null)
          throw Error(a(308));
        gs = i, sp.dependencies = { lanes: 0, firstContext: i };
      } else
        gs = gs.next = i;
    return l;
  }
  var tr = null;
  function qm(i) {
    tr === null ? tr = [i] : tr.push(i);
  }
  function Mb(i, l, m, C) {
    var w = l.interleaved;
    return w === null ? (m.next = m, qm(l)) : (m.next = w.next, w.next = m), l.interleaved = m, Ni(i, C);
  }
  function Ni(i, l) {
    i.lanes |= l;
    var m = i.alternate;
    for (m !== null && (m.lanes |= l), m = i, i = i.return; i !== null; )
      i.childLanes |= l, m = i.alternate, m !== null && (m.childLanes |= l), m = i, i = i.return;
    return m.tag === 3 ? m.stateNode : null;
  }
  var ys = !1;
  function Gm(i) {
    i.updateQueue = { baseState: i.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
  }
  function $o(i, l) {
    i = i.updateQueue, l.updateQueue === i && (l.updateQueue = { baseState: i.baseState, firstBaseUpdate: i.firstBaseUpdate, lastBaseUpdate: i.lastBaseUpdate, shared: i.shared, effects: i.effects });
  }
  function Li(i, l) {
    return { eventTime: i, lane: l, tag: 0, payload: null, callback: null, next: null };
  }
  function Cs(i, l, m) {
    var C = i.updateQueue;
    if (C === null)
      return null;
    if (C = C.shared, mn & 2) {
      var w = C.pending;
      return w === null ? l.next = l : (l.next = w.next, w.next = l), C.pending = l, Ni(i, m);
    }
    return w = C.interleaved, w === null ? (l.next = l, qm(C)) : (l.next = w.next, w.next = l), C.interleaved = l, Ni(i, m);
  }
  function lp(i, l, m) {
    if (l = l.updateQueue, l !== null && (l = l.shared, (m & 4194240) !== 0)) {
      var C = l.lanes;
      C &= i.pendingLanes, m |= C, l.lanes = m, uu(i, m);
    }
  }
  function Km(i, l) {
    var m = i.updateQueue, C = i.alternate;
    if (C !== null && (C = C.updateQueue, m === C)) {
      var w = null, L = null;
      if (m = m.firstBaseUpdate, m !== null) {
        do {
          var W = { eventTime: m.eventTime, lane: m.lane, tag: m.tag, payload: m.payload, callback: m.callback, next: null };
          L === null ? w = L = W : L = L.next = W, m = m.next;
        } while (m !== null);
        L === null ? w = L = l : L = L.next = l;
      } else
        w = L = l;
      m = { baseState: C.baseState, firstBaseUpdate: w, lastBaseUpdate: L, shared: C.shared, effects: C.effects }, i.updateQueue = m;
      return;
    }
    i = m.lastBaseUpdate, i === null ? m.firstBaseUpdate = l : i.next = l, m.lastBaseUpdate = l;
  }
  function Ts(i, l, m, C) {
    var w = i.updateQueue;
    ys = !1;
    var L = w.firstBaseUpdate, W = w.lastBaseUpdate, re = w.shared.pending;
    if (re !== null) {
      w.shared.pending = null;
      var de = re, Fe = de.next;
      de.next = null, W === null ? L = Fe : W.next = Fe, W = de;
      var ut = i.alternate;
      ut !== null && (ut = ut.updateQueue, re = ut.lastBaseUpdate, re !== W && (re === null ? ut.firstBaseUpdate = Fe : re.next = Fe, ut.lastBaseUpdate = de));
    }
    if (L !== null) {
      var ft = w.baseState;
      W = 0, ut = Fe = de = null, re = L;
      do {
        var ct = re.lane, Et = re.eventTime;
        if ((C & ct) === ct) {
          ut !== null && (ut = ut.next = {
            eventTime: Et,
            lane: 0,
            tag: re.tag,
            payload: re.payload,
            callback: re.callback,
            next: null
          });
          e: {
            var It = i, Vt = re;
            switch (ct = l, Et = m, Vt.tag) {
              case 1:
                if (It = Vt.payload, typeof It == "function") {
                  ft = It.call(Et, ft, ct);
                  break e;
                }
                ft = It;
                break e;
              case 3:
                It.flags = It.flags & -65537 | 128;
              case 0:
                if (It = Vt.payload, ct = typeof It == "function" ? It.call(Et, ft, ct) : It, ct == null)
                  break e;
                ft = se({}, ft, ct);
                break e;
              case 2:
                ys = !0;
            }
          }
          re.callback !== null && re.lane !== 0 && (i.flags |= 64, ct = w.effects, ct === null ? w.effects = [re] : ct.push(re));
        } else
          Et = { eventTime: Et, lane: ct, tag: re.tag, payload: re.payload, callback: re.callback, next: null }, ut === null ? (Fe = ut = Et, de = ft) : ut = ut.next = Et, W |= ct;
        if (re = re.next, re === null) {
          if (re = w.shared.pending, re === null)
            break;
          ct = re, re = ct.next, ct.next = null, w.lastBaseUpdate = ct, w.shared.pending = null;
        }
      } while (1);
      if (ut === null && (de = ft), w.baseState = de, w.firstBaseUpdate = Fe, w.lastBaseUpdate = ut, l = w.shared.interleaved, l !== null) {
        w = l;
        do
          W |= w.lane, w = w.next;
        while (w !== l);
      } else
        L === null && (w.shared.lanes = 0);
      Vi |= W, i.lanes = W, i.memoizedState = ft;
    }
  }
  function sl(i, l, m) {
    if (i = l.effects, l.effects = null, i !== null)
      for (l = 0; l < i.length; l++) {
        var C = i[l], w = C.callback;
        if (w !== null) {
          if (C.callback = null, C = m, typeof w != "function")
            throw Error(a(191, w));
          w.call(C);
        }
      }
  }
  var $b = new e.Component().refs;
  function Qm(i, l, m, C) {
    l = i.memoizedState, m = m(C, l), m = m == null ? l : se({}, l, m), i.memoizedState = m, i.lanes === 0 && (i.updateQueue.baseState = m);
  }
  var cp = { isMounted: function(i) {
    return (i = i._reactInternals) ? Ge(i) === i : !1;
  }, enqueueSetState: function(i, l, m) {
    i = i._reactInternals;
    var C = yr(), w = ko(i), L = Li(C, w);
    L.payload = l, m != null && (L.callback = m), l = Cs(i, L, w), l !== null && (Cr(l, i, w, C), lp(l, i, w));
  }, enqueueReplaceState: function(i, l, m) {
    i = i._reactInternals;
    var C = yr(), w = ko(i), L = Li(C, w);
    L.tag = 1, L.payload = l, m != null && (L.callback = m), l = Cs(i, L, w), l !== null && (Cr(l, i, w, C), lp(l, i, w));
  }, enqueueForceUpdate: function(i, l) {
    i = i._reactInternals;
    var m = yr(), C = ko(i), w = Li(m, C);
    w.tag = 2, l != null && (w.callback = l), l = Cs(i, w, C), l !== null && (Cr(l, i, C, m), lp(l, i, C));
  } };
  function Nb(i, l, m, C, w, L, W) {
    return i = i.stateNode, typeof i.shouldComponentUpdate == "function" ? i.shouldComponentUpdate(C, L, W) : l.prototype && l.prototype.isPureReactComponent ? !Tu(m, C) || !Tu(w, L) : !0;
  }
  function Lb(i, l, m) {
    var C = !1, w = ri, L = l.contextType;
    return typeof L == "object" && L !== null ? L = go(L) : (w = no(l) ? Ir : Qt.current, C = l.contextTypes, L = (C = C != null) ? ba(i, w) : ri), l = new l(m, L), i.memoizedState = l.state !== null && l.state !== void 0 ? l.state : null, l.updater = cp, i.stateNode = l, l._reactInternals = i, C && (i = i.stateNode, i.__reactInternalMemoizedUnmaskedChildContext = w, i.__reactInternalMemoizedMaskedChildContext = L), l;
  }
  function Ib(i, l, m, C) {
    i = l.state, typeof l.componentWillReceiveProps == "function" && l.componentWillReceiveProps(m, C), typeof l.UNSAFE_componentWillReceiveProps == "function" && l.UNSAFE_componentWillReceiveProps(m, C), l.state !== i && cp.enqueueReplaceState(l, l.state, null);
  }
  function up(i, l, m, C) {
    var w = i.stateNode;
    w.props = m, w.state = i.memoizedState, w.refs = $b, Gm(i);
    var L = l.contextType;
    typeof L == "object" && L !== null ? w.context = go(L) : (L = no(l) ? Ir : Qt.current, w.context = ba(i, L)), w.state = i.memoizedState, L = l.getDerivedStateFromProps, typeof L == "function" && (Qm(i, l, L, m), w.state = i.memoizedState), typeof l.getDerivedStateFromProps == "function" || typeof w.getSnapshotBeforeUpdate == "function" || typeof w.UNSAFE_componentWillMount != "function" && typeof w.componentWillMount != "function" || (l = w.state, typeof w.componentWillMount == "function" && w.componentWillMount(), typeof w.UNSAFE_componentWillMount == "function" && w.UNSAFE_componentWillMount(), l !== w.state && cp.enqueueReplaceState(w, w.state, null), Ts(i, m, w, C), w.state = i.memoizedState), typeof w.componentDidMount == "function" && (i.flags |= 4194308);
  }
  function lc(i, l, m) {
    if (i = m.ref, i !== null && typeof i != "function" && typeof i != "object") {
      if (m._owner) {
        if (m = m._owner, m) {
          if (m.tag !== 1)
            throw Error(a(309));
          var C = m.stateNode;
        }
        if (!C)
          throw Error(a(147, i));
        var w = C, L = "" + i;
        return l !== null && l.ref !== null && typeof l.ref == "function" && l.ref._stringRef === L ? l.ref : (l = function(W) {
          var re = w.refs;
          re === $b && (re = w.refs = {}), W === null ? delete re[L] : re[L] = W;
        }, l._stringRef = L, l);
      }
      if (typeof i != "string")
        throw Error(a(284));
      if (!m._owner)
        throw Error(a(290, i));
    }
    return i;
  }
  function dp(i, l) {
    throw i = Object.prototype.toString.call(l), Error(a(31, i === "[object Object]" ? "object with keys {" + Object.keys(l).join(", ") + "}" : i));
  }
  function Ab(i) {
    var l = i._init;
    return l(i._payload);
  }
  function _b(i) {
    function l(De, be) {
      if (i) {
        var Ne = De.deletions;
        Ne === null ? (De.deletions = [be], De.flags |= 16) : Ne.push(be);
      }
    }
    function m(De, be) {
      if (!i)
        return null;
      for (; be !== null; )
        l(De, be), be = be.sibling;
      return null;
    }
    function C(De, be) {
      for (De = /* @__PURE__ */ new Map(); be !== null; )
        be.key !== null ? De.set(be.key, be) : De.set(be.index, be), be = be.sibling;
      return De;
    }
    function w(De, be) {
      return De = Ps(De, be), De.index = 0, De.sibling = null, De;
    }
    function L(De, be, Ne) {
      return De.index = Ne, i ? (Ne = De.alternate, Ne !== null ? (Ne = Ne.index, Ne < be ? (De.flags |= 2, be) : Ne) : (De.flags |= 2, be)) : (De.flags |= 1048576, be);
    }
    function W(De) {
      return i && De.alternate === null && (De.flags |= 2), De;
    }
    function re(De, be, Ne, gt) {
      return be === null || be.tag !== 6 ? (be = Xu(Ne, De.mode, gt), be.return = De, be) : (be = w(be, Ne), be.return = De, be);
    }
    function de(De, be, Ne, gt) {
      var Bt = Ne.type;
      return Bt === F ? ut(De, be, Ne.props.children, gt, Ne.key) : be !== null && (be.elementType === Bt || typeof Bt == "object" && Bt !== null && Bt.$$typeof === oe && Ab(Bt) === be.type) ? (gt = w(be, Ne.props), gt.ref = lc(De, be, Ne), gt.return = De, gt) : (gt = Up(Ne.type, Ne.key, Ne.props, null, De.mode, gt), gt.ref = lc(De, be, Ne), gt.return = De, gt);
    }
    function Fe(De, be, Ne, gt) {
      return be === null || be.tag !== 4 || be.stateNode.containerInfo !== Ne.containerInfo || be.stateNode.implementation !== Ne.implementation ? (be = Rl(Ne, De.mode, gt), be.return = De, be) : (be = w(be, Ne.children || []), be.return = De, be);
    }
    function ut(De, be, Ne, gt, Bt) {
      return be === null || be.tag !== 7 ? (be = wl(Ne, De.mode, gt, Bt), be.return = De, be) : (be = w(be, Ne), be.return = De, be);
    }
    function ft(De, be, Ne) {
      if (typeof be == "string" && be !== "" || typeof be == "number")
        return be = Xu("" + be, De.mode, Ne), be.return = De, be;
      if (typeof be == "object" && be !== null) {
        switch (be.$$typeof) {
          case B:
            return Ne = Up(be.type, be.key, be.props, null, De.mode, Ne), Ne.ref = lc(De, null, be), Ne.return = De, Ne;
          case P:
            return be = Rl(be, De.mode, Ne), be.return = De, be;
          case oe:
            var gt = be._init;
            return ft(De, gt(be._payload), Ne);
        }
        if (ge(be) || ne(be))
          return be = wl(be, De.mode, Ne, null), be.return = De, be;
        dp(De, be);
      }
      return null;
    }
    function ct(De, be, Ne, gt) {
      var Bt = be !== null ? be.key : null;
      if (typeof Ne == "string" && Ne !== "" || typeof Ne == "number")
        return Bt !== null ? null : re(De, be, "" + Ne, gt);
      if (typeof Ne == "object" && Ne !== null) {
        switch (Ne.$$typeof) {
          case B:
            return Ne.key === Bt ? de(De, be, Ne, gt) : null;
          case P:
            return Ne.key === Bt ? Fe(De, be, Ne, gt) : null;
          case oe:
            return Bt = Ne._init, ct(
              De,
              be,
              Bt(Ne._payload),
              gt
            );
        }
        if (ge(Ne) || ne(Ne))
          return Bt !== null ? null : ut(De, be, Ne, gt, null);
        dp(De, Ne);
      }
      return null;
    }
    function Et(De, be, Ne, gt, Bt) {
      if (typeof gt == "string" && gt !== "" || typeof gt == "number")
        return De = De.get(Ne) || null, re(be, De, "" + gt, Bt);
      if (typeof gt == "object" && gt !== null) {
        switch (gt.$$typeof) {
          case B:
            return De = De.get(gt.key === null ? Ne : gt.key) || null, de(be, De, gt, Bt);
          case P:
            return De = De.get(gt.key === null ? Ne : gt.key) || null, Fe(be, De, gt, Bt);
          case oe:
            var At = gt._init;
            return Et(De, be, Ne, At(gt._payload), Bt);
        }
        if (ge(gt) || ne(gt))
          return De = De.get(Ne) || null, ut(be, De, gt, Bt, null);
        dp(be, gt);
      }
      return null;
    }
    function It(De, be, Ne, gt) {
      for (var Bt = null, At = null, Ft = be, Xt = be = 0, Ko = null; Ft !== null && Xt < Ne.length; Xt++) {
        Ft.index > Xt ? (Ko = Ft, Ft = null) : Ko = Ft.sibling;
        var Cn = ct(De, Ft, Ne[Xt], gt);
        if (Cn === null) {
          Ft === null && (Ft = Ko);
          break;
        }
        i && Ft && Cn.alternate === null && l(De, Ft), be = L(Cn, be, Xt), At === null ? Bt = Cn : At.sibling = Cn, At = Cn, Ft = Ko;
      }
      if (Xt === Ne.length)
        return m(De, Ft), Kn && ta(De, Xt), Bt;
      if (Ft === null) {
        for (; Xt < Ne.length; Xt++)
          Ft = ft(De, Ne[Xt], gt), Ft !== null && (be = L(Ft, be, Xt), At === null ? Bt = Ft : At.sibling = Ft, At = Ft);
        return Kn && ta(De, Xt), Bt;
      }
      for (Ft = C(De, Ft); Xt < Ne.length; Xt++)
        Ko = Et(Ft, De, Xt, Ne[Xt], gt), Ko !== null && (i && Ko.alternate !== null && Ft.delete(Ko.key === null ? Xt : Ko.key), be = L(Ko, be, Xt), At === null ? Bt = Ko : At.sibling = Ko, At = Ko);
      return i && Ft.forEach(function(Ds) {
        return l(De, Ds);
      }), Kn && ta(De, Xt), Bt;
    }
    function Vt(De, be, Ne, gt) {
      var Bt = ne(Ne);
      if (typeof Bt != "function")
        throw Error(a(150));
      if (Ne = Bt.call(Ne), Ne == null)
        throw Error(a(151));
      for (var At = Bt = null, Ft = be, Xt = be = 0, Ko = null, Cn = Ne.next(); Ft !== null && !Cn.done; Xt++, Cn = Ne.next()) {
        Ft.index > Xt ? (Ko = Ft, Ft = null) : Ko = Ft.sibling;
        var Ds = ct(De, Ft, Cn.value, gt);
        if (Ds === null) {
          Ft === null && (Ft = Ko);
          break;
        }
        i && Ft && Ds.alternate === null && l(De, Ft), be = L(Ds, be, Xt), At === null ? Bt = Ds : At.sibling = Ds, At = Ds, Ft = Ko;
      }
      if (Cn.done)
        return m(
          De,
          Ft
        ), Kn && ta(De, Xt), Bt;
      if (Ft === null) {
        for (; !Cn.done; Xt++, Cn = Ne.next())
          Cn = ft(De, Cn.value, gt), Cn !== null && (be = L(Cn, be, Xt), At === null ? Bt = Cn : At.sibling = Cn, At = Cn);
        return Kn && ta(De, Xt), Bt;
      }
      for (Ft = C(De, Ft); !Cn.done; Xt++, Cn = Ne.next())
        Cn = Et(Ft, De, Xt, Cn.value, gt), Cn !== null && (i && Cn.alternate !== null && Ft.delete(Cn.key === null ? Xt : Cn.key), be = L(Cn, be, Xt), At === null ? Bt = Cn : At.sibling = Cn, At = Cn);
      return i && Ft.forEach(function(t0) {
        return l(De, t0);
      }), Kn && ta(De, Xt), Bt;
    }
    function bo(De, be, Ne, gt) {
      if (typeof Ne == "object" && Ne !== null && Ne.type === F && Ne.key === null && (Ne = Ne.props.children), typeof Ne == "object" && Ne !== null) {
        switch (Ne.$$typeof) {
          case B:
            e: {
              for (var Bt = Ne.key, At = be; At !== null; ) {
                if (At.key === Bt) {
                  if (Bt = Ne.type, Bt === F) {
                    if (At.tag === 7) {
                      m(De, At.sibling), be = w(At, Ne.props.children), be.return = De, De = be;
                      break e;
                    }
                  } else if (At.elementType === Bt || typeof Bt == "object" && Bt !== null && Bt.$$typeof === oe && Ab(Bt) === At.type) {
                    m(De, At.sibling), be = w(At, Ne.props), be.ref = lc(De, At, Ne), be.return = De, De = be;
                    break e;
                  }
                  m(De, At);
                  break;
                } else
                  l(De, At);
                At = At.sibling;
              }
              Ne.type === F ? (be = wl(Ne.props.children, De.mode, gt, Ne.key), be.return = De, De = be) : (gt = Up(Ne.type, Ne.key, Ne.props, null, De.mode, gt), gt.ref = lc(De, be, Ne), gt.return = De, De = gt);
            }
            return W(De);
          case P:
            e: {
              for (At = Ne.key; be !== null; ) {
                if (be.key === At)
                  if (be.tag === 4 && be.stateNode.containerInfo === Ne.containerInfo && be.stateNode.implementation === Ne.implementation) {
                    m(De, be.sibling), be = w(be, Ne.children || []), be.return = De, De = be;
                    break e;
                  } else {
                    m(De, be);
                    break;
                  }
                else
                  l(De, be);
                be = be.sibling;
              }
              be = Rl(Ne, De.mode, gt), be.return = De, De = be;
            }
            return W(De);
          case oe:
            return At = Ne._init, bo(De, be, At(Ne._payload), gt);
        }
        if (ge(Ne))
          return It(De, be, Ne, gt);
        if (ne(Ne))
          return Vt(De, be, Ne, gt);
        dp(De, Ne);
      }
      return typeof Ne == "string" && Ne !== "" || typeof Ne == "number" ? (Ne = "" + Ne, be !== null && be.tag === 6 ? (m(De, be.sibling), be = w(be, Ne), be.return = De, De = be) : (m(De, be), be = Xu(Ne, De.mode, gt), be.return = De, De = be), W(De)) : m(De, be);
    }
    return bo;
  }
  var cc = _b(!0), Vb = _b(!1), Nu = {}, Ha = an(Nu), Lu = an(Nu), uc = an(Nu);
  function ll(i) {
    if (i === Nu)
      throw Error(a(174));
    return i;
  }
  function Xm(i, l) {
    switch (On(uc, l), On(Lu, i), On(Ha, Nu), i = l.nodeType, i) {
      case 9:
      case 11:
        l = (l = l.documentElement) ? l.namespaceURI : wt(null, "");
        break;
      default:
        i = i === 8 ? l.parentNode : l, l = i.namespaceURI || null, i = i.tagName, l = wt(l, i);
    }
    Rn(Ha), On(Ha, l);
  }
  function xs() {
    Rn(Ha), Rn(Lu), Rn(uc);
  }
  function Ht(i) {
    ll(uc.current);
    var l = ll(Ha.current), m = wt(l, i.type);
    l !== m && (On(Lu, i), On(Ha, m));
  }
  function un(i) {
    Lu.current === i && (Rn(Ha), Rn(Lu));
  }
  var Wt = an(0);
  function so(i) {
    for (var l = i; l !== null; ) {
      if (l.tag === 13) {
        var m = l.memoizedState;
        if (m !== null && (m = m.dehydrated, m === null || m.data === "$?" || m.data === "$!"))
          return l;
      } else if (l.tag === 19 && l.memoizedProps.revealOrder !== void 0) {
        if (l.flags & 128)
          return l;
      } else if (l.child !== null) {
        l.child.return = l, l = l.child;
        continue;
      }
      if (l === i)
        break;
      for (; l.sibling === null; ) {
        if (l.return === null || l.return === i)
          return null;
        l = l.return;
      }
      l.sibling.return = l.return, l = l.sibling;
    }
    return null;
  }
  var xa = [];
  function pp() {
    for (var i = 0; i < xa.length; i++)
      xa[i]._workInProgressVersionPrimary = null;
    xa.length = 0;
  }
  var fp = z.ReactCurrentDispatcher, Zm = z.ReactCurrentBatchConfig, cl = 0, Qn = null, tt = null, vn = null, Gt = !1, ii = !1, ra = 0, ul = 0;
  function Xn() {
    throw Error(a(321));
  }
  function dl(i, l) {
    if (l === null)
      return !1;
    for (var m = 0; m < l.length && m < i.length; m++)
      if (!va(i[m], l[m]))
        return !1;
    return !0;
  }
  function Ss(i, l, m, C, w, L) {
    if (cl = L, Qn = l, l.memoizedState = null, l.updateQueue = null, l.lanes = 0, fp.current = i === null || i.memoizedState === null ? _x : Vx, i = m(C, w), ii) {
      L = 0;
      do {
        if (ii = !1, ra = 0, 25 <= L)
          throw Error(a(301));
        L += 1, vn = tt = null, l.updateQueue = null, fp.current = eh, i = m(C, w);
      } while (ii);
    }
    if (fp.current = Pp, l = tt !== null && tt.next !== null, cl = 0, vn = tt = Qn = null, Gt = !1, l)
      throw Error(a(300));
    return i;
  }
  function pl() {
    var i = ra !== 0;
    return ra = 0, i;
  }
  function Sa() {
    var i = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
    return vn === null ? Qn.memoizedState = vn = i : vn = vn.next = i, vn;
  }
  function zr() {
    if (tt === null) {
      var i = Qn.alternate;
      i = i !== null ? i.memoizedState : null;
    } else
      i = tt.next;
    var l = vn === null ? Qn.memoizedState : vn.next;
    if (l !== null)
      vn = l, tt = i;
    else {
      if (i === null)
        throw Error(a(310));
      tt = i, i = { memoizedState: tt.memoizedState, baseState: tt.baseState, baseQueue: tt.baseQueue, queue: tt.queue, next: null }, vn === null ? Qn.memoizedState = vn = i : vn = vn.next = i;
    }
    return vn;
  }
  function fl(i, l) {
    return typeof l == "function" ? l(i) : l;
  }
  function Iu(i) {
    var l = zr(), m = l.queue;
    if (m === null)
      throw Error(a(311));
    m.lastRenderedReducer = i;
    var C = tt, w = C.baseQueue, L = m.pending;
    if (L !== null) {
      if (w !== null) {
        var W = w.next;
        w.next = L.next, L.next = W;
      }
      C.baseQueue = w = L, m.pending = null;
    }
    if (w !== null) {
      L = w.next, C = C.baseState;
      var re = W = null, de = null, Fe = L;
      do {
        var ut = Fe.lane;
        if ((cl & ut) === ut)
          de !== null && (de = de.next = { lane: 0, action: Fe.action, hasEagerState: Fe.hasEagerState, eagerState: Fe.eagerState, next: null }), C = Fe.hasEagerState ? Fe.eagerState : i(C, Fe.action);
        else {
          var ft = {
            lane: ut,
            action: Fe.action,
            hasEagerState: Fe.hasEagerState,
            eagerState: Fe.eagerState,
            next: null
          };
          de === null ? (re = de = ft, W = C) : de = de.next = ft, Qn.lanes |= ut, Vi |= ut;
        }
        Fe = Fe.next;
      } while (Fe !== null && Fe !== L);
      de === null ? W = C : de.next = re, va(C, l.memoizedState) || (So = !0), l.memoizedState = C, l.baseState = W, l.baseQueue = de, m.lastRenderedState = C;
    }
    if (i = m.interleaved, i !== null) {
      w = i;
      do
        L = w.lane, Qn.lanes |= L, Vi |= L, w = w.next;
      while (w !== i);
    } else
      w === null && (m.lanes = 0);
    return [l.memoizedState, m.dispatch];
  }
  function Au(i) {
    var l = zr(), m = l.queue;
    if (m === null)
      throw Error(a(311));
    m.lastRenderedReducer = i;
    var C = m.dispatch, w = m.pending, L = l.memoizedState;
    if (w !== null) {
      m.pending = null;
      var W = w = w.next;
      do
        L = i(L, W.action), W = W.next;
      while (W !== w);
      va(L, l.memoizedState) || (So = !0), l.memoizedState = L, l.baseQueue === null && (l.baseState = L), m.lastRenderedState = L;
    }
    return [L, C];
  }
  function mp() {
  }
  function hp(i, l) {
    var m = Qn, C = zr(), w = l(), L = !va(C.memoizedState, w);
    if (L && (C.memoizedState = w, So = !0), C = C.queue, _u(bp.bind(null, m, C, i), [i]), C.getSnapshot !== l || L || vn !== null && vn.memoizedState.tag & 1) {
      if (m.flags |= 2048, ml(9, gp.bind(null, m, C, w, l), void 0, null), lo === null)
        throw Error(a(349));
      cl & 30 || vp(m, l, w);
    }
    return w;
  }
  function vp(i, l, m) {
    i.flags |= 16384, i = { getSnapshot: l, value: m }, l = Qn.updateQueue, l === null ? (l = { lastEffect: null, stores: null }, Qn.updateQueue = l, l.stores = [i]) : (m = l.stores, m === null ? l.stores = [i] : m.push(i));
  }
  function gp(i, l, m, C) {
    l.value = m, l.getSnapshot = C, yp(l) && Cp(i);
  }
  function bp(i, l, m) {
    return m(function() {
      yp(l) && Cp(i);
    });
  }
  function yp(i) {
    var l = i.getSnapshot;
    i = i.value;
    try {
      var m = l();
      return !va(i, m);
    } catch {
      return !0;
    }
  }
  function Cp(i) {
    var l = Ni(i, 1);
    l !== null && Cr(l, i, 1, -1);
  }
  function Tp(i) {
    var l = Sa();
    return typeof i == "function" && (i = i()), l.memoizedState = l.baseState = i, i = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: fl, lastRenderedState: i }, l.queue = i, i = i.dispatch = Op.bind(null, Qn, i), [l.memoizedState, i];
  }
  function ml(i, l, m, C) {
    return i = { tag: i, create: l, destroy: m, deps: C, next: null }, l = Qn.updateQueue, l === null ? (l = { lastEffect: null, stores: null }, Qn.updateQueue = l, l.lastEffect = i.next = i) : (m = l.lastEffect, m === null ? l.lastEffect = i.next = i : (C = m.next, m.next = i, i.next = C, l.lastEffect = i)), i;
  }
  function xp() {
    return zr().memoizedState;
  }
  function hl(i, l, m, C) {
    var w = Sa();
    Qn.flags |= i, w.memoizedState = ml(1 | l, m, void 0, C === void 0 ? null : C);
  }
  function Ii(i, l, m, C) {
    var w = zr();
    C = C === void 0 ? null : C;
    var L = void 0;
    if (tt !== null) {
      var W = tt.memoizedState;
      if (L = W.destroy, C !== null && dl(C, W.deps)) {
        w.memoizedState = ml(l, m, L, C);
        return;
      }
    }
    Qn.flags |= i, w.memoizedState = ml(1 | l, m, L, C);
  }
  function Sp(i, l) {
    return hl(8390656, 8, i, l);
  }
  function _u(i, l) {
    return Ii(2048, 8, i, l);
  }
  function kp(i, l) {
    return Ii(4, 2, i, l);
  }
  function wp(i, l) {
    return Ii(4, 4, i, l);
  }
  function Jm(i, l) {
    if (typeof l == "function")
      return i = i(), l(i), function() {
        l(null);
      };
    if (l != null)
      return i = i(), l.current = i, function() {
        l.current = null;
      };
  }
  function dc(i, l, m) {
    return m = m != null ? m.concat([i]) : null, Ii(4, 4, Jm.bind(null, l, i), m);
  }
  function Rp() {
  }
  function pc(i, l) {
    var m = zr();
    l = l === void 0 ? null : l;
    var C = m.memoizedState;
    return C !== null && l !== null && dl(l, C[1]) ? C[0] : (m.memoizedState = [i, l], i);
  }
  function ks(i, l) {
    var m = zr();
    l = l === void 0 ? null : l;
    var C = m.memoizedState;
    return C !== null && l !== null && dl(l, C[1]) ? C[0] : (i = i(), m.memoizedState = [i, l], i);
  }
  function Fr(i, l, m) {
    return cl & 21 ? (va(m, l) || (m = Ad(), Qn.lanes |= m, Vi |= m, i.baseState = !0), l) : (i.baseState && (i.baseState = !1, So = !0), i.memoizedState = m);
  }
  function Ax(i, l) {
    var m = Mn;
    Mn = m !== 0 && 4 > m ? m : 4, i(!0);
    var C = Zm.transition;
    Zm.transition = {};
    try {
      i(!1), l();
    } finally {
      Mn = m, Zm.transition = C;
    }
  }
  function Hn() {
    return zr().memoizedState;
  }
  function Ep(i, l, m) {
    var C = ko(i);
    if (m = { lane: C, action: m, hasEagerState: !1, eagerState: null, next: null }, fc(i))
      Vu(l, m);
    else if (m = Mb(i, l, m, C), m !== null) {
      var w = yr();
      Cr(m, i, C, w), Bb(m, l, C);
    }
  }
  function Op(i, l, m) {
    var C = ko(i), w = { lane: C, action: m, hasEagerState: !1, eagerState: null, next: null };
    if (fc(i))
      Vu(l, w);
    else {
      var L = i.alternate;
      if (i.lanes === 0 && (L === null || L.lanes === 0) && (L = l.lastRenderedReducer, L !== null))
        try {
          var W = l.lastRenderedState, re = L(W, m);
          if (w.hasEagerState = !0, w.eagerState = re, va(re, W)) {
            var de = l.interleaved;
            de === null ? (w.next = w, qm(l)) : (w.next = de.next, de.next = w), l.interleaved = w;
            return;
          }
        } catch {
        } finally {
        }
      m = Mb(i, l, w, C), m !== null && (w = yr(), Cr(m, i, C, w), Bb(m, l, C));
    }
  }
  function fc(i) {
    var l = i.alternate;
    return i === Qn || l !== null && l === Qn;
  }
  function Vu(i, l) {
    ii = Gt = !0;
    var m = i.pending;
    m === null ? l.next = l : (l.next = m.next, m.next = l), i.pending = l;
  }
  function Bb(i, l, m) {
    if (m & 4194240) {
      var C = l.lanes;
      C &= i.pendingLanes, m |= C, l.lanes = m, uu(i, m);
    }
  }
  var Pp = { readContext: go, useCallback: Xn, useContext: Xn, useEffect: Xn, useImperativeHandle: Xn, useInsertionEffect: Xn, useLayoutEffect: Xn, useMemo: Xn, useReducer: Xn, useRef: Xn, useState: Xn, useDebugValue: Xn, useDeferredValue: Xn, useTransition: Xn, useMutableSource: Xn, useSyncExternalStore: Xn, useId: Xn, unstable_isNewReconciler: !1 }, _x = { readContext: go, useCallback: function(i, l) {
    return Sa().memoizedState = [i, l === void 0 ? null : l], i;
  }, useContext: go, useEffect: Sp, useImperativeHandle: function(i, l, m) {
    return m = m != null ? m.concat([i]) : null, hl(
      4194308,
      4,
      Jm.bind(null, l, i),
      m
    );
  }, useLayoutEffect: function(i, l) {
    return hl(4194308, 4, i, l);
  }, useInsertionEffect: function(i, l) {
    return hl(4, 2, i, l);
  }, useMemo: function(i, l) {
    var m = Sa();
    return l = l === void 0 ? null : l, i = i(), m.memoizedState = [i, l], i;
  }, useReducer: function(i, l, m) {
    var C = Sa();
    return l = m !== void 0 ? m(l) : l, C.memoizedState = C.baseState = l, i = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: i, lastRenderedState: l }, C.queue = i, i = i.dispatch = Ep.bind(null, Qn, i), [C.memoizedState, i];
  }, useRef: function(i) {
    var l = Sa();
    return i = { current: i }, l.memoizedState = i;
  }, useState: Tp, useDebugValue: Rp, useDeferredValue: function(i) {
    return Sa().memoizedState = i;
  }, useTransition: function() {
    var i = Tp(!1), l = i[0];
    return i = Ax.bind(null, i[1]), Sa().memoizedState = i, [l, i];
  }, useMutableSource: function() {
  }, useSyncExternalStore: function(i, l, m) {
    var C = Qn, w = Sa();
    if (Kn) {
      if (m === void 0)
        throw Error(a(407));
      m = m();
    } else {
      if (m = l(), lo === null)
        throw Error(a(349));
      cl & 30 || vp(C, l, m);
    }
    w.memoizedState = m;
    var L = { value: m, getSnapshot: l };
    return w.queue = L, Sp(bp.bind(
      null,
      C,
      L,
      i
    ), [i]), C.flags |= 2048, ml(9, gp.bind(null, C, L, m, l), void 0, null), m;
  }, useId: function() {
    var i = Sa(), l = lo.identifierPrefix;
    if (Kn) {
      var m = $i, C = er;
      m = (C & ~(1 << 32 - fa(C) - 1)).toString(32) + m, l = ":" + l + "R" + m, m = ra++, 0 < m && (l += "H" + m.toString(32)), l += ":";
    } else
      m = ul++, l = ":" + l + "r" + m.toString(32) + ":";
    return i.memoizedState = l;
  }, unstable_isNewReconciler: !1 }, Vx = {
    readContext: go,
    useCallback: pc,
    useContext: go,
    useEffect: _u,
    useImperativeHandle: dc,
    useInsertionEffect: kp,
    useLayoutEffect: wp,
    useMemo: ks,
    useReducer: Iu,
    useRef: xp,
    useState: function() {
      return Iu(fl);
    },
    useDebugValue: Rp,
    useDeferredValue: function(i) {
      var l = zr();
      return Fr(l, tt.memoizedState, i);
    },
    useTransition: function() {
      var i = Iu(fl)[0], l = zr().memoizedState;
      return [i, l];
    },
    useMutableSource: mp,
    useSyncExternalStore: hp,
    useId: Hn,
    unstable_isNewReconciler: !1
  }, eh = { readContext: go, useCallback: pc, useContext: go, useEffect: _u, useImperativeHandle: dc, useInsertionEffect: kp, useLayoutEffect: wp, useMemo: ks, useReducer: Au, useRef: xp, useState: function() {
    return Au(fl);
  }, useDebugValue: Rp, useDeferredValue: function(i) {
    var l = zr();
    return tt === null ? l.memoizedState = i : Fr(l, tt.memoizedState, i);
  }, useTransition: function() {
    var i = Au(fl)[0], l = zr().memoizedState;
    return [i, l];
  }, useMutableSource: mp, useSyncExternalStore: hp, useId: Hn, unstable_isNewReconciler: !1 };
  function mc(i, l) {
    try {
      var m = "", C = l;
      do
        m += xe(C), C = C.return;
      while (C);
      var w = m;
    } catch (L) {
      w = `
Error generating stack: ` + L.message + `
` + L.stack;
    }
    return { value: i, source: l, stack: w, digest: null };
  }
  function Bu(i, l, m) {
    return { value: i, source: null, stack: m ?? null, digest: l ?? null };
  }
  function Dp(i, l) {
    try {
      console.error(l.value);
    } catch (m) {
      setTimeout(function() {
        throw m;
      });
    }
  }
  var Bx = typeof WeakMap == "function" ? WeakMap : Map;
  function zb(i, l, m) {
    m = Li(-1, m), m.tag = 3, m.payload = { element: null };
    var C = l.value;
    return m.callback = function() {
      _p || (_p = !0, Cl = C), Dp(i, l);
    }, m;
  }
  function zu(i, l, m) {
    m = Li(-1, m), m.tag = 3;
    var C = i.type.getDerivedStateFromError;
    if (typeof C == "function") {
      var w = l.value;
      m.payload = function() {
        return C(w);
      }, m.callback = function() {
        Dp(i, l);
      };
    }
    var L = i.stateNode;
    return L !== null && typeof L.componentDidCatch == "function" && (m.callback = function() {
      Dp(i, l), typeof C != "function" && (ci === null ? ci = /* @__PURE__ */ new Set([this]) : ci.add(this));
      var W = l.stack;
      this.componentDidCatch(l.value, { componentStack: W !== null ? W : "" });
    }), m;
  }
  function Fb(i, l, m) {
    var C = i.pingCache;
    if (C === null) {
      C = i.pingCache = new Bx();
      var w = /* @__PURE__ */ new Set();
      C.set(l, w);
    } else
      w = C.get(l), w === void 0 && (w = /* @__PURE__ */ new Set(), C.set(l, w));
    w.has(m) || (w.add(m), i = Yx.bind(null, i, l, m), l.then(i, i));
  }
  function th(i) {
    do {
      var l;
      if ((l = i.tag === 13) && (l = i.memoizedState, l = l !== null ? l.dehydrated !== null : !0), l)
        return i;
      i = i.return;
    } while (i !== null);
    return null;
  }
  function nh(i, l, m, C, w) {
    return i.mode & 1 ? (i.flags |= 65536, i.lanes = w, i) : (i === l ? i.flags |= 65536 : (i.flags |= 128, m.flags |= 131072, m.flags &= -52805, m.tag === 1 && (m.alternate === null ? m.tag = 17 : (l = Li(-1, 1), l.tag = 2, Cs(m, l, 1))), m.lanes |= 1), i);
  }
  var zx = z.ReactCurrentOwner, So = !1;
  function No(i, l, m, C) {
    l.child = i === null ? Vb(l, null, m, C) : cc(l, i.child, m, C);
  }
  function ws(i, l, m, C, w) {
    m = m.render;
    var L = l.ref;
    return xt(l, w), C = Ss(i, l, m, C, L, w), m = pl(), i !== null && !So ? (l.updateQueue = i.updateQueue, l.flags &= -2053, i.lanes &= ~w, nr(i, l, w)) : (Kn && m && np(l), l.flags |= 1, No(i, l, C, w), l.child);
  }
  function Mp(i, l, m, C, w) {
    if (i === null) {
      var L = m.type;
      return typeof L == "function" && !Th(L) && L.defaultProps === void 0 && m.compare === null && m.defaultProps === void 0 ? (l.tag = 15, l.type = L, jr(i, l, L, C, w)) : (i = Up(m.type, null, C, l, l.mode, w), i.ref = l.ref, i.return = l, l.child = i);
    }
    if (L = i.child, !(i.lanes & w)) {
      var W = L.memoizedProps;
      if (m = m.compare, m = m !== null ? m : Tu, m(W, C) && i.ref === l.ref)
        return nr(i, l, w);
    }
    return l.flags |= 1, i = Ps(L, C), i.ref = l.ref, i.return = l, l.child = i;
  }
  function jr(i, l, m, C, w) {
    if (i !== null) {
      var L = i.memoizedProps;
      if (Tu(L, C) && i.ref === l.ref)
        if (So = !1, l.pendingProps = C = L, (i.lanes & w) !== 0)
          i.flags & 131072 && (So = !0);
        else
          return l.lanes = i.lanes, nr(i, l, w);
    }
    return hc(i, l, m, C, w);
  }
  function vl(i, l, m) {
    var C = l.pendingProps, w = C.children, L = i !== null ? i.memoizedState : null;
    if (C.mode === "hidden")
      if (!(l.mode & 1))
        l.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, On(Tc, aa), aa |= m;
      else {
        if (!(m & 1073741824))
          return i = L !== null ? L.baseLanes | m : m, l.lanes = l.childLanes = 1073741824, l.memoizedState = { baseLanes: i, cachePool: null, transitions: null }, l.updateQueue = null, On(Tc, aa), aa |= i, null;
        l.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, C = L !== null ? L.baseLanes : m, On(Tc, aa), aa |= C;
      }
    else
      L !== null ? (C = L.baseLanes | m, l.memoizedState = null) : C = m, On(Tc, aa), aa |= C;
    return No(i, l, w, m), l.child;
  }
  function sn(i, l) {
    var m = l.ref;
    (i === null && m !== null || i !== null && i.ref !== m) && (l.flags |= 512, l.flags |= 2097152);
  }
  function hc(i, l, m, C, w) {
    var L = no(m) ? Ir : Qt.current;
    return L = ba(l, L), xt(l, w), m = Ss(i, l, m, C, L, w), C = pl(), i !== null && !So ? (l.updateQueue = i.updateQueue, l.flags &= -2053, i.lanes &= ~w, nr(i, l, w)) : (Kn && C && np(l), l.flags |= 1, No(i, l, m, w), l.child);
  }
  function oh(i, l, m, C, w) {
    if (no(m)) {
      var L = !0;
      tp(l);
    } else
      L = !1;
    if (xt(l, w), l.stateNode === null)
      vr(i, l), Lb(l, m, C), up(l, m, C, w), C = !0;
    else if (i === null) {
      var W = l.stateNode, re = l.memoizedProps;
      W.props = re;
      var de = W.context, Fe = m.contextType;
      typeof Fe == "object" && Fe !== null ? Fe = go(Fe) : (Fe = no(m) ? Ir : Qt.current, Fe = ba(l, Fe));
      var ut = m.getDerivedStateFromProps, ft = typeof ut == "function" || typeof W.getSnapshotBeforeUpdate == "function";
      ft || typeof W.UNSAFE_componentWillReceiveProps != "function" && typeof W.componentWillReceiveProps != "function" || (re !== C || de !== Fe) && Ib(l, W, C, Fe), ys = !1;
      var ct = l.memoizedState;
      W.state = ct, Ts(l, C, W, w), de = l.memoizedState, re !== C || ct !== de || po.current || ys ? (typeof ut == "function" && (Qm(l, m, ut, C), de = l.memoizedState), (re = ys || Nb(l, m, re, C, ct, de, Fe)) ? (ft || typeof W.UNSAFE_componentWillMount != "function" && typeof W.componentWillMount != "function" || (typeof W.componentWillMount == "function" && W.componentWillMount(), typeof W.UNSAFE_componentWillMount == "function" && W.UNSAFE_componentWillMount()), typeof W.componentDidMount == "function" && (l.flags |= 4194308)) : (typeof W.componentDidMount == "function" && (l.flags |= 4194308), l.memoizedProps = C, l.memoizedState = de), W.props = C, W.state = de, W.context = Fe, C = re) : (typeof W.componentDidMount == "function" && (l.flags |= 4194308), C = !1);
    } else {
      W = l.stateNode, $o(i, l), re = l.memoizedProps, Fe = l.type === l.elementType ? re : oa(l.type, re), W.props = Fe, ft = l.pendingProps, ct = W.context, de = m.contextType, typeof de == "object" && de !== null ? de = go(de) : (de = no(m) ? Ir : Qt.current, de = ba(l, de));
      var Et = m.getDerivedStateFromProps;
      (ut = typeof Et == "function" || typeof W.getSnapshotBeforeUpdate == "function") || typeof W.UNSAFE_componentWillReceiveProps != "function" && typeof W.componentWillReceiveProps != "function" || (re !== ft || ct !== de) && Ib(l, W, C, de), ys = !1, ct = l.memoizedState, W.state = ct, Ts(l, C, W, w);
      var It = l.memoizedState;
      re !== ft || ct !== It || po.current || ys ? (typeof Et == "function" && (Qm(l, m, Et, C), It = l.memoizedState), (Fe = ys || Nb(l, m, Fe, C, ct, It, de) || !1) ? (ut || typeof W.UNSAFE_componentWillUpdate != "function" && typeof W.componentWillUpdate != "function" || (typeof W.componentWillUpdate == "function" && W.componentWillUpdate(C, It, de), typeof W.UNSAFE_componentWillUpdate == "function" && W.UNSAFE_componentWillUpdate(C, It, de)), typeof W.componentDidUpdate == "function" && (l.flags |= 4), typeof W.getSnapshotBeforeUpdate == "function" && (l.flags |= 1024)) : (typeof W.componentDidUpdate != "function" || re === i.memoizedProps && ct === i.memoizedState || (l.flags |= 4), typeof W.getSnapshotBeforeUpdate != "function" || re === i.memoizedProps && ct === i.memoizedState || (l.flags |= 1024), l.memoizedProps = C, l.memoizedState = It), W.props = C, W.state = It, W.context = de, C = Fe) : (typeof W.componentDidUpdate != "function" || re === i.memoizedProps && ct === i.memoizedState || (l.flags |= 4), typeof W.getSnapshotBeforeUpdate != "function" || re === i.memoizedProps && ct === i.memoizedState || (l.flags |= 1024), C = !1);
    }
    return jb(i, l, m, C, L, w);
  }
  function jb(i, l, m, C, w, L) {
    sn(i, l);
    var W = (l.flags & 128) !== 0;
    if (!C && !W)
      return w && Eb(l, m, !1), nr(i, l, L);
    C = l.stateNode, zx.current = l;
    var re = W && typeof m.getDerivedStateFromError != "function" ? null : C.render();
    return l.flags |= 1, i !== null && W ? (l.child = cc(l, i.child, null, L), l.child = cc(l, null, re, L)) : No(i, l, re, L), l.memoizedState = C.state, w && Eb(l, m, !0), l.child;
  }
  function Ub(i) {
    var l = i.stateNode;
    l.pendingContext ? hs(i, l.pendingContext, l.pendingContext !== l.context) : l.context && hs(i, l.context, !1), Xm(i, l.containerInfo);
  }
  function $p(i, l, m, C, w) {
    return io(), Hm(w), l.flags |= 256, No(i, l, m, C), l.child;
  }
  var gl = { dehydrated: null, treeContext: null, retryLane: 0 };
  function rh(i) {
    return { baseLanes: i, cachePool: null, transitions: null };
  }
  function ah(i, l, m) {
    var C = l.pendingProps, w = Wt.current, L = !1, W = (l.flags & 128) !== 0, re;
    if ((re = W) || (re = i !== null && i.memoizedState === null ? !1 : (w & 2) !== 0), re ? (L = !0, l.flags &= -129) : (i === null || i.memoizedState !== null) && (w |= 1), On(Wt, w & 1), i === null)
      return rp(l), i = l.memoizedState, i !== null && (i = i.dehydrated, i !== null) ? (l.mode & 1 ? i.data === "$!" ? l.lanes = 8 : l.lanes = 1073741824 : l.lanes = 1, null) : (W = C.children, i = C.fallback, L ? (C = l.mode, L = l.child, W = { mode: "hidden", children: W }, !(C & 1) && L !== null ? (L.childLanes = 0, L.pendingProps = W) : L = Qu(W, C, 0, null), i = wl(i, C, m, null), L.return = l, i.return = l, L.sibling = i, l.child = L, l.child.memoizedState = rh(m), l.memoizedState = gl, i) : ih(l, W));
    if (w = i.memoizedState, w !== null && (re = w.dehydrated, re !== null))
      return Fx(i, l, W, C, re, w, m);
    if (L) {
      L = C.fallback, W = l.mode, w = i.child, re = w.sibling;
      var de = { mode: "hidden", children: C.children };
      return !(W & 1) && l.child !== w ? (C = l.child, C.childLanes = 0, C.pendingProps = de, l.deletions = null) : (C = Ps(w, de), C.subtreeFlags = w.subtreeFlags & 14680064), re !== null ? L = Ps(re, L) : (L = wl(L, W, m, null), L.flags |= 2), L.return = l, C.return = l, C.sibling = L, l.child = C, C = L, L = l.child, W = i.child.memoizedState, W = W === null ? rh(m) : { baseLanes: W.baseLanes | m, cachePool: null, transitions: W.transitions }, L.memoizedState = W, L.childLanes = i.childLanes & ~m, l.memoizedState = gl, C;
    }
    return L = i.child, i = L.sibling, C = Ps(L, { mode: "visible", children: C.children }), !(l.mode & 1) && (C.lanes = m), C.return = l, C.sibling = null, i !== null && (m = l.deletions, m === null ? (l.deletions = [i], l.flags |= 16) : m.push(i)), l.child = C, l.memoizedState = null, C;
  }
  function ih(i, l) {
    return l = Qu({ mode: "visible", children: l }, i.mode, 0, null), l.return = i, i.child = l;
  }
  function vc(i, l, m, C) {
    return C !== null && Hm(C), cc(l, i.child, null, m), i = ih(l, l.pendingProps.children), i.flags |= 2, l.memoizedState = null, i;
  }
  function Fx(i, l, m, C, w, L, W) {
    if (m)
      return l.flags & 256 ? (l.flags &= -257, C = Bu(Error(a(422))), vc(i, l, W, C)) : l.memoizedState !== null ? (l.child = i.child, l.flags |= 128, null) : (L = C.fallback, w = l.mode, C = Qu({ mode: "visible", children: C.children }, w, 0, null), L = wl(L, w, W, null), L.flags |= 2, C.return = l, L.return = l, C.sibling = L, l.child = C, l.mode & 1 && cc(l, i.child, null, W), l.child.memoizedState = rh(W), l.memoizedState = gl, L);
    if (!(l.mode & 1))
      return vc(i, l, W, null);
    if (w.data === "$!") {
      if (C = w.nextSibling && w.nextSibling.dataset, C)
        var re = C.dgst;
      return C = re, L = Error(a(419)), C = Bu(L, C, void 0), vc(i, l, W, C);
    }
    if (re = (W & i.childLanes) !== 0, So || re) {
      if (C = lo, C !== null) {
        switch (W & -W) {
          case 4:
            w = 2;
            break;
          case 16:
            w = 8;
            break;
          case 64:
          case 128:
          case 256:
          case 512:
          case 1024:
          case 2048:
          case 4096:
          case 8192:
          case 16384:
          case 32768:
          case 65536:
          case 131072:
          case 262144:
          case 524288:
          case 1048576:
          case 2097152:
          case 4194304:
          case 8388608:
          case 16777216:
          case 33554432:
          case 67108864:
            w = 32;
            break;
          case 536870912:
            w = 268435456;
            break;
          default:
            w = 0;
        }
        w = w & (C.suspendedLanes | W) ? 0 : w, w !== 0 && w !== L.retryLane && (L.retryLane = w, Ni(i, w), Cr(C, i, w, -1));
      }
      return bh(), C = Bu(Error(a(421))), vc(i, l, W, C);
    }
    return w.data === "$?" ? (l.flags |= 128, l.child = i.child, l = qx.bind(null, i), w._reactRetry = l, null) : (i = L.treeContext, Br = Ua(w.nextSibling), na = l, Kn = !0, Ta = null, i !== null && (Vr[hr++] = er, Vr[hr++] = $i, Vr[hr++] = Ca, er = i.id, $i = i.overflow, Ca = l), l = ih(l, C.children), l.flags |= 4096, l);
  }
  function sh(i, l, m) {
    i.lanes |= l;
    var C = i.alternate;
    C !== null && (C.lanes |= l), Yo(i.return, l, m);
  }
  function Np(i, l, m, C, w) {
    var L = i.memoizedState;
    L === null ? i.memoizedState = { isBackwards: l, rendering: null, renderingStartTime: 0, last: C, tail: m, tailMode: w } : (L.isBackwards = l, L.rendering = null, L.renderingStartTime = 0, L.last = C, L.tail = m, L.tailMode = w);
  }
  function lh(i, l, m) {
    var C = l.pendingProps, w = C.revealOrder, L = C.tail;
    if (No(i, l, C.children, m), C = Wt.current, C & 2)
      C = C & 1 | 2, l.flags |= 128;
    else {
      if (i !== null && i.flags & 128)
        e:
          for (i = l.child; i !== null; ) {
            if (i.tag === 13)
              i.memoizedState !== null && sh(i, m, l);
            else if (i.tag === 19)
              sh(i, m, l);
            else if (i.child !== null) {
              i.child.return = i, i = i.child;
              continue;
            }
            if (i === l)
              break e;
            for (; i.sibling === null; ) {
              if (i.return === null || i.return === l)
                break e;
              i = i.return;
            }
            i.sibling.return = i.return, i = i.sibling;
          }
      C &= 1;
    }
    if (On(Wt, C), !(l.mode & 1))
      l.memoizedState = null;
    else
      switch (w) {
        case "forwards":
          for (m = l.child, w = null; m !== null; )
            i = m.alternate, i !== null && so(i) === null && (w = m), m = m.sibling;
          m = w, m === null ? (w = l.child, l.child = null) : (w = m.sibling, m.sibling = null), Np(l, !1, w, m, L);
          break;
        case "backwards":
          for (m = null, w = l.child, l.child = null; w !== null; ) {
            if (i = w.alternate, i !== null && so(i) === null) {
              l.child = w;
              break;
            }
            i = w.sibling, w.sibling = m, m = w, w = i;
          }
          Np(l, !0, m, null, L);
          break;
        case "together":
          Np(l, !1, null, null, void 0);
          break;
        default:
          l.memoizedState = null;
      }
    return l.child;
  }
  function vr(i, l) {
    !(l.mode & 1) && i !== null && (i.alternate = null, l.alternate = null, l.flags |= 2);
  }
  function nr(i, l, m) {
    if (i !== null && (l.dependencies = i.dependencies), Vi |= l.lanes, !(m & l.childLanes))
      return null;
    if (i !== null && l.child !== i.child)
      throw Error(a(153));
    if (l.child !== null) {
      for (i = l.child, m = Ps(i, i.pendingProps), l.child = m, m.return = l; i.sibling !== null; )
        i = i.sibling, m = m.sibling = Ps(i, i.pendingProps), m.return = l;
      m.sibling = null;
    }
    return l.child;
  }
  function Ai(i, l, m) {
    switch (l.tag) {
      case 3:
        Ub(l), io();
        break;
      case 5:
        Ht(l);
        break;
      case 1:
        no(l.type) && tp(l);
        break;
      case 4:
        Xm(l, l.stateNode.containerInfo);
        break;
      case 10:
        var C = l.type._context, w = l.memoizedProps.value;
        On(ai, C._currentValue), C._currentValue = w;
        break;
      case 13:
        if (C = l.memoizedState, C !== null)
          return C.dehydrated !== null ? (On(Wt, Wt.current & 1), l.flags |= 128, null) : m & l.child.childLanes ? ah(i, l, m) : (On(Wt, Wt.current & 1), i = nr(i, l, m), i !== null ? i.sibling : null);
        On(Wt, Wt.current & 1);
        break;
      case 19:
        if (C = (m & l.childLanes) !== 0, i.flags & 128) {
          if (C)
            return lh(i, l, m);
          l.flags |= 128;
        }
        if (w = l.memoizedState, w !== null && (w.rendering = null, w.tail = null, w.lastEffect = null), On(Wt, Wt.current), C)
          break;
        return null;
      case 22:
      case 23:
        return l.lanes = 0, vl(i, l, m);
    }
    return nr(i, l, m);
  }
  var Fu, bl, ka, Lo;
  Fu = function(i, l) {
    for (var m = l.child; m !== null; ) {
      if (m.tag === 5 || m.tag === 6)
        i.appendChild(m.stateNode);
      else if (m.tag !== 4 && m.child !== null) {
        m.child.return = m, m = m.child;
        continue;
      }
      if (m === l)
        break;
      for (; m.sibling === null; ) {
        if (m.return === null || m.return === l)
          return;
        m = m.return;
      }
      m.sibling.return = m.return, m = m.sibling;
    }
  }, bl = function() {
  }, ka = function(i, l, m, C) {
    var w = i.memoizedProps;
    if (w !== C) {
      i = l.stateNode, ll(Ha.current);
      var L = null;
      switch (m) {
        case "input":
          w = ae(i, w), C = ae(i, C), L = [];
          break;
        case "select":
          w = se({}, w, { value: void 0 }), C = se({}, C, { value: void 0 }), L = [];
          break;
        case "textarea":
          w = qe(i, w), C = qe(i, C), L = [];
          break;
        default:
          typeof w.onClick != "function" && typeof C.onClick == "function" && (i.onclick = ep);
      }
      nt(m, C);
      var W;
      m = null;
      for (Fe in w)
        if (!C.hasOwnProperty(Fe) && w.hasOwnProperty(Fe) && w[Fe] != null)
          if (Fe === "style") {
            var re = w[Fe];
            for (W in re)
              re.hasOwnProperty(W) && (m || (m = {}), m[W] = "");
          } else
            Fe !== "dangerouslySetInnerHTML" && Fe !== "children" && Fe !== "suppressContentEditableWarning" && Fe !== "suppressHydrationWarning" && Fe !== "autoFocus" && (u.hasOwnProperty(Fe) ? L || (L = []) : (L = L || []).push(Fe, null));
      for (Fe in C) {
        var de = C[Fe];
        if (re = w != null ? w[Fe] : void 0, C.hasOwnProperty(Fe) && de !== re && (de != null || re != null))
          if (Fe === "style")
            if (re) {
              for (W in re)
                !re.hasOwnProperty(W) || de && de.hasOwnProperty(W) || (m || (m = {}), m[W] = "");
              for (W in de)
                de.hasOwnProperty(W) && re[W] !== de[W] && (m || (m = {}), m[W] = de[W]);
            } else
              m || (L || (L = []), L.push(
                Fe,
                m
              )), m = de;
          else
            Fe === "dangerouslySetInnerHTML" ? (de = de ? de.__html : void 0, re = re ? re.__html : void 0, de != null && re !== de && (L = L || []).push(Fe, de)) : Fe === "children" ? typeof de != "string" && typeof de != "number" || (L = L || []).push(Fe, "" + de) : Fe !== "suppressContentEditableWarning" && Fe !== "suppressHydrationWarning" && (u.hasOwnProperty(Fe) ? (de != null && Fe === "onScroll" && Un("scroll", i), L || re === de || (L = [])) : (L = L || []).push(Fe, de));
      }
      m && (L = L || []).push("style", m);
      var Fe = L;
      (l.updateQueue = Fe) && (l.flags |= 4);
    }
  }, Lo = function(i, l, m, C) {
    m !== C && (l.flags |= 4);
  };
  function ju(i, l) {
    if (!Kn)
      switch (i.tailMode) {
        case "hidden":
          l = i.tail;
          for (var m = null; l !== null; )
            l.alternate !== null && (m = l), l = l.sibling;
          m === null ? i.tail = null : m.sibling = null;
          break;
        case "collapsed":
          m = i.tail;
          for (var C = null; m !== null; )
            m.alternate !== null && (C = m), m = m.sibling;
          C === null ? l || i.tail === null ? i.tail = null : i.tail.sibling = null : C.sibling = null;
      }
  }
  function gr(i) {
    var l = i.alternate !== null && i.alternate.child === i.child, m = 0, C = 0;
    if (l)
      for (var w = i.child; w !== null; )
        m |= w.lanes | w.childLanes, C |= w.subtreeFlags & 14680064, C |= w.flags & 14680064, w.return = i, w = w.sibling;
    else
      for (w = i.child; w !== null; )
        m |= w.lanes | w.childLanes, C |= w.subtreeFlags, C |= w.flags, w.return = i, w = w.sibling;
    return i.subtreeFlags |= C, i.childLanes = m, l;
  }
  function jx(i, l, m) {
    var C = l.pendingProps;
    switch (jm(l), l.tag) {
      case 2:
      case 16:
      case 15:
      case 0:
      case 11:
      case 7:
      case 8:
      case 12:
      case 9:
      case 14:
        return gr(l), null;
      case 1:
        return no(l.type) && ya(), gr(l), null;
      case 3:
        return C = l.stateNode, xs(), Rn(po), Rn(Qt), pp(), C.pendingContext && (C.context = C.pendingContext, C.pendingContext = null), (i === null || i.child === null) && (ap(l) ? l.flags |= 4 : i === null || i.memoizedState.isDehydrated && !(l.flags & 256) || (l.flags |= 1024, Ta !== null && (Ku(Ta), Ta = null))), bl(i, l), gr(l), null;
      case 5:
        un(l);
        var w = ll(uc.current);
        if (m = l.type, i !== null && l.stateNode != null)
          ka(i, l, m, C, w), i.ref !== l.ref && (l.flags |= 512, l.flags |= 2097152);
        else {
          if (!C) {
            if (l.stateNode === null)
              throw Error(a(166));
            return gr(l), null;
          }
          if (i = ll(Ha.current), ap(l)) {
            C = l.stateNode, m = l.type;
            var L = l.memoizedProps;
            switch (C[oi] = l, C[al] = L, i = (l.mode & 1) !== 0, m) {
              case "dialog":
                Un("cancel", C), Un("close", C);
                break;
              case "iframe":
              case "object":
              case "embed":
                Un("load", C);
                break;
              case "video":
              case "audio":
                for (w = 0; w < wu.length; w++)
                  Un(wu[w], C);
                break;
              case "source":
                Un("error", C);
                break;
              case "img":
              case "image":
              case "link":
                Un(
                  "error",
                  C
                ), Un("load", C);
                break;
              case "details":
                Un("toggle", C);
                break;
              case "input":
                Pe(C, L), Un("invalid", C);
                break;
              case "select":
                C._wrapperState = { wasMultiple: !!L.multiple }, Un("invalid", C);
                break;
              case "textarea":
                vt(C, L), Un("invalid", C);
            }
            nt(m, L), w = null;
            for (var W in L)
              if (L.hasOwnProperty(W)) {
                var re = L[W];
                W === "children" ? typeof re == "string" ? C.textContent !== re && (L.suppressHydrationWarning !== !0 && Jd(C.textContent, re, i), w = ["children", re]) : typeof re == "number" && C.textContent !== "" + re && (L.suppressHydrationWarning !== !0 && Jd(
                  C.textContent,
                  re,
                  i
                ), w = ["children", "" + re]) : u.hasOwnProperty(W) && re != null && W === "onScroll" && Un("scroll", C);
              }
            switch (m) {
              case "input":
                Ee(C), _e(C, L, !0);
                break;
              case "textarea":
                Ee(C), Mt(C);
                break;
              case "select":
              case "option":
                break;
              default:
                typeof L.onClick == "function" && (C.onclick = ep);
            }
            C = w, l.updateQueue = C, C !== null && (l.flags |= 4);
          } else {
            W = w.nodeType === 9 ? w : w.ownerDocument, i === "http://www.w3.org/1999/xhtml" && (i = bt(m)), i === "http://www.w3.org/1999/xhtml" ? m === "script" ? (i = W.createElement("div"), i.innerHTML = "<script><\/script>", i = i.removeChild(i.firstChild)) : typeof C.is == "string" ? i = W.createElement(m, { is: C.is }) : (i = W.createElement(m), m === "select" && (W = i, C.multiple ? W.multiple = !0 : C.size && (W.size = C.size))) : i = W.createElementNS(i, m), i[oi] = l, i[al] = C, Fu(i, l, !1, !1), l.stateNode = i;
            e: {
              switch (W = ht(m, C), m) {
                case "dialog":
                  Un("cancel", i), Un("close", i), w = C;
                  break;
                case "iframe":
                case "object":
                case "embed":
                  Un("load", i), w = C;
                  break;
                case "video":
                case "audio":
                  for (w = 0; w < wu.length; w++)
                    Un(wu[w], i);
                  w = C;
                  break;
                case "source":
                  Un("error", i), w = C;
                  break;
                case "img":
                case "image":
                case "link":
                  Un(
                    "error",
                    i
                  ), Un("load", i), w = C;
                  break;
                case "details":
                  Un("toggle", i), w = C;
                  break;
                case "input":
                  Pe(i, C), w = ae(i, C), Un("invalid", i);
                  break;
                case "option":
                  w = C;
                  break;
                case "select":
                  i._wrapperState = { wasMultiple: !!C.multiple }, w = se({}, C, { value: void 0 }), Un("invalid", i);
                  break;
                case "textarea":
                  vt(i, C), w = qe(i, C), Un("invalid", i);
                  break;
                default:
                  w = C;
              }
              nt(m, w), re = w;
              for (L in re)
                if (re.hasOwnProperty(L)) {
                  var de = re[L];
                  L === "style" ? rt(i, de) : L === "dangerouslySetInnerHTML" ? (de = de ? de.__html : void 0, de != null && Re(i, de)) : L === "children" ? typeof de == "string" ? (m !== "textarea" || de !== "") && at(i, de) : typeof de == "number" && at(i, "" + de) : L !== "suppressContentEditableWarning" && L !== "suppressHydrationWarning" && L !== "autoFocus" && (u.hasOwnProperty(L) ? de != null && L === "onScroll" && Un("scroll", i) : de != null && I(i, L, de, W));
                }
              switch (m) {
                case "input":
                  Ee(i), _e(i, C, !1);
                  break;
                case "textarea":
                  Ee(i), Mt(i);
                  break;
                case "option":
                  C.value != null && i.setAttribute("value", "" + ce(C.value));
                  break;
                case "select":
                  i.multiple = !!C.multiple, L = C.value, L != null ? ve(i, !!C.multiple, L, !1) : C.defaultValue != null && ve(
                    i,
                    !!C.multiple,
                    C.defaultValue,
                    !0
                  );
                  break;
                default:
                  typeof w.onClick == "function" && (i.onclick = ep);
              }
              switch (m) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                  C = !!C.autoFocus;
                  break e;
                case "img":
                  C = !0;
                  break e;
                default:
                  C = !1;
              }
            }
            C && (l.flags |= 4);
          }
          l.ref !== null && (l.flags |= 512, l.flags |= 2097152);
        }
        return gr(l), null;
      case 6:
        if (i && l.stateNode != null)
          Lo(i, l, i.memoizedProps, C);
        else {
          if (typeof C != "string" && l.stateNode === null)
            throw Error(a(166));
          if (m = ll(uc.current), ll(Ha.current), ap(l)) {
            if (C = l.stateNode, m = l.memoizedProps, C[oi] = l, (L = C.nodeValue !== m) && (i = na, i !== null))
              switch (i.tag) {
                case 3:
                  Jd(C.nodeValue, m, (i.mode & 1) !== 0);
                  break;
                case 5:
                  i.memoizedProps.suppressHydrationWarning !== !0 && Jd(C.nodeValue, m, (i.mode & 1) !== 0);
              }
            L && (l.flags |= 4);
          } else
            C = (m.nodeType === 9 ? m : m.ownerDocument).createTextNode(C), C[oi] = l, l.stateNode = C;
        }
        return gr(l), null;
      case 13:
        if (Rn(Wt), C = l.memoizedState, i === null || i.memoizedState !== null && i.memoizedState.dehydrated !== null) {
          if (Kn && Br !== null && l.mode & 1 && !(l.flags & 128))
            Db(), io(), l.flags |= 98560, L = !1;
          else if (L = ap(l), C !== null && C.dehydrated !== null) {
            if (i === null) {
              if (!L)
                throw Error(a(318));
              if (L = l.memoizedState, L = L !== null ? L.dehydrated : null, !L)
                throw Error(a(317));
              L[oi] = l;
            } else
              io(), !(l.flags & 128) && (l.memoizedState = null), l.flags |= 4;
            gr(l), L = !1;
          } else
            Ta !== null && (Ku(Ta), Ta = null), L = !0;
          if (!L)
            return l.flags & 65536 ? l : null;
        }
        return l.flags & 128 ? (l.lanes = m, l) : (C = C !== null, C !== (i !== null && i.memoizedState !== null) && C && (l.child.flags |= 8192, l.mode & 1 && (i === null || Wt.current & 1 ? Ao === 0 && (Ao = 3) : bh())), l.updateQueue !== null && (l.flags |= 4), gr(l), null);
      case 4:
        return xs(), bl(i, l), i === null && ac(l.stateNode.containerInfo), gr(l), null;
      case 10:
        return bs(l.type._context), gr(l), null;
      case 17:
        return no(l.type) && ya(), gr(l), null;
      case 19:
        if (Rn(Wt), L = l.memoizedState, L === null)
          return gr(l), null;
        if (C = (l.flags & 128) !== 0, W = L.rendering, W === null)
          if (C)
            ju(L, !1);
          else {
            if (Ao !== 0 || i !== null && i.flags & 128)
              for (i = l.child; i !== null; ) {
                if (W = so(i), W !== null) {
                  for (l.flags |= 128, ju(L, !1), C = W.updateQueue, C !== null && (l.updateQueue = C, l.flags |= 4), l.subtreeFlags = 0, C = m, m = l.child; m !== null; )
                    L = m, i = C, L.flags &= 14680066, W = L.alternate, W === null ? (L.childLanes = 0, L.lanes = i, L.child = null, L.subtreeFlags = 0, L.memoizedProps = null, L.memoizedState = null, L.updateQueue = null, L.dependencies = null, L.stateNode = null) : (L.childLanes = W.childLanes, L.lanes = W.lanes, L.child = W.child, L.subtreeFlags = 0, L.deletions = null, L.memoizedProps = W.memoizedProps, L.memoizedState = W.memoizedState, L.updateQueue = W.updateQueue, L.type = W.type, i = W.dependencies, L.dependencies = i === null ? null : { lanes: i.lanes, firstContext: i.firstContext }), m = m.sibling;
                  return On(Wt, Wt.current & 1 | 2), l.child;
                }
                i = i.sibling;
              }
            L.tail !== null && uo() > Sc && (l.flags |= 128, C = !0, ju(L, !1), l.lanes = 4194304);
          }
        else {
          if (!C)
            if (i = so(W), i !== null) {
              if (l.flags |= 128, C = !0, m = i.updateQueue, m !== null && (l.updateQueue = m, l.flags |= 4), ju(L, !0), L.tail === null && L.tailMode === "hidden" && !W.alternate && !Kn)
                return gr(l), null;
            } else
              2 * uo() - L.renderingStartTime > Sc && m !== 1073741824 && (l.flags |= 128, C = !0, ju(L, !1), l.lanes = 4194304);
          L.isBackwards ? (W.sibling = l.child, l.child = W) : (m = L.last, m !== null ? m.sibling = W : l.child = W, L.last = W);
        }
        return L.tail !== null ? (l = L.tail, L.rendering = l, L.tail = l.sibling, L.renderingStartTime = uo(), l.sibling = null, m = Wt.current, On(Wt, C ? m & 1 | 2 : m & 1), l) : (gr(l), null);
      case 22:
      case 23:
        return gh(), C = l.memoizedState !== null, i !== null && i.memoizedState !== null !== C && (l.flags |= 8192), C && l.mode & 1 ? aa & 1073741824 && (gr(l), l.subtreeFlags & 6 && (l.flags |= 8192)) : gr(l), null;
      case 24:
        return null;
      case 25:
        return null;
    }
    throw Error(a(156, l.tag));
  }
  function ch(i, l) {
    switch (jm(l), l.tag) {
      case 1:
        return no(l.type) && ya(), i = l.flags, i & 65536 ? (l.flags = i & -65537 | 128, l) : null;
      case 3:
        return xs(), Rn(po), Rn(Qt), pp(), i = l.flags, i & 65536 && !(i & 128) ? (l.flags = i & -65537 | 128, l) : null;
      case 5:
        return un(l), null;
      case 13:
        if (Rn(Wt), i = l.memoizedState, i !== null && i.dehydrated !== null) {
          if (l.alternate === null)
            throw Error(a(340));
          io();
        }
        return i = l.flags, i & 65536 ? (l.flags = i & -65537 | 128, l) : null;
      case 19:
        return Rn(Wt), null;
      case 4:
        return xs(), null;
      case 10:
        return bs(l.type._context), null;
      case 22:
      case 23:
        return gh(), null;
      case 24:
        return null;
      default:
        return null;
    }
  }
  var Uu = !1, Io = !1, Hb = typeof WeakSet == "function" ? WeakSet : Set, Nt = null;
  function gc(i, l) {
    var m = i.ref;
    if (m !== null)
      if (typeof m == "function")
        try {
          m(null);
        } catch (C) {
          mo(i, l, C);
        }
      else
        m.current = null;
  }
  function Hu(i, l, m) {
    try {
      m();
    } catch (C) {
      mo(i, l, C);
    }
  }
  var Wb = !1;
  function Yb(i, l) {
    if (Lm = Zs, i = Gd(), Oi(i)) {
      if ("selectionStart" in i)
        var m = { start: i.selectionStart, end: i.selectionEnd };
      else
        e: {
          m = (m = i.ownerDocument) && m.defaultView || window;
          var C = m.getSelection && m.getSelection();
          if (C && C.rangeCount !== 0) {
            m = C.anchorNode;
            var w = C.anchorOffset, L = C.focusNode;
            C = C.focusOffset;
            try {
              m.nodeType, L.nodeType;
            } catch {
              m = null;
              break e;
            }
            var W = 0, re = -1, de = -1, Fe = 0, ut = 0, ft = i, ct = null;
            t:
              for (; ; ) {
                for (var Et; ft !== m || w !== 0 && ft.nodeType !== 3 || (re = W + w), ft !== L || C !== 0 && ft.nodeType !== 3 || (de = W + C), ft.nodeType === 3 && (W += ft.nodeValue.length), (Et = ft.firstChild) !== null; )
                  ct = ft, ft = Et;
                for (; ; ) {
                  if (ft === i)
                    break t;
                  if (ct === m && ++Fe === w && (re = W), ct === L && ++ut === C && (de = W), (Et = ft.nextSibling) !== null)
                    break;
                  ft = ct, ct = ft.parentNode;
                }
                ft = Et;
              }
            m = re === -1 || de === -1 ? null : { start: re, end: de };
          } else
            m = null;
        }
      m = m || { start: 0, end: 0 };
    } else
      m = null;
    for (ol = { focusedElem: i, selectionRange: m }, Zs = !1, Nt = l; Nt !== null; )
      if (l = Nt, i = l.child, (l.subtreeFlags & 1028) !== 0 && i !== null)
        i.return = l, Nt = i;
      else
        for (; Nt !== null; ) {
          l = Nt;
          try {
            var It = l.alternate;
            if (l.flags & 1024)
              switch (l.tag) {
                case 0:
                case 11:
                case 15:
                  break;
                case 1:
                  if (It !== null) {
                    var Vt = It.memoizedProps, bo = It.memoizedState, De = l.stateNode, be = De.getSnapshotBeforeUpdate(l.elementType === l.type ? Vt : oa(l.type, Vt), bo);
                    De.__reactInternalSnapshotBeforeUpdate = be;
                  }
                  break;
                case 3:
                  var Ne = l.stateNode.containerInfo;
                  Ne.nodeType === 1 ? Ne.textContent = "" : Ne.nodeType === 9 && Ne.documentElement && Ne.removeChild(Ne.documentElement);
                  break;
                case 5:
                case 6:
                case 4:
                case 17:
                  break;
                default:
                  throw Error(a(163));
              }
          } catch (gt) {
            mo(l, l.return, gt);
          }
          if (i = l.sibling, i !== null) {
            i.return = l.return, Nt = i;
            break;
          }
          Nt = l.return;
        }
    return It = Wb, Wb = !1, It;
  }
  function Wu(i, l, m) {
    var C = l.updateQueue;
    if (C = C !== null ? C.lastEffect : null, C !== null) {
      var w = C = C.next;
      do {
        if ((w.tag & i) === i) {
          var L = w.destroy;
          w.destroy = void 0, L !== void 0 && Hu(l, m, L);
        }
        w = w.next;
      } while (w !== C);
    }
  }
  function Yu(i, l) {
    if (l = l.updateQueue, l = l !== null ? l.lastEffect : null, l !== null) {
      var m = l = l.next;
      do {
        if ((m.tag & i) === i) {
          var C = m.create;
          m.destroy = C();
        }
        m = m.next;
      } while (m !== l);
    }
  }
  function uh(i) {
    var l = i.ref;
    if (l !== null) {
      var m = i.stateNode;
      switch (i.tag) {
        case 5:
          i = m;
          break;
        default:
          i = m;
      }
      typeof l == "function" ? l(i) : l.current = i;
    }
  }
  function dh(i) {
    var l = i.alternate;
    l !== null && (i.alternate = null, dh(l)), i.child = null, i.deletions = null, i.sibling = null, i.tag === 5 && (l = i.stateNode, l !== null && (delete l[oi], delete l[al], delete l[_m], delete l[Ix], delete l[Vm])), i.stateNode = null, i.return = null, i.dependencies = null, i.memoizedProps = null, i.memoizedState = null, i.pendingProps = null, i.stateNode = null, i.updateQueue = null;
  }
  function qb(i) {
    return i.tag === 5 || i.tag === 3 || i.tag === 4;
  }
  function Lp(i) {
    e:
      for (; ; ) {
        for (; i.sibling === null; ) {
          if (i.return === null || qb(i.return))
            return null;
          i = i.return;
        }
        for (i.sibling.return = i.return, i = i.sibling; i.tag !== 5 && i.tag !== 6 && i.tag !== 18; ) {
          if (i.flags & 2 || i.child === null || i.tag === 4)
            continue e;
          i.child.return = i, i = i.child;
        }
        if (!(i.flags & 2))
          return i.stateNode;
      }
  }
  function bc(i, l, m) {
    var C = i.tag;
    if (C === 5 || C === 6)
      i = i.stateNode, l ? m.nodeType === 8 ? m.parentNode.insertBefore(i, l) : m.insertBefore(i, l) : (m.nodeType === 8 ? (l = m.parentNode, l.insertBefore(i, m)) : (l = m, l.appendChild(i)), m = m._reactRootContainer, m != null || l.onclick !== null || (l.onclick = ep));
    else if (C !== 4 && (i = i.child, i !== null))
      for (bc(i, l, m), i = i.sibling; i !== null; )
        bc(i, l, m), i = i.sibling;
  }
  function si(i, l, m) {
    var C = i.tag;
    if (C === 5 || C === 6)
      i = i.stateNode, l ? m.insertBefore(i, l) : m.appendChild(i);
    else if (C !== 4 && (i = i.child, i !== null))
      for (si(i, l, m), i = i.sibling; i !== null; )
        si(i, l, m), i = i.sibling;
  }
  var oo = null, qo = !1;
  function wa(i, l, m) {
    for (m = m.child; m !== null; )
      yc(i, l, m), m = m.sibling;
  }
  function yc(i, l, m) {
    if (Va && typeof Va.onCommitFiberUnmount == "function")
      try {
        Va.onCommitFiberUnmount(cu, m);
      } catch {
      }
    switch (m.tag) {
      case 5:
        Io || gc(m, l);
      case 6:
        var C = oo, w = qo;
        oo = null, wa(i, l, m), oo = C, qo = w, oo !== null && (qo ? (i = oo, m = m.stateNode, i.nodeType === 8 ? i.parentNode.removeChild(m) : i.removeChild(m)) : oo.removeChild(m.stateNode));
        break;
      case 18:
        oo !== null && (qo ? (i = oo, m = m.stateNode, i.nodeType === 8 ? ps(i.parentNode, m) : i.nodeType === 1 && ps(i, m), mu(i)) : ps(oo, m.stateNode));
        break;
      case 4:
        C = oo, w = qo, oo = m.stateNode.containerInfo, qo = !0, wa(i, l, m), oo = C, qo = w;
        break;
      case 0:
      case 11:
      case 14:
      case 15:
        if (!Io && (C = m.updateQueue, C !== null && (C = C.lastEffect, C !== null))) {
          w = C = C.next;
          do {
            var L = w, W = L.destroy;
            L = L.tag, W !== void 0 && (L & 2 || L & 4) && Hu(m, l, W), w = w.next;
          } while (w !== C);
        }
        wa(i, l, m);
        break;
      case 1:
        if (!Io && (gc(m, l), C = m.stateNode, typeof C.componentWillUnmount == "function"))
          try {
            C.props = m.memoizedProps, C.state = m.memoizedState, C.componentWillUnmount();
          } catch (re) {
            mo(m, l, re);
          }
        wa(i, l, m);
        break;
      case 21:
        wa(i, l, m);
        break;
      case 22:
        m.mode & 1 ? (Io = (C = Io) || m.memoizedState !== null, wa(i, l, m), Io = C) : wa(i, l, m);
        break;
      default:
        wa(i, l, m);
    }
  }
  function _i(i) {
    var l = i.updateQueue;
    if (l !== null) {
      i.updateQueue = null;
      var m = i.stateNode;
      m === null && (m = i.stateNode = new Hb()), l.forEach(function(C) {
        var w = Gx.bind(null, i, C);
        m.has(C) || (m.add(C), C.then(w, w));
      });
    }
  }
  function Wa(i, l) {
    var m = l.deletions;
    if (m !== null)
      for (var C = 0; C < m.length; C++) {
        var w = m[C];
        try {
          var L = i, W = l, re = W;
          e:
            for (; re !== null; ) {
              switch (re.tag) {
                case 5:
                  oo = re.stateNode, qo = !1;
                  break e;
                case 3:
                  oo = re.stateNode.containerInfo, qo = !0;
                  break e;
                case 4:
                  oo = re.stateNode.containerInfo, qo = !0;
                  break e;
              }
              re = re.return;
            }
          if (oo === null)
            throw Error(a(160));
          yc(L, W, w), oo = null, qo = !1;
          var de = w.alternate;
          de !== null && (de.return = null), w.return = null;
        } catch (Fe) {
          mo(w, l, Fe);
        }
      }
    if (l.subtreeFlags & 12854)
      for (l = l.child; l !== null; )
        Gb(l, i), l = l.sibling;
  }
  function Gb(i, l) {
    var m = i.alternate, C = i.flags;
    switch (i.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        if (Wa(l, i), li(i), C & 4) {
          try {
            Wu(3, i, i.return), Yu(3, i);
          } catch (Vt) {
            mo(i, i.return, Vt);
          }
          try {
            Wu(5, i, i.return);
          } catch (Vt) {
            mo(i, i.return, Vt);
          }
        }
        break;
      case 1:
        Wa(l, i), li(i), C & 512 && m !== null && gc(m, m.return);
        break;
      case 5:
        if (Wa(l, i), li(i), C & 512 && m !== null && gc(m, m.return), i.flags & 32) {
          var w = i.stateNode;
          try {
            at(w, "");
          } catch (Vt) {
            mo(i, i.return, Vt);
          }
        }
        if (C & 4 && (w = i.stateNode, w != null)) {
          var L = i.memoizedProps, W = m !== null ? m.memoizedProps : L, re = i.type, de = i.updateQueue;
          if (i.updateQueue = null, de !== null)
            try {
              re === "input" && L.type === "radio" && L.name != null && ke(w, L), ht(re, W);
              var Fe = ht(re, L);
              for (W = 0; W < de.length; W += 2) {
                var ut = de[W], ft = de[W + 1];
                ut === "style" ? rt(w, ft) : ut === "dangerouslySetInnerHTML" ? Re(w, ft) : ut === "children" ? at(w, ft) : I(w, ut, ft, Fe);
              }
              switch (re) {
                case "input":
                  pt(w, L);
                  break;
                case "textarea":
                  yt(w, L);
                  break;
                case "select":
                  var ct = w._wrapperState.wasMultiple;
                  w._wrapperState.wasMultiple = !!L.multiple;
                  var Et = L.value;
                  Et != null ? ve(w, !!L.multiple, Et, !1) : ct !== !!L.multiple && (L.defaultValue != null ? ve(
                    w,
                    !!L.multiple,
                    L.defaultValue,
                    !0
                  ) : ve(w, !!L.multiple, L.multiple ? [] : "", !1));
              }
              w[al] = L;
            } catch (Vt) {
              mo(i, i.return, Vt);
            }
        }
        break;
      case 6:
        if (Wa(l, i), li(i), C & 4) {
          if (i.stateNode === null)
            throw Error(a(162));
          w = i.stateNode, L = i.memoizedProps;
          try {
            w.nodeValue = L;
          } catch (Vt) {
            mo(i, i.return, Vt);
          }
        }
        break;
      case 3:
        if (Wa(l, i), li(i), C & 4 && m !== null && m.memoizedState.isDehydrated)
          try {
            mu(l.containerInfo);
          } catch (Vt) {
            mo(i, i.return, Vt);
          }
        break;
      case 4:
        Wa(l, i), li(i);
        break;
      case 13:
        Wa(l, i), li(i), w = i.child, w.flags & 8192 && (L = w.memoizedState !== null, w.stateNode.isHidden = L, !L || w.alternate !== null && w.alternate.memoizedState !== null || (mh = uo())), C & 4 && _i(i);
        break;
      case 22:
        if (ut = m !== null && m.memoizedState !== null, i.mode & 1 ? (Io = (Fe = Io) || ut, Wa(l, i), Io = Fe) : Wa(l, i), li(i), C & 8192) {
          if (Fe = i.memoizedState !== null, (i.stateNode.isHidden = Fe) && !ut && i.mode & 1)
            for (Nt = i, ut = i.child; ut !== null; ) {
              for (ft = Nt = ut; Nt !== null; ) {
                switch (ct = Nt, Et = ct.child, ct.tag) {
                  case 0:
                  case 11:
                  case 14:
                  case 15:
                    Wu(4, ct, ct.return);
                    break;
                  case 1:
                    gc(ct, ct.return);
                    var It = ct.stateNode;
                    if (typeof It.componentWillUnmount == "function") {
                      C = ct, m = ct.return;
                      try {
                        l = C, It.props = l.memoizedProps, It.state = l.memoizedState, It.componentWillUnmount();
                      } catch (Vt) {
                        mo(C, m, Vt);
                      }
                    }
                    break;
                  case 5:
                    gc(ct, ct.return);
                    break;
                  case 22:
                    if (ct.memoizedState !== null) {
                      ph(ft);
                      continue;
                    }
                }
                Et !== null ? (Et.return = ct, Nt = Et) : ph(ft);
              }
              ut = ut.sibling;
            }
          e:
            for (ut = null, ft = i; ; ) {
              if (ft.tag === 5) {
                if (ut === null) {
                  ut = ft;
                  try {
                    w = ft.stateNode, Fe ? (L = w.style, typeof L.setProperty == "function" ? L.setProperty("display", "none", "important") : L.display = "none") : (re = ft.stateNode, de = ft.memoizedProps.style, W = de != null && de.hasOwnProperty("display") ? de.display : null, re.style.display = et("display", W));
                  } catch (Vt) {
                    mo(i, i.return, Vt);
                  }
                }
              } else if (ft.tag === 6) {
                if (ut === null)
                  try {
                    ft.stateNode.nodeValue = Fe ? "" : ft.memoizedProps;
                  } catch (Vt) {
                    mo(i, i.return, Vt);
                  }
              } else if ((ft.tag !== 22 && ft.tag !== 23 || ft.memoizedState === null || ft === i) && ft.child !== null) {
                ft.child.return = ft, ft = ft.child;
                continue;
              }
              if (ft === i)
                break e;
              for (; ft.sibling === null; ) {
                if (ft.return === null || ft.return === i)
                  break e;
                ut === ft && (ut = null), ft = ft.return;
              }
              ut === ft && (ut = null), ft.sibling.return = ft.return, ft = ft.sibling;
            }
        }
        break;
      case 19:
        Wa(l, i), li(i), C & 4 && _i(i);
        break;
      case 21:
        break;
      default:
        Wa(
          l,
          i
        ), li(i);
    }
  }
  function li(i) {
    var l = i.flags;
    if (l & 2) {
      try {
        e: {
          for (var m = i.return; m !== null; ) {
            if (qb(m)) {
              var C = m;
              break e;
            }
            m = m.return;
          }
          throw Error(a(160));
        }
        switch (C.tag) {
          case 5:
            var w = C.stateNode;
            C.flags & 32 && (at(w, ""), C.flags &= -33);
            var L = Lp(i);
            si(i, L, w);
            break;
          case 3:
          case 4:
            var W = C.stateNode.containerInfo, re = Lp(i);
            bc(i, re, W);
            break;
          default:
            throw Error(a(161));
        }
      } catch (de) {
        mo(i, i.return, de);
      }
      i.flags &= -3;
    }
    l & 4096 && (i.flags &= -4097);
  }
  function Kb(i, l, m) {
    Nt = i, Cc(i);
  }
  function Cc(i, l, m) {
    for (var C = (i.mode & 1) !== 0; Nt !== null; ) {
      var w = Nt, L = w.child;
      if (w.tag === 22 && C) {
        var W = w.memoizedState !== null || Uu;
        if (!W) {
          var re = w.alternate, de = re !== null && re.memoizedState !== null || Io;
          re = Uu;
          var Fe = Io;
          if (Uu = W, (Io = de) && !Fe)
            for (Nt = w; Nt !== null; )
              W = Nt, de = W.child, W.tag === 22 && W.memoizedState !== null ? Xb(w) : de !== null ? (de.return = W, Nt = de) : Xb(w);
          for (; L !== null; )
            Nt = L, Cc(L), L = L.sibling;
          Nt = w, Uu = re, Io = Fe;
        }
        Qb(i);
      } else
        w.subtreeFlags & 8772 && L !== null ? (L.return = w, Nt = L) : Qb(i);
    }
  }
  function Qb(i) {
    for (; Nt !== null; ) {
      var l = Nt;
      if (l.flags & 8772) {
        var m = l.alternate;
        try {
          if (l.flags & 8772)
            switch (l.tag) {
              case 0:
              case 11:
              case 15:
                Io || Yu(5, l);
                break;
              case 1:
                var C = l.stateNode;
                if (l.flags & 4 && !Io)
                  if (m === null)
                    C.componentDidMount();
                  else {
                    var w = l.elementType === l.type ? m.memoizedProps : oa(l.type, m.memoizedProps);
                    C.componentDidUpdate(w, m.memoizedState, C.__reactInternalSnapshotBeforeUpdate);
                  }
                var L = l.updateQueue;
                L !== null && sl(l, L, C);
                break;
              case 3:
                var W = l.updateQueue;
                if (W !== null) {
                  if (m = null, l.child !== null)
                    switch (l.child.tag) {
                      case 5:
                        m = l.child.stateNode;
                        break;
                      case 1:
                        m = l.child.stateNode;
                    }
                  sl(l, W, m);
                }
                break;
              case 5:
                var re = l.stateNode;
                if (m === null && l.flags & 4) {
                  m = re;
                  var de = l.memoizedProps;
                  switch (l.type) {
                    case "button":
                    case "input":
                    case "select":
                    case "textarea":
                      de.autoFocus && m.focus();
                      break;
                    case "img":
                      de.src && (m.src = de.src);
                  }
                }
                break;
              case 6:
                break;
              case 4:
                break;
              case 12:
                break;
              case 13:
                if (l.memoizedState === null) {
                  var Fe = l.alternate;
                  if (Fe !== null) {
                    var ut = Fe.memoizedState;
                    if (ut !== null) {
                      var ft = ut.dehydrated;
                      ft !== null && mu(ft);
                    }
                  }
                }
                break;
              case 19:
              case 17:
              case 21:
              case 22:
              case 23:
              case 25:
                break;
              default:
                throw Error(a(163));
            }
          Io || l.flags & 512 && uh(l);
        } catch (ct) {
          mo(l, l.return, ct);
        }
      }
      if (l === i) {
        Nt = null;
        break;
      }
      if (m = l.sibling, m !== null) {
        m.return = l.return, Nt = m;
        break;
      }
      Nt = l.return;
    }
  }
  function ph(i) {
    for (; Nt !== null; ) {
      var l = Nt;
      if (l === i) {
        Nt = null;
        break;
      }
      var m = l.sibling;
      if (m !== null) {
        m.return = l.return, Nt = m;
        break;
      }
      Nt = l.return;
    }
  }
  function Xb(i) {
    for (; Nt !== null; ) {
      var l = Nt;
      try {
        switch (l.tag) {
          case 0:
          case 11:
          case 15:
            var m = l.return;
            try {
              Yu(4, l);
            } catch (de) {
              mo(l, m, de);
            }
            break;
          case 1:
            var C = l.stateNode;
            if (typeof C.componentDidMount == "function") {
              var w = l.return;
              try {
                C.componentDidMount();
              } catch (de) {
                mo(l, w, de);
              }
            }
            var L = l.return;
            try {
              uh(l);
            } catch (de) {
              mo(l, L, de);
            }
            break;
          case 5:
            var W = l.return;
            try {
              uh(l);
            } catch (de) {
              mo(l, W, de);
            }
        }
      } catch (de) {
        mo(l, l.return, de);
      }
      if (l === i) {
        Nt = null;
        break;
      }
      var re = l.sibling;
      if (re !== null) {
        re.return = l.return, Nt = re;
        break;
      }
      Nt = l.return;
    }
  }
  var Ip = Math.ceil, qu = z.ReactCurrentDispatcher, fh = z.ReactCurrentOwner, br = z.ReactCurrentBatchConfig, mn = 0, lo = null, fo = null, Go = 0, aa = 0, Tc = an(0), Ao = 0, Gu = null, Vi = 0, Ap = 0, xc = 0, yl = null, xr = null, mh = 0, Sc = 1 / 0, Bi = null, _p = !1, Cl = null, ci = null, Rs = !1, Es = null, Vp = 0, kc = 0, Bp = null, Tl = -1, xl = 0;
  function yr() {
    return mn & 6 ? uo() : Tl !== -1 ? Tl : Tl = uo();
  }
  function ko(i) {
    return i.mode & 1 ? mn & 2 && Go !== 0 ? Go & -Go : ip.transition !== null ? (xl === 0 && (xl = Ad()), xl) : (i = Mn, i !== 0 || (i = window.event, i = i === void 0 ? 16 : mm(i.type)), i) : 1;
  }
  function Cr(i, l, m, C) {
    if (50 < kc)
      throw kc = 0, Bp = null, Error(a(185));
    Xs(i, m, C), (!(mn & 2) || i !== lo) && (i === lo && (!(mn & 2) && (Ap |= m), Ao === 4 && Ra(i, Go)), Tr(i, C), m === 1 && mn === 0 && !(l.mode & 1) && (Sc = uo() + 500, Wo && Ar()));
  }
  function Tr(i, l) {
    var m = i.callbackNode;
    Id(i, l);
    var C = Ba(i, i === lo ? Go : 0);
    if (C === 0)
      m !== null && fr(m), i.callbackNode = null, i.callbackPriority = 0;
    else if (l = C & -C, i.callbackPriority !== l) {
      if (m != null && fr(m), l === 1)
        i.tag === 0 ? zm(Zb.bind(null, i)) : Bm(Zb.bind(null, i)), Am(function() {
          !(mn & 6) && Ar();
        }), m = null;
      else {
        switch (dm(C)) {
          case 1:
            m = ki;
            break;
          case 4:
            m = fn;
            break;
          case 16:
            m = ss;
            break;
          case 536870912:
            m = sm;
            break;
          default:
            m = ss;
        }
        m = Ch(m, wc.bind(null, i));
      }
      i.callbackPriority = l, i.callbackNode = m;
    }
  }
  function wc(i, l) {
    if (Tl = -1, xl = 0, mn & 6)
      throw Error(a(327));
    var m = i.callbackNode;
    if (Ec() && i.callbackNode !== m)
      return null;
    var C = Ba(i, i === lo ? Go : 0);
    if (C === 0)
      return null;
    if (C & 30 || C & i.expiredLanes || l)
      l = Fp(i, C);
    else {
      l = C;
      var w = mn;
      mn |= 2;
      var L = zp();
      (lo !== i || Go !== l) && (Bi = null, Sc = uo() + 500, Sl(i, l));
      do
        try {
          Hx();
          break;
        } catch (re) {
          Jb(i, re);
        }
      while (1);
      Ym(), qu.current = L, mn = w, fo !== null ? l = 0 : (lo = null, Go = 0, l = Ao);
    }
    if (l !== 0) {
      if (l === 2 && (w = cm(i), w !== 0 && (C = w, l = hh(i, w))), l === 1)
        throw m = Gu, Sl(i, 0), Ra(i, C), Tr(i, uo()), m;
      if (l === 6)
        Ra(i, C);
      else {
        if (w = i.current.alternate, !(C & 30) && !vh(w) && (l = Fp(i, C), l === 2 && (L = cm(i), L !== 0 && (C = L, l = hh(i, L))), l === 1))
          throw m = Gu, Sl(i, 0), Ra(i, C), Tr(i, uo()), m;
        switch (i.finishedWork = w, i.finishedLanes = C, l) {
          case 0:
          case 1:
            throw Error(a(345));
          case 2:
            kl(i, xr, Bi);
            break;
          case 3:
            if (Ra(i, C), (C & 130023424) === C && (l = mh + 500 - uo(), 10 < l)) {
              if (Ba(i, 0) !== 0)
                break;
              if (w = i.suspendedLanes, (w & C) !== C) {
                yr(), i.pingedLanes |= i.suspendedLanes & w;
                break;
              }
              i.timeoutHandle = rl(kl.bind(null, i, xr, Bi), l);
              break;
            }
            kl(i, xr, Bi);
            break;
          case 4:
            if (Ra(i, C), (C & 4194240) === C)
              break;
            for (l = i.eventTimes, w = -1; 0 < C; ) {
              var W = 31 - fa(C);
              L = 1 << W, W = l[W], W > w && (w = W), C &= ~L;
            }
            if (C = w, C = uo() - C, C = (120 > C ? 120 : 480 > C ? 480 : 1080 > C ? 1080 : 1920 > C ? 1920 : 3e3 > C ? 3e3 : 4320 > C ? 4320 : 1960 * Ip(C / 1960)) - C, 10 < C) {
              i.timeoutHandle = rl(kl.bind(null, i, xr, Bi), C);
              break;
            }
            kl(i, xr, Bi);
            break;
          case 5:
            kl(i, xr, Bi);
            break;
          default:
            throw Error(a(329));
        }
      }
    }
    return Tr(i, uo()), i.callbackNode === m ? wc.bind(null, i) : null;
  }
  function hh(i, l) {
    var m = yl;
    return i.current.memoizedState.isDehydrated && (Sl(i, l).flags |= 256), i = Fp(i, l), i !== 2 && (l = xr, xr = m, l !== null && Ku(l)), i;
  }
  function Ku(i) {
    xr === null ? xr = i : xr.push.apply(xr, i);
  }
  function vh(i) {
    for (var l = i; ; ) {
      if (l.flags & 16384) {
        var m = l.updateQueue;
        if (m !== null && (m = m.stores, m !== null))
          for (var C = 0; C < m.length; C++) {
            var w = m[C], L = w.getSnapshot;
            w = w.value;
            try {
              if (!va(L(), w))
                return !1;
            } catch {
              return !1;
            }
          }
      }
      if (m = l.child, l.subtreeFlags & 16384 && m !== null)
        m.return = l, l = m;
      else {
        if (l === i)
          break;
        for (; l.sibling === null; ) {
          if (l.return === null || l.return === i)
            return !0;
          l = l.return;
        }
        l.sibling.return = l.return, l = l.sibling;
      }
    }
    return !0;
  }
  function Ra(i, l) {
    for (l &= ~xc, l &= ~Ap, i.suspendedLanes |= l, i.pingedLanes &= ~l, i = i.expirationTimes; 0 < l; ) {
      var m = 31 - fa(l), C = 1 << m;
      i[m] = -1, l &= ~C;
    }
  }
  function Zb(i) {
    if (mn & 6)
      throw Error(a(327));
    Ec();
    var l = Ba(i, 0);
    if (!(l & 1))
      return Tr(i, uo()), null;
    var m = Fp(i, l);
    if (i.tag !== 0 && m === 2) {
      var C = cm(i);
      C !== 0 && (l = C, m = hh(i, C));
    }
    if (m === 1)
      throw m = Gu, Sl(i, 0), Ra(i, l), Tr(i, uo()), m;
    if (m === 6)
      throw Error(a(345));
    return i.finishedWork = i.current.alternate, i.finishedLanes = l, kl(i, xr, Bi), Tr(i, uo()), null;
  }
  function Rc(i, l) {
    var m = mn;
    mn |= 1;
    try {
      return i(l);
    } finally {
      mn = m, mn === 0 && (Sc = uo() + 500, Wo && Ar());
    }
  }
  function Os(i) {
    Es !== null && Es.tag === 0 && !(mn & 6) && Ec();
    var l = mn;
    mn |= 1;
    var m = br.transition, C = Mn;
    try {
      if (br.transition = null, Mn = 1, i)
        return i();
    } finally {
      Mn = C, br.transition = m, mn = l, !(mn & 6) && Ar();
    }
  }
  function gh() {
    aa = Tc.current, Rn(Tc);
  }
  function Sl(i, l) {
    i.finishedWork = null, i.finishedLanes = 0;
    var m = i.timeoutHandle;
    if (m !== -1 && (i.timeoutHandle = -1, Rb(m)), fo !== null)
      for (m = fo.return; m !== null; ) {
        var C = m;
        switch (jm(C), C.tag) {
          case 1:
            C = C.type.childContextTypes, C != null && ya();
            break;
          case 3:
            xs(), Rn(po), Rn(Qt), pp();
            break;
          case 5:
            un(C);
            break;
          case 4:
            xs();
            break;
          case 13:
            Rn(Wt);
            break;
          case 19:
            Rn(Wt);
            break;
          case 10:
            bs(C.type._context);
            break;
          case 22:
          case 23:
            gh();
        }
        m = m.return;
      }
    if (lo = i, fo = i = Ps(i.current, null), Go = aa = l, Ao = 0, Gu = null, xc = Ap = Vi = 0, xr = yl = null, tr !== null) {
      for (l = 0; l < tr.length; l++)
        if (m = tr[l], C = m.interleaved, C !== null) {
          m.interleaved = null;
          var w = C.next, L = m.pending;
          if (L !== null) {
            var W = L.next;
            L.next = w, C.next = W;
          }
          m.pending = C;
        }
      tr = null;
    }
    return i;
  }
  function Jb(i, l) {
    do {
      var m = fo;
      try {
        if (Ym(), fp.current = Pp, Gt) {
          for (var C = Qn.memoizedState; C !== null; ) {
            var w = C.queue;
            w !== null && (w.pending = null), C = C.next;
          }
          Gt = !1;
        }
        if (cl = 0, vn = tt = Qn = null, ii = !1, ra = 0, fh.current = null, m === null || m.return === null) {
          Ao = 1, Gu = l, fo = null;
          break;
        }
        e: {
          var L = i, W = m.return, re = m, de = l;
          if (l = Go, re.flags |= 32768, de !== null && typeof de == "object" && typeof de.then == "function") {
            var Fe = de, ut = re, ft = ut.tag;
            if (!(ut.mode & 1) && (ft === 0 || ft === 11 || ft === 15)) {
              var ct = ut.alternate;
              ct ? (ut.updateQueue = ct.updateQueue, ut.memoizedState = ct.memoizedState, ut.lanes = ct.lanes) : (ut.updateQueue = null, ut.memoizedState = null);
            }
            var Et = th(W);
            if (Et !== null) {
              Et.flags &= -257, nh(Et, W, re, L, l), Et.mode & 1 && Fb(L, Fe, l), l = Et, de = Fe;
              var It = l.updateQueue;
              if (It === null) {
                var Vt = /* @__PURE__ */ new Set();
                Vt.add(de), l.updateQueue = Vt;
              } else
                It.add(de);
              break e;
            } else {
              if (!(l & 1)) {
                Fb(L, Fe, l), bh();
                break e;
              }
              de = Error(a(426));
            }
          } else if (Kn && re.mode & 1) {
            var bo = th(W);
            if (bo !== null) {
              !(bo.flags & 65536) && (bo.flags |= 256), nh(bo, W, re, L, l), Hm(mc(de, re));
              break e;
            }
          }
          L = de = mc(de, re), Ao !== 4 && (Ao = 2), yl === null ? yl = [L] : yl.push(L), L = W;
          do {
            switch (L.tag) {
              case 3:
                L.flags |= 65536, l &= -l, L.lanes |= l;
                var De = zb(L, de, l);
                Km(L, De);
                break e;
              case 1:
                re = de;
                var be = L.type, Ne = L.stateNode;
                if (!(L.flags & 128) && (typeof be.getDerivedStateFromError == "function" || Ne !== null && typeof Ne.componentDidCatch == "function" && (ci === null || !ci.has(Ne)))) {
                  L.flags |= 65536, l &= -l, L.lanes |= l;
                  var gt = zu(L, re, l);
                  Km(L, gt);
                  break e;
                }
            }
            L = L.return;
          } while (L !== null);
        }
        yh(m);
      } catch (Bt) {
        l = Bt, fo === m && m !== null && (fo = m = m.return);
        continue;
      }
      break;
    } while (1);
  }
  function zp() {
    var i = qu.current;
    return qu.current = Pp, i === null ? Pp : i;
  }
  function bh() {
    (Ao === 0 || Ao === 3 || Ao === 2) && (Ao = 4), lo === null || !(Vi & 268435455) && !(Ap & 268435455) || Ra(lo, Go);
  }
  function Fp(i, l) {
    var m = mn;
    mn |= 2;
    var C = zp();
    (lo !== i || Go !== l) && (Bi = null, Sl(i, l));
    do
      try {
        Ux();
        break;
      } catch (w) {
        Jb(i, w);
      }
    while (1);
    if (Ym(), mn = m, qu.current = C, fo !== null)
      throw Error(a(261));
    return lo = null, Go = 0, Ao;
  }
  function Ux() {
    for (; fo !== null; )
      ey(fo);
  }
  function Hx() {
    for (; fo !== null && !Gl(); )
      ey(fo);
  }
  function ey(i) {
    var l = ny(i.alternate, i, aa);
    i.memoizedProps = i.pendingProps, l === null ? yh(i) : fo = l, fh.current = null;
  }
  function yh(i) {
    var l = i;
    do {
      var m = l.alternate;
      if (i = l.return, l.flags & 32768) {
        if (m = ch(m, l), m !== null) {
          m.flags &= 32767, fo = m;
          return;
        }
        if (i !== null)
          i.flags |= 32768, i.subtreeFlags = 0, i.deletions = null;
        else {
          Ao = 6, fo = null;
          return;
        }
      } else if (m = jx(m, l, aa), m !== null) {
        fo = m;
        return;
      }
      if (l = l.sibling, l !== null) {
        fo = l;
        return;
      }
      fo = l = i;
    } while (l !== null);
    Ao === 0 && (Ao = 5);
  }
  function kl(i, l, m) {
    var C = Mn, w = br.transition;
    try {
      br.transition = null, Mn = 1, Wx(i, l, m, C);
    } finally {
      br.transition = w, Mn = C;
    }
    return null;
  }
  function Wx(i, l, m, C) {
    do
      Ec();
    while (Es !== null);
    if (mn & 6)
      throw Error(a(327));
    m = i.finishedWork;
    var w = i.finishedLanes;
    if (m === null)
      return null;
    if (i.finishedWork = null, i.finishedLanes = 0, m === i.current)
      throw Error(a(177));
    i.callbackNode = null, i.callbackPriority = 0;
    var L = m.lanes | m.childLanes;
    if (gx(i, L), i === lo && (fo = lo = null, Go = 0), !(m.subtreeFlags & 2064) && !(m.flags & 2064) || Rs || (Rs = !0, Ch(ss, function() {
      return Ec(), null;
    })), L = (m.flags & 15990) !== 0, m.subtreeFlags & 15990 || L) {
      L = br.transition, br.transition = null;
      var W = Mn;
      Mn = 1;
      var re = mn;
      mn |= 4, fh.current = null, Yb(i, m), Gb(m, i), Kd(ol), Zs = !!Lm, ol = Lm = null, i.current = m, Kb(m), mx(), mn = re, Mn = W, br.transition = L;
    } else
      i.current = m;
    if (Rs && (Rs = !1, Es = i, Vp = w), L = i.pendingLanes, L === 0 && (ci = null), zg(m.stateNode), Tr(i, uo()), l !== null)
      for (C = i.onRecoverableError, m = 0; m < l.length; m++)
        w = l[m], C(w.value, { componentStack: w.stack, digest: w.digest });
    if (_p)
      throw _p = !1, i = Cl, Cl = null, i;
    return Vp & 1 && i.tag !== 0 && Ec(), L = i.pendingLanes, L & 1 ? i === Bp ? kc++ : (kc = 0, Bp = i) : kc = 0, Ar(), null;
  }
  function Ec() {
    if (Es !== null) {
      var i = dm(Vp), l = br.transition, m = Mn;
      try {
        if (br.transition = null, Mn = 16 > i ? 16 : i, Es === null)
          var C = !1;
        else {
          if (i = Es, Es = null, Vp = 0, mn & 6)
            throw Error(a(331));
          var w = mn;
          for (mn |= 4, Nt = i.current; Nt !== null; ) {
            var L = Nt, W = L.child;
            if (Nt.flags & 16) {
              var re = L.deletions;
              if (re !== null) {
                for (var de = 0; de < re.length; de++) {
                  var Fe = re[de];
                  for (Nt = Fe; Nt !== null; ) {
                    var ut = Nt;
                    switch (ut.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Wu(8, ut, L);
                    }
                    var ft = ut.child;
                    if (ft !== null)
                      ft.return = ut, Nt = ft;
                    else
                      for (; Nt !== null; ) {
                        ut = Nt;
                        var ct = ut.sibling, Et = ut.return;
                        if (dh(ut), ut === Fe) {
                          Nt = null;
                          break;
                        }
                        if (ct !== null) {
                          ct.return = Et, Nt = ct;
                          break;
                        }
                        Nt = Et;
                      }
                  }
                }
                var It = L.alternate;
                if (It !== null) {
                  var Vt = It.child;
                  if (Vt !== null) {
                    It.child = null;
                    do {
                      var bo = Vt.sibling;
                      Vt.sibling = null, Vt = bo;
                    } while (Vt !== null);
                  }
                }
                Nt = L;
              }
            }
            if (L.subtreeFlags & 2064 && W !== null)
              W.return = L, Nt = W;
            else
              e:
                for (; Nt !== null; ) {
                  if (L = Nt, L.flags & 2048)
                    switch (L.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Wu(9, L, L.return);
                    }
                  var De = L.sibling;
                  if (De !== null) {
                    De.return = L.return, Nt = De;
                    break e;
                  }
                  Nt = L.return;
                }
          }
          var be = i.current;
          for (Nt = be; Nt !== null; ) {
            W = Nt;
            var Ne = W.child;
            if (W.subtreeFlags & 2064 && Ne !== null)
              Ne.return = W, Nt = Ne;
            else
              e:
                for (W = be; Nt !== null; ) {
                  if (re = Nt, re.flags & 2048)
                    try {
                      switch (re.tag) {
                        case 0:
                        case 11:
                        case 15:
                          Yu(9, re);
                      }
                    } catch (Bt) {
                      mo(re, re.return, Bt);
                    }
                  if (re === W) {
                    Nt = null;
                    break e;
                  }
                  var gt = re.sibling;
                  if (gt !== null) {
                    gt.return = re.return, Nt = gt;
                    break e;
                  }
                  Nt = re.return;
                }
          }
          if (mn = w, Ar(), Va && typeof Va.onPostCommitFiberRoot == "function")
            try {
              Va.onPostCommitFiberRoot(cu, i);
            } catch {
            }
          C = !0;
        }
        return C;
      } finally {
        Mn = m, br.transition = l;
      }
    }
    return !1;
  }
  function ty(i, l, m) {
    l = mc(m, l), l = zb(i, l, 1), i = Cs(i, l, 1), l = yr(), i !== null && (Xs(i, 1, l), Tr(i, l));
  }
  function mo(i, l, m) {
    if (i.tag === 3)
      ty(i, i, m);
    else
      for (; l !== null; ) {
        if (l.tag === 3) {
          ty(l, i, m);
          break;
        } else if (l.tag === 1) {
          var C = l.stateNode;
          if (typeof l.type.getDerivedStateFromError == "function" || typeof C.componentDidCatch == "function" && (ci === null || !ci.has(C))) {
            i = mc(m, i), i = zu(l, i, 1), l = Cs(l, i, 1), i = yr(), l !== null && (Xs(l, 1, i), Tr(l, i));
            break;
          }
        }
        l = l.return;
      }
  }
  function Yx(i, l, m) {
    var C = i.pingCache;
    C !== null && C.delete(l), l = yr(), i.pingedLanes |= i.suspendedLanes & m, lo === i && (Go & m) === m && (Ao === 4 || Ao === 3 && (Go & 130023424) === Go && 500 > uo() - mh ? Sl(i, 0) : xc |= m), Tr(i, l);
  }
  function jp(i, l) {
    l === 0 && (i.mode & 1 ? (l = Kl, Kl <<= 1, !(Kl & 130023424) && (Kl = 4194304)) : l = 1);
    var m = yr();
    i = Ni(i, l), i !== null && (Xs(i, l, m), Tr(i, m));
  }
  function qx(i) {
    var l = i.memoizedState, m = 0;
    l !== null && (m = l.retryLane), jp(i, m);
  }
  function Gx(i, l) {
    var m = 0;
    switch (i.tag) {
      case 13:
        var C = i.stateNode, w = i.memoizedState;
        w !== null && (m = w.retryLane);
        break;
      case 19:
        C = i.stateNode;
        break;
      default:
        throw Error(a(314));
    }
    C !== null && C.delete(l), jp(i, m);
  }
  var ny;
  ny = function(i, l, m) {
    if (i !== null)
      if (i.memoizedProps !== l.pendingProps || po.current)
        So = !0;
      else {
        if (!(i.lanes & m) && !(l.flags & 128))
          return So = !1, Ai(i, l, m);
        So = !!(i.flags & 131072);
      }
    else
      So = !1, Kn && l.flags & 1048576 && Fm(l, sc, l.index);
    switch (l.lanes = 0, l.tag) {
      case 2:
        var C = l.type;
        vr(i, l), i = l.pendingProps;
        var w = ba(l, Qt.current);
        xt(l, m), w = Ss(null, l, C, i, w, m);
        var L = pl();
        return l.flags |= 1, typeof w == "object" && w !== null && typeof w.render == "function" && w.$$typeof === void 0 ? (l.tag = 1, l.memoizedState = null, l.updateQueue = null, no(C) ? (L = !0, tp(l)) : L = !1, l.memoizedState = w.state !== null && w.state !== void 0 ? w.state : null, Gm(l), w.updater = cp, l.stateNode = w, w._reactInternals = l, up(l, C, i, m), l = jb(null, l, C, !0, L, m)) : (l.tag = 0, Kn && L && np(l), No(null, l, w, m), l = l.child), l;
      case 16:
        C = l.elementType;
        e: {
          switch (vr(i, l), i = l.pendingProps, w = C._init, C = w(C._payload), l.type = C, w = l.tag = Qx(C), i = oa(C, i), w) {
            case 0:
              l = hc(null, l, C, i, m);
              break e;
            case 1:
              l = oh(null, l, C, i, m);
              break e;
            case 11:
              l = ws(null, l, C, i, m);
              break e;
            case 14:
              l = Mp(null, l, C, oa(C.type, i), m);
              break e;
          }
          throw Error(a(
            306,
            C,
            ""
          ));
        }
        return l;
      case 0:
        return C = l.type, w = l.pendingProps, w = l.elementType === C ? w : oa(C, w), hc(i, l, C, w, m);
      case 1:
        return C = l.type, w = l.pendingProps, w = l.elementType === C ? w : oa(C, w), oh(i, l, C, w, m);
      case 3:
        e: {
          if (Ub(l), i === null)
            throw Error(a(387));
          C = l.pendingProps, L = l.memoizedState, w = L.element, $o(i, l), Ts(l, C, null, m);
          var W = l.memoizedState;
          if (C = W.element, L.isDehydrated)
            if (L = { element: C, isDehydrated: !1, cache: W.cache, pendingSuspenseBoundaries: W.pendingSuspenseBoundaries, transitions: W.transitions }, l.updateQueue.baseState = L, l.memoizedState = L, l.flags & 256) {
              w = mc(Error(a(423)), l), l = $p(i, l, C, m, w);
              break e;
            } else if (C !== w) {
              w = mc(Error(a(424)), l), l = $p(i, l, C, m, w);
              break e;
            } else
              for (Br = Ua(l.stateNode.containerInfo.firstChild), na = l, Kn = !0, Ta = null, m = Vb(l, null, C, m), l.child = m; m; )
                m.flags = m.flags & -3 | 4096, m = m.sibling;
          else {
            if (io(), C === w) {
              l = nr(i, l, m);
              break e;
            }
            No(i, l, C, m);
          }
          l = l.child;
        }
        return l;
      case 5:
        return Ht(l), i === null && rp(l), C = l.type, w = l.pendingProps, L = i !== null ? i.memoizedProps : null, W = w.children, Ou(C, w) ? W = null : L !== null && Ou(C, L) && (l.flags |= 32), sn(i, l), No(i, l, W, m), l.child;
      case 6:
        return i === null && rp(l), null;
      case 13:
        return ah(i, l, m);
      case 4:
        return Xm(l, l.stateNode.containerInfo), C = l.pendingProps, i === null ? l.child = cc(l, null, C, m) : No(i, l, C, m), l.child;
      case 11:
        return C = l.type, w = l.pendingProps, w = l.elementType === C ? w : oa(C, w), ws(i, l, C, w, m);
      case 7:
        return No(i, l, l.pendingProps, m), l.child;
      case 8:
        return No(i, l, l.pendingProps.children, m), l.child;
      case 12:
        return No(i, l, l.pendingProps.children, m), l.child;
      case 10:
        e: {
          if (C = l.type._context, w = l.pendingProps, L = l.memoizedProps, W = w.value, On(ai, C._currentValue), C._currentValue = W, L !== null)
            if (va(L.value, W)) {
              if (L.children === w.children && !po.current) {
                l = nr(i, l, m);
                break e;
              }
            } else
              for (L = l.child, L !== null && (L.return = l); L !== null; ) {
                var re = L.dependencies;
                if (re !== null) {
                  W = L.child;
                  for (var de = re.firstContext; de !== null; ) {
                    if (de.context === C) {
                      if (L.tag === 1) {
                        de = Li(-1, m & -m), de.tag = 2;
                        var Fe = L.updateQueue;
                        if (Fe !== null) {
                          Fe = Fe.shared;
                          var ut = Fe.pending;
                          ut === null ? de.next = de : (de.next = ut.next, ut.next = de), Fe.pending = de;
                        }
                      }
                      L.lanes |= m, de = L.alternate, de !== null && (de.lanes |= m), Yo(
                        L.return,
                        m,
                        l
                      ), re.lanes |= m;
                      break;
                    }
                    de = de.next;
                  }
                } else if (L.tag === 10)
                  W = L.type === l.type ? null : L.child;
                else if (L.tag === 18) {
                  if (W = L.return, W === null)
                    throw Error(a(341));
                  W.lanes |= m, re = W.alternate, re !== null && (re.lanes |= m), Yo(W, m, l), W = L.sibling;
                } else
                  W = L.child;
                if (W !== null)
                  W.return = L;
                else
                  for (W = L; W !== null; ) {
                    if (W === l) {
                      W = null;
                      break;
                    }
                    if (L = W.sibling, L !== null) {
                      L.return = W.return, W = L;
                      break;
                    }
                    W = W.return;
                  }
                L = W;
              }
          No(i, l, w.children, m), l = l.child;
        }
        return l;
      case 9:
        return w = l.type, C = l.pendingProps.children, xt(l, m), w = go(w), C = C(w), l.flags |= 1, No(i, l, C, m), l.child;
      case 14:
        return C = l.type, w = oa(C, l.pendingProps), w = oa(C.type, w), Mp(i, l, C, w, m);
      case 15:
        return jr(i, l, l.type, l.pendingProps, m);
      case 17:
        return C = l.type, w = l.pendingProps, w = l.elementType === C ? w : oa(C, w), vr(i, l), l.tag = 1, no(C) ? (i = !0, tp(l)) : i = !1, xt(l, m), Lb(l, C, w), up(l, C, w, m), jb(null, l, C, !0, i, m);
      case 19:
        return lh(i, l, m);
      case 22:
        return vl(i, l, m);
    }
    throw Error(a(156, l.tag));
  };
  function Ch(i, l) {
    return pn(i, l);
  }
  function Kx(i, l, m, C) {
    this.tag = i, this.key = m, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = l, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = C, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null;
  }
  function Ea(i, l, m, C) {
    return new Kx(i, l, m, C);
  }
  function Th(i) {
    return i = i.prototype, !(!i || !i.isReactComponent);
  }
  function Qx(i) {
    if (typeof i == "function")
      return Th(i) ? 1 : 0;
    if (i != null) {
      if (i = i.$$typeof, i === te)
        return 11;
      if (i === X)
        return 14;
    }
    return 2;
  }
  function Ps(i, l) {
    var m = i.alternate;
    return m === null ? (m = Ea(i.tag, l, i.key, i.mode), m.elementType = i.elementType, m.type = i.type, m.stateNode = i.stateNode, m.alternate = i, i.alternate = m) : (m.pendingProps = l, m.type = i.type, m.flags = 0, m.subtreeFlags = 0, m.deletions = null), m.flags = i.flags & 14680064, m.childLanes = i.childLanes, m.lanes = i.lanes, m.child = i.child, m.memoizedProps = i.memoizedProps, m.memoizedState = i.memoizedState, m.updateQueue = i.updateQueue, l = i.dependencies, m.dependencies = l === null ? null : { lanes: l.lanes, firstContext: l.firstContext }, m.sibling = i.sibling, m.index = i.index, m.ref = i.ref, m;
  }
  function Up(i, l, m, C, w, L) {
    var W = 2;
    if (C = i, typeof i == "function")
      Th(i) && (W = 1);
    else if (typeof i == "string")
      W = 5;
    else
      e:
        switch (i) {
          case F:
            return wl(m.children, w, L, l);
          case H:
            W = 8, w |= 8;
            break;
          case U:
            return i = Ea(12, m, l, w | 2), i.elementType = U, i.lanes = L, i;
          case Z:
            return i = Ea(13, m, l, w), i.elementType = Z, i.lanes = L, i;
          case q:
            return i = Ea(19, m, l, w), i.elementType = q, i.lanes = L, i;
          case ie:
            return Qu(m, w, L, l);
          default:
            if (typeof i == "object" && i !== null)
              switch (i.$$typeof) {
                case Q:
                  W = 10;
                  break e;
                case Y:
                  W = 9;
                  break e;
                case te:
                  W = 11;
                  break e;
                case X:
                  W = 14;
                  break e;
                case oe:
                  W = 16, C = null;
                  break e;
              }
            throw Error(a(130, i == null ? i : typeof i, ""));
        }
    return l = Ea(W, m, l, w), l.elementType = i, l.type = C, l.lanes = L, l;
  }
  function wl(i, l, m, C) {
    return i = Ea(7, i, C, l), i.lanes = m, i;
  }
  function Qu(i, l, m, C) {
    return i = Ea(22, i, C, l), i.elementType = ie, i.lanes = m, i.stateNode = { isHidden: !1 }, i;
  }
  function Xu(i, l, m) {
    return i = Ea(6, i, null, l), i.lanes = m, i;
  }
  function Rl(i, l, m) {
    return l = Ea(4, i.children !== null ? i.children : [], i.key, l), l.lanes = m, l.stateNode = { containerInfo: i.containerInfo, pendingChildren: null, implementation: i.implementation }, l;
  }
  function Xx(i, l, m, C, w) {
    this.tag = l, this.containerInfo = i, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = um(0), this.expirationTimes = um(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = um(0), this.identifierPrefix = C, this.onRecoverableError = w, this.mutableSourceEagerHydrationData = null;
  }
  function Hp(i, l, m, C, w, L, W, re, de) {
    return i = new Xx(i, l, m, re, de), l === 1 ? (l = 1, L === !0 && (l |= 8)) : l = 0, L = Ea(3, null, null, l), i.current = L, L.stateNode = i, L.memoizedState = { element: C, isDehydrated: m, cache: null, transitions: null, pendingSuspenseBoundaries: null }, Gm(L), i;
  }
  function oy(i, l, m) {
    var C = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
    return { $$typeof: P, key: C == null ? null : "" + C, children: i, containerInfo: l, implementation: m };
  }
  function xh(i) {
    if (!i)
      return ri;
    i = i._reactInternals;
    e: {
      if (Ge(i) !== i || i.tag !== 1)
        throw Error(a(170));
      var l = i;
      do {
        switch (l.tag) {
          case 3:
            l = l.stateNode.context;
            break e;
          case 1:
            if (no(l.type)) {
              l = l.stateNode.__reactInternalMemoizedMergedChildContext;
              break e;
            }
        }
        l = l.return;
      } while (l !== null);
      throw Error(a(171));
    }
    if (i.tag === 1) {
      var m = i.type;
      if (no(m))
        return Mu(i, m, l);
    }
    return l;
  }
  function ry(i, l, m, C, w, L, W, re, de) {
    return i = Hp(m, C, !0, i, w, L, W, re, de), i.context = xh(null), m = i.current, C = yr(), w = ko(m), L = Li(C, w), L.callback = l ?? null, Cs(m, L, w), i.current.lanes = w, Xs(i, w, C), Tr(i, C), i;
  }
  function Zu(i, l, m, C) {
    var w = l.current, L = yr(), W = ko(w);
    return m = xh(m), l.context === null ? l.context = m : l.pendingContext = m, l = Li(L, W), l.payload = { element: i }, C = C === void 0 ? null : C, C !== null && (l.callback = C), i = Cs(w, l, W), i !== null && (Cr(i, w, W, L), lp(i, w, W)), W;
  }
  function Wp(i) {
    if (i = i.current, !i.child)
      return null;
    switch (i.child.tag) {
      case 5:
        return i.child.stateNode;
      default:
        return i.child.stateNode;
    }
  }
  function ay(i, l) {
    if (i = i.memoizedState, i !== null && i.dehydrated !== null) {
      var m = i.retryLane;
      i.retryLane = m !== 0 && m < l ? m : l;
    }
  }
  function Sh(i, l) {
    ay(i, l), (i = i.alternate) && ay(i, l);
  }
  function iy() {
    return null;
  }
  var kh = typeof reportError == "function" ? reportError : function(i) {
    console.error(i);
  };
  function Yp(i) {
    this._internalRoot = i;
  }
  zi.prototype.render = Yp.prototype.render = function(i) {
    var l = this._internalRoot;
    if (l === null)
      throw Error(a(409));
    Zu(i, l, null, null);
  }, zi.prototype.unmount = Yp.prototype.unmount = function() {
    var i = this._internalRoot;
    if (i !== null) {
      this._internalRoot = null;
      var l = i.containerInfo;
      Os(function() {
        Zu(null, i, null, null);
      }), l[Mi] = null;
    }
  };
  function zi(i) {
    this._internalRoot = i;
  }
  zi.prototype.unstable_scheduleHydration = function(i) {
    if (i) {
      var l = Hg();
      i = { blockedOn: null, target: i, priority: l };
      for (var m = 0; m < In.length && l !== 0 && l < In[m].priority; m++)
        ;
      In.splice(m, 0, i), m === 0 && Wg(i);
    }
  };
  function wh(i) {
    return !(!i || i.nodeType !== 1 && i.nodeType !== 9 && i.nodeType !== 11);
  }
  function qp(i) {
    return !(!i || i.nodeType !== 1 && i.nodeType !== 9 && i.nodeType !== 11 && (i.nodeType !== 8 || i.nodeValue !== " react-mount-point-unstable "));
  }
  function sy() {
  }
  function Zx(i, l, m, C, w) {
    if (w) {
      if (typeof C == "function") {
        var L = C;
        C = function() {
          var Fe = Wp(W);
          L.call(Fe);
        };
      }
      var W = ry(l, C, i, 0, null, !1, !1, "", sy);
      return i._reactRootContainer = W, i[Mi] = W.current, ac(i.nodeType === 8 ? i.parentNode : i), Os(), W;
    }
    for (; w = i.lastChild; )
      i.removeChild(w);
    if (typeof C == "function") {
      var re = C;
      C = function() {
        var Fe = Wp(de);
        re.call(Fe);
      };
    }
    var de = Hp(i, 0, !1, null, null, !1, !1, "", sy);
    return i._reactRootContainer = de, i[Mi] = de.current, ac(i.nodeType === 8 ? i.parentNode : i), Os(function() {
      Zu(l, de, m, C);
    }), de;
  }
  function Gp(i, l, m, C, w) {
    var L = m._reactRootContainer;
    if (L) {
      var W = L;
      if (typeof w == "function") {
        var re = w;
        w = function() {
          var de = Wp(W);
          re.call(de);
        };
      }
      Zu(l, W, i, w);
    } else
      W = Zx(m, l, i, w, C);
    return Wp(W);
  }
  Ug = function(i) {
    switch (i.tag) {
      case 3:
        var l = i.stateNode;
        if (l.current.memoizedState.isDehydrated) {
          var m = Qs(l.pendingLanes);
          m !== 0 && (uu(l, m | 1), Tr(l, uo()), !(mn & 6) && (Sc = uo() + 500, Ar()));
        }
        break;
      case 13:
        Os(function() {
          var C = Ni(i, 1);
          if (C !== null) {
            var w = yr();
            Cr(C, i, 1, w);
          }
        }), Sh(i, 1);
    }
  }, _d = function(i) {
    if (i.tag === 13) {
      var l = Ni(i, 134217728);
      if (l !== null) {
        var m = yr();
        Cr(l, i, 134217728, m);
      }
      Sh(i, 134217728);
    }
  }, jn = function(i) {
    if (i.tag === 13) {
      var l = ko(i), m = Ni(i, l);
      if (m !== null) {
        var C = yr();
        Cr(m, i, l, C);
      }
      Sh(i, l);
    }
  }, Hg = function() {
    return Mn;
  }, pm = function(i, l) {
    var m = Mn;
    try {
      return Mn = i, l();
    } finally {
      Mn = m;
    }
  }, Jt = function(i, l, m) {
    switch (l) {
      case "input":
        if (pt(i, m), l = m.name, m.type === "radio" && l != null) {
          for (m = i; m.parentNode; )
            m = m.parentNode;
          for (m = m.querySelectorAll("input[name=" + JSON.stringify("" + l) + '][type="radio"]'), l = 0; l < m.length; l++) {
            var C = m[l];
            if (C !== i && C.form === i.form) {
              var w = jt(C);
              if (!w)
                throw Error(a(90));
              Ae(C), pt(C, w);
            }
          }
        }
        break;
      case "textarea":
        yt(i, m);
        break;
      case "select":
        l = m.value, l != null && ve(i, !!m.multiple, l, !1);
    }
  }, Po = Rc, Do = Os;
  var Jx = { usingClientEntryPoint: !1, Events: [Du, ic, jt, nn, Yn, Rc] }, Oc = { findFiberByHostInstance: ga, bundleType: 0, version: "18.2.0", rendererPackageName: "react-dom" }, e0 = { bundleType: Oc.bundleType, version: Oc.version, rendererPackageName: Oc.rendererPackageName, rendererConfig: Oc.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: z.ReactCurrentDispatcher, findHostInstanceByFiber: function(i) {
    return i = ln(i), i === null ? null : i.stateNode;
  }, findFiberByHostInstance: Oc.findFiberByHostInstance || iy, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.2.0-next-9e3b772b8-20220608" };
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
    var Kp = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!Kp.isDisabled && Kp.supportsFiber)
      try {
        cu = Kp.inject(e0), Va = Kp;
      } catch {
      }
  }
  return Na.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Jx, Na.createPortal = function(i, l) {
    var m = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
    if (!wh(l))
      throw Error(a(200));
    return oy(i, l, null, m);
  }, Na.createRoot = function(i, l) {
    if (!wh(i))
      throw Error(a(299));
    var m = !1, C = "", w = kh;
    return l != null && (l.unstable_strictMode === !0 && (m = !0), l.identifierPrefix !== void 0 && (C = l.identifierPrefix), l.onRecoverableError !== void 0 && (w = l.onRecoverableError)), l = Hp(i, 1, !1, null, null, m, !1, C, w), i[Mi] = l.current, ac(i.nodeType === 8 ? i.parentNode : i), new Yp(l);
  }, Na.findDOMNode = function(i) {
    if (i == null)
      return null;
    if (i.nodeType === 1)
      return i;
    var l = i._reactInternals;
    if (l === void 0)
      throw typeof i.render == "function" ? Error(a(188)) : (i = Object.keys(i).join(","), Error(a(268, i)));
    return i = ln(l), i = i === null ? null : i.stateNode, i;
  }, Na.flushSync = function(i) {
    return Os(i);
  }, Na.hydrate = function(i, l, m) {
    if (!qp(l))
      throw Error(a(200));
    return Gp(null, i, l, !0, m);
  }, Na.hydrateRoot = function(i, l, m) {
    if (!wh(i))
      throw Error(a(405));
    var C = m != null && m.hydratedSources || null, w = !1, L = "", W = kh;
    if (m != null && (m.unstable_strictMode === !0 && (w = !0), m.identifierPrefix !== void 0 && (L = m.identifierPrefix), m.onRecoverableError !== void 0 && (W = m.onRecoverableError)), l = ry(l, null, i, 1, m ?? null, w, !1, L, W), i[Mi] = l.current, ac(i), C)
      for (i = 0; i < C.length; i++)
        m = C[i], w = m._getVersion, w = w(m._source), l.mutableSourceEagerHydrationData == null ? l.mutableSourceEagerHydrationData = [m, w] : l.mutableSourceEagerHydrationData.push(
          m,
          w
        );
    return new zi(l);
  }, Na.render = function(i, l, m) {
    if (!qp(l))
      throw Error(a(200));
    return Gp(null, i, l, !1, m);
  }, Na.unmountComponentAtNode = function(i) {
    if (!qp(i))
      throw Error(a(40));
    return i._reactRootContainer ? (Os(function() {
      Gp(null, null, i, !1, function() {
        i._reactRootContainer = null, i[Mi] = null;
      });
    }), !0) : !1;
  }, Na.unstable_batchedUpdates = Rc, Na.unstable_renderSubtreeIntoContainer = function(i, l, m, C) {
    if (!qp(m))
      throw Error(a(200));
    if (i == null || i._reactInternals === void 0)
      throw Error(a(38));
    return Gp(i, l, m, !1, C);
  }, Na.version = "18.2.0-next-9e3b772b8-20220608", Na;
}
var La = {};
/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var PD;
function Z5() {
  return PD || (PD = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var e = Ia, n = IN(), a = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, s = !1;
    function u(o) {
      s = o;
    }
    function d(o) {
      if (!s) {
        for (var r = arguments.length, c = new Array(r > 1 ? r - 1 : 0), f = 1; f < r; f++)
          c[f - 1] = arguments[f];
        h("warn", o, c);
      }
    }
    function p(o) {
      if (!s) {
        for (var r = arguments.length, c = new Array(r > 1 ? r - 1 : 0), f = 1; f < r; f++)
          c[f - 1] = arguments[f];
        h("error", o, c);
      }
    }
    function h(o, r, c) {
      {
        var f = a.ReactDebugCurrentFrame, v = f.getStackAddendum();
        v !== "" && (r += "%s", c = c.concat([v]));
        var T = c.map(function(D) {
          return String(D);
        });
        T.unshift("Warning: " + r), Function.prototype.apply.call(console[o], console, T);
      }
    }
    var g = 0, b = 1, x = 2, S = 3, E = 4, R = 5, $ = 6, M = 7, O = 8, N = 9, V = 10, I = 11, z = 12, B = 13, P = 14, F = 15, H = 16, U = 17, Q = 18, Y = 19, te = 21, Z = 22, q = 23, X = 24, oe = 25, ie = !0, K = !1, ne = !1, se = !1, ze = !1, Ue = !0, Oe = !1, ue = !1, xe = !0, me = !0, Se = !0, ce = /* @__PURE__ */ new Set(), Le = {}, Ze = {};
    function Ee(o, r) {
      Ae(o, r), Ae(o + "Capture", r);
    }
    function Ae(o, r) {
      Le[o] && p("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", o), Le[o] = r;
      {
        var c = o.toLowerCase();
        Ze[c] = o, o === "onDoubleClick" && (Ze.ondblclick = o);
      }
      for (var f = 0; f < r.length; f++)
        ce.add(r[f]);
    }
    var Ce = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", ae = Object.prototype.hasOwnProperty;
    function Pe(o) {
      {
        var r = typeof Symbol == "function" && Symbol.toStringTag, c = r && o[Symbol.toStringTag] || o.constructor.name || "Object";
        return c;
      }
    }
    function ke(o) {
      try {
        return pt(o), !1;
      } catch {
        return !0;
      }
    }
    function pt(o) {
      return "" + o;
    }
    function _e(o, r) {
      if (ke(o))
        return p("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", r, Pe(o)), pt(o);
    }
    function dt(o) {
      if (ke(o))
        return p("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", Pe(o)), pt(o);
    }
    function ge(o, r) {
      if (ke(o))
        return p("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", r, Pe(o)), pt(o);
    }
    function ve(o, r) {
      if (ke(o))
        return p("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", r, Pe(o)), pt(o);
    }
    function qe(o) {
      if (ke(o))
        return p("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", Pe(o)), pt(o);
    }
    function vt(o) {
      if (ke(o))
        return p("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before before using it here.", Pe(o)), pt(o);
    }
    var yt = 0, Mt = 1, bt = 2, wt = 3, we = 4, Re = 5, at = 6, Ke = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD", lt = Ke + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040", et = new RegExp("^[" + Ke + "][" + lt + "]*$"), rt = {}, je = {};
    function nt(o) {
      return ae.call(je, o) ? !0 : ae.call(rt, o) ? !1 : et.test(o) ? (je[o] = !0, !0) : (rt[o] = !0, p("Invalid attribute name: `%s`", o), !1);
    }
    function ht(o, r, c) {
      return r !== null ? r.type === yt : c ? !1 : o.length > 2 && (o[0] === "o" || o[0] === "O") && (o[1] === "n" || o[1] === "N");
    }
    function $t(o, r, c, f) {
      if (c !== null && c.type === yt)
        return !1;
      switch (typeof r) {
        case "function":
        case "symbol":
          return !0;
        case "boolean": {
          if (f)
            return !1;
          if (c !== null)
            return !c.acceptsBooleans;
          var v = o.toLowerCase().slice(0, 5);
          return v !== "data-" && v !== "aria-";
        }
        default:
          return !1;
      }
    }
    function Lt(o, r, c, f) {
      if (r === null || typeof r > "u" || $t(o, r, c, f))
        return !0;
      if (f)
        return !1;
      if (c !== null)
        switch (c.type) {
          case wt:
            return !r;
          case we:
            return r === !1;
          case Re:
            return isNaN(r);
          case at:
            return isNaN(r) || r < 1;
        }
      return !1;
    }
    function Jt(o) {
      return en.hasOwnProperty(o) ? en[o] : null;
    }
    function qt(o, r, c, f, v, T, D) {
      this.acceptsBooleans = r === bt || r === wt || r === we, this.attributeName = f, this.attributeNamespace = v, this.mustUseProperty = c, this.propertyName = o, this.type = r, this.sanitizeURL = T, this.removeEmptyString = D;
    }
    var en = {}, Nn = [
      "children",
      "dangerouslySetInnerHTML",
      // TODO: This prevents the assignment of defaultValue to regular
      // elements (not just inputs). Now that ReactDOMInput assigns to the
      // defaultValue property -- do we need this?
      "defaultValue",
      "defaultChecked",
      "innerHTML",
      "suppressContentEditableWarning",
      "suppressHydrationWarning",
      "style"
    ];
    Nn.forEach(function(o) {
      en[o] = new qt(
        o,
        yt,
        !1,
        // mustUseProperty
        o,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(o) {
      var r = o[0], c = o[1];
      en[r] = new qt(
        r,
        Mt,
        !1,
        // mustUseProperty
        c,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(o) {
      en[o] = new qt(
        o,
        bt,
        !1,
        // mustUseProperty
        o.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(o) {
      en[o] = new qt(
        o,
        bt,
        !1,
        // mustUseProperty
        o,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "allowFullScreen",
      "async",
      // Note: there is a special case that prevents it from being written to the DOM
      // on the client side because the browsers are inconsistent. Instead we call focus().
      "autoFocus",
      "autoPlay",
      "controls",
      "default",
      "defer",
      "disabled",
      "disablePictureInPicture",
      "disableRemotePlayback",
      "formNoValidate",
      "hidden",
      "loop",
      "noModule",
      "noValidate",
      "open",
      "playsInline",
      "readOnly",
      "required",
      "reversed",
      "scoped",
      "seamless",
      // Microdata
      "itemScope"
    ].forEach(function(o) {
      en[o] = new qt(
        o,
        wt,
        !1,
        // mustUseProperty
        o.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "checked",
      // Note: `option.selected` is not updated if `select.multiple` is
      // disabled with `removeAttribute`. We have special logic for handling this.
      "multiple",
      "muted",
      "selected"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(o) {
      en[o] = new qt(
        o,
        wt,
        !0,
        // mustUseProperty
        o,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "capture",
      "download"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(o) {
      en[o] = new qt(
        o,
        we,
        !1,
        // mustUseProperty
        o,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "cols",
      "rows",
      "size",
      "span"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(o) {
      en[o] = new qt(
        o,
        at,
        !1,
        // mustUseProperty
        o,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["rowSpan", "start"].forEach(function(o) {
      en[o] = new qt(
        o,
        Re,
        !1,
        // mustUseProperty
        o.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    });
    var nn = /[\-\:]([a-z])/g, Yn = function(o) {
      return o[1].toUpperCase();
    };
    [
      "accent-height",
      "alignment-baseline",
      "arabic-form",
      "baseline-shift",
      "cap-height",
      "clip-path",
      "clip-rule",
      "color-interpolation",
      "color-interpolation-filters",
      "color-profile",
      "color-rendering",
      "dominant-baseline",
      "enable-background",
      "fill-opacity",
      "fill-rule",
      "flood-color",
      "flood-opacity",
      "font-family",
      "font-size",
      "font-size-adjust",
      "font-stretch",
      "font-style",
      "font-variant",
      "font-weight",
      "glyph-name",
      "glyph-orientation-horizontal",
      "glyph-orientation-vertical",
      "horiz-adv-x",
      "horiz-origin-x",
      "image-rendering",
      "letter-spacing",
      "lighting-color",
      "marker-end",
      "marker-mid",
      "marker-start",
      "overline-position",
      "overline-thickness",
      "paint-order",
      "panose-1",
      "pointer-events",
      "rendering-intent",
      "shape-rendering",
      "stop-color",
      "stop-opacity",
      "strikethrough-position",
      "strikethrough-thickness",
      "stroke-dasharray",
      "stroke-dashoffset",
      "stroke-linecap",
      "stroke-linejoin",
      "stroke-miterlimit",
      "stroke-opacity",
      "stroke-width",
      "text-anchor",
      "text-decoration",
      "text-rendering",
      "underline-position",
      "underline-thickness",
      "unicode-bidi",
      "unicode-range",
      "units-per-em",
      "v-alphabetic",
      "v-hanging",
      "v-ideographic",
      "v-mathematical",
      "vector-effect",
      "vert-adv-y",
      "vert-origin-x",
      "vert-origin-y",
      "word-spacing",
      "writing-mode",
      "xmlns:xlink",
      "x-height"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(o) {
      var r = o.replace(nn, Yn);
      en[r] = new qt(
        r,
        Mt,
        !1,
        // mustUseProperty
        o,
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "xlink:actuate",
      "xlink:arcrole",
      "xlink:role",
      "xlink:show",
      "xlink:title",
      "xlink:type"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(o) {
      var r = o.replace(nn, Yn);
      en[r] = new qt(
        r,
        Mt,
        !1,
        // mustUseProperty
        o,
        "http://www.w3.org/1999/xlink",
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "xml:base",
      "xml:lang",
      "xml:space"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(o) {
      var r = o.replace(nn, Yn);
      en[r] = new qt(
        r,
        Mt,
        !1,
        // mustUseProperty
        o,
        "http://www.w3.org/XML/1998/namespace",
        !1,
        // sanitizeURL
        !1
      );
    }), ["tabIndex", "crossOrigin"].forEach(function(o) {
      en[o] = new qt(
        o,
        Mt,
        !1,
        // mustUseProperty
        o.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    });
    var Po = "xlinkHref";
    en[Po] = new qt(
      "xlinkHref",
      Mt,
      !1,
      // mustUseProperty
      "xlink:href",
      "http://www.w3.org/1999/xlink",
      !0,
      // sanitizeURL
      !1
    ), ["src", "href", "action", "formAction"].forEach(function(o) {
      en[o] = new qt(
        o,
        Mt,
        !1,
        // mustUseProperty
        o.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !0,
        // sanitizeURL
        !0
      );
    });
    var Do = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i, Zr = !1;
    function Bo(o) {
      !Zr && Do.test(o) && (Zr = !0, p("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(o)));
    }
    function Ln(o, r, c, f) {
      if (f.mustUseProperty) {
        var v = f.propertyName;
        return o[v];
      } else {
        _e(c, r), f.sanitizeURL && Bo("" + c);
        var T = f.attributeName, D = null;
        if (f.type === we) {
          if (o.hasAttribute(T)) {
            var A = o.getAttribute(T);
            return A === "" ? !0 : Lt(r, c, f, !1) ? A : A === "" + c ? c : A;
          }
        } else if (o.hasAttribute(T)) {
          if (Lt(r, c, f, !1))
            return o.getAttribute(T);
          if (f.type === wt)
            return c;
          D = o.getAttribute(T);
        }
        return Lt(r, c, f, !1) ? D === null ? c : D : D === "" + c ? c : D;
      }
    }
    function wn(o, r, c, f) {
      {
        if (!nt(r))
          return;
        if (!o.hasAttribute(r))
          return c === void 0 ? void 0 : null;
        var v = o.getAttribute(r);
        return _e(c, r), v === "" + c ? c : v;
      }
    }
    function qn(o, r, c, f) {
      var v = Jt(r);
      if (!ht(r, v, f)) {
        if (Lt(r, c, v, f) && (c = null), f || v === null) {
          if (nt(r)) {
            var T = r;
            c === null ? o.removeAttribute(T) : (_e(c, r), o.setAttribute(T, "" + c));
          }
          return;
        }
        var D = v.mustUseProperty;
        if (D) {
          var A = v.propertyName;
          if (c === null) {
            var j = v.type;
            o[A] = j === wt ? !1 : "";
          } else
            o[A] = c;
          return;
        }
        var G = v.attributeName, ee = v.attributeNamespace;
        if (c === null)
          o.removeAttribute(G);
        else {
          var ye = v.type, he;
          ye === wt || ye === we && c === !0 ? he = "" : (_e(c, G), he = "" + c, v.sanitizeURL && Bo(he.toString())), ee ? o.setAttributeNS(ee, G, he) : o.setAttribute(G, he);
        }
      }
    }
    var to = Symbol.for("react.element"), ao = Symbol.for("react.portal"), Jo = Symbol.for("react.fragment"), zo = Symbol.for("react.strict_mode"), Fo = Symbol.for("react.profiler"), Nr = Symbol.for("react.provider"), jo = Symbol.for("react.context"), Co = Symbol.for("react.forward_ref"), Ge = Symbol.for("react.suspense"), Te = Symbol.for("react.suspense_list"), it = Symbol.for("react.memo"), Tt = Symbol.for("react.lazy"), ln = Symbol.for("react.scope"), Ct = Symbol.for("react.debug_trace_mode"), pn = Symbol.for("react.offscreen"), fr = Symbol.for("react.legacy_hidden"), Gl = Symbol.for("react.cache"), mx = Symbol.for("react.tracing_marker"), uo = Symbol.iterator, hx = "@@iterator";
    function ki(o) {
      if (o === null || typeof o != "object")
        return null;
      var r = uo && o[uo] || o[hx];
      return typeof r == "function" ? r : null;
    }
    var fn = Object.assign, ss = 0, Bg, sm, cu, Va, zg, fa, Fg;
    function jg() {
    }
    jg.__reactDisabledLog = !0;
    function vx() {
      {
        if (ss === 0) {
          Bg = console.log, sm = console.info, cu = console.warn, Va = console.error, zg = console.group, fa = console.groupCollapsed, Fg = console.groupEnd;
          var o = {
            configurable: !0,
            enumerable: !0,
            value: jg,
            writable: !0
          };
          Object.defineProperties(console, {
            info: o,
            log: o,
            warn: o,
            error: o,
            group: o,
            groupCollapsed: o,
            groupEnd: o
          });
        }
        ss++;
      }
    }
    function Ld() {
      {
        if (ss--, ss === 0) {
          var o = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: fn({}, o, {
              value: Bg
            }),
            info: fn({}, o, {
              value: sm
            }),
            warn: fn({}, o, {
              value: cu
            }),
            error: fn({}, o, {
              value: Va
            }),
            group: fn({}, o, {
              value: zg
            }),
            groupCollapsed: fn({}, o, {
              value: fa
            }),
            groupEnd: fn({}, o, {
              value: Fg
            })
          });
        }
        ss < 0 && p("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var Kl = a.ReactCurrentDispatcher, Qs;
    function Ba(o, r, c) {
      {
        if (Qs === void 0)
          try {
            throw Error();
          } catch (v) {
            var f = v.stack.trim().match(/\n( *(at )?)/);
            Qs = f && f[1] || "";
          }
        return `
` + Qs + o;
      }
    }
    var lm = !1, Id;
    {
      var cm = typeof WeakMap == "function" ? WeakMap : Map;
      Id = new cm();
    }
    function Ad(o, r) {
      if (!o || lm)
        return "";
      {
        var c = Id.get(o);
        if (c !== void 0)
          return c;
      }
      var f;
      lm = !0;
      var v = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var T;
      T = Kl.current, Kl.current = null, vx();
      try {
        if (r) {
          var D = function() {
            throw Error();
          };
          if (Object.defineProperty(D.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(D, []);
            } catch (Be) {
              f = Be;
            }
            Reflect.construct(o, [], D);
          } else {
            try {
              D.call();
            } catch (Be) {
              f = Be;
            }
            o.call(D.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (Be) {
            f = Be;
          }
          o();
        }
      } catch (Be) {
        if (Be && f && typeof Be.stack == "string") {
          for (var A = Be.stack.split(`
`), j = f.stack.split(`
`), G = A.length - 1, ee = j.length - 1; G >= 1 && ee >= 0 && A[G] !== j[ee]; )
            ee--;
          for (; G >= 1 && ee >= 0; G--, ee--)
            if (A[G] !== j[ee]) {
              if (G !== 1 || ee !== 1)
                do
                  if (G--, ee--, ee < 0 || A[G] !== j[ee]) {
                    var ye = `
` + A[G].replace(" at new ", " at ");
                    return o.displayName && ye.includes("<anonymous>") && (ye = ye.replace("<anonymous>", o.displayName)), typeof o == "function" && Id.set(o, ye), ye;
                  }
                while (G >= 1 && ee >= 0);
              break;
            }
        }
      } finally {
        lm = !1, Kl.current = T, Ld(), Error.prepareStackTrace = v;
      }
      var he = o ? o.displayName || o.name : "", Ve = he ? Ba(he) : "";
      return typeof o == "function" && Id.set(o, Ve), Ve;
    }
    function um(o, r, c) {
      return Ad(o, !0);
    }
    function Xs(o, r, c) {
      return Ad(o, !1);
    }
    function gx(o) {
      var r = o.prototype;
      return !!(r && r.isReactComponent);
    }
    function uu(o, r, c) {
      if (o == null)
        return "";
      if (typeof o == "function")
        return Ad(o, gx(o));
      if (typeof o == "string")
        return Ba(o);
      switch (o) {
        case Ge:
          return Ba("Suspense");
        case Te:
          return Ba("SuspenseList");
      }
      if (typeof o == "object")
        switch (o.$$typeof) {
          case Co:
            return Xs(o.render);
          case it:
            return uu(o.type, r, c);
          case Tt: {
            var f = o, v = f._payload, T = f._init;
            try {
              return uu(T(v), r, c);
            } catch {
            }
          }
        }
      return "";
    }
    function Mn(o) {
      switch (o._debugOwner && o._debugOwner.type, o._debugSource, o.tag) {
        case R:
          return Ba(o.type);
        case H:
          return Ba("Lazy");
        case B:
          return Ba("Suspense");
        case Y:
          return Ba("SuspenseList");
        case g:
        case x:
        case F:
          return Xs(o.type);
        case I:
          return Xs(o.type.render);
        case b:
          return um(o.type);
        default:
          return "";
      }
    }
    function dm(o) {
      try {
        var r = "", c = o;
        do
          r += Mn(c), c = c.return;
        while (c);
        return r;
      } catch (f) {
        return `
Error generating stack: ` + f.message + `
` + f.stack;
      }
    }
    function Ug(o, r, c) {
      var f = o.displayName;
      if (f)
        return f;
      var v = r.displayName || r.name || "";
      return v !== "" ? c + "(" + v + ")" : c;
    }
    function _d(o) {
      return o.displayName || "Context";
    }
    function jn(o) {
      if (o == null)
        return null;
      if (typeof o.tag == "number" && p("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof o == "function")
        return o.displayName || o.name || null;
      if (typeof o == "string")
        return o;
      switch (o) {
        case Jo:
          return "Fragment";
        case ao:
          return "Portal";
        case Fo:
          return "Profiler";
        case zo:
          return "StrictMode";
        case Ge:
          return "Suspense";
        case Te:
          return "SuspenseList";
      }
      if (typeof o == "object")
        switch (o.$$typeof) {
          case jo:
            var r = o;
            return _d(r) + ".Consumer";
          case Nr:
            var c = o;
            return _d(c._context) + ".Provider";
          case Co:
            return Ug(o, o.render, "ForwardRef");
          case it:
            var f = o.displayName || null;
            return f !== null ? f : jn(o.type) || "Memo";
          case Tt: {
            var v = o, T = v._payload, D = v._init;
            try {
              return jn(D(T));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    function Hg(o, r, c) {
      var f = r.displayName || r.name || "";
      return o.displayName || (f !== "" ? c + "(" + f + ")" : c);
    }
    function pm(o) {
      return o.displayName || "Context";
    }
    function on(o) {
      var r = o.tag, c = o.type;
      switch (r) {
        case X:
          return "Cache";
        case N:
          var f = c;
          return pm(f) + ".Consumer";
        case V:
          var v = c;
          return pm(v._context) + ".Provider";
        case Q:
          return "DehydratedFragment";
        case I:
          return Hg(c, c.render, "ForwardRef");
        case M:
          return "Fragment";
        case R:
          return c;
        case E:
          return "Portal";
        case S:
          return "Root";
        case $:
          return "Text";
        case H:
          return jn(c);
        case O:
          return c === zo ? "StrictMode" : "Mode";
        case Z:
          return "Offscreen";
        case z:
          return "Profiler";
        case te:
          return "Scope";
        case B:
          return "Suspense";
        case Y:
          return "SuspenseList";
        case oe:
          return "TracingMarker";
        case b:
        case g:
        case U:
        case x:
        case P:
        case F:
          if (typeof c == "function")
            return c.displayName || c.name || null;
          if (typeof c == "string")
            return c;
          break;
      }
      return null;
    }
    var du = a.ReactDebugCurrentFrame, To = null, ma = !1;
    function ha() {
      {
        if (To === null)
          return null;
        var o = To._debugOwner;
        if (o !== null && typeof o < "u")
          return on(o);
      }
      return null;
    }
    function pu() {
      return To === null ? "" : dm(To);
    }
    function Mo() {
      du.getCurrentStack = null, To = null, ma = !1;
    }
    function In(o) {
      du.getCurrentStack = o === null ? null : pu, To = o, ma = !1;
    }
    function bx() {
      return To;
    }
    function za(o) {
      ma = o;
    }
    function mr(o) {
      return "" + o;
    }
    function ls(o) {
      switch (typeof o) {
        case "boolean":
        case "number":
        case "string":
        case "undefined":
          return o;
        case "object":
          return vt(o), o;
        default:
          return "";
      }
    }
    var Wg = {
      button: !0,
      checkbox: !0,
      image: !0,
      hidden: !0,
      radio: !0,
      reset: !0,
      submit: !0
    };
    function Ql(o, r) {
      Wg[r.type] || r.onChange || r.onInput || r.readOnly || r.disabled || r.value == null || p("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`."), r.onChange || r.readOnly || r.disabled || r.checked == null || p("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function fm(o) {
      var r = o.type, c = o.nodeName;
      return c && c.toLowerCase() === "input" && (r === "checkbox" || r === "radio");
    }
    function Yg(o) {
      return o._valueTracker;
    }
    function fu(o) {
      o._valueTracker = null;
    }
    function mu(o) {
      var r = "";
      return o && (fm(o) ? r = o.checked ? "true" : "false" : r = o.value), r;
    }
    function Xl(o) {
      var r = fm(o) ? "checked" : "value", c = Object.getOwnPropertyDescriptor(o.constructor.prototype, r);
      vt(o[r]);
      var f = "" + o[r];
      if (!(o.hasOwnProperty(r) || typeof c > "u" || typeof c.get != "function" || typeof c.set != "function")) {
        var v = c.get, T = c.set;
        Object.defineProperty(o, r, {
          configurable: !0,
          get: function() {
            return v.call(this);
          },
          set: function(A) {
            vt(A), f = "" + A, T.call(this, A);
          }
        }), Object.defineProperty(o, r, {
          enumerable: c.enumerable
        });
        var D = {
          getValue: function() {
            return f;
          },
          setValue: function(A) {
            vt(A), f = "" + A;
          },
          stopTracking: function() {
            fu(o), delete o[r];
          }
        };
        return D;
      }
    }
    function Zs(o) {
      Yg(o) || (o._valueTracker = Xl(o));
    }
    function qg(o) {
      if (!o)
        return !1;
      var r = Yg(o);
      if (!r)
        return !0;
      var c = r.getValue(), f = mu(o);
      return f !== c ? (r.setValue(f), !0) : !1;
    }
    function Vd(o) {
      if (o = o || (typeof document < "u" ? document : void 0), typeof o > "u")
        return null;
      try {
        return o.activeElement || o.body;
      } catch {
        return o.body;
      }
    }
    var Bd = !1, hu = !1, zd = !1, mm = !1;
    function wi(o) {
      var r = o.type === "checkbox" || o.type === "radio";
      return r ? o.checked != null : o.value != null;
    }
    function vu(o, r) {
      var c = o, f = r.checked, v = fn({}, r, {
        defaultChecked: void 0,
        defaultValue: void 0,
        value: void 0,
        checked: f ?? c._wrapperState.initialChecked
      });
      return v;
    }
    function gu(o, r) {
      Ql("input", r), r.checked !== void 0 && r.defaultChecked !== void 0 && !hu && (p("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", ha() || "A component", r.type), hu = !0), r.value !== void 0 && r.defaultValue !== void 0 && !Bd && (p("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", ha() || "A component", r.type), Bd = !0);
      var c = o, f = r.defaultValue == null ? "" : r.defaultValue;
      c._wrapperState = {
        initialChecked: r.checked != null ? r.checked : r.defaultChecked,
        initialValue: ls(r.value != null ? r.value : f),
        controlled: wi(r)
      };
    }
    function hm(o, r) {
      var c = o, f = r.checked;
      f != null && qn(c, "checked", f, !1);
    }
    function Zl(o, r) {
      var c = o;
      {
        var f = wi(r);
        !c._wrapperState.controlled && f && !mm && (p("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components"), mm = !0), c._wrapperState.controlled && !f && !zd && (p("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components"), zd = !0);
      }
      hm(o, r);
      var v = ls(r.value), T = r.type;
      if (v != null)
        T === "number" ? (v === 0 && c.value === "" || // We explicitly want to coerce to number here if possible.
        // eslint-disable-next-line
        c.value != v) && (c.value = mr(v)) : c.value !== mr(v) && (c.value = mr(v));
      else if (T === "submit" || T === "reset") {
        c.removeAttribute("value");
        return;
      }
      r.hasOwnProperty("value") ? cs(c, r.type, v) : r.hasOwnProperty("defaultValue") && cs(c, r.type, ls(r.defaultValue)), r.checked == null && r.defaultChecked != null && (c.defaultChecked = !!r.defaultChecked);
    }
    function bu(o, r, c) {
      var f = o;
      if (r.hasOwnProperty("value") || r.hasOwnProperty("defaultValue")) {
        var v = r.type, T = v === "submit" || v === "reset";
        if (T && (r.value === void 0 || r.value === null))
          return;
        var D = mr(f._wrapperState.initialValue);
        c || D !== f.value && (f.value = D), f.defaultValue = D;
      }
      var A = f.name;
      A !== "" && (f.name = ""), f.defaultChecked = !f.defaultChecked, f.defaultChecked = !!f._wrapperState.initialChecked, A !== "" && (f.name = A);
    }
    function Gg(o, r) {
      var c = o;
      Zl(c, r), Jr(c, r);
    }
    function Jr(o, r) {
      var c = r.name;
      if (r.type === "radio" && c != null) {
        for (var f = o; f.parentNode; )
          f = f.parentNode;
        _e(c, "name");
        for (var v = f.querySelectorAll("input[name=" + JSON.stringify("" + c) + '][type="radio"]'), T = 0; T < v.length; T++) {
          var D = v[T];
          if (!(D === o || D.form !== o.form)) {
            var A = ky(D);
            if (!A)
              throw new Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
            qg(D), Zl(D, A);
          }
        }
      }
    }
    function cs(o, r, c) {
      // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
      (r !== "number" || Vd(o.ownerDocument) !== o) && (c == null ? o.defaultValue = mr(o._wrapperState.initialValue) : o.defaultValue !== mr(c) && (o.defaultValue = mr(c)));
    }
    var Fd = !1, Jl = !1, Kg = !1;
    function jd(o, r) {
      r.value == null && (typeof r.children == "object" && r.children !== null ? e.Children.forEach(r.children, function(c) {
        c != null && (typeof c == "string" || typeof c == "number" || Jl || (Jl = !0, p("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.")));
      }) : r.dangerouslySetInnerHTML != null && (Kg || (Kg = !0, p("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.")))), r.selected != null && !Fd && (p("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>."), Fd = !0);
    }
    function vm(o, r) {
      r.value != null && o.setAttribute("value", mr(ls(r.value)));
    }
    var yu = Array.isArray;
    function Uo(o) {
      return yu(o);
    }
    var Ud;
    Ud = !1;
    function Qg() {
      var o = ha();
      return o ? `

Check the render method of \`` + o + "`." : "";
    }
    var Xg = ["value", "defaultValue"];
    function yx(o) {
      {
        Ql("select", o);
        for (var r = 0; r < Xg.length; r++) {
          var c = Xg[r];
          if (o[c] != null) {
            var f = Uo(o[c]);
            o.multiple && !f ? p("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", c, Qg()) : !o.multiple && f && p("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", c, Qg());
          }
        }
      }
    }
    function us(o, r, c, f) {
      var v = o.options;
      if (r) {
        for (var T = c, D = {}, A = 0; A < T.length; A++)
          D["$" + T[A]] = !0;
        for (var j = 0; j < v.length; j++) {
          var G = D.hasOwnProperty("$" + v[j].value);
          v[j].selected !== G && (v[j].selected = G), G && f && (v[j].defaultSelected = !0);
        }
      } else {
        for (var ee = mr(ls(c)), ye = null, he = 0; he < v.length; he++) {
          if (v[he].value === ee) {
            v[he].selected = !0, f && (v[he].defaultSelected = !0);
            return;
          }
          ye === null && !v[he].disabled && (ye = v[he]);
        }
        ye !== null && (ye.selected = !0);
      }
    }
    function gm(o, r) {
      return fn({}, r, {
        value: void 0
      });
    }
    function Zg(o, r) {
      var c = o;
      yx(r), c._wrapperState = {
        wasMultiple: !!r.multiple
      }, r.value !== void 0 && r.defaultValue !== void 0 && !Ud && (p("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components"), Ud = !0);
    }
    function Cx(o, r) {
      var c = o;
      c.multiple = !!r.multiple;
      var f = r.value;
      f != null ? us(c, !!r.multiple, f, !1) : r.defaultValue != null && us(c, !!r.multiple, r.defaultValue, !0);
    }
    function Tx(o, r) {
      var c = o, f = c._wrapperState.wasMultiple;
      c._wrapperState.wasMultiple = !!r.multiple;
      var v = r.value;
      v != null ? us(c, !!r.multiple, v, !1) : f !== !!r.multiple && (r.defaultValue != null ? us(c, !!r.multiple, r.defaultValue, !0) : us(c, !!r.multiple, r.multiple ? [] : "", !1));
    }
    function xx(o, r) {
      var c = o, f = r.value;
      f != null && us(c, !!r.multiple, f, !1);
    }
    var bm = !1;
    function ym(o, r) {
      var c = o;
      if (r.dangerouslySetInnerHTML != null)
        throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
      var f = fn({}, r, {
        value: void 0,
        defaultValue: void 0,
        children: mr(c._wrapperState.initialValue)
      });
      return f;
    }
    function Jg(o, r) {
      var c = o;
      Ql("textarea", r), r.value !== void 0 && r.defaultValue !== void 0 && !bm && (p("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", ha() || "A component"), bm = !0);
      var f = r.value;
      if (f == null) {
        var v = r.children, T = r.defaultValue;
        if (v != null) {
          p("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
          {
            if (T != null)
              throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
            if (Uo(v)) {
              if (v.length > 1)
                throw new Error("<textarea> can only have at most one child.");
              v = v[0];
            }
            T = v;
          }
        }
        T == null && (T = ""), f = T;
      }
      c._wrapperState = {
        initialValue: ls(f)
      };
    }
    function eb(o, r) {
      var c = o, f = ls(r.value), v = ls(r.defaultValue);
      if (f != null) {
        var T = mr(f);
        T !== c.value && (c.value = T), r.defaultValue == null && c.defaultValue !== T && (c.defaultValue = T);
      }
      v != null && (c.defaultValue = mr(v));
    }
    function tb(o, r) {
      var c = o, f = c.textContent;
      f === c._wrapperState.initialValue && f !== "" && f !== null && (c.value = f);
    }
    function Cm(o, r) {
      eb(o, r);
    }
    var Ri = "http://www.w3.org/1999/xhtml", Sx = "http://www.w3.org/1998/Math/MathML", Tm = "http://www.w3.org/2000/svg";
    function Hd(o) {
      switch (o) {
        case "svg":
          return Tm;
        case "math":
          return Sx;
        default:
          return Ri;
      }
    }
    function xm(o, r) {
      return o == null || o === Ri ? Hd(r) : o === Tm && r === "foreignObject" ? Ri : o;
    }
    var kx = function(o) {
      return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(r, c, f, v) {
        MSApp.execUnsafeLocalFunction(function() {
          return o(r, c, f, v);
        });
      } : o;
    }, Wd, nb = kx(function(o, r) {
      if (o.namespaceURI === Tm && !("innerHTML" in o)) {
        Wd = Wd || document.createElement("div"), Wd.innerHTML = "<svg>" + r.valueOf().toString() + "</svg>";
        for (var c = Wd.firstChild; o.firstChild; )
          o.removeChild(o.firstChild);
        for (; c.firstChild; )
          o.appendChild(c.firstChild);
        return;
      }
      o.innerHTML = r;
    }), Lr = 1, Ei = 3, xo = 8, Fa = 9, Js = 11, Yd = function(o, r) {
      if (r) {
        var c = o.firstChild;
        if (c && c === o.lastChild && c.nodeType === Ei) {
          c.nodeValue = r;
          return;
        }
      }
      o.textContent = r;
    }, ob = {
      animation: ["animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationPlayState", "animationTimingFunction"],
      background: ["backgroundAttachment", "backgroundClip", "backgroundColor", "backgroundImage", "backgroundOrigin", "backgroundPositionX", "backgroundPositionY", "backgroundRepeat", "backgroundSize"],
      backgroundPosition: ["backgroundPositionX", "backgroundPositionY"],
      border: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderTopColor", "borderTopStyle", "borderTopWidth"],
      borderBlockEnd: ["borderBlockEndColor", "borderBlockEndStyle", "borderBlockEndWidth"],
      borderBlockStart: ["borderBlockStartColor", "borderBlockStartStyle", "borderBlockStartWidth"],
      borderBottom: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth"],
      borderColor: ["borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor"],
      borderImage: ["borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth"],
      borderInlineEnd: ["borderInlineEndColor", "borderInlineEndStyle", "borderInlineEndWidth"],
      borderInlineStart: ["borderInlineStartColor", "borderInlineStartStyle", "borderInlineStartWidth"],
      borderLeft: ["borderLeftColor", "borderLeftStyle", "borderLeftWidth"],
      borderRadius: ["borderBottomLeftRadius", "borderBottomRightRadius", "borderTopLeftRadius", "borderTopRightRadius"],
      borderRight: ["borderRightColor", "borderRightStyle", "borderRightWidth"],
      borderStyle: ["borderBottomStyle", "borderLeftStyle", "borderRightStyle", "borderTopStyle"],
      borderTop: ["borderTopColor", "borderTopStyle", "borderTopWidth"],
      borderWidth: ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopWidth"],
      columnRule: ["columnRuleColor", "columnRuleStyle", "columnRuleWidth"],
      columns: ["columnCount", "columnWidth"],
      flex: ["flexBasis", "flexGrow", "flexShrink"],
      flexFlow: ["flexDirection", "flexWrap"],
      font: ["fontFamily", "fontFeatureSettings", "fontKerning", "fontLanguageOverride", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition", "fontWeight", "lineHeight"],
      fontVariant: ["fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition"],
      gap: ["columnGap", "rowGap"],
      grid: ["gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
      gridArea: ["gridColumnEnd", "gridColumnStart", "gridRowEnd", "gridRowStart"],
      gridColumn: ["gridColumnEnd", "gridColumnStart"],
      gridColumnGap: ["columnGap"],
      gridGap: ["columnGap", "rowGap"],
      gridRow: ["gridRowEnd", "gridRowStart"],
      gridRowGap: ["rowGap"],
      gridTemplate: ["gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
      listStyle: ["listStyleImage", "listStylePosition", "listStyleType"],
      margin: ["marginBottom", "marginLeft", "marginRight", "marginTop"],
      marker: ["markerEnd", "markerMid", "markerStart"],
      mask: ["maskClip", "maskComposite", "maskImage", "maskMode", "maskOrigin", "maskPositionX", "maskPositionY", "maskRepeat", "maskSize"],
      maskPosition: ["maskPositionX", "maskPositionY"],
      outline: ["outlineColor", "outlineStyle", "outlineWidth"],
      overflow: ["overflowX", "overflowY"],
      padding: ["paddingBottom", "paddingLeft", "paddingRight", "paddingTop"],
      placeContent: ["alignContent", "justifyContent"],
      placeItems: ["alignItems", "justifyItems"],
      placeSelf: ["alignSelf", "justifySelf"],
      textDecoration: ["textDecorationColor", "textDecorationLine", "textDecorationStyle"],
      textEmphasis: ["textEmphasisColor", "textEmphasisStyle"],
      transition: ["transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction"],
      wordWrap: ["overflowWrap"]
    }, ec = {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      // SVG-related properties
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0
    };
    function rb(o, r) {
      return o + r.charAt(0).toUpperCase() + r.substring(1);
    }
    var ab = ["Webkit", "ms", "Moz", "O"];
    Object.keys(ec).forEach(function(o) {
      ab.forEach(function(r) {
        ec[rb(r, o)] = ec[o];
      });
    });
    function qd(o, r, c) {
      var f = r == null || typeof r == "boolean" || r === "";
      return f ? "" : !c && typeof r == "number" && r !== 0 && !(ec.hasOwnProperty(o) && ec[o]) ? r + "px" : (ve(r, o), ("" + r).trim());
    }
    var tc = /([A-Z])/g, wx = /^ms-/;
    function Rx(o) {
      return o.replace(tc, "-$1").toLowerCase().replace(wx, "-ms-");
    }
    var ib = function() {
    };
    {
      var sb = /^(?:webkit|moz|o)[A-Z]/, lb = /^-ms-/, Cu = /-(.)/g, nc = /;\s*$/, oc = {}, rc = {}, cb = !1, Sm = !1, km = function(o) {
        return o.replace(Cu, function(r, c) {
          return c.toUpperCase();
        });
      }, wm = function(o) {
        oc.hasOwnProperty(o) && oc[o] || (oc[o] = !0, p(
          "Unsupported style property %s. Did you mean %s?",
          o,
          // As Andi Smith suggests
          // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
          // is converted to lowercase `ms`.
          km(o.replace(lb, "ms-"))
        ));
      }, ub = function(o) {
        oc.hasOwnProperty(o) && oc[o] || (oc[o] = !0, p("Unsupported vendor-prefixed style property %s. Did you mean %s?", o, o.charAt(0).toUpperCase() + o.slice(1)));
      }, db = function(o, r) {
        rc.hasOwnProperty(r) && rc[r] || (rc[r] = !0, p(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, o, r.replace(nc, "")));
      }, pb = function(o, r) {
        cb || (cb = !0, p("`NaN` is an invalid value for the `%s` css style property.", o));
      }, Ex = function(o, r) {
        Sm || (Sm = !0, p("`Infinity` is an invalid value for the `%s` css style property.", o));
      };
      ib = function(o, r) {
        o.indexOf("-") > -1 ? wm(o) : sb.test(o) ? ub(o) : nc.test(r) && db(o, r), typeof r == "number" && (isNaN(r) ? pb(o, r) : isFinite(r) || Ex(o, r));
      };
    }
    var Ox = ib;
    function Px(o) {
      {
        var r = "", c = "";
        for (var f in o)
          if (o.hasOwnProperty(f)) {
            var v = o[f];
            if (v != null) {
              var T = f.indexOf("--") === 0;
              r += c + (T ? f : Rx(f)) + ":", r += qd(f, v, T), c = ";";
            }
          }
        return r || null;
      }
    }
    function fb(o, r) {
      var c = o.style;
      for (var f in r)
        if (r.hasOwnProperty(f)) {
          var v = f.indexOf("--") === 0;
          v || Ox(f, r[f]);
          var T = qd(f, r[f], v);
          f === "float" && (f = "cssFloat"), v ? c.setProperty(f, T) : c[f] = T;
        }
    }
    function Dx(o) {
      return o == null || typeof o == "boolean" || o === "";
    }
    function va(o) {
      var r = {};
      for (var c in o)
        for (var f = ob[c] || [c], v = 0; v < f.length; v++)
          r[f[v]] = c;
      return r;
    }
    function Tu(o, r) {
      {
        if (!r)
          return;
        var c = va(o), f = va(r), v = {};
        for (var T in c) {
          var D = c[T], A = f[T];
          if (A && D !== A) {
            var j = D + "," + A;
            if (v[j])
              continue;
            v[j] = !0, p("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", Dx(o[D]) ? "Removing" : "Updating", D, A);
          }
        }
      }
    }
    var mb = {
      area: !0,
      base: !0,
      br: !0,
      col: !0,
      embed: !0,
      hr: !0,
      img: !0,
      input: !0,
      keygen: !0,
      link: !0,
      meta: !0,
      param: !0,
      source: !0,
      track: !0,
      wbr: !0
      // NOTE: menuitem's close tag should be omitted, but that causes problems.
    }, hb = fn({
      menuitem: !0
    }, mb), vb = "__html";
    function Gd(o, r) {
      if (r) {
        if (hb[o] && (r.children != null || r.dangerouslySetInnerHTML != null))
          throw new Error(o + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
        if (r.dangerouslySetInnerHTML != null) {
          if (r.children != null)
            throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
          if (typeof r.dangerouslySetInnerHTML != "object" || !(vb in r.dangerouslySetInnerHTML))
            throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        }
        if (!r.suppressContentEditableWarning && r.contentEditable && r.children != null && p("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional."), r.style != null && typeof r.style != "object")
          throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
      }
    }
    function Oi(o, r) {
      if (o.indexOf("-") === -1)
        return typeof r.is == "string";
      switch (o) {
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return !1;
        default:
          return !0;
      }
    }
    var Kd = {
      // HTML
      accept: "accept",
      acceptcharset: "acceptCharset",
      "accept-charset": "acceptCharset",
      accesskey: "accessKey",
      action: "action",
      allowfullscreen: "allowFullScreen",
      alt: "alt",
      as: "as",
      async: "async",
      autocapitalize: "autoCapitalize",
      autocomplete: "autoComplete",
      autocorrect: "autoCorrect",
      autofocus: "autoFocus",
      autoplay: "autoPlay",
      autosave: "autoSave",
      capture: "capture",
      cellpadding: "cellPadding",
      cellspacing: "cellSpacing",
      challenge: "challenge",
      charset: "charSet",
      checked: "checked",
      children: "children",
      cite: "cite",
      class: "className",
      classid: "classID",
      classname: "className",
      cols: "cols",
      colspan: "colSpan",
      content: "content",
      contenteditable: "contentEditable",
      contextmenu: "contextMenu",
      controls: "controls",
      controlslist: "controlsList",
      coords: "coords",
      crossorigin: "crossOrigin",
      dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
      data: "data",
      datetime: "dateTime",
      default: "default",
      defaultchecked: "defaultChecked",
      defaultvalue: "defaultValue",
      defer: "defer",
      dir: "dir",
      disabled: "disabled",
      disablepictureinpicture: "disablePictureInPicture",
      disableremoteplayback: "disableRemotePlayback",
      download: "download",
      draggable: "draggable",
      enctype: "encType",
      enterkeyhint: "enterKeyHint",
      for: "htmlFor",
      form: "form",
      formmethod: "formMethod",
      formaction: "formAction",
      formenctype: "formEncType",
      formnovalidate: "formNoValidate",
      formtarget: "formTarget",
      frameborder: "frameBorder",
      headers: "headers",
      height: "height",
      hidden: "hidden",
      high: "high",
      href: "href",
      hreflang: "hrefLang",
      htmlfor: "htmlFor",
      httpequiv: "httpEquiv",
      "http-equiv": "httpEquiv",
      icon: "icon",
      id: "id",
      imagesizes: "imageSizes",
      imagesrcset: "imageSrcSet",
      innerhtml: "innerHTML",
      inputmode: "inputMode",
      integrity: "integrity",
      is: "is",
      itemid: "itemID",
      itemprop: "itemProp",
      itemref: "itemRef",
      itemscope: "itemScope",
      itemtype: "itemType",
      keyparams: "keyParams",
      keytype: "keyType",
      kind: "kind",
      label: "label",
      lang: "lang",
      list: "list",
      loop: "loop",
      low: "low",
      manifest: "manifest",
      marginwidth: "marginWidth",
      marginheight: "marginHeight",
      max: "max",
      maxlength: "maxLength",
      media: "media",
      mediagroup: "mediaGroup",
      method: "method",
      min: "min",
      minlength: "minLength",
      multiple: "multiple",
      muted: "muted",
      name: "name",
      nomodule: "noModule",
      nonce: "nonce",
      novalidate: "noValidate",
      open: "open",
      optimum: "optimum",
      pattern: "pattern",
      placeholder: "placeholder",
      playsinline: "playsInline",
      poster: "poster",
      preload: "preload",
      profile: "profile",
      radiogroup: "radioGroup",
      readonly: "readOnly",
      referrerpolicy: "referrerPolicy",
      rel: "rel",
      required: "required",
      reversed: "reversed",
      role: "role",
      rows: "rows",
      rowspan: "rowSpan",
      sandbox: "sandbox",
      scope: "scope",
      scoped: "scoped",
      scrolling: "scrolling",
      seamless: "seamless",
      selected: "selected",
      shape: "shape",
      size: "size",
      sizes: "sizes",
      span: "span",
      spellcheck: "spellCheck",
      src: "src",
      srcdoc: "srcDoc",
      srclang: "srcLang",
      srcset: "srcSet",
      start: "start",
      step: "step",
      style: "style",
      summary: "summary",
      tabindex: "tabIndex",
      target: "target",
      title: "title",
      type: "type",
      usemap: "useMap",
      value: "value",
      width: "width",
      wmode: "wmode",
      wrap: "wrap",
      // SVG
      about: "about",
      accentheight: "accentHeight",
      "accent-height": "accentHeight",
      accumulate: "accumulate",
      additive: "additive",
      alignmentbaseline: "alignmentBaseline",
      "alignment-baseline": "alignmentBaseline",
      allowreorder: "allowReorder",
      alphabetic: "alphabetic",
      amplitude: "amplitude",
      arabicform: "arabicForm",
      "arabic-form": "arabicForm",
      ascent: "ascent",
      attributename: "attributeName",
      attributetype: "attributeType",
      autoreverse: "autoReverse",
      azimuth: "azimuth",
      basefrequency: "baseFrequency",
      baselineshift: "baselineShift",
      "baseline-shift": "baselineShift",
      baseprofile: "baseProfile",
      bbox: "bbox",
      begin: "begin",
      bias: "bias",
      by: "by",
      calcmode: "calcMode",
      capheight: "capHeight",
      "cap-height": "capHeight",
      clip: "clip",
      clippath: "clipPath",
      "clip-path": "clipPath",
      clippathunits: "clipPathUnits",
      cliprule: "clipRule",
      "clip-rule": "clipRule",
      color: "color",
      colorinterpolation: "colorInterpolation",
      "color-interpolation": "colorInterpolation",
      colorinterpolationfilters: "colorInterpolationFilters",
      "color-interpolation-filters": "colorInterpolationFilters",
      colorprofile: "colorProfile",
      "color-profile": "colorProfile",
      colorrendering: "colorRendering",
      "color-rendering": "colorRendering",
      contentscripttype: "contentScriptType",
      contentstyletype: "contentStyleType",
      cursor: "cursor",
      cx: "cx",
      cy: "cy",
      d: "d",
      datatype: "datatype",
      decelerate: "decelerate",
      descent: "descent",
      diffuseconstant: "diffuseConstant",
      direction: "direction",
      display: "display",
      divisor: "divisor",
      dominantbaseline: "dominantBaseline",
      "dominant-baseline": "dominantBaseline",
      dur: "dur",
      dx: "dx",
      dy: "dy",
      edgemode: "edgeMode",
      elevation: "elevation",
      enablebackground: "enableBackground",
      "enable-background": "enableBackground",
      end: "end",
      exponent: "exponent",
      externalresourcesrequired: "externalResourcesRequired",
      fill: "fill",
      fillopacity: "fillOpacity",
      "fill-opacity": "fillOpacity",
      fillrule: "fillRule",
      "fill-rule": "fillRule",
      filter: "filter",
      filterres: "filterRes",
      filterunits: "filterUnits",
      floodopacity: "floodOpacity",
      "flood-opacity": "floodOpacity",
      floodcolor: "floodColor",
      "flood-color": "floodColor",
      focusable: "focusable",
      fontfamily: "fontFamily",
      "font-family": "fontFamily",
      fontsize: "fontSize",
      "font-size": "fontSize",
      fontsizeadjust: "fontSizeAdjust",
      "font-size-adjust": "fontSizeAdjust",
      fontstretch: "fontStretch",
      "font-stretch": "fontStretch",
      fontstyle: "fontStyle",
      "font-style": "fontStyle",
      fontvariant: "fontVariant",
      "font-variant": "fontVariant",
      fontweight: "fontWeight",
      "font-weight": "fontWeight",
      format: "format",
      from: "from",
      fx: "fx",
      fy: "fy",
      g1: "g1",
      g2: "g2",
      glyphname: "glyphName",
      "glyph-name": "glyphName",
      glyphorientationhorizontal: "glyphOrientationHorizontal",
      "glyph-orientation-horizontal": "glyphOrientationHorizontal",
      glyphorientationvertical: "glyphOrientationVertical",
      "glyph-orientation-vertical": "glyphOrientationVertical",
      glyphref: "glyphRef",
      gradienttransform: "gradientTransform",
      gradientunits: "gradientUnits",
      hanging: "hanging",
      horizadvx: "horizAdvX",
      "horiz-adv-x": "horizAdvX",
      horizoriginx: "horizOriginX",
      "horiz-origin-x": "horizOriginX",
      ideographic: "ideographic",
      imagerendering: "imageRendering",
      "image-rendering": "imageRendering",
      in2: "in2",
      in: "in",
      inlist: "inlist",
      intercept: "intercept",
      k1: "k1",
      k2: "k2",
      k3: "k3",
      k4: "k4",
      k: "k",
      kernelmatrix: "kernelMatrix",
      kernelunitlength: "kernelUnitLength",
      kerning: "kerning",
      keypoints: "keyPoints",
      keysplines: "keySplines",
      keytimes: "keyTimes",
      lengthadjust: "lengthAdjust",
      letterspacing: "letterSpacing",
      "letter-spacing": "letterSpacing",
      lightingcolor: "lightingColor",
      "lighting-color": "lightingColor",
      limitingconeangle: "limitingConeAngle",
      local: "local",
      markerend: "markerEnd",
      "marker-end": "markerEnd",
      markerheight: "markerHeight",
      markermid: "markerMid",
      "marker-mid": "markerMid",
      markerstart: "markerStart",
      "marker-start": "markerStart",
      markerunits: "markerUnits",
      markerwidth: "markerWidth",
      mask: "mask",
      maskcontentunits: "maskContentUnits",
      maskunits: "maskUnits",
      mathematical: "mathematical",
      mode: "mode",
      numoctaves: "numOctaves",
      offset: "offset",
      opacity: "opacity",
      operator: "operator",
      order: "order",
      orient: "orient",
      orientation: "orientation",
      origin: "origin",
      overflow: "overflow",
      overlineposition: "overlinePosition",
      "overline-position": "overlinePosition",
      overlinethickness: "overlineThickness",
      "overline-thickness": "overlineThickness",
      paintorder: "paintOrder",
      "paint-order": "paintOrder",
      panose1: "panose1",
      "panose-1": "panose1",
      pathlength: "pathLength",
      patterncontentunits: "patternContentUnits",
      patterntransform: "patternTransform",
      patternunits: "patternUnits",
      pointerevents: "pointerEvents",
      "pointer-events": "pointerEvents",
      points: "points",
      pointsatx: "pointsAtX",
      pointsaty: "pointsAtY",
      pointsatz: "pointsAtZ",
      prefix: "prefix",
      preservealpha: "preserveAlpha",
      preserveaspectratio: "preserveAspectRatio",
      primitiveunits: "primitiveUnits",
      property: "property",
      r: "r",
      radius: "radius",
      refx: "refX",
      refy: "refY",
      renderingintent: "renderingIntent",
      "rendering-intent": "renderingIntent",
      repeatcount: "repeatCount",
      repeatdur: "repeatDur",
      requiredextensions: "requiredExtensions",
      requiredfeatures: "requiredFeatures",
      resource: "resource",
      restart: "restart",
      result: "result",
      results: "results",
      rotate: "rotate",
      rx: "rx",
      ry: "ry",
      scale: "scale",
      security: "security",
      seed: "seed",
      shaperendering: "shapeRendering",
      "shape-rendering": "shapeRendering",
      slope: "slope",
      spacing: "spacing",
      specularconstant: "specularConstant",
      specularexponent: "specularExponent",
      speed: "speed",
      spreadmethod: "spreadMethod",
      startoffset: "startOffset",
      stddeviation: "stdDeviation",
      stemh: "stemh",
      stemv: "stemv",
      stitchtiles: "stitchTiles",
      stopcolor: "stopColor",
      "stop-color": "stopColor",
      stopopacity: "stopOpacity",
      "stop-opacity": "stopOpacity",
      strikethroughposition: "strikethroughPosition",
      "strikethrough-position": "strikethroughPosition",
      strikethroughthickness: "strikethroughThickness",
      "strikethrough-thickness": "strikethroughThickness",
      string: "string",
      stroke: "stroke",
      strokedasharray: "strokeDasharray",
      "stroke-dasharray": "strokeDasharray",
      strokedashoffset: "strokeDashoffset",
      "stroke-dashoffset": "strokeDashoffset",
      strokelinecap: "strokeLinecap",
      "stroke-linecap": "strokeLinecap",
      strokelinejoin: "strokeLinejoin",
      "stroke-linejoin": "strokeLinejoin",
      strokemiterlimit: "strokeMiterlimit",
      "stroke-miterlimit": "strokeMiterlimit",
      strokewidth: "strokeWidth",
      "stroke-width": "strokeWidth",
      strokeopacity: "strokeOpacity",
      "stroke-opacity": "strokeOpacity",
      suppresscontenteditablewarning: "suppressContentEditableWarning",
      suppresshydrationwarning: "suppressHydrationWarning",
      surfacescale: "surfaceScale",
      systemlanguage: "systemLanguage",
      tablevalues: "tableValues",
      targetx: "targetX",
      targety: "targetY",
      textanchor: "textAnchor",
      "text-anchor": "textAnchor",
      textdecoration: "textDecoration",
      "text-decoration": "textDecoration",
      textlength: "textLength",
      textrendering: "textRendering",
      "text-rendering": "textRendering",
      to: "to",
      transform: "transform",
      typeof: "typeof",
      u1: "u1",
      u2: "u2",
      underlineposition: "underlinePosition",
      "underline-position": "underlinePosition",
      underlinethickness: "underlineThickness",
      "underline-thickness": "underlineThickness",
      unicode: "unicode",
      unicodebidi: "unicodeBidi",
      "unicode-bidi": "unicodeBidi",
      unicoderange: "unicodeRange",
      "unicode-range": "unicodeRange",
      unitsperem: "unitsPerEm",
      "units-per-em": "unitsPerEm",
      unselectable: "unselectable",
      valphabetic: "vAlphabetic",
      "v-alphabetic": "vAlphabetic",
      values: "values",
      vectoreffect: "vectorEffect",
      "vector-effect": "vectorEffect",
      version: "version",
      vertadvy: "vertAdvY",
      "vert-adv-y": "vertAdvY",
      vertoriginx: "vertOriginX",
      "vert-origin-x": "vertOriginX",
      vertoriginy: "vertOriginY",
      "vert-origin-y": "vertOriginY",
      vhanging: "vHanging",
      "v-hanging": "vHanging",
      videographic: "vIdeographic",
      "v-ideographic": "vIdeographic",
      viewbox: "viewBox",
      viewtarget: "viewTarget",
      visibility: "visibility",
      vmathematical: "vMathematical",
      "v-mathematical": "vMathematical",
      vocab: "vocab",
      widths: "widths",
      wordspacing: "wordSpacing",
      "word-spacing": "wordSpacing",
      writingmode: "writingMode",
      "writing-mode": "writingMode",
      x1: "x1",
      x2: "x2",
      x: "x",
      xchannelselector: "xChannelSelector",
      xheight: "xHeight",
      "x-height": "xHeight",
      xlinkactuate: "xlinkActuate",
      "xlink:actuate": "xlinkActuate",
      xlinkarcrole: "xlinkArcrole",
      "xlink:arcrole": "xlinkArcrole",
      xlinkhref: "xlinkHref",
      "xlink:href": "xlinkHref",
      xlinkrole: "xlinkRole",
      "xlink:role": "xlinkRole",
      xlinkshow: "xlinkShow",
      "xlink:show": "xlinkShow",
      xlinktitle: "xlinkTitle",
      "xlink:title": "xlinkTitle",
      xlinktype: "xlinkType",
      "xlink:type": "xlinkType",
      xmlbase: "xmlBase",
      "xml:base": "xmlBase",
      xmllang: "xmlLang",
      "xml:lang": "xmlLang",
      xmlns: "xmlns",
      "xml:space": "xmlSpace",
      xmlnsxlink: "xmlnsXlink",
      "xmlns:xlink": "xmlnsXlink",
      xmlspace: "xmlSpace",
      y1: "y1",
      y2: "y2",
      y: "y",
      ychannelselector: "yChannelSelector",
      z: "z",
      zoomandpan: "zoomAndPan"
    }, gb = {
      "aria-current": 0,
      // state
      "aria-description": 0,
      "aria-details": 0,
      "aria-disabled": 0,
      // state
      "aria-hidden": 0,
      // state
      "aria-invalid": 0,
      // state
      "aria-keyshortcuts": 0,
      "aria-label": 0,
      "aria-roledescription": 0,
      // Widget Attributes
      "aria-autocomplete": 0,
      "aria-checked": 0,
      "aria-expanded": 0,
      "aria-haspopup": 0,
      "aria-level": 0,
      "aria-modal": 0,
      "aria-multiline": 0,
      "aria-multiselectable": 0,
      "aria-orientation": 0,
      "aria-placeholder": 0,
      "aria-pressed": 0,
      "aria-readonly": 0,
      "aria-required": 0,
      "aria-selected": 0,
      "aria-sort": 0,
      "aria-valuemax": 0,
      "aria-valuemin": 0,
      "aria-valuenow": 0,
      "aria-valuetext": 0,
      // Live Region Attributes
      "aria-atomic": 0,
      "aria-busy": 0,
      "aria-live": 0,
      "aria-relevant": 0,
      // Drag-and-Drop Attributes
      "aria-dropeffect": 0,
      "aria-grabbed": 0,
      // Relationship Attributes
      "aria-activedescendant": 0,
      "aria-colcount": 0,
      "aria-colindex": 0,
      "aria-colspan": 0,
      "aria-controls": 0,
      "aria-describedby": 0,
      "aria-errormessage": 0,
      "aria-flowto": 0,
      "aria-labelledby": 0,
      "aria-owns": 0,
      "aria-posinset": 0,
      "aria-rowcount": 0,
      "aria-rowindex": 0,
      "aria-rowspan": 0,
      "aria-setsize": 0
    }, ja = {}, Rm = new RegExp("^(aria)-[" + lt + "]*$"), xu = new RegExp("^(aria)[A-Z][" + lt + "]*$");
    function Em(o, r) {
      {
        if (ae.call(ja, r) && ja[r])
          return !0;
        if (xu.test(r)) {
          var c = "aria-" + r.slice(4).toLowerCase(), f = gb.hasOwnProperty(c) ? c : null;
          if (f == null)
            return p("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", r), ja[r] = !0, !0;
          if (r !== f)
            return p("Invalid ARIA attribute `%s`. Did you mean `%s`?", r, f), ja[r] = !0, !0;
        }
        if (Rm.test(r)) {
          var v = r.toLowerCase(), T = gb.hasOwnProperty(v) ? v : null;
          if (T == null)
            return ja[r] = !0, !1;
          if (r !== T)
            return p("Unknown ARIA attribute `%s`. Did you mean `%s`?", r, T), ja[r] = !0, !0;
        }
      }
      return !0;
    }
    function bb(o, r) {
      {
        var c = [];
        for (var f in r) {
          var v = Em(o, f);
          v || c.push(f);
        }
        var T = c.map(function(D) {
          return "`" + D + "`";
        }).join(", ");
        c.length === 1 ? p("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", T, o) : c.length > 1 && p("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", T, o);
      }
    }
    function Qd(o, r) {
      Oi(o, r) || bb(o, r);
    }
    var el = !1;
    function Om(o, r) {
      {
        if (o !== "input" && o !== "textarea" && o !== "select")
          return;
        r != null && r.value === null && !el && (el = !0, o === "select" && r.multiple ? p("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", o) : p("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", o));
      }
    }
    var Pm = function() {
    };
    {
      var Ho = {}, Dm = /^on./, yb = /^on[^A-Z]/, Cb = new RegExp("^(aria)-[" + lt + "]*$"), Tb = new RegExp("^(aria)[A-Z][" + lt + "]*$");
      Pm = function(o, r, c, f) {
        if (ae.call(Ho, r) && Ho[r])
          return !0;
        var v = r.toLowerCase();
        if (v === "onfocusin" || v === "onfocusout")
          return p("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."), Ho[r] = !0, !0;
        if (f != null) {
          var T = f.registrationNameDependencies, D = f.possibleRegistrationNames;
          if (T.hasOwnProperty(r))
            return !0;
          var A = D.hasOwnProperty(v) ? D[v] : null;
          if (A != null)
            return p("Invalid event handler property `%s`. Did you mean `%s`?", r, A), Ho[r] = !0, !0;
          if (Dm.test(r))
            return p("Unknown event handler property `%s`. It will be ignored.", r), Ho[r] = !0, !0;
        } else if (Dm.test(r))
          return yb.test(r) && p("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", r), Ho[r] = !0, !0;
        if (Cb.test(r) || Tb.test(r))
          return !0;
        if (v === "innerhtml")
          return p("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."), Ho[r] = !0, !0;
        if (v === "aria")
          return p("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead."), Ho[r] = !0, !0;
        if (v === "is" && c !== null && c !== void 0 && typeof c != "string")
          return p("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof c), Ho[r] = !0, !0;
        if (typeof c == "number" && isNaN(c))
          return p("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", r), Ho[r] = !0, !0;
        var j = Jt(r), G = j !== null && j.type === yt;
        if (Kd.hasOwnProperty(v)) {
          var ee = Kd[v];
          if (ee !== r)
            return p("Invalid DOM property `%s`. Did you mean `%s`?", r, ee), Ho[r] = !0, !0;
        } else if (!G && r !== v)
          return p("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", r, v), Ho[r] = !0, !0;
        return typeof c == "boolean" && $t(r, c, j, !1) ? (c ? p('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', c, r, r, c, r) : p('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', c, r, r, c, r, r, r), Ho[r] = !0, !0) : G ? !0 : $t(r, c, j, !1) ? (Ho[r] = !0, !1) : ((c === "false" || c === "true") && j !== null && j.type === wt && (p("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", c, r, c === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', r, c), Ho[r] = !0), !0);
      };
    }
    var xb = function(o, r, c) {
      {
        var f = [];
        for (var v in r) {
          var T = Pm(o, v, r[v], c);
          T || f.push(v);
        }
        var D = f.map(function(A) {
          return "`" + A + "`";
        }).join(", ");
        f.length === 1 ? p("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", D, o) : f.length > 1 && p("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", D, o);
      }
    };
    function Sb(o, r, c) {
      Oi(o, r) || xb(o, r, c);
    }
    var Pi = 1, Su = 2, tl = 4, Mx = Pi | Su | tl, ku = null;
    function wu(o) {
      ku !== null && p("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue."), ku = o;
    }
    function $x() {
      ku === null && p("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue."), ku = null;
    }
    function kb(o) {
      return o === ku;
    }
    function Xd(o) {
      var r = o.target || o.srcElement || window;
      return r.correspondingUseElement && (r = r.correspondingUseElement), r.nodeType === Ei ? r.parentNode : r;
    }
    var Un = null, ds = null, Di = null;
    function ac(o) {
      var r = Mc(o);
      if (r) {
        if (typeof Un != "function")
          throw new Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
        var c = r.stateNode;
        if (c) {
          var f = ky(c);
          Un(r.stateNode, r.type, f);
        }
      }
    }
    function wb(o) {
      Un = o;
    }
    function Zd(o) {
      ds ? Di ? Di.push(o) : Di = [o] : ds = o;
    }
    function Ru() {
      return ds !== null || Di !== null;
    }
    function Eu() {
      if (ds) {
        var o = ds, r = Di;
        if (ds = null, Di = null, ac(o), r)
          for (var c = 0; c < r.length; c++)
            ac(r[c]);
      }
    }
    var nl = function(o, r) {
      return o(r);
    }, Mm = function() {
    }, $m = !1;
    function Nx() {
      var o = Ru();
      o && (Mm(), Eu());
    }
    function Nm(o, r, c) {
      if ($m)
        return o(r, c);
      $m = !0;
      try {
        return nl(o, r, c);
      } finally {
        $m = !1, Nx();
      }
    }
    function Jd(o, r, c) {
      nl = o, Mm = c;
    }
    function ep(o) {
      return o === "button" || o === "input" || o === "select" || o === "textarea";
    }
    function Lm(o, r, c) {
      switch (o) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
          return !!(c.disabled && ep(r));
        default:
          return !1;
      }
    }
    function ol(o, r) {
      var c = o.stateNode;
      if (c === null)
        return null;
      var f = ky(c);
      if (f === null)
        return null;
      var v = f[r];
      if (Lm(r, o.type, f))
        return null;
      if (v && typeof v != "function")
        throw new Error("Expected `" + r + "` listener to be a function, instead got a value of `" + typeof v + "` type.");
      return v;
    }
    var Ou = !1;
    if (Ce)
      try {
        var rl = {};
        Object.defineProperty(rl, "passive", {
          get: function() {
            Ou = !0;
          }
        }), window.addEventListener("test", rl, rl), window.removeEventListener("test", rl, rl);
      } catch {
        Ou = !1;
      }
    function Rb(o, r, c, f, v, T, D, A, j) {
      var G = Array.prototype.slice.call(arguments, 3);
      try {
        r.apply(c, G);
      } catch (ee) {
        this.onError(ee);
      }
    }
    var Im = Rb;
    if (typeof window < "u" && typeof window.dispatchEvent == "function" && typeof document < "u" && typeof document.createEvent == "function") {
      var Am = document.createElement("react");
      Im = function(r, c, f, v, T, D, A, j, G) {
        if (typeof document > "u" || document === null)
          throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
        var ee = document.createEvent("Event"), ye = !1, he = !0, Ve = window.event, Be = Object.getOwnPropertyDescriptor(window, "event");
        function Qe() {
          Am.removeEventListener(Xe, Ut, !1), typeof window.event < "u" && window.hasOwnProperty("event") && (window.event = Ve);
        }
        var Pt = Array.prototype.slice.call(arguments, 3);
        function Ut() {
          ye = !0, Qe(), c.apply(f, Pt), he = !1;
        }
        var zt, bn = !1, hn = !1;
        function Me($e) {
          if (zt = $e.error, bn = !0, zt === null && $e.colno === 0 && $e.lineno === 0 && (hn = !0), $e.defaultPrevented && zt != null && typeof zt == "object")
            try {
              zt._suppressLogging = !0;
            } catch {
            }
        }
        var Xe = "react-" + (r || "invokeguardedcallback");
        if (window.addEventListener("error", Me), Am.addEventListener(Xe, Ut, !1), ee.initEvent(Xe, !1, !1), Am.dispatchEvent(ee), Be && Object.defineProperty(window, "event", Be), ye && he && (bn ? hn && (zt = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.")) : zt = new Error(`An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the "Pause on exceptions" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.`), this.onError(zt)), window.removeEventListener("error", Me), !ye)
          return Qe(), Rb.apply(this, arguments);
      };
    }
    var Lx = Im, ps = !1, Ua = null, Pu = !1, fs = null, oi = {
      onError: function(o) {
        ps = !0, Ua = o;
      }
    };
    function al(o, r, c, f, v, T, D, A, j) {
      ps = !1, Ua = null, Lx.apply(oi, arguments);
    }
    function Mi(o, r, c, f, v, T, D, A, j) {
      if (al.apply(this, arguments), ps) {
        var G = Vm();
        Pu || (Pu = !0, fs = G);
      }
    }
    function _m() {
      if (Pu) {
        var o = fs;
        throw Pu = !1, fs = null, o;
      }
    }
    function Ix() {
      return ps;
    }
    function Vm() {
      if (ps) {
        var o = Ua;
        return ps = !1, Ua = null, o;
      } else
        throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
    }
    function ga(o) {
      return o._reactInternals;
    }
    function Du(o) {
      return o._reactInternals !== void 0;
    }
    function ic(o, r) {
      o._reactInternals = r;
    }
    var jt = (
      /*                      */
      0
    ), ms = (
      /*                */
      1
    ), Gn = (
      /*                    */
      2
    ), an = (
      /*                       */
      4
    ), Rn = (
      /*                */
      16
    ), On = (
      /*                 */
      32
    ), ri = (
      /*                     */
      64
    ), Qt = (
      /*                   */
      128
    ), po = (
      /*            */
      256
    ), Ir = (
      /*                          */
      512
    ), ba = (
      /*                     */
      1024
    ), no = (
      /*                      */
      2048
    ), ya = (
      /*                    */
      4096
    ), hs = (
      /*                   */
      8192
    ), Mu = (
      /*             */
      16384
    ), tp = no | an | ri | Ir | ba | Mu, Eb = (
      /*               */
      32767
    ), ea = (
      /*                   */
      32768
    ), Wo = (
      /*                */
      65536
    ), $u = (
      /* */
      131072
    ), Bm = (
      /*                       */
      1048576
    ), zm = (
      /*                    */
      2097152
    ), Ar = (
      /*                 */
      4194304
    ), vs = (
      /*                */
      8388608
    ), _r = (
      /*               */
      16777216
    ), il = (
      /*              */
      33554432
    ), sc = (
      // TODO: Remove Update flag from before mutation phase by re-landing Visibility
      // flag logic (see #20043)
      an | ba | 0
    ), Vr = Gn | an | Rn | On | Ir | ya | hs, hr = an | ri | Ir | hs, Ca = no | Rn, er = Ar | vs | zm, $i = a.ReactCurrentOwner;
    function ta(o) {
      var r = o, c = o;
      if (o.alternate)
        for (; r.return; )
          r = r.return;
      else {
        var f = r;
        do
          r = f, (r.flags & (Gn | ya)) !== jt && (c = r.return), f = r.return;
        while (f);
      }
      return r.tag === S ? c : null;
    }
    function Fm(o) {
      if (o.tag === B) {
        var r = o.memoizedState;
        if (r === null) {
          var c = o.alternate;
          c !== null && (r = c.memoizedState);
        }
        if (r !== null)
          return r.dehydrated;
      }
      return null;
    }
    function np(o) {
      return o.tag === S ? o.stateNode.containerInfo : null;
    }
    function jm(o) {
      return ta(o) === o;
    }
    function na(o) {
      {
        var r = $i.current;
        if (r !== null && r.tag === b) {
          var c = r, f = c.stateNode;
          f._warnedAboutRefsInRender || p("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", on(c) || "A component"), f._warnedAboutRefsInRender = !0;
        }
      }
      var v = ga(o);
      return v ? ta(v) === v : !1;
    }
    function Br(o) {
      if (ta(o) !== o)
        throw new Error("Unable to find node on an unmounted component.");
    }
    function Kn(o) {
      var r = o.alternate;
      if (!r) {
        var c = ta(o);
        if (c === null)
          throw new Error("Unable to find node on an unmounted component.");
        return c !== o ? null : o;
      }
      for (var f = o, v = r; ; ) {
        var T = f.return;
        if (T === null)
          break;
        var D = T.alternate;
        if (D === null) {
          var A = T.return;
          if (A !== null) {
            f = v = A;
            continue;
          }
          break;
        }
        if (T.child === D.child) {
          for (var j = T.child; j; ) {
            if (j === f)
              return Br(T), o;
            if (j === v)
              return Br(T), r;
            j = j.sibling;
          }
          throw new Error("Unable to find node on an unmounted component.");
        }
        if (f.return !== v.return)
          f = T, v = D;
        else {
          for (var G = !1, ee = T.child; ee; ) {
            if (ee === f) {
              G = !0, f = T, v = D;
              break;
            }
            if (ee === v) {
              G = !0, v = T, f = D;
              break;
            }
            ee = ee.sibling;
          }
          if (!G) {
            for (ee = D.child; ee; ) {
              if (ee === f) {
                G = !0, f = D, v = T;
                break;
              }
              if (ee === v) {
                G = !0, v = D, f = T;
                break;
              }
              ee = ee.sibling;
            }
            if (!G)
              throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
          }
        }
        if (f.alternate !== v)
          throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
      }
      if (f.tag !== S)
        throw new Error("Unable to find node on an unmounted component.");
      return f.stateNode.current === f ? o : r;
    }
    function Ta(o) {
      var r = Kn(o);
      return r !== null ? Um(r) : null;
    }
    function Um(o) {
      if (o.tag === R || o.tag === $)
        return o;
      for (var r = o.child; r !== null; ) {
        var c = Um(r);
        if (c !== null)
          return c;
        r = r.sibling;
      }
      return null;
    }
    function Ob(o) {
      var r = Kn(o);
      return r !== null ? op(r) : null;
    }
    function op(o) {
      if (o.tag === R || o.tag === $)
        return o;
      for (var r = o.child; r !== null; ) {
        if (r.tag !== E) {
          var c = op(r);
          if (c !== null)
            return c;
        }
        r = r.sibling;
      }
      return null;
    }
    var rp = n.unstable_scheduleCallback, Pb = n.unstable_cancelCallback, ap = n.unstable_shouldYield, Db = n.unstable_requestPaint, io = n.unstable_now, Hm = n.unstable_getCurrentPriorityLevel, ip = n.unstable_ImmediatePriority, oa = n.unstable_UserBlockingPriority, ai = n.unstable_NormalPriority, sp = n.unstable_LowPriority, gs = n.unstable_IdlePriority, Wm = n.unstable_yieldValue, Ym = n.unstable_setDisableYieldValue, bs = null, Yo = null, xt = null, go = !1, tr = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u";
    function qm(o) {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u")
        return !1;
      var r = __REACT_DEVTOOLS_GLOBAL_HOOK__;
      if (r.isDisabled)
        return !0;
      if (!r.supportsFiber)
        return p("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools"), !0;
      try {
        xe && (o = fn({}, o, {
          getLaneLabelMap: Cs,
          injectProfilingHooks: Li
        })), bs = r.inject(o), Yo = r;
      } catch (c) {
        p("React instrumentation encountered an error: %s.", c);
      }
      return !!r.checkDCE;
    }
    function Mb(o, r) {
      if (Yo && typeof Yo.onScheduleFiberRoot == "function")
        try {
          Yo.onScheduleFiberRoot(bs, o, r);
        } catch (c) {
          go || (go = !0, p("React instrumentation encountered an error: %s", c));
        }
    }
    function Ni(o, r) {
      if (Yo && typeof Yo.onCommitFiberRoot == "function")
        try {
          var c = (o.current.flags & Qt) === Qt;
          if (me) {
            var f;
            switch (r) {
              case vr:
                f = ip;
                break;
              case nr:
                f = oa;
                break;
              case Ai:
                f = ai;
                break;
              case Fu:
                f = gs;
                break;
              default:
                f = ai;
                break;
            }
            Yo.onCommitFiberRoot(bs, o, f, c);
          }
        } catch (v) {
          go || (go = !0, p("React instrumentation encountered an error: %s", v));
        }
    }
    function ys(o) {
      if (Yo && typeof Yo.onPostCommitFiberRoot == "function")
        try {
          Yo.onPostCommitFiberRoot(bs, o);
        } catch (r) {
          go || (go = !0, p("React instrumentation encountered an error: %s", r));
        }
    }
    function Gm(o) {
      if (Yo && typeof Yo.onCommitFiberUnmount == "function")
        try {
          Yo.onCommitFiberUnmount(bs, o);
        } catch (r) {
          go || (go = !0, p("React instrumentation encountered an error: %s", r));
        }
    }
    function $o(o) {
      if (typeof Wm == "function" && (Ym(o), u(o)), Yo && typeof Yo.setStrictMode == "function")
        try {
          Yo.setStrictMode(bs, o);
        } catch (r) {
          go || (go = !0, p("React instrumentation encountered an error: %s", r));
        }
    }
    function Li(o) {
      xt = o;
    }
    function Cs() {
      {
        for (var o = /* @__PURE__ */ new Map(), r = 1, c = 0; c < Qn; c++) {
          var f = Ax(r);
          o.set(r, f), r *= 2;
        }
        return o;
      }
    }
    function lp(o) {
      xt !== null && typeof xt.markCommitStarted == "function" && xt.markCommitStarted(o);
    }
    function Km() {
      xt !== null && typeof xt.markCommitStopped == "function" && xt.markCommitStopped();
    }
    function Ts(o) {
      xt !== null && typeof xt.markComponentRenderStarted == "function" && xt.markComponentRenderStarted(o);
    }
    function sl() {
      xt !== null && typeof xt.markComponentRenderStopped == "function" && xt.markComponentRenderStopped();
    }
    function $b(o) {
      xt !== null && typeof xt.markComponentPassiveEffectMountStarted == "function" && xt.markComponentPassiveEffectMountStarted(o);
    }
    function Qm() {
      xt !== null && typeof xt.markComponentPassiveEffectMountStopped == "function" && xt.markComponentPassiveEffectMountStopped();
    }
    function cp(o) {
      xt !== null && typeof xt.markComponentPassiveEffectUnmountStarted == "function" && xt.markComponentPassiveEffectUnmountStarted(o);
    }
    function Nb() {
      xt !== null && typeof xt.markComponentPassiveEffectUnmountStopped == "function" && xt.markComponentPassiveEffectUnmountStopped();
    }
    function Lb(o) {
      xt !== null && typeof xt.markComponentLayoutEffectMountStarted == "function" && xt.markComponentLayoutEffectMountStarted(o);
    }
    function Ib() {
      xt !== null && typeof xt.markComponentLayoutEffectMountStopped == "function" && xt.markComponentLayoutEffectMountStopped();
    }
    function up(o) {
      xt !== null && typeof xt.markComponentLayoutEffectUnmountStarted == "function" && xt.markComponentLayoutEffectUnmountStarted(o);
    }
    function lc() {
      xt !== null && typeof xt.markComponentLayoutEffectUnmountStopped == "function" && xt.markComponentLayoutEffectUnmountStopped();
    }
    function dp(o, r, c) {
      xt !== null && typeof xt.markComponentErrored == "function" && xt.markComponentErrored(o, r, c);
    }
    function Ab(o, r, c) {
      xt !== null && typeof xt.markComponentSuspended == "function" && xt.markComponentSuspended(o, r, c);
    }
    function _b(o) {
      xt !== null && typeof xt.markLayoutEffectsStarted == "function" && xt.markLayoutEffectsStarted(o);
    }
    function cc() {
      xt !== null && typeof xt.markLayoutEffectsStopped == "function" && xt.markLayoutEffectsStopped();
    }
    function Vb(o) {
      xt !== null && typeof xt.markPassiveEffectsStarted == "function" && xt.markPassiveEffectsStarted(o);
    }
    function Nu() {
      xt !== null && typeof xt.markPassiveEffectsStopped == "function" && xt.markPassiveEffectsStopped();
    }
    function Ha(o) {
      xt !== null && typeof xt.markRenderStarted == "function" && xt.markRenderStarted(o);
    }
    function Lu() {
      xt !== null && typeof xt.markRenderYielded == "function" && xt.markRenderYielded();
    }
    function uc() {
      xt !== null && typeof xt.markRenderStopped == "function" && xt.markRenderStopped();
    }
    function ll(o) {
      xt !== null && typeof xt.markRenderScheduled == "function" && xt.markRenderScheduled(o);
    }
    function Xm(o, r) {
      xt !== null && typeof xt.markForceUpdateScheduled == "function" && xt.markForceUpdateScheduled(o, r);
    }
    function xs(o, r) {
      xt !== null && typeof xt.markStateUpdateScheduled == "function" && xt.markStateUpdateScheduled(o, r);
    }
    var Ht = (
      /*                         */
      0
    ), un = (
      /*                 */
      1
    ), Wt = (
      /*                    */
      2
    ), so = (
      /*               */
      8
    ), xa = (
      /*              */
      16
    ), pp = Math.clz32 ? Math.clz32 : cl, fp = Math.log, Zm = Math.LN2;
    function cl(o) {
      var r = o >>> 0;
      return r === 0 ? 32 : 31 - (fp(r) / Zm | 0) | 0;
    }
    var Qn = 31, tt = (
      /*                        */
      0
    ), vn = (
      /*                          */
      0
    ), Gt = (
      /*                        */
      1
    ), ii = (
      /*    */
      2
    ), ra = (
      /*             */
      4
    ), ul = (
      /*            */
      8
    ), Xn = (
      /*                     */
      16
    ), dl = (
      /*                */
      32
    ), Ss = (
      /*                       */
      4194240
    ), pl = (
      /*                        */
      64
    ), Sa = (
      /*                        */
      128
    ), zr = (
      /*                        */
      256
    ), fl = (
      /*                        */
      512
    ), Iu = (
      /*                        */
      1024
    ), Au = (
      /*                        */
      2048
    ), mp = (
      /*                        */
      4096
    ), hp = (
      /*                        */
      8192
    ), vp = (
      /*                        */
      16384
    ), gp = (
      /*                       */
      32768
    ), bp = (
      /*                       */
      65536
    ), yp = (
      /*                       */
      131072
    ), Cp = (
      /*                       */
      262144
    ), Tp = (
      /*                       */
      524288
    ), ml = (
      /*                       */
      1048576
    ), xp = (
      /*                       */
      2097152
    ), hl = (
      /*                            */
      130023424
    ), Ii = (
      /*                             */
      4194304
    ), Sp = (
      /*                             */
      8388608
    ), _u = (
      /*                             */
      16777216
    ), kp = (
      /*                             */
      33554432
    ), wp = (
      /*                             */
      67108864
    ), Jm = Ii, dc = (
      /*          */
      134217728
    ), Rp = (
      /*                          */
      268435455
    ), pc = (
      /*               */
      268435456
    ), ks = (
      /*                        */
      536870912
    ), Fr = (
      /*                   */
      1073741824
    );
    function Ax(o) {
      {
        if (o & Gt)
          return "Sync";
        if (o & ii)
          return "InputContinuousHydration";
        if (o & ra)
          return "InputContinuous";
        if (o & ul)
          return "DefaultHydration";
        if (o & Xn)
          return "Default";
        if (o & dl)
          return "TransitionHydration";
        if (o & Ss)
          return "Transition";
        if (o & hl)
          return "Retry";
        if (o & dc)
          return "SelectiveHydration";
        if (o & pc)
          return "IdleHydration";
        if (o & ks)
          return "Idle";
        if (o & Fr)
          return "Offscreen";
      }
    }
    var Hn = -1, Ep = pl, Op = Ii;
    function fc(o) {
      switch (So(o)) {
        case Gt:
          return Gt;
        case ii:
          return ii;
        case ra:
          return ra;
        case ul:
          return ul;
        case Xn:
          return Xn;
        case dl:
          return dl;
        case pl:
        case Sa:
        case zr:
        case fl:
        case Iu:
        case Au:
        case mp:
        case hp:
        case vp:
        case gp:
        case bp:
        case yp:
        case Cp:
        case Tp:
        case ml:
        case xp:
          return o & Ss;
        case Ii:
        case Sp:
        case _u:
        case kp:
        case wp:
          return o & hl;
        case dc:
          return dc;
        case pc:
          return pc;
        case ks:
          return ks;
        case Fr:
          return Fr;
        default:
          return p("Should have found matching lanes. This is a bug in React."), o;
      }
    }
    function Vu(o, r) {
      var c = o.pendingLanes;
      if (c === tt)
        return tt;
      var f = tt, v = o.suspendedLanes, T = o.pingedLanes, D = c & Rp;
      if (D !== tt) {
        var A = D & ~v;
        if (A !== tt)
          f = fc(A);
        else {
          var j = D & T;
          j !== tt && (f = fc(j));
        }
      } else {
        var G = c & ~v;
        G !== tt ? f = fc(G) : T !== tt && (f = fc(T));
      }
      if (f === tt)
        return tt;
      if (r !== tt && r !== f && // If we already suspended with a delay, then interrupting is fine. Don't
      // bother waiting until the root is complete.
      (r & v) === tt) {
        var ee = So(f), ye = So(r);
        if (
          // Tests whether the next lane is equal or lower priority than the wip
          // one. This works because the bits decrease in priority as you go left.
          ee >= ye || // Default priority updates should not interrupt transition updates. The
          // only difference between default updates and transition updates is that
          // default updates do not support refresh transitions.
          ee === Xn && (ye & Ss) !== tt
        )
          return r;
      }
      (f & ra) !== tt && (f |= c & Xn);
      var he = o.entangledLanes;
      if (he !== tt)
        for (var Ve = o.entanglements, Be = f & he; Be > 0; ) {
          var Qe = ws(Be), Pt = 1 << Qe;
          f |= Ve[Qe], Be &= ~Pt;
        }
      return f;
    }
    function Bb(o, r) {
      for (var c = o.eventTimes, f = Hn; r > 0; ) {
        var v = ws(r), T = 1 << v, D = c[v];
        D > f && (f = D), r &= ~T;
      }
      return f;
    }
    function Pp(o, r) {
      switch (o) {
        case Gt:
        case ii:
        case ra:
          return r + 250;
        case ul:
        case Xn:
        case dl:
        case pl:
        case Sa:
        case zr:
        case fl:
        case Iu:
        case Au:
        case mp:
        case hp:
        case vp:
        case gp:
        case bp:
        case yp:
        case Cp:
        case Tp:
        case ml:
        case xp:
          return r + 5e3;
        case Ii:
        case Sp:
        case _u:
        case kp:
        case wp:
          return Hn;
        case dc:
        case pc:
        case ks:
        case Fr:
          return Hn;
        default:
          return p("Should have found matching lanes. This is a bug in React."), Hn;
      }
    }
    function _x(o, r) {
      for (var c = o.pendingLanes, f = o.suspendedLanes, v = o.pingedLanes, T = o.expirationTimes, D = c; D > 0; ) {
        var A = ws(D), j = 1 << A, G = T[A];
        G === Hn ? ((j & f) === tt || (j & v) !== tt) && (T[A] = Pp(j, r)) : G <= r && (o.expiredLanes |= j), D &= ~j;
      }
    }
    function Vx(o) {
      return fc(o.pendingLanes);
    }
    function eh(o) {
      var r = o.pendingLanes & ~Fr;
      return r !== tt ? r : r & Fr ? Fr : tt;
    }
    function mc(o) {
      return (o & Gt) !== tt;
    }
    function Bu(o) {
      return (o & Rp) !== tt;
    }
    function Dp(o) {
      return (o & hl) === o;
    }
    function Bx(o) {
      var r = Gt | ra | Xn;
      return (o & r) === tt;
    }
    function zb(o) {
      return (o & Ss) === o;
    }
    function zu(o, r) {
      var c = ii | ra | ul | Xn;
      return (r & c) !== tt;
    }
    function Fb(o, r) {
      return (r & o.expiredLanes) !== tt;
    }
    function th(o) {
      return (o & Ss) !== tt;
    }
    function nh() {
      var o = Ep;
      return Ep <<= 1, (Ep & Ss) === tt && (Ep = pl), o;
    }
    function zx() {
      var o = Op;
      return Op <<= 1, (Op & hl) === tt && (Op = Ii), o;
    }
    function So(o) {
      return o & -o;
    }
    function No(o) {
      return So(o);
    }
    function ws(o) {
      return 31 - pp(o);
    }
    function Mp(o) {
      return ws(o);
    }
    function jr(o, r) {
      return (o & r) !== tt;
    }
    function vl(o, r) {
      return (o & r) === r;
    }
    function sn(o, r) {
      return o | r;
    }
    function hc(o, r) {
      return o & ~r;
    }
    function oh(o, r) {
      return o & r;
    }
    function jb(o) {
      return o;
    }
    function Ub(o, r) {
      return o !== vn && o < r ? o : r;
    }
    function $p(o) {
      for (var r = [], c = 0; c < Qn; c++)
        r.push(o);
      return r;
    }
    function gl(o, r, c) {
      o.pendingLanes |= r, r !== ks && (o.suspendedLanes = tt, o.pingedLanes = tt);
      var f = o.eventTimes, v = Mp(r);
      f[v] = c;
    }
    function rh(o, r) {
      o.suspendedLanes |= r, o.pingedLanes &= ~r;
      for (var c = o.expirationTimes, f = r; f > 0; ) {
        var v = ws(f), T = 1 << v;
        c[v] = Hn, f &= ~T;
      }
    }
    function ah(o, r, c) {
      o.pingedLanes |= o.suspendedLanes & r;
    }
    function ih(o, r) {
      var c = o.pendingLanes & ~r;
      o.pendingLanes = r, o.suspendedLanes = tt, o.pingedLanes = tt, o.expiredLanes &= r, o.mutableReadLanes &= r, o.entangledLanes &= r;
      for (var f = o.entanglements, v = o.eventTimes, T = o.expirationTimes, D = c; D > 0; ) {
        var A = ws(D), j = 1 << A;
        f[A] = tt, v[A] = Hn, T[A] = Hn, D &= ~j;
      }
    }
    function vc(o, r) {
      for (var c = o.entangledLanes |= r, f = o.entanglements, v = c; v; ) {
        var T = ws(v), D = 1 << T;
        // Is this one of the newly entangled lanes?
        D & r | // Is this lane transitively entangled with the newly entangled lanes?
        f[T] & r && (f[T] |= r), v &= ~D;
      }
    }
    function Fx(o, r) {
      var c = So(r), f;
      switch (c) {
        case ra:
          f = ii;
          break;
        case Xn:
          f = ul;
          break;
        case pl:
        case Sa:
        case zr:
        case fl:
        case Iu:
        case Au:
        case mp:
        case hp:
        case vp:
        case gp:
        case bp:
        case yp:
        case Cp:
        case Tp:
        case ml:
        case xp:
        case Ii:
        case Sp:
        case _u:
        case kp:
        case wp:
          f = dl;
          break;
        case ks:
          f = pc;
          break;
        default:
          f = vn;
          break;
      }
      return (f & (o.suspendedLanes | r)) !== vn ? vn : f;
    }
    function sh(o, r, c) {
      if (tr)
        for (var f = o.pendingUpdatersLaneMap; c > 0; ) {
          var v = Mp(c), T = 1 << v, D = f[v];
          D.add(r), c &= ~T;
        }
    }
    function Np(o, r) {
      if (tr)
        for (var c = o.pendingUpdatersLaneMap, f = o.memoizedUpdaters; r > 0; ) {
          var v = Mp(r), T = 1 << v, D = c[v];
          D.size > 0 && (D.forEach(function(A) {
            var j = A.alternate;
            (j === null || !f.has(j)) && f.add(A);
          }), D.clear()), r &= ~T;
        }
    }
    function lh(o, r) {
      return null;
    }
    var vr = Gt, nr = ra, Ai = Xn, Fu = ks, bl = vn;
    function ka() {
      return bl;
    }
    function Lo(o) {
      bl = o;
    }
    function ju(o, r) {
      var c = bl;
      try {
        return bl = o, r();
      } finally {
        bl = c;
      }
    }
    function gr(o, r) {
      return o !== 0 && o < r ? o : r;
    }
    function jx(o, r) {
      return o === 0 || o > r ? o : r;
    }
    function ch(o, r) {
      return o !== 0 && o < r;
    }
    function Uu(o) {
      var r = So(o);
      return ch(vr, r) ? ch(nr, r) ? Bu(r) ? Ai : Fu : nr : vr;
    }
    function Io(o) {
      var r = o.current.memoizedState;
      return r.isDehydrated;
    }
    var Hb;
    function Nt(o) {
      Hb = o;
    }
    function gc(o) {
      Hb(o);
    }
    var Hu;
    function Wb(o) {
      Hu = o;
    }
    var Yb;
    function Wu(o) {
      Yb = o;
    }
    var Yu;
    function uh(o) {
      Yu = o;
    }
    var dh;
    function qb(o) {
      dh = o;
    }
    var Lp = !1, bc = [], si = null, oo = null, qo = null, wa = /* @__PURE__ */ new Map(), yc = /* @__PURE__ */ new Map(), _i = [], Wa = [
      "mousedown",
      "mouseup",
      "touchcancel",
      "touchend",
      "touchstart",
      "auxclick",
      "dblclick",
      "pointercancel",
      "pointerdown",
      "pointerup",
      "dragend",
      "dragstart",
      "drop",
      "compositionend",
      "compositionstart",
      "keydown",
      "keypress",
      "keyup",
      "input",
      "textInput",
      // Intentionally camelCase
      "copy",
      "cut",
      "paste",
      "click",
      "change",
      "contextmenu",
      "reset",
      "submit"
    ];
    function Gb(o) {
      return Wa.indexOf(o) > -1;
    }
    function li(o, r, c, f, v) {
      return {
        blockedOn: o,
        domEventName: r,
        eventSystemFlags: c,
        nativeEvent: v,
        targetContainers: [f]
      };
    }
    function Kb(o, r) {
      switch (o) {
        case "focusin":
        case "focusout":
          si = null;
          break;
        case "dragenter":
        case "dragleave":
          oo = null;
          break;
        case "mouseover":
        case "mouseout":
          qo = null;
          break;
        case "pointerover":
        case "pointerout": {
          var c = r.pointerId;
          wa.delete(c);
          break;
        }
        case "gotpointercapture":
        case "lostpointercapture": {
          var f = r.pointerId;
          yc.delete(f);
          break;
        }
      }
    }
    function Cc(o, r, c, f, v, T) {
      if (o === null || o.nativeEvent !== T) {
        var D = li(r, c, f, v, T);
        if (r !== null) {
          var A = Mc(r);
          A !== null && Hu(A);
        }
        return D;
      }
      o.eventSystemFlags |= f;
      var j = o.targetContainers;
      return v !== null && j.indexOf(v) === -1 && j.push(v), o;
    }
    function Qb(o, r, c, f, v) {
      switch (r) {
        case "focusin": {
          var T = v;
          return si = Cc(si, o, r, c, f, T), !0;
        }
        case "dragenter": {
          var D = v;
          return oo = Cc(oo, o, r, c, f, D), !0;
        }
        case "mouseover": {
          var A = v;
          return qo = Cc(qo, o, r, c, f, A), !0;
        }
        case "pointerover": {
          var j = v, G = j.pointerId;
          return wa.set(G, Cc(wa.get(G) || null, o, r, c, f, j)), !0;
        }
        case "gotpointercapture": {
          var ee = v, ye = ee.pointerId;
          return yc.set(ye, Cc(yc.get(ye) || null, o, r, c, f, ee)), !0;
        }
      }
      return !1;
    }
    function ph(o) {
      var r = td(o.target);
      if (r !== null) {
        var c = ta(r);
        if (c !== null) {
          var f = c.tag;
          if (f === B) {
            var v = Fm(c);
            if (v !== null) {
              o.blockedOn = v, dh(o.priority, function() {
                Yb(c);
              });
              return;
            }
          } else if (f === S) {
            var T = c.stateNode;
            if (Io(T)) {
              o.blockedOn = np(c);
              return;
            }
          }
        }
      }
      o.blockedOn = null;
    }
    function Xb(o) {
      for (var r = Yu(), c = {
        blockedOn: null,
        target: o,
        priority: r
      }, f = 0; f < _i.length && ch(r, _i[f].priority); f++)
        ;
      _i.splice(f, 0, c), f === 0 && ph(c);
    }
    function Ip(o) {
      if (o.blockedOn !== null)
        return !1;
      for (var r = o.targetContainers; r.length > 0; ) {
        var c = r[0], f = yl(o.domEventName, o.eventSystemFlags, c, o.nativeEvent);
        if (f === null) {
          var v = o.nativeEvent, T = new v.constructor(v.type, v);
          wu(T), v.target.dispatchEvent(T), $x();
        } else {
          var D = Mc(f);
          return D !== null && Hu(D), o.blockedOn = f, !1;
        }
        r.shift();
      }
      return !0;
    }
    function qu(o, r, c) {
      Ip(o) && c.delete(r);
    }
    function fh() {
      Lp = !1, si !== null && Ip(si) && (si = null), oo !== null && Ip(oo) && (oo = null), qo !== null && Ip(qo) && (qo = null), wa.forEach(qu), yc.forEach(qu);
    }
    function br(o, r) {
      o.blockedOn === r && (o.blockedOn = null, Lp || (Lp = !0, n.unstable_scheduleCallback(n.unstable_NormalPriority, fh)));
    }
    function mn(o) {
      if (bc.length > 0) {
        br(bc[0], o);
        for (var r = 1; r < bc.length; r++) {
          var c = bc[r];
          c.blockedOn === o && (c.blockedOn = null);
        }
      }
      si !== null && br(si, o), oo !== null && br(oo, o), qo !== null && br(qo, o);
      var f = function(A) {
        return br(A, o);
      };
      wa.forEach(f), yc.forEach(f);
      for (var v = 0; v < _i.length; v++) {
        var T = _i[v];
        T.blockedOn === o && (T.blockedOn = null);
      }
      for (; _i.length > 0; ) {
        var D = _i[0];
        if (D.blockedOn !== null)
          break;
        ph(D), D.blockedOn === null && _i.shift();
      }
    }
    var lo = a.ReactCurrentBatchConfig, fo = !0;
    function Go(o) {
      fo = !!o;
    }
    function aa() {
      return fo;
    }
    function Tc(o, r, c) {
      var f = xr(r), v;
      switch (f) {
        case vr:
          v = Ao;
          break;
        case nr:
          v = Gu;
          break;
        case Ai:
        default:
          v = Vi;
          break;
      }
      return v.bind(null, r, c, o);
    }
    function Ao(o, r, c, f) {
      var v = ka(), T = lo.transition;
      lo.transition = null;
      try {
        Lo(vr), Vi(o, r, c, f);
      } finally {
        Lo(v), lo.transition = T;
      }
    }
    function Gu(o, r, c, f) {
      var v = ka(), T = lo.transition;
      lo.transition = null;
      try {
        Lo(nr), Vi(o, r, c, f);
      } finally {
        Lo(v), lo.transition = T;
      }
    }
    function Vi(o, r, c, f) {
      fo && Ap(o, r, c, f);
    }
    function Ap(o, r, c, f) {
      var v = yl(o, r, c, f);
      if (v === null) {
        l0(o, r, f, xc, c), Kb(o, f);
        return;
      }
      if (Qb(v, o, r, c, f)) {
        f.stopPropagation();
        return;
      }
      if (Kb(o, f), r & tl && Gb(o)) {
        for (; v !== null; ) {
          var T = Mc(v);
          T !== null && gc(T);
          var D = yl(o, r, c, f);
          if (D === null && l0(o, r, f, xc, c), D === v)
            break;
          v = D;
        }
        v !== null && f.stopPropagation();
        return;
      }
      l0(o, r, f, null, c);
    }
    var xc = null;
    function yl(o, r, c, f) {
      xc = null;
      var v = Xd(f), T = td(v);
      if (T !== null) {
        var D = ta(T);
        if (D === null)
          T = null;
        else {
          var A = D.tag;
          if (A === B) {
            var j = Fm(D);
            if (j !== null)
              return j;
            T = null;
          } else if (A === S) {
            var G = D.stateNode;
            if (Io(G))
              return np(D);
            T = null;
          } else
            D !== T && (T = null);
        }
      }
      return xc = T, null;
    }
    function xr(o) {
      switch (o) {
        case "cancel":
        case "click":
        case "close":
        case "contextmenu":
        case "copy":
        case "cut":
        case "auxclick":
        case "dblclick":
        case "dragend":
        case "dragstart":
        case "drop":
        case "focusin":
        case "focusout":
        case "input":
        case "invalid":
        case "keydown":
        case "keypress":
        case "keyup":
        case "mousedown":
        case "mouseup":
        case "paste":
        case "pause":
        case "play":
        case "pointercancel":
        case "pointerdown":
        case "pointerup":
        case "ratechange":
        case "reset":
        case "resize":
        case "seeked":
        case "submit":
        case "touchcancel":
        case "touchend":
        case "touchstart":
        case "volumechange":
        case "change":
        case "selectionchange":
        case "textInput":
        case "compositionstart":
        case "compositionend":
        case "compositionupdate":
        case "beforeblur":
        case "afterblur":
        case "beforeinput":
        case "blur":
        case "fullscreenchange":
        case "focus":
        case "hashchange":
        case "popstate":
        case "select":
        case "selectstart":
          return vr;
        case "drag":
        case "dragenter":
        case "dragexit":
        case "dragleave":
        case "dragover":
        case "mousemove":
        case "mouseout":
        case "mouseover":
        case "pointermove":
        case "pointerout":
        case "pointerover":
        case "scroll":
        case "toggle":
        case "touchmove":
        case "wheel":
        case "mouseenter":
        case "mouseleave":
        case "pointerenter":
        case "pointerleave":
          return nr;
        case "message": {
          var r = Hm();
          switch (r) {
            case ip:
              return vr;
            case oa:
              return nr;
            case ai:
            case sp:
              return Ai;
            case gs:
              return Fu;
            default:
              return Ai;
          }
        }
        default:
          return Ai;
      }
    }
    function mh(o, r, c) {
      return o.addEventListener(r, c, !1), c;
    }
    function Sc(o, r, c) {
      return o.addEventListener(r, c, !0), c;
    }
    function Bi(o, r, c, f) {
      return o.addEventListener(r, c, {
        capture: !0,
        passive: f
      }), c;
    }
    function _p(o, r, c, f) {
      return o.addEventListener(r, c, {
        passive: f
      }), c;
    }
    var Cl = null, ci = null, Rs = null;
    function Es(o) {
      return Cl = o, ci = Bp(), !0;
    }
    function Vp() {
      Cl = null, ci = null, Rs = null;
    }
    function kc() {
      if (Rs)
        return Rs;
      var o, r = ci, c = r.length, f, v = Bp(), T = v.length;
      for (o = 0; o < c && r[o] === v[o]; o++)
        ;
      var D = c - o;
      for (f = 1; f <= D && r[c - f] === v[T - f]; f++)
        ;
      var A = f > 1 ? 1 - f : void 0;
      return Rs = v.slice(o, A), Rs;
    }
    function Bp() {
      return "value" in Cl ? Cl.value : Cl.textContent;
    }
    function Tl(o) {
      var r, c = o.keyCode;
      return "charCode" in o ? (r = o.charCode, r === 0 && c === 13 && (r = 13)) : r = c, r === 10 && (r = 13), r >= 32 || r === 13 ? r : 0;
    }
    function xl() {
      return !0;
    }
    function yr() {
      return !1;
    }
    function ko(o) {
      function r(c, f, v, T, D) {
        this._reactName = c, this._targetInst = v, this.type = f, this.nativeEvent = T, this.target = D, this.currentTarget = null;
        for (var A in o)
          if (o.hasOwnProperty(A)) {
            var j = o[A];
            j ? this[A] = j(T) : this[A] = T[A];
          }
        var G = T.defaultPrevented != null ? T.defaultPrevented : T.returnValue === !1;
        return G ? this.isDefaultPrevented = xl : this.isDefaultPrevented = yr, this.isPropagationStopped = yr, this;
      }
      return fn(r.prototype, {
        preventDefault: function() {
          this.defaultPrevented = !0;
          var c = this.nativeEvent;
          c && (c.preventDefault ? c.preventDefault() : typeof c.returnValue != "unknown" && (c.returnValue = !1), this.isDefaultPrevented = xl);
        },
        stopPropagation: function() {
          var c = this.nativeEvent;
          c && (c.stopPropagation ? c.stopPropagation() : typeof c.cancelBubble != "unknown" && (c.cancelBubble = !0), this.isPropagationStopped = xl);
        },
        /**
         * We release all dispatched `SyntheticEvent`s after each event loop, adding
         * them back into the pool. This allows a way to hold onto a reference that
         * won't be added back into the pool.
         */
        persist: function() {
        },
        /**
         * Checks if this event should be released back into the pool.
         *
         * @return {boolean} True if this should not be released, false otherwise.
         */
        isPersistent: xl
      }), r;
    }
    var Cr = {
      eventPhase: 0,
      bubbles: 0,
      cancelable: 0,
      timeStamp: function(o) {
        return o.timeStamp || Date.now();
      },
      defaultPrevented: 0,
      isTrusted: 0
    }, Tr = ko(Cr), wc = fn({}, Cr, {
      view: 0,
      detail: 0
    }), hh = ko(wc), Ku, vh, Ra;
    function Zb(o) {
      o !== Ra && (Ra && o.type === "mousemove" ? (Ku = o.screenX - Ra.screenX, vh = o.screenY - Ra.screenY) : (Ku = 0, vh = 0), Ra = o);
    }
    var Rc = fn({}, wc, {
      screenX: 0,
      screenY: 0,
      clientX: 0,
      clientY: 0,
      pageX: 0,
      pageY: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      getModifierState: jp,
      button: 0,
      buttons: 0,
      relatedTarget: function(o) {
        return o.relatedTarget === void 0 ? o.fromElement === o.srcElement ? o.toElement : o.fromElement : o.relatedTarget;
      },
      movementX: function(o) {
        return "movementX" in o ? o.movementX : (Zb(o), Ku);
      },
      movementY: function(o) {
        return "movementY" in o ? o.movementY : vh;
      }
    }), Os = ko(Rc), gh = fn({}, Rc, {
      dataTransfer: 0
    }), Sl = ko(gh), Jb = fn({}, wc, {
      relatedTarget: 0
    }), zp = ko(Jb), bh = fn({}, Cr, {
      animationName: 0,
      elapsedTime: 0,
      pseudoElement: 0
    }), Fp = ko(bh), Ux = fn({}, Cr, {
      clipboardData: function(o) {
        return "clipboardData" in o ? o.clipboardData : window.clipboardData;
      }
    }), Hx = ko(Ux), ey = fn({}, Cr, {
      data: 0
    }), yh = ko(ey), kl = yh, Wx = {
      Esc: "Escape",
      Spacebar: " ",
      Left: "ArrowLeft",
      Up: "ArrowUp",
      Right: "ArrowRight",
      Down: "ArrowDown",
      Del: "Delete",
      Win: "OS",
      Menu: "ContextMenu",
      Apps: "ContextMenu",
      Scroll: "ScrollLock",
      MozPrintableKey: "Unidentified"
    }, Ec = {
      8: "Backspace",
      9: "Tab",
      12: "Clear",
      13: "Enter",
      16: "Shift",
      17: "Control",
      18: "Alt",
      19: "Pause",
      20: "CapsLock",
      27: "Escape",
      32: " ",
      33: "PageUp",
      34: "PageDown",
      35: "End",
      36: "Home",
      37: "ArrowLeft",
      38: "ArrowUp",
      39: "ArrowRight",
      40: "ArrowDown",
      45: "Insert",
      46: "Delete",
      112: "F1",
      113: "F2",
      114: "F3",
      115: "F4",
      116: "F5",
      117: "F6",
      118: "F7",
      119: "F8",
      120: "F9",
      121: "F10",
      122: "F11",
      123: "F12",
      144: "NumLock",
      145: "ScrollLock",
      224: "Meta"
    };
    function ty(o) {
      if (o.key) {
        var r = Wx[o.key] || o.key;
        if (r !== "Unidentified")
          return r;
      }
      if (o.type === "keypress") {
        var c = Tl(o);
        return c === 13 ? "Enter" : String.fromCharCode(c);
      }
      return o.type === "keydown" || o.type === "keyup" ? Ec[o.keyCode] || "Unidentified" : "";
    }
    var mo = {
      Alt: "altKey",
      Control: "ctrlKey",
      Meta: "metaKey",
      Shift: "shiftKey"
    };
    function Yx(o) {
      var r = this, c = r.nativeEvent;
      if (c.getModifierState)
        return c.getModifierState(o);
      var f = mo[o];
      return f ? !!c[f] : !1;
    }
    function jp(o) {
      return Yx;
    }
    var qx = fn({}, wc, {
      key: ty,
      code: 0,
      location: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      repeat: 0,
      locale: 0,
      getModifierState: jp,
      // Legacy Interface
      charCode: function(o) {
        return o.type === "keypress" ? Tl(o) : 0;
      },
      keyCode: function(o) {
        return o.type === "keydown" || o.type === "keyup" ? o.keyCode : 0;
      },
      which: function(o) {
        return o.type === "keypress" ? Tl(o) : o.type === "keydown" || o.type === "keyup" ? o.keyCode : 0;
      }
    }), Gx = ko(qx), ny = fn({}, Rc, {
      pointerId: 0,
      width: 0,
      height: 0,
      pressure: 0,
      tangentialPressure: 0,
      tiltX: 0,
      tiltY: 0,
      twist: 0,
      pointerType: 0,
      isPrimary: 0
    }), Ch = ko(ny), Kx = fn({}, wc, {
      touches: 0,
      targetTouches: 0,
      changedTouches: 0,
      altKey: 0,
      metaKey: 0,
      ctrlKey: 0,
      shiftKey: 0,
      getModifierState: jp
    }), Ea = ko(Kx), Th = fn({}, Cr, {
      propertyName: 0,
      elapsedTime: 0,
      pseudoElement: 0
    }), Qx = ko(Th), Ps = fn({}, Rc, {
      deltaX: function(o) {
        return "deltaX" in o ? o.deltaX : (
          // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
          "wheelDeltaX" in o ? -o.wheelDeltaX : 0
        );
      },
      deltaY: function(o) {
        return "deltaY" in o ? o.deltaY : (
          // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
          "wheelDeltaY" in o ? -o.wheelDeltaY : (
            // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
            "wheelDelta" in o ? -o.wheelDelta : 0
          )
        );
      },
      deltaZ: 0,
      // Browsers without "deltaMode" is reporting in raw wheel delta where one
      // notch on the scroll is always +/- 120, roughly equivalent to pixels.
      // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
      // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
      deltaMode: 0
    }), Up = ko(Ps), wl = [9, 13, 27, 32], Qu = 229, Xu = Ce && "CompositionEvent" in window, Rl = null;
    Ce && "documentMode" in document && (Rl = document.documentMode);
    var Xx = Ce && "TextEvent" in window && !Rl, Hp = Ce && (!Xu || Rl && Rl > 8 && Rl <= 11), oy = 32, xh = String.fromCharCode(oy);
    function ry() {
      Ee("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), Ee("onCompositionEnd", ["compositionend", "focusout", "keydown", "keypress", "keyup", "mousedown"]), Ee("onCompositionStart", ["compositionstart", "focusout", "keydown", "keypress", "keyup", "mousedown"]), Ee("onCompositionUpdate", ["compositionupdate", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
    }
    var Zu = !1;
    function Wp(o) {
      return (o.ctrlKey || o.altKey || o.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
      !(o.ctrlKey && o.altKey);
    }
    function ay(o) {
      switch (o) {
        case "compositionstart":
          return "onCompositionStart";
        case "compositionend":
          return "onCompositionEnd";
        case "compositionupdate":
          return "onCompositionUpdate";
      }
    }
    function Sh(o, r) {
      return o === "keydown" && r.keyCode === Qu;
    }
    function iy(o, r) {
      switch (o) {
        case "keyup":
          return wl.indexOf(r.keyCode) !== -1;
        case "keydown":
          return r.keyCode !== Qu;
        case "keypress":
        case "mousedown":
        case "focusout":
          return !0;
        default:
          return !1;
      }
    }
    function kh(o) {
      var r = o.detail;
      return typeof r == "object" && "data" in r ? r.data : null;
    }
    function Yp(o) {
      return o.locale === "ko";
    }
    var zi = !1;
    function wh(o, r, c, f, v) {
      var T, D;
      if (Xu ? T = ay(r) : zi ? iy(r, f) && (T = "onCompositionEnd") : Sh(r, f) && (T = "onCompositionStart"), !T)
        return null;
      Hp && !Yp(f) && (!zi && T === "onCompositionStart" ? zi = Es(v) : T === "onCompositionEnd" && zi && (D = kc()));
      var A = dy(c, T);
      if (A.length > 0) {
        var j = new yh(T, r, null, f, v);
        if (o.push({
          event: j,
          listeners: A
        }), D)
          j.data = D;
        else {
          var G = kh(f);
          G !== null && (j.data = G);
        }
      }
    }
    function qp(o, r) {
      switch (o) {
        case "compositionend":
          return kh(r);
        case "keypress":
          var c = r.which;
          return c !== oy ? null : (Zu = !0, xh);
        case "textInput":
          var f = r.data;
          return f === xh && Zu ? null : f;
        default:
          return null;
      }
    }
    function sy(o, r) {
      if (zi) {
        if (o === "compositionend" || !Xu && iy(o, r)) {
          var c = kc();
          return Vp(), zi = !1, c;
        }
        return null;
      }
      switch (o) {
        case "paste":
          return null;
        case "keypress":
          if (!Wp(r)) {
            if (r.char && r.char.length > 1)
              return r.char;
            if (r.which)
              return String.fromCharCode(r.which);
          }
          return null;
        case "compositionend":
          return Hp && !Yp(r) ? null : r.data;
        default:
          return null;
      }
    }
    function Zx(o, r, c, f, v) {
      var T;
      if (Xx ? T = qp(r, f) : T = sy(r, f), !T)
        return null;
      var D = dy(c, "onBeforeInput");
      if (D.length > 0) {
        var A = new kl("onBeforeInput", "beforeinput", null, f, v);
        o.push({
          event: A,
          listeners: D
        }), A.data = T;
      }
    }
    function Gp(o, r, c, f, v, T, D) {
      wh(o, r, c, f, v), Zx(o, r, c, f, v);
    }
    var Jx = {
      color: !0,
      date: !0,
      datetime: !0,
      "datetime-local": !0,
      email: !0,
      month: !0,
      number: !0,
      password: !0,
      range: !0,
      search: !0,
      tel: !0,
      text: !0,
      time: !0,
      url: !0,
      week: !0
    };
    function Oc(o) {
      var r = o && o.nodeName && o.nodeName.toLowerCase();
      return r === "input" ? !!Jx[o.type] : r === "textarea";
    }
    /**
     * Checks if an event is supported in the current execution environment.
     *
     * NOTE: This will not work correctly for non-generic events such as `change`,
     * `reset`, `load`, `error`, and `select`.
     *
     * Borrows from Modernizr.
     *
     * @param {string} eventNameSuffix Event name, e.g. "click".
     * @return {boolean} True if the event is supported.
     * @internal
     * @license Modernizr 3.0.0pre (Custom Build) | MIT
     */
    function e0(o) {
      if (!Ce)
        return !1;
      var r = "on" + o, c = r in document;
      if (!c) {
        var f = document.createElement("div");
        f.setAttribute(r, "return;"), c = typeof f[r] == "function";
      }
      return c;
    }
    function Kp() {
      Ee("onChange", ["change", "click", "focusin", "focusout", "input", "keydown", "keyup", "selectionchange"]);
    }
    function i(o, r, c, f) {
      Zd(f);
      var v = dy(r, "onChange");
      if (v.length > 0) {
        var T = new Tr("onChange", "change", null, c, f);
        o.push({
          event: T,
          listeners: v
        });
      }
    }
    var l = null, m = null;
    function C(o) {
      var r = o.nodeName && o.nodeName.toLowerCase();
      return r === "select" || r === "input" && o.type === "file";
    }
    function w(o) {
      var r = [];
      i(r, m, o, Xd(o)), Nm(L, r);
    }
    function L(o) {
      IR(o, 0);
    }
    function W(o) {
      var r = tf(o);
      if (qg(r))
        return o;
    }
    function re(o, r) {
      if (o === "change")
        return r;
    }
    var de = !1;
    Ce && (de = e0("input") && (!document.documentMode || document.documentMode > 9));
    function Fe(o, r) {
      l = o, m = r, l.attachEvent("onpropertychange", ft);
    }
    function ut() {
      l && (l.detachEvent("onpropertychange", ft), l = null, m = null);
    }
    function ft(o) {
      o.propertyName === "value" && W(m) && w(o);
    }
    function ct(o, r, c) {
      o === "focusin" ? (ut(), Fe(r, c)) : o === "focusout" && ut();
    }
    function Et(o, r) {
      if (o === "selectionchange" || o === "keyup" || o === "keydown")
        return W(m);
    }
    function It(o) {
      var r = o.nodeName;
      return r && r.toLowerCase() === "input" && (o.type === "checkbox" || o.type === "radio");
    }
    function Vt(o, r) {
      if (o === "click")
        return W(r);
    }
    function bo(o, r) {
      if (o === "input" || o === "change")
        return W(r);
    }
    function De(o) {
      var r = o._wrapperState;
      !r || !r.controlled || o.type !== "number" || cs(o, "number", o.value);
    }
    function be(o, r, c, f, v, T, D) {
      var A = c ? tf(c) : window, j, G;
      if (C(A) ? j = re : Oc(A) ? de ? j = bo : (j = Et, G = ct) : It(A) && (j = Vt), j) {
        var ee = j(r, c);
        if (ee) {
          i(o, ee, f, v);
          return;
        }
      }
      G && G(r, A, c), r === "focusout" && De(A);
    }
    function Ne() {
      Ae("onMouseEnter", ["mouseout", "mouseover"]), Ae("onMouseLeave", ["mouseout", "mouseover"]), Ae("onPointerEnter", ["pointerout", "pointerover"]), Ae("onPointerLeave", ["pointerout", "pointerover"]);
    }
    function gt(o, r, c, f, v, T, D) {
      var A = r === "mouseover" || r === "pointerover", j = r === "mouseout" || r === "pointerout";
      if (A && !kb(f)) {
        var G = f.relatedTarget || f.fromElement;
        if (G && (td(G) || Bh(G)))
          return;
      }
      if (!(!j && !A)) {
        var ee;
        if (v.window === v)
          ee = v;
        else {
          var ye = v.ownerDocument;
          ye ? ee = ye.defaultView || ye.parentWindow : ee = window;
        }
        var he, Ve;
        if (j) {
          var Be = f.relatedTarget || f.toElement;
          if (he = c, Ve = Be ? td(Be) : null, Ve !== null) {
            var Qe = ta(Ve);
            (Ve !== Qe || Ve.tag !== R && Ve.tag !== $) && (Ve = null);
          }
        } else
          he = null, Ve = c;
        if (he !== Ve) {
          var Pt = Os, Ut = "onMouseLeave", zt = "onMouseEnter", bn = "mouse";
          (r === "pointerout" || r === "pointerover") && (Pt = Ch, Ut = "onPointerLeave", zt = "onPointerEnter", bn = "pointer");
          var hn = he == null ? ee : tf(he), Me = Ve == null ? ee : tf(Ve), Xe = new Pt(Ut, bn + "leave", he, f, v);
          Xe.target = hn, Xe.relatedTarget = Me;
          var $e = null, mt = td(v);
          if (mt === c) {
            var Dt = new Pt(zt, bn + "enter", Ve, f, v);
            Dt.target = Me, Dt.relatedTarget = hn, $e = Dt;
          }
          BV(o, Xe, $e, he, Ve);
        }
      }
    }
    function Bt(o, r) {
      return o === r && (o !== 0 || 1 / o === 1 / r) || o !== o && r !== r;
    }
    var At = typeof Object.is == "function" ? Object.is : Bt;
    function Ft(o, r) {
      if (At(o, r))
        return !0;
      if (typeof o != "object" || o === null || typeof r != "object" || r === null)
        return !1;
      var c = Object.keys(o), f = Object.keys(r);
      if (c.length !== f.length)
        return !1;
      for (var v = 0; v < c.length; v++) {
        var T = c[v];
        if (!ae.call(r, T) || !At(o[T], r[T]))
          return !1;
      }
      return !0;
    }
    function Xt(o) {
      for (; o && o.firstChild; )
        o = o.firstChild;
      return o;
    }
    function Ko(o) {
      for (; o; ) {
        if (o.nextSibling)
          return o.nextSibling;
        o = o.parentNode;
      }
    }
    function Cn(o, r) {
      for (var c = Xt(o), f = 0, v = 0; c; ) {
        if (c.nodeType === Ei) {
          if (v = f + c.textContent.length, f <= r && v >= r)
            return {
              node: c,
              offset: r - f
            };
          f = v;
        }
        c = Xt(Ko(c));
      }
    }
    function Ds(o) {
      var r = o.ownerDocument, c = r && r.defaultView || window, f = c.getSelection && c.getSelection();
      if (!f || f.rangeCount === 0)
        return null;
      var v = f.anchorNode, T = f.anchorOffset, D = f.focusNode, A = f.focusOffset;
      try {
        v.nodeType, D.nodeType;
      } catch {
        return null;
      }
      return t0(o, v, T, D, A);
    }
    function t0(o, r, c, f, v) {
      var T = 0, D = -1, A = -1, j = 0, G = 0, ee = o, ye = null;
      e:
        for (; ; ) {
          for (var he = null; ee === r && (c === 0 || ee.nodeType === Ei) && (D = T + c), ee === f && (v === 0 || ee.nodeType === Ei) && (A = T + v), ee.nodeType === Ei && (T += ee.nodeValue.length), (he = ee.firstChild) !== null; )
            ye = ee, ee = he;
          for (; ; ) {
            if (ee === o)
              break e;
            if (ye === r && ++j === c && (D = T), ye === f && ++G === v && (A = T), (he = ee.nextSibling) !== null)
              break;
            ee = ye, ye = ee.parentNode;
          }
          ee = he;
        }
      return D === -1 || A === -1 ? null : {
        start: D,
        end: A
      };
    }
    function CV(o, r) {
      var c = o.ownerDocument || document, f = c && c.defaultView || window;
      if (f.getSelection) {
        var v = f.getSelection(), T = o.textContent.length, D = Math.min(r.start, T), A = r.end === void 0 ? D : Math.min(r.end, T);
        if (!v.extend && D > A) {
          var j = A;
          A = D, D = j;
        }
        var G = Cn(o, D), ee = Cn(o, A);
        if (G && ee) {
          if (v.rangeCount === 1 && v.anchorNode === G.node && v.anchorOffset === G.offset && v.focusNode === ee.node && v.focusOffset === ee.offset)
            return;
          var ye = c.createRange();
          ye.setStart(G.node, G.offset), v.removeAllRanges(), D > A ? (v.addRange(ye), v.extend(ee.node, ee.offset)) : (ye.setEnd(ee.node, ee.offset), v.addRange(ye));
        }
      }
    }
    function SR(o) {
      return o && o.nodeType === Ei;
    }
    function kR(o, r) {
      return !o || !r ? !1 : o === r ? !0 : SR(o) ? !1 : SR(r) ? kR(o, r.parentNode) : "contains" in o ? o.contains(r) : o.compareDocumentPosition ? !!(o.compareDocumentPosition(r) & 16) : !1;
    }
    function TV(o) {
      return o && o.ownerDocument && kR(o.ownerDocument.documentElement, o);
    }
    function xV(o) {
      try {
        return typeof o.contentWindow.location.href == "string";
      } catch {
        return !1;
      }
    }
    function wR() {
      for (var o = window, r = Vd(); r instanceof o.HTMLIFrameElement; ) {
        if (xV(r))
          o = r.contentWindow;
        else
          return r;
        r = Vd(o.document);
      }
      return r;
    }
    function n0(o) {
      var r = o && o.nodeName && o.nodeName.toLowerCase();
      return r && (r === "input" && (o.type === "text" || o.type === "search" || o.type === "tel" || o.type === "url" || o.type === "password") || r === "textarea" || o.contentEditable === "true");
    }
    function SV() {
      var o = wR();
      return {
        focusedElem: o,
        selectionRange: n0(o) ? wV(o) : null
      };
    }
    function kV(o) {
      var r = wR(), c = o.focusedElem, f = o.selectionRange;
      if (r !== c && TV(c)) {
        f !== null && n0(c) && RV(c, f);
        for (var v = [], T = c; T = T.parentNode; )
          T.nodeType === Lr && v.push({
            element: T,
            left: T.scrollLeft,
            top: T.scrollTop
          });
        typeof c.focus == "function" && c.focus();
        for (var D = 0; D < v.length; D++) {
          var A = v[D];
          A.element.scrollLeft = A.left, A.element.scrollTop = A.top;
        }
      }
    }
    function wV(o) {
      var r;
      return "selectionStart" in o ? r = {
        start: o.selectionStart,
        end: o.selectionEnd
      } : r = Ds(o), r || {
        start: 0,
        end: 0
      };
    }
    function RV(o, r) {
      var c = r.start, f = r.end;
      f === void 0 && (f = c), "selectionStart" in o ? (o.selectionStart = c, o.selectionEnd = Math.min(f, o.value.length)) : CV(o, r);
    }
    var EV = Ce && "documentMode" in document && document.documentMode <= 11;
    function OV() {
      Ee("onSelect", ["focusout", "contextmenu", "dragend", "focusin", "keydown", "keyup", "mousedown", "mouseup", "selectionchange"]);
    }
    var Qp = null, o0 = null, Rh = null, r0 = !1;
    function PV(o) {
      if ("selectionStart" in o && n0(o))
        return {
          start: o.selectionStart,
          end: o.selectionEnd
        };
      var r = o.ownerDocument && o.ownerDocument.defaultView || window, c = r.getSelection();
      return {
        anchorNode: c.anchorNode,
        anchorOffset: c.anchorOffset,
        focusNode: c.focusNode,
        focusOffset: c.focusOffset
      };
    }
    function DV(o) {
      return o.window === o ? o.document : o.nodeType === Fa ? o : o.ownerDocument;
    }
    function RR(o, r, c) {
      var f = DV(c);
      if (!(r0 || Qp == null || Qp !== Vd(f))) {
        var v = PV(Qp);
        if (!Rh || !Ft(Rh, v)) {
          Rh = v;
          var T = dy(o0, "onSelect");
          if (T.length > 0) {
            var D = new Tr("onSelect", "select", null, r, c);
            o.push({
              event: D,
              listeners: T
            }), D.target = Qp;
          }
        }
      }
    }
    function MV(o, r, c, f, v, T, D) {
      var A = c ? tf(c) : window;
      switch (r) {
        case "focusin":
          (Oc(A) || A.contentEditable === "true") && (Qp = A, o0 = c, Rh = null);
          break;
        case "focusout":
          Qp = null, o0 = null, Rh = null;
          break;
        case "mousedown":
          r0 = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          r0 = !1, RR(o, f, v);
          break;
        case "selectionchange":
          if (EV)
            break;
        case "keydown":
        case "keyup":
          RR(o, f, v);
      }
    }
    function ly(o, r) {
      var c = {};
      return c[o.toLowerCase()] = r.toLowerCase(), c["Webkit" + o] = "webkit" + r, c["Moz" + o] = "moz" + r, c;
    }
    var Xp = {
      animationend: ly("Animation", "AnimationEnd"),
      animationiteration: ly("Animation", "AnimationIteration"),
      animationstart: ly("Animation", "AnimationStart"),
      transitionend: ly("Transition", "TransitionEnd")
    }, a0 = {}, ER = {};
    Ce && (ER = document.createElement("div").style, "AnimationEvent" in window || (delete Xp.animationend.animation, delete Xp.animationiteration.animation, delete Xp.animationstart.animation), "TransitionEvent" in window || delete Xp.transitionend.transition);
    function cy(o) {
      if (a0[o])
        return a0[o];
      if (!Xp[o])
        return o;
      var r = Xp[o];
      for (var c in r)
        if (r.hasOwnProperty(c) && c in ER)
          return a0[o] = r[c];
      return o;
    }
    var OR = cy("animationend"), PR = cy("animationiteration"), DR = cy("animationstart"), MR = cy("transitionend"), $R = /* @__PURE__ */ new Map(), NR = ["abort", "auxClick", "cancel", "canPlay", "canPlayThrough", "click", "close", "contextMenu", "copy", "cut", "drag", "dragEnd", "dragEnter", "dragExit", "dragLeave", "dragOver", "dragStart", "drop", "durationChange", "emptied", "encrypted", "ended", "error", "gotPointerCapture", "input", "invalid", "keyDown", "keyPress", "keyUp", "load", "loadedData", "loadedMetadata", "loadStart", "lostPointerCapture", "mouseDown", "mouseMove", "mouseOut", "mouseOver", "mouseUp", "paste", "pause", "play", "playing", "pointerCancel", "pointerDown", "pointerMove", "pointerOut", "pointerOver", "pointerUp", "progress", "rateChange", "reset", "resize", "seeked", "seeking", "stalled", "submit", "suspend", "timeUpdate", "touchCancel", "touchEnd", "touchStart", "volumeChange", "scroll", "toggle", "touchMove", "waiting", "wheel"];
    function Pc(o, r) {
      $R.set(o, r), Ee(r, [o]);
    }
    function $V() {
      for (var o = 0; o < NR.length; o++) {
        var r = NR[o], c = r.toLowerCase(), f = r[0].toUpperCase() + r.slice(1);
        Pc(c, "on" + f);
      }
      Pc(OR, "onAnimationEnd"), Pc(PR, "onAnimationIteration"), Pc(DR, "onAnimationStart"), Pc("dblclick", "onDoubleClick"), Pc("focusin", "onFocus"), Pc("focusout", "onBlur"), Pc(MR, "onTransitionEnd");
    }
    function NV(o, r, c, f, v, T, D) {
      var A = $R.get(r);
      if (A !== void 0) {
        var j = Tr, G = r;
        switch (r) {
          case "keypress":
            if (Tl(f) === 0)
              return;
          case "keydown":
          case "keyup":
            j = Gx;
            break;
          case "focusin":
            G = "focus", j = zp;
            break;
          case "focusout":
            G = "blur", j = zp;
            break;
          case "beforeblur":
          case "afterblur":
            j = zp;
            break;
          case "click":
            if (f.button === 2)
              return;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            j = Os;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            j = Sl;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            j = Ea;
            break;
          case OR:
          case PR:
          case DR:
            j = Fp;
            break;
          case MR:
            j = Qx;
            break;
          case "scroll":
            j = hh;
            break;
          case "wheel":
            j = Up;
            break;
          case "copy":
          case "cut":
          case "paste":
            j = Hx;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            j = Ch;
            break;
        }
        var ee = (T & tl) !== 0;
        {
          var ye = !ee && // TODO: ideally, we'd eventually add all events from
          // nonDelegatedEvents list in DOMPluginEventSystem.
          // Then we can remove this special list.
          // This is a breaking change that can wait until React 18.
          r === "scroll", he = _V(c, A, f.type, ee, ye);
          if (he.length > 0) {
            var Ve = new j(A, G, null, f, v);
            o.push({
              event: Ve,
              listeners: he
            });
          }
        }
      }
    }
    $V(), Ne(), Kp(), OV(), ry();
    function LV(o, r, c, f, v, T, D) {
      NV(o, r, c, f, v, T);
      var A = (T & Mx) === 0;
      A && (gt(o, r, c, f, v), be(o, r, c, f, v), MV(o, r, c, f, v), Gp(o, r, c, f, v));
    }
    var Eh = ["abort", "canplay", "canplaythrough", "durationchange", "emptied", "encrypted", "ended", "error", "loadeddata", "loadedmetadata", "loadstart", "pause", "play", "playing", "progress", "ratechange", "resize", "seeked", "seeking", "stalled", "suspend", "timeupdate", "volumechange", "waiting"], i0 = new Set(["cancel", "close", "invalid", "load", "scroll", "toggle"].concat(Eh));
    function LR(o, r, c) {
      var f = o.type || "unknown-event";
      o.currentTarget = c, Mi(f, r, void 0, o), o.currentTarget = null;
    }
    function IV(o, r, c) {
      var f;
      if (c)
        for (var v = r.length - 1; v >= 0; v--) {
          var T = r[v], D = T.instance, A = T.currentTarget, j = T.listener;
          if (D !== f && o.isPropagationStopped())
            return;
          LR(o, j, A), f = D;
        }
      else
        for (var G = 0; G < r.length; G++) {
          var ee = r[G], ye = ee.instance, he = ee.currentTarget, Ve = ee.listener;
          if (ye !== f && o.isPropagationStopped())
            return;
          LR(o, Ve, he), f = ye;
        }
    }
    function IR(o, r) {
      for (var c = (r & tl) !== 0, f = 0; f < o.length; f++) {
        var v = o[f], T = v.event, D = v.listeners;
        IV(T, D, c);
      }
      _m();
    }
    function AV(o, r, c, f, v) {
      var T = Xd(c), D = [];
      LV(D, o, f, c, T, r), IR(D, r);
    }
    function co(o, r) {
      i0.has(o) || p('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', o);
      var c = !1, f = pB(r), v = zV(o, c);
      f.has(v) || (AR(r, o, Su, c), f.add(v));
    }
    function s0(o, r, c) {
      i0.has(o) && !r && p('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', o);
      var f = 0;
      r && (f |= tl), AR(c, o, f, r);
    }
    var uy = "_reactListening" + Math.random().toString(36).slice(2);
    function Oh(o) {
      if (!o[uy]) {
        o[uy] = !0, ce.forEach(function(c) {
          c !== "selectionchange" && (i0.has(c) || s0(c, !1, o), s0(c, !0, o));
        });
        var r = o.nodeType === Fa ? o : o.ownerDocument;
        r !== null && (r[uy] || (r[uy] = !0, s0("selectionchange", !1, r)));
      }
    }
    function AR(o, r, c, f, v) {
      var T = Tc(o, r, c), D = void 0;
      Ou && (r === "touchstart" || r === "touchmove" || r === "wheel") && (D = !0), o = o, f ? D !== void 0 ? Bi(o, r, T, D) : Sc(o, r, T) : D !== void 0 ? _p(o, r, T, D) : mh(o, r, T);
    }
    function _R(o, r) {
      return o === r || o.nodeType === xo && o.parentNode === r;
    }
    function l0(o, r, c, f, v) {
      var T = f;
      if (!(r & Pi) && !(r & Su)) {
        var D = v;
        if (f !== null) {
          var A = f;
          e:
            for (; ; ) {
              if (A === null)
                return;
              var j = A.tag;
              if (j === S || j === E) {
                var G = A.stateNode.containerInfo;
                if (_R(G, D))
                  break;
                if (j === E)
                  for (var ee = A.return; ee !== null; ) {
                    var ye = ee.tag;
                    if (ye === S || ye === E) {
                      var he = ee.stateNode.containerInfo;
                      if (_R(he, D))
                        return;
                    }
                    ee = ee.return;
                  }
                for (; G !== null; ) {
                  var Ve = td(G);
                  if (Ve === null)
                    return;
                  var Be = Ve.tag;
                  if (Be === R || Be === $) {
                    A = T = Ve;
                    continue e;
                  }
                  G = G.parentNode;
                }
              }
              A = A.return;
            }
        }
      }
      Nm(function() {
        return AV(o, r, c, T);
      });
    }
    function Ph(o, r, c) {
      return {
        instance: o,
        listener: r,
        currentTarget: c
      };
    }
    function _V(o, r, c, f, v, T) {
      for (var D = r !== null ? r + "Capture" : null, A = f ? D : r, j = [], G = o, ee = null; G !== null; ) {
        var ye = G, he = ye.stateNode, Ve = ye.tag;
        if (Ve === R && he !== null && (ee = he, A !== null)) {
          var Be = ol(G, A);
          Be != null && j.push(Ph(G, Be, ee));
        }
        if (v)
          break;
        G = G.return;
      }
      return j;
    }
    function dy(o, r) {
      for (var c = r + "Capture", f = [], v = o; v !== null; ) {
        var T = v, D = T.stateNode, A = T.tag;
        if (A === R && D !== null) {
          var j = D, G = ol(v, c);
          G != null && f.unshift(Ph(v, G, j));
          var ee = ol(v, r);
          ee != null && f.push(Ph(v, ee, j));
        }
        v = v.return;
      }
      return f;
    }
    function Zp(o) {
      if (o === null)
        return null;
      do
        o = o.return;
      while (o && o.tag !== R);
      return o || null;
    }
    function VV(o, r) {
      for (var c = o, f = r, v = 0, T = c; T; T = Zp(T))
        v++;
      for (var D = 0, A = f; A; A = Zp(A))
        D++;
      for (; v - D > 0; )
        c = Zp(c), v--;
      for (; D - v > 0; )
        f = Zp(f), D--;
      for (var j = v; j--; ) {
        if (c === f || f !== null && c === f.alternate)
          return c;
        c = Zp(c), f = Zp(f);
      }
      return null;
    }
    function VR(o, r, c, f, v) {
      for (var T = r._reactName, D = [], A = c; A !== null && A !== f; ) {
        var j = A, G = j.alternate, ee = j.stateNode, ye = j.tag;
        if (G !== null && G === f)
          break;
        if (ye === R && ee !== null) {
          var he = ee;
          if (v) {
            var Ve = ol(A, T);
            Ve != null && D.unshift(Ph(A, Ve, he));
          } else if (!v) {
            var Be = ol(A, T);
            Be != null && D.push(Ph(A, Be, he));
          }
        }
        A = A.return;
      }
      D.length !== 0 && o.push({
        event: r,
        listeners: D
      });
    }
    function BV(o, r, c, f, v) {
      var T = f && v ? VV(f, v) : null;
      f !== null && VR(o, r, f, T, !1), v !== null && c !== null && VR(o, c, v, T, !0);
    }
    function zV(o, r) {
      return o + "__" + (r ? "capture" : "bubble");
    }
    var Oa = !1, Dh = "dangerouslySetInnerHTML", py = "suppressContentEditableWarning", Dc = "suppressHydrationWarning", BR = "autoFocus", Ju = "children", ed = "style", fy = "__html", c0, my, Mh, zR, hy, FR, jR;
    c0 = {
      // There are working polyfills for <dialog>. Let people use it.
      dialog: !0,
      // Electron ships a custom <webview> tag to display external web content in
      // an isolated frame and process.
      // This tag is not present in non Electron environments such as JSDom which
      // is often used for testing purposes.
      // @see https://electronjs.org/docs/api/webview-tag
      webview: !0
    }, my = function(o, r) {
      Qd(o, r), Om(o, r), Sb(o, r, {
        registrationNameDependencies: Le,
        possibleRegistrationNames: Ze
      });
    }, FR = Ce && !document.documentMode, Mh = function(o, r, c) {
      if (!Oa) {
        var f = vy(c), v = vy(r);
        v !== f && (Oa = !0, p("Prop `%s` did not match. Server: %s Client: %s", o, JSON.stringify(v), JSON.stringify(f)));
      }
    }, zR = function(o) {
      if (!Oa) {
        Oa = !0;
        var r = [];
        o.forEach(function(c) {
          r.push(c);
        }), p("Extra attributes from the server: %s", r);
      }
    }, hy = function(o, r) {
      r === !1 ? p("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", o, o, o) : p("Expected `%s` listener to be a function, instead got a value of `%s` type.", o, typeof r);
    }, jR = function(o, r) {
      var c = o.namespaceURI === Ri ? o.ownerDocument.createElement(o.tagName) : o.ownerDocument.createElementNS(o.namespaceURI, o.tagName);
      return c.innerHTML = r, c.innerHTML;
    };
    var FV = /\r\n?/g, jV = /\u0000|\uFFFD/g;
    function vy(o) {
      qe(o);
      var r = typeof o == "string" ? o : "" + o;
      return r.replace(FV, `
`).replace(jV, "");
    }
    function gy(o, r, c, f) {
      var v = vy(r), T = vy(o);
      if (T !== v && (f && (Oa || (Oa = !0, p('Text content did not match. Server: "%s" Client: "%s"', T, v))), c && ie))
        throw new Error("Text content does not match server-rendered HTML.");
    }
    function UR(o) {
      return o.nodeType === Fa ? o : o.ownerDocument;
    }
    function UV() {
    }
    function by(o) {
      o.onclick = UV;
    }
    function HV(o, r, c, f, v) {
      for (var T in f)
        if (f.hasOwnProperty(T)) {
          var D = f[T];
          if (T === ed)
            D && Object.freeze(D), fb(r, D);
          else if (T === Dh) {
            var A = D ? D[fy] : void 0;
            A != null && nb(r, A);
          } else if (T === Ju)
            if (typeof D == "string") {
              var j = o !== "textarea" || D !== "";
              j && Yd(r, D);
            } else
              typeof D == "number" && Yd(r, "" + D);
          else
            T === py || T === Dc || T === BR || (Le.hasOwnProperty(T) ? D != null && (typeof D != "function" && hy(T, D), T === "onScroll" && co("scroll", r)) : D != null && qn(r, T, D, v));
        }
    }
    function WV(o, r, c, f) {
      for (var v = 0; v < r.length; v += 2) {
        var T = r[v], D = r[v + 1];
        T === ed ? fb(o, D) : T === Dh ? nb(o, D) : T === Ju ? Yd(o, D) : qn(o, T, D, f);
      }
    }
    function YV(o, r, c, f) {
      var v, T = UR(c), D, A = f;
      if (A === Ri && (A = Hd(o)), A === Ri) {
        if (v = Oi(o, r), !v && o !== o.toLowerCase() && p("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", o), o === "script") {
          var j = T.createElement("div");
          j.innerHTML = "<script><\/script>";
          var G = j.firstChild;
          D = j.removeChild(G);
        } else if (typeof r.is == "string")
          D = T.createElement(o, {
            is: r.is
          });
        else if (D = T.createElement(o), o === "select") {
          var ee = D;
          r.multiple ? ee.multiple = !0 : r.size && (ee.size = r.size);
        }
      } else
        D = T.createElementNS(A, o);
      return A === Ri && !v && Object.prototype.toString.call(D) === "[object HTMLUnknownElement]" && !ae.call(c0, o) && (c0[o] = !0, p("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", o)), D;
    }
    function qV(o, r) {
      return UR(r).createTextNode(o);
    }
    function GV(o, r, c, f) {
      var v = Oi(r, c);
      my(r, c);
      var T;
      switch (r) {
        case "dialog":
          co("cancel", o), co("close", o), T = c;
          break;
        case "iframe":
        case "object":
        case "embed":
          co("load", o), T = c;
          break;
        case "video":
        case "audio":
          for (var D = 0; D < Eh.length; D++)
            co(Eh[D], o);
          T = c;
          break;
        case "source":
          co("error", o), T = c;
          break;
        case "img":
        case "image":
        case "link":
          co("error", o), co("load", o), T = c;
          break;
        case "details":
          co("toggle", o), T = c;
          break;
        case "input":
          gu(o, c), T = vu(o, c), co("invalid", o);
          break;
        case "option":
          jd(o, c), T = c;
          break;
        case "select":
          Zg(o, c), T = gm(o, c), co("invalid", o);
          break;
        case "textarea":
          Jg(o, c), T = ym(o, c), co("invalid", o);
          break;
        default:
          T = c;
      }
      switch (Gd(r, T), HV(r, o, f, T, v), r) {
        case "input":
          Zs(o), bu(o, c, !1);
          break;
        case "textarea":
          Zs(o), tb(o);
          break;
        case "option":
          vm(o, c);
          break;
        case "select":
          Cx(o, c);
          break;
        default:
          typeof T.onClick == "function" && by(o);
          break;
      }
    }
    function KV(o, r, c, f, v) {
      my(r, f);
      var T = null, D, A;
      switch (r) {
        case "input":
          D = vu(o, c), A = vu(o, f), T = [];
          break;
        case "select":
          D = gm(o, c), A = gm(o, f), T = [];
          break;
        case "textarea":
          D = ym(o, c), A = ym(o, f), T = [];
          break;
        default:
          D = c, A = f, typeof D.onClick != "function" && typeof A.onClick == "function" && by(o);
          break;
      }
      Gd(r, A);
      var j, G, ee = null;
      for (j in D)
        if (!(A.hasOwnProperty(j) || !D.hasOwnProperty(j) || D[j] == null))
          if (j === ed) {
            var ye = D[j];
            for (G in ye)
              ye.hasOwnProperty(G) && (ee || (ee = {}), ee[G] = "");
          } else
            j === Dh || j === Ju || j === py || j === Dc || j === BR || (Le.hasOwnProperty(j) ? T || (T = []) : (T = T || []).push(j, null));
      for (j in A) {
        var he = A[j], Ve = D != null ? D[j] : void 0;
        if (!(!A.hasOwnProperty(j) || he === Ve || he == null && Ve == null))
          if (j === ed)
            if (he && Object.freeze(he), Ve) {
              for (G in Ve)
                Ve.hasOwnProperty(G) && (!he || !he.hasOwnProperty(G)) && (ee || (ee = {}), ee[G] = "");
              for (G in he)
                he.hasOwnProperty(G) && Ve[G] !== he[G] && (ee || (ee = {}), ee[G] = he[G]);
            } else
              ee || (T || (T = []), T.push(j, ee)), ee = he;
          else if (j === Dh) {
            var Be = he ? he[fy] : void 0, Qe = Ve ? Ve[fy] : void 0;
            Be != null && Qe !== Be && (T = T || []).push(j, Be);
          } else
            j === Ju ? (typeof he == "string" || typeof he == "number") && (T = T || []).push(j, "" + he) : j === py || j === Dc || (Le.hasOwnProperty(j) ? (he != null && (typeof he != "function" && hy(j, he), j === "onScroll" && co("scroll", o)), !T && Ve !== he && (T = [])) : (T = T || []).push(j, he));
      }
      return ee && (Tu(ee, A[ed]), (T = T || []).push(ed, ee)), T;
    }
    function QV(o, r, c, f, v) {
      c === "input" && v.type === "radio" && v.name != null && hm(o, v);
      var T = Oi(c, f), D = Oi(c, v);
      switch (WV(o, r, T, D), c) {
        case "input":
          Zl(o, v);
          break;
        case "textarea":
          eb(o, v);
          break;
        case "select":
          Tx(o, v);
          break;
      }
    }
    function XV(o) {
      {
        var r = o.toLowerCase();
        return Kd.hasOwnProperty(r) && Kd[r] || null;
      }
    }
    function ZV(o, r, c, f, v, T, D) {
      var A, j;
      switch (A = Oi(r, c), my(r, c), r) {
        case "dialog":
          co("cancel", o), co("close", o);
          break;
        case "iframe":
        case "object":
        case "embed":
          co("load", o);
          break;
        case "video":
        case "audio":
          for (var G = 0; G < Eh.length; G++)
            co(Eh[G], o);
          break;
        case "source":
          co("error", o);
          break;
        case "img":
        case "image":
        case "link":
          co("error", o), co("load", o);
          break;
        case "details":
          co("toggle", o);
          break;
        case "input":
          gu(o, c), co("invalid", o);
          break;
        case "option":
          jd(o, c);
          break;
        case "select":
          Zg(o, c), co("invalid", o);
          break;
        case "textarea":
          Jg(o, c), co("invalid", o);
          break;
      }
      Gd(r, c);
      {
        j = /* @__PURE__ */ new Set();
        for (var ee = o.attributes, ye = 0; ye < ee.length; ye++) {
          var he = ee[ye].name.toLowerCase();
          switch (he) {
            case "value":
              break;
            case "checked":
              break;
            case "selected":
              break;
            default:
              j.add(ee[ye].name);
          }
        }
      }
      var Ve = null;
      for (var Be in c)
        if (c.hasOwnProperty(Be)) {
          var Qe = c[Be];
          if (Be === Ju)
            typeof Qe == "string" ? o.textContent !== Qe && (c[Dc] !== !0 && gy(o.textContent, Qe, T, D), Ve = [Ju, Qe]) : typeof Qe == "number" && o.textContent !== "" + Qe && (c[Dc] !== !0 && gy(o.textContent, Qe, T, D), Ve = [Ju, "" + Qe]);
          else if (Le.hasOwnProperty(Be))
            Qe != null && (typeof Qe != "function" && hy(Be, Qe), Be === "onScroll" && co("scroll", o));
          else if (D && // Convince Flow we've calculated it (it's DEV-only in this method.)
          typeof A == "boolean") {
            var Pt = void 0, Ut = A && Oe ? null : Jt(Be);
            if (c[Dc] !== !0) {
              if (!(Be === py || Be === Dc || // Controlled attributes are not validated
              // TODO: Only ignore them on controlled tags.
              Be === "value" || Be === "checked" || Be === "selected")) {
                if (Be === Dh) {
                  var zt = o.innerHTML, bn = Qe ? Qe[fy] : void 0;
                  if (bn != null) {
                    var hn = jR(o, bn);
                    hn !== zt && Mh(Be, zt, hn);
                  }
                } else if (Be === ed) {
                  if (j.delete(Be), FR) {
                    var Me = Px(Qe);
                    Pt = o.getAttribute("style"), Me !== Pt && Mh(Be, Pt, Me);
                  }
                } else if (A && !Oe)
                  j.delete(Be.toLowerCase()), Pt = wn(o, Be, Qe), Qe !== Pt && Mh(Be, Pt, Qe);
                else if (!ht(Be, Ut, A) && !Lt(Be, Qe, Ut, A)) {
                  var Xe = !1;
                  if (Ut !== null)
                    j.delete(Ut.attributeName), Pt = Ln(o, Be, Qe, Ut);
                  else {
                    var $e = f;
                    if ($e === Ri && ($e = Hd(r)), $e === Ri)
                      j.delete(Be.toLowerCase());
                    else {
                      var mt = XV(Be);
                      mt !== null && mt !== Be && (Xe = !0, j.delete(mt)), j.delete(Be);
                    }
                    Pt = wn(o, Be, Qe);
                  }
                  var Dt = Oe;
                  !Dt && Qe !== Pt && !Xe && Mh(Be, Pt, Qe);
                }
              }
            }
          }
        }
      switch (D && // $FlowFixMe - Should be inferred as not undefined.
      j.size > 0 && c[Dc] !== !0 && zR(j), r) {
        case "input":
          Zs(o), bu(o, c, !0);
          break;
        case "textarea":
          Zs(o), tb(o);
          break;
        case "select":
        case "option":
          break;
        default:
          typeof c.onClick == "function" && by(o);
          break;
      }
      return Ve;
    }
    function JV(o, r, c) {
      var f = o.nodeValue !== r;
      return f;
    }
    function u0(o, r) {
      {
        if (Oa)
          return;
        Oa = !0, p("Did not expect server HTML to contain a <%s> in <%s>.", r.nodeName.toLowerCase(), o.nodeName.toLowerCase());
      }
    }
    function d0(o, r) {
      {
        if (Oa)
          return;
        Oa = !0, p('Did not expect server HTML to contain the text node "%s" in <%s>.', r.nodeValue, o.nodeName.toLowerCase());
      }
    }
    function p0(o, r, c) {
      {
        if (Oa)
          return;
        Oa = !0, p("Expected server HTML to contain a matching <%s> in <%s>.", r, o.nodeName.toLowerCase());
      }
    }
    function f0(o, r) {
      {
        if (r === "" || Oa)
          return;
        Oa = !0, p('Expected server HTML to contain a matching text node for "%s" in <%s>.', r, o.nodeName.toLowerCase());
      }
    }
    function e2(o, r, c) {
      switch (r) {
        case "input":
          Gg(o, c);
          return;
        case "textarea":
          Cm(o, c);
          return;
        case "select":
          xx(o, c);
          return;
      }
    }
    var $h = function() {
    }, Nh = function() {
    };
    {
      var t2 = ["address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "main", "marquee", "menu", "menuitem", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "source", "style", "summary", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "title", "tr", "track", "ul", "wbr", "xmp"], HR = [
        "applet",
        "caption",
        "html",
        "table",
        "td",
        "th",
        "marquee",
        "object",
        "template",
        // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
        // TODO: Distinguish by namespace here -- for <title>, including it here
        // errs on the side of fewer warnings
        "foreignObject",
        "desc",
        "title"
      ], n2 = HR.concat(["button"]), o2 = ["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"], WR = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
      };
      Nh = function(o, r) {
        var c = fn({}, o || WR), f = {
          tag: r
        };
        return HR.indexOf(r) !== -1 && (c.aTagInScope = null, c.buttonTagInScope = null, c.nobrTagInScope = null), n2.indexOf(r) !== -1 && (c.pTagInButtonScope = null), t2.indexOf(r) !== -1 && r !== "address" && r !== "div" && r !== "p" && (c.listItemTagAutoclosing = null, c.dlItemTagAutoclosing = null), c.current = f, r === "form" && (c.formTag = f), r === "a" && (c.aTagInScope = f), r === "button" && (c.buttonTagInScope = f), r === "nobr" && (c.nobrTagInScope = f), r === "p" && (c.pTagInButtonScope = f), r === "li" && (c.listItemTagAutoclosing = f), (r === "dd" || r === "dt") && (c.dlItemTagAutoclosing = f), c;
      };
      var r2 = function(o, r) {
        switch (r) {
          case "select":
            return o === "option" || o === "optgroup" || o === "#text";
          case "optgroup":
            return o === "option" || o === "#text";
          case "option":
            return o === "#text";
          case "tr":
            return o === "th" || o === "td" || o === "style" || o === "script" || o === "template";
          case "tbody":
          case "thead":
          case "tfoot":
            return o === "tr" || o === "style" || o === "script" || o === "template";
          case "colgroup":
            return o === "col" || o === "template";
          case "table":
            return o === "caption" || o === "colgroup" || o === "tbody" || o === "tfoot" || o === "thead" || o === "style" || o === "script" || o === "template";
          case "head":
            return o === "base" || o === "basefont" || o === "bgsound" || o === "link" || o === "meta" || o === "title" || o === "noscript" || o === "noframes" || o === "style" || o === "script" || o === "template";
          case "html":
            return o === "head" || o === "body" || o === "frameset";
          case "frameset":
            return o === "frame";
          case "#document":
            return o === "html";
        }
        switch (o) {
          case "h1":
          case "h2":
          case "h3":
          case "h4":
          case "h5":
          case "h6":
            return r !== "h1" && r !== "h2" && r !== "h3" && r !== "h4" && r !== "h5" && r !== "h6";
          case "rp":
          case "rt":
            return o2.indexOf(r) === -1;
          case "body":
          case "caption":
          case "col":
          case "colgroup":
          case "frameset":
          case "frame":
          case "head":
          case "html":
          case "tbody":
          case "td":
          case "tfoot":
          case "th":
          case "thead":
          case "tr":
            return r == null;
        }
        return !0;
      }, a2 = function(o, r) {
        switch (o) {
          case "address":
          case "article":
          case "aside":
          case "blockquote":
          case "center":
          case "details":
          case "dialog":
          case "dir":
          case "div":
          case "dl":
          case "fieldset":
          case "figcaption":
          case "figure":
          case "footer":
          case "header":
          case "hgroup":
          case "main":
          case "menu":
          case "nav":
          case "ol":
          case "p":
          case "section":
          case "summary":
          case "ul":
          case "pre":
          case "listing":
          case "table":
          case "hr":
          case "xmp":
          case "h1":
          case "h2":
          case "h3":
          case "h4":
          case "h5":
          case "h6":
            return r.pTagInButtonScope;
          case "form":
            return r.formTag || r.pTagInButtonScope;
          case "li":
            return r.listItemTagAutoclosing;
          case "dd":
          case "dt":
            return r.dlItemTagAutoclosing;
          case "button":
            return r.buttonTagInScope;
          case "a":
            return r.aTagInScope;
          case "nobr":
            return r.nobrTagInScope;
        }
        return null;
      }, YR = {};
      $h = function(o, r, c) {
        c = c || WR;
        var f = c.current, v = f && f.tag;
        r != null && (o != null && p("validateDOMNesting: when childText is passed, childTag should be null"), o = "#text");
        var T = r2(o, v) ? null : f, D = T ? null : a2(o, c), A = T || D;
        if (A) {
          var j = A.tag, G = !!T + "|" + o + "|" + j;
          if (!YR[G]) {
            YR[G] = !0;
            var ee = o, ye = "";
            if (o === "#text" ? /\S/.test(r) ? ee = "Text nodes" : (ee = "Whitespace text nodes", ye = " Make sure you don't have any extra whitespace between tags on each line of your source code.") : ee = "<" + o + ">", T) {
              var he = "";
              j === "table" && o === "tr" && (he += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser."), p("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", ee, j, ye, he);
            } else
              p("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", ee, j);
          }
        }
      };
    }
    var yy = "suppressHydrationWarning", Cy = "$", Ty = "/$", Lh = "$?", Ih = "$!", i2 = "style", m0 = null, h0 = null;
    function s2(o) {
      var r, c, f = o.nodeType;
      switch (f) {
        case Fa:
        case Js: {
          r = f === Fa ? "#document" : "#fragment";
          var v = o.documentElement;
          c = v ? v.namespaceURI : xm(null, "");
          break;
        }
        default: {
          var T = f === xo ? o.parentNode : o, D = T.namespaceURI || null;
          r = T.tagName, c = xm(D, r);
          break;
        }
      }
      {
        var A = r.toLowerCase(), j = Nh(null, A);
        return {
          namespace: c,
          ancestorInfo: j
        };
      }
    }
    function l2(o, r, c) {
      {
        var f = o, v = xm(f.namespace, r), T = Nh(f.ancestorInfo, r);
        return {
          namespace: v,
          ancestorInfo: T
        };
      }
    }
    function cue(o) {
      return o;
    }
    function c2(o) {
      m0 = aa(), h0 = SV();
      var r = null;
      return Go(!1), r;
    }
    function u2(o) {
      kV(h0), Go(m0), m0 = null, h0 = null;
    }
    function d2(o, r, c, f, v) {
      var T;
      {
        var D = f;
        if ($h(o, null, D.ancestorInfo), typeof r.children == "string" || typeof r.children == "number") {
          var A = "" + r.children, j = Nh(D.ancestorInfo, o);
          $h(null, A, j);
        }
        T = D.namespace;
      }
      var G = YV(o, r, c, T);
      return Vh(v, G), S0(G, r), G;
    }
    function p2(o, r) {
      o.appendChild(r);
    }
    function f2(o, r, c, f, v) {
      switch (GV(o, r, c, f), r) {
        case "button":
        case "input":
        case "select":
        case "textarea":
          return !!c.autoFocus;
        case "img":
          return !0;
        default:
          return !1;
      }
    }
    function m2(o, r, c, f, v, T) {
      {
        var D = T;
        if (typeof f.children != typeof c.children && (typeof f.children == "string" || typeof f.children == "number")) {
          var A = "" + f.children, j = Nh(D.ancestorInfo, r);
          $h(null, A, j);
        }
      }
      return KV(o, r, c, f);
    }
    function v0(o, r) {
      return o === "textarea" || o === "noscript" || typeof r.children == "string" || typeof r.children == "number" || typeof r.dangerouslySetInnerHTML == "object" && r.dangerouslySetInnerHTML !== null && r.dangerouslySetInnerHTML.__html != null;
    }
    function h2(o, r, c, f) {
      {
        var v = c;
        $h(null, o, v.ancestorInfo);
      }
      var T = qV(o, r);
      return Vh(f, T), T;
    }
    function v2() {
      var o = window.event;
      return o === void 0 ? Ai : xr(o.type);
    }
    var g0 = typeof setTimeout == "function" ? setTimeout : void 0, g2 = typeof clearTimeout == "function" ? clearTimeout : void 0, b0 = -1, qR = typeof Promise == "function" ? Promise : void 0, b2 = typeof queueMicrotask == "function" ? queueMicrotask : typeof qR < "u" ? function(o) {
      return qR.resolve(null).then(o).catch(y2);
    } : g0;
    function y2(o) {
      setTimeout(function() {
        throw o;
      });
    }
    function C2(o, r, c, f) {
      switch (r) {
        case "button":
        case "input":
        case "select":
        case "textarea":
          c.autoFocus && o.focus();
          return;
        case "img": {
          c.src && (o.src = c.src);
          return;
        }
      }
    }
    function T2(o, r, c, f, v, T) {
      QV(o, r, c, f, v), S0(o, v);
    }
    function GR(o) {
      Yd(o, "");
    }
    function x2(o, r, c) {
      o.nodeValue = c;
    }
    function S2(o, r) {
      o.appendChild(r);
    }
    function k2(o, r) {
      var c;
      o.nodeType === xo ? (c = o.parentNode, c.insertBefore(r, o)) : (c = o, c.appendChild(r));
      var f = o._reactRootContainer;
      f == null && c.onclick === null && by(c);
    }
    function w2(o, r, c) {
      o.insertBefore(r, c);
    }
    function R2(o, r, c) {
      o.nodeType === xo ? o.parentNode.insertBefore(r, c) : o.insertBefore(r, c);
    }
    function E2(o, r) {
      o.removeChild(r);
    }
    function O2(o, r) {
      o.nodeType === xo ? o.parentNode.removeChild(r) : o.removeChild(r);
    }
    function y0(o, r) {
      var c = r, f = 0;
      do {
        var v = c.nextSibling;
        if (o.removeChild(c), v && v.nodeType === xo) {
          var T = v.data;
          if (T === Ty)
            if (f === 0) {
              o.removeChild(v), mn(r);
              return;
            } else
              f--;
          else
            (T === Cy || T === Lh || T === Ih) && f++;
        }
        c = v;
      } while (c);
      mn(r);
    }
    function P2(o, r) {
      o.nodeType === xo ? y0(o.parentNode, r) : o.nodeType === Lr && y0(o, r), mn(o);
    }
    function D2(o) {
      o = o;
      var r = o.style;
      typeof r.setProperty == "function" ? r.setProperty("display", "none", "important") : r.display = "none";
    }
    function M2(o) {
      o.nodeValue = "";
    }
    function $2(o, r) {
      o = o;
      var c = r[i2], f = c != null && c.hasOwnProperty("display") ? c.display : null;
      o.style.display = qd("display", f);
    }
    function N2(o, r) {
      o.nodeValue = r;
    }
    function L2(o) {
      o.nodeType === Lr ? o.textContent = "" : o.nodeType === Fa && o.documentElement && o.removeChild(o.documentElement);
    }
    function I2(o, r, c) {
      return o.nodeType !== Lr || r.toLowerCase() !== o.nodeName.toLowerCase() ? null : o;
    }
    function A2(o, r) {
      return r === "" || o.nodeType !== Ei ? null : o;
    }
    function _2(o) {
      return o.nodeType !== xo ? null : o;
    }
    function KR(o) {
      return o.data === Lh;
    }
    function C0(o) {
      return o.data === Ih;
    }
    function V2(o) {
      var r = o.nextSibling && o.nextSibling.dataset, c, f, v;
      return r && (c = r.dgst, f = r.msg, v = r.stck), {
        message: f,
        digest: c,
        stack: v
      };
    }
    function B2(o, r) {
      o._reactRetry = r;
    }
    function xy(o) {
      for (; o != null; o = o.nextSibling) {
        var r = o.nodeType;
        if (r === Lr || r === Ei)
          break;
        if (r === xo) {
          var c = o.data;
          if (c === Cy || c === Ih || c === Lh)
            break;
          if (c === Ty)
            return null;
        }
      }
      return o;
    }
    function Ah(o) {
      return xy(o.nextSibling);
    }
    function z2(o) {
      return xy(o.firstChild);
    }
    function F2(o) {
      return xy(o.firstChild);
    }
    function j2(o) {
      return xy(o.nextSibling);
    }
    function U2(o, r, c, f, v, T, D) {
      Vh(T, o), S0(o, c);
      var A;
      {
        var j = v;
        A = j.namespace;
      }
      var G = (T.mode & un) !== Ht;
      return ZV(o, r, c, A, f, G, D);
    }
    function H2(o, r, c, f) {
      return Vh(c, o), c.mode & un, JV(o, r);
    }
    function W2(o, r) {
      Vh(r, o);
    }
    function Y2(o) {
      for (var r = o.nextSibling, c = 0; r; ) {
        if (r.nodeType === xo) {
          var f = r.data;
          if (f === Ty) {
            if (c === 0)
              return Ah(r);
            c--;
          } else
            (f === Cy || f === Ih || f === Lh) && c++;
        }
        r = r.nextSibling;
      }
      return null;
    }
    function QR(o) {
      for (var r = o.previousSibling, c = 0; r; ) {
        if (r.nodeType === xo) {
          var f = r.data;
          if (f === Cy || f === Ih || f === Lh) {
            if (c === 0)
              return r;
            c--;
          } else
            f === Ty && c++;
        }
        r = r.previousSibling;
      }
      return null;
    }
    function q2(o) {
      mn(o);
    }
    function G2(o) {
      mn(o);
    }
    function K2(o) {
      return o !== "head" && o !== "body";
    }
    function Q2(o, r, c, f) {
      var v = !0;
      gy(r.nodeValue, c, f, v);
    }
    function X2(o, r, c, f, v, T) {
      if (r[yy] !== !0) {
        var D = !0;
        gy(f.nodeValue, v, T, D);
      }
    }
    function Z2(o, r) {
      r.nodeType === Lr ? u0(o, r) : r.nodeType === xo || d0(o, r);
    }
    function J2(o, r) {
      {
        var c = o.parentNode;
        c !== null && (r.nodeType === Lr ? u0(c, r) : r.nodeType === xo || d0(c, r));
      }
    }
    function eB(o, r, c, f, v) {
      (v || r[yy] !== !0) && (f.nodeType === Lr ? u0(c, f) : f.nodeType === xo || d0(c, f));
    }
    function tB(o, r, c) {
      p0(o, r);
    }
    function nB(o, r) {
      f0(o, r);
    }
    function oB(o, r, c) {
      {
        var f = o.parentNode;
        f !== null && p0(f, r);
      }
    }
    function rB(o, r) {
      {
        var c = o.parentNode;
        c !== null && f0(c, r);
      }
    }
    function aB(o, r, c, f, v, T) {
      (T || r[yy] !== !0) && p0(c, f);
    }
    function iB(o, r, c, f, v) {
      (v || r[yy] !== !0) && f0(c, f);
    }
    function sB(o) {
      p("An error occurred during hydration. The server HTML was replaced with client content in <%s>.", o.nodeName.toLowerCase());
    }
    function lB(o) {
      Oh(o);
    }
    var Jp = Math.random().toString(36).slice(2), ef = "__reactFiber$" + Jp, T0 = "__reactProps$" + Jp, _h = "__reactContainer$" + Jp, x0 = "__reactEvents$" + Jp, cB = "__reactListeners$" + Jp, uB = "__reactHandles$" + Jp;
    function dB(o) {
      delete o[ef], delete o[T0], delete o[x0], delete o[cB], delete o[uB];
    }
    function Vh(o, r) {
      r[ef] = o;
    }
    function Sy(o, r) {
      r[_h] = o;
    }
    function XR(o) {
      o[_h] = null;
    }
    function Bh(o) {
      return !!o[_h];
    }
    function td(o) {
      var r = o[ef];
      if (r)
        return r;
      for (var c = o.parentNode; c; ) {
        if (r = c[_h] || c[ef], r) {
          var f = r.alternate;
          if (r.child !== null || f !== null && f.child !== null)
            for (var v = QR(o); v !== null; ) {
              var T = v[ef];
              if (T)
                return T;
              v = QR(v);
            }
          return r;
        }
        o = c, c = o.parentNode;
      }
      return null;
    }
    function Mc(o) {
      var r = o[ef] || o[_h];
      return r && (r.tag === R || r.tag === $ || r.tag === B || r.tag === S) ? r : null;
    }
    function tf(o) {
      if (o.tag === R || o.tag === $)
        return o.stateNode;
      throw new Error("getNodeFromInstance: Invalid argument.");
    }
    function ky(o) {
      return o[T0] || null;
    }
    function S0(o, r) {
      o[T0] = r;
    }
    function pB(o) {
      var r = o[x0];
      return r === void 0 && (r = o[x0] = /* @__PURE__ */ new Set()), r;
    }
    var ZR = {}, JR = a.ReactDebugCurrentFrame;
    function wy(o) {
      if (o) {
        var r = o._owner, c = uu(o.type, o._source, r ? r.type : null);
        JR.setExtraStackFrame(c);
      } else
        JR.setExtraStackFrame(null);
    }
    function Fi(o, r, c, f, v) {
      {
        var T = Function.call.bind(ae);
        for (var D in o)
          if (T(o, D)) {
            var A = void 0;
            try {
              if (typeof o[D] != "function") {
                var j = Error((f || "React class") + ": " + c + " type `" + D + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof o[D] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw j.name = "Invariant Violation", j;
              }
              A = o[D](r, D, f, c, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (G) {
              A = G;
            }
            A && !(A instanceof Error) && (wy(v), p("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", f || "React class", c, D, typeof A), wy(null)), A instanceof Error && !(A.message in ZR) && (ZR[A.message] = !0, wy(v), p("Failed %s type: %s", c, A.message), wy(null));
          }
      }
    }
    var k0 = [], Ry;
    Ry = [];
    var El = -1;
    function $c(o) {
      return {
        current: o
      };
    }
    function Ur(o, r) {
      if (El < 0) {
        p("Unexpected pop.");
        return;
      }
      r !== Ry[El] && p("Unexpected Fiber popped."), o.current = k0[El], k0[El] = null, Ry[El] = null, El--;
    }
    function Hr(o, r, c) {
      El++, k0[El] = o.current, Ry[El] = c, o.current = r;
    }
    var w0;
    w0 = {};
    var Ya = {};
    Object.freeze(Ya);
    var Ol = $c(Ya), Ms = $c(!1), R0 = Ya;
    function nf(o, r, c) {
      return c && $s(r) ? R0 : Ol.current;
    }
    function eE(o, r, c) {
      {
        var f = o.stateNode;
        f.__reactInternalMemoizedUnmaskedChildContext = r, f.__reactInternalMemoizedMaskedChildContext = c;
      }
    }
    function of(o, r) {
      {
        var c = o.type, f = c.contextTypes;
        if (!f)
          return Ya;
        var v = o.stateNode;
        if (v && v.__reactInternalMemoizedUnmaskedChildContext === r)
          return v.__reactInternalMemoizedMaskedChildContext;
        var T = {};
        for (var D in f)
          T[D] = r[D];
        {
          var A = on(o) || "Unknown";
          Fi(f, T, "context", A);
        }
        return v && eE(o, r, T), T;
      }
    }
    function Ey() {
      return Ms.current;
    }
    function $s(o) {
      {
        var r = o.childContextTypes;
        return r != null;
      }
    }
    function Oy(o) {
      Ur(Ms, o), Ur(Ol, o);
    }
    function E0(o) {
      Ur(Ms, o), Ur(Ol, o);
    }
    function tE(o, r, c) {
      {
        if (Ol.current !== Ya)
          throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
        Hr(Ol, r, o), Hr(Ms, c, o);
      }
    }
    function nE(o, r, c) {
      {
        var f = o.stateNode, v = r.childContextTypes;
        if (typeof f.getChildContext != "function") {
          {
            var T = on(o) || "Unknown";
            w0[T] || (w0[T] = !0, p("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", T, T));
          }
          return c;
        }
        var D = f.getChildContext();
        for (var A in D)
          if (!(A in v))
            throw new Error((on(o) || "Unknown") + '.getChildContext(): key "' + A + '" is not defined in childContextTypes.');
        {
          var j = on(o) || "Unknown";
          Fi(v, D, "child context", j);
        }
        return fn({}, c, D);
      }
    }
    function Py(o) {
      {
        var r = o.stateNode, c = r && r.__reactInternalMemoizedMergedChildContext || Ya;
        return R0 = Ol.current, Hr(Ol, c, o), Hr(Ms, Ms.current, o), !0;
      }
    }
    function oE(o, r, c) {
      {
        var f = o.stateNode;
        if (!f)
          throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
        if (c) {
          var v = nE(o, r, R0);
          f.__reactInternalMemoizedMergedChildContext = v, Ur(Ms, o), Ur(Ol, o), Hr(Ol, v, o), Hr(Ms, c, o);
        } else
          Ur(Ms, o), Hr(Ms, c, o);
      }
    }
    function fB(o) {
      {
        if (!jm(o) || o.tag !== b)
          throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
        var r = o;
        do {
          switch (r.tag) {
            case S:
              return r.stateNode.context;
            case b: {
              var c = r.type;
              if ($s(c))
                return r.stateNode.__reactInternalMemoizedMergedChildContext;
              break;
            }
          }
          r = r.return;
        } while (r !== null);
        throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
    var Nc = 0, Dy = 1, Pl = null, O0 = !1, P0 = !1;
    function rE(o) {
      Pl === null ? Pl = [o] : Pl.push(o);
    }
    function mB(o) {
      O0 = !0, rE(o);
    }
    function aE() {
      O0 && Lc();
    }
    function Lc() {
      if (!P0 && Pl !== null) {
        P0 = !0;
        var o = 0, r = ka();
        try {
          var c = !0, f = Pl;
          for (Lo(vr); o < f.length; o++) {
            var v = f[o];
            do
              v = v(c);
            while (v !== null);
          }
          Pl = null, O0 = !1;
        } catch (T) {
          throw Pl !== null && (Pl = Pl.slice(o + 1)), rp(ip, Lc), T;
        } finally {
          Lo(r), P0 = !1;
        }
      }
      return null;
    }
    var rf = [], af = 0, My = null, $y = 0, ui = [], di = 0, nd = null, Dl = 1, Ml = "";
    function hB(o) {
      return rd(), (o.flags & Bm) !== jt;
    }
    function vB(o) {
      return rd(), $y;
    }
    function gB() {
      var o = Ml, r = Dl, c = r & ~bB(r);
      return c.toString(32) + o;
    }
    function od(o, r) {
      rd(), rf[af++] = $y, rf[af++] = My, My = o, $y = r;
    }
    function iE(o, r, c) {
      rd(), ui[di++] = Dl, ui[di++] = Ml, ui[di++] = nd, nd = o;
      var f = Dl, v = Ml, T = Ny(f) - 1, D = f & ~(1 << T), A = c + 1, j = Ny(r) + T;
      if (j > 30) {
        var G = T - T % 5, ee = (1 << G) - 1, ye = (D & ee).toString(32), he = D >> G, Ve = T - G, Be = Ny(r) + Ve, Qe = A << Ve, Pt = Qe | he, Ut = ye + v;
        Dl = 1 << Be | Pt, Ml = Ut;
      } else {
        var zt = A << T, bn = zt | D, hn = v;
        Dl = 1 << j | bn, Ml = hn;
      }
    }
    function D0(o) {
      rd();
      var r = o.return;
      if (r !== null) {
        var c = 1, f = 0;
        od(o, c), iE(o, c, f);
      }
    }
    function Ny(o) {
      return 32 - pp(o);
    }
    function bB(o) {
      return 1 << Ny(o) - 1;
    }
    function M0(o) {
      for (; o === My; )
        My = rf[--af], rf[af] = null, $y = rf[--af], rf[af] = null;
      for (; o === nd; )
        nd = ui[--di], ui[di] = null, Ml = ui[--di], ui[di] = null, Dl = ui[--di], ui[di] = null;
    }
    function yB() {
      return rd(), nd !== null ? {
        id: Dl,
        overflow: Ml
      } : null;
    }
    function CB(o, r) {
      rd(), ui[di++] = Dl, ui[di++] = Ml, ui[di++] = nd, Dl = r.id, Ml = r.overflow, nd = o;
    }
    function rd() {
      kr() || p("Expected to be hydrating. This is a bug in React. Please file an issue.");
    }
    var Sr = null, pi = null, ji = !1, ad = !1, Ic = null;
    function TB() {
      ji && p("We should not be hydrating here. This is a bug in React. Please file a bug.");
    }
    function sE() {
      ad = !0;
    }
    function xB() {
      return ad;
    }
    function SB(o) {
      var r = o.stateNode.containerInfo;
      return pi = F2(r), Sr = o, ji = !0, Ic = null, ad = !1, !0;
    }
    function kB(o, r, c) {
      return pi = j2(r), Sr = o, ji = !0, Ic = null, ad = !1, c !== null && CB(o, c), !0;
    }
    function lE(o, r) {
      switch (o.tag) {
        case S: {
          Z2(o.stateNode.containerInfo, r);
          break;
        }
        case R: {
          var c = (o.mode & un) !== Ht;
          eB(
            o.type,
            o.memoizedProps,
            o.stateNode,
            r,
            // TODO: Delete this argument when we remove the legacy root API.
            c
          );
          break;
        }
        case B: {
          var f = o.memoizedState;
          f.dehydrated !== null && J2(f.dehydrated, r);
          break;
        }
      }
    }
    function cE(o, r) {
      lE(o, r);
      var c = Ej();
      c.stateNode = r, c.return = o;
      var f = o.deletions;
      f === null ? (o.deletions = [c], o.flags |= Rn) : f.push(c);
    }
    function $0(o, r) {
      {
        if (ad)
          return;
        switch (o.tag) {
          case S: {
            var c = o.stateNode.containerInfo;
            switch (r.tag) {
              case R:
                var f = r.type;
                r.pendingProps, tB(c, f);
                break;
              case $:
                var v = r.pendingProps;
                nB(c, v);
                break;
            }
            break;
          }
          case R: {
            var T = o.type, D = o.memoizedProps, A = o.stateNode;
            switch (r.tag) {
              case R: {
                var j = r.type, G = r.pendingProps, ee = (o.mode & un) !== Ht;
                aB(
                  T,
                  D,
                  A,
                  j,
                  G,
                  // TODO: Delete this argument when we remove the legacy root API.
                  ee
                );
                break;
              }
              case $: {
                var ye = r.pendingProps, he = (o.mode & un) !== Ht;
                iB(
                  T,
                  D,
                  A,
                  ye,
                  // TODO: Delete this argument when we remove the legacy root API.
                  he
                );
                break;
              }
            }
            break;
          }
          case B: {
            var Ve = o.memoizedState, Be = Ve.dehydrated;
            if (Be !== null)
              switch (r.tag) {
                case R:
                  var Qe = r.type;
                  r.pendingProps, oB(Be, Qe);
                  break;
                case $:
                  var Pt = r.pendingProps;
                  rB(Be, Pt);
                  break;
              }
            break;
          }
          default:
            return;
        }
      }
    }
    function uE(o, r) {
      r.flags = r.flags & ~ya | Gn, $0(o, r);
    }
    function dE(o, r) {
      switch (o.tag) {
        case R: {
          var c = o.type;
          o.pendingProps;
          var f = I2(r, c);
          return f !== null ? (o.stateNode = f, Sr = o, pi = z2(f), !0) : !1;
        }
        case $: {
          var v = o.pendingProps, T = A2(r, v);
          return T !== null ? (o.stateNode = T, Sr = o, pi = null, !0) : !1;
        }
        case B: {
          var D = _2(r);
          if (D !== null) {
            var A = {
              dehydrated: D,
              treeContext: yB(),
              retryLane: Fr
            };
            o.memoizedState = A;
            var j = Oj(D);
            return j.return = o, o.child = j, Sr = o, pi = null, !0;
          }
          return !1;
        }
        default:
          return !1;
      }
    }
    function N0(o) {
      return (o.mode & un) !== Ht && (o.flags & Qt) === jt;
    }
    function L0(o) {
      throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
    }
    function I0(o) {
      if (ji) {
        var r = pi;
        if (!r) {
          N0(o) && ($0(Sr, o), L0()), uE(Sr, o), ji = !1, Sr = o;
          return;
        }
        var c = r;
        if (!dE(o, r)) {
          N0(o) && ($0(Sr, o), L0()), r = Ah(c);
          var f = Sr;
          if (!r || !dE(o, r)) {
            uE(Sr, o), ji = !1, Sr = o;
            return;
          }
          cE(f, c);
        }
      }
    }
    function wB(o, r, c) {
      var f = o.stateNode, v = !ad, T = U2(f, o.type, o.memoizedProps, r, c, o, v);
      return o.updateQueue = T, T !== null;
    }
    function RB(o) {
      var r = o.stateNode, c = o.memoizedProps, f = H2(r, c, o);
      if (f) {
        var v = Sr;
        if (v !== null)
          switch (v.tag) {
            case S: {
              var T = v.stateNode.containerInfo, D = (v.mode & un) !== Ht;
              Q2(
                T,
                r,
                c,
                // TODO: Delete this argument when we remove the legacy root API.
                D
              );
              break;
            }
            case R: {
              var A = v.type, j = v.memoizedProps, G = v.stateNode, ee = (v.mode & un) !== Ht;
              X2(
                A,
                j,
                G,
                r,
                c,
                // TODO: Delete this argument when we remove the legacy root API.
                ee
              );
              break;
            }
          }
      }
      return f;
    }
    function EB(o) {
      var r = o.memoizedState, c = r !== null ? r.dehydrated : null;
      if (!c)
        throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
      W2(c, o);
    }
    function OB(o) {
      var r = o.memoizedState, c = r !== null ? r.dehydrated : null;
      if (!c)
        throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
      return Y2(c);
    }
    function pE(o) {
      for (var r = o.return; r !== null && r.tag !== R && r.tag !== S && r.tag !== B; )
        r = r.return;
      Sr = r;
    }
    function Ly(o) {
      if (o !== Sr)
        return !1;
      if (!ji)
        return pE(o), ji = !0, !1;
      if (o.tag !== S && (o.tag !== R || K2(o.type) && !v0(o.type, o.memoizedProps))) {
        var r = pi;
        if (r)
          if (N0(o))
            fE(o), L0();
          else
            for (; r; )
              cE(o, r), r = Ah(r);
      }
      return pE(o), o.tag === B ? pi = OB(o) : pi = Sr ? Ah(o.stateNode) : null, !0;
    }
    function PB() {
      return ji && pi !== null;
    }
    function fE(o) {
      for (var r = pi; r; )
        lE(o, r), r = Ah(r);
    }
    function sf() {
      Sr = null, pi = null, ji = !1, ad = !1;
    }
    function mE() {
      Ic !== null && (lP(Ic), Ic = null);
    }
    function kr() {
      return ji;
    }
    function A0(o) {
      Ic === null ? Ic = [o] : Ic.push(o);
    }
    var DB = a.ReactCurrentBatchConfig, MB = null;
    function $B() {
      return DB.transition;
    }
    var Ui = {
      recordUnsafeLifecycleWarnings: function(o, r) {
      },
      flushPendingUnsafeLifecycleWarnings: function() {
      },
      recordLegacyContextWarning: function(o, r) {
      },
      flushLegacyContextWarning: function() {
      },
      discardPendingWarnings: function() {
      }
    };
    {
      var NB = function(o) {
        for (var r = null, c = o; c !== null; )
          c.mode & so && (r = c), c = c.return;
        return r;
      }, id = function(o) {
        var r = [];
        return o.forEach(function(c) {
          r.push(c);
        }), r.sort().join(", ");
      }, zh = [], Fh = [], jh = [], Uh = [], Hh = [], Wh = [], sd = /* @__PURE__ */ new Set();
      Ui.recordUnsafeLifecycleWarnings = function(o, r) {
        sd.has(o.type) || (typeof r.componentWillMount == "function" && // Don't warn about react-lifecycles-compat polyfilled components.
        r.componentWillMount.__suppressDeprecationWarning !== !0 && zh.push(o), o.mode & so && typeof r.UNSAFE_componentWillMount == "function" && Fh.push(o), typeof r.componentWillReceiveProps == "function" && r.componentWillReceiveProps.__suppressDeprecationWarning !== !0 && jh.push(o), o.mode & so && typeof r.UNSAFE_componentWillReceiveProps == "function" && Uh.push(o), typeof r.componentWillUpdate == "function" && r.componentWillUpdate.__suppressDeprecationWarning !== !0 && Hh.push(o), o.mode & so && typeof r.UNSAFE_componentWillUpdate == "function" && Wh.push(o));
      }, Ui.flushPendingUnsafeLifecycleWarnings = function() {
        var o = /* @__PURE__ */ new Set();
        zh.length > 0 && (zh.forEach(function(he) {
          o.add(on(he) || "Component"), sd.add(he.type);
        }), zh = []);
        var r = /* @__PURE__ */ new Set();
        Fh.length > 0 && (Fh.forEach(function(he) {
          r.add(on(he) || "Component"), sd.add(he.type);
        }), Fh = []);
        var c = /* @__PURE__ */ new Set();
        jh.length > 0 && (jh.forEach(function(he) {
          c.add(on(he) || "Component"), sd.add(he.type);
        }), jh = []);
        var f = /* @__PURE__ */ new Set();
        Uh.length > 0 && (Uh.forEach(function(he) {
          f.add(on(he) || "Component"), sd.add(he.type);
        }), Uh = []);
        var v = /* @__PURE__ */ new Set();
        Hh.length > 0 && (Hh.forEach(function(he) {
          v.add(on(he) || "Component"), sd.add(he.type);
        }), Hh = []);
        var T = /* @__PURE__ */ new Set();
        if (Wh.length > 0 && (Wh.forEach(function(he) {
          T.add(on(he) || "Component"), sd.add(he.type);
        }), Wh = []), r.size > 0) {
          var D = id(r);
          p(`Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.

Please update the following components: %s`, D);
        }
        if (f.size > 0) {
          var A = id(f);
          p(`Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state

Please update the following components: %s`, A);
        }
        if (T.size > 0) {
          var j = id(T);
          p(`Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.

Please update the following components: %s`, j);
        }
        if (o.size > 0) {
          var G = id(o);
          d(`componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.
* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, G);
        }
        if (c.size > 0) {
          var ee = id(c);
          d(`componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state
* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, ee);
        }
        if (v.size > 0) {
          var ye = id(v);
          d(`componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, ye);
        }
      };
      var Iy = /* @__PURE__ */ new Map(), hE = /* @__PURE__ */ new Set();
      Ui.recordLegacyContextWarning = function(o, r) {
        var c = NB(o);
        if (c === null) {
          p("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
          return;
        }
        if (!hE.has(o.type)) {
          var f = Iy.get(c);
          (o.type.contextTypes != null || o.type.childContextTypes != null || r !== null && typeof r.getChildContext == "function") && (f === void 0 && (f = [], Iy.set(c, f)), f.push(o));
        }
      }, Ui.flushLegacyContextWarning = function() {
        Iy.forEach(function(o, r) {
          if (o.length !== 0) {
            var c = o[0], f = /* @__PURE__ */ new Set();
            o.forEach(function(T) {
              f.add(on(T) || "Component"), hE.add(T.type);
            });
            var v = id(f);
            try {
              In(c), p(`Legacy context API has been detected within a strict-mode tree.

The old API will be supported in all 16.x releases, but applications using it should migrate to the new version.

Please update the following components: %s

Learn more about this warning here: https://reactjs.org/link/legacy-context`, v);
            } finally {
              Mo();
            }
          }
        });
      }, Ui.discardPendingWarnings = function() {
        zh = [], Fh = [], jh = [], Uh = [], Hh = [], Wh = [], Iy = /* @__PURE__ */ new Map();
      };
    }
    function Hi(o, r) {
      if (o && o.defaultProps) {
        var c = fn({}, r), f = o.defaultProps;
        for (var v in f)
          c[v] === void 0 && (c[v] = f[v]);
        return c;
      }
      return r;
    }
    var _0 = $c(null), V0;
    V0 = {};
    var Ay = null, lf = null, B0 = null, _y = !1;
    function Vy() {
      Ay = null, lf = null, B0 = null, _y = !1;
    }
    function vE() {
      _y = !0;
    }
    function gE() {
      _y = !1;
    }
    function bE(o, r, c) {
      Hr(_0, r._currentValue, o), r._currentValue = c, r._currentRenderer !== void 0 && r._currentRenderer !== null && r._currentRenderer !== V0 && p("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."), r._currentRenderer = V0;
    }
    function z0(o, r) {
      var c = _0.current;
      Ur(_0, r), o._currentValue = c;
    }
    function F0(o, r, c) {
      for (var f = o; f !== null; ) {
        var v = f.alternate;
        if (vl(f.childLanes, r) ? v !== null && !vl(v.childLanes, r) && (v.childLanes = sn(v.childLanes, r)) : (f.childLanes = sn(f.childLanes, r), v !== null && (v.childLanes = sn(v.childLanes, r))), f === c)
          break;
        f = f.return;
      }
      f !== c && p("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
    }
    function LB(o, r, c) {
      IB(o, r, c);
    }
    function IB(o, r, c) {
      var f = o.child;
      for (f !== null && (f.return = o); f !== null; ) {
        var v = void 0, T = f.dependencies;
        if (T !== null) {
          v = f.child;
          for (var D = T.firstContext; D !== null; ) {
            if (D.context === r) {
              if (f.tag === b) {
                var A = No(c), j = $l(Hn, A);
                j.tag = zy;
                var G = f.updateQueue;
                if (G !== null) {
                  var ee = G.shared, ye = ee.pending;
                  ye === null ? j.next = j : (j.next = ye.next, ye.next = j), ee.pending = j;
                }
              }
              f.lanes = sn(f.lanes, c);
              var he = f.alternate;
              he !== null && (he.lanes = sn(he.lanes, c)), F0(f.return, c, o), T.lanes = sn(T.lanes, c);
              break;
            }
            D = D.next;
          }
        } else if (f.tag === V)
          v = f.type === o.type ? null : f.child;
        else if (f.tag === Q) {
          var Ve = f.return;
          if (Ve === null)
            throw new Error("We just came from a parent so we must have had a parent. This is a bug in React.");
          Ve.lanes = sn(Ve.lanes, c);
          var Be = Ve.alternate;
          Be !== null && (Be.lanes = sn(Be.lanes, c)), F0(Ve, c, o), v = f.sibling;
        } else
          v = f.child;
        if (v !== null)
          v.return = f;
        else
          for (v = f; v !== null; ) {
            if (v === o) {
              v = null;
              break;
            }
            var Qe = v.sibling;
            if (Qe !== null) {
              Qe.return = v.return, v = Qe;
              break;
            }
            v = v.return;
          }
        f = v;
      }
    }
    function cf(o, r) {
      Ay = o, lf = null, B0 = null;
      var c = o.dependencies;
      if (c !== null) {
        var f = c.firstContext;
        f !== null && (jr(c.lanes, r) && av(), c.firstContext = null);
      }
    }
    function Qo(o) {
      _y && p("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
      var r = o._currentValue;
      if (B0 !== o) {
        var c = {
          context: o,
          memoizedValue: r,
          next: null
        };
        if (lf === null) {
          if (Ay === null)
            throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
          lf = c, Ay.dependencies = {
            lanes: tt,
            firstContext: c
          };
        } else
          lf = lf.next = c;
      }
      return r;
    }
    var ld = null;
    function j0(o) {
      ld === null ? ld = [o] : ld.push(o);
    }
    function AB() {
      if (ld !== null) {
        for (var o = 0; o < ld.length; o++) {
          var r = ld[o], c = r.interleaved;
          if (c !== null) {
            r.interleaved = null;
            var f = c.next, v = r.pending;
            if (v !== null) {
              var T = v.next;
              v.next = f, c.next = T;
            }
            r.pending = c;
          }
        }
        ld = null;
      }
    }
    function yE(o, r, c, f) {
      var v = r.interleaved;
      return v === null ? (c.next = c, j0(r)) : (c.next = v.next, v.next = c), r.interleaved = c, By(o, f);
    }
    function _B(o, r, c, f) {
      var v = r.interleaved;
      v === null ? (c.next = c, j0(r)) : (c.next = v.next, v.next = c), r.interleaved = c;
    }
    function VB(o, r, c, f) {
      var v = r.interleaved;
      return v === null ? (c.next = c, j0(r)) : (c.next = v.next, v.next = c), r.interleaved = c, By(o, f);
    }
    function Pa(o, r) {
      return By(o, r);
    }
    var BB = By;
    function By(o, r) {
      o.lanes = sn(o.lanes, r);
      var c = o.alternate;
      c !== null && (c.lanes = sn(c.lanes, r)), c === null && (o.flags & (Gn | ya)) !== jt && CP(o);
      for (var f = o, v = o.return; v !== null; )
        v.childLanes = sn(v.childLanes, r), c = v.alternate, c !== null ? c.childLanes = sn(c.childLanes, r) : (v.flags & (Gn | ya)) !== jt && CP(o), f = v, v = v.return;
      if (f.tag === S) {
        var T = f.stateNode;
        return T;
      } else
        return null;
    }
    var CE = 0, TE = 1, zy = 2, U0 = 3, Fy = !1, H0, jy;
    H0 = !1, jy = null;
    function W0(o) {
      var r = {
        baseState: o.memoizedState,
        firstBaseUpdate: null,
        lastBaseUpdate: null,
        shared: {
          pending: null,
          interleaved: null,
          lanes: tt
        },
        effects: null
      };
      o.updateQueue = r;
    }
    function xE(o, r) {
      var c = r.updateQueue, f = o.updateQueue;
      if (c === f) {
        var v = {
          baseState: f.baseState,
          firstBaseUpdate: f.firstBaseUpdate,
          lastBaseUpdate: f.lastBaseUpdate,
          shared: f.shared,
          effects: f.effects
        };
        r.updateQueue = v;
      }
    }
    function $l(o, r) {
      var c = {
        eventTime: o,
        lane: r,
        tag: CE,
        payload: null,
        callback: null,
        next: null
      };
      return c;
    }
    function Ac(o, r, c) {
      var f = o.updateQueue;
      if (f === null)
        return null;
      var v = f.shared;
      if (jy === v && !H0 && (p("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback."), H0 = !0), BF()) {
        var T = v.pending;
        return T === null ? r.next = r : (r.next = T.next, T.next = r), v.pending = r, BB(o, c);
      } else
        return VB(o, v, r, c);
    }
    function Uy(o, r, c) {
      var f = r.updateQueue;
      if (f !== null) {
        var v = f.shared;
        if (th(c)) {
          var T = v.lanes;
          T = oh(T, o.pendingLanes);
          var D = sn(T, c);
          v.lanes = D, vc(o, D);
        }
      }
    }
    function Y0(o, r) {
      var c = o.updateQueue, f = o.alternate;
      if (f !== null) {
        var v = f.updateQueue;
        if (c === v) {
          var T = null, D = null, A = c.firstBaseUpdate;
          if (A !== null) {
            var j = A;
            do {
              var G = {
                eventTime: j.eventTime,
                lane: j.lane,
                tag: j.tag,
                payload: j.payload,
                callback: j.callback,
                next: null
              };
              D === null ? T = D = G : (D.next = G, D = G), j = j.next;
            } while (j !== null);
            D === null ? T = D = r : (D.next = r, D = r);
          } else
            T = D = r;
          c = {
            baseState: v.baseState,
            firstBaseUpdate: T,
            lastBaseUpdate: D,
            shared: v.shared,
            effects: v.effects
          }, o.updateQueue = c;
          return;
        }
      }
      var ee = c.lastBaseUpdate;
      ee === null ? c.firstBaseUpdate = r : ee.next = r, c.lastBaseUpdate = r;
    }
    function zB(o, r, c, f, v, T) {
      switch (c.tag) {
        case TE: {
          var D = c.payload;
          if (typeof D == "function") {
            vE();
            var A = D.call(T, f, v);
            {
              if (o.mode & so) {
                $o(!0);
                try {
                  D.call(T, f, v);
                } finally {
                  $o(!1);
                }
              }
              gE();
            }
            return A;
          }
          return D;
        }
        case U0:
          o.flags = o.flags & ~Wo | Qt;
        case CE: {
          var j = c.payload, G;
          if (typeof j == "function") {
            vE(), G = j.call(T, f, v);
            {
              if (o.mode & so) {
                $o(!0);
                try {
                  j.call(T, f, v);
                } finally {
                  $o(!1);
                }
              }
              gE();
            }
          } else
            G = j;
          return G == null ? f : fn({}, f, G);
        }
        case zy:
          return Fy = !0, f;
      }
      return f;
    }
    function Hy(o, r, c, f) {
      var v = o.updateQueue;
      Fy = !1, jy = v.shared;
      var T = v.firstBaseUpdate, D = v.lastBaseUpdate, A = v.shared.pending;
      if (A !== null) {
        v.shared.pending = null;
        var j = A, G = j.next;
        j.next = null, D === null ? T = G : D.next = G, D = j;
        var ee = o.alternate;
        if (ee !== null) {
          var ye = ee.updateQueue, he = ye.lastBaseUpdate;
          he !== D && (he === null ? ye.firstBaseUpdate = G : he.next = G, ye.lastBaseUpdate = j);
        }
      }
      if (T !== null) {
        var Ve = v.baseState, Be = tt, Qe = null, Pt = null, Ut = null, zt = T;
        do {
          var bn = zt.lane, hn = zt.eventTime;
          if (vl(f, bn)) {
            if (Ut !== null) {
              var Xe = {
                eventTime: hn,
                // This update is going to be committed so we never want uncommit
                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                // this will never be skipped by the check above.
                lane: vn,
                tag: zt.tag,
                payload: zt.payload,
                callback: zt.callback,
                next: null
              };
              Ut = Ut.next = Xe;
            }
            Ve = zB(o, v, zt, Ve, r, c);
            var $e = zt.callback;
            if ($e !== null && // If the update was already committed, we should not queue its
            // callback again.
            zt.lane !== vn) {
              o.flags |= ri;
              var mt = v.effects;
              mt === null ? v.effects = [zt] : mt.push(zt);
            }
          } else {
            var Me = {
              eventTime: hn,
              lane: bn,
              tag: zt.tag,
              payload: zt.payload,
              callback: zt.callback,
              next: null
            };
            Ut === null ? (Pt = Ut = Me, Qe = Ve) : Ut = Ut.next = Me, Be = sn(Be, bn);
          }
          if (zt = zt.next, zt === null) {
            if (A = v.shared.pending, A === null)
              break;
            var Dt = A, Rt = Dt.next;
            Dt.next = null, zt = Rt, v.lastBaseUpdate = Dt, v.shared.pending = null;
          }
        } while (!0);
        Ut === null && (Qe = Ve), v.baseState = Qe, v.firstBaseUpdate = Pt, v.lastBaseUpdate = Ut;
        var Kt = v.shared.interleaved;
        if (Kt !== null) {
          var tn = Kt;
          do
            Be = sn(Be, tn.lane), tn = tn.next;
          while (tn !== Kt);
        } else
          T === null && (v.shared.lanes = tt);
        gv(Be), o.lanes = Be, o.memoizedState = Ve;
      }
      jy = null;
    }
    function FB(o, r) {
      if (typeof o != "function")
        throw new Error("Invalid argument passed as callback. Expected a function. Instead " + ("received: " + o));
      o.call(r);
    }
    function SE() {
      Fy = !1;
    }
    function Wy() {
      return Fy;
    }
    function kE(o, r, c) {
      var f = r.effects;
      if (r.effects = null, f !== null)
        for (var v = 0; v < f.length; v++) {
          var T = f[v], D = T.callback;
          D !== null && (T.callback = null, FB(D, c));
        }
    }
    var q0 = {}, wE = new e.Component().refs, G0, K0, Q0, X0, Z0, RE, Yy, J0, eS, tS;
    {
      G0 = /* @__PURE__ */ new Set(), K0 = /* @__PURE__ */ new Set(), Q0 = /* @__PURE__ */ new Set(), X0 = /* @__PURE__ */ new Set(), J0 = /* @__PURE__ */ new Set(), Z0 = /* @__PURE__ */ new Set(), eS = /* @__PURE__ */ new Set(), tS = /* @__PURE__ */ new Set();
      var EE = /* @__PURE__ */ new Set();
      Yy = function(o, r) {
        if (!(o === null || typeof o == "function")) {
          var c = r + "_" + o;
          EE.has(c) || (EE.add(c), p("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", r, o));
        }
      }, RE = function(o, r) {
        if (r === void 0) {
          var c = jn(o) || "Component";
          Z0.has(c) || (Z0.add(c), p("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", c));
        }
      }, Object.defineProperty(q0, "_processChildContext", {
        enumerable: !1,
        value: function() {
          throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
        }
      }), Object.freeze(q0);
    }
    function nS(o, r, c, f) {
      var v = o.memoizedState, T = c(f, v);
      {
        if (o.mode & so) {
          $o(!0);
          try {
            T = c(f, v);
          } finally {
            $o(!1);
          }
        }
        RE(r, T);
      }
      var D = T == null ? v : fn({}, v, T);
      if (o.memoizedState = D, o.lanes === tt) {
        var A = o.updateQueue;
        A.baseState = D;
      }
    }
    var oS = {
      isMounted: na,
      enqueueSetState: function(o, r, c) {
        var f = ga(o), v = la(), T = Hc(f), D = $l(v, T);
        D.payload = r, c != null && (Yy(c, "setState"), D.callback = c);
        var A = Ac(f, D, T);
        A !== null && (ur(A, f, T, v), Uy(A, f, T)), xs(f, T);
      },
      enqueueReplaceState: function(o, r, c) {
        var f = ga(o), v = la(), T = Hc(f), D = $l(v, T);
        D.tag = TE, D.payload = r, c != null && (Yy(c, "replaceState"), D.callback = c);
        var A = Ac(f, D, T);
        A !== null && (ur(A, f, T, v), Uy(A, f, T)), xs(f, T);
      },
      enqueueForceUpdate: function(o, r) {
        var c = ga(o), f = la(), v = Hc(c), T = $l(f, v);
        T.tag = zy, r != null && (Yy(r, "forceUpdate"), T.callback = r);
        var D = Ac(c, T, v);
        D !== null && (ur(D, c, v, f), Uy(D, c, v)), Xm(c, v);
      }
    };
    function OE(o, r, c, f, v, T, D) {
      var A = o.stateNode;
      if (typeof A.shouldComponentUpdate == "function") {
        var j = A.shouldComponentUpdate(f, T, D);
        {
          if (o.mode & so) {
            $o(!0);
            try {
              j = A.shouldComponentUpdate(f, T, D);
            } finally {
              $o(!1);
            }
          }
          j === void 0 && p("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", jn(r) || "Component");
        }
        return j;
      }
      return r.prototype && r.prototype.isPureReactComponent ? !Ft(c, f) || !Ft(v, T) : !0;
    }
    function jB(o, r, c) {
      var f = o.stateNode;
      {
        var v = jn(r) || "Component", T = f.render;
        T || (r.prototype && typeof r.prototype.render == "function" ? p("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", v) : p("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", v)), f.getInitialState && !f.getInitialState.isReactClassApproved && !f.state && p("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", v), f.getDefaultProps && !f.getDefaultProps.isReactClassApproved && p("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", v), f.propTypes && p("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", v), f.contextType && p("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", v), f.contextTypes && p("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", v), r.contextType && r.contextTypes && !eS.has(r) && (eS.add(r), p("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", v)), typeof f.componentShouldUpdate == "function" && p("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", v), r.prototype && r.prototype.isPureReactComponent && typeof f.shouldComponentUpdate < "u" && p("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", jn(r) || "A pure component"), typeof f.componentDidUnmount == "function" && p("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", v), typeof f.componentDidReceiveProps == "function" && p("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", v), typeof f.componentWillRecieveProps == "function" && p("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", v), typeof f.UNSAFE_componentWillRecieveProps == "function" && p("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", v);
        var D = f.props !== c;
        f.props !== void 0 && D && p("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", v, v), f.defaultProps && p("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", v, v), typeof f.getSnapshotBeforeUpdate == "function" && typeof f.componentDidUpdate != "function" && !Q0.has(r) && (Q0.add(r), p("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", jn(r))), typeof f.getDerivedStateFromProps == "function" && p("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", v), typeof f.getDerivedStateFromError == "function" && p("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", v), typeof r.getSnapshotBeforeUpdate == "function" && p("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", v);
        var A = f.state;
        A && (typeof A != "object" || Uo(A)) && p("%s.state: must be set to an object or null", v), typeof f.getChildContext == "function" && typeof r.childContextTypes != "object" && p("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", v);
      }
    }
    function PE(o, r) {
      r.updater = oS, o.stateNode = r, ic(r, o), r._reactInternalInstance = q0;
    }
    function DE(o, r, c) {
      var f = !1, v = Ya, T = Ya, D = r.contextType;
      if ("contextType" in r) {
        var A = (
          // Allow null for conditional declaration
          D === null || D !== void 0 && D.$$typeof === jo && D._context === void 0
        );
        if (!A && !tS.has(r)) {
          tS.add(r);
          var j = "";
          D === void 0 ? j = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file." : typeof D != "object" ? j = " However, it is set to a " + typeof D + "." : D.$$typeof === Nr ? j = " Did you accidentally pass the Context.Provider instead?" : D._context !== void 0 ? j = " Did you accidentally pass the Context.Consumer instead?" : j = " However, it is set to an object with keys {" + Object.keys(D).join(", ") + "}.", p("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", jn(r) || "Component", j);
        }
      }
      if (typeof D == "object" && D !== null)
        T = Qo(D);
      else {
        v = nf(o, r, !0);
        var G = r.contextTypes;
        f = G != null, T = f ? of(o, v) : Ya;
      }
      var ee = new r(c, T);
      if (o.mode & so) {
        $o(!0);
        try {
          ee = new r(c, T);
        } finally {
          $o(!1);
        }
      }
      var ye = o.memoizedState = ee.state !== null && ee.state !== void 0 ? ee.state : null;
      PE(o, ee);
      {
        if (typeof r.getDerivedStateFromProps == "function" && ye === null) {
          var he = jn(r) || "Component";
          K0.has(he) || (K0.add(he), p("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", he, ee.state === null ? "null" : "undefined", he));
        }
        if (typeof r.getDerivedStateFromProps == "function" || typeof ee.getSnapshotBeforeUpdate == "function") {
          var Ve = null, Be = null, Qe = null;
          if (typeof ee.componentWillMount == "function" && ee.componentWillMount.__suppressDeprecationWarning !== !0 ? Ve = "componentWillMount" : typeof ee.UNSAFE_componentWillMount == "function" && (Ve = "UNSAFE_componentWillMount"), typeof ee.componentWillReceiveProps == "function" && ee.componentWillReceiveProps.__suppressDeprecationWarning !== !0 ? Be = "componentWillReceiveProps" : typeof ee.UNSAFE_componentWillReceiveProps == "function" && (Be = "UNSAFE_componentWillReceiveProps"), typeof ee.componentWillUpdate == "function" && ee.componentWillUpdate.__suppressDeprecationWarning !== !0 ? Qe = "componentWillUpdate" : typeof ee.UNSAFE_componentWillUpdate == "function" && (Qe = "UNSAFE_componentWillUpdate"), Ve !== null || Be !== null || Qe !== null) {
            var Pt = jn(r) || "Component", Ut = typeof r.getDerivedStateFromProps == "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
            X0.has(Pt) || (X0.add(Pt), p(`Unsafe legacy lifecycles will not be called for components using new component APIs.

%s uses %s but also contains the following legacy lifecycles:%s%s%s

The above lifecycles should be removed. Learn more about this warning here:
https://reactjs.org/link/unsafe-component-lifecycles`, Pt, Ut, Ve !== null ? `
  ` + Ve : "", Be !== null ? `
  ` + Be : "", Qe !== null ? `
  ` + Qe : ""));
          }
        }
      }
      return f && eE(o, v, T), ee;
    }
    function UB(o, r) {
      var c = r.state;
      typeof r.componentWillMount == "function" && r.componentWillMount(), typeof r.UNSAFE_componentWillMount == "function" && r.UNSAFE_componentWillMount(), c !== r.state && (p("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", on(o) || "Component"), oS.enqueueReplaceState(r, r.state, null));
    }
    function ME(o, r, c, f) {
      var v = r.state;
      if (typeof r.componentWillReceiveProps == "function" && r.componentWillReceiveProps(c, f), typeof r.UNSAFE_componentWillReceiveProps == "function" && r.UNSAFE_componentWillReceiveProps(c, f), r.state !== v) {
        {
          var T = on(o) || "Component";
          G0.has(T) || (G0.add(T), p("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", T));
        }
        oS.enqueueReplaceState(r, r.state, null);
      }
    }
    function rS(o, r, c, f) {
      jB(o, r, c);
      var v = o.stateNode;
      v.props = c, v.state = o.memoizedState, v.refs = wE, W0(o);
      var T = r.contextType;
      if (typeof T == "object" && T !== null)
        v.context = Qo(T);
      else {
        var D = nf(o, r, !0);
        v.context = of(o, D);
      }
      {
        if (v.state === c) {
          var A = jn(r) || "Component";
          J0.has(A) || (J0.add(A), p("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", A));
        }
        o.mode & so && Ui.recordLegacyContextWarning(o, v), Ui.recordUnsafeLifecycleWarnings(o, v);
      }
      v.state = o.memoizedState;
      var j = r.getDerivedStateFromProps;
      if (typeof j == "function" && (nS(o, r, j, c), v.state = o.memoizedState), typeof r.getDerivedStateFromProps != "function" && typeof v.getSnapshotBeforeUpdate != "function" && (typeof v.UNSAFE_componentWillMount == "function" || typeof v.componentWillMount == "function") && (UB(o, v), Hy(o, c, v, f), v.state = o.memoizedState), typeof v.componentDidMount == "function") {
        var G = an;
        G |= Ar, (o.mode & xa) !== Ht && (G |= _r), o.flags |= G;
      }
    }
    function HB(o, r, c, f) {
      var v = o.stateNode, T = o.memoizedProps;
      v.props = T;
      var D = v.context, A = r.contextType, j = Ya;
      if (typeof A == "object" && A !== null)
        j = Qo(A);
      else {
        var G = nf(o, r, !0);
        j = of(o, G);
      }
      var ee = r.getDerivedStateFromProps, ye = typeof ee == "function" || typeof v.getSnapshotBeforeUpdate == "function";
      !ye && (typeof v.UNSAFE_componentWillReceiveProps == "function" || typeof v.componentWillReceiveProps == "function") && (T !== c || D !== j) && ME(o, v, c, j), SE();
      var he = o.memoizedState, Ve = v.state = he;
      if (Hy(o, c, v, f), Ve = o.memoizedState, T === c && he === Ve && !Ey() && !Wy()) {
        if (typeof v.componentDidMount == "function") {
          var Be = an;
          Be |= Ar, (o.mode & xa) !== Ht && (Be |= _r), o.flags |= Be;
        }
        return !1;
      }
      typeof ee == "function" && (nS(o, r, ee, c), Ve = o.memoizedState);
      var Qe = Wy() || OE(o, r, T, c, he, Ve, j);
      if (Qe) {
        if (!ye && (typeof v.UNSAFE_componentWillMount == "function" || typeof v.componentWillMount == "function") && (typeof v.componentWillMount == "function" && v.componentWillMount(), typeof v.UNSAFE_componentWillMount == "function" && v.UNSAFE_componentWillMount()), typeof v.componentDidMount == "function") {
          var Pt = an;
          Pt |= Ar, (o.mode & xa) !== Ht && (Pt |= _r), o.flags |= Pt;
        }
      } else {
        if (typeof v.componentDidMount == "function") {
          var Ut = an;
          Ut |= Ar, (o.mode & xa) !== Ht && (Ut |= _r), o.flags |= Ut;
        }
        o.memoizedProps = c, o.memoizedState = Ve;
      }
      return v.props = c, v.state = Ve, v.context = j, Qe;
    }
    function WB(o, r, c, f, v) {
      var T = r.stateNode;
      xE(o, r);
      var D = r.memoizedProps, A = r.type === r.elementType ? D : Hi(r.type, D);
      T.props = A;
      var j = r.pendingProps, G = T.context, ee = c.contextType, ye = Ya;
      if (typeof ee == "object" && ee !== null)
        ye = Qo(ee);
      else {
        var he = nf(r, c, !0);
        ye = of(r, he);
      }
      var Ve = c.getDerivedStateFromProps, Be = typeof Ve == "function" || typeof T.getSnapshotBeforeUpdate == "function";
      !Be && (typeof T.UNSAFE_componentWillReceiveProps == "function" || typeof T.componentWillReceiveProps == "function") && (D !== j || G !== ye) && ME(r, T, f, ye), SE();
      var Qe = r.memoizedState, Pt = T.state = Qe;
      if (Hy(r, f, T, v), Pt = r.memoizedState, D === j && Qe === Pt && !Ey() && !Wy() && !ne)
        return typeof T.componentDidUpdate == "function" && (D !== o.memoizedProps || Qe !== o.memoizedState) && (r.flags |= an), typeof T.getSnapshotBeforeUpdate == "function" && (D !== o.memoizedProps || Qe !== o.memoizedState) && (r.flags |= ba), !1;
      typeof Ve == "function" && (nS(r, c, Ve, f), Pt = r.memoizedState);
      var Ut = Wy() || OE(r, c, A, f, Qe, Pt, ye) || // TODO: In some cases, we'll end up checking if context has changed twice,
      // both before and after `shouldComponentUpdate` has been called. Not ideal,
      // but I'm loath to refactor this function. This only happens for memoized
      // components so it's not that common.
      ne;
      return Ut ? (!Be && (typeof T.UNSAFE_componentWillUpdate == "function" || typeof T.componentWillUpdate == "function") && (typeof T.componentWillUpdate == "function" && T.componentWillUpdate(f, Pt, ye), typeof T.UNSAFE_componentWillUpdate == "function" && T.UNSAFE_componentWillUpdate(f, Pt, ye)), typeof T.componentDidUpdate == "function" && (r.flags |= an), typeof T.getSnapshotBeforeUpdate == "function" && (r.flags |= ba)) : (typeof T.componentDidUpdate == "function" && (D !== o.memoizedProps || Qe !== o.memoizedState) && (r.flags |= an), typeof T.getSnapshotBeforeUpdate == "function" && (D !== o.memoizedProps || Qe !== o.memoizedState) && (r.flags |= ba), r.memoizedProps = f, r.memoizedState = Pt), T.props = f, T.state = Pt, T.context = ye, Ut;
    }
    var aS, iS, sS, lS, cS, $E = function(o, r) {
    };
    aS = !1, iS = !1, sS = {}, lS = {}, cS = {}, $E = function(o, r) {
      if (!(o === null || typeof o != "object") && !(!o._store || o._store.validated || o.key != null)) {
        if (typeof o._store != "object")
          throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
        o._store.validated = !0;
        var c = on(r) || "Component";
        lS[c] || (lS[c] = !0, p('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.'));
      }
    };
    function Yh(o, r, c) {
      var f = c.ref;
      if (f !== null && typeof f != "function" && typeof f != "object") {
        if ((o.mode & so || ue) && // We warn in ReactElement.js if owner and self are equal for string refs
        // because these cannot be automatically converted to an arrow function
        // using a codemod. Therefore, we don't have to warn about string refs again.
        !(c._owner && c._self && c._owner.stateNode !== c._self)) {
          var v = on(o) || "Component";
          sS[v] || (p('A string ref, "%s", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', f), sS[v] = !0);
        }
        if (c._owner) {
          var T = c._owner, D;
          if (T) {
            var A = T;
            if (A.tag !== b)
              throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
            D = A.stateNode;
          }
          if (!D)
            throw new Error("Missing owner for string ref " + f + ". This error is likely caused by a bug in React. Please file an issue.");
          var j = D;
          ge(f, "ref");
          var G = "" + f;
          if (r !== null && r.ref !== null && typeof r.ref == "function" && r.ref._stringRef === G)
            return r.ref;
          var ee = function(ye) {
            var he = j.refs;
            he === wE && (he = j.refs = {}), ye === null ? delete he[G] : he[G] = ye;
          };
          return ee._stringRef = G, ee;
        } else {
          if (typeof f != "string")
            throw new Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
          if (!c._owner)
            throw new Error("Element ref was specified as a string (" + f + `) but no owner was set. This could happen for one of the following reasons:
1. You may be adding a ref to a function component
2. You may be adding a ref to a component that was not created inside a component's render method
3. You have multiple copies of React loaded
See https://reactjs.org/link/refs-must-have-owner for more information.`);
        }
      }
      return f;
    }
    function qy(o, r) {
      var c = Object.prototype.toString.call(r);
      throw new Error("Objects are not valid as a React child (found: " + (c === "[object Object]" ? "object with keys {" + Object.keys(r).join(", ") + "}" : c) + "). If you meant to render a collection of children, use an array instead.");
    }
    function Gy(o) {
      {
        var r = on(o) || "Component";
        if (cS[r])
          return;
        cS[r] = !0, p("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
      }
    }
    function NE(o) {
      var r = o._payload, c = o._init;
      return c(r);
    }
    function LE(o) {
      function r(Me, Xe) {
        if (o) {
          var $e = Me.deletions;
          $e === null ? (Me.deletions = [Xe], Me.flags |= Rn) : $e.push(Xe);
        }
      }
      function c(Me, Xe) {
        if (!o)
          return null;
        for (var $e = Xe; $e !== null; )
          r(Me, $e), $e = $e.sibling;
        return null;
      }
      function f(Me, Xe) {
        for (var $e = /* @__PURE__ */ new Map(), mt = Xe; mt !== null; )
          mt.key !== null ? $e.set(mt.key, mt) : $e.set(mt.index, mt), mt = mt.sibling;
        return $e;
      }
      function v(Me, Xe) {
        var $e = vd(Me, Xe);
        return $e.index = 0, $e.sibling = null, $e;
      }
      function T(Me, Xe, $e) {
        if (Me.index = $e, !o)
          return Me.flags |= Bm, Xe;
        var mt = Me.alternate;
        if (mt !== null) {
          var Dt = mt.index;
          return Dt < Xe ? (Me.flags |= Gn, Xe) : Dt;
        } else
          return Me.flags |= Gn, Xe;
      }
      function D(Me) {
        return o && Me.alternate === null && (Me.flags |= Gn), Me;
      }
      function A(Me, Xe, $e, mt) {
        if (Xe === null || Xe.tag !== $) {
          var Dt = Ak($e, Me.mode, mt);
          return Dt.return = Me, Dt;
        } else {
          var Rt = v(Xe, $e);
          return Rt.return = Me, Rt;
        }
      }
      function j(Me, Xe, $e, mt) {
        var Dt = $e.type;
        if (Dt === Jo)
          return ee(Me, Xe, $e.props.children, mt, $e.key);
        if (Xe !== null && (Xe.elementType === Dt || // Keep this check inline so it only runs on the false path:
        kP(Xe, $e) || // Lazy types should reconcile their resolved type.
        // We need to do this after the Hot Reloading check above,
        // because hot reloading has different semantics than prod because
        // it doesn't resuspend. So we can't let the call below suspend.
        typeof Dt == "object" && Dt !== null && Dt.$$typeof === Tt && NE(Dt) === Xe.type)) {
          var Rt = v(Xe, $e.props);
          return Rt.ref = Yh(Me, Xe, $e), Rt.return = Me, Rt._debugSource = $e._source, Rt._debugOwner = $e._owner, Rt;
        }
        var Kt = Ik($e, Me.mode, mt);
        return Kt.ref = Yh(Me, Xe, $e), Kt.return = Me, Kt;
      }
      function G(Me, Xe, $e, mt) {
        if (Xe === null || Xe.tag !== E || Xe.stateNode.containerInfo !== $e.containerInfo || Xe.stateNode.implementation !== $e.implementation) {
          var Dt = _k($e, Me.mode, mt);
          return Dt.return = Me, Dt;
        } else {
          var Rt = v(Xe, $e.children || []);
          return Rt.return = Me, Rt;
        }
      }
      function ee(Me, Xe, $e, mt, Dt) {
        if (Xe === null || Xe.tag !== M) {
          var Rt = Yc($e, Me.mode, mt, Dt);
          return Rt.return = Me, Rt;
        } else {
          var Kt = v(Xe, $e);
          return Kt.return = Me, Kt;
        }
      }
      function ye(Me, Xe, $e) {
        if (typeof Xe == "string" && Xe !== "" || typeof Xe == "number") {
          var mt = Ak("" + Xe, Me.mode, $e);
          return mt.return = Me, mt;
        }
        if (typeof Xe == "object" && Xe !== null) {
          switch (Xe.$$typeof) {
            case to: {
              var Dt = Ik(Xe, Me.mode, $e);
              return Dt.ref = Yh(Me, null, Xe), Dt.return = Me, Dt;
            }
            case ao: {
              var Rt = _k(Xe, Me.mode, $e);
              return Rt.return = Me, Rt;
            }
            case Tt: {
              var Kt = Xe._payload, tn = Xe._init;
              return ye(Me, tn(Kt), $e);
            }
          }
          if (Uo(Xe) || ki(Xe)) {
            var _n = Yc(Xe, Me.mode, $e, null);
            return _n.return = Me, _n;
          }
          qy(Me, Xe);
        }
        return typeof Xe == "function" && Gy(Me), null;
      }
      function he(Me, Xe, $e, mt) {
        var Dt = Xe !== null ? Xe.key : null;
        if (typeof $e == "string" && $e !== "" || typeof $e == "number")
          return Dt !== null ? null : A(Me, Xe, "" + $e, mt);
        if (typeof $e == "object" && $e !== null) {
          switch ($e.$$typeof) {
            case to:
              return $e.key === Dt ? j(Me, Xe, $e, mt) : null;
            case ao:
              return $e.key === Dt ? G(Me, Xe, $e, mt) : null;
            case Tt: {
              var Rt = $e._payload, Kt = $e._init;
              return he(Me, Xe, Kt(Rt), mt);
            }
          }
          if (Uo($e) || ki($e))
            return Dt !== null ? null : ee(Me, Xe, $e, mt, null);
          qy(Me, $e);
        }
        return typeof $e == "function" && Gy(Me), null;
      }
      function Ve(Me, Xe, $e, mt, Dt) {
        if (typeof mt == "string" && mt !== "" || typeof mt == "number") {
          var Rt = Me.get($e) || null;
          return A(Xe, Rt, "" + mt, Dt);
        }
        if (typeof mt == "object" && mt !== null) {
          switch (mt.$$typeof) {
            case to: {
              var Kt = Me.get(mt.key === null ? $e : mt.key) || null;
              return j(Xe, Kt, mt, Dt);
            }
            case ao: {
              var tn = Me.get(mt.key === null ? $e : mt.key) || null;
              return G(Xe, tn, mt, Dt);
            }
            case Tt:
              var _n = mt._payload, xn = mt._init;
              return Ve(Me, Xe, $e, xn(_n), Dt);
          }
          if (Uo(mt) || ki(mt)) {
            var _o = Me.get($e) || null;
            return ee(Xe, _o, mt, Dt, null);
          }
          qy(Xe, mt);
        }
        return typeof mt == "function" && Gy(Xe), null;
      }
      function Be(Me, Xe, $e) {
        {
          if (typeof Me != "object" || Me === null)
            return Xe;
          switch (Me.$$typeof) {
            case to:
            case ao:
              $E(Me, $e);
              var mt = Me.key;
              if (typeof mt != "string")
                break;
              if (Xe === null) {
                Xe = /* @__PURE__ */ new Set(), Xe.add(mt);
                break;
              }
              if (!Xe.has(mt)) {
                Xe.add(mt);
                break;
              }
              p("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted — the behavior is unsupported and could change in a future version.", mt);
              break;
            case Tt:
              var Dt = Me._payload, Rt = Me._init;
              Be(Rt(Dt), Xe, $e);
              break;
          }
        }
        return Xe;
      }
      function Qe(Me, Xe, $e, mt) {
        for (var Dt = null, Rt = 0; Rt < $e.length; Rt++) {
          var Kt = $e[Rt];
          Dt = Be(Kt, Dt, Me);
        }
        for (var tn = null, _n = null, xn = Xe, _o = 0, Sn = 0, wo = null; xn !== null && Sn < $e.length; Sn++) {
          xn.index > Sn ? (wo = xn, xn = null) : wo = xn.sibling;
          var Yr = he(Me, xn, $e[Sn], mt);
          if (Yr === null) {
            xn === null && (xn = wo);
            break;
          }
          o && xn && Yr.alternate === null && r(Me, xn), _o = T(Yr, _o, Sn), _n === null ? tn = Yr : _n.sibling = Yr, _n = Yr, xn = wo;
        }
        if (Sn === $e.length) {
          if (c(Me, xn), kr()) {
            var Mr = Sn;
            od(Me, Mr);
          }
          return tn;
        }
        if (xn === null) {
          for (; Sn < $e.length; Sn++) {
            var Ga = ye(Me, $e[Sn], mt);
            Ga !== null && (_o = T(Ga, _o, Sn), _n === null ? tn = Ga : _n.sibling = Ga, _n = Ga);
          }
          if (kr()) {
            var ca = Sn;
            od(Me, ca);
          }
          return tn;
        }
        for (var ua = f(Me, xn); Sn < $e.length; Sn++) {
          var qr = Ve(ua, Me, Sn, $e[Sn], mt);
          qr !== null && (o && qr.alternate !== null && ua.delete(qr.key === null ? Sn : qr.key), _o = T(qr, _o, Sn), _n === null ? tn = qr : _n.sibling = qr, _n = qr);
        }
        if (o && ua.forEach(function(Rf) {
          return r(Me, Rf);
        }), kr()) {
          var Vl = Sn;
          od(Me, Vl);
        }
        return tn;
      }
      function Pt(Me, Xe, $e, mt) {
        var Dt = ki($e);
        if (typeof Dt != "function")
          throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
        {
          typeof Symbol == "function" && // $FlowFixMe Flow doesn't know about toStringTag
          $e[Symbol.toStringTag] === "Generator" && (iS || p("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers."), iS = !0), $e.entries === Dt && (aS || p("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), aS = !0);
          var Rt = Dt.call($e);
          if (Rt)
            for (var Kt = null, tn = Rt.next(); !tn.done; tn = Rt.next()) {
              var _n = tn.value;
              Kt = Be(_n, Kt, Me);
            }
        }
        var xn = Dt.call($e);
        if (xn == null)
          throw new Error("An iterable object provided no iterator.");
        for (var _o = null, Sn = null, wo = Xe, Yr = 0, Mr = 0, Ga = null, ca = xn.next(); wo !== null && !ca.done; Mr++, ca = xn.next()) {
          wo.index > Mr ? (Ga = wo, wo = null) : Ga = wo.sibling;
          var ua = he(Me, wo, ca.value, mt);
          if (ua === null) {
            wo === null && (wo = Ga);
            break;
          }
          o && wo && ua.alternate === null && r(Me, wo), Yr = T(ua, Yr, Mr), Sn === null ? _o = ua : Sn.sibling = ua, Sn = ua, wo = Ga;
        }
        if (ca.done) {
          if (c(Me, wo), kr()) {
            var qr = Mr;
            od(Me, qr);
          }
          return _o;
        }
        if (wo === null) {
          for (; !ca.done; Mr++, ca = xn.next()) {
            var Vl = ye(Me, ca.value, mt);
            Vl !== null && (Yr = T(Vl, Yr, Mr), Sn === null ? _o = Vl : Sn.sibling = Vl, Sn = Vl);
          }
          if (kr()) {
            var Rf = Mr;
            od(Me, Rf);
          }
          return _o;
        }
        for (var xv = f(Me, wo); !ca.done; Mr++, ca = xn.next()) {
          var zs = Ve(xv, Me, Mr, ca.value, mt);
          zs !== null && (o && zs.alternate !== null && xv.delete(zs.key === null ? Mr : zs.key), Yr = T(zs, Yr, Mr), Sn === null ? _o = zs : Sn.sibling = zs, Sn = zs);
        }
        if (o && xv.forEach(function(aU) {
          return r(Me, aU);
        }), kr()) {
          var rU = Mr;
          od(Me, rU);
        }
        return _o;
      }
      function Ut(Me, Xe, $e, mt) {
        if (Xe !== null && Xe.tag === $) {
          c(Me, Xe.sibling);
          var Dt = v(Xe, $e);
          return Dt.return = Me, Dt;
        }
        c(Me, Xe);
        var Rt = Ak($e, Me.mode, mt);
        return Rt.return = Me, Rt;
      }
      function zt(Me, Xe, $e, mt) {
        for (var Dt = $e.key, Rt = Xe; Rt !== null; ) {
          if (Rt.key === Dt) {
            var Kt = $e.type;
            if (Kt === Jo) {
              if (Rt.tag === M) {
                c(Me, Rt.sibling);
                var tn = v(Rt, $e.props.children);
                return tn.return = Me, tn._debugSource = $e._source, tn._debugOwner = $e._owner, tn;
              }
            } else if (Rt.elementType === Kt || // Keep this check inline so it only runs on the false path:
            kP(Rt, $e) || // Lazy types should reconcile their resolved type.
            // We need to do this after the Hot Reloading check above,
            // because hot reloading has different semantics than prod because
            // it doesn't resuspend. So we can't let the call below suspend.
            typeof Kt == "object" && Kt !== null && Kt.$$typeof === Tt && NE(Kt) === Rt.type) {
              c(Me, Rt.sibling);
              var _n = v(Rt, $e.props);
              return _n.ref = Yh(Me, Rt, $e), _n.return = Me, _n._debugSource = $e._source, _n._debugOwner = $e._owner, _n;
            }
            c(Me, Rt);
            break;
          } else
            r(Me, Rt);
          Rt = Rt.sibling;
        }
        if ($e.type === Jo) {
          var xn = Yc($e.props.children, Me.mode, mt, $e.key);
          return xn.return = Me, xn;
        } else {
          var _o = Ik($e, Me.mode, mt);
          return _o.ref = Yh(Me, Xe, $e), _o.return = Me, _o;
        }
      }
      function bn(Me, Xe, $e, mt) {
        for (var Dt = $e.key, Rt = Xe; Rt !== null; ) {
          if (Rt.key === Dt)
            if (Rt.tag === E && Rt.stateNode.containerInfo === $e.containerInfo && Rt.stateNode.implementation === $e.implementation) {
              c(Me, Rt.sibling);
              var Kt = v(Rt, $e.children || []);
              return Kt.return = Me, Kt;
            } else {
              c(Me, Rt);
              break;
            }
          else
            r(Me, Rt);
          Rt = Rt.sibling;
        }
        var tn = _k($e, Me.mode, mt);
        return tn.return = Me, tn;
      }
      function hn(Me, Xe, $e, mt) {
        var Dt = typeof $e == "object" && $e !== null && $e.type === Jo && $e.key === null;
        if (Dt && ($e = $e.props.children), typeof $e == "object" && $e !== null) {
          switch ($e.$$typeof) {
            case to:
              return D(zt(Me, Xe, $e, mt));
            case ao:
              return D(bn(Me, Xe, $e, mt));
            case Tt:
              var Rt = $e._payload, Kt = $e._init;
              return hn(Me, Xe, Kt(Rt), mt);
          }
          if (Uo($e))
            return Qe(Me, Xe, $e, mt);
          if (ki($e))
            return Pt(Me, Xe, $e, mt);
          qy(Me, $e);
        }
        return typeof $e == "string" && $e !== "" || typeof $e == "number" ? D(Ut(Me, Xe, "" + $e, mt)) : (typeof $e == "function" && Gy(Me), c(Me, Xe));
      }
      return hn;
    }
    var uf = LE(!0), IE = LE(!1);
    function YB(o, r) {
      if (o !== null && r.child !== o.child)
        throw new Error("Resuming work not yet implemented.");
      if (r.child !== null) {
        var c = r.child, f = vd(c, c.pendingProps);
        for (r.child = f, f.return = r; c.sibling !== null; )
          c = c.sibling, f = f.sibling = vd(c, c.pendingProps), f.return = r;
        f.sibling = null;
      }
    }
    function qB(o, r) {
      for (var c = o.child; c !== null; )
        xj(c, r), c = c.sibling;
    }
    var qh = {}, _c = $c(qh), Gh = $c(qh), Ky = $c(qh);
    function Qy(o) {
      if (o === qh)
        throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
      return o;
    }
    function AE() {
      var o = Qy(Ky.current);
      return o;
    }
    function uS(o, r) {
      Hr(Ky, r, o), Hr(Gh, o, o), Hr(_c, qh, o);
      var c = s2(r);
      Ur(_c, o), Hr(_c, c, o);
    }
    function df(o) {
      Ur(_c, o), Ur(Gh, o), Ur(Ky, o);
    }
    function dS() {
      var o = Qy(_c.current);
      return o;
    }
    function _E(o) {
      Qy(Ky.current);
      var r = Qy(_c.current), c = l2(r, o.type);
      r !== c && (Hr(Gh, o, o), Hr(_c, c, o));
    }
    function pS(o) {
      Gh.current === o && (Ur(_c, o), Ur(Gh, o));
    }
    var GB = 0, VE = 1, BE = 1, Kh = 2, Wi = $c(GB);
    function fS(o, r) {
      return (o & r) !== 0;
    }
    function pf(o) {
      return o & VE;
    }
    function mS(o, r) {
      return o & VE | r;
    }
    function KB(o, r) {
      return o | r;
    }
    function Vc(o, r) {
      Hr(Wi, r, o);
    }
    function ff(o) {
      Ur(Wi, o);
    }
    function QB(o, r) {
      var c = o.memoizedState;
      return c !== null ? c.dehydrated !== null : (o.memoizedProps, !0);
    }
    function Xy(o) {
      for (var r = o; r !== null; ) {
        if (r.tag === B) {
          var c = r.memoizedState;
          if (c !== null) {
            var f = c.dehydrated;
            if (f === null || KR(f) || C0(f))
              return r;
          }
        } else if (r.tag === Y && // revealOrder undefined can't be trusted because it don't
        // keep track of whether it suspended or not.
        r.memoizedProps.revealOrder !== void 0) {
          var v = (r.flags & Qt) !== jt;
          if (v)
            return r;
        } else if (r.child !== null) {
          r.child.return = r, r = r.child;
          continue;
        }
        if (r === o)
          return null;
        for (; r.sibling === null; ) {
          if (r.return === null || r.return === o)
            return null;
          r = r.return;
        }
        r.sibling.return = r.return, r = r.sibling;
      }
      return null;
    }
    var Da = (
      /*   */
      0
    ), or = (
      /* */
      1
    ), Ns = (
      /*  */
      2
    ), rr = (
      /*    */
      4
    ), wr = (
      /*   */
      8
    ), hS = [];
    function vS() {
      for (var o = 0; o < hS.length; o++) {
        var r = hS[o];
        r._workInProgressVersionPrimary = null;
      }
      hS.length = 0;
    }
    function XB(o, r) {
      var c = r._getVersion, f = c(r._source);
      o.mutableSourceEagerHydrationData == null ? o.mutableSourceEagerHydrationData = [r, f] : o.mutableSourceEagerHydrationData.push(r, f);
    }
    var Ot = a.ReactCurrentDispatcher, Qh = a.ReactCurrentBatchConfig, gS, mf;
    gS = /* @__PURE__ */ new Set();
    var cd = tt, An = null, ar = null, ir = null, Zy = !1, Xh = !1, Zh = 0, ZB = 0, JB = 25, ot = null, fi = null, Bc = -1, bS = !1;
    function Pn() {
      {
        var o = ot;
        fi === null ? fi = [o] : fi.push(o);
      }
    }
    function St() {
      {
        var o = ot;
        fi !== null && (Bc++, fi[Bc] !== o && ez(o));
      }
    }
    function hf(o) {
      o != null && !Uo(o) && p("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", ot, typeof o);
    }
    function ez(o) {
      {
        var r = on(An);
        if (!gS.has(r) && (gS.add(r), fi !== null)) {
          for (var c = "", f = 30, v = 0; v <= Bc; v++) {
            for (var T = fi[v], D = v === Bc ? o : T, A = v + 1 + ". " + T; A.length < f; )
              A += " ";
            A += D + `
`, c += A;
          }
          p(`React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks

   Previous render            Next render
   ------------------------------------------------------
%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
`, r, c);
        }
      }
    }
    function Wr() {
      throw new Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
    }
    function yS(o, r) {
      if (bS)
        return !1;
      if (r === null)
        return p("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", ot), !1;
      o.length !== r.length && p(`The final argument passed to %s changed size between renders. The order and size of this array must remain constant.

Previous: %s
Incoming: %s`, ot, "[" + r.join(", ") + "]", "[" + o.join(", ") + "]");
      for (var c = 0; c < r.length && c < o.length; c++)
        if (!At(o[c], r[c]))
          return !1;
      return !0;
    }
    function vf(o, r, c, f, v, T) {
      cd = T, An = r, fi = o !== null ? o._debugHookTypes : null, Bc = -1, bS = o !== null && o.type !== r.type, r.memoizedState = null, r.updateQueue = null, r.lanes = tt, o !== null && o.memoizedState !== null ? Ot.current = sO : fi !== null ? Ot.current = iO : Ot.current = aO;
      var D = c(f, v);
      if (Xh) {
        var A = 0;
        do {
          if (Xh = !1, Zh = 0, A >= JB)
            throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
          A += 1, bS = !1, ar = null, ir = null, r.updateQueue = null, Bc = -1, Ot.current = lO, D = c(f, v);
        } while (Xh);
      }
      Ot.current = dC, r._debugHookTypes = fi;
      var j = ar !== null && ar.next !== null;
      if (cd = tt, An = null, ar = null, ir = null, ot = null, fi = null, Bc = -1, o !== null && (o.flags & er) !== (r.flags & er) && // Disable this warning in legacy mode, because legacy Suspense is weird
      // and creates false positives. To make this work in legacy mode, we'd
      // need to mark fibers that commit in an incomplete state, somehow. For
      // now I'll disable the warning that most of the bugs that would trigger
      // it are either exclusive to concurrent mode or exist in both.
      (o.mode & un) !== Ht && p("Internal React error: Expected static flag was missing. Please notify the React team."), Zy = !1, j)
        throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
      return D;
    }
    function gf() {
      var o = Zh !== 0;
      return Zh = 0, o;
    }
    function zE(o, r, c) {
      r.updateQueue = o.updateQueue, (r.mode & xa) !== Ht ? r.flags &= ~(il | _r | no | an) : r.flags &= ~(no | an), o.lanes = hc(o.lanes, c);
    }
    function FE() {
      if (Ot.current = dC, Zy) {
        for (var o = An.memoizedState; o !== null; ) {
          var r = o.queue;
          r !== null && (r.pending = null), o = o.next;
        }
        Zy = !1;
      }
      cd = tt, An = null, ar = null, ir = null, fi = null, Bc = -1, ot = null, eO = !1, Xh = !1, Zh = 0;
    }
    function Ls() {
      var o = {
        memoizedState: null,
        baseState: null,
        baseQueue: null,
        queue: null,
        next: null
      };
      return ir === null ? An.memoizedState = ir = o : ir = ir.next = o, ir;
    }
    function mi() {
      var o;
      if (ar === null) {
        var r = An.alternate;
        r !== null ? o = r.memoizedState : o = null;
      } else
        o = ar.next;
      var c;
      if (ir === null ? c = An.memoizedState : c = ir.next, c !== null)
        ir = c, c = ir.next, ar = o;
      else {
        if (o === null)
          throw new Error("Rendered more hooks than during the previous render.");
        ar = o;
        var f = {
          memoizedState: ar.memoizedState,
          baseState: ar.baseState,
          baseQueue: ar.baseQueue,
          queue: ar.queue,
          next: null
        };
        ir === null ? An.memoizedState = ir = f : ir = ir.next = f;
      }
      return ir;
    }
    function jE() {
      return {
        lastEffect: null,
        stores: null
      };
    }
    function CS(o, r) {
      return typeof r == "function" ? r(o) : r;
    }
    function TS(o, r, c) {
      var f = Ls(), v;
      c !== void 0 ? v = c(r) : v = r, f.memoizedState = f.baseState = v;
      var T = {
        pending: null,
        interleaved: null,
        lanes: tt,
        dispatch: null,
        lastRenderedReducer: o,
        lastRenderedState: v
      };
      f.queue = T;
      var D = T.dispatch = rz.bind(null, An, T);
      return [f.memoizedState, D];
    }
    function xS(o, r, c) {
      var f = mi(), v = f.queue;
      if (v === null)
        throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
      v.lastRenderedReducer = o;
      var T = ar, D = T.baseQueue, A = v.pending;
      if (A !== null) {
        if (D !== null) {
          var j = D.next, G = A.next;
          D.next = G, A.next = j;
        }
        T.baseQueue !== D && p("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React."), T.baseQueue = D = A, v.pending = null;
      }
      if (D !== null) {
        var ee = D.next, ye = T.baseState, he = null, Ve = null, Be = null, Qe = ee;
        do {
          var Pt = Qe.lane;
          if (vl(cd, Pt)) {
            if (Be !== null) {
              var zt = {
                // This update is going to be committed so we never want uncommit
                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                // this will never be skipped by the check above.
                lane: vn,
                action: Qe.action,
                hasEagerState: Qe.hasEagerState,
                eagerState: Qe.eagerState,
                next: null
              };
              Be = Be.next = zt;
            }
            if (Qe.hasEagerState)
              ye = Qe.eagerState;
            else {
              var bn = Qe.action;
              ye = o(ye, bn);
            }
          } else {
            var Ut = {
              lane: Pt,
              action: Qe.action,
              hasEagerState: Qe.hasEagerState,
              eagerState: Qe.eagerState,
              next: null
            };
            Be === null ? (Ve = Be = Ut, he = ye) : Be = Be.next = Ut, An.lanes = sn(An.lanes, Pt), gv(Pt);
          }
          Qe = Qe.next;
        } while (Qe !== null && Qe !== ee);
        Be === null ? he = ye : Be.next = Ve, At(ye, f.memoizedState) || av(), f.memoizedState = ye, f.baseState = he, f.baseQueue = Be, v.lastRenderedState = ye;
      }
      var hn = v.interleaved;
      if (hn !== null) {
        var Me = hn;
        do {
          var Xe = Me.lane;
          An.lanes = sn(An.lanes, Xe), gv(Xe), Me = Me.next;
        } while (Me !== hn);
      } else
        D === null && (v.lanes = tt);
      var $e = v.dispatch;
      return [f.memoizedState, $e];
    }
    function SS(o, r, c) {
      var f = mi(), v = f.queue;
      if (v === null)
        throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
      v.lastRenderedReducer = o;
      var T = v.dispatch, D = v.pending, A = f.memoizedState;
      if (D !== null) {
        v.pending = null;
        var j = D.next, G = j;
        do {
          var ee = G.action;
          A = o(A, ee), G = G.next;
        } while (G !== j);
        At(A, f.memoizedState) || av(), f.memoizedState = A, f.baseQueue === null && (f.baseState = A), v.lastRenderedState = A;
      }
      return [A, T];
    }
    function uue(o, r, c) {
    }
    function due(o, r, c) {
    }
    function kS(o, r, c) {
      var f = An, v = Ls(), T, D = kr();
      if (D) {
        if (c === void 0)
          throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
        T = c(), mf || T !== c() && (p("The result of getServerSnapshot should be cached to avoid an infinite loop"), mf = !0);
      } else {
        if (T = r(), !mf) {
          var A = r();
          At(T, A) || (p("The result of getSnapshot should be cached to avoid an infinite loop"), mf = !0);
        }
        var j = PC();
        if (j === null)
          throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        zu(j, cd) || UE(f, r, T);
      }
      v.memoizedState = T;
      var G = {
        value: T,
        getSnapshot: r
      };
      return v.queue = G, oC(WE.bind(null, f, G, o), [o]), f.flags |= no, Jh(or | wr, HE.bind(null, f, G, T, r), void 0, null), T;
    }
    function Jy(o, r, c) {
      var f = An, v = mi(), T = r();
      if (!mf) {
        var D = r();
        At(T, D) || (p("The result of getSnapshot should be cached to avoid an infinite loop"), mf = !0);
      }
      var A = v.memoizedState, j = !At(A, T);
      j && (v.memoizedState = T, av());
      var G = v.queue;
      if (tv(WE.bind(null, f, G, o), [o]), G.getSnapshot !== r || j || // Check if the susbcribe function changed. We can save some memory by
      // checking whether we scheduled a subscription effect above.
      ir !== null && ir.memoizedState.tag & or) {
        f.flags |= no, Jh(or | wr, HE.bind(null, f, G, T, r), void 0, null);
        var ee = PC();
        if (ee === null)
          throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        zu(ee, cd) || UE(f, r, T);
      }
      return T;
    }
    function UE(o, r, c) {
      o.flags |= Mu;
      var f = {
        getSnapshot: r,
        value: c
      }, v = An.updateQueue;
      if (v === null)
        v = jE(), An.updateQueue = v, v.stores = [f];
      else {
        var T = v.stores;
        T === null ? v.stores = [f] : T.push(f);
      }
    }
    function HE(o, r, c, f) {
      r.value = c, r.getSnapshot = f, YE(r) && qE(o);
    }
    function WE(o, r, c) {
      var f = function() {
        YE(r) && qE(o);
      };
      return c(f);
    }
    function YE(o) {
      var r = o.getSnapshot, c = o.value;
      try {
        var f = r();
        return !At(c, f);
      } catch {
        return !0;
      }
    }
    function qE(o) {
      var r = Pa(o, Gt);
      r !== null && ur(r, o, Gt, Hn);
    }
    function eC(o) {
      var r = Ls();
      typeof o == "function" && (o = o()), r.memoizedState = r.baseState = o;
      var c = {
        pending: null,
        interleaved: null,
        lanes: tt,
        dispatch: null,
        lastRenderedReducer: CS,
        lastRenderedState: o
      };
      r.queue = c;
      var f = c.dispatch = az.bind(null, An, c);
      return [r.memoizedState, f];
    }
    function wS(o) {
      return xS(CS);
    }
    function RS(o) {
      return SS(CS);
    }
    function Jh(o, r, c, f) {
      var v = {
        tag: o,
        create: r,
        destroy: c,
        deps: f,
        // Circular
        next: null
      }, T = An.updateQueue;
      if (T === null)
        T = jE(), An.updateQueue = T, T.lastEffect = v.next = v;
      else {
        var D = T.lastEffect;
        if (D === null)
          T.lastEffect = v.next = v;
        else {
          var A = D.next;
          D.next = v, v.next = A, T.lastEffect = v;
        }
      }
      return v;
    }
    function ES(o) {
      var r = Ls();
      {
        var c = {
          current: o
        };
        return r.memoizedState = c, c;
      }
    }
    function tC(o) {
      var r = mi();
      return r.memoizedState;
    }
    function ev(o, r, c, f) {
      var v = Ls(), T = f === void 0 ? null : f;
      An.flags |= o, v.memoizedState = Jh(or | r, c, void 0, T);
    }
    function nC(o, r, c, f) {
      var v = mi(), T = f === void 0 ? null : f, D = void 0;
      if (ar !== null) {
        var A = ar.memoizedState;
        if (D = A.destroy, T !== null) {
          var j = A.deps;
          if (yS(T, j)) {
            v.memoizedState = Jh(r, c, D, T);
            return;
          }
        }
      }
      An.flags |= o, v.memoizedState = Jh(or | r, c, D, T);
    }
    function oC(o, r) {
      return (An.mode & xa) !== Ht ? ev(il | no | vs, wr, o, r) : ev(no | vs, wr, o, r);
    }
    function tv(o, r) {
      return nC(no, wr, o, r);
    }
    function OS(o, r) {
      return ev(an, Ns, o, r);
    }
    function rC(o, r) {
      return nC(an, Ns, o, r);
    }
    function PS(o, r) {
      var c = an;
      return c |= Ar, (An.mode & xa) !== Ht && (c |= _r), ev(c, rr, o, r);
    }
    function aC(o, r) {
      return nC(an, rr, o, r);
    }
    function GE(o, r) {
      if (typeof r == "function") {
        var c = r, f = o();
        return c(f), function() {
          c(null);
        };
      } else if (r != null) {
        var v = r;
        v.hasOwnProperty("current") || p("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(v).join(", ") + "}");
        var T = o();
        return v.current = T, function() {
          v.current = null;
        };
      }
    }
    function DS(o, r, c) {
      typeof r != "function" && p("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", r !== null ? typeof r : "null");
      var f = c != null ? c.concat([o]) : null, v = an;
      return v |= Ar, (An.mode & xa) !== Ht && (v |= _r), ev(v, rr, GE.bind(null, r, o), f);
    }
    function iC(o, r, c) {
      typeof r != "function" && p("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", r !== null ? typeof r : "null");
      var f = c != null ? c.concat([o]) : null;
      return nC(an, rr, GE.bind(null, r, o), f);
    }
    function tz(o, r) {
    }
    var sC = tz;
    function MS(o, r) {
      var c = Ls(), f = r === void 0 ? null : r;
      return c.memoizedState = [o, f], o;
    }
    function lC(o, r) {
      var c = mi(), f = r === void 0 ? null : r, v = c.memoizedState;
      if (v !== null && f !== null) {
        var T = v[1];
        if (yS(f, T))
          return v[0];
      }
      return c.memoizedState = [o, f], o;
    }
    function $S(o, r) {
      var c = Ls(), f = r === void 0 ? null : r, v = o();
      return c.memoizedState = [v, f], v;
    }
    function cC(o, r) {
      var c = mi(), f = r === void 0 ? null : r, v = c.memoizedState;
      if (v !== null && f !== null) {
        var T = v[1];
        if (yS(f, T))
          return v[0];
      }
      var D = o();
      return c.memoizedState = [D, f], D;
    }
    function NS(o) {
      var r = Ls();
      return r.memoizedState = o, o;
    }
    function KE(o) {
      var r = mi(), c = ar, f = c.memoizedState;
      return XE(r, f, o);
    }
    function QE(o) {
      var r = mi();
      if (ar === null)
        return r.memoizedState = o, o;
      var c = ar.memoizedState;
      return XE(r, c, o);
    }
    function XE(o, r, c) {
      var f = !Bx(cd);
      if (f) {
        if (!At(c, r)) {
          var v = nh();
          An.lanes = sn(An.lanes, v), gv(v), o.baseState = !0;
        }
        return r;
      } else
        return o.baseState && (o.baseState = !1, av()), o.memoizedState = c, c;
    }
    function nz(o, r, c) {
      var f = ka();
      Lo(gr(f, nr)), o(!0);
      var v = Qh.transition;
      Qh.transition = {};
      var T = Qh.transition;
      Qh.transition._updatedFibers = /* @__PURE__ */ new Set();
      try {
        o(!1), r();
      } finally {
        if (Lo(f), Qh.transition = v, v === null && T._updatedFibers) {
          var D = T._updatedFibers.size;
          D > 10 && d("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."), T._updatedFibers.clear();
        }
      }
    }
    function LS() {
      var o = eC(!1), r = o[0], c = o[1], f = nz.bind(null, c), v = Ls();
      return v.memoizedState = f, [r, f];
    }
    function ZE() {
      var o = wS(), r = o[0], c = mi(), f = c.memoizedState;
      return [r, f];
    }
    function JE() {
      var o = RS(), r = o[0], c = mi(), f = c.memoizedState;
      return [r, f];
    }
    var eO = !1;
    function oz() {
      return eO;
    }
    function IS() {
      var o = Ls(), r = PC(), c = r.identifierPrefix, f;
      if (kr()) {
        var v = gB();
        f = ":" + c + "R" + v;
        var T = Zh++;
        T > 0 && (f += "H" + T.toString(32)), f += ":";
      } else {
        var D = ZB++;
        f = ":" + c + "r" + D.toString(32) + ":";
      }
      return o.memoizedState = f, f;
    }
    function uC() {
      var o = mi(), r = o.memoizedState;
      return r;
    }
    function rz(o, r, c) {
      typeof arguments[3] == "function" && p("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
      var f = Hc(o), v = {
        lane: f,
        action: c,
        hasEagerState: !1,
        eagerState: null,
        next: null
      };
      if (tO(o))
        nO(r, v);
      else {
        var T = yE(o, r, v, f);
        if (T !== null) {
          var D = la();
          ur(T, o, f, D), oO(T, r, f);
        }
      }
      rO(o, f);
    }
    function az(o, r, c) {
      typeof arguments[3] == "function" && p("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
      var f = Hc(o), v = {
        lane: f,
        action: c,
        hasEagerState: !1,
        eagerState: null,
        next: null
      };
      if (tO(o))
        nO(r, v);
      else {
        var T = o.alternate;
        if (o.lanes === tt && (T === null || T.lanes === tt)) {
          var D = r.lastRenderedReducer;
          if (D !== null) {
            var A;
            A = Ot.current, Ot.current = Yi;
            try {
              var j = r.lastRenderedState, G = D(j, c);
              if (v.hasEagerState = !0, v.eagerState = G, At(G, j)) {
                _B(o, r, v, f);
                return;
              }
            } catch {
            } finally {
              Ot.current = A;
            }
          }
        }
        var ee = yE(o, r, v, f);
        if (ee !== null) {
          var ye = la();
          ur(ee, o, f, ye), oO(ee, r, f);
        }
      }
      rO(o, f);
    }
    function tO(o) {
      var r = o.alternate;
      return o === An || r !== null && r === An;
    }
    function nO(o, r) {
      Xh = Zy = !0;
      var c = o.pending;
      c === null ? r.next = r : (r.next = c.next, c.next = r), o.pending = r;
    }
    function oO(o, r, c) {
      if (th(c)) {
        var f = r.lanes;
        f = oh(f, o.pendingLanes);
        var v = sn(f, c);
        r.lanes = v, vc(o, v);
      }
    }
    function rO(o, r, c) {
      xs(o, r);
    }
    var dC = {
      readContext: Qo,
      useCallback: Wr,
      useContext: Wr,
      useEffect: Wr,
      useImperativeHandle: Wr,
      useInsertionEffect: Wr,
      useLayoutEffect: Wr,
      useMemo: Wr,
      useReducer: Wr,
      useRef: Wr,
      useState: Wr,
      useDebugValue: Wr,
      useDeferredValue: Wr,
      useTransition: Wr,
      useMutableSource: Wr,
      useSyncExternalStore: Wr,
      useId: Wr,
      unstable_isNewReconciler: K
    }, aO = null, iO = null, sO = null, lO = null, Is = null, Yi = null, pC = null;
    {
      var AS = function() {
        p("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
      }, Zt = function() {
        p("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
      };
      aO = {
        readContext: function(o) {
          return Qo(o);
        },
        useCallback: function(o, r) {
          return ot = "useCallback", Pn(), hf(r), MS(o, r);
        },
        useContext: function(o) {
          return ot = "useContext", Pn(), Qo(o);
        },
        useEffect: function(o, r) {
          return ot = "useEffect", Pn(), hf(r), oC(o, r);
        },
        useImperativeHandle: function(o, r, c) {
          return ot = "useImperativeHandle", Pn(), hf(c), DS(o, r, c);
        },
        useInsertionEffect: function(o, r) {
          return ot = "useInsertionEffect", Pn(), hf(r), OS(o, r);
        },
        useLayoutEffect: function(o, r) {
          return ot = "useLayoutEffect", Pn(), hf(r), PS(o, r);
        },
        useMemo: function(o, r) {
          ot = "useMemo", Pn(), hf(r);
          var c = Ot.current;
          Ot.current = Is;
          try {
            return $S(o, r);
          } finally {
            Ot.current = c;
          }
        },
        useReducer: function(o, r, c) {
          ot = "useReducer", Pn();
          var f = Ot.current;
          Ot.current = Is;
          try {
            return TS(o, r, c);
          } finally {
            Ot.current = f;
          }
        },
        useRef: function(o) {
          return ot = "useRef", Pn(), ES(o);
        },
        useState: function(o) {
          ot = "useState", Pn();
          var r = Ot.current;
          Ot.current = Is;
          try {
            return eC(o);
          } finally {
            Ot.current = r;
          }
        },
        useDebugValue: function(o, r) {
          return ot = "useDebugValue", Pn(), void 0;
        },
        useDeferredValue: function(o) {
          return ot = "useDeferredValue", Pn(), NS(o);
        },
        useTransition: function() {
          return ot = "useTransition", Pn(), LS();
        },
        useMutableSource: function(o, r, c) {
          return ot = "useMutableSource", Pn(), void 0;
        },
        useSyncExternalStore: function(o, r, c) {
          return ot = "useSyncExternalStore", Pn(), kS(o, r, c);
        },
        useId: function() {
          return ot = "useId", Pn(), IS();
        },
        unstable_isNewReconciler: K
      }, iO = {
        readContext: function(o) {
          return Qo(o);
        },
        useCallback: function(o, r) {
          return ot = "useCallback", St(), MS(o, r);
        },
        useContext: function(o) {
          return ot = "useContext", St(), Qo(o);
        },
        useEffect: function(o, r) {
          return ot = "useEffect", St(), oC(o, r);
        },
        useImperativeHandle: function(o, r, c) {
          return ot = "useImperativeHandle", St(), DS(o, r, c);
        },
        useInsertionEffect: function(o, r) {
          return ot = "useInsertionEffect", St(), OS(o, r);
        },
        useLayoutEffect: function(o, r) {
          return ot = "useLayoutEffect", St(), PS(o, r);
        },
        useMemo: function(o, r) {
          ot = "useMemo", St();
          var c = Ot.current;
          Ot.current = Is;
          try {
            return $S(o, r);
          } finally {
            Ot.current = c;
          }
        },
        useReducer: function(o, r, c) {
          ot = "useReducer", St();
          var f = Ot.current;
          Ot.current = Is;
          try {
            return TS(o, r, c);
          } finally {
            Ot.current = f;
          }
        },
        useRef: function(o) {
          return ot = "useRef", St(), ES(o);
        },
        useState: function(o) {
          ot = "useState", St();
          var r = Ot.current;
          Ot.current = Is;
          try {
            return eC(o);
          } finally {
            Ot.current = r;
          }
        },
        useDebugValue: function(o, r) {
          return ot = "useDebugValue", St(), void 0;
        },
        useDeferredValue: function(o) {
          return ot = "useDeferredValue", St(), NS(o);
        },
        useTransition: function() {
          return ot = "useTransition", St(), LS();
        },
        useMutableSource: function(o, r, c) {
          return ot = "useMutableSource", St(), void 0;
        },
        useSyncExternalStore: function(o, r, c) {
          return ot = "useSyncExternalStore", St(), kS(o, r, c);
        },
        useId: function() {
          return ot = "useId", St(), IS();
        },
        unstable_isNewReconciler: K
      }, sO = {
        readContext: function(o) {
          return Qo(o);
        },
        useCallback: function(o, r) {
          return ot = "useCallback", St(), lC(o, r);
        },
        useContext: function(o) {
          return ot = "useContext", St(), Qo(o);
        },
        useEffect: function(o, r) {
          return ot = "useEffect", St(), tv(o, r);
        },
        useImperativeHandle: function(o, r, c) {
          return ot = "useImperativeHandle", St(), iC(o, r, c);
        },
        useInsertionEffect: function(o, r) {
          return ot = "useInsertionEffect", St(), rC(o, r);
        },
        useLayoutEffect: function(o, r) {
          return ot = "useLayoutEffect", St(), aC(o, r);
        },
        useMemo: function(o, r) {
          ot = "useMemo", St();
          var c = Ot.current;
          Ot.current = Yi;
          try {
            return cC(o, r);
          } finally {
            Ot.current = c;
          }
        },
        useReducer: function(o, r, c) {
          ot = "useReducer", St();
          var f = Ot.current;
          Ot.current = Yi;
          try {
            return xS(o, r, c);
          } finally {
            Ot.current = f;
          }
        },
        useRef: function(o) {
          return ot = "useRef", St(), tC();
        },
        useState: function(o) {
          ot = "useState", St();
          var r = Ot.current;
          Ot.current = Yi;
          try {
            return wS(o);
          } finally {
            Ot.current = r;
          }
        },
        useDebugValue: function(o, r) {
          return ot = "useDebugValue", St(), sC();
        },
        useDeferredValue: function(o) {
          return ot = "useDeferredValue", St(), KE(o);
        },
        useTransition: function() {
          return ot = "useTransition", St(), ZE();
        },
        useMutableSource: function(o, r, c) {
          return ot = "useMutableSource", St(), void 0;
        },
        useSyncExternalStore: function(o, r, c) {
          return ot = "useSyncExternalStore", St(), Jy(o, r);
        },
        useId: function() {
          return ot = "useId", St(), uC();
        },
        unstable_isNewReconciler: K
      }, lO = {
        readContext: function(o) {
          return Qo(o);
        },
        useCallback: function(o, r) {
          return ot = "useCallback", St(), lC(o, r);
        },
        useContext: function(o) {
          return ot = "useContext", St(), Qo(o);
        },
        useEffect: function(o, r) {
          return ot = "useEffect", St(), tv(o, r);
        },
        useImperativeHandle: function(o, r, c) {
          return ot = "useImperativeHandle", St(), iC(o, r, c);
        },
        useInsertionEffect: function(o, r) {
          return ot = "useInsertionEffect", St(), rC(o, r);
        },
        useLayoutEffect: function(o, r) {
          return ot = "useLayoutEffect", St(), aC(o, r);
        },
        useMemo: function(o, r) {
          ot = "useMemo", St();
          var c = Ot.current;
          Ot.current = pC;
          try {
            return cC(o, r);
          } finally {
            Ot.current = c;
          }
        },
        useReducer: function(o, r, c) {
          ot = "useReducer", St();
          var f = Ot.current;
          Ot.current = pC;
          try {
            return SS(o, r, c);
          } finally {
            Ot.current = f;
          }
        },
        useRef: function(o) {
          return ot = "useRef", St(), tC();
        },
        useState: function(o) {
          ot = "useState", St();
          var r = Ot.current;
          Ot.current = pC;
          try {
            return RS(o);
          } finally {
            Ot.current = r;
          }
        },
        useDebugValue: function(o, r) {
          return ot = "useDebugValue", St(), sC();
        },
        useDeferredValue: function(o) {
          return ot = "useDeferredValue", St(), QE(o);
        },
        useTransition: function() {
          return ot = "useTransition", St(), JE();
        },
        useMutableSource: function(o, r, c) {
          return ot = "useMutableSource", St(), void 0;
        },
        useSyncExternalStore: function(o, r, c) {
          return ot = "useSyncExternalStore", St(), Jy(o, r);
        },
        useId: function() {
          return ot = "useId", St(), uC();
        },
        unstable_isNewReconciler: K
      }, Is = {
        readContext: function(o) {
          return AS(), Qo(o);
        },
        useCallback: function(o, r) {
          return ot = "useCallback", Zt(), Pn(), MS(o, r);
        },
        useContext: function(o) {
          return ot = "useContext", Zt(), Pn(), Qo(o);
        },
        useEffect: function(o, r) {
          return ot = "useEffect", Zt(), Pn(), oC(o, r);
        },
        useImperativeHandle: function(o, r, c) {
          return ot = "useImperativeHandle", Zt(), Pn(), DS(o, r, c);
        },
        useInsertionEffect: function(o, r) {
          return ot = "useInsertionEffect", Zt(), Pn(), OS(o, r);
        },
        useLayoutEffect: function(o, r) {
          return ot = "useLayoutEffect", Zt(), Pn(), PS(o, r);
        },
        useMemo: function(o, r) {
          ot = "useMemo", Zt(), Pn();
          var c = Ot.current;
          Ot.current = Is;
          try {
            return $S(o, r);
          } finally {
            Ot.current = c;
          }
        },
        useReducer: function(o, r, c) {
          ot = "useReducer", Zt(), Pn();
          var f = Ot.current;
          Ot.current = Is;
          try {
            return TS(o, r, c);
          } finally {
            Ot.current = f;
          }
        },
        useRef: function(o) {
          return ot = "useRef", Zt(), Pn(), ES(o);
        },
        useState: function(o) {
          ot = "useState", Zt(), Pn();
          var r = Ot.current;
          Ot.current = Is;
          try {
            return eC(o);
          } finally {
            Ot.current = r;
          }
        },
        useDebugValue: function(o, r) {
          return ot = "useDebugValue", Zt(), Pn(), void 0;
        },
        useDeferredValue: function(o) {
          return ot = "useDeferredValue", Zt(), Pn(), NS(o);
        },
        useTransition: function() {
          return ot = "useTransition", Zt(), Pn(), LS();
        },
        useMutableSource: function(o, r, c) {
          return ot = "useMutableSource", Zt(), Pn(), void 0;
        },
        useSyncExternalStore: function(o, r, c) {
          return ot = "useSyncExternalStore", Zt(), Pn(), kS(o, r, c);
        },
        useId: function() {
          return ot = "useId", Zt(), Pn(), IS();
        },
        unstable_isNewReconciler: K
      }, Yi = {
        readContext: function(o) {
          return AS(), Qo(o);
        },
        useCallback: function(o, r) {
          return ot = "useCallback", Zt(), St(), lC(o, r);
        },
        useContext: function(o) {
          return ot = "useContext", Zt(), St(), Qo(o);
        },
        useEffect: function(o, r) {
          return ot = "useEffect", Zt(), St(), tv(o, r);
        },
        useImperativeHandle: function(o, r, c) {
          return ot = "useImperativeHandle", Zt(), St(), iC(o, r, c);
        },
        useInsertionEffect: function(o, r) {
          return ot = "useInsertionEffect", Zt(), St(), rC(o, r);
        },
        useLayoutEffect: function(o, r) {
          return ot = "useLayoutEffect", Zt(), St(), aC(o, r);
        },
        useMemo: function(o, r) {
          ot = "useMemo", Zt(), St();
          var c = Ot.current;
          Ot.current = Yi;
          try {
            return cC(o, r);
          } finally {
            Ot.current = c;
          }
        },
        useReducer: function(o, r, c) {
          ot = "useReducer", Zt(), St();
          var f = Ot.current;
          Ot.current = Yi;
          try {
            return xS(o, r, c);
          } finally {
            Ot.current = f;
          }
        },
        useRef: function(o) {
          return ot = "useRef", Zt(), St(), tC();
        },
        useState: function(o) {
          ot = "useState", Zt(), St();
          var r = Ot.current;
          Ot.current = Yi;
          try {
            return wS(o);
          } finally {
            Ot.current = r;
          }
        },
        useDebugValue: function(o, r) {
          return ot = "useDebugValue", Zt(), St(), sC();
        },
        useDeferredValue: function(o) {
          return ot = "useDeferredValue", Zt(), St(), KE(o);
        },
        useTransition: function() {
          return ot = "useTransition", Zt(), St(), ZE();
        },
        useMutableSource: function(o, r, c) {
          return ot = "useMutableSource", Zt(), St(), void 0;
        },
        useSyncExternalStore: function(o, r, c) {
          return ot = "useSyncExternalStore", Zt(), St(), Jy(o, r);
        },
        useId: function() {
          return ot = "useId", Zt(), St(), uC();
        },
        unstable_isNewReconciler: K
      }, pC = {
        readContext: function(o) {
          return AS(), Qo(o);
        },
        useCallback: function(o, r) {
          return ot = "useCallback", Zt(), St(), lC(o, r);
        },
        useContext: function(o) {
          return ot = "useContext", Zt(), St(), Qo(o);
        },
        useEffect: function(o, r) {
          return ot = "useEffect", Zt(), St(), tv(o, r);
        },
        useImperativeHandle: function(o, r, c) {
          return ot = "useImperativeHandle", Zt(), St(), iC(o, r, c);
        },
        useInsertionEffect: function(o, r) {
          return ot = "useInsertionEffect", Zt(), St(), rC(o, r);
        },
        useLayoutEffect: function(o, r) {
          return ot = "useLayoutEffect", Zt(), St(), aC(o, r);
        },
        useMemo: function(o, r) {
          ot = "useMemo", Zt(), St();
          var c = Ot.current;
          Ot.current = Yi;
          try {
            return cC(o, r);
          } finally {
            Ot.current = c;
          }
        },
        useReducer: function(o, r, c) {
          ot = "useReducer", Zt(), St();
          var f = Ot.current;
          Ot.current = Yi;
          try {
            return SS(o, r, c);
          } finally {
            Ot.current = f;
          }
        },
        useRef: function(o) {
          return ot = "useRef", Zt(), St(), tC();
        },
        useState: function(o) {
          ot = "useState", Zt(), St();
          var r = Ot.current;
          Ot.current = Yi;
          try {
            return RS(o);
          } finally {
            Ot.current = r;
          }
        },
        useDebugValue: function(o, r) {
          return ot = "useDebugValue", Zt(), St(), sC();
        },
        useDeferredValue: function(o) {
          return ot = "useDeferredValue", Zt(), St(), QE(o);
        },
        useTransition: function() {
          return ot = "useTransition", Zt(), St(), JE();
        },
        useMutableSource: function(o, r, c) {
          return ot = "useMutableSource", Zt(), St(), void 0;
        },
        useSyncExternalStore: function(o, r, c) {
          return ot = "useSyncExternalStore", Zt(), St(), Jy(o, r);
        },
        useId: function() {
          return ot = "useId", Zt(), St(), uC();
        },
        unstable_isNewReconciler: K
      };
    }
    var zc = n.unstable_now, cO = 0, fC = -1, nv = -1, mC = -1, _S = !1, hC = !1;
    function uO() {
      return _S;
    }
    function iz() {
      hC = !0;
    }
    function sz() {
      _S = !1, hC = !1;
    }
    function lz() {
      _S = hC, hC = !1;
    }
    function dO() {
      return cO;
    }
    function pO() {
      cO = zc();
    }
    function VS(o) {
      nv = zc(), o.actualStartTime < 0 && (o.actualStartTime = zc());
    }
    function fO(o) {
      nv = -1;
    }
    function vC(o, r) {
      if (nv >= 0) {
        var c = zc() - nv;
        o.actualDuration += c, r && (o.selfBaseDuration = c), nv = -1;
      }
    }
    function As(o) {
      if (fC >= 0) {
        var r = zc() - fC;
        fC = -1;
        for (var c = o.return; c !== null; ) {
          switch (c.tag) {
            case S:
              var f = c.stateNode;
              f.effectDuration += r;
              return;
            case z:
              var v = c.stateNode;
              v.effectDuration += r;
              return;
          }
          c = c.return;
        }
      }
    }
    function BS(o) {
      if (mC >= 0) {
        var r = zc() - mC;
        mC = -1;
        for (var c = o.return; c !== null; ) {
          switch (c.tag) {
            case S:
              var f = c.stateNode;
              f !== null && (f.passiveEffectDuration += r);
              return;
            case z:
              var v = c.stateNode;
              v !== null && (v.passiveEffectDuration += r);
              return;
          }
          c = c.return;
        }
      }
    }
    function _s() {
      fC = zc();
    }
    function zS() {
      mC = zc();
    }
    function FS(o) {
      for (var r = o.child; r; )
        o.actualDuration += r.actualDuration, r = r.sibling;
    }
    function ud(o, r) {
      return {
        value: o,
        source: r,
        stack: dm(r),
        digest: null
      };
    }
    function jS(o, r, c) {
      return {
        value: o,
        source: null,
        stack: c ?? null,
        digest: r ?? null
      };
    }
    function cz(o, r) {
      return !0;
    }
    function US(o, r) {
      try {
        var c = cz(o, r);
        if (c === !1)
          return;
        var f = r.value, v = r.source, T = r.stack, D = T !== null ? T : "";
        if (f != null && f._suppressLogging) {
          if (o.tag === b)
            return;
          console.error(f);
        }
        var A = v ? on(v) : null, j = A ? "The above error occurred in the <" + A + "> component:" : "The above error occurred in one of your React components:", G;
        if (o.tag === S)
          G = `Consider adding an error boundary to your tree to customize error handling behavior.
Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.`;
        else {
          var ee = on(o) || "Anonymous";
          G = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + ee + ".");
        }
        var ye = j + `
` + D + `

` + ("" + G);
        console.error(ye);
      } catch (he) {
        setTimeout(function() {
          throw he;
        });
      }
    }
    var uz = typeof WeakMap == "function" ? WeakMap : Map;
    function mO(o, r, c) {
      var f = $l(Hn, c);
      f.tag = U0, f.payload = {
        element: null
      };
      var v = r.value;
      return f.callback = function() {
        nj(v), US(o, r);
      }, f;
    }
    function HS(o, r, c) {
      var f = $l(Hn, c);
      f.tag = U0;
      var v = o.type.getDerivedStateFromError;
      if (typeof v == "function") {
        var T = r.value;
        f.payload = function() {
          return v(T);
        }, f.callback = function() {
          wP(o), US(o, r);
        };
      }
      var D = o.stateNode;
      return D !== null && typeof D.componentDidCatch == "function" && (f.callback = function() {
        wP(o), US(o, r), typeof v != "function" && ej(this);
        var j = r.value, G = r.stack;
        this.componentDidCatch(j, {
          componentStack: G !== null ? G : ""
        }), typeof v != "function" && (jr(o.lanes, Gt) || p("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", on(o) || "Unknown"));
      }), f;
    }
    function hO(o, r, c) {
      var f = o.pingCache, v;
      if (f === null ? (f = o.pingCache = new uz(), v = /* @__PURE__ */ new Set(), f.set(r, v)) : (v = f.get(r), v === void 0 && (v = /* @__PURE__ */ new Set(), f.set(r, v))), !v.has(c)) {
        v.add(c);
        var T = oj.bind(null, o, r, c);
        tr && bv(o, c), r.then(T, T);
      }
    }
    function dz(o, r, c, f) {
      var v = o.updateQueue;
      if (v === null) {
        var T = /* @__PURE__ */ new Set();
        T.add(c), o.updateQueue = T;
      } else
        v.add(c);
    }
    function pz(o, r) {
      var c = o.tag;
      if ((o.mode & un) === Ht && (c === g || c === I || c === F)) {
        var f = o.alternate;
        f ? (o.updateQueue = f.updateQueue, o.memoizedState = f.memoizedState, o.lanes = f.lanes) : (o.updateQueue = null, o.memoizedState = null);
      }
    }
    function vO(o) {
      var r = o;
      do {
        if (r.tag === B && QB(r))
          return r;
        r = r.return;
      } while (r !== null);
      return null;
    }
    function gO(o, r, c, f, v) {
      if ((o.mode & un) === Ht) {
        if (o === r)
          o.flags |= Wo;
        else {
          if (o.flags |= Qt, c.flags |= $u, c.flags &= ~(tp | ea), c.tag === b) {
            var T = c.alternate;
            if (T === null)
              c.tag = U;
            else {
              var D = $l(Hn, Gt);
              D.tag = zy, Ac(c, D, Gt);
            }
          }
          c.lanes = sn(c.lanes, Gt);
        }
        return o;
      }
      return o.flags |= Wo, o.lanes = v, o;
    }
    function fz(o, r, c, f, v) {
      if (c.flags |= ea, tr && bv(o, v), f !== null && typeof f == "object" && typeof f.then == "function") {
        var T = f;
        pz(c), kr() && c.mode & un && sE();
        var D = vO(r);
        if (D !== null) {
          D.flags &= ~po, gO(D, r, c, o, v), D.mode & un && hO(o, T, v), dz(D, o, T);
          return;
        } else {
          if (!mc(v)) {
            hO(o, T, v), Sk();
            return;
          }
          var A = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
          f = A;
        }
      } else if (kr() && c.mode & un) {
        sE();
        var j = vO(r);
        if (j !== null) {
          (j.flags & Wo) === jt && (j.flags |= po), gO(j, r, c, o, v), A0(ud(f, c));
          return;
        }
      }
      f = ud(f, c), YF(f);
      var G = r;
      do {
        switch (G.tag) {
          case S: {
            var ee = f;
            G.flags |= Wo;
            var ye = No(v);
            G.lanes = sn(G.lanes, ye);
            var he = mO(G, ee, ye);
            Y0(G, he);
            return;
          }
          case b:
            var Ve = f, Be = G.type, Qe = G.stateNode;
            if ((G.flags & Qt) === jt && (typeof Be.getDerivedStateFromError == "function" || Qe !== null && typeof Qe.componentDidCatch == "function" && !vP(Qe))) {
              G.flags |= Wo;
              var Pt = No(v);
              G.lanes = sn(G.lanes, Pt);
              var Ut = HS(G, Ve, Pt);
              Y0(G, Ut);
              return;
            }
            break;
        }
        G = G.return;
      } while (G !== null);
    }
    function mz() {
      return null;
    }
    var ov = a.ReactCurrentOwner, qi = !1, WS, rv, YS, qS, GS, dd, KS, gC;
    WS = {}, rv = {}, YS = {}, qS = {}, GS = {}, dd = !1, KS = {}, gC = {};
    function ia(o, r, c, f) {
      o === null ? r.child = IE(r, null, c, f) : r.child = uf(r, o.child, c, f);
    }
    function hz(o, r, c, f) {
      r.child = uf(r, o.child, null, f), r.child = uf(r, null, c, f);
    }
    function bO(o, r, c, f, v) {
      if (r.type !== r.elementType) {
        var T = c.propTypes;
        T && Fi(
          T,
          f,
          // Resolved props
          "prop",
          jn(c)
        );
      }
      var D = c.render, A = r.ref, j, G;
      cf(r, v), Ts(r);
      {
        if (ov.current = r, za(!0), j = vf(o, r, D, f, A, v), G = gf(), r.mode & so) {
          $o(!0);
          try {
            j = vf(o, r, D, f, A, v), G = gf();
          } finally {
            $o(!1);
          }
        }
        za(!1);
      }
      return sl(), o !== null && !qi ? (zE(o, r, v), Nl(o, r, v)) : (kr() && G && D0(r), r.flags |= ms, ia(o, r, j, v), r.child);
    }
    function yO(o, r, c, f, v) {
      if (o === null) {
        var T = c.type;
        if (Cj(T) && c.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
        c.defaultProps === void 0) {
          var D = T;
          return D = wf(T), r.tag = F, r.type = D, ZS(r, T), CO(o, r, D, f, v);
        }
        {
          var A = T.propTypes;
          A && Fi(
            A,
            f,
            // Resolved props
            "prop",
            jn(T)
          );
        }
        var j = Lk(c.type, null, f, r, r.mode, v);
        return j.ref = r.ref, j.return = r, r.child = j, j;
      }
      {
        var G = c.type, ee = G.propTypes;
        ee && Fi(
          ee,
          f,
          // Resolved props
          "prop",
          jn(G)
        );
      }
      var ye = o.child, he = rk(o, v);
      if (!he) {
        var Ve = ye.memoizedProps, Be = c.compare;
        if (Be = Be !== null ? Be : Ft, Be(Ve, f) && o.ref === r.ref)
          return Nl(o, r, v);
      }
      r.flags |= ms;
      var Qe = vd(ye, f);
      return Qe.ref = r.ref, Qe.return = r, r.child = Qe, Qe;
    }
    function CO(o, r, c, f, v) {
      if (r.type !== r.elementType) {
        var T = r.elementType;
        if (T.$$typeof === Tt) {
          var D = T, A = D._payload, j = D._init;
          try {
            T = j(A);
          } catch {
            T = null;
          }
          var G = T && T.propTypes;
          G && Fi(
            G,
            f,
            // Resolved (SimpleMemoComponent has no defaultProps)
            "prop",
            jn(T)
          );
        }
      }
      if (o !== null) {
        var ee = o.memoizedProps;
        if (Ft(ee, f) && o.ref === r.ref && // Prevent bailout if the implementation changed due to hot reload.
        r.type === o.type)
          if (qi = !1, r.pendingProps = f = ee, rk(o, v))
            (o.flags & $u) !== jt && (qi = !0);
          else
            return r.lanes = o.lanes, Nl(o, r, v);
      }
      return QS(o, r, c, f, v);
    }
    function TO(o, r, c) {
      var f = r.pendingProps, v = f.children, T = o !== null ? o.memoizedState : null;
      if (f.mode === "hidden" || se)
        if ((r.mode & un) === Ht) {
          var D = {
            baseLanes: tt,
            cachePool: null,
            transitions: null
          };
          r.memoizedState = D, DC(r, c);
        } else if (jr(c, Fr)) {
          var ye = {
            baseLanes: tt,
            cachePool: null,
            transitions: null
          };
          r.memoizedState = ye;
          var he = T !== null ? T.baseLanes : c;
          DC(r, he);
        } else {
          var A = null, j;
          if (T !== null) {
            var G = T.baseLanes;
            j = sn(G, c);
          } else
            j = c;
          r.lanes = r.childLanes = Fr;
          var ee = {
            baseLanes: j,
            cachePool: A,
            transitions: null
          };
          return r.memoizedState = ee, r.updateQueue = null, DC(r, j), null;
        }
      else {
        var Ve;
        T !== null ? (Ve = sn(T.baseLanes, c), r.memoizedState = null) : Ve = c, DC(r, Ve);
      }
      return ia(o, r, v, c), r.child;
    }
    function vz(o, r, c) {
      var f = r.pendingProps;
      return ia(o, r, f, c), r.child;
    }
    function gz(o, r, c) {
      var f = r.pendingProps.children;
      return ia(o, r, f, c), r.child;
    }
    function bz(o, r, c) {
      {
        r.flags |= an;
        {
          var f = r.stateNode;
          f.effectDuration = 0, f.passiveEffectDuration = 0;
        }
      }
      var v = r.pendingProps, T = v.children;
      return ia(o, r, T, c), r.child;
    }
    function xO(o, r) {
      var c = r.ref;
      (o === null && c !== null || o !== null && o.ref !== c) && (r.flags |= Ir, r.flags |= zm);
    }
    function QS(o, r, c, f, v) {
      if (r.type !== r.elementType) {
        var T = c.propTypes;
        T && Fi(
          T,
          f,
          // Resolved props
          "prop",
          jn(c)
        );
      }
      var D;
      {
        var A = nf(r, c, !0);
        D = of(r, A);
      }
      var j, G;
      cf(r, v), Ts(r);
      {
        if (ov.current = r, za(!0), j = vf(o, r, c, f, D, v), G = gf(), r.mode & so) {
          $o(!0);
          try {
            j = vf(o, r, c, f, D, v), G = gf();
          } finally {
            $o(!1);
          }
        }
        za(!1);
      }
      return sl(), o !== null && !qi ? (zE(o, r, v), Nl(o, r, v)) : (kr() && G && D0(r), r.flags |= ms, ia(o, r, j, v), r.child);
    }
    function SO(o, r, c, f, v) {
      {
        switch (Ij(r)) {
          case !1: {
            var T = r.stateNode, D = r.type, A = new D(r.memoizedProps, T.context), j = A.state;
            T.updater.enqueueSetState(T, j, null);
            break;
          }
          case !0: {
            r.flags |= Qt, r.flags |= Wo;
            var G = new Error("Simulated error coming from DevTools"), ee = No(v);
            r.lanes = sn(r.lanes, ee);
            var ye = HS(r, ud(G, r), ee);
            Y0(r, ye);
            break;
          }
        }
        if (r.type !== r.elementType) {
          var he = c.propTypes;
          he && Fi(
            he,
            f,
            // Resolved props
            "prop",
            jn(c)
          );
        }
      }
      var Ve;
      $s(c) ? (Ve = !0, Py(r)) : Ve = !1, cf(r, v);
      var Be = r.stateNode, Qe;
      Be === null ? (yC(o, r), DE(r, c, f), rS(r, c, f, v), Qe = !0) : o === null ? Qe = HB(r, c, f, v) : Qe = WB(o, r, c, f, v);
      var Pt = XS(o, r, c, Qe, Ve, v);
      {
        var Ut = r.stateNode;
        Qe && Ut.props !== f && (dd || p("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", on(r) || "a component"), dd = !0);
      }
      return Pt;
    }
    function XS(o, r, c, f, v, T) {
      xO(o, r);
      var D = (r.flags & Qt) !== jt;
      if (!f && !D)
        return v && oE(r, c, !1), Nl(o, r, T);
      var A = r.stateNode;
      ov.current = r;
      var j;
      if (D && typeof c.getDerivedStateFromError != "function")
        j = null, fO();
      else {
        Ts(r);
        {
          if (za(!0), j = A.render(), r.mode & so) {
            $o(!0);
            try {
              A.render();
            } finally {
              $o(!1);
            }
          }
          za(!1);
        }
        sl();
      }
      return r.flags |= ms, o !== null && D ? hz(o, r, j, T) : ia(o, r, j, T), r.memoizedState = A.state, v && oE(r, c, !0), r.child;
    }
    function kO(o) {
      var r = o.stateNode;
      r.pendingContext ? tE(o, r.pendingContext, r.pendingContext !== r.context) : r.context && tE(o, r.context, !1), uS(o, r.containerInfo);
    }
    function yz(o, r, c) {
      if (kO(r), o === null)
        throw new Error("Should have a current fiber. This is a bug in React.");
      var f = r.pendingProps, v = r.memoizedState, T = v.element;
      xE(o, r), Hy(r, f, null, c);
      var D = r.memoizedState;
      r.stateNode;
      var A = D.element;
      if (v.isDehydrated) {
        var j = {
          element: A,
          isDehydrated: !1,
          cache: D.cache,
          pendingSuspenseBoundaries: D.pendingSuspenseBoundaries,
          transitions: D.transitions
        }, G = r.updateQueue;
        if (G.baseState = j, r.memoizedState = j, r.flags & po) {
          var ee = ud(new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering."), r);
          return wO(o, r, A, c, ee);
        } else if (A !== T) {
          var ye = ud(new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), r);
          return wO(o, r, A, c, ye);
        } else {
          SB(r);
          var he = IE(r, null, A, c);
          r.child = he;
          for (var Ve = he; Ve; )
            Ve.flags = Ve.flags & ~Gn | ya, Ve = Ve.sibling;
        }
      } else {
        if (sf(), A === T)
          return Nl(o, r, c);
        ia(o, r, A, c);
      }
      return r.child;
    }
    function wO(o, r, c, f, v) {
      return sf(), A0(v), r.flags |= po, ia(o, r, c, f), r.child;
    }
    function Cz(o, r, c) {
      _E(r), o === null && I0(r);
      var f = r.type, v = r.pendingProps, T = o !== null ? o.memoizedProps : null, D = v.children, A = v0(f, v);
      return A ? D = null : T !== null && v0(f, T) && (r.flags |= On), xO(o, r), ia(o, r, D, c), r.child;
    }
    function Tz(o, r) {
      return o === null && I0(r), null;
    }
    function xz(o, r, c, f) {
      yC(o, r);
      var v = r.pendingProps, T = c, D = T._payload, A = T._init, j = A(D);
      r.type = j;
      var G = r.tag = Tj(j), ee = Hi(j, v), ye;
      switch (G) {
        case g:
          return ZS(r, j), r.type = j = wf(j), ye = QS(null, r, j, ee, f), ye;
        case b:
          return r.type = j = Ok(j), ye = SO(null, r, j, ee, f), ye;
        case I:
          return r.type = j = Pk(j), ye = bO(null, r, j, ee, f), ye;
        case P: {
          if (r.type !== r.elementType) {
            var he = j.propTypes;
            he && Fi(
              he,
              ee,
              // Resolved for outer only
              "prop",
              jn(j)
            );
          }
          return ye = yO(
            null,
            r,
            j,
            Hi(j.type, ee),
            // The inner type can have defaults too
            f
          ), ye;
        }
      }
      var Ve = "";
      throw j !== null && typeof j == "object" && j.$$typeof === Tt && (Ve = " Did you wrap a component in React.lazy() more than once?"), new Error("Element type is invalid. Received a promise that resolves to: " + j + ". " + ("Lazy element type must resolve to a class or function." + Ve));
    }
    function Sz(o, r, c, f, v) {
      yC(o, r), r.tag = b;
      var T;
      return $s(c) ? (T = !0, Py(r)) : T = !1, cf(r, v), DE(r, c, f), rS(r, c, f, v), XS(null, r, c, !0, T, v);
    }
    function kz(o, r, c, f) {
      yC(o, r);
      var v = r.pendingProps, T;
      {
        var D = nf(r, c, !1);
        T = of(r, D);
      }
      cf(r, f);
      var A, j;
      Ts(r);
      {
        if (c.prototype && typeof c.prototype.render == "function") {
          var G = jn(c) || "Unknown";
          WS[G] || (p("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", G, G), WS[G] = !0);
        }
        r.mode & so && Ui.recordLegacyContextWarning(r, null), za(!0), ov.current = r, A = vf(null, r, c, v, T, f), j = gf(), za(!1);
      }
      if (sl(), r.flags |= ms, typeof A == "object" && A !== null && typeof A.render == "function" && A.$$typeof === void 0) {
        var ee = jn(c) || "Unknown";
        rv[ee] || (p("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", ee, ee, ee), rv[ee] = !0);
      }
      if (
        // Run these checks in production only if the flag is off.
        // Eventually we'll delete this branch altogether.
        typeof A == "object" && A !== null && typeof A.render == "function" && A.$$typeof === void 0
      ) {
        {
          var ye = jn(c) || "Unknown";
          rv[ye] || (p("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", ye, ye, ye), rv[ye] = !0);
        }
        r.tag = b, r.memoizedState = null, r.updateQueue = null;
        var he = !1;
        return $s(c) ? (he = !0, Py(r)) : he = !1, r.memoizedState = A.state !== null && A.state !== void 0 ? A.state : null, W0(r), PE(r, A), rS(r, c, v, f), XS(null, r, c, !0, he, f);
      } else {
        if (r.tag = g, r.mode & so) {
          $o(!0);
          try {
            A = vf(null, r, c, v, T, f), j = gf();
          } finally {
            $o(!1);
          }
        }
        return kr() && j && D0(r), ia(null, r, A, f), ZS(r, c), r.child;
      }
    }
    function ZS(o, r) {
      {
        if (r && r.childContextTypes && p("%s(...): childContextTypes cannot be defined on a function component.", r.displayName || r.name || "Component"), o.ref !== null) {
          var c = "", f = ha();
          f && (c += `

Check the render method of \`` + f + "`.");
          var v = f || "", T = o._debugSource;
          T && (v = T.fileName + ":" + T.lineNumber), GS[v] || (GS[v] = !0, p("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", c));
        }
        if (typeof r.getDerivedStateFromProps == "function") {
          var D = jn(r) || "Unknown";
          qS[D] || (p("%s: Function components do not support getDerivedStateFromProps.", D), qS[D] = !0);
        }
        if (typeof r.contextType == "object" && r.contextType !== null) {
          var A = jn(r) || "Unknown";
          YS[A] || (p("%s: Function components do not support contextType.", A), YS[A] = !0);
        }
      }
    }
    var JS = {
      dehydrated: null,
      treeContext: null,
      retryLane: vn
    };
    function ek(o) {
      return {
        baseLanes: o,
        cachePool: mz(),
        transitions: null
      };
    }
    function wz(o, r) {
      var c = null;
      return {
        baseLanes: sn(o.baseLanes, r),
        cachePool: c,
        transitions: o.transitions
      };
    }
    function Rz(o, r, c, f) {
      if (r !== null) {
        var v = r.memoizedState;
        if (v === null)
          return !1;
      }
      return fS(o, Kh);
    }
    function Ez(o, r) {
      return hc(o.childLanes, r);
    }
    function RO(o, r, c) {
      var f = r.pendingProps;
      Aj(r) && (r.flags |= Qt);
      var v = Wi.current, T = !1, D = (r.flags & Qt) !== jt;
      if (D || Rz(v, o) ? (T = !0, r.flags &= ~Qt) : (o === null || o.memoizedState !== null) && (v = KB(v, BE)), v = pf(v), Vc(r, v), o === null) {
        I0(r);
        var A = r.memoizedState;
        if (A !== null) {
          var j = A.dehydrated;
          if (j !== null)
            return $z(r, j);
        }
        var G = f.children, ee = f.fallback;
        if (T) {
          var ye = Oz(r, G, ee, c), he = r.child;
          return he.memoizedState = ek(c), r.memoizedState = JS, ye;
        } else
          return tk(r, G);
      } else {
        var Ve = o.memoizedState;
        if (Ve !== null) {
          var Be = Ve.dehydrated;
          if (Be !== null)
            return Nz(o, r, D, f, Be, Ve, c);
        }
        if (T) {
          var Qe = f.fallback, Pt = f.children, Ut = Dz(o, r, Pt, Qe, c), zt = r.child, bn = o.child.memoizedState;
          return zt.memoizedState = bn === null ? ek(c) : wz(bn, c), zt.childLanes = Ez(o, c), r.memoizedState = JS, Ut;
        } else {
          var hn = f.children, Me = Pz(o, r, hn, c);
          return r.memoizedState = null, Me;
        }
      }
    }
    function tk(o, r, c) {
      var f = o.mode, v = {
        mode: "visible",
        children: r
      }, T = nk(v, f);
      return T.return = o, o.child = T, T;
    }
    function Oz(o, r, c, f) {
      var v = o.mode, T = o.child, D = {
        mode: "hidden",
        children: r
      }, A, j;
      return (v & un) === Ht && T !== null ? (A = T, A.childLanes = tt, A.pendingProps = D, o.mode & Wt && (A.actualDuration = 0, A.actualStartTime = -1, A.selfBaseDuration = 0, A.treeBaseDuration = 0), j = Yc(c, v, f, null)) : (A = nk(D, v), j = Yc(c, v, f, null)), A.return = o, j.return = o, A.sibling = j, o.child = A, j;
    }
    function nk(o, r, c) {
      return EP(o, r, tt, null);
    }
    function EO(o, r) {
      return vd(o, r);
    }
    function Pz(o, r, c, f) {
      var v = o.child, T = v.sibling, D = EO(v, {
        mode: "visible",
        children: c
      });
      if ((r.mode & un) === Ht && (D.lanes = f), D.return = r, D.sibling = null, T !== null) {
        var A = r.deletions;
        A === null ? (r.deletions = [T], r.flags |= Rn) : A.push(T);
      }
      return r.child = D, D;
    }
    function Dz(o, r, c, f, v) {
      var T = r.mode, D = o.child, A = D.sibling, j = {
        mode: "hidden",
        children: c
      }, G;
      if (
        // In legacy mode, we commit the primary tree as if it successfully
        // completed, even though it's in an inconsistent state.
        (T & un) === Ht && // Make sure we're on the second pass, i.e. the primary child fragment was
        // already cloned. In legacy mode, the only case where this isn't true is
        // when DevTools forces us to display a fallback; we skip the first render
        // pass entirely and go straight to rendering the fallback. (In Concurrent
        // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
        // only codepath.)
        r.child !== D
      ) {
        var ee = r.child;
        G = ee, G.childLanes = tt, G.pendingProps = j, r.mode & Wt && (G.actualDuration = 0, G.actualStartTime = -1, G.selfBaseDuration = D.selfBaseDuration, G.treeBaseDuration = D.treeBaseDuration), r.deletions = null;
      } else
        G = EO(D, j), G.subtreeFlags = D.subtreeFlags & er;
      var ye;
      return A !== null ? ye = vd(A, f) : (ye = Yc(f, T, v, null), ye.flags |= Gn), ye.return = r, G.return = r, G.sibling = ye, r.child = G, ye;
    }
    function bC(o, r, c, f) {
      f !== null && A0(f), uf(r, o.child, null, c);
      var v = r.pendingProps, T = v.children, D = tk(r, T);
      return D.flags |= Gn, r.memoizedState = null, D;
    }
    function Mz(o, r, c, f, v) {
      var T = r.mode, D = {
        mode: "visible",
        children: c
      }, A = nk(D, T), j = Yc(f, T, v, null);
      return j.flags |= Gn, A.return = r, j.return = r, A.sibling = j, r.child = A, (r.mode & un) !== Ht && uf(r, o.child, null, v), j;
    }
    function $z(o, r, c) {
      return (o.mode & un) === Ht ? (p("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components."), o.lanes = Gt) : C0(r) ? o.lanes = ul : o.lanes = Fr, null;
    }
    function Nz(o, r, c, f, v, T, D) {
      if (c)
        if (r.flags & po) {
          r.flags &= ~po;
          var Me = jS(new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
          return bC(o, r, D, Me);
        } else {
          if (r.memoizedState !== null)
            return r.child = o.child, r.flags |= Qt, null;
          var Xe = f.children, $e = f.fallback, mt = Mz(o, r, Xe, $e, D), Dt = r.child;
          return Dt.memoizedState = ek(D), r.memoizedState = JS, mt;
        }
      else {
        if (TB(), (r.mode & un) === Ht)
          return bC(
            o,
            r,
            D,
            // TODO: When we delete legacy mode, we should make this error argument
            // required — every concurrent mode path that causes hydration to
            // de-opt to client rendering should have an error message.
            null
          );
        if (C0(v)) {
          var A, j, G;
          {
            var ee = V2(v);
            A = ee.digest, j = ee.message, G = ee.stack;
          }
          var ye;
          j ? ye = new Error(j) : ye = new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
          var he = jS(ye, A, G);
          return bC(o, r, D, he);
        }
        var Ve = jr(D, o.childLanes);
        if (qi || Ve) {
          var Be = PC();
          if (Be !== null) {
            var Qe = Fx(Be, D);
            if (Qe !== vn && Qe !== T.retryLane) {
              T.retryLane = Qe;
              var Pt = Hn;
              Pa(o, Qe), ur(Be, o, Qe, Pt);
            }
          }
          Sk();
          var Ut = jS(new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
          return bC(o, r, D, Ut);
        } else if (KR(v)) {
          r.flags |= Qt, r.child = o.child;
          var zt = rj.bind(null, o);
          return B2(v, zt), null;
        } else {
          kB(r, v, T.treeContext);
          var bn = f.children, hn = tk(r, bn);
          return hn.flags |= ya, hn;
        }
      }
    }
    function OO(o, r, c) {
      o.lanes = sn(o.lanes, r);
      var f = o.alternate;
      f !== null && (f.lanes = sn(f.lanes, r)), F0(o.return, r, c);
    }
    function Lz(o, r, c) {
      for (var f = r; f !== null; ) {
        if (f.tag === B) {
          var v = f.memoizedState;
          v !== null && OO(f, c, o);
        } else if (f.tag === Y)
          OO(f, c, o);
        else if (f.child !== null) {
          f.child.return = f, f = f.child;
          continue;
        }
        if (f === o)
          return;
        for (; f.sibling === null; ) {
          if (f.return === null || f.return === o)
            return;
          f = f.return;
        }
        f.sibling.return = f.return, f = f.sibling;
      }
    }
    function Iz(o) {
      for (var r = o, c = null; r !== null; ) {
        var f = r.alternate;
        f !== null && Xy(f) === null && (c = r), r = r.sibling;
      }
      return c;
    }
    function Az(o) {
      if (o !== void 0 && o !== "forwards" && o !== "backwards" && o !== "together" && !KS[o])
        if (KS[o] = !0, typeof o == "string")
          switch (o.toLowerCase()) {
            case "together":
            case "forwards":
            case "backwards": {
              p('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', o, o.toLowerCase());
              break;
            }
            case "forward":
            case "backward": {
              p('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', o, o.toLowerCase());
              break;
            }
            default:
              p('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', o);
              break;
          }
        else
          p('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', o);
    }
    function _z(o, r) {
      o !== void 0 && !gC[o] && (o !== "collapsed" && o !== "hidden" ? (gC[o] = !0, p('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', o)) : r !== "forwards" && r !== "backwards" && (gC[o] = !0, p('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', o)));
    }
    function PO(o, r) {
      {
        var c = Uo(o), f = !c && typeof ki(o) == "function";
        if (c || f) {
          var v = c ? "array" : "iterable";
          return p("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", v, r, v), !1;
        }
      }
      return !0;
    }
    function Vz(o, r) {
      if ((r === "forwards" || r === "backwards") && o !== void 0 && o !== null && o !== !1)
        if (Uo(o)) {
          for (var c = 0; c < o.length; c++)
            if (!PO(o[c], c))
              return;
        } else {
          var f = ki(o);
          if (typeof f == "function") {
            var v = f.call(o);
            if (v)
              for (var T = v.next(), D = 0; !T.done; T = v.next()) {
                if (!PO(T.value, D))
                  return;
                D++;
              }
          } else
            p('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', r);
        }
    }
    function ok(o, r, c, f, v) {
      var T = o.memoizedState;
      T === null ? o.memoizedState = {
        isBackwards: r,
        rendering: null,
        renderingStartTime: 0,
        last: f,
        tail: c,
        tailMode: v
      } : (T.isBackwards = r, T.rendering = null, T.renderingStartTime = 0, T.last = f, T.tail = c, T.tailMode = v);
    }
    function DO(o, r, c) {
      var f = r.pendingProps, v = f.revealOrder, T = f.tail, D = f.children;
      Az(v), _z(T, v), Vz(D, v), ia(o, r, D, c);
      var A = Wi.current, j = fS(A, Kh);
      if (j)
        A = mS(A, Kh), r.flags |= Qt;
      else {
        var G = o !== null && (o.flags & Qt) !== jt;
        G && Lz(r, r.child, c), A = pf(A);
      }
      if (Vc(r, A), (r.mode & un) === Ht)
        r.memoizedState = null;
      else
        switch (v) {
          case "forwards": {
            var ee = Iz(r.child), ye;
            ee === null ? (ye = r.child, r.child = null) : (ye = ee.sibling, ee.sibling = null), ok(
              r,
              !1,
              // isBackwards
              ye,
              ee,
              T
            );
            break;
          }
          case "backwards": {
            var he = null, Ve = r.child;
            for (r.child = null; Ve !== null; ) {
              var Be = Ve.alternate;
              if (Be !== null && Xy(Be) === null) {
                r.child = Ve;
                break;
              }
              var Qe = Ve.sibling;
              Ve.sibling = he, he = Ve, Ve = Qe;
            }
            ok(
              r,
              !0,
              // isBackwards
              he,
              null,
              // last
              T
            );
            break;
          }
          case "together": {
            ok(
              r,
              !1,
              // isBackwards
              null,
              // tail
              null,
              // last
              void 0
            );
            break;
          }
          default:
            r.memoizedState = null;
        }
      return r.child;
    }
    function Bz(o, r, c) {
      uS(r, r.stateNode.containerInfo);
      var f = r.pendingProps;
      return o === null ? r.child = uf(r, null, f, c) : ia(o, r, f, c), r.child;
    }
    var MO = !1;
    function zz(o, r, c) {
      var f = r.type, v = f._context, T = r.pendingProps, D = r.memoizedProps, A = T.value;
      {
        "value" in T || MO || (MO = !0, p("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?"));
        var j = r.type.propTypes;
        j && Fi(j, T, "prop", "Context.Provider");
      }
      if (bE(r, v, A), D !== null) {
        var G = D.value;
        if (At(G, A)) {
          if (D.children === T.children && !Ey())
            return Nl(o, r, c);
        } else
          LB(r, v, c);
      }
      var ee = T.children;
      return ia(o, r, ee, c), r.child;
    }
    var $O = !1;
    function Fz(o, r, c) {
      var f = r.type;
      f._context === void 0 ? f !== f.Consumer && ($O || ($O = !0, p("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?"))) : f = f._context;
      var v = r.pendingProps, T = v.children;
      typeof T != "function" && p("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it."), cf(r, c);
      var D = Qo(f);
      Ts(r);
      var A;
      return ov.current = r, za(!0), A = T(D), za(!1), sl(), r.flags |= ms, ia(o, r, A, c), r.child;
    }
    function av() {
      qi = !0;
    }
    function yC(o, r) {
      (r.mode & un) === Ht && o !== null && (o.alternate = null, r.alternate = null, r.flags |= Gn);
    }
    function Nl(o, r, c) {
      return o !== null && (r.dependencies = o.dependencies), fO(), gv(r.lanes), jr(c, r.childLanes) ? (YB(o, r), r.child) : null;
    }
    function jz(o, r, c) {
      {
        var f = r.return;
        if (f === null)
          throw new Error("Cannot swap the root fiber.");
        if (o.alternate = null, r.alternate = null, c.index = r.index, c.sibling = r.sibling, c.return = r.return, c.ref = r.ref, r === f.child)
          f.child = c;
        else {
          var v = f.child;
          if (v === null)
            throw new Error("Expected parent to have a child.");
          for (; v.sibling !== r; )
            if (v = v.sibling, v === null)
              throw new Error("Expected to find the previous sibling.");
          v.sibling = c;
        }
        var T = f.deletions;
        return T === null ? (f.deletions = [o], f.flags |= Rn) : T.push(o), c.flags |= Gn, c;
      }
    }
    function rk(o, r) {
      var c = o.lanes;
      return !!jr(c, r);
    }
    function Uz(o, r, c) {
      switch (r.tag) {
        case S:
          kO(r), r.stateNode, sf();
          break;
        case R:
          _E(r);
          break;
        case b: {
          var f = r.type;
          $s(f) && Py(r);
          break;
        }
        case E:
          uS(r, r.stateNode.containerInfo);
          break;
        case V: {
          var v = r.memoizedProps.value, T = r.type._context;
          bE(r, T, v);
          break;
        }
        case z:
          {
            var D = jr(c, r.childLanes);
            D && (r.flags |= an);
            {
              var A = r.stateNode;
              A.effectDuration = 0, A.passiveEffectDuration = 0;
            }
          }
          break;
        case B: {
          var j = r.memoizedState;
          if (j !== null) {
            if (j.dehydrated !== null)
              return Vc(r, pf(Wi.current)), r.flags |= Qt, null;
            var G = r.child, ee = G.childLanes;
            if (jr(c, ee))
              return RO(o, r, c);
            Vc(r, pf(Wi.current));
            var ye = Nl(o, r, c);
            return ye !== null ? ye.sibling : null;
          } else
            Vc(r, pf(Wi.current));
          break;
        }
        case Y: {
          var he = (o.flags & Qt) !== jt, Ve = jr(c, r.childLanes);
          if (he) {
            if (Ve)
              return DO(o, r, c);
            r.flags |= Qt;
          }
          var Be = r.memoizedState;
          if (Be !== null && (Be.rendering = null, Be.tail = null, Be.lastEffect = null), Vc(r, Wi.current), Ve)
            break;
          return null;
        }
        case Z:
        case q:
          return r.lanes = tt, TO(o, r, c);
      }
      return Nl(o, r, c);
    }
    function NO(o, r, c) {
      if (r._debugNeedsRemount && o !== null)
        return jz(o, r, Lk(r.type, r.key, r.pendingProps, r._debugOwner || null, r.mode, r.lanes));
      if (o !== null) {
        var f = o.memoizedProps, v = r.pendingProps;
        if (f !== v || Ey() || // Force a re-render if the implementation changed due to hot reload:
        r.type !== o.type)
          qi = !0;
        else {
          var T = rk(o, c);
          if (!T && // If this is the second pass of an error or suspense boundary, there
          // may not be work scheduled on `current`, so we check for this flag.
          (r.flags & Qt) === jt)
            return qi = !1, Uz(o, r, c);
          (o.flags & $u) !== jt ? qi = !0 : qi = !1;
        }
      } else if (qi = !1, kr() && hB(r)) {
        var D = r.index, A = vB();
        iE(r, A, D);
      }
      switch (r.lanes = tt, r.tag) {
        case x:
          return kz(o, r, r.type, c);
        case H: {
          var j = r.elementType;
          return xz(o, r, j, c);
        }
        case g: {
          var G = r.type, ee = r.pendingProps, ye = r.elementType === G ? ee : Hi(G, ee);
          return QS(o, r, G, ye, c);
        }
        case b: {
          var he = r.type, Ve = r.pendingProps, Be = r.elementType === he ? Ve : Hi(he, Ve);
          return SO(o, r, he, Be, c);
        }
        case S:
          return yz(o, r, c);
        case R:
          return Cz(o, r, c);
        case $:
          return Tz(o, r);
        case B:
          return RO(o, r, c);
        case E:
          return Bz(o, r, c);
        case I: {
          var Qe = r.type, Pt = r.pendingProps, Ut = r.elementType === Qe ? Pt : Hi(Qe, Pt);
          return bO(o, r, Qe, Ut, c);
        }
        case M:
          return vz(o, r, c);
        case O:
          return gz(o, r, c);
        case z:
          return bz(o, r, c);
        case V:
          return zz(o, r, c);
        case N:
          return Fz(o, r, c);
        case P: {
          var zt = r.type, bn = r.pendingProps, hn = Hi(zt, bn);
          if (r.type !== r.elementType) {
            var Me = zt.propTypes;
            Me && Fi(
              Me,
              hn,
              // Resolved for outer only
              "prop",
              jn(zt)
            );
          }
          return hn = Hi(zt.type, hn), yO(o, r, zt, hn, c);
        }
        case F:
          return CO(o, r, r.type, r.pendingProps, c);
        case U: {
          var Xe = r.type, $e = r.pendingProps, mt = r.elementType === Xe ? $e : Hi(Xe, $e);
          return Sz(o, r, Xe, mt, c);
        }
        case Y:
          return DO(o, r, c);
        case te:
          break;
        case Z:
          return TO(o, r, c);
      }
      throw new Error("Unknown unit of work tag (" + r.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function bf(o) {
      o.flags |= an;
    }
    function LO(o) {
      o.flags |= Ir, o.flags |= zm;
    }
    var IO, ak, AO, _O;
    IO = function(o, r, c, f) {
      for (var v = r.child; v !== null; ) {
        if (v.tag === R || v.tag === $)
          p2(o, v.stateNode);
        else if (v.tag !== E) {
          if (v.child !== null) {
            v.child.return = v, v = v.child;
            continue;
          }
        }
        if (v === r)
          return;
        for (; v.sibling === null; ) {
          if (v.return === null || v.return === r)
            return;
          v = v.return;
        }
        v.sibling.return = v.return, v = v.sibling;
      }
    }, ak = function(o, r) {
    }, AO = function(o, r, c, f, v) {
      var T = o.memoizedProps;
      if (T !== f) {
        var D = r.stateNode, A = dS(), j = m2(D, c, T, f, v, A);
        r.updateQueue = j, j && bf(r);
      }
    }, _O = function(o, r, c, f) {
      c !== f && bf(r);
    };
    function iv(o, r) {
      if (!kr())
        switch (o.tailMode) {
          case "hidden": {
            for (var c = o.tail, f = null; c !== null; )
              c.alternate !== null && (f = c), c = c.sibling;
            f === null ? o.tail = null : f.sibling = null;
            break;
          }
          case "collapsed": {
            for (var v = o.tail, T = null; v !== null; )
              v.alternate !== null && (T = v), v = v.sibling;
            T === null ? !r && o.tail !== null ? o.tail.sibling = null : o.tail = null : T.sibling = null;
            break;
          }
        }
    }
    function Rr(o) {
      var r = o.alternate !== null && o.alternate.child === o.child, c = tt, f = jt;
      if (r) {
        if ((o.mode & Wt) !== Ht) {
          for (var j = o.selfBaseDuration, G = o.child; G !== null; )
            c = sn(c, sn(G.lanes, G.childLanes)), f |= G.subtreeFlags & er, f |= G.flags & er, j += G.treeBaseDuration, G = G.sibling;
          o.treeBaseDuration = j;
        } else
          for (var ee = o.child; ee !== null; )
            c = sn(c, sn(ee.lanes, ee.childLanes)), f |= ee.subtreeFlags & er, f |= ee.flags & er, ee.return = o, ee = ee.sibling;
        o.subtreeFlags |= f;
      } else {
        if ((o.mode & Wt) !== Ht) {
          for (var v = o.actualDuration, T = o.selfBaseDuration, D = o.child; D !== null; )
            c = sn(c, sn(D.lanes, D.childLanes)), f |= D.subtreeFlags, f |= D.flags, v += D.actualDuration, T += D.treeBaseDuration, D = D.sibling;
          o.actualDuration = v, o.treeBaseDuration = T;
        } else
          for (var A = o.child; A !== null; )
            c = sn(c, sn(A.lanes, A.childLanes)), f |= A.subtreeFlags, f |= A.flags, A.return = o, A = A.sibling;
        o.subtreeFlags |= f;
      }
      return o.childLanes = c, r;
    }
    function Hz(o, r, c) {
      if (PB() && (r.mode & un) !== Ht && (r.flags & Qt) === jt)
        return fE(r), sf(), r.flags |= po | ea | Wo, !1;
      var f = Ly(r);
      if (c !== null && c.dehydrated !== null)
        if (o === null) {
          if (!f)
            throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
          if (EB(r), Rr(r), (r.mode & Wt) !== Ht) {
            var v = c !== null;
            if (v) {
              var T = r.child;
              T !== null && (r.treeBaseDuration -= T.treeBaseDuration);
            }
          }
          return !1;
        } else {
          if (sf(), (r.flags & Qt) === jt && (r.memoizedState = null), r.flags |= an, Rr(r), (r.mode & Wt) !== Ht) {
            var D = c !== null;
            if (D) {
              var A = r.child;
              A !== null && (r.treeBaseDuration -= A.treeBaseDuration);
            }
          }
          return !1;
        }
      else
        return mE(), !0;
    }
    function VO(o, r, c) {
      var f = r.pendingProps;
      switch (M0(r), r.tag) {
        case x:
        case H:
        case F:
        case g:
        case I:
        case M:
        case O:
        case z:
        case N:
        case P:
          return Rr(r), null;
        case b: {
          var v = r.type;
          return $s(v) && Oy(r), Rr(r), null;
        }
        case S: {
          var T = r.stateNode;
          if (df(r), E0(r), vS(), T.pendingContext && (T.context = T.pendingContext, T.pendingContext = null), o === null || o.child === null) {
            var D = Ly(r);
            if (D)
              bf(r);
            else if (o !== null) {
              var A = o.memoizedState;
              // Check if this is a client root
              (!A.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)
              (r.flags & po) !== jt) && (r.flags |= ba, mE());
            }
          }
          return ak(o, r), Rr(r), null;
        }
        case R: {
          pS(r);
          var j = AE(), G = r.type;
          if (o !== null && r.stateNode != null)
            AO(o, r, G, f, j), o.ref !== r.ref && LO(r);
          else {
            if (!f) {
              if (r.stateNode === null)
                throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
              return Rr(r), null;
            }
            var ee = dS(), ye = Ly(r);
            if (ye)
              wB(r, j, ee) && bf(r);
            else {
              var he = d2(G, f, j, ee, r);
              IO(he, r, !1, !1), r.stateNode = he, f2(he, G, f, j) && bf(r);
            }
            r.ref !== null && LO(r);
          }
          return Rr(r), null;
        }
        case $: {
          var Ve = f;
          if (o && r.stateNode != null) {
            var Be = o.memoizedProps;
            _O(o, r, Be, Ve);
          } else {
            if (typeof Ve != "string" && r.stateNode === null)
              throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
            var Qe = AE(), Pt = dS(), Ut = Ly(r);
            Ut ? RB(r) && bf(r) : r.stateNode = h2(Ve, Qe, Pt, r);
          }
          return Rr(r), null;
        }
        case B: {
          ff(r);
          var zt = r.memoizedState;
          if (o === null || o.memoizedState !== null && o.memoizedState.dehydrated !== null) {
            var bn = Hz(o, r, zt);
            if (!bn)
              return r.flags & Wo ? r : null;
          }
          if ((r.flags & Qt) !== jt)
            return r.lanes = c, (r.mode & Wt) !== Ht && FS(r), r;
          var hn = zt !== null, Me = o !== null && o.memoizedState !== null;
          if (hn !== Me && hn) {
            var Xe = r.child;
            if (Xe.flags |= hs, (r.mode & un) !== Ht) {
              var $e = o === null && (r.memoizedProps.unstable_avoidThisFallback !== !0 || !ze);
              $e || fS(Wi.current, BE) ? WF() : Sk();
            }
          }
          var mt = r.updateQueue;
          if (mt !== null && (r.flags |= an), Rr(r), (r.mode & Wt) !== Ht && hn) {
            var Dt = r.child;
            Dt !== null && (r.treeBaseDuration -= Dt.treeBaseDuration);
          }
          return null;
        }
        case E:
          return df(r), ak(o, r), o === null && lB(r.stateNode.containerInfo), Rr(r), null;
        case V:
          var Rt = r.type._context;
          return z0(Rt, r), Rr(r), null;
        case U: {
          var Kt = r.type;
          return $s(Kt) && Oy(r), Rr(r), null;
        }
        case Y: {
          ff(r);
          var tn = r.memoizedState;
          if (tn === null)
            return Rr(r), null;
          var _n = (r.flags & Qt) !== jt, xn = tn.rendering;
          if (xn === null)
            if (_n)
              iv(tn, !1);
            else {
              var _o = qF() && (o === null || (o.flags & Qt) === jt);
              if (!_o)
                for (var Sn = r.child; Sn !== null; ) {
                  var wo = Xy(Sn);
                  if (wo !== null) {
                    _n = !0, r.flags |= Qt, iv(tn, !1);
                    var Yr = wo.updateQueue;
                    return Yr !== null && (r.updateQueue = Yr, r.flags |= an), r.subtreeFlags = jt, qB(r, c), Vc(r, mS(Wi.current, Kh)), r.child;
                  }
                  Sn = Sn.sibling;
                }
              tn.tail !== null && io() > aP() && (r.flags |= Qt, _n = !0, iv(tn, !1), r.lanes = Jm);
            }
          else {
            if (!_n) {
              var Mr = Xy(xn);
              if (Mr !== null) {
                r.flags |= Qt, _n = !0;
                var Ga = Mr.updateQueue;
                if (Ga !== null && (r.updateQueue = Ga, r.flags |= an), iv(tn, !0), tn.tail === null && tn.tailMode === "hidden" && !xn.alternate && !kr())
                  return Rr(r), null;
              } else
                // The time it took to render last row is greater than the remaining
                // time we have to render. So rendering one more row would likely
                // exceed it.
                io() * 2 - tn.renderingStartTime > aP() && c !== Fr && (r.flags |= Qt, _n = !0, iv(tn, !1), r.lanes = Jm);
            }
            if (tn.isBackwards)
              xn.sibling = r.child, r.child = xn;
            else {
              var ca = tn.last;
              ca !== null ? ca.sibling = xn : r.child = xn, tn.last = xn;
            }
          }
          if (tn.tail !== null) {
            var ua = tn.tail;
            tn.rendering = ua, tn.tail = ua.sibling, tn.renderingStartTime = io(), ua.sibling = null;
            var qr = Wi.current;
            return _n ? qr = mS(qr, Kh) : qr = pf(qr), Vc(r, qr), ua;
          }
          return Rr(r), null;
        }
        case te:
          break;
        case Z:
        case q: {
          xk(r);
          var Vl = r.memoizedState, Rf = Vl !== null;
          if (o !== null) {
            var xv = o.memoizedState, zs = xv !== null;
            zs !== Rf && // LegacyHidden doesn't do any hiding — it only pre-renders.
            !se && (r.flags |= hs);
          }
          return !Rf || (r.mode & un) === Ht ? Rr(r) : jr(Bs, Fr) && (Rr(r), r.subtreeFlags & (Gn | an) && (r.flags |= hs)), null;
        }
        case X:
          return null;
        case oe:
          return null;
      }
      throw new Error("Unknown unit of work tag (" + r.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function Wz(o, r, c) {
      switch (M0(r), r.tag) {
        case b: {
          var f = r.type;
          $s(f) && Oy(r);
          var v = r.flags;
          return v & Wo ? (r.flags = v & ~Wo | Qt, (r.mode & Wt) !== Ht && FS(r), r) : null;
        }
        case S: {
          r.stateNode, df(r), E0(r), vS();
          var T = r.flags;
          return (T & Wo) !== jt && (T & Qt) === jt ? (r.flags = T & ~Wo | Qt, r) : null;
        }
        case R:
          return pS(r), null;
        case B: {
          ff(r);
          var D = r.memoizedState;
          if (D !== null && D.dehydrated !== null) {
            if (r.alternate === null)
              throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
            sf();
          }
          var A = r.flags;
          return A & Wo ? (r.flags = A & ~Wo | Qt, (r.mode & Wt) !== Ht && FS(r), r) : null;
        }
        case Y:
          return ff(r), null;
        case E:
          return df(r), null;
        case V:
          var j = r.type._context;
          return z0(j, r), null;
        case Z:
        case q:
          return xk(r), null;
        case X:
          return null;
        default:
          return null;
      }
    }
    function BO(o, r, c) {
      switch (M0(r), r.tag) {
        case b: {
          var f = r.type.childContextTypes;
          f != null && Oy(r);
          break;
        }
        case S: {
          r.stateNode, df(r), E0(r), vS();
          break;
        }
        case R: {
          pS(r);
          break;
        }
        case E:
          df(r);
          break;
        case B:
          ff(r);
          break;
        case Y:
          ff(r);
          break;
        case V:
          var v = r.type._context;
          z0(v, r);
          break;
        case Z:
        case q:
          xk(r);
          break;
      }
    }
    var zO = null;
    zO = /* @__PURE__ */ new Set();
    var CC = !1, Er = !1, Yz = typeof WeakSet == "function" ? WeakSet : Set, _t = null, yf = null, Cf = null;
    function qz(o) {
      al(null, function() {
        throw o;
      }), Vm();
    }
    var Gz = function(o, r) {
      if (r.props = o.memoizedProps, r.state = o.memoizedState, o.mode & Wt)
        try {
          _s(), r.componentWillUnmount();
        } finally {
          As(o);
        }
      else
        r.componentWillUnmount();
    };
    function FO(o, r) {
      try {
        Fc(rr, o);
      } catch (c) {
        Zn(o, r, c);
      }
    }
    function ik(o, r, c) {
      try {
        Gz(o, c);
      } catch (f) {
        Zn(o, r, f);
      }
    }
    function Kz(o, r, c) {
      try {
        c.componentDidMount();
      } catch (f) {
        Zn(o, r, f);
      }
    }
    function jO(o, r) {
      try {
        HO(o);
      } catch (c) {
        Zn(o, r, c);
      }
    }
    function Tf(o, r) {
      var c = o.ref;
      if (c !== null)
        if (typeof c == "function") {
          var f;
          try {
            if (me && Se && o.mode & Wt)
              try {
                _s(), f = c(null);
              } finally {
                As(o);
              }
            else
              f = c(null);
          } catch (v) {
            Zn(o, r, v);
          }
          typeof f == "function" && p("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", on(o));
        } else
          c.current = null;
    }
    function TC(o, r, c) {
      try {
        c();
      } catch (f) {
        Zn(o, r, f);
      }
    }
    var UO = !1;
    function Qz(o, r) {
      c2(o.containerInfo), _t = r, Xz();
      var c = UO;
      return UO = !1, c;
    }
    function Xz() {
      for (; _t !== null; ) {
        var o = _t, r = o.child;
        (o.subtreeFlags & sc) !== jt && r !== null ? (r.return = o, _t = r) : Zz();
      }
    }
    function Zz() {
      for (; _t !== null; ) {
        var o = _t;
        In(o);
        try {
          Jz(o);
        } catch (c) {
          Zn(o, o.return, c);
        }
        Mo();
        var r = o.sibling;
        if (r !== null) {
          r.return = o.return, _t = r;
          return;
        }
        _t = o.return;
      }
    }
    function Jz(o) {
      var r = o.alternate, c = o.flags;
      if ((c & ba) !== jt) {
        switch (In(o), o.tag) {
          case g:
          case I:
          case F:
            break;
          case b: {
            if (r !== null) {
              var f = r.memoizedProps, v = r.memoizedState, T = o.stateNode;
              o.type === o.elementType && !dd && (T.props !== o.memoizedProps && p("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", on(o) || "instance"), T.state !== o.memoizedState && p("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", on(o) || "instance"));
              var D = T.getSnapshotBeforeUpdate(o.elementType === o.type ? f : Hi(o.type, f), v);
              {
                var A = zO;
                D === void 0 && !A.has(o.type) && (A.add(o.type), p("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", on(o)));
              }
              T.__reactInternalSnapshotBeforeUpdate = D;
            }
            break;
          }
          case S: {
            {
              var j = o.stateNode;
              L2(j.containerInfo);
            }
            break;
          }
          case R:
          case $:
          case E:
          case U:
            break;
          default:
            throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
        Mo();
      }
    }
    function Gi(o, r, c) {
      var f = r.updateQueue, v = f !== null ? f.lastEffect : null;
      if (v !== null) {
        var T = v.next, D = T;
        do {
          if ((D.tag & o) === o) {
            var A = D.destroy;
            D.destroy = void 0, A !== void 0 && ((o & wr) !== Da ? cp(r) : (o & rr) !== Da && up(r), (o & Ns) !== Da && yv(!0), TC(r, c, A), (o & Ns) !== Da && yv(!1), (o & wr) !== Da ? Nb() : (o & rr) !== Da && lc());
          }
          D = D.next;
        } while (D !== T);
      }
    }
    function Fc(o, r) {
      var c = r.updateQueue, f = c !== null ? c.lastEffect : null;
      if (f !== null) {
        var v = f.next, T = v;
        do {
          if ((T.tag & o) === o) {
            (o & wr) !== Da ? $b(r) : (o & rr) !== Da && Lb(r);
            var D = T.create;
            (o & Ns) !== Da && yv(!0), T.destroy = D(), (o & Ns) !== Da && yv(!1), (o & wr) !== Da ? Qm() : (o & rr) !== Da && Ib();
            {
              var A = T.destroy;
              if (A !== void 0 && typeof A != "function") {
                var j = void 0;
                (T.tag & rr) !== jt ? j = "useLayoutEffect" : (T.tag & Ns) !== jt ? j = "useInsertionEffect" : j = "useEffect";
                var G = void 0;
                A === null ? G = " You returned null. If your effect does not require clean up, return undefined (or nothing)." : typeof A.then == "function" ? G = `

It looks like you wrote ` + j + `(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:

` + j + `(() => {
  async function fetchData() {
    // You can await here
    const response = await MyAPI.getData(someId);
    // ...
  }
  fetchData();
}, [someId]); // Or [] if effect doesn't need props or state

Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching` : G = " You returned: " + A, p("%s must not return anything besides a function, which is used for clean-up.%s", j, G);
              }
            }
          }
          T = T.next;
        } while (T !== v);
      }
    }
    function eF(o, r) {
      if ((r.flags & an) !== jt)
        switch (r.tag) {
          case z: {
            var c = r.stateNode.passiveEffectDuration, f = r.memoizedProps, v = f.id, T = f.onPostCommit, D = dO(), A = r.alternate === null ? "mount" : "update";
            uO() && (A = "nested-update"), typeof T == "function" && T(v, A, c, D);
            var j = r.return;
            e:
              for (; j !== null; ) {
                switch (j.tag) {
                  case S:
                    var G = j.stateNode;
                    G.passiveEffectDuration += c;
                    break e;
                  case z:
                    var ee = j.stateNode;
                    ee.passiveEffectDuration += c;
                    break e;
                }
                j = j.return;
              }
            break;
          }
        }
    }
    function tF(o, r, c, f) {
      if ((c.flags & hr) !== jt)
        switch (c.tag) {
          case g:
          case I:
          case F: {
            if (!Er)
              if (c.mode & Wt)
                try {
                  _s(), Fc(rr | or, c);
                } finally {
                  As(c);
                }
              else
                Fc(rr | or, c);
            break;
          }
          case b: {
            var v = c.stateNode;
            if (c.flags & an && !Er)
              if (r === null)
                if (c.type === c.elementType && !dd && (v.props !== c.memoizedProps && p("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", on(c) || "instance"), v.state !== c.memoizedState && p("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", on(c) || "instance")), c.mode & Wt)
                  try {
                    _s(), v.componentDidMount();
                  } finally {
                    As(c);
                  }
                else
                  v.componentDidMount();
              else {
                var T = c.elementType === c.type ? r.memoizedProps : Hi(c.type, r.memoizedProps), D = r.memoizedState;
                if (c.type === c.elementType && !dd && (v.props !== c.memoizedProps && p("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", on(c) || "instance"), v.state !== c.memoizedState && p("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", on(c) || "instance")), c.mode & Wt)
                  try {
                    _s(), v.componentDidUpdate(T, D, v.__reactInternalSnapshotBeforeUpdate);
                  } finally {
                    As(c);
                  }
                else
                  v.componentDidUpdate(T, D, v.__reactInternalSnapshotBeforeUpdate);
              }
            var A = c.updateQueue;
            A !== null && (c.type === c.elementType && !dd && (v.props !== c.memoizedProps && p("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", on(c) || "instance"), v.state !== c.memoizedState && p("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", on(c) || "instance")), kE(c, A, v));
            break;
          }
          case S: {
            var j = c.updateQueue;
            if (j !== null) {
              var G = null;
              if (c.child !== null)
                switch (c.child.tag) {
                  case R:
                    G = c.child.stateNode;
                    break;
                  case b:
                    G = c.child.stateNode;
                    break;
                }
              kE(c, j, G);
            }
            break;
          }
          case R: {
            var ee = c.stateNode;
            if (r === null && c.flags & an) {
              var ye = c.type, he = c.memoizedProps;
              C2(ee, ye, he);
            }
            break;
          }
          case $:
            break;
          case E:
            break;
          case z: {
            {
              var Ve = c.memoizedProps, Be = Ve.onCommit, Qe = Ve.onRender, Pt = c.stateNode.effectDuration, Ut = dO(), zt = r === null ? "mount" : "update";
              uO() && (zt = "nested-update"), typeof Qe == "function" && Qe(c.memoizedProps.id, zt, c.actualDuration, c.treeBaseDuration, c.actualStartTime, Ut);
              {
                typeof Be == "function" && Be(c.memoizedProps.id, zt, Pt, Ut), ZF(c);
                var bn = c.return;
                e:
                  for (; bn !== null; ) {
                    switch (bn.tag) {
                      case S:
                        var hn = bn.stateNode;
                        hn.effectDuration += Pt;
                        break e;
                      case z:
                        var Me = bn.stateNode;
                        Me.effectDuration += Pt;
                        break e;
                    }
                    bn = bn.return;
                  }
              }
            }
            break;
          }
          case B: {
            cF(o, c);
            break;
          }
          case Y:
          case U:
          case te:
          case Z:
          case q:
          case oe:
            break;
          default:
            throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
      Er || c.flags & Ir && HO(c);
    }
    function nF(o) {
      switch (o.tag) {
        case g:
        case I:
        case F: {
          if (o.mode & Wt)
            try {
              _s(), FO(o, o.return);
            } finally {
              As(o);
            }
          else
            FO(o, o.return);
          break;
        }
        case b: {
          var r = o.stateNode;
          typeof r.componentDidMount == "function" && Kz(o, o.return, r), jO(o, o.return);
          break;
        }
        case R: {
          jO(o, o.return);
          break;
        }
      }
    }
    function oF(o, r) {
      for (var c = null, f = o; ; ) {
        if (f.tag === R) {
          if (c === null) {
            c = f;
            try {
              var v = f.stateNode;
              r ? D2(v) : $2(f.stateNode, f.memoizedProps);
            } catch (D) {
              Zn(o, o.return, D);
            }
          }
        } else if (f.tag === $) {
          if (c === null)
            try {
              var T = f.stateNode;
              r ? M2(T) : N2(T, f.memoizedProps);
            } catch (D) {
              Zn(o, o.return, D);
            }
        } else if (!((f.tag === Z || f.tag === q) && f.memoizedState !== null && f !== o)) {
          if (f.child !== null) {
            f.child.return = f, f = f.child;
            continue;
          }
        }
        if (f === o)
          return;
        for (; f.sibling === null; ) {
          if (f.return === null || f.return === o)
            return;
          c === f && (c = null), f = f.return;
        }
        c === f && (c = null), f.sibling.return = f.return, f = f.sibling;
      }
    }
    function HO(o) {
      var r = o.ref;
      if (r !== null) {
        var c = o.stateNode, f;
        switch (o.tag) {
          case R:
            f = c;
            break;
          default:
            f = c;
        }
        if (typeof r == "function") {
          var v;
          if (o.mode & Wt)
            try {
              _s(), v = r(f);
            } finally {
              As(o);
            }
          else
            v = r(f);
          typeof v == "function" && p("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", on(o));
        } else
          r.hasOwnProperty("current") || p("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", on(o)), r.current = f;
      }
    }
    function rF(o) {
      var r = o.alternate;
      r !== null && (r.return = null), o.return = null;
    }
    function WO(o) {
      var r = o.alternate;
      r !== null && (o.alternate = null, WO(r));
      {
        if (o.child = null, o.deletions = null, o.sibling = null, o.tag === R) {
          var c = o.stateNode;
          c !== null && dB(c);
        }
        o.stateNode = null, o._debugOwner = null, o.return = null, o.dependencies = null, o.memoizedProps = null, o.memoizedState = null, o.pendingProps = null, o.stateNode = null, o.updateQueue = null;
      }
    }
    function aF(o) {
      for (var r = o.return; r !== null; ) {
        if (YO(r))
          return r;
        r = r.return;
      }
      throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    function YO(o) {
      return o.tag === R || o.tag === S || o.tag === E;
    }
    function qO(o) {
      var r = o;
      e:
        for (; ; ) {
          for (; r.sibling === null; ) {
            if (r.return === null || YO(r.return))
              return null;
            r = r.return;
          }
          for (r.sibling.return = r.return, r = r.sibling; r.tag !== R && r.tag !== $ && r.tag !== Q; ) {
            if (r.flags & Gn || r.child === null || r.tag === E)
              continue e;
            r.child.return = r, r = r.child;
          }
          if (!(r.flags & Gn))
            return r.stateNode;
        }
    }
    function iF(o) {
      var r = aF(o);
      switch (r.tag) {
        case R: {
          var c = r.stateNode;
          r.flags & On && (GR(c), r.flags &= ~On);
          var f = qO(o);
          lk(o, f, c);
          break;
        }
        case S:
        case E: {
          var v = r.stateNode.containerInfo, T = qO(o);
          sk(o, T, v);
          break;
        }
        default:
          throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
    function sk(o, r, c) {
      var f = o.tag, v = f === R || f === $;
      if (v) {
        var T = o.stateNode;
        r ? R2(c, T, r) : k2(c, T);
      } else if (f !== E) {
        var D = o.child;
        if (D !== null) {
          sk(D, r, c);
          for (var A = D.sibling; A !== null; )
            sk(A, r, c), A = A.sibling;
        }
      }
    }
    function lk(o, r, c) {
      var f = o.tag, v = f === R || f === $;
      if (v) {
        var T = o.stateNode;
        r ? w2(c, T, r) : S2(c, T);
      } else if (f !== E) {
        var D = o.child;
        if (D !== null) {
          lk(D, r, c);
          for (var A = D.sibling; A !== null; )
            lk(A, r, c), A = A.sibling;
        }
      }
    }
    var Or = null, Ki = !1;
    function sF(o, r, c) {
      {
        var f = r;
        e:
          for (; f !== null; ) {
            switch (f.tag) {
              case R: {
                Or = f.stateNode, Ki = !1;
                break e;
              }
              case S: {
                Or = f.stateNode.containerInfo, Ki = !0;
                break e;
              }
              case E: {
                Or = f.stateNode.containerInfo, Ki = !0;
                break e;
              }
            }
            f = f.return;
          }
        if (Or === null)
          throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        GO(o, r, c), Or = null, Ki = !1;
      }
      rF(c);
    }
    function jc(o, r, c) {
      for (var f = c.child; f !== null; )
        GO(o, r, f), f = f.sibling;
    }
    function GO(o, r, c) {
      switch (Gm(c), c.tag) {
        case R:
          Er || Tf(c, r);
        case $: {
          {
            var f = Or, v = Ki;
            Or = null, jc(o, r, c), Or = f, Ki = v, Or !== null && (Ki ? O2(Or, c.stateNode) : E2(Or, c.stateNode));
          }
          return;
        }
        case Q: {
          Or !== null && (Ki ? P2(Or, c.stateNode) : y0(Or, c.stateNode));
          return;
        }
        case E: {
          {
            var T = Or, D = Ki;
            Or = c.stateNode.containerInfo, Ki = !0, jc(o, r, c), Or = T, Ki = D;
          }
          return;
        }
        case g:
        case I:
        case P:
        case F: {
          if (!Er) {
            var A = c.updateQueue;
            if (A !== null) {
              var j = A.lastEffect;
              if (j !== null) {
                var G = j.next, ee = G;
                do {
                  var ye = ee, he = ye.destroy, Ve = ye.tag;
                  he !== void 0 && ((Ve & Ns) !== Da ? TC(c, r, he) : (Ve & rr) !== Da && (up(c), c.mode & Wt ? (_s(), TC(c, r, he), As(c)) : TC(c, r, he), lc())), ee = ee.next;
                } while (ee !== G);
              }
            }
          }
          jc(o, r, c);
          return;
        }
        case b: {
          if (!Er) {
            Tf(c, r);
            var Be = c.stateNode;
            typeof Be.componentWillUnmount == "function" && ik(c, r, Be);
          }
          jc(o, r, c);
          return;
        }
        case te: {
          jc(o, r, c);
          return;
        }
        case Z: {
          if (
            // TODO: Remove this dead flag
            c.mode & un
          ) {
            var Qe = Er;
            Er = Qe || c.memoizedState !== null, jc(o, r, c), Er = Qe;
          } else
            jc(o, r, c);
          break;
        }
        default: {
          jc(o, r, c);
          return;
        }
      }
    }
    function lF(o) {
      o.memoizedState;
    }
    function cF(o, r) {
      var c = r.memoizedState;
      if (c === null) {
        var f = r.alternate;
        if (f !== null) {
          var v = f.memoizedState;
          if (v !== null) {
            var T = v.dehydrated;
            T !== null && G2(T);
          }
        }
      }
    }
    function KO(o) {
      var r = o.updateQueue;
      if (r !== null) {
        o.updateQueue = null;
        var c = o.stateNode;
        c === null && (c = o.stateNode = new Yz()), r.forEach(function(f) {
          var v = aj.bind(null, o, f);
          if (!c.has(f)) {
            if (c.add(f), tr)
              if (yf !== null && Cf !== null)
                bv(Cf, yf);
              else
                throw Error("Expected finished root and lanes to be set. This is a bug in React.");
            f.then(v, v);
          }
        });
      }
    }
    function uF(o, r, c) {
      yf = c, Cf = o, In(r), QO(r, o), In(r), yf = null, Cf = null;
    }
    function Qi(o, r, c) {
      var f = r.deletions;
      if (f !== null)
        for (var v = 0; v < f.length; v++) {
          var T = f[v];
          try {
            sF(o, r, T);
          } catch (j) {
            Zn(T, r, j);
          }
        }
      var D = bx();
      if (r.subtreeFlags & Vr)
        for (var A = r.child; A !== null; )
          In(A), QO(A, o), A = A.sibling;
      In(D);
    }
    function QO(o, r, c) {
      var f = o.alternate, v = o.flags;
      switch (o.tag) {
        case g:
        case I:
        case P:
        case F: {
          if (Qi(r, o), Vs(o), v & an) {
            try {
              Gi(Ns | or, o, o.return), Fc(Ns | or, o);
            } catch (Kt) {
              Zn(o, o.return, Kt);
            }
            if (o.mode & Wt) {
              try {
                _s(), Gi(rr | or, o, o.return);
              } catch (Kt) {
                Zn(o, o.return, Kt);
              }
              As(o);
            } else
              try {
                Gi(rr | or, o, o.return);
              } catch (Kt) {
                Zn(o, o.return, Kt);
              }
          }
          return;
        }
        case b: {
          Qi(r, o), Vs(o), v & Ir && f !== null && Tf(f, f.return);
          return;
        }
        case R: {
          Qi(r, o), Vs(o), v & Ir && f !== null && Tf(f, f.return);
          {
            if (o.flags & On) {
              var T = o.stateNode;
              try {
                GR(T);
              } catch (Kt) {
                Zn(o, o.return, Kt);
              }
            }
            if (v & an) {
              var D = o.stateNode;
              if (D != null) {
                var A = o.memoizedProps, j = f !== null ? f.memoizedProps : A, G = o.type, ee = o.updateQueue;
                if (o.updateQueue = null, ee !== null)
                  try {
                    T2(D, ee, G, j, A, o);
                  } catch (Kt) {
                    Zn(o, o.return, Kt);
                  }
              }
            }
          }
          return;
        }
        case $: {
          if (Qi(r, o), Vs(o), v & an) {
            if (o.stateNode === null)
              throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
            var ye = o.stateNode, he = o.memoizedProps, Ve = f !== null ? f.memoizedProps : he;
            try {
              x2(ye, Ve, he);
            } catch (Kt) {
              Zn(o, o.return, Kt);
            }
          }
          return;
        }
        case S: {
          if (Qi(r, o), Vs(o), v & an && f !== null) {
            var Be = f.memoizedState;
            if (Be.isDehydrated)
              try {
                q2(r.containerInfo);
              } catch (Kt) {
                Zn(o, o.return, Kt);
              }
          }
          return;
        }
        case E: {
          Qi(r, o), Vs(o);
          return;
        }
        case B: {
          Qi(r, o), Vs(o);
          var Qe = o.child;
          if (Qe.flags & hs) {
            var Pt = Qe.stateNode, Ut = Qe.memoizedState, zt = Ut !== null;
            if (Pt.isHidden = zt, zt) {
              var bn = Qe.alternate !== null && Qe.alternate.memoizedState !== null;
              bn || HF();
            }
          }
          if (v & an) {
            try {
              lF(o);
            } catch (Kt) {
              Zn(o, o.return, Kt);
            }
            KO(o);
          }
          return;
        }
        case Z: {
          var hn = f !== null && f.memoizedState !== null;
          if (
            // TODO: Remove this dead flag
            o.mode & un
          ) {
            var Me = Er;
            Er = Me || hn, Qi(r, o), Er = Me;
          } else
            Qi(r, o);
          if (Vs(o), v & hs) {
            var Xe = o.stateNode, $e = o.memoizedState, mt = $e !== null, Dt = o;
            if (Xe.isHidden = mt, mt && !hn && (Dt.mode & un) !== Ht) {
              _t = Dt;
              for (var Rt = Dt.child; Rt !== null; )
                _t = Rt, pF(Rt), Rt = Rt.sibling;
            }
            oF(Dt, mt);
          }
          return;
        }
        case Y: {
          Qi(r, o), Vs(o), v & an && KO(o);
          return;
        }
        case te:
          return;
        default: {
          Qi(r, o), Vs(o);
          return;
        }
      }
    }
    function Vs(o) {
      var r = o.flags;
      if (r & Gn) {
        try {
          iF(o);
        } catch (c) {
          Zn(o, o.return, c);
        }
        o.flags &= ~Gn;
      }
      r & ya && (o.flags &= ~ya);
    }
    function dF(o, r, c) {
      yf = c, Cf = r, _t = o, XO(o, r, c), yf = null, Cf = null;
    }
    function XO(o, r, c) {
      for (var f = (o.mode & un) !== Ht; _t !== null; ) {
        var v = _t, T = v.child;
        if (v.tag === Z && f) {
          var D = v.memoizedState !== null, A = D || CC;
          if (A) {
            ck(o, r, c);
            continue;
          } else {
            var j = v.alternate, G = j !== null && j.memoizedState !== null, ee = G || Er, ye = CC, he = Er;
            CC = A, Er = ee, Er && !he && (_t = v, fF(v));
            for (var Ve = T; Ve !== null; )
              _t = Ve, XO(
                Ve,
                // New root; bubble back up to here and stop.
                r,
                c
              ), Ve = Ve.sibling;
            _t = v, CC = ye, Er = he, ck(o, r, c);
            continue;
          }
        }
        (v.subtreeFlags & hr) !== jt && T !== null ? (T.return = v, _t = T) : ck(o, r, c);
      }
    }
    function ck(o, r, c) {
      for (; _t !== null; ) {
        var f = _t;
        if ((f.flags & hr) !== jt) {
          var v = f.alternate;
          In(f);
          try {
            tF(r, v, f, c);
          } catch (D) {
            Zn(f, f.return, D);
          }
          Mo();
        }
        if (f === o) {
          _t = null;
          return;
        }
        var T = f.sibling;
        if (T !== null) {
          T.return = f.return, _t = T;
          return;
        }
        _t = f.return;
      }
    }
    function pF(o) {
      for (; _t !== null; ) {
        var r = _t, c = r.child;
        switch (r.tag) {
          case g:
          case I:
          case P:
          case F: {
            if (r.mode & Wt)
              try {
                _s(), Gi(rr, r, r.return);
              } finally {
                As(r);
              }
            else
              Gi(rr, r, r.return);
            break;
          }
          case b: {
            Tf(r, r.return);
            var f = r.stateNode;
            typeof f.componentWillUnmount == "function" && ik(r, r.return, f);
            break;
          }
          case R: {
            Tf(r, r.return);
            break;
          }
          case Z: {
            var v = r.memoizedState !== null;
            if (v) {
              ZO(o);
              continue;
            }
            break;
          }
        }
        c !== null ? (c.return = r, _t = c) : ZO(o);
      }
    }
    function ZO(o) {
      for (; _t !== null; ) {
        var r = _t;
        if (r === o) {
          _t = null;
          return;
        }
        var c = r.sibling;
        if (c !== null) {
          c.return = r.return, _t = c;
          return;
        }
        _t = r.return;
      }
    }
    function fF(o) {
      for (; _t !== null; ) {
        var r = _t, c = r.child;
        if (r.tag === Z) {
          var f = r.memoizedState !== null;
          if (f) {
            JO(o);
            continue;
          }
        }
        c !== null ? (c.return = r, _t = c) : JO(o);
      }
    }
    function JO(o) {
      for (; _t !== null; ) {
        var r = _t;
        In(r);
        try {
          nF(r);
        } catch (f) {
          Zn(r, r.return, f);
        }
        if (Mo(), r === o) {
          _t = null;
          return;
        }
        var c = r.sibling;
        if (c !== null) {
          c.return = r.return, _t = c;
          return;
        }
        _t = r.return;
      }
    }
    function mF(o, r, c, f) {
      _t = r, hF(r, o, c, f);
    }
    function hF(o, r, c, f) {
      for (; _t !== null; ) {
        var v = _t, T = v.child;
        (v.subtreeFlags & Ca) !== jt && T !== null ? (T.return = v, _t = T) : vF(o, r, c, f);
      }
    }
    function vF(o, r, c, f) {
      for (; _t !== null; ) {
        var v = _t;
        if ((v.flags & no) !== jt) {
          In(v);
          try {
            gF(r, v, c, f);
          } catch (D) {
            Zn(v, v.return, D);
          }
          Mo();
        }
        if (v === o) {
          _t = null;
          return;
        }
        var T = v.sibling;
        if (T !== null) {
          T.return = v.return, _t = T;
          return;
        }
        _t = v.return;
      }
    }
    function gF(o, r, c, f) {
      switch (r.tag) {
        case g:
        case I:
        case F: {
          if (r.mode & Wt) {
            zS();
            try {
              Fc(wr | or, r);
            } finally {
              BS(r);
            }
          } else
            Fc(wr | or, r);
          break;
        }
      }
    }
    function bF(o) {
      _t = o, yF();
    }
    function yF() {
      for (; _t !== null; ) {
        var o = _t, r = o.child;
        if ((_t.flags & Rn) !== jt) {
          var c = o.deletions;
          if (c !== null) {
            for (var f = 0; f < c.length; f++) {
              var v = c[f];
              _t = v, xF(v, o);
            }
            {
              var T = o.alternate;
              if (T !== null) {
                var D = T.child;
                if (D !== null) {
                  T.child = null;
                  do {
                    var A = D.sibling;
                    D.sibling = null, D = A;
                  } while (D !== null);
                }
              }
            }
            _t = o;
          }
        }
        (o.subtreeFlags & Ca) !== jt && r !== null ? (r.return = o, _t = r) : CF();
      }
    }
    function CF() {
      for (; _t !== null; ) {
        var o = _t;
        (o.flags & no) !== jt && (In(o), TF(o), Mo());
        var r = o.sibling;
        if (r !== null) {
          r.return = o.return, _t = r;
          return;
        }
        _t = o.return;
      }
    }
    function TF(o) {
      switch (o.tag) {
        case g:
        case I:
        case F: {
          o.mode & Wt ? (zS(), Gi(wr | or, o, o.return), BS(o)) : Gi(wr | or, o, o.return);
          break;
        }
      }
    }
    function xF(o, r) {
      for (; _t !== null; ) {
        var c = _t;
        In(c), kF(c, r), Mo();
        var f = c.child;
        f !== null ? (f.return = c, _t = f) : SF(o);
      }
    }
    function SF(o) {
      for (; _t !== null; ) {
        var r = _t, c = r.sibling, f = r.return;
        if (WO(r), r === o) {
          _t = null;
          return;
        }
        if (c !== null) {
          c.return = f, _t = c;
          return;
        }
        _t = f;
      }
    }
    function kF(o, r) {
      switch (o.tag) {
        case g:
        case I:
        case F: {
          o.mode & Wt ? (zS(), Gi(wr, o, r), BS(o)) : Gi(wr, o, r);
          break;
        }
      }
    }
    function wF(o) {
      switch (o.tag) {
        case g:
        case I:
        case F: {
          try {
            Fc(rr | or, o);
          } catch (c) {
            Zn(o, o.return, c);
          }
          break;
        }
        case b: {
          var r = o.stateNode;
          try {
            r.componentDidMount();
          } catch (c) {
            Zn(o, o.return, c);
          }
          break;
        }
      }
    }
    function RF(o) {
      switch (o.tag) {
        case g:
        case I:
        case F: {
          try {
            Fc(wr | or, o);
          } catch (r) {
            Zn(o, o.return, r);
          }
          break;
        }
      }
    }
    function EF(o) {
      switch (o.tag) {
        case g:
        case I:
        case F: {
          try {
            Gi(rr | or, o, o.return);
          } catch (c) {
            Zn(o, o.return, c);
          }
          break;
        }
        case b: {
          var r = o.stateNode;
          typeof r.componentWillUnmount == "function" && ik(o, o.return, r);
          break;
        }
      }
    }
    function OF(o) {
      switch (o.tag) {
        case g:
        case I:
        case F:
          try {
            Gi(wr | or, o, o.return);
          } catch (r) {
            Zn(o, o.return, r);
          }
      }
    }
    if (typeof Symbol == "function" && Symbol.for) {
      var sv = Symbol.for;
      sv("selector.component"), sv("selector.has_pseudo_class"), sv("selector.role"), sv("selector.test_id"), sv("selector.text");
    }
    var PF = [];
    function DF() {
      PF.forEach(function(o) {
        return o();
      });
    }
    var MF = a.ReactCurrentActQueue;
    function $F(o) {
      {
        var r = (
          // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
          typeof IS_REACT_ACT_ENVIRONMENT < "u" ? IS_REACT_ACT_ENVIRONMENT : void 0
        ), c = typeof jest < "u";
        return c && r !== !1;
      }
    }
    function eP() {
      {
        var o = (
          // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
          typeof IS_REACT_ACT_ENVIRONMENT < "u" ? IS_REACT_ACT_ENVIRONMENT : void 0
        );
        return !o && MF.current !== null && p("The current testing environment is not configured to support act(...)"), o;
      }
    }
    var NF = Math.ceil, uk = a.ReactCurrentDispatcher, dk = a.ReactCurrentOwner, Pr = a.ReactCurrentBatchConfig, Xi = a.ReactCurrentActQueue, sr = (
      /*             */
      0
    ), tP = (
      /*               */
      1
    ), Dr = (
      /*                */
      2
    ), hi = (
      /*                */
      4
    ), Ll = 0, lv = 1, pd = 2, xC = 3, cv = 4, nP = 5, pk = 6, gn = sr, sa = null, yo = null, lr = tt, Bs = tt, fk = $c(tt), cr = Ll, uv = null, SC = tt, dv = tt, kC = tt, pv = null, Ma = null, mk = 0, oP = 500, rP = 1 / 0, LF = 500, Il = null;
    function fv() {
      rP = io() + LF;
    }
    function aP() {
      return rP;
    }
    var wC = !1, hk = null, xf = null, fd = !1, Uc = null, mv = tt, vk = [], gk = null, IF = 50, hv = 0, bk = null, yk = !1, RC = !1, AF = 50, Sf = 0, EC = null, vv = Hn, OC = tt, iP = !1;
    function PC() {
      return sa;
    }
    function la() {
      return (gn & (Dr | hi)) !== sr ? io() : (vv !== Hn || (vv = io()), vv);
    }
    function Hc(o) {
      var r = o.mode;
      if ((r & un) === Ht)
        return Gt;
      if ((gn & Dr) !== sr && lr !== tt)
        return No(lr);
      var c = $B() !== MB;
      if (c) {
        if (Pr.transition !== null) {
          var f = Pr.transition;
          f._updatedFibers || (f._updatedFibers = /* @__PURE__ */ new Set()), f._updatedFibers.add(o);
        }
        return OC === vn && (OC = nh()), OC;
      }
      var v = ka();
      if (v !== vn)
        return v;
      var T = v2();
      return T;
    }
    function _F(o) {
      var r = o.mode;
      return (r & un) === Ht ? Gt : zx();
    }
    function ur(o, r, c, f) {
      sj(), iP && p("useInsertionEffect must not schedule updates."), yk && (RC = !0), gl(o, c, f), (gn & Dr) !== tt && o === sa ? uj(r) : (tr && sh(o, r, c), dj(r), o === sa && ((gn & Dr) === sr && (dv = sn(dv, c)), cr === cv && Wc(o, lr)), $a(o, f), c === Gt && gn === sr && (r.mode & un) === Ht && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
      !Xi.isBatchingLegacy && (fv(), aE()));
    }
    function VF(o, r, c) {
      var f = o.current;
      f.lanes = r, gl(o, r, c), $a(o, c);
    }
    function BF(o) {
      return (
        // TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We
        // decided not to enable it.
        (gn & Dr) !== sr
      );
    }
    function $a(o, r) {
      var c = o.callbackNode;
      _x(o, r);
      var f = Vu(o, o === sa ? lr : tt);
      if (f === tt) {
        c !== null && xP(c), o.callbackNode = null, o.callbackPriority = vn;
        return;
      }
      var v = So(f), T = o.callbackPriority;
      if (T === v && // Special case related to `act`. If the currently scheduled task is a
      // Scheduler task, rather than an `act` task, cancel it and re-scheduled
      // on the `act` queue.
      !(Xi.current !== null && c !== Rk)) {
        c == null && T !== Gt && p("Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.");
        return;
      }
      c != null && xP(c);
      var D;
      if (v === Gt)
        o.tag === Nc ? (Xi.isBatchingLegacy !== null && (Xi.didScheduleLegacyUpdate = !0), mB(cP.bind(null, o))) : rE(cP.bind(null, o)), Xi.current !== null ? Xi.current.push(Lc) : b2(function() {
          (gn & (Dr | hi)) === sr && Lc();
        }), D = null;
      else {
        var A;
        switch (Uu(f)) {
          case vr:
            A = ip;
            break;
          case nr:
            A = oa;
            break;
          case Ai:
            A = ai;
            break;
          case Fu:
            A = gs;
            break;
          default:
            A = ai;
            break;
        }
        D = Ek(A, sP.bind(null, o));
      }
      o.callbackPriority = v, o.callbackNode = D;
    }
    function sP(o, r) {
      if (sz(), vv = Hn, OC = tt, (gn & (Dr | hi)) !== sr)
        throw new Error("Should not already be working.");
      var c = o.callbackNode, f = _l();
      if (f && o.callbackNode !== c)
        return null;
      var v = Vu(o, o === sa ? lr : tt);
      if (v === tt)
        return null;
      var T = !zu(o, v) && !Fb(o, v) && !r, D = T ? KF(o, v) : MC(o, v);
      if (D !== Ll) {
        if (D === pd) {
          var A = eh(o);
          A !== tt && (v = A, D = Ck(o, A));
        }
        if (D === lv) {
          var j = uv;
          throw md(o, tt), Wc(o, v), $a(o, io()), j;
        }
        if (D === pk)
          Wc(o, v);
        else {
          var G = !zu(o, v), ee = o.current.alternate;
          if (G && !FF(ee)) {
            if (D = MC(o, v), D === pd) {
              var ye = eh(o);
              ye !== tt && (v = ye, D = Ck(o, ye));
            }
            if (D === lv) {
              var he = uv;
              throw md(o, tt), Wc(o, v), $a(o, io()), he;
            }
          }
          o.finishedWork = ee, o.finishedLanes = v, zF(o, D, v);
        }
      }
      return $a(o, io()), o.callbackNode === c ? sP.bind(null, o) : null;
    }
    function Ck(o, r) {
      var c = pv;
      if (Io(o)) {
        var f = md(o, r);
        f.flags |= po, sB(o.containerInfo);
      }
      var v = MC(o, r);
      if (v !== pd) {
        var T = Ma;
        Ma = c, T !== null && lP(T);
      }
      return v;
    }
    function lP(o) {
      Ma === null ? Ma = o : Ma.push.apply(Ma, o);
    }
    function zF(o, r, c) {
      switch (r) {
        case Ll:
        case lv:
          throw new Error("Root did not complete. This is a bug in React.");
        case pd: {
          hd(o, Ma, Il);
          break;
        }
        case xC: {
          if (Wc(o, c), Dp(c) && // do not delay if we're inside an act() scope
          !SP()) {
            var f = mk + oP - io();
            if (f > 10) {
              var v = Vu(o, tt);
              if (v !== tt)
                break;
              var T = o.suspendedLanes;
              if (!vl(T, c)) {
                la(), ah(o, T);
                break;
              }
              o.timeoutHandle = g0(hd.bind(null, o, Ma, Il), f);
              break;
            }
          }
          hd(o, Ma, Il);
          break;
        }
        case cv: {
          if (Wc(o, c), zb(c))
            break;
          if (!SP()) {
            var D = Bb(o, c), A = D, j = io() - A, G = ij(j) - j;
            if (G > 10) {
              o.timeoutHandle = g0(hd.bind(null, o, Ma, Il), G);
              break;
            }
          }
          hd(o, Ma, Il);
          break;
        }
        case nP: {
          hd(o, Ma, Il);
          break;
        }
        default:
          throw new Error("Unknown root exit status.");
      }
    }
    function FF(o) {
      for (var r = o; ; ) {
        if (r.flags & Mu) {
          var c = r.updateQueue;
          if (c !== null) {
            var f = c.stores;
            if (f !== null)
              for (var v = 0; v < f.length; v++) {
                var T = f[v], D = T.getSnapshot, A = T.value;
                try {
                  if (!At(D(), A))
                    return !1;
                } catch {
                  return !1;
                }
              }
          }
        }
        var j = r.child;
        if (r.subtreeFlags & Mu && j !== null) {
          j.return = r, r = j;
          continue;
        }
        if (r === o)
          return !0;
        for (; r.sibling === null; ) {
          if (r.return === null || r.return === o)
            return !0;
          r = r.return;
        }
        r.sibling.return = r.return, r = r.sibling;
      }
      return !0;
    }
    function Wc(o, r) {
      r = hc(r, kC), r = hc(r, dv), rh(o, r);
    }
    function cP(o) {
      if (lz(), (gn & (Dr | hi)) !== sr)
        throw new Error("Should not already be working.");
      _l();
      var r = Vu(o, tt);
      if (!jr(r, Gt))
        return $a(o, io()), null;
      var c = MC(o, r);
      if (o.tag !== Nc && c === pd) {
        var f = eh(o);
        f !== tt && (r = f, c = Ck(o, f));
      }
      if (c === lv) {
        var v = uv;
        throw md(o, tt), Wc(o, r), $a(o, io()), v;
      }
      if (c === pk)
        throw new Error("Root did not complete. This is a bug in React.");
      var T = o.current.alternate;
      return o.finishedWork = T, o.finishedLanes = r, hd(o, Ma, Il), $a(o, io()), null;
    }
    function jF(o, r) {
      r !== tt && (vc(o, sn(r, Gt)), $a(o, io()), (gn & (Dr | hi)) === sr && (fv(), Lc()));
    }
    function Tk(o, r) {
      var c = gn;
      gn |= tP;
      try {
        return o(r);
      } finally {
        gn = c, gn === sr && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
        !Xi.isBatchingLegacy && (fv(), aE());
      }
    }
    function UF(o, r, c, f, v) {
      var T = ka(), D = Pr.transition;
      try {
        return Pr.transition = null, Lo(vr), o(r, c, f, v);
      } finally {
        Lo(T), Pr.transition = D, gn === sr && fv();
      }
    }
    function Al(o) {
      Uc !== null && Uc.tag === Nc && (gn & (Dr | hi)) === sr && _l();
      var r = gn;
      gn |= tP;
      var c = Pr.transition, f = ka();
      try {
        return Pr.transition = null, Lo(vr), o ? o() : void 0;
      } finally {
        Lo(f), Pr.transition = c, gn = r, (gn & (Dr | hi)) === sr && Lc();
      }
    }
    function uP() {
      return (gn & (Dr | hi)) !== sr;
    }
    function DC(o, r) {
      Hr(fk, Bs, o), Bs = sn(Bs, r);
    }
    function xk(o) {
      Bs = fk.current, Ur(fk, o);
    }
    function md(o, r) {
      o.finishedWork = null, o.finishedLanes = tt;
      var c = o.timeoutHandle;
      if (c !== b0 && (o.timeoutHandle = b0, g2(c)), yo !== null)
        for (var f = yo.return; f !== null; ) {
          var v = f.alternate;
          BO(v, f), f = f.return;
        }
      sa = o;
      var T = vd(o.current, null);
      return yo = T, lr = Bs = r, cr = Ll, uv = null, SC = tt, dv = tt, kC = tt, pv = null, Ma = null, AB(), Ui.discardPendingWarnings(), T;
    }
    function dP(o, r) {
      do {
        var c = yo;
        try {
          if (Vy(), FE(), Mo(), dk.current = null, c === null || c.return === null) {
            cr = lv, uv = r, yo = null;
            return;
          }
          if (me && c.mode & Wt && vC(c, !0), xe)
            if (sl(), r !== null && typeof r == "object" && typeof r.then == "function") {
              var f = r;
              Ab(c, f, lr);
            } else
              dp(c, r, lr);
          fz(o, c.return, c, r, lr), hP(c);
        } catch (v) {
          r = v, yo === c && c !== null ? (c = c.return, yo = c) : c = yo;
          continue;
        }
        return;
      } while (!0);
    }
    function pP() {
      var o = uk.current;
      return uk.current = dC, o === null ? dC : o;
    }
    function fP(o) {
      uk.current = o;
    }
    function HF() {
      mk = io();
    }
    function gv(o) {
      SC = sn(o, SC);
    }
    function WF() {
      cr === Ll && (cr = xC);
    }
    function Sk() {
      (cr === Ll || cr === xC || cr === pd) && (cr = cv), sa !== null && (Bu(SC) || Bu(dv)) && Wc(sa, lr);
    }
    function YF(o) {
      cr !== cv && (cr = pd), pv === null ? pv = [o] : pv.push(o);
    }
    function qF() {
      return cr === Ll;
    }
    function MC(o, r) {
      var c = gn;
      gn |= Dr;
      var f = pP();
      if (sa !== o || lr !== r) {
        if (tr) {
          var v = o.memoizedUpdaters;
          v.size > 0 && (bv(o, lr), v.clear()), Np(o, r);
        }
        Il = lh(), md(o, r);
      }
      Ha(r);
      do
        try {
          GF();
          break;
        } catch (T) {
          dP(o, T);
        }
      while (!0);
      if (Vy(), gn = c, fP(f), yo !== null)
        throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
      return uc(), sa = null, lr = tt, cr;
    }
    function GF() {
      for (; yo !== null; )
        mP(yo);
    }
    function KF(o, r) {
      var c = gn;
      gn |= Dr;
      var f = pP();
      if (sa !== o || lr !== r) {
        if (tr) {
          var v = o.memoizedUpdaters;
          v.size > 0 && (bv(o, lr), v.clear()), Np(o, r);
        }
        Il = lh(), fv(), md(o, r);
      }
      Ha(r);
      do
        try {
          QF();
          break;
        } catch (T) {
          dP(o, T);
        }
      while (!0);
      return Vy(), fP(f), gn = c, yo !== null ? (Lu(), Ll) : (uc(), sa = null, lr = tt, cr);
    }
    function QF() {
      for (; yo !== null && !ap(); )
        mP(yo);
    }
    function mP(o) {
      var r = o.alternate;
      In(o);
      var c;
      (o.mode & Wt) !== Ht ? (VS(o), c = kk(r, o, Bs), vC(o, !0)) : c = kk(r, o, Bs), Mo(), o.memoizedProps = o.pendingProps, c === null ? hP(o) : yo = c, dk.current = null;
    }
    function hP(o) {
      var r = o;
      do {
        var c = r.alternate, f = r.return;
        if ((r.flags & ea) === jt) {
          In(r);
          var v = void 0;
          if ((r.mode & Wt) === Ht ? v = VO(c, r, Bs) : (VS(r), v = VO(c, r, Bs), vC(r, !1)), Mo(), v !== null) {
            yo = v;
            return;
          }
        } else {
          var T = Wz(c, r);
          if (T !== null) {
            T.flags &= Eb, yo = T;
            return;
          }
          if ((r.mode & Wt) !== Ht) {
            vC(r, !1);
            for (var D = r.actualDuration, A = r.child; A !== null; )
              D += A.actualDuration, A = A.sibling;
            r.actualDuration = D;
          }
          if (f !== null)
            f.flags |= ea, f.subtreeFlags = jt, f.deletions = null;
          else {
            cr = pk, yo = null;
            return;
          }
        }
        var j = r.sibling;
        if (j !== null) {
          yo = j;
          return;
        }
        r = f, yo = r;
      } while (r !== null);
      cr === Ll && (cr = nP);
    }
    function hd(o, r, c) {
      var f = ka(), v = Pr.transition;
      try {
        Pr.transition = null, Lo(vr), XF(o, r, c, f);
      } finally {
        Pr.transition = v, Lo(f);
      }
      return null;
    }
    function XF(o, r, c, f) {
      do
        _l();
      while (Uc !== null);
      if (lj(), (gn & (Dr | hi)) !== sr)
        throw new Error("Should not already be working.");
      var v = o.finishedWork, T = o.finishedLanes;
      if (lp(T), v === null)
        return Km(), null;
      if (T === tt && p("root.finishedLanes should not be empty during a commit. This is a bug in React."), o.finishedWork = null, o.finishedLanes = tt, v === o.current)
        throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
      o.callbackNode = null, o.callbackPriority = vn;
      var D = sn(v.lanes, v.childLanes);
      ih(o, D), o === sa && (sa = null, yo = null, lr = tt), ((v.subtreeFlags & Ca) !== jt || (v.flags & Ca) !== jt) && (fd || (fd = !0, gk = c, Ek(ai, function() {
        return _l(), null;
      })));
      var A = (v.subtreeFlags & (sc | Vr | hr | Ca)) !== jt, j = (v.flags & (sc | Vr | hr | Ca)) !== jt;
      if (A || j) {
        var G = Pr.transition;
        Pr.transition = null;
        var ee = ka();
        Lo(vr);
        var ye = gn;
        gn |= hi, dk.current = null, Qz(o, v), pO(), uF(o, v, T), u2(o.containerInfo), o.current = v, _b(T), dF(v, o, T), cc(), Db(), gn = ye, Lo(ee), Pr.transition = G;
      } else
        o.current = v, pO();
      var he = fd;
      if (fd ? (fd = !1, Uc = o, mv = T) : (Sf = 0, EC = null), D = o.pendingLanes, D === tt && (xf = null), he || yP(o.current, !1), Ni(v.stateNode, f), tr && o.memoizedUpdaters.clear(), DF(), $a(o, io()), r !== null)
        for (var Ve = o.onRecoverableError, Be = 0; Be < r.length; Be++) {
          var Qe = r[Be], Pt = Qe.stack, Ut = Qe.digest;
          Ve(Qe.value, {
            componentStack: Pt,
            digest: Ut
          });
        }
      if (wC) {
        wC = !1;
        var zt = hk;
        throw hk = null, zt;
      }
      return jr(mv, Gt) && o.tag !== Nc && _l(), D = o.pendingLanes, jr(D, Gt) ? (iz(), o === bk ? hv++ : (hv = 0, bk = o)) : hv = 0, Lc(), Km(), null;
    }
    function _l() {
      if (Uc !== null) {
        var o = Uu(mv), r = jx(Ai, o), c = Pr.transition, f = ka();
        try {
          return Pr.transition = null, Lo(r), JF();
        } finally {
          Lo(f), Pr.transition = c;
        }
      }
      return !1;
    }
    function ZF(o) {
      vk.push(o), fd || (fd = !0, Ek(ai, function() {
        return _l(), null;
      }));
    }
    function JF() {
      if (Uc === null)
        return !1;
      var o = gk;
      gk = null;
      var r = Uc, c = mv;
      if (Uc = null, mv = tt, (gn & (Dr | hi)) !== sr)
        throw new Error("Cannot flush passive effects while already rendering.");
      yk = !0, RC = !1, Vb(c);
      var f = gn;
      gn |= hi, bF(r.current), mF(r, r.current, c, o);
      {
        var v = vk;
        vk = [];
        for (var T = 0; T < v.length; T++) {
          var D = v[T];
          eF(r, D);
        }
      }
      Nu(), yP(r.current, !0), gn = f, Lc(), RC ? r === EC ? Sf++ : (Sf = 0, EC = r) : Sf = 0, yk = !1, RC = !1, ys(r);
      {
        var A = r.current.stateNode;
        A.effectDuration = 0, A.passiveEffectDuration = 0;
      }
      return !0;
    }
    function vP(o) {
      return xf !== null && xf.has(o);
    }
    function ej(o) {
      xf === null ? xf = /* @__PURE__ */ new Set([o]) : xf.add(o);
    }
    function tj(o) {
      wC || (wC = !0, hk = o);
    }
    var nj = tj;
    function gP(o, r, c) {
      var f = ud(c, r), v = mO(o, f, Gt), T = Ac(o, v, Gt), D = la();
      T !== null && (gl(T, Gt, D), $a(T, D));
    }
    function Zn(o, r, c) {
      if (qz(c), yv(!1), o.tag === S) {
        gP(o, o, c);
        return;
      }
      var f = null;
      for (f = r; f !== null; ) {
        if (f.tag === S) {
          gP(f, o, c);
          return;
        } else if (f.tag === b) {
          var v = f.type, T = f.stateNode;
          if (typeof v.getDerivedStateFromError == "function" || typeof T.componentDidCatch == "function" && !vP(T)) {
            var D = ud(c, o), A = HS(f, D, Gt), j = Ac(f, A, Gt), G = la();
            j !== null && (gl(j, Gt, G), $a(j, G));
            return;
          }
        }
        f = f.return;
      }
      p(`Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.

Error message:

%s`, c);
    }
    function oj(o, r, c) {
      var f = o.pingCache;
      f !== null && f.delete(r);
      var v = la();
      ah(o, c), pj(o), sa === o && vl(lr, c) && (cr === cv || cr === xC && Dp(lr) && io() - mk < oP ? md(o, tt) : kC = sn(kC, c)), $a(o, v);
    }
    function bP(o, r) {
      r === vn && (r = _F(o));
      var c = la(), f = Pa(o, r);
      f !== null && (gl(f, r, c), $a(f, c));
    }
    function rj(o) {
      var r = o.memoizedState, c = vn;
      r !== null && (c = r.retryLane), bP(o, c);
    }
    function aj(o, r) {
      var c = vn, f;
      switch (o.tag) {
        case B:
          f = o.stateNode;
          var v = o.memoizedState;
          v !== null && (c = v.retryLane);
          break;
        case Y:
          f = o.stateNode;
          break;
        default:
          throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
      }
      f !== null && f.delete(r), bP(o, c);
    }
    function ij(o) {
      return o < 120 ? 120 : o < 480 ? 480 : o < 1080 ? 1080 : o < 1920 ? 1920 : o < 3e3 ? 3e3 : o < 4320 ? 4320 : NF(o / 1960) * 1960;
    }
    function sj() {
      if (hv > IF)
        throw hv = 0, bk = null, new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
      Sf > AF && (Sf = 0, EC = null, p("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render."));
    }
    function lj() {
      Ui.flushLegacyContextWarning(), Ui.flushPendingUnsafeLifecycleWarnings();
    }
    function yP(o, r) {
      In(o), $C(o, _r, EF), r && $C(o, il, OF), $C(o, _r, wF), r && $C(o, il, RF), Mo();
    }
    function $C(o, r, c) {
      for (var f = o, v = null; f !== null; ) {
        var T = f.subtreeFlags & r;
        f !== v && f.child !== null && T !== jt ? f = f.child : ((f.flags & r) !== jt && c(f), f.sibling !== null ? f = f.sibling : f = v = f.return);
      }
    }
    var NC = null;
    function CP(o) {
      {
        if ((gn & Dr) !== sr || !(o.mode & un))
          return;
        var r = o.tag;
        if (r !== x && r !== S && r !== b && r !== g && r !== I && r !== P && r !== F)
          return;
        var c = on(o) || "ReactComponent";
        if (NC !== null) {
          if (NC.has(c))
            return;
          NC.add(c);
        } else
          NC = /* @__PURE__ */ new Set([c]);
        var f = To;
        try {
          In(o), p("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
        } finally {
          f ? In(o) : Mo();
        }
      }
    }
    var kk;
    {
      var cj = null;
      kk = function(o, r, c) {
        var f = OP(cj, r);
        try {
          return NO(o, r, c);
        } catch (T) {
          if (xB() || T !== null && typeof T == "object" && typeof T.then == "function")
            throw T;
          if (Vy(), FE(), BO(o, r), OP(r, f), r.mode & Wt && VS(r), al(null, NO, null, o, r, c), Ix()) {
            var v = Vm();
            typeof v == "object" && v !== null && v._suppressLogging && typeof T == "object" && T !== null && !T._suppressLogging && (T._suppressLogging = !0);
          }
          throw T;
        }
      };
    }
    var TP = !1, wk;
    wk = /* @__PURE__ */ new Set();
    function uj(o) {
      if (ma && !oz())
        switch (o.tag) {
          case g:
          case I:
          case F: {
            var r = yo && on(yo) || "Unknown", c = r;
            if (!wk.has(c)) {
              wk.add(c);
              var f = on(o) || "Unknown";
              p("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", f, r, r);
            }
            break;
          }
          case b: {
            TP || (p("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state."), TP = !0);
            break;
          }
        }
    }
    function bv(o, r) {
      if (tr) {
        var c = o.memoizedUpdaters;
        c.forEach(function(f) {
          sh(o, f, r);
        });
      }
    }
    var Rk = {};
    function Ek(o, r) {
      {
        var c = Xi.current;
        return c !== null ? (c.push(r), Rk) : rp(o, r);
      }
    }
    function xP(o) {
      if (o !== Rk)
        return Pb(o);
    }
    function SP() {
      return Xi.current !== null;
    }
    function dj(o) {
      {
        if (o.mode & un) {
          if (!eP())
            return;
        } else if (!$F() || gn !== sr || o.tag !== g && o.tag !== I && o.tag !== F)
          return;
        if (Xi.current === null) {
          var r = To;
          try {
            In(o), p(`An update to %s inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act`, on(o));
          } finally {
            r ? In(o) : Mo();
          }
        }
      }
    }
    function pj(o) {
      o.tag !== Nc && eP() && Xi.current === null && p(`A suspended resource finished loading inside a test, but the event was not wrapped in act(...).

When testing, code that resolves suspended data should be wrapped into act(...):

act(() => {
  /* finish loading suspended data */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act`);
    }
    function yv(o) {
      iP = o;
    }
    var vi = null, kf = null, fj = function(o) {
      vi = o;
    };
    function wf(o) {
      {
        if (vi === null)
          return o;
        var r = vi(o);
        return r === void 0 ? o : r.current;
      }
    }
    function Ok(o) {
      return wf(o);
    }
    function Pk(o) {
      {
        if (vi === null)
          return o;
        var r = vi(o);
        if (r === void 0) {
          if (o != null && typeof o.render == "function") {
            var c = wf(o.render);
            if (o.render !== c) {
              var f = {
                $$typeof: Co,
                render: c
              };
              return o.displayName !== void 0 && (f.displayName = o.displayName), f;
            }
          }
          return o;
        }
        return r.current;
      }
    }
    function kP(o, r) {
      {
        if (vi === null)
          return !1;
        var c = o.elementType, f = r.type, v = !1, T = typeof f == "object" && f !== null ? f.$$typeof : null;
        switch (o.tag) {
          case b: {
            typeof f == "function" && (v = !0);
            break;
          }
          case g: {
            (typeof f == "function" || T === Tt) && (v = !0);
            break;
          }
          case I: {
            (T === Co || T === Tt) && (v = !0);
            break;
          }
          case P:
          case F: {
            (T === it || T === Tt) && (v = !0);
            break;
          }
          default:
            return !1;
        }
        if (v) {
          var D = vi(c);
          if (D !== void 0 && D === vi(f))
            return !0;
        }
        return !1;
      }
    }
    function wP(o) {
      {
        if (vi === null || typeof WeakSet != "function")
          return;
        kf === null && (kf = /* @__PURE__ */ new WeakSet()), kf.add(o);
      }
    }
    var mj = function(o, r) {
      {
        if (vi === null)
          return;
        var c = r.staleFamilies, f = r.updatedFamilies;
        _l(), Al(function() {
          Dk(o.current, f, c);
        });
      }
    }, hj = function(o, r) {
      {
        if (o.context !== Ya)
          return;
        _l(), Al(function() {
          Cv(r, o, null, null);
        });
      }
    };
    function Dk(o, r, c) {
      {
        var f = o.alternate, v = o.child, T = o.sibling, D = o.tag, A = o.type, j = null;
        switch (D) {
          case g:
          case F:
          case b:
            j = A;
            break;
          case I:
            j = A.render;
            break;
        }
        if (vi === null)
          throw new Error("Expected resolveFamily to be set during hot reload.");
        var G = !1, ee = !1;
        if (j !== null) {
          var ye = vi(j);
          ye !== void 0 && (c.has(ye) ? ee = !0 : r.has(ye) && (D === b ? ee = !0 : G = !0));
        }
        if (kf !== null && (kf.has(o) || f !== null && kf.has(f)) && (ee = !0), ee && (o._debugNeedsRemount = !0), ee || G) {
          var he = Pa(o, Gt);
          he !== null && ur(he, o, Gt, Hn);
        }
        v !== null && !ee && Dk(v, r, c), T !== null && Dk(T, r, c);
      }
    }
    var vj = function(o, r) {
      {
        var c = /* @__PURE__ */ new Set(), f = new Set(r.map(function(v) {
          return v.current;
        }));
        return Mk(o.current, f, c), c;
      }
    };
    function Mk(o, r, c) {
      {
        var f = o.child, v = o.sibling, T = o.tag, D = o.type, A = null;
        switch (T) {
          case g:
          case F:
          case b:
            A = D;
            break;
          case I:
            A = D.render;
            break;
        }
        var j = !1;
        A !== null && r.has(A) && (j = !0), j ? gj(o, c) : f !== null && Mk(f, r, c), v !== null && Mk(v, r, c);
      }
    }
    function gj(o, r) {
      {
        var c = bj(o, r);
        if (c)
          return;
        for (var f = o; ; ) {
          switch (f.tag) {
            case R:
              r.add(f.stateNode);
              return;
            case E:
              r.add(f.stateNode.containerInfo);
              return;
            case S:
              r.add(f.stateNode.containerInfo);
              return;
          }
          if (f.return === null)
            throw new Error("Expected to reach root first.");
          f = f.return;
        }
      }
    }
    function bj(o, r) {
      for (var c = o, f = !1; ; ) {
        if (c.tag === R)
          f = !0, r.add(c.stateNode);
        else if (c.child !== null) {
          c.child.return = c, c = c.child;
          continue;
        }
        if (c === o)
          return f;
        for (; c.sibling === null; ) {
          if (c.return === null || c.return === o)
            return f;
          c = c.return;
        }
        c.sibling.return = c.return, c = c.sibling;
      }
      return !1;
    }
    var $k;
    {
      $k = !1;
      try {
        var RP = Object.preventExtensions({});
      } catch {
        $k = !0;
      }
    }
    function yj(o, r, c, f) {
      this.tag = o, this.key = c, this.elementType = null, this.type = null, this.stateNode = null, this.return = null, this.child = null, this.sibling = null, this.index = 0, this.ref = null, this.pendingProps = r, this.memoizedProps = null, this.updateQueue = null, this.memoizedState = null, this.dependencies = null, this.mode = f, this.flags = jt, this.subtreeFlags = jt, this.deletions = null, this.lanes = tt, this.childLanes = tt, this.alternate = null, this.actualDuration = Number.NaN, this.actualStartTime = Number.NaN, this.selfBaseDuration = Number.NaN, this.treeBaseDuration = Number.NaN, this.actualDuration = 0, this.actualStartTime = -1, this.selfBaseDuration = 0, this.treeBaseDuration = 0, this._debugSource = null, this._debugOwner = null, this._debugNeedsRemount = !1, this._debugHookTypes = null, !$k && typeof Object.preventExtensions == "function" && Object.preventExtensions(this);
    }
    var qa = function(o, r, c, f) {
      return new yj(o, r, c, f);
    };
    function Nk(o) {
      var r = o.prototype;
      return !!(r && r.isReactComponent);
    }
    function Cj(o) {
      return typeof o == "function" && !Nk(o) && o.defaultProps === void 0;
    }
    function Tj(o) {
      if (typeof o == "function")
        return Nk(o) ? b : g;
      if (o != null) {
        var r = o.$$typeof;
        if (r === Co)
          return I;
        if (r === it)
          return P;
      }
      return x;
    }
    function vd(o, r) {
      var c = o.alternate;
      c === null ? (c = qa(o.tag, r, o.key, o.mode), c.elementType = o.elementType, c.type = o.type, c.stateNode = o.stateNode, c._debugSource = o._debugSource, c._debugOwner = o._debugOwner, c._debugHookTypes = o._debugHookTypes, c.alternate = o, o.alternate = c) : (c.pendingProps = r, c.type = o.type, c.flags = jt, c.subtreeFlags = jt, c.deletions = null, c.actualDuration = 0, c.actualStartTime = -1), c.flags = o.flags & er, c.childLanes = o.childLanes, c.lanes = o.lanes, c.child = o.child, c.memoizedProps = o.memoizedProps, c.memoizedState = o.memoizedState, c.updateQueue = o.updateQueue;
      var f = o.dependencies;
      switch (c.dependencies = f === null ? null : {
        lanes: f.lanes,
        firstContext: f.firstContext
      }, c.sibling = o.sibling, c.index = o.index, c.ref = o.ref, c.selfBaseDuration = o.selfBaseDuration, c.treeBaseDuration = o.treeBaseDuration, c._debugNeedsRemount = o._debugNeedsRemount, c.tag) {
        case x:
        case g:
        case F:
          c.type = wf(o.type);
          break;
        case b:
          c.type = Ok(o.type);
          break;
        case I:
          c.type = Pk(o.type);
          break;
      }
      return c;
    }
    function xj(o, r) {
      o.flags &= er | Gn;
      var c = o.alternate;
      if (c === null)
        o.childLanes = tt, o.lanes = r, o.child = null, o.subtreeFlags = jt, o.memoizedProps = null, o.memoizedState = null, o.updateQueue = null, o.dependencies = null, o.stateNode = null, o.selfBaseDuration = 0, o.treeBaseDuration = 0;
      else {
        o.childLanes = c.childLanes, o.lanes = c.lanes, o.child = c.child, o.subtreeFlags = jt, o.deletions = null, o.memoizedProps = c.memoizedProps, o.memoizedState = c.memoizedState, o.updateQueue = c.updateQueue, o.type = c.type;
        var f = c.dependencies;
        o.dependencies = f === null ? null : {
          lanes: f.lanes,
          firstContext: f.firstContext
        }, o.selfBaseDuration = c.selfBaseDuration, o.treeBaseDuration = c.treeBaseDuration;
      }
      return o;
    }
    function Sj(o, r, c) {
      var f;
      return o === Dy ? (f = un, r === !0 && (f |= so, f |= xa)) : f = Ht, tr && (f |= Wt), qa(S, null, null, f);
    }
    function Lk(o, r, c, f, v, T) {
      var D = x, A = o;
      if (typeof o == "function")
        Nk(o) ? (D = b, A = Ok(A)) : A = wf(A);
      else if (typeof o == "string")
        D = R;
      else
        e:
          switch (o) {
            case Jo:
              return Yc(c.children, v, T, r);
            case zo:
              D = O, v |= so, (v & un) !== Ht && (v |= xa);
              break;
            case Fo:
              return kj(c, v, T, r);
            case Ge:
              return wj(c, v, T, r);
            case Te:
              return Rj(c, v, T, r);
            case pn:
              return EP(c, v, T, r);
            case fr:
            case ln:
            case Gl:
            case mx:
            case Ct:
            default: {
              if (typeof o == "object" && o !== null)
                switch (o.$$typeof) {
                  case Nr:
                    D = V;
                    break e;
                  case jo:
                    D = N;
                    break e;
                  case Co:
                    D = I, A = Pk(A);
                    break e;
                  case it:
                    D = P;
                    break e;
                  case Tt:
                    D = H, A = null;
                    break e;
                }
              var j = "";
              {
                (o === void 0 || typeof o == "object" && o !== null && Object.keys(o).length === 0) && (j += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
                var G = f ? on(f) : null;
                G && (j += `

Check the render method of \`` + G + "`.");
              }
              throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (o == null ? o : typeof o) + "." + j));
            }
          }
      var ee = qa(D, c, r, v);
      return ee.elementType = o, ee.type = A, ee.lanes = T, ee._debugOwner = f, ee;
    }
    function Ik(o, r, c) {
      var f = null;
      f = o._owner;
      var v = o.type, T = o.key, D = o.props, A = Lk(v, T, D, f, r, c);
      return A._debugSource = o._source, A._debugOwner = o._owner, A;
    }
    function Yc(o, r, c, f) {
      var v = qa(M, o, f, r);
      return v.lanes = c, v;
    }
    function kj(o, r, c, f) {
      typeof o.id != "string" && p('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof o.id);
      var v = qa(z, o, f, r | Wt);
      return v.elementType = Fo, v.lanes = c, v.stateNode = {
        effectDuration: 0,
        passiveEffectDuration: 0
      }, v;
    }
    function wj(o, r, c, f) {
      var v = qa(B, o, f, r);
      return v.elementType = Ge, v.lanes = c, v;
    }
    function Rj(o, r, c, f) {
      var v = qa(Y, o, f, r);
      return v.elementType = Te, v.lanes = c, v;
    }
    function EP(o, r, c, f) {
      var v = qa(Z, o, f, r);
      v.elementType = pn, v.lanes = c;
      var T = {
        isHidden: !1
      };
      return v.stateNode = T, v;
    }
    function Ak(o, r, c) {
      var f = qa($, o, null, r);
      return f.lanes = c, f;
    }
    function Ej() {
      var o = qa(R, null, null, Ht);
      return o.elementType = "DELETED", o;
    }
    function Oj(o) {
      var r = qa(Q, null, null, Ht);
      return r.stateNode = o, r;
    }
    function _k(o, r, c) {
      var f = o.children !== null ? o.children : [], v = qa(E, f, o.key, r);
      return v.lanes = c, v.stateNode = {
        containerInfo: o.containerInfo,
        pendingChildren: null,
        // Used by persistent updates
        implementation: o.implementation
      }, v;
    }
    function OP(o, r) {
      return o === null && (o = qa(x, null, null, Ht)), o.tag = r.tag, o.key = r.key, o.elementType = r.elementType, o.type = r.type, o.stateNode = r.stateNode, o.return = r.return, o.child = r.child, o.sibling = r.sibling, o.index = r.index, o.ref = r.ref, o.pendingProps = r.pendingProps, o.memoizedProps = r.memoizedProps, o.updateQueue = r.updateQueue, o.memoizedState = r.memoizedState, o.dependencies = r.dependencies, o.mode = r.mode, o.flags = r.flags, o.subtreeFlags = r.subtreeFlags, o.deletions = r.deletions, o.lanes = r.lanes, o.childLanes = r.childLanes, o.alternate = r.alternate, o.actualDuration = r.actualDuration, o.actualStartTime = r.actualStartTime, o.selfBaseDuration = r.selfBaseDuration, o.treeBaseDuration = r.treeBaseDuration, o._debugSource = r._debugSource, o._debugOwner = r._debugOwner, o._debugNeedsRemount = r._debugNeedsRemount, o._debugHookTypes = r._debugHookTypes, o;
    }
    function Pj(o, r, c, f, v) {
      this.tag = r, this.containerInfo = o, this.pendingChildren = null, this.current = null, this.pingCache = null, this.finishedWork = null, this.timeoutHandle = b0, this.context = null, this.pendingContext = null, this.callbackNode = null, this.callbackPriority = vn, this.eventTimes = $p(tt), this.expirationTimes = $p(Hn), this.pendingLanes = tt, this.suspendedLanes = tt, this.pingedLanes = tt, this.expiredLanes = tt, this.mutableReadLanes = tt, this.finishedLanes = tt, this.entangledLanes = tt, this.entanglements = $p(tt), this.identifierPrefix = f, this.onRecoverableError = v, this.mutableSourceEagerHydrationData = null, this.effectDuration = 0, this.passiveEffectDuration = 0;
      {
        this.memoizedUpdaters = /* @__PURE__ */ new Set();
        for (var T = this.pendingUpdatersLaneMap = [], D = 0; D < Qn; D++)
          T.push(/* @__PURE__ */ new Set());
      }
      switch (r) {
        case Dy:
          this._debugRootType = c ? "hydrateRoot()" : "createRoot()";
          break;
        case Nc:
          this._debugRootType = c ? "hydrate()" : "render()";
          break;
      }
    }
    function PP(o, r, c, f, v, T, D, A, j, G) {
      var ee = new Pj(o, r, c, A, j), ye = Sj(r, T);
      ee.current = ye, ye.stateNode = ee;
      {
        var he = {
          element: f,
          isDehydrated: c,
          cache: null,
          // not enabled yet
          transitions: null,
          pendingSuspenseBoundaries: null
        };
        ye.memoizedState = he;
      }
      return W0(ye), ee;
    }
    var Vk = "18.2.0";
    function Dj(o, r, c) {
      var f = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
      return dt(f), {
        // This tag allow us to uniquely identify this as a React Portal
        $$typeof: ao,
        key: f == null ? null : "" + f,
        children: o,
        containerInfo: r,
        implementation: c
      };
    }
    var Bk, zk;
    Bk = !1, zk = {};
    function DP(o) {
      if (!o)
        return Ya;
      var r = ga(o), c = fB(r);
      if (r.tag === b) {
        var f = r.type;
        if ($s(f))
          return nE(r, f, c);
      }
      return c;
    }
    function Mj(o, r) {
      {
        var c = ga(o);
        if (c === void 0) {
          if (typeof o.render == "function")
            throw new Error("Unable to find node on an unmounted component.");
          var f = Object.keys(o).join(",");
          throw new Error("Argument appears to not be a ReactComponent. Keys: " + f);
        }
        var v = Ta(c);
        if (v === null)
          return null;
        if (v.mode & so) {
          var T = on(c) || "Component";
          if (!zk[T]) {
            zk[T] = !0;
            var D = To;
            try {
              In(v), c.mode & so ? p("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", r, r, T) : p("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", r, r, T);
            } finally {
              D ? In(D) : Mo();
            }
          }
        }
        return v.stateNode;
      }
    }
    function MP(o, r, c, f, v, T, D, A) {
      var j = !1, G = null;
      return PP(o, r, j, G, c, f, v, T, D);
    }
    function $P(o, r, c, f, v, T, D, A, j, G) {
      var ee = !0, ye = PP(c, f, ee, o, v, T, D, A, j);
      ye.context = DP(null);
      var he = ye.current, Ve = la(), Be = Hc(he), Qe = $l(Ve, Be);
      return Qe.callback = r ?? null, Ac(he, Qe, Be), VF(ye, Be, Ve), ye;
    }
    function Cv(o, r, c, f) {
      Mb(r, o);
      var v = r.current, T = la(), D = Hc(v);
      ll(D);
      var A = DP(c);
      r.context === null ? r.context = A : r.pendingContext = A, ma && To !== null && !Bk && (Bk = !0, p(`Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.

Check the render method of %s.`, on(To) || "Unknown"));
      var j = $l(T, D);
      j.payload = {
        element: o
      }, f = f === void 0 ? null : f, f !== null && (typeof f != "function" && p("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", f), j.callback = f);
      var G = Ac(v, j, D);
      return G !== null && (ur(G, v, D, T), Uy(G, v, D)), D;
    }
    function LC(o) {
      var r = o.current;
      if (!r.child)
        return null;
      switch (r.child.tag) {
        case R:
          return r.child.stateNode;
        default:
          return r.child.stateNode;
      }
    }
    function $j(o) {
      switch (o.tag) {
        case S: {
          var r = o.stateNode;
          if (Io(r)) {
            var c = Vx(r);
            jF(r, c);
          }
          break;
        }
        case B: {
          Al(function() {
            var v = Pa(o, Gt);
            if (v !== null) {
              var T = la();
              ur(v, o, Gt, T);
            }
          });
          var f = Gt;
          Fk(o, f);
          break;
        }
      }
    }
    function NP(o, r) {
      var c = o.memoizedState;
      c !== null && c.dehydrated !== null && (c.retryLane = Ub(c.retryLane, r));
    }
    function Fk(o, r) {
      NP(o, r);
      var c = o.alternate;
      c && NP(c, r);
    }
    function Nj(o) {
      if (o.tag === B) {
        var r = dc, c = Pa(o, r);
        if (c !== null) {
          var f = la();
          ur(c, o, r, f);
        }
        Fk(o, r);
      }
    }
    function Lj(o) {
      if (o.tag === B) {
        var r = Hc(o), c = Pa(o, r);
        if (c !== null) {
          var f = la();
          ur(c, o, r, f);
        }
        Fk(o, r);
      }
    }
    function LP(o) {
      var r = Ob(o);
      return r === null ? null : r.stateNode;
    }
    var IP = function(o) {
      return null;
    };
    function Ij(o) {
      return IP(o);
    }
    var AP = function(o) {
      return !1;
    };
    function Aj(o) {
      return AP(o);
    }
    var _P = null, VP = null, BP = null, zP = null, FP = null, jP = null, UP = null, HP = null, WP = null;
    {
      var YP = function(o, r, c) {
        var f = r[c], v = Uo(o) ? o.slice() : fn({}, o);
        return c + 1 === r.length ? (Uo(v) ? v.splice(f, 1) : delete v[f], v) : (v[f] = YP(o[f], r, c + 1), v);
      }, qP = function(o, r) {
        return YP(o, r, 0);
      }, GP = function(o, r, c, f) {
        var v = r[f], T = Uo(o) ? o.slice() : fn({}, o);
        if (f + 1 === r.length) {
          var D = c[f];
          T[D] = T[v], Uo(T) ? T.splice(v, 1) : delete T[v];
        } else
          T[v] = GP(
            // $FlowFixMe number or string is fine here
            o[v],
            r,
            c,
            f + 1
          );
        return T;
      }, KP = function(o, r, c) {
        if (r.length !== c.length) {
          d("copyWithRename() expects paths of the same length");
          return;
        } else
          for (var f = 0; f < c.length - 1; f++)
            if (r[f] !== c[f]) {
              d("copyWithRename() expects paths to be the same except for the deepest key");
              return;
            }
        return GP(o, r, c, 0);
      }, QP = function(o, r, c, f) {
        if (c >= r.length)
          return f;
        var v = r[c], T = Uo(o) ? o.slice() : fn({}, o);
        return T[v] = QP(o[v], r, c + 1, f), T;
      }, XP = function(o, r, c) {
        return QP(o, r, 0, c);
      }, jk = function(o, r) {
        for (var c = o.memoizedState; c !== null && r > 0; )
          c = c.next, r--;
        return c;
      };
      _P = function(o, r, c, f) {
        var v = jk(o, r);
        if (v !== null) {
          var T = XP(v.memoizedState, c, f);
          v.memoizedState = T, v.baseState = T, o.memoizedProps = fn({}, o.memoizedProps);
          var D = Pa(o, Gt);
          D !== null && ur(D, o, Gt, Hn);
        }
      }, VP = function(o, r, c) {
        var f = jk(o, r);
        if (f !== null) {
          var v = qP(f.memoizedState, c);
          f.memoizedState = v, f.baseState = v, o.memoizedProps = fn({}, o.memoizedProps);
          var T = Pa(o, Gt);
          T !== null && ur(T, o, Gt, Hn);
        }
      }, BP = function(o, r, c, f) {
        var v = jk(o, r);
        if (v !== null) {
          var T = KP(v.memoizedState, c, f);
          v.memoizedState = T, v.baseState = T, o.memoizedProps = fn({}, o.memoizedProps);
          var D = Pa(o, Gt);
          D !== null && ur(D, o, Gt, Hn);
        }
      }, zP = function(o, r, c) {
        o.pendingProps = XP(o.memoizedProps, r, c), o.alternate && (o.alternate.pendingProps = o.pendingProps);
        var f = Pa(o, Gt);
        f !== null && ur(f, o, Gt, Hn);
      }, FP = function(o, r) {
        o.pendingProps = qP(o.memoizedProps, r), o.alternate && (o.alternate.pendingProps = o.pendingProps);
        var c = Pa(o, Gt);
        c !== null && ur(c, o, Gt, Hn);
      }, jP = function(o, r, c) {
        o.pendingProps = KP(o.memoizedProps, r, c), o.alternate && (o.alternate.pendingProps = o.pendingProps);
        var f = Pa(o, Gt);
        f !== null && ur(f, o, Gt, Hn);
      }, UP = function(o) {
        var r = Pa(o, Gt);
        r !== null && ur(r, o, Gt, Hn);
      }, HP = function(o) {
        IP = o;
      }, WP = function(o) {
        AP = o;
      };
    }
    function _j(o) {
      var r = Ta(o);
      return r === null ? null : r.stateNode;
    }
    function Vj(o) {
      return null;
    }
    function Bj() {
      return To;
    }
    function zj(o) {
      var r = o.findFiberByHostInstance, c = a.ReactCurrentDispatcher;
      return qm({
        bundleType: o.bundleType,
        version: o.version,
        rendererPackageName: o.rendererPackageName,
        rendererConfig: o.rendererConfig,
        overrideHookState: _P,
        overrideHookStateDeletePath: VP,
        overrideHookStateRenamePath: BP,
        overrideProps: zP,
        overridePropsDeletePath: FP,
        overridePropsRenamePath: jP,
        setErrorHandler: HP,
        setSuspenseHandler: WP,
        scheduleUpdate: UP,
        currentDispatcherRef: c,
        findHostInstanceByFiber: _j,
        findFiberByHostInstance: r || Vj,
        // React Refresh
        findHostInstancesForRefresh: vj,
        scheduleRefresh: mj,
        scheduleRoot: hj,
        setRefreshHandler: fj,
        // Enables DevTools to append owner stacks to error messages in DEV mode.
        getCurrentFiber: Bj,
        // Enables DevTools to detect reconciler version rather than renderer version
        // which may not match for third party renderers.
        reconcilerVersion: Vk
      });
    }
    var ZP = typeof reportError == "function" ? (
      // In modern browsers, reportError will dispatch an error event,
      // emulating an uncaught JavaScript error.
      reportError
    ) : function(o) {
      console.error(o);
    };
    function Uk(o) {
      this._internalRoot = o;
    }
    IC.prototype.render = Uk.prototype.render = function(o) {
      var r = this._internalRoot;
      if (r === null)
        throw new Error("Cannot update an unmounted root.");
      {
        typeof arguments[1] == "function" ? p("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().") : AC(arguments[1]) ? p("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.") : typeof arguments[1] < "u" && p("You passed a second argument to root.render(...) but it only accepts one argument.");
        var c = r.containerInfo;
        if (c.nodeType !== xo) {
          var f = LP(r.current);
          f && f.parentNode !== c && p("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
        }
      }
      Cv(o, r, null, null);
    }, IC.prototype.unmount = Uk.prototype.unmount = function() {
      typeof arguments[0] == "function" && p("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
      var o = this._internalRoot;
      if (o !== null) {
        this._internalRoot = null;
        var r = o.containerInfo;
        uP() && p("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition."), Al(function() {
          Cv(null, o, null, null);
        }), XR(r);
      }
    };
    function Fj(o, r) {
      if (!AC(o))
        throw new Error("createRoot(...): Target container is not a DOM element.");
      JP(o);
      var c = !1, f = !1, v = "", T = ZP;
      r != null && (r.hydrate ? d("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.") : typeof r == "object" && r !== null && r.$$typeof === to && p(`You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:

  let root = createRoot(domContainer);
  root.render(<App />);`), r.unstable_strictMode === !0 && (c = !0), r.identifierPrefix !== void 0 && (v = r.identifierPrefix), r.onRecoverableError !== void 0 && (T = r.onRecoverableError), r.transitionCallbacks !== void 0 && r.transitionCallbacks);
      var D = MP(o, Dy, null, c, f, v, T);
      Sy(D.current, o);
      var A = o.nodeType === xo ? o.parentNode : o;
      return Oh(A), new Uk(D);
    }
    function IC(o) {
      this._internalRoot = o;
    }
    function jj(o) {
      o && Xb(o);
    }
    IC.prototype.unstable_scheduleHydration = jj;
    function Uj(o, r, c) {
      if (!AC(o))
        throw new Error("hydrateRoot(...): Target container is not a DOM element.");
      JP(o), r === void 0 && p("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
      var f = c ?? null, v = c != null && c.hydratedSources || null, T = !1, D = !1, A = "", j = ZP;
      c != null && (c.unstable_strictMode === !0 && (T = !0), c.identifierPrefix !== void 0 && (A = c.identifierPrefix), c.onRecoverableError !== void 0 && (j = c.onRecoverableError));
      var G = $P(r, null, o, Dy, f, T, D, A, j);
      if (Sy(G.current, o), Oh(o), v)
        for (var ee = 0; ee < v.length; ee++) {
          var ye = v[ee];
          XB(G, ye);
        }
      return new IC(G);
    }
    function AC(o) {
      return !!(o && (o.nodeType === Lr || o.nodeType === Fa || o.nodeType === Js || !Ue));
    }
    function Tv(o) {
      return !!(o && (o.nodeType === Lr || o.nodeType === Fa || o.nodeType === Js || o.nodeType === xo && o.nodeValue === " react-mount-point-unstable "));
    }
    function JP(o) {
      o.nodeType === Lr && o.tagName && o.tagName.toUpperCase() === "BODY" && p("createRoot(): Creating roots directly with document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try using a container element created for your app."), Bh(o) && (o._reactRootContainer ? p("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.") : p("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it."));
    }
    var Hj = a.ReactCurrentOwner, eD;
    eD = function(o) {
      if (o._reactRootContainer && o.nodeType !== xo) {
        var r = LP(o._reactRootContainer.current);
        r && r.parentNode !== o && p("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
      }
      var c = !!o._reactRootContainer, f = Hk(o), v = !!(f && Mc(f));
      v && !c && p("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render."), o.nodeType === Lr && o.tagName && o.tagName.toUpperCase() === "BODY" && p("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
    };
    function Hk(o) {
      return o ? o.nodeType === Fa ? o.documentElement : o.firstChild : null;
    }
    function tD() {
    }
    function Wj(o, r, c, f, v) {
      if (v) {
        if (typeof f == "function") {
          var T = f;
          f = function() {
            var he = LC(D);
            T.call(he);
          };
        }
        var D = $P(
          r,
          f,
          o,
          Nc,
          null,
          // hydrationCallbacks
          !1,
          // isStrictMode
          !1,
          // concurrentUpdatesByDefaultOverride,
          "",
          // identifierPrefix
          tD
        );
        o._reactRootContainer = D, Sy(D.current, o);
        var A = o.nodeType === xo ? o.parentNode : o;
        return Oh(A), Al(), D;
      } else {
        for (var j; j = o.lastChild; )
          o.removeChild(j);
        if (typeof f == "function") {
          var G = f;
          f = function() {
            var he = LC(ee);
            G.call(he);
          };
        }
        var ee = MP(
          o,
          Nc,
          null,
          // hydrationCallbacks
          !1,
          // isStrictMode
          !1,
          // concurrentUpdatesByDefaultOverride,
          "",
          // identifierPrefix
          tD
        );
        o._reactRootContainer = ee, Sy(ee.current, o);
        var ye = o.nodeType === xo ? o.parentNode : o;
        return Oh(ye), Al(function() {
          Cv(r, ee, c, f);
        }), ee;
      }
    }
    function Yj(o, r) {
      o !== null && typeof o != "function" && p("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", r, o);
    }
    function _C(o, r, c, f, v) {
      eD(c), Yj(v === void 0 ? null : v, "render");
      var T = c._reactRootContainer, D;
      if (!T)
        D = Wj(c, r, o, v, f);
      else {
        if (D = T, typeof v == "function") {
          var A = v;
          v = function() {
            var j = LC(D);
            A.call(j);
          };
        }
        Cv(r, D, o, v);
      }
      return LC(D);
    }
    function qj(o) {
      {
        var r = Hj.current;
        if (r !== null && r.stateNode !== null) {
          var c = r.stateNode._warnedAboutRefsInRender;
          c || p("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", jn(r.type) || "A component"), r.stateNode._warnedAboutRefsInRender = !0;
        }
      }
      return o == null ? null : o.nodeType === Lr ? o : Mj(o, "findDOMNode");
    }
    function Gj(o, r, c) {
      if (p("ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !Tv(r))
        throw new Error("Target container is not a DOM element.");
      {
        var f = Bh(r) && r._reactRootContainer === void 0;
        f && p("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call hydrateRoot(container, element)?");
      }
      return _C(null, o, r, !0, c);
    }
    function Kj(o, r, c) {
      if (p("ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !Tv(r))
        throw new Error("Target container is not a DOM element.");
      {
        var f = Bh(r) && r._reactRootContainer === void 0;
        f && p("You are calling ReactDOM.render() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.render(element)?");
      }
      return _C(null, o, r, !1, c);
    }
    function Qj(o, r, c, f) {
      if (p("ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported in React 18. Consider using a portal instead. Until you switch to the createRoot API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !Tv(c))
        throw new Error("Target container is not a DOM element.");
      if (o == null || !Du(o))
        throw new Error("parentComponent must be a valid React Component");
      return _C(o, r, c, !1, f);
    }
    function Xj(o) {
      if (!Tv(o))
        throw new Error("unmountComponentAtNode(...): Target container is not a DOM element.");
      {
        var r = Bh(o) && o._reactRootContainer === void 0;
        r && p("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?");
      }
      if (o._reactRootContainer) {
        {
          var c = Hk(o), f = c && !Mc(c);
          f && p("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
        }
        return Al(function() {
          _C(null, null, o, !1, function() {
            o._reactRootContainer = null, XR(o);
          });
        }), !0;
      } else {
        {
          var v = Hk(o), T = !!(v && Mc(v)), D = o.nodeType === Lr && Tv(o.parentNode) && !!o.parentNode._reactRootContainer;
          T && p("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", D ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
        }
        return !1;
      }
    }
    Nt($j), Wb(Nj), Wu(Lj), uh(ka), qb(ju), (typeof Map != "function" || // $FlowIssue Flow incorrectly thinks Map has no prototype
    Map.prototype == null || typeof Map.prototype.forEach != "function" || typeof Set != "function" || // $FlowIssue Flow incorrectly thinks Set has no prototype
    Set.prototype == null || typeof Set.prototype.clear != "function" || typeof Set.prototype.forEach != "function") && p("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"), wb(e2), Jd(Tk, UF, Al);
    function Zj(o, r) {
      var c = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
      if (!AC(r))
        throw new Error("Target container is not a DOM element.");
      return Dj(o, r, null, c);
    }
    function Jj(o, r, c, f) {
      return Qj(o, r, c, f);
    }
    var Wk = {
      usingClientEntryPoint: !1,
      // Keep in sync with ReactTestUtils.js.
      // This is an array for better minification.
      Events: [Mc, tf, ky, Zd, Eu, Tk]
    };
    function eU(o, r) {
      return Wk.usingClientEntryPoint || p('You are importing createRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".'), Fj(o, r);
    }
    function tU(o, r, c) {
      return Wk.usingClientEntryPoint || p('You are importing hydrateRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".'), Uj(o, r, c);
    }
    function nU(o) {
      return uP() && p("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task."), Al(o);
    }
    var oU = zj({
      findFiberByHostInstance: td,
      bundleType: 1,
      version: Vk,
      rendererPackageName: "react-dom"
    });
    if (!oU && Ce && window.top === window.self && (navigator.userAgent.indexOf("Chrome") > -1 && navigator.userAgent.indexOf("Edge") === -1 || navigator.userAgent.indexOf("Firefox") > -1)) {
      var nD = window.location.protocol;
      /^(https?|file):$/.test(nD) && console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (nD === "file:" ? `
You might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq` : ""), "font-weight:bold");
    }
    La.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Wk, La.createPortal = Zj, La.createRoot = eU, La.findDOMNode = qj, La.flushSync = nU, La.hydrate = Gj, La.hydrateRoot = tU, La.render = Kj, La.unmountComponentAtNode = Xj, La.unstable_batchedUpdates = Tk, La.unstable_renderSubtreeIntoContainer = Jj, La.version = Vk, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), La;
}
function AN() {
  if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function")) {
    if (process.env.NODE_ENV !== "production")
      throw new Error("^_^");
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(AN);
    } catch (e) {
      console.error(e);
    }
  }
}
process.env.NODE_ENV === "production" ? (AN(), kw.exports = X5()) : kw.exports = Z5();
var kT = kw.exports;
const UC = /* @__PURE__ */ MU(kT), DD = {
  disabled: !1
};
var J5 = process.env.NODE_ENV !== "production" ? t.oneOfType([t.number, t.shape({
  enter: t.number,
  exit: t.number,
  appear: t.number
}).isRequired]) : null, eW = process.env.NODE_ENV !== "production" ? t.oneOfType([t.string, t.shape({
  enter: t.string,
  exit: t.string,
  active: t.string
}), t.shape({
  enter: t.string,
  enterDone: t.string,
  enterActive: t.string,
  exit: t.string,
  exitDone: t.string,
  exitActive: t.string
})]) : null;
const wT = Ia.createContext(null);
var _N = function(n) {
  return n.scrollTop;
}, Fv = "unmounted", Cd = "exited", Td = "entering", Df = "entered", ww = "exiting", Wl = /* @__PURE__ */ function(e) {
  Qw(n, e);
  function n(s, u) {
    var d;
    d = e.call(this, s, u) || this;
    var p = u, h = p && !p.isMounting ? s.enter : s.appear, g;
    return d.appearStatus = null, s.in ? h ? (g = Cd, d.appearStatus = Td) : g = Df : s.unmountOnExit || s.mountOnEnter ? g = Fv : g = Cd, d.state = {
      status: g
    }, d.nextCallback = null, d;
  }
  n.getDerivedStateFromProps = function(u, d) {
    var p = u.in;
    return p && d.status === Fv ? {
      status: Cd
    } : null;
  };
  var a = n.prototype;
  return a.componentDidMount = function() {
    this.updateStatus(!0, this.appearStatus);
  }, a.componentDidUpdate = function(u) {
    var d = null;
    if (u !== this.props) {
      var p = this.state.status;
      this.props.in ? p !== Td && p !== Df && (d = Td) : (p === Td || p === Df) && (d = ww);
    }
    this.updateStatus(!1, d);
  }, a.componentWillUnmount = function() {
    this.cancelNextCallback();
  }, a.getTimeouts = function() {
    var u = this.props.timeout, d, p, h;
    return d = p = h = u, u != null && typeof u != "number" && (d = u.exit, p = u.enter, h = u.appear !== void 0 ? u.appear : p), {
      exit: d,
      enter: p,
      appear: h
    };
  }, a.updateStatus = function(u, d) {
    if (u === void 0 && (u = !1), d !== null)
      if (this.cancelNextCallback(), d === Td) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var p = this.props.nodeRef ? this.props.nodeRef.current : UC.findDOMNode(this);
          p && _N(p);
        }
        this.performEnter(u);
      } else
        this.performExit();
    else
      this.props.unmountOnExit && this.state.status === Cd && this.setState({
        status: Fv
      });
  }, a.performEnter = function(u) {
    var d = this, p = this.props.enter, h = this.context ? this.context.isMounting : u, g = this.props.nodeRef ? [h] : [UC.findDOMNode(this), h], b = g[0], x = g[1], S = this.getTimeouts(), E = h ? S.appear : S.enter;
    if (!u && !p || DD.disabled) {
      this.safeSetState({
        status: Df
      }, function() {
        d.props.onEntered(b);
      });
      return;
    }
    this.props.onEnter(b, x), this.safeSetState({
      status: Td
    }, function() {
      d.props.onEntering(b, x), d.onTransitionEnd(E, function() {
        d.safeSetState({
          status: Df
        }, function() {
          d.props.onEntered(b, x);
        });
      });
    });
  }, a.performExit = function() {
    var u = this, d = this.props.exit, p = this.getTimeouts(), h = this.props.nodeRef ? void 0 : UC.findDOMNode(this);
    if (!d || DD.disabled) {
      this.safeSetState({
        status: Cd
      }, function() {
        u.props.onExited(h);
      });
      return;
    }
    this.props.onExit(h), this.safeSetState({
      status: ww
    }, function() {
      u.props.onExiting(h), u.onTransitionEnd(p.exit, function() {
        u.safeSetState({
          status: Cd
        }, function() {
          u.props.onExited(h);
        });
      });
    });
  }, a.cancelNextCallback = function() {
    this.nextCallback !== null && (this.nextCallback.cancel(), this.nextCallback = null);
  }, a.safeSetState = function(u, d) {
    d = this.setNextCallback(d), this.setState(u, d);
  }, a.setNextCallback = function(u) {
    var d = this, p = !0;
    return this.nextCallback = function(h) {
      p && (p = !1, d.nextCallback = null, u(h));
    }, this.nextCallback.cancel = function() {
      p = !1;
    }, this.nextCallback;
  }, a.onTransitionEnd = function(u, d) {
    this.setNextCallback(d);
    var p = this.props.nodeRef ? this.props.nodeRef.current : UC.findDOMNode(this), h = u == null && !this.props.addEndListener;
    if (!p || h) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var g = this.props.nodeRef ? [this.nextCallback] : [p, this.nextCallback], b = g[0], x = g[1];
      this.props.addEndListener(b, x);
    }
    u != null && setTimeout(this.nextCallback, u);
  }, a.render = function() {
    var u = this.state.status;
    if (u === Fv)
      return null;
    var d = this.props, p = d.children;
    d.in, d.mountOnEnter, d.unmountOnExit, d.appear, d.enter, d.exit, d.timeout, d.addEndListener, d.onEnter, d.onEntering, d.onEntered, d.onExit, d.onExiting, d.onExited, d.nodeRef;
    var h = le(d, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      /* @__PURE__ */ Ia.createElement(wT.Provider, {
        value: null
      }, typeof p == "function" ? p(u, h) : Ia.cloneElement(Ia.Children.only(p), h))
    );
  }, n;
}(Ia.Component);
Wl.contextType = wT;
Wl.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: t.shape({
    current: typeof Element > "u" ? t.any : function(e, n, a, s, u, d) {
      var p = e[n];
      return t.instanceOf(p && "ownerDocument" in p ? p.ownerDocument.defaultView.Element : Element)(e, n, a, s, u, d);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: t.oneOfType([t.func.isRequired, t.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: t.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: t.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: t.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: t.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: t.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: t.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function(n) {
    var a = J5;
    n.addEndListener || (a = a.isRequired);
    for (var s = arguments.length, u = new Array(s > 1 ? s - 1 : 0), d = 1; d < s; d++)
      u[d - 1] = arguments[d];
    return a.apply(void 0, [n].concat(u));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: t.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: t.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: t.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: t.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: t.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: t.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: t.func
} : {};
function Of() {
}
Wl.defaultProps = {
  in: !1,
  mountOnEnter: !1,
  unmountOnExit: !1,
  appear: !1,
  enter: !0,
  exit: !0,
  onEnter: Of,
  onEntering: Of,
  onEntered: Of,
  onExit: Of,
  onExiting: Of,
  onExited: Of
};
Wl.UNMOUNTED = Fv;
Wl.EXITED = Cd;
Wl.ENTERING = Td;
Wl.ENTERED = Df;
Wl.EXITING = ww;
const Dd = Wl;
var tW = function(n, a) {
  return n && a && a.split(" ").forEach(function(s) {
    return q5(n, s);
  });
}, Jk = function(n, a) {
  return n && a && a.split(" ").forEach(function(s) {
    return G5(n, s);
  });
}, Xw = /* @__PURE__ */ function(e) {
  Qw(n, e);
  function n() {
    for (var s, u = arguments.length, d = new Array(u), p = 0; p < u; p++)
      d[p] = arguments[p];
    return s = e.call.apply(e, [this].concat(d)) || this, s.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    }, s.onEnter = function(h, g) {
      var b = s.resolveArguments(h, g), x = b[0], S = b[1];
      s.removeClasses(x, "exit"), s.addClass(x, S ? "appear" : "enter", "base"), s.props.onEnter && s.props.onEnter(h, g);
    }, s.onEntering = function(h, g) {
      var b = s.resolveArguments(h, g), x = b[0], S = b[1], E = S ? "appear" : "enter";
      s.addClass(x, E, "active"), s.props.onEntering && s.props.onEntering(h, g);
    }, s.onEntered = function(h, g) {
      var b = s.resolveArguments(h, g), x = b[0], S = b[1], E = S ? "appear" : "enter";
      s.removeClasses(x, E), s.addClass(x, E, "done"), s.props.onEntered && s.props.onEntered(h, g);
    }, s.onExit = function(h) {
      var g = s.resolveArguments(h), b = g[0];
      s.removeClasses(b, "appear"), s.removeClasses(b, "enter"), s.addClass(b, "exit", "base"), s.props.onExit && s.props.onExit(h);
    }, s.onExiting = function(h) {
      var g = s.resolveArguments(h), b = g[0];
      s.addClass(b, "exit", "active"), s.props.onExiting && s.props.onExiting(h);
    }, s.onExited = function(h) {
      var g = s.resolveArguments(h), b = g[0];
      s.removeClasses(b, "exit"), s.addClass(b, "exit", "done"), s.props.onExited && s.props.onExited(h);
    }, s.resolveArguments = function(h, g) {
      return s.props.nodeRef ? [s.props.nodeRef.current, h] : [h, g];
    }, s.getClassNames = function(h) {
      var g = s.props.classNames, b = typeof g == "string", x = b && g ? g + "-" : "", S = b ? "" + x + h : g[h], E = b ? S + "-active" : g[h + "Active"], R = b ? S + "-done" : g[h + "Done"];
      return {
        baseClassName: S,
        activeClassName: E,
        doneClassName: R
      };
    }, s;
  }
  var a = n.prototype;
  return a.addClass = function(u, d, p) {
    var h = this.getClassNames(d)[p + "ClassName"], g = this.getClassNames("enter"), b = g.doneClassName;
    d === "appear" && p === "done" && b && (h += " " + b), p === "active" && u && _N(u), h && (this.appliedClasses[d][p] = h, tW(u, h));
  }, a.removeClasses = function(u, d) {
    var p = this.appliedClasses[d], h = p.base, g = p.active, b = p.done;
    this.appliedClasses[d] = {}, h && Jk(u, h), g && Jk(u, g), b && Jk(u, b);
  }, a.render = function() {
    var u = this.props;
    u.classNames;
    var d = le(u, ["classNames"]);
    return /* @__PURE__ */ Ia.createElement(Dd, y({}, d, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  }, n;
}(Ia.Component);
Xw.defaultProps = {
  classNames: ""
};
Xw.propTypes = process.env.NODE_ENV !== "production" ? y({}, Dd.propTypes, {
  /**
   * The animation classNames applied to the component as it appears, enters,
   * exits or has finished the transition. A single name can be provided, which
   * will be suffixed for each stage, e.g. `classNames="fade"` applies:
   *
   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`
   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`
   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`
   *
   * A few details to note about how these classes are applied:
   *
   * 1. They are _joined_ with the ones that are already defined on the child
   *    component, so if you want to add some base styles, you can use
   *    `className` without worrying that it will be overridden.
   *
   * 2. If the transition component mounts with `in={false}`, no classes are
   *    applied yet. You might be expecting `*-exit-done`, but if you think
   *    about it, a component cannot finish exiting if it hasn't entered yet.
   *
   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This
   *    allows you to define different behavior for when appearing is done and
   *    when regular entering is done, using selectors like
   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply
   *    an epic entrance animation when element first appears in the DOM using
   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
   *    simply use `fade-enter-done` for defining both cases.
   *
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  appearDone: 'my-done-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply
   * spread them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  appearDone?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */
  classNames: eW,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: t.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: t.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: t.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExit: t.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExiting: t.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExited: t.func
}) : {};
const nW = Xw;
function oW(e) {
  if (e === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function Zw(e, n) {
  var a = function(d) {
    return n && sT(d) ? n(d) : d;
  }, s = /* @__PURE__ */ Object.create(null);
  return e && NU.map(e, function(u) {
    return u;
  }).forEach(function(u) {
    s[u.key] = a(u);
  }), s;
}
function rW(e, n) {
  e = e || {}, n = n || {};
  function a(x) {
    return x in n ? n[x] : e[x];
  }
  var s = /* @__PURE__ */ Object.create(null), u = [];
  for (var d in e)
    d in n ? u.length && (s[d] = u, u = []) : u.push(d);
  var p, h = {};
  for (var g in n) {
    if (s[g])
      for (p = 0; p < s[g].length; p++) {
        var b = s[g][p];
        h[s[g][p]] = a(b);
      }
    h[g] = a(g);
  }
  for (p = 0; p < u.length; p++)
    h[u[p]] = a(u[p]);
  return h;
}
function Sd(e, n, a) {
  return a[n] != null ? a[n] : e.props[n];
}
function aW(e, n) {
  return Zw(e.children, function(a) {
    return lT(a, {
      onExited: n.bind(null, a),
      in: !0,
      appear: Sd(a, "appear", e),
      enter: Sd(a, "enter", e),
      exit: Sd(a, "exit", e)
    });
  });
}
function iW(e, n, a) {
  var s = Zw(e.children), u = rW(n, s);
  return Object.keys(u).forEach(function(d) {
    var p = u[d];
    if (sT(p)) {
      var h = d in n, g = d in s, b = n[d], x = sT(b) && !b.props.in;
      g && (!h || x) ? u[d] = lT(p, {
        onExited: a.bind(null, p),
        in: !0,
        exit: Sd(p, "exit", e),
        enter: Sd(p, "enter", e)
      }) : !g && h && !x ? u[d] = lT(p, {
        in: !1
      }) : g && h && sT(b) && (u[d] = lT(p, {
        onExited: a.bind(null, p),
        in: b.props.in,
        exit: Sd(p, "exit", e),
        enter: Sd(p, "enter", e)
      }));
    }
  }), u;
}
var sW = Object.values || function(e) {
  return Object.keys(e).map(function(n) {
    return e[n];
  });
}, lW = {
  component: "div",
  childFactory: function(n) {
    return n;
  }
}, Jw = /* @__PURE__ */ function(e) {
  Qw(n, e);
  function n(s, u) {
    var d;
    d = e.call(this, s, u) || this;
    var p = d.handleExited.bind(oW(d));
    return d.state = {
      contextValue: {
        isMounting: !0
      },
      handleExited: p,
      firstRender: !0
    }, d;
  }
  var a = n.prototype;
  return a.componentDidMount = function() {
    this.mounted = !0, this.setState({
      contextValue: {
        isMounting: !1
      }
    });
  }, a.componentWillUnmount = function() {
    this.mounted = !1;
  }, n.getDerivedStateFromProps = function(u, d) {
    var p = d.children, h = d.handleExited, g = d.firstRender;
    return {
      children: g ? aW(u, h) : iW(u, p, h),
      firstRender: !1
    };
  }, a.handleExited = function(u, d) {
    var p = Zw(this.props.children);
    u.key in p || (u.props.onExited && u.props.onExited(d), this.mounted && this.setState(function(h) {
      var g = y({}, h.children);
      return delete g[u.key], {
        children: g
      };
    }));
  }, a.render = function() {
    var u = this.props, d = u.component, p = u.childFactory, h = le(u, ["component", "childFactory"]), g = this.state.contextValue, b = sW(this.state.children).map(p);
    return delete h.appear, delete h.enter, delete h.exit, d === null ? /* @__PURE__ */ Ia.createElement(wT.Provider, {
      value: g
    }, b) : /* @__PURE__ */ Ia.createElement(wT.Provider, {
      value: g
    }, /* @__PURE__ */ Ia.createElement(d, h, b));
  }, n;
}(Ia.Component);
Jw.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: t.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: t.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: t.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: t.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: t.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: t.func
} : {};
Jw.defaultProps = lW;
const e1 = Jw, YT = (e) => e.scrollTop;
function os(e, n) {
  var a, s;
  const {
    timeout: u,
    easing: d,
    style: p = {}
  } = e;
  return {
    duration: (a = p.transitionDuration) != null ? a : typeof u == "number" ? u : u[n.mode] || 0,
    easing: (s = p.transitionTimingFunction) != null ? s : typeof d == "object" ? d[n.mode] : d,
    delay: p.transitionDelay
  };
}
function cW(e) {
  return We("MuiCollapse", e);
}
const uW = Ye("MuiCollapse", ["root", "horizontal", "vertical", "entered", "hidden", "wrapper", "wrapperInner"]), yue = uW, dW = ["addEndListener", "children", "className", "collapsedSize", "component", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "orientation", "style", "timeout", "TransitionComponent"], pW = (e) => {
  const {
    orientation: n,
    classes: a
  } = e, s = {
    root: ["root", `${n}`],
    entered: ["entered"],
    hidden: ["hidden"],
    wrapper: ["wrapper", `${n}`],
    wrapperInner: ["wrapperInner", `${n}`]
  };
  return He(s, cW, a);
}, fW = J("div", {
  name: "MuiCollapse",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[a.orientation], a.state === "entered" && n.entered, a.state === "exited" && !a.in && a.collapsedSize === "0px" && n.hidden];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  height: 0,
  overflow: "hidden",
  transition: e.transitions.create("height")
}, n.orientation === "horizontal" && {
  height: "auto",
  width: 0,
  transition: e.transitions.create("width")
}, n.state === "entered" && y({
  height: "auto",
  overflow: "visible"
}, n.orientation === "horizontal" && {
  width: "auto"
}), n.state === "exited" && !n.in && n.collapsedSize === "0px" && {
  visibility: "hidden"
})), mW = J("div", {
  name: "MuiCollapse",
  slot: "Wrapper",
  overridesResolver: (e, n) => n.wrapper
})(({
  ownerState: e
}) => y({
  // Hack to get children with a negative margin to not falsify the height computation.
  display: "flex",
  width: "100%"
}, e.orientation === "horizontal" && {
  width: "auto",
  height: "100%"
})), hW = J("div", {
  name: "MuiCollapse",
  slot: "WrapperInner",
  overridesResolver: (e, n) => n.wrapperInner
})(({
  ownerState: e
}) => y({
  width: "100%"
}, e.orientation === "horizontal" && {
  width: "auto",
  height: "100%"
})), t1 = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiCollapse"
  }), {
    addEndListener: u,
    children: d,
    className: p,
    collapsedSize: h = "0px",
    component: g,
    easing: b,
    in: x,
    onEnter: S,
    onEntered: E,
    onEntering: R,
    onExit: $,
    onExited: M,
    onExiting: O,
    orientation: N = "vertical",
    style: V,
    timeout: I = iN.standard,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: z = Dd
  } = s, B = le(s, dW), P = y({}, s, {
    orientation: N,
    collapsedSize: h
  }), F = pW(P), H = En(), U = Fl(), Q = k.useRef(null), Y = k.useRef(), te = typeof h == "number" ? `${h}px` : h, Z = N === "horizontal", q = Z ? "width" : "height", X = k.useRef(null), oe = cn(a, X), ie = (me) => (Se) => {
    if (me) {
      const ce = X.current;
      Se === void 0 ? me(ce) : me(ce, Se);
    }
  }, K = () => Q.current ? Q.current[Z ? "clientWidth" : "clientHeight"] : 0, ne = ie((me, Se) => {
    Q.current && Z && (Q.current.style.position = "absolute"), me.style[q] = te, S && S(me, Se);
  }), se = ie((me, Se) => {
    const ce = K();
    Q.current && Z && (Q.current.style.position = "");
    const {
      duration: Le,
      easing: Ze
    } = os({
      style: V,
      timeout: I,
      easing: b
    }, {
      mode: "enter"
    });
    if (I === "auto") {
      const Ee = H.transitions.getAutoHeightDuration(ce);
      me.style.transitionDuration = `${Ee}ms`, Y.current = Ee;
    } else
      me.style.transitionDuration = typeof Le == "string" ? Le : `${Le}ms`;
    me.style[q] = `${ce}px`, me.style.transitionTimingFunction = Ze, R && R(me, Se);
  }), ze = ie((me, Se) => {
    me.style[q] = "auto", E && E(me, Se);
  }), Ue = ie((me) => {
    me.style[q] = `${K()}px`, $ && $(me);
  }), Oe = ie(M), ue = ie((me) => {
    const Se = K(), {
      duration: ce,
      easing: Le
    } = os({
      style: V,
      timeout: I,
      easing: b
    }, {
      mode: "exit"
    });
    if (I === "auto") {
      const Ze = H.transitions.getAutoHeightDuration(Se);
      me.style.transitionDuration = `${Ze}ms`, Y.current = Ze;
    } else
      me.style.transitionDuration = typeof ce == "string" ? ce : `${ce}ms`;
    me.style[q] = te, me.style.transitionTimingFunction = Le, O && O(me);
  });
  return /* @__PURE__ */ _(z, y({
    in: x,
    onEnter: ne,
    onEntered: ze,
    onEntering: se,
    onExit: Ue,
    onExited: Oe,
    onExiting: ue,
    addEndListener: (me) => {
      I === "auto" && U.start(Y.current || 0, me), u && u(X.current, me);
    },
    nodeRef: X,
    timeout: I === "auto" ? null : I
  }, B, {
    children: (me, Se) => /* @__PURE__ */ _(fW, y({
      as: g,
      className: fe(F.root, p, {
        entered: F.entered,
        exited: !x && te === "0px" && F.hidden
      }[me]),
      style: y({
        [Z ? "minWidth" : "minHeight"]: te
      }, V),
      ref: oe
    }, Se, {
      // `ownerState` is set after `childProps` to override any existing `ownerState` property in `childProps`
      // that might have been forwarded from the Transition component.
      ownerState: y({}, P, {
        state: me
      }),
      children: /* @__PURE__ */ _(mW, {
        ownerState: y({}, P, {
          state: me
        }),
        className: F.wrapper,
        ref: Q,
        children: /* @__PURE__ */ _(hW, {
          ownerState: y({}, P, {
            state: me
          }),
          className: F.wrapperInner,
          children: d
        })
      })
    }))
  }));
});
process.env.NODE_ENV !== "production" && (t1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: t.func,
  /**
   * The content node to be collapsed.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The width (horizontal) or height (vertical) of the container when collapsed.
   * @default '0px'
   */
  collapsedSize: t.oneOfType([t.number, t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: iu,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: t.oneOfType([t.shape({
    enter: t.string,
    exit: t.string
  }), t.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: t.bool,
  /**
   * @ignore
   */
  onEnter: t.func,
  /**
   * @ignore
   */
  onEntered: t.func,
  /**
   * @ignore
   */
  onEntering: t.func,
  /**
   * @ignore
   */
  onExit: t.func,
  /**
   * @ignore
   */
  onExited: t.func,
  /**
   * @ignore
   */
  onExiting: t.func,
  /**
   * The transition orientation.
   * @default 'vertical'
   */
  orientation: t.oneOf(["horizontal", "vertical"]),
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default duration.standard
   */
  timeout: t.oneOfType([t.oneOf(["auto"]), t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })])
});
t1.muiSupportAuto = !0;
const n1 = t1;
function vW(e) {
  return We("MuiPaper", e);
}
const gW = Ye("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]), Cue = gW, bW = ["className", "component", "elevation", "square", "variant"], yW = (e) => {
  const {
    square: n,
    elevation: a,
    variant: s,
    classes: u
  } = e, d = {
    root: ["root", s, !n && "rounded", s === "elevation" && `elevation${a}`]
  };
  return He(d, vW, u);
}, CW = J("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[a.variant], !a.square && n.rounded, a.variant === "elevation" && n[`elevation${a.elevation}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => {
  var a;
  return y({
    backgroundColor: (e.vars || e).palette.background.paper,
    color: (e.vars || e).palette.text.primary,
    transition: e.transitions.create("box-shadow")
  }, !n.square && {
    borderRadius: e.shape.borderRadius
  }, n.variant === "outlined" && {
    border: `1px solid ${(e.vars || e).palette.divider}`
  }, n.variant === "elevation" && y({
    boxShadow: (e.vars || e).shadows[n.elevation]
  }, !e.vars && e.palette.mode === "dark" && {
    backgroundImage: `linear-gradient(${Yt("#fff", ST(n.elevation))}, ${Yt("#fff", ST(n.elevation))})`
  }, e.vars && {
    backgroundImage: (a = e.vars.overlays) == null ? void 0 : a[n.elevation]
  }));
}), VN = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiPaper"
  }), {
    className: u,
    component: d = "div",
    elevation: p = 1,
    square: h = !1,
    variant: g = "elevation"
  } = s, b = le(s, bW), x = y({}, s, {
    component: d,
    elevation: p,
    square: h,
    variant: g
  }), S = yW(x);
  return process.env.NODE_ENV !== "production" && En().shadows[p] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${p}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${p}]\` is defined.`].join(`
`)), /* @__PURE__ */ _(CW, y({
    as: d,
    ownerState: x,
    className: fe(S.root, u),
    ref: a
  }, b));
});
process.env.NODE_ENV !== "production" && (VN.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: Xo(Ro, (e) => {
    const {
      elevation: n,
      variant: a
    } = e;
    return n > 0 && a === "outlined" ? new Error(`MUI: Combining \`elevation={${n}}\` with \`variant="${a}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: t.oneOfType([t.oneOf(["elevation", "outlined"]), t.string])
});
const ni = VN, BN = /* @__PURE__ */ k.createContext({});
process.env.NODE_ENV !== "production" && (BN.displayName = "AccordionContext");
const zN = BN;
function ts(e) {
  return typeof e == "string";
}
function Lf(e, n, a) {
  return e === void 0 || ts(e) ? n : y({}, n, {
    ownerState: y({}, n.ownerState, a)
  });
}
function TW(e, n, a = (s, u) => s === u) {
  return e.length === n.length && e.every((s, u) => a(s, n[u]));
}
const xW = {
  disableDefaultClasses: !1
}, FN = /* @__PURE__ */ k.createContext(xW);
process.env.NODE_ENV !== "production" && (FN.displayName = "ClassNameConfiguratorContext");
function SW(e) {
  const {
    disableDefaultClasses: n
  } = k.useContext(FN);
  return (a) => n ? "" : e(a);
}
function wd(e, n = []) {
  if (e === void 0)
    return {};
  const a = {};
  return Object.keys(e).filter((s) => s.match(/^on[A-Z]/) && typeof e[s] == "function" && !n.includes(s)).forEach((s) => {
    a[s] = e[s];
  }), a;
}
function Yl(e, n, a) {
  return typeof e == "function" ? e(n, a) : e;
}
function MD(e) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((a) => !(a.match(/^on[A-Z]/) && typeof e[a] == "function")).forEach((a) => {
    n[a] = e[a];
  }), n;
}
function jN(e) {
  const {
    getSlotProps: n,
    additionalProps: a,
    externalSlotProps: s,
    externalForwardedProps: u,
    className: d
  } = e;
  if (!n) {
    const R = fe(a == null ? void 0 : a.className, d, u == null ? void 0 : u.className, s == null ? void 0 : s.className), $ = y({}, a == null ? void 0 : a.style, u == null ? void 0 : u.style, s == null ? void 0 : s.style), M = y({}, a, u, s);
    return R.length > 0 && (M.className = R), Object.keys($).length > 0 && (M.style = $), {
      props: M,
      internalRef: void 0
    };
  }
  const p = wd(y({}, u, s)), h = MD(s), g = MD(u), b = n(p), x = fe(b == null ? void 0 : b.className, a == null ? void 0 : a.className, d, u == null ? void 0 : u.className, s == null ? void 0 : s.className), S = y({}, b == null ? void 0 : b.style, a == null ? void 0 : a.style, u == null ? void 0 : u.style, s == null ? void 0 : s.style), E = y({}, b, a, g, h);
  return x.length > 0 && (E.className = x), Object.keys(S).length > 0 && (E.style = S), {
    props: E,
    internalRef: b.ref
  };
}
const kW = ["elementType", "externalSlotProps", "ownerState", "skipResolvingSlotProps"];
function rn(e) {
  var n;
  const {
    elementType: a,
    externalSlotProps: s,
    ownerState: u,
    skipResolvingSlotProps: d = !1
  } = e, p = le(e, kW), h = d ? {} : Yl(s, u), {
    props: g,
    internalRef: b
  } = jN(y({}, p, {
    externalSlotProps: h
  })), x = cn(b, h == null ? void 0 : h.ref, (n = e.additionalProps) == null ? void 0 : n.ref);
  return Lf(a, y({}, g, {
    ref: x
  }), u);
}
const wW = ["className", "elementType", "ownerState", "externalForwardedProps", "getSlotOwnerState", "internalForwardedProps"], RW = ["component", "slots", "slotProps"], EW = ["component"];
function RT(e, n) {
  const {
    className: a,
    elementType: s,
    ownerState: u,
    externalForwardedProps: d,
    getSlotOwnerState: p,
    internalForwardedProps: h
  } = n, g = le(n, wW), {
    component: b,
    slots: x = {
      [e]: void 0
    },
    slotProps: S = {
      [e]: void 0
    }
  } = d, E = le(d, RW), R = x[e] || s, $ = Yl(S[e], u), M = jN(y({
    className: a
  }, g, {
    externalForwardedProps: e === "root" ? E : void 0,
    externalSlotProps: $
  })), {
    props: {
      component: O
    },
    internalRef: N
  } = M, V = le(M.props, EW), I = cn(N, $ == null ? void 0 : $.ref, n.ref), z = p ? p(V) : {}, B = y({}, u, z), P = e === "root" ? O || b : O, F = Lf(R, y({}, e === "root" && !b && !x[e] && h, e !== "root" && !x[e] && h, V, P && {
    as: P
  }, {
    ref: I
  }), B);
  return Object.keys(z).forEach((H) => {
    delete F[H];
  }), [R, F];
}
function OW(e) {
  return We("MuiAccordion", e);
}
const PW = Ye("MuiAccordion", ["root", "rounded", "expanded", "disabled", "gutters", "region"]), HC = PW, DW = ["children", "className", "defaultExpanded", "disabled", "disableGutters", "expanded", "onChange", "square", "slots", "slotProps", "TransitionComponent", "TransitionProps"], MW = (e) => {
  const {
    classes: n,
    square: a,
    expanded: s,
    disabled: u,
    disableGutters: d
  } = e;
  return He({
    root: ["root", !a && "rounded", s && "expanded", u && "disabled", !d && "gutters"],
    region: ["region"]
  }, OW, n);
}, $W = J(ni, {
  name: "MuiAccordion",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [{
      [`& .${HC.region}`]: n.region
    }, n.root, !a.square && n.rounded, !a.disableGutters && n.gutters];
  }
})(({
  theme: e
}) => {
  const n = {
    duration: e.transitions.duration.shortest
  };
  return {
    position: "relative",
    transition: e.transitions.create(["margin"], n),
    overflowAnchor: "none",
    // Keep the same scrolling position
    "&::before": {
      position: "absolute",
      left: 0,
      top: -1,
      right: 0,
      height: 1,
      content: '""',
      opacity: 1,
      backgroundColor: (e.vars || e).palette.divider,
      transition: e.transitions.create(["opacity", "background-color"], n)
    },
    "&:first-of-type": {
      "&::before": {
        display: "none"
      }
    },
    [`&.${HC.expanded}`]: {
      "&::before": {
        opacity: 0
      },
      "&:first-of-type": {
        marginTop: 0
      },
      "&:last-of-type": {
        marginBottom: 0
      },
      "& + &": {
        "&::before": {
          display: "none"
        }
      }
    },
    [`&.${HC.disabled}`]: {
      backgroundColor: (e.vars || e).palette.action.disabledBackground
    }
  };
}, ({
  theme: e,
  ownerState: n
}) => y({}, !n.square && {
  borderRadius: 0,
  "&:first-of-type": {
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius
  },
  "&:last-of-type": {
    borderBottomLeftRadius: (e.vars || e).shape.borderRadius,
    borderBottomRightRadius: (e.vars || e).shape.borderRadius,
    // Fix a rendering issue on Edge
    "@supports (-ms-ime-align: auto)": {
      borderBottomLeftRadius: 0,
      borderBottomRightRadius: 0
    }
  }
}, !n.disableGutters && {
  [`&.${HC.expanded}`]: {
    margin: "16px 0"
  }
})), UN = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiAccordion"
  }), {
    children: u,
    className: d,
    defaultExpanded: p = !1,
    disabled: h = !1,
    disableGutters: g = !1,
    expanded: b,
    onChange: x,
    square: S = !1,
    slots: E = {},
    slotProps: R = {},
    TransitionComponent: $,
    TransitionProps: M
  } = s, O = le(s, DW), [N, V] = Eo({
    controlled: b,
    default: p,
    name: "Accordion",
    state: "expanded"
  }), I = k.useCallback((Z) => {
    V(!N), x && x(Z, !N);
  }, [N, x, V]), [z, ...B] = k.Children.toArray(u), P = k.useMemo(() => ({
    expanded: N,
    disabled: h,
    disableGutters: g,
    toggle: I
  }), [N, h, g, I]), F = y({}, s, {
    square: S,
    disabled: h,
    disableGutters: g,
    expanded: N
  }), H = MW(F), U = y({
    transition: $
  }, E), Q = y({
    transition: M
  }, R), [Y, te] = RT("transition", {
    elementType: n1,
    externalForwardedProps: {
      slots: U,
      slotProps: Q
    },
    ownerState: F
  });
  return /* @__PURE__ */ st($W, y({
    className: fe(H.root, d),
    ref: a,
    ownerState: F,
    square: S
  }, O, {
    children: [/* @__PURE__ */ _(zN.Provider, {
      value: P,
      children: z
    }), /* @__PURE__ */ _(Y, y({
      in: N,
      timeout: "auto"
    }, te, {
      children: /* @__PURE__ */ _("div", {
        "aria-labelledby": z.props.id,
        id: z.props["aria-controls"],
        role: "region",
        className: H.region,
        children: B
      })
    }))]
  }));
});
process.env.NODE_ENV !== "production" && (UN.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: Xo(t.node.isRequired, (e) => {
    const n = k.Children.toArray(e.children)[0];
    return as.isFragment(n) ? new Error("MUI: The Accordion doesn't accept a Fragment as a child. Consider providing an array instead.") : /* @__PURE__ */ k.isValidElement(n) ? null : new Error("MUI: Expected the first child of Accordion to be a valid element.");
  }),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, expands the accordion by default.
   * @default false
   */
  defaultExpanded: t.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, it removes the margin between two expanded accordion items and the increase of height.
   * @default false
   */
  disableGutters: t.bool,
  /**
   * If `true`, expands the accordion, otherwise collapse it.
   * Setting this prop enables control over the accordion.
   */
  expanded: t.bool,
  /**
   * Callback fired when the expand/collapse state is changed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {boolean} expanded The `expanded` state of the accordion.
   */
  onChange: t.func,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: t.shape({
    transition: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: t.shape({
    transition: t.elementType
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated Use `slots.transition` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   */
  TransitionComponent: t.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated Use `slotProps.transition` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   */
  TransitionProps: t.object
});
const Tue = UN;
function NW(e) {
  return We("MuiAccordionActions", e);
}
const LW = Ye("MuiAccordionActions", ["root", "spacing"]), xue = LW, IW = ["className", "disableSpacing"], AW = (e) => {
  const {
    classes: n,
    disableSpacing: a
  } = e;
  return He({
    root: ["root", !a && "spacing"]
  }, NW, n);
}, _W = J("div", {
  name: "MuiAccordionActions",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, !a.disableSpacing && n.spacing];
  }
})(({
  ownerState: e
}) => y({
  display: "flex",
  alignItems: "center",
  padding: 8,
  justifyContent: "flex-end"
}, !e.disableSpacing && {
  "& > :not(style) ~ :not(style)": {
    marginLeft: 8
  }
})), HN = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiAccordionActions"
  }), {
    className: u,
    disableSpacing: d = !1
  } = s, p = le(s, IW), h = y({}, s, {
    disableSpacing: d
  }), g = AW(h);
  return /* @__PURE__ */ _(_W, y({
    className: fe(g.root, u),
    ref: a,
    ownerState: h
  }, p));
});
process.env.NODE_ENV !== "production" && (HN.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Sue = HN;
function VW(e) {
  return We("MuiAccordionDetails", e);
}
const BW = Ye("MuiAccordionDetails", ["root"]), kue = BW, zW = ["className"], FW = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"]
  }, VW, n);
}, jW = J("div", {
  name: "MuiAccordionDetails",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(({
  theme: e
}) => ({
  padding: e.spacing(1, 2, 2)
})), WN = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiAccordionDetails"
  }), {
    className: u
  } = s, d = le(s, zW), p = s, h = FW(p);
  return /* @__PURE__ */ _(jW, y({
    className: fe(h.root, u),
    ref: a,
    ownerState: p
  }, d));
});
process.env.NODE_ENV !== "production" && (WN.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const wue = WN;
function YN(e) {
  const {
    className: n,
    classes: a,
    pulsate: s = !1,
    rippleX: u,
    rippleY: d,
    rippleSize: p,
    in: h,
    onExited: g,
    timeout: b
  } = e, [x, S] = k.useState(!1), E = fe(n, a.ripple, a.rippleVisible, s && a.ripplePulsate), R = {
    width: p,
    height: p,
    top: -(p / 2) + d,
    left: -(p / 2) + u
  }, $ = fe(a.child, x && a.childLeaving, s && a.childPulsate);
  return !h && !x && S(!0), k.useEffect(() => {
    if (!h && g != null) {
      const M = setTimeout(g, b);
      return () => {
        clearTimeout(M);
      };
    }
  }, [g, h, b]), /* @__PURE__ */ _("span", {
    className: E,
    style: R,
    children: /* @__PURE__ */ _("span", {
      className: $
    })
  });
}
process.env.NODE_ENV !== "production" && (YN.propTypes = {
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object.isRequired,
  className: t.string,
  /**
   * @ignore - injected from TransitionGroup
   */
  in: t.bool,
  /**
   * @ignore - injected from TransitionGroup
   */
  onExited: t.func,
  /**
   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
   */
  pulsate: t.bool,
  /**
   * Diameter of the ripple.
   */
  rippleSize: t.number,
  /**
   * Horizontal position of the ripple center.
   */
  rippleX: t.number,
  /**
   * Vertical position of the ripple center.
   */
  rippleY: t.number,
  /**
   * exit delay
   */
  timeout: t.number.isRequired
});
function Rue(e) {
  return We("MuiTouchRipple", e);
}
const UW = Ye("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]), yi = UW, HW = ["center", "classes", "className"];
let qT = (e) => e, $D, ND, LD, ID;
const Rw = 550, WW = 80, YW = rs($D || ($D = qT`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`)), qW = rs(ND || (ND = qT`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`)), GW = rs(LD || (LD = qT`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`)), KW = J("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
}), QW = J(YN, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})(ID || (ID = qT`
  opacity: 0;
  position: absolute;

  &.${0} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  &.${0} {
    animation-duration: ${0}ms;
  }

  & .${0} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${0} {
    opacity: 0;
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  & .${0} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${0};
    animation-duration: 2500ms;
    animation-timing-function: ${0};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`), yi.rippleVisible, YW, Rw, ({
  theme: e
}) => e.transitions.easing.easeInOut, yi.ripplePulsate, ({
  theme: e
}) => e.transitions.duration.shorter, yi.child, yi.childLeaving, qW, Rw, ({
  theme: e
}) => e.transitions.easing.easeInOut, yi.childPulsate, GW, ({
  theme: e
}) => e.transitions.easing.easeInOut), qN = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiTouchRipple"
  }), {
    center: u = !1,
    classes: d = {},
    className: p
  } = s, h = le(s, HW), [g, b] = k.useState([]), x = k.useRef(0), S = k.useRef(null);
  k.useEffect(() => {
    S.current && (S.current(), S.current = null);
  }, [g]);
  const E = k.useRef(!1), R = Fl(), $ = k.useRef(null), M = k.useRef(null), O = k.useCallback((z) => {
    const {
      pulsate: B,
      rippleX: P,
      rippleY: F,
      rippleSize: H,
      cb: U
    } = z;
    b((Q) => [...Q, /* @__PURE__ */ _(QW, {
      classes: {
        ripple: fe(d.ripple, yi.ripple),
        rippleVisible: fe(d.rippleVisible, yi.rippleVisible),
        ripplePulsate: fe(d.ripplePulsate, yi.ripplePulsate),
        child: fe(d.child, yi.child),
        childLeaving: fe(d.childLeaving, yi.childLeaving),
        childPulsate: fe(d.childPulsate, yi.childPulsate)
      },
      timeout: Rw,
      pulsate: B,
      rippleX: P,
      rippleY: F,
      rippleSize: H
    }, x.current)]), x.current += 1, S.current = U;
  }, [d]), N = k.useCallback((z = {}, B = {}, P = () => {
  }) => {
    const {
      pulsate: F = !1,
      center: H = u || B.pulsate,
      fakeElement: U = !1
      // For test purposes
    } = B;
    if ((z == null ? void 0 : z.type) === "mousedown" && E.current) {
      E.current = !1;
      return;
    }
    (z == null ? void 0 : z.type) === "touchstart" && (E.current = !0);
    const Q = U ? null : M.current, Y = Q ? Q.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let te, Z, q;
    if (H || z === void 0 || z.clientX === 0 && z.clientY === 0 || !z.clientX && !z.touches)
      te = Math.round(Y.width / 2), Z = Math.round(Y.height / 2);
    else {
      const {
        clientX: X,
        clientY: oe
      } = z.touches && z.touches.length > 0 ? z.touches[0] : z;
      te = Math.round(X - Y.left), Z = Math.round(oe - Y.top);
    }
    if (H)
      q = Math.sqrt((2 * Y.width ** 2 + Y.height ** 2) / 3), q % 2 === 0 && (q += 1);
    else {
      const X = Math.max(Math.abs((Q ? Q.clientWidth : 0) - te), te) * 2 + 2, oe = Math.max(Math.abs((Q ? Q.clientHeight : 0) - Z), Z) * 2 + 2;
      q = Math.sqrt(X ** 2 + oe ** 2);
    }
    z != null && z.touches ? $.current === null && ($.current = () => {
      O({
        pulsate: F,
        rippleX: te,
        rippleY: Z,
        rippleSize: q,
        cb: P
      });
    }, R.start(WW, () => {
      $.current && ($.current(), $.current = null);
    })) : O({
      pulsate: F,
      rippleX: te,
      rippleY: Z,
      rippleSize: q,
      cb: P
    });
  }, [u, O, R]), V = k.useCallback(() => {
    N({}, {
      pulsate: !0
    });
  }, [N]), I = k.useCallback((z, B) => {
    if (R.clear(), (z == null ? void 0 : z.type) === "touchend" && $.current) {
      $.current(), $.current = null, R.start(0, () => {
        I(z, B);
      });
      return;
    }
    $.current = null, b((P) => P.length > 0 ? P.slice(1) : P), S.current = B;
  }, [R]);
  return k.useImperativeHandle(a, () => ({
    pulsate: V,
    start: N,
    stop: I
  }), [V, N, I]), /* @__PURE__ */ _(KW, y({
    className: fe(yi.root, d.root, p),
    ref: M
  }, h, {
    children: /* @__PURE__ */ _(e1, {
      component: null,
      exit: !0,
      children: g
    })
  }));
});
process.env.NODE_ENV !== "production" && (qN.propTypes = {
  /**
   * If `true`, the ripple starts at the center of the component
   * rather than at the point of interaction.
   */
  center: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string
});
const XW = qN;
function ZW(e) {
  return We("MuiButtonBase", e);
}
const JW = Ye("MuiButtonBase", ["root", "disabled", "focusVisible"]), e3 = JW, t3 = ["action", "centerRipple", "children", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "LinkComponent", "onBlur", "onClick", "onContextMenu", "onDragLeave", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "tabIndex", "TouchRippleProps", "touchRippleRef", "type"], n3 = (e) => {
  const {
    disabled: n,
    focusVisible: a,
    focusVisibleClassName: s,
    classes: u
  } = e, p = He({
    root: ["root", n && "disabled", a && "focusVisible"]
  }, ZW, u);
  return a && s && (p.root += ` ${s}`), p;
}, o3 = J("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  textDecoration: "none",
  // So we take precedent over the style of a native <a /> element.
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${e3.disabled}`]: {
    pointerEvents: "none",
    // Disable link interactions
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
}), GN = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiButtonBase"
  }), {
    action: u,
    centerRipple: d = !1,
    children: p,
    className: h,
    component: g = "button",
    disabled: b = !1,
    disableRipple: x = !1,
    disableTouchRipple: S = !1,
    focusRipple: E = !1,
    LinkComponent: R = "a",
    onBlur: $,
    onClick: M,
    onContextMenu: O,
    onDragLeave: N,
    onFocus: V,
    onFocusVisible: I,
    onKeyDown: z,
    onKeyUp: B,
    onMouseDown: P,
    onMouseLeave: F,
    onMouseUp: H,
    onTouchEnd: U,
    onTouchMove: Q,
    onTouchStart: Y,
    tabIndex: te = 0,
    TouchRippleProps: Z,
    touchRippleRef: q,
    type: X
  } = s, oe = le(s, t3), ie = k.useRef(null), K = k.useRef(null), ne = cn(K, q), {
    isFocusVisibleRef: se,
    onFocus: ze,
    onBlur: Ue,
    ref: Oe
  } = Xf(), [ue, xe] = k.useState(!1);
  b && ue && xe(!1), k.useImperativeHandle(u, () => ({
    focusVisible: () => {
      xe(!0), ie.current.focus();
    }
  }), []);
  const [me, Se] = k.useState(!1);
  k.useEffect(() => {
    Se(!0);
  }, []);
  const ce = me && !x && !b;
  k.useEffect(() => {
    ue && E && !x && me && K.current.pulsate();
  }, [x, E, ue, me]);
  function Le(Re, at, Ke = S) {
    return kt((lt) => (at && at(lt), !Ke && K.current && K.current[Re](lt), !0));
  }
  const Ze = Le("start", P), Ee = Le("stop", O), Ae = Le("stop", N), Ce = Le("stop", H), ae = Le("stop", (Re) => {
    ue && Re.preventDefault(), F && F(Re);
  }), Pe = Le("start", Y), ke = Le("stop", U), pt = Le("stop", Q), _e = Le("stop", (Re) => {
    Ue(Re), se.current === !1 && xe(!1), $ && $(Re);
  }, !1), dt = kt((Re) => {
    ie.current || (ie.current = Re.currentTarget), ze(Re), se.current === !0 && (xe(!0), I && I(Re)), V && V(Re);
  }), ge = () => {
    const Re = ie.current;
    return g && g !== "button" && !(Re.tagName === "A" && Re.href);
  }, ve = k.useRef(!1), qe = kt((Re) => {
    E && !ve.current && ue && K.current && Re.key === " " && (ve.current = !0, K.current.stop(Re, () => {
      K.current.start(Re);
    })), Re.target === Re.currentTarget && ge() && Re.key === " " && Re.preventDefault(), z && z(Re), Re.target === Re.currentTarget && ge() && Re.key === "Enter" && !b && (Re.preventDefault(), M && M(Re));
  }), vt = kt((Re) => {
    E && Re.key === " " && K.current && ue && !Re.defaultPrevented && (ve.current = !1, K.current.stop(Re, () => {
      K.current.pulsate(Re);
    })), B && B(Re), M && Re.target === Re.currentTarget && ge() && Re.key === " " && !Re.defaultPrevented && M(Re);
  });
  let yt = g;
  yt === "button" && (oe.href || oe.to) && (yt = R);
  const Mt = {};
  yt === "button" ? (Mt.type = X === void 0 ? "button" : X, Mt.disabled = b) : (!oe.href && !oe.to && (Mt.role = "button"), b && (Mt["aria-disabled"] = b));
  const bt = cn(a, Oe, ie);
  process.env.NODE_ENV !== "production" && k.useEffect(() => {
    ce && !K.current && console.error(["MUI: The `component` prop provided to ButtonBase is invalid.", "Please make sure the children prop is rendered in this custom component."].join(`
`));
  }, [ce]);
  const wt = y({}, s, {
    centerRipple: d,
    component: g,
    disabled: b,
    disableRipple: x,
    disableTouchRipple: S,
    focusRipple: E,
    tabIndex: te,
    focusVisible: ue
  }), we = n3(wt);
  return /* @__PURE__ */ st(o3, y({
    as: yt,
    className: fe(we.root, h),
    ownerState: wt,
    onBlur: _e,
    onClick: M,
    onContextMenu: Ee,
    onFocus: dt,
    onKeyDown: qe,
    onKeyUp: vt,
    onMouseDown: Ze,
    onMouseLeave: ae,
    onMouseUp: Ce,
    onDragLeave: Ae,
    onTouchEnd: ke,
    onTouchMove: pt,
    onTouchStart: Pe,
    ref: bt,
    tabIndex: b ? -1 : te,
    type: X
  }, Mt, oe, {
    children: [p, ce ? (
      /* TouchRipple is only needed client-side, x2 boost on the server. */
      /* @__PURE__ */ _(XW, y({
        ref: ne,
        center: d
      }, Z))
    ) : null]
  }));
});
process.env.NODE_ENV !== "production" && (GN.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: Wn,
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: t.bool,
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: iu,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: t.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: t.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: t.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: t.string,
  /**
   * @ignore
   */
  href: t.any,
  /**
   * The component used to render a link when the `href` prop is provided.
   * @default 'a'
   */
  LinkComponent: t.elementType,
  /**
   * @ignore
   */
  onBlur: t.func,
  /**
   * @ignore
   */
  onClick: t.func,
  /**
   * @ignore
   */
  onContextMenu: t.func,
  /**
   * @ignore
   */
  onDragLeave: t.func,
  /**
   * @ignore
   */
  onFocus: t.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: t.func,
  /**
   * @ignore
   */
  onKeyDown: t.func,
  /**
   * @ignore
   */
  onKeyUp: t.func,
  /**
   * @ignore
   */
  onMouseDown: t.func,
  /**
   * @ignore
   */
  onMouseLeave: t.func,
  /**
   * @ignore
   */
  onMouseUp: t.func,
  /**
   * @ignore
   */
  onTouchEnd: t.func,
  /**
   * @ignore
   */
  onTouchMove: t.func,
  /**
   * @ignore
   */
  onTouchStart: t.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * @default 0
   */
  tabIndex: t.number,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: t.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: t.oneOfType([t.func, t.shape({
    current: t.shape({
      pulsate: t.func.isRequired,
      start: t.func.isRequired,
      stop: t.func.isRequired
    })
  })]),
  /**
   * @ignore
   */
  type: t.oneOfType([t.oneOf(["button", "reset", "submit"]), t.string])
});
const Zo = GN;
function r3(e) {
  return We("MuiAccordionSummary", e);
}
const a3 = Ye("MuiAccordionSummary", ["root", "expanded", "focusVisible", "disabled", "gutters", "contentGutters", "content", "expandIconWrapper"]), If = a3, i3 = ["children", "className", "expandIcon", "focusVisibleClassName", "onClick"], s3 = (e) => {
  const {
    classes: n,
    expanded: a,
    disabled: s,
    disableGutters: u
  } = e;
  return He({
    root: ["root", a && "expanded", s && "disabled", !u && "gutters"],
    focusVisible: ["focusVisible"],
    content: ["content", a && "expanded", !u && "contentGutters"],
    expandIconWrapper: ["expandIconWrapper", a && "expanded"]
  }, r3, n);
}, l3 = J(Zo, {
  name: "MuiAccordionSummary",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(({
  theme: e,
  ownerState: n
}) => {
  const a = {
    duration: e.transitions.duration.shortest
  };
  return y({
    display: "flex",
    minHeight: 48,
    padding: e.spacing(0, 2),
    transition: e.transitions.create(["min-height", "background-color"], a),
    [`&.${If.focusVisible}`]: {
      backgroundColor: (e.vars || e).palette.action.focus
    },
    [`&.${If.disabled}`]: {
      opacity: (e.vars || e).palette.action.disabledOpacity
    },
    [`&:hover:not(.${If.disabled})`]: {
      cursor: "pointer"
    }
  }, !n.disableGutters && {
    [`&.${If.expanded}`]: {
      minHeight: 64
    }
  });
}), c3 = J("div", {
  name: "MuiAccordionSummary",
  slot: "Content",
  overridesResolver: (e, n) => n.content
})(({
  theme: e,
  ownerState: n
}) => y({
  display: "flex",
  flexGrow: 1,
  margin: "12px 0"
}, !n.disableGutters && {
  transition: e.transitions.create(["margin"], {
    duration: e.transitions.duration.shortest
  }),
  [`&.${If.expanded}`]: {
    margin: "20px 0"
  }
})), u3 = J("div", {
  name: "MuiAccordionSummary",
  slot: "ExpandIconWrapper",
  overridesResolver: (e, n) => n.expandIconWrapper
})(({
  theme: e
}) => ({
  display: "flex",
  color: (e.vars || e).palette.action.active,
  transform: "rotate(0deg)",
  transition: e.transitions.create("transform", {
    duration: e.transitions.duration.shortest
  }),
  [`&.${If.expanded}`]: {
    transform: "rotate(180deg)"
  }
})), KN = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiAccordionSummary"
  }), {
    children: u,
    className: d,
    expandIcon: p,
    focusVisibleClassName: h,
    onClick: g
  } = s, b = le(s, i3), {
    disabled: x = !1,
    disableGutters: S,
    expanded: E,
    toggle: R
  } = k.useContext(zN), $ = (N) => {
    R && R(N), g && g(N);
  }, M = y({}, s, {
    expanded: E,
    disabled: x,
    disableGutters: S
  }), O = s3(M);
  return /* @__PURE__ */ st(l3, y({
    focusRipple: !1,
    disableRipple: !0,
    disabled: x,
    component: "div",
    "aria-expanded": E,
    className: fe(O.root, d),
    focusVisibleClassName: fe(O.focusVisible, h),
    onClick: $,
    ref: a,
    ownerState: M
  }, b, {
    children: [/* @__PURE__ */ _(c3, {
      className: O.content,
      ownerState: M,
      children: u
    }), p && /* @__PURE__ */ _(u3, {
      className: O.expandIconWrapper,
      ownerState: M,
      children: p
    })]
  }));
});
process.env.NODE_ENV !== "production" && (KN.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The icon to display as the expand indicator.
   */
  expandIcon: t.node,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: t.string,
  /**
   * @ignore
   */
  onClick: t.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Eue = KN;
function d3(e) {
  const {
    badgeContent: n,
    invisible: a = !1,
    max: s = 99,
    showZero: u = !1
  } = e, d = jw({
    badgeContent: n,
    max: s
  });
  let p = a;
  a === !1 && n === 0 && !u && (p = !0);
  const {
    badgeContent: h,
    max: g = s
  } = p ? d : e, b = h && Number(h) > g ? `${g}+` : h;
  return {
    badgeContent: h,
    invisible: p,
    max: g,
    displayValue: b
  };
}
const QN = "base";
function p3(e) {
  return `${QN}--${e}`;
}
function f3(e, n) {
  return `${QN}-${e}-${n}`;
}
function XN(e, n) {
  const a = $U[n];
  return a ? p3(a) : f3(e, n);
}
function m3(e, n) {
  const a = {};
  return n.forEach((s) => {
    a[s] = XN(e, s);
  }), a;
}
function AD(e) {
  return e.substring(2).toLowerCase();
}
function h3(e, n) {
  return n.documentElement.clientWidth < e.clientX || n.documentElement.clientHeight < e.clientY;
}
function ET(e) {
  const {
    children: n,
    disableReactTree: a = !1,
    mouseEvent: s = "onClick",
    onClickAway: u,
    touchEvent: d = "onTouchEnd"
  } = e, p = k.useRef(!1), h = k.useRef(null), g = k.useRef(!1), b = k.useRef(!1);
  k.useEffect(() => (setTimeout(() => {
    g.current = !0;
  }, 0), () => {
    g.current = !1;
  }), []);
  const x = cn(
    // @ts-expect-error TODO upstream fix
    n.ref,
    h
  ), S = kt(($) => {
    const M = b.current;
    b.current = !1;
    const O = $n(h.current);
    if (!g.current || !h.current || "clientX" in $ && h3($, O))
      return;
    if (p.current) {
      p.current = !1;
      return;
    }
    let N;
    $.composedPath ? N = $.composedPath().indexOf(h.current) > -1 : N = !O.documentElement.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      $.target
    ) || h.current.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      $.target
    ), !N && (a || !M) && u($);
  }), E = ($) => (M) => {
    b.current = !0;
    const O = n.props[$];
    O && O(M);
  }, R = {
    ref: x
  };
  return d !== !1 && (R[d] = E(d)), k.useEffect(() => {
    if (d !== !1) {
      const $ = AD(d), M = $n(h.current), O = () => {
        p.current = !0;
      };
      return M.addEventListener($, S), M.addEventListener("touchmove", O), () => {
        M.removeEventListener($, S), M.removeEventListener("touchmove", O);
      };
    }
  }, [S, d]), s !== !1 && (R[s] = E(s)), k.useEffect(() => {
    if (s !== !1) {
      const $ = AD(s), M = $n(h.current);
      return M.addEventListener($, S), () => {
        M.removeEventListener($, S);
      };
    }
  }, [S, s]), /* @__PURE__ */ _(k.Fragment, {
    children: /* @__PURE__ */ k.cloneElement(n, R)
  });
}
process.env.NODE_ENV !== "production" && (ET.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The wrapped element.
   */
  children: su.isRequired,
  /**
   * If `true`, the React tree is ignored and only the DOM tree is considered.
   * This prop changes how portaled elements are handled.
   * @default false
   */
  disableReactTree: t.bool,
  /**
   * The mouse event to listen to. You can disable the listener by providing `false`.
   * @default 'onClick'
   */
  mouseEvent: t.oneOf(["onClick", "onMouseDown", "onMouseUp", "onPointerDown", "onPointerUp", !1]),
  /**
   * Callback fired when a "click away" event is detected.
   */
  onClickAway: t.func.isRequired,
  /**
   * The touch event to listen to. You can disable the listener by providing `false`.
   * @default 'onTouchEnd'
   */
  touchEvent: t.oneOf(["onTouchEnd", "onTouchStart", !1])
});
process.env.NODE_ENV !== "production" && (ET["propTypes"] = Pd(ET.propTypes));
const v3 = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function g3(e) {
  const n = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(n) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : n;
}
function b3(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const n = (s) => e.ownerDocument.querySelector(`input[type="radio"]${s}`);
  let a = n(`[name="${e.name}"]:checked`);
  return a || (a = n(`[name="${e.name}"]`)), a !== e;
}
function y3(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || b3(e));
}
function C3(e) {
  const n = [], a = [];
  return Array.from(e.querySelectorAll(v3)).forEach((s, u) => {
    const d = g3(s);
    d === -1 || !y3(s) || (d === 0 ? n.push(s) : a.push({
      documentOrder: u,
      tabIndex: d,
      node: s
    }));
  }), a.sort((s, u) => s.tabIndex === u.tabIndex ? s.documentOrder - u.documentOrder : s.tabIndex - u.tabIndex).map((s) => s.node).concat(n);
}
function T3() {
  return !0;
}
function lg(e) {
  const {
    children: n,
    disableAutoFocus: a = !1,
    disableEnforceFocus: s = !1,
    disableRestoreFocus: u = !1,
    getTabbable: d = C3,
    isEnabled: p = T3,
    open: h
  } = e, g = k.useRef(!1), b = k.useRef(null), x = k.useRef(null), S = k.useRef(null), E = k.useRef(null), R = k.useRef(!1), $ = k.useRef(null), M = cn(n.ref, $), O = k.useRef(null);
  k.useEffect(() => {
    !h || !$.current || (R.current = !a);
  }, [a, h]), k.useEffect(() => {
    if (!h || !$.current)
      return;
    const I = $n($.current);
    return $.current.contains(I.activeElement) || ($.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), $.current.setAttribute("tabIndex", "-1")), R.current && $.current.focus()), () => {
      u || (S.current && S.current.focus && (g.current = !0, S.current.focus()), S.current = null);
    };
  }, [h]), k.useEffect(() => {
    if (!h || !$.current)
      return;
    const I = $n($.current), z = (F) => {
      O.current = F, !(s || !p() || F.key !== "Tab") && I.activeElement === $.current && F.shiftKey && (g.current = !0, x.current && x.current.focus());
    }, B = () => {
      const F = $.current;
      if (F === null)
        return;
      if (!I.hasFocus() || !p() || g.current) {
        g.current = !1;
        return;
      }
      if (F.contains(I.activeElement) || s && I.activeElement !== b.current && I.activeElement !== x.current)
        return;
      if (I.activeElement !== E.current)
        E.current = null;
      else if (E.current !== null)
        return;
      if (!R.current)
        return;
      let H = [];
      if ((I.activeElement === b.current || I.activeElement === x.current) && (H = d($.current)), H.length > 0) {
        var U, Q;
        const Y = !!((U = O.current) != null && U.shiftKey && ((Q = O.current) == null ? void 0 : Q.key) === "Tab"), te = H[0], Z = H[H.length - 1];
        typeof te != "string" && typeof Z != "string" && (Y ? Z.focus() : te.focus());
      } else
        F.focus();
    };
    I.addEventListener("focusin", B), I.addEventListener("keydown", z, !0);
    const P = setInterval(() => {
      I.activeElement && I.activeElement.tagName === "BODY" && B();
    }, 50);
    return () => {
      clearInterval(P), I.removeEventListener("focusin", B), I.removeEventListener("keydown", z, !0);
    };
  }, [a, s, u, p, h, d]);
  const N = (I) => {
    S.current === null && (S.current = I.relatedTarget), R.current = !0, E.current = I.target;
    const z = n.props.onFocus;
    z && z(I);
  }, V = (I) => {
    S.current === null && (S.current = I.relatedTarget), R.current = !0;
  };
  return /* @__PURE__ */ st(k.Fragment, {
    children: [/* @__PURE__ */ _("div", {
      tabIndex: h ? 0 : -1,
      onFocus: V,
      ref: b,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ k.cloneElement(n, {
      ref: M,
      onFocus: N
    }), /* @__PURE__ */ _("div", {
      tabIndex: h ? 0 : -1,
      onFocus: V,
      ref: x,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (lg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: su,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: t.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: t.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: t.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: t.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: t.func,
  /**
   * If `true`, focus is locked.
   */
  open: t.bool.isRequired
});
process.env.NODE_ENV !== "production" && (lg["propTypes"] = Pd(lg.propTypes));
function x3(e) {
  return typeof e == "function" ? e() : e;
}
const cg = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const {
    children: s,
    container: u,
    disablePortal: d = !1
  } = n, [p, h] = k.useState(null), g = cn(/* @__PURE__ */ k.isValidElement(s) ? s.ref : null, a);
  if (ro(() => {
    d || h(x3(u) || document.body);
  }, [u, d]), ro(() => {
    if (p && !d)
      return ag(a, p), () => {
        ag(a, null);
      };
  }, [a, p, d]), d) {
    if (/* @__PURE__ */ k.isValidElement(s)) {
      const b = {
        ref: g
      };
      return /* @__PURE__ */ k.cloneElement(s, b);
    }
    return /* @__PURE__ */ _(k.Fragment, {
      children: s
    });
  }
  return /* @__PURE__ */ _(k.Fragment, {
    children: p && /* @__PURE__ */ kT.createPortal(s, p)
  });
});
process.env.NODE_ENV !== "production" && (cg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: t.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: t.oneOfType([Gs, t.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: t.bool
});
process.env.NODE_ENV !== "production" && (cg["propTypes"] = Pd(cg.propTypes));
function S3(e) {
  const n = $n(e);
  return n.body === e ? Qr(e).innerWidth > n.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function Kv(e, n) {
  n ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function _D(e) {
  return parseInt(Qr(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function k3(e) {
  const a = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].indexOf(e.tagName) !== -1, s = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return a || s;
}
function VD(e, n, a, s, u) {
  const d = [n, a, ...s];
  [].forEach.call(e.children, (p) => {
    const h = d.indexOf(p) === -1, g = !k3(p);
    h && g && Kv(p, u);
  });
}
function ew(e, n) {
  let a = -1;
  return e.some((s, u) => n(s) ? (a = u, !0) : !1), a;
}
function w3(e, n) {
  const a = [], s = e.container;
  if (!n.disableScrollLock) {
    if (S3(s)) {
      const p = gN($n(s));
      a.push({
        value: s.style.paddingRight,
        property: "padding-right",
        el: s
      }), s.style.paddingRight = `${_D(s) + p}px`;
      const h = $n(s).querySelectorAll(".mui-fixed");
      [].forEach.call(h, (g) => {
        a.push({
          value: g.style.paddingRight,
          property: "padding-right",
          el: g
        }), g.style.paddingRight = `${_D(g) + p}px`;
      });
    }
    let d;
    if (s.parentNode instanceof DocumentFragment)
      d = $n(s).body;
    else {
      const p = s.parentElement, h = Qr(s);
      d = (p == null ? void 0 : p.nodeName) === "HTML" && h.getComputedStyle(p).overflowY === "scroll" ? p : s;
    }
    a.push({
      value: d.style.overflow,
      property: "overflow",
      el: d
    }, {
      value: d.style.overflowX,
      property: "overflow-x",
      el: d
    }, {
      value: d.style.overflowY,
      property: "overflow-y",
      el: d
    }), d.style.overflow = "hidden";
  }
  return () => {
    a.forEach(({
      value: d,
      el: p,
      property: h
    }) => {
      d ? p.style.setProperty(h, d) : p.style.removeProperty(h);
    });
  };
}
function R3(e) {
  const n = [];
  return [].forEach.call(e.children, (a) => {
    a.getAttribute("aria-hidden") === "true" && n.push(a);
  }), n;
}
class E3 {
  constructor() {
    this.containers = void 0, this.modals = void 0, this.modals = [], this.containers = [];
  }
  add(n, a) {
    let s = this.modals.indexOf(n);
    if (s !== -1)
      return s;
    s = this.modals.length, this.modals.push(n), n.modalRef && Kv(n.modalRef, !1);
    const u = R3(a);
    VD(a, n.mount, n.modalRef, u, !0);
    const d = ew(this.containers, (p) => p.container === a);
    return d !== -1 ? (this.containers[d].modals.push(n), s) : (this.containers.push({
      modals: [n],
      container: a,
      restore: null,
      hiddenSiblings: u
    }), s);
  }
  mount(n, a) {
    const s = ew(this.containers, (d) => d.modals.indexOf(n) !== -1), u = this.containers[s];
    u.restore || (u.restore = w3(u, a));
  }
  remove(n, a = !0) {
    const s = this.modals.indexOf(n);
    if (s === -1)
      return s;
    const u = ew(this.containers, (p) => p.modals.indexOf(n) !== -1), d = this.containers[u];
    if (d.modals.splice(d.modals.indexOf(n), 1), this.modals.splice(s, 1), d.modals.length === 0)
      d.restore && d.restore(), n.modalRef && Kv(n.modalRef, a), VD(d.container, n.mount, n.modalRef, d.hiddenSiblings, !1), this.containers.splice(u, 1);
    else {
      const p = d.modals[d.modals.length - 1];
      p.modalRef && Kv(p.modalRef, !1);
    }
    return s;
  }
  isTopModal(n) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === n;
  }
}
function O3(e) {
  return typeof e == "function" ? e() : e;
}
function P3(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const D3 = new E3();
function M3(e) {
  const {
    container: n,
    disableEscapeKeyDown: a = !1,
    disableScrollLock: s = !1,
    // @ts-ignore internal logic - Base UI supports the manager as a prop too
    manager: u = D3,
    closeAfterTransition: d = !1,
    onTransitionEnter: p,
    onTransitionExited: h,
    children: g,
    onClose: b,
    open: x,
    rootRef: S
  } = e, E = k.useRef({}), R = k.useRef(null), $ = k.useRef(null), M = cn($, S), [O, N] = k.useState(!x), V = P3(g);
  let I = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (I = !1);
  const z = () => $n(R.current), B = () => (E.current.modalRef = $.current, E.current.mount = R.current, E.current), P = () => {
    u.mount(B(), {
      disableScrollLock: s
    }), $.current && ($.current.scrollTop = 0);
  }, F = kt(() => {
    const oe = O3(n) || z().body;
    u.add(B(), oe), $.current && P();
  }), H = k.useCallback(() => u.isTopModal(B()), [u]), U = kt((oe) => {
    R.current = oe, oe && (x && H() ? P() : $.current && Kv($.current, I));
  }), Q = k.useCallback(() => {
    u.remove(B(), I);
  }, [I, u]);
  k.useEffect(() => () => {
    Q();
  }, [Q]), k.useEffect(() => {
    x ? F() : (!V || !d) && Q();
  }, [x, Q, V, d, F]);
  const Y = (oe) => (ie) => {
    var K;
    (K = oe.onKeyDown) == null || K.call(oe, ie), !(ie.key !== "Escape" || ie.which === 229 || // Wait until IME is settled.
    !H()) && (a || (ie.stopPropagation(), b && b(ie, "escapeKeyDown")));
  }, te = (oe) => (ie) => {
    var K;
    (K = oe.onClick) == null || K.call(oe, ie), ie.target === ie.currentTarget && b && b(ie, "backdropClick");
  };
  return {
    getRootProps: (oe = {}) => {
      const ie = wd(e);
      delete ie.onTransitionEnter, delete ie.onTransitionExited;
      const K = y({}, ie, oe);
      return y({
        role: "presentation"
      }, K, {
        onKeyDown: Y(K),
        ref: M
      });
    },
    getBackdropProps: (oe = {}) => {
      const ie = oe;
      return y({
        "aria-hidden": !0
      }, ie, {
        onClick: te(ie),
        open: x
      });
    },
    getTransitionProps: () => {
      const oe = () => {
        N(!1), p && p();
      }, ie = () => {
        N(!0), h && h(), d && Q();
      };
      return {
        onEnter: TT(oe, g == null ? void 0 : g.props.onEnter),
        onExited: TT(ie, g == null ? void 0 : g.props.onExited)
      };
    },
    rootRef: M,
    portalRef: U,
    isTopModal: H,
    exited: O,
    hasTransition: V
  };
}
function OT(e) {
  const {
    children: n,
    defer: a = !1,
    fallback: s = null
  } = e, [u, d] = k.useState(!1);
  return ro(() => {
    a || d(!0);
  }, [a]), k.useEffect(() => {
    a && d(!0);
  }, [a]), /* @__PURE__ */ _(k.Fragment, {
    children: u ? n : s
  });
}
process.env.NODE_ENV !== "production" && (OT.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * You can wrap a node.
   */
  children: t.node,
  /**
   * If `true`, the component will not only prevent server-side rendering.
   * It will also defer the rendering of the children into a different screen frame.
   * @default false
   */
  defer: t.bool,
  /**
   * The fallback content to display.
   * @default null
   */
  fallback: t.node
});
process.env.NODE_ENV !== "production" && (OT["propTypes"] = Pd(OT.propTypes));
var Aa = "top", xi = "bottom", Si = "right", _a = "left", o1 = "auto", Eg = [Aa, xi, Si, _a], jf = "start", ug = "end", $3 = "clippingParents", ZN = "viewport", Sv = "popper", N3 = "reference", BD = /* @__PURE__ */ Eg.reduce(function(e, n) {
  return e.concat([n + "-" + jf, n + "-" + ug]);
}, []), JN = /* @__PURE__ */ [].concat(Eg, [o1]).reduce(function(e, n) {
  return e.concat([n, n + "-" + jf, n + "-" + ug]);
}, []), L3 = "beforeRead", I3 = "read", A3 = "afterRead", _3 = "beforeMain", V3 = "main", B3 = "afterMain", z3 = "beforeWrite", F3 = "write", j3 = "afterWrite", U3 = [L3, I3, A3, _3, V3, B3, z3, F3, j3];
function Ks(e) {
  return e ? (e.nodeName || "").toLowerCase() : null;
}
function ti(e) {
  if (e == null)
    return window;
  if (e.toString() !== "[object Window]") {
    var n = e.ownerDocument;
    return n && n.defaultView || window;
  }
  return e;
}
function Ed(e) {
  var n = ti(e).Element;
  return e instanceof n || e instanceof Element;
}
function Ci(e) {
  var n = ti(e).HTMLElement;
  return e instanceof n || e instanceof HTMLElement;
}
function r1(e) {
  if (typeof ShadowRoot > "u")
    return !1;
  var n = ti(e).ShadowRoot;
  return e instanceof n || e instanceof ShadowRoot;
}
function H3(e) {
  var n = e.state;
  Object.keys(n.elements).forEach(function(a) {
    var s = n.styles[a] || {}, u = n.attributes[a] || {}, d = n.elements[a];
    !Ci(d) || !Ks(d) || (Object.assign(d.style, s), Object.keys(u).forEach(function(p) {
      var h = u[p];
      h === !1 ? d.removeAttribute(p) : d.setAttribute(p, h === !0 ? "" : h);
    }));
  });
}
function W3(e) {
  var n = e.state, a = {
    popper: {
      position: n.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  return Object.assign(n.elements.popper.style, a.popper), n.styles = a, n.elements.arrow && Object.assign(n.elements.arrow.style, a.arrow), function() {
    Object.keys(n.elements).forEach(function(s) {
      var u = n.elements[s], d = n.attributes[s] || {}, p = Object.keys(n.styles.hasOwnProperty(s) ? n.styles[s] : a[s]), h = p.reduce(function(g, b) {
        return g[b] = "", g;
      }, {});
      !Ci(u) || !Ks(u) || (Object.assign(u.style, h), Object.keys(d).forEach(function(g) {
        u.removeAttribute(g);
      }));
    });
  };
}
const Y3 = {
  name: "applyStyles",
  enabled: !0,
  phase: "write",
  fn: H3,
  effect: W3,
  requires: ["computeStyles"]
};
function Ws(e) {
  return e.split("-")[0];
}
var Rd = Math.max, PT = Math.min, Uf = Math.round;
function Ew() {
  var e = navigator.userAgentData;
  return e != null && e.brands && Array.isArray(e.brands) ? e.brands.map(function(n) {
    return n.brand + "/" + n.version;
  }).join(" ") : navigator.userAgent;
}
function eL() {
  return !/^((?!chrome|android).)*safari/i.test(Ew());
}
function Hf(e, n, a) {
  n === void 0 && (n = !1), a === void 0 && (a = !1);
  var s = e.getBoundingClientRect(), u = 1, d = 1;
  n && Ci(e) && (u = e.offsetWidth > 0 && Uf(s.width) / e.offsetWidth || 1, d = e.offsetHeight > 0 && Uf(s.height) / e.offsetHeight || 1);
  var p = Ed(e) ? ti(e) : window, h = p.visualViewport, g = !eL() && a, b = (s.left + (g && h ? h.offsetLeft : 0)) / u, x = (s.top + (g && h ? h.offsetTop : 0)) / d, S = s.width / u, E = s.height / d;
  return {
    width: S,
    height: E,
    top: x,
    right: b + S,
    bottom: x + E,
    left: b,
    x: b,
    y: x
  };
}
function a1(e) {
  var n = Hf(e), a = e.offsetWidth, s = e.offsetHeight;
  return Math.abs(n.width - a) <= 1 && (a = n.width), Math.abs(n.height - s) <= 1 && (s = n.height), {
    x: e.offsetLeft,
    y: e.offsetTop,
    width: a,
    height: s
  };
}
function tL(e, n) {
  var a = n.getRootNode && n.getRootNode();
  if (e.contains(n))
    return !0;
  if (a && r1(a)) {
    var s = n;
    do {
      if (s && e.isSameNode(s))
        return !0;
      s = s.parentNode || s.host;
    } while (s);
  }
  return !1;
}
function Hl(e) {
  return ti(e).getComputedStyle(e);
}
function q3(e) {
  return ["table", "td", "th"].indexOf(Ks(e)) >= 0;
}
function lu(e) {
  return ((Ed(e) ? e.ownerDocument : (
    // $FlowFixMe[prop-missing]
    e.document
  )) || window.document).documentElement;
}
function GT(e) {
  return Ks(e) === "html" ? e : (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    e.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    e.parentNode || // DOM Element detected
    (r1(e) ? e.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    lu(e)
  );
}
function zD(e) {
  return !Ci(e) || // https://github.com/popperjs/popper-core/issues/837
  Hl(e).position === "fixed" ? null : e.offsetParent;
}
function G3(e) {
  var n = /firefox/i.test(Ew()), a = /Trident/i.test(Ew());
  if (a && Ci(e)) {
    var s = Hl(e);
    if (s.position === "fixed")
      return null;
  }
  var u = GT(e);
  for (r1(u) && (u = u.host); Ci(u) && ["html", "body"].indexOf(Ks(u)) < 0; ) {
    var d = Hl(u);
    if (d.transform !== "none" || d.perspective !== "none" || d.contain === "paint" || ["transform", "perspective"].indexOf(d.willChange) !== -1 || n && d.willChange === "filter" || n && d.filter && d.filter !== "none")
      return u;
    u = u.parentNode;
  }
  return null;
}
function Og(e) {
  for (var n = ti(e), a = zD(e); a && q3(a) && Hl(a).position === "static"; )
    a = zD(a);
  return a && (Ks(a) === "html" || Ks(a) === "body" && Hl(a).position === "static") ? n : a || G3(e) || n;
}
function i1(e) {
  return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y";
}
function Qv(e, n, a) {
  return Rd(e, PT(n, a));
}
function K3(e, n, a) {
  var s = Qv(e, n, a);
  return s > a ? a : s;
}
function nL() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function oL(e) {
  return Object.assign({}, nL(), e);
}
function rL(e, n) {
  return n.reduce(function(a, s) {
    return a[s] = e, a;
  }, {});
}
var Q3 = function(n, a) {
  return n = typeof n == "function" ? n(Object.assign({}, a.rects, {
    placement: a.placement
  })) : n, oL(typeof n != "number" ? n : rL(n, Eg));
};
function X3(e) {
  var n, a = e.state, s = e.name, u = e.options, d = a.elements.arrow, p = a.modifiersData.popperOffsets, h = Ws(a.placement), g = i1(h), b = [_a, Si].indexOf(h) >= 0, x = b ? "height" : "width";
  if (!(!d || !p)) {
    var S = Q3(u.padding, a), E = a1(d), R = g === "y" ? Aa : _a, $ = g === "y" ? xi : Si, M = a.rects.reference[x] + a.rects.reference[g] - p[g] - a.rects.popper[x], O = p[g] - a.rects.reference[g], N = Og(d), V = N ? g === "y" ? N.clientHeight || 0 : N.clientWidth || 0 : 0, I = M / 2 - O / 2, z = S[R], B = V - E[x] - S[$], P = V / 2 - E[x] / 2 + I, F = Qv(z, P, B), H = g;
    a.modifiersData[s] = (n = {}, n[H] = F, n.centerOffset = F - P, n);
  }
}
function Z3(e) {
  var n = e.state, a = e.options, s = a.element, u = s === void 0 ? "[data-popper-arrow]" : s;
  u != null && (typeof u == "string" && (u = n.elements.popper.querySelector(u), !u) || tL(n.elements.popper, u) && (n.elements.arrow = u));
}
const J3 = {
  name: "arrow",
  enabled: !0,
  phase: "main",
  fn: X3,
  effect: Z3,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
function Wf(e) {
  return e.split("-")[1];
}
var e6 = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function t6(e, n) {
  var a = e.x, s = e.y, u = n.devicePixelRatio || 1;
  return {
    x: Uf(a * u) / u || 0,
    y: Uf(s * u) / u || 0
  };
}
function FD(e) {
  var n, a = e.popper, s = e.popperRect, u = e.placement, d = e.variation, p = e.offsets, h = e.position, g = e.gpuAcceleration, b = e.adaptive, x = e.roundOffsets, S = e.isFixed, E = p.x, R = E === void 0 ? 0 : E, $ = p.y, M = $ === void 0 ? 0 : $, O = typeof x == "function" ? x({
    x: R,
    y: M
  }) : {
    x: R,
    y: M
  };
  R = O.x, M = O.y;
  var N = p.hasOwnProperty("x"), V = p.hasOwnProperty("y"), I = _a, z = Aa, B = window;
  if (b) {
    var P = Og(a), F = "clientHeight", H = "clientWidth";
    if (P === ti(a) && (P = lu(a), Hl(P).position !== "static" && h === "absolute" && (F = "scrollHeight", H = "scrollWidth")), P = P, u === Aa || (u === _a || u === Si) && d === ug) {
      z = xi;
      var U = S && P === B && B.visualViewport ? B.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        P[F]
      );
      M -= U - s.height, M *= g ? 1 : -1;
    }
    if (u === _a || (u === Aa || u === xi) && d === ug) {
      I = Si;
      var Q = S && P === B && B.visualViewport ? B.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        P[H]
      );
      R -= Q - s.width, R *= g ? 1 : -1;
    }
  }
  var Y = Object.assign({
    position: h
  }, b && e6), te = x === !0 ? t6({
    x: R,
    y: M
  }, ti(a)) : {
    x: R,
    y: M
  };
  if (R = te.x, M = te.y, g) {
    var Z;
    return Object.assign({}, Y, (Z = {}, Z[z] = V ? "0" : "", Z[I] = N ? "0" : "", Z.transform = (B.devicePixelRatio || 1) <= 1 ? "translate(" + R + "px, " + M + "px)" : "translate3d(" + R + "px, " + M + "px, 0)", Z));
  }
  return Object.assign({}, Y, (n = {}, n[z] = V ? M + "px" : "", n[I] = N ? R + "px" : "", n.transform = "", n));
}
function n6(e) {
  var n = e.state, a = e.options, s = a.gpuAcceleration, u = s === void 0 ? !0 : s, d = a.adaptive, p = d === void 0 ? !0 : d, h = a.roundOffsets, g = h === void 0 ? !0 : h, b = {
    placement: Ws(n.placement),
    variation: Wf(n.placement),
    popper: n.elements.popper,
    popperRect: n.rects.popper,
    gpuAcceleration: u,
    isFixed: n.options.strategy === "fixed"
  };
  n.modifiersData.popperOffsets != null && (n.styles.popper = Object.assign({}, n.styles.popper, FD(Object.assign({}, b, {
    offsets: n.modifiersData.popperOffsets,
    position: n.options.strategy,
    adaptive: p,
    roundOffsets: g
  })))), n.modifiersData.arrow != null && (n.styles.arrow = Object.assign({}, n.styles.arrow, FD(Object.assign({}, b, {
    offsets: n.modifiersData.arrow,
    position: "absolute",
    adaptive: !1,
    roundOffsets: g
  })))), n.attributes.popper = Object.assign({}, n.attributes.popper, {
    "data-popper-placement": n.placement
  });
}
const o6 = {
  name: "computeStyles",
  enabled: !0,
  phase: "beforeWrite",
  fn: n6,
  data: {}
};
var WC = {
  passive: !0
};
function r6(e) {
  var n = e.state, a = e.instance, s = e.options, u = s.scroll, d = u === void 0 ? !0 : u, p = s.resize, h = p === void 0 ? !0 : p, g = ti(n.elements.popper), b = [].concat(n.scrollParents.reference, n.scrollParents.popper);
  return d && b.forEach(function(x) {
    x.addEventListener("scroll", a.update, WC);
  }), h && g.addEventListener("resize", a.update, WC), function() {
    d && b.forEach(function(x) {
      x.removeEventListener("scroll", a.update, WC);
    }), h && g.removeEventListener("resize", a.update, WC);
  };
}
const a6 = {
  name: "eventListeners",
  enabled: !0,
  phase: "write",
  fn: function() {
  },
  effect: r6,
  data: {}
};
var i6 = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function pT(e) {
  return e.replace(/left|right|bottom|top/g, function(n) {
    return i6[n];
  });
}
var s6 = {
  start: "end",
  end: "start"
};
function jD(e) {
  return e.replace(/start|end/g, function(n) {
    return s6[n];
  });
}
function s1(e) {
  var n = ti(e), a = n.pageXOffset, s = n.pageYOffset;
  return {
    scrollLeft: a,
    scrollTop: s
  };
}
function l1(e) {
  return Hf(lu(e)).left + s1(e).scrollLeft;
}
function l6(e, n) {
  var a = ti(e), s = lu(e), u = a.visualViewport, d = s.clientWidth, p = s.clientHeight, h = 0, g = 0;
  if (u) {
    d = u.width, p = u.height;
    var b = eL();
    (b || !b && n === "fixed") && (h = u.offsetLeft, g = u.offsetTop);
  }
  return {
    width: d,
    height: p,
    x: h + l1(e),
    y: g
  };
}
function c6(e) {
  var n, a = lu(e), s = s1(e), u = (n = e.ownerDocument) == null ? void 0 : n.body, d = Rd(a.scrollWidth, a.clientWidth, u ? u.scrollWidth : 0, u ? u.clientWidth : 0), p = Rd(a.scrollHeight, a.clientHeight, u ? u.scrollHeight : 0, u ? u.clientHeight : 0), h = -s.scrollLeft + l1(e), g = -s.scrollTop;
  return Hl(u || a).direction === "rtl" && (h += Rd(a.clientWidth, u ? u.clientWidth : 0) - d), {
    width: d,
    height: p,
    x: h,
    y: g
  };
}
function c1(e) {
  var n = Hl(e), a = n.overflow, s = n.overflowX, u = n.overflowY;
  return /auto|scroll|overlay|hidden/.test(a + u + s);
}
function aL(e) {
  return ["html", "body", "#document"].indexOf(Ks(e)) >= 0 ? e.ownerDocument.body : Ci(e) && c1(e) ? e : aL(GT(e));
}
function Xv(e, n) {
  var a;
  n === void 0 && (n = []);
  var s = aL(e), u = s === ((a = e.ownerDocument) == null ? void 0 : a.body), d = ti(s), p = u ? [d].concat(d.visualViewport || [], c1(s) ? s : []) : s, h = n.concat(p);
  return u ? h : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    h.concat(Xv(GT(p)))
  );
}
function Ow(e) {
  return Object.assign({}, e, {
    left: e.x,
    top: e.y,
    right: e.x + e.width,
    bottom: e.y + e.height
  });
}
function u6(e, n) {
  var a = Hf(e, !1, n === "fixed");
  return a.top = a.top + e.clientTop, a.left = a.left + e.clientLeft, a.bottom = a.top + e.clientHeight, a.right = a.left + e.clientWidth, a.width = e.clientWidth, a.height = e.clientHeight, a.x = a.left, a.y = a.top, a;
}
function UD(e, n, a) {
  return n === ZN ? Ow(l6(e, a)) : Ed(n) ? u6(n, a) : Ow(c6(lu(e)));
}
function d6(e) {
  var n = Xv(GT(e)), a = ["absolute", "fixed"].indexOf(Hl(e).position) >= 0, s = a && Ci(e) ? Og(e) : e;
  return Ed(s) ? n.filter(function(u) {
    return Ed(u) && tL(u, s) && Ks(u) !== "body";
  }) : [];
}
function p6(e, n, a, s) {
  var u = n === "clippingParents" ? d6(e) : [].concat(n), d = [].concat(u, [a]), p = d[0], h = d.reduce(function(g, b) {
    var x = UD(e, b, s);
    return g.top = Rd(x.top, g.top), g.right = PT(x.right, g.right), g.bottom = PT(x.bottom, g.bottom), g.left = Rd(x.left, g.left), g;
  }, UD(e, p, s));
  return h.width = h.right - h.left, h.height = h.bottom - h.top, h.x = h.left, h.y = h.top, h;
}
function iL(e) {
  var n = e.reference, a = e.element, s = e.placement, u = s ? Ws(s) : null, d = s ? Wf(s) : null, p = n.x + n.width / 2 - a.width / 2, h = n.y + n.height / 2 - a.height / 2, g;
  switch (u) {
    case Aa:
      g = {
        x: p,
        y: n.y - a.height
      };
      break;
    case xi:
      g = {
        x: p,
        y: n.y + n.height
      };
      break;
    case Si:
      g = {
        x: n.x + n.width,
        y: h
      };
      break;
    case _a:
      g = {
        x: n.x - a.width,
        y: h
      };
      break;
    default:
      g = {
        x: n.x,
        y: n.y
      };
  }
  var b = u ? i1(u) : null;
  if (b != null) {
    var x = b === "y" ? "height" : "width";
    switch (d) {
      case jf:
        g[b] = g[b] - (n[x] / 2 - a[x] / 2);
        break;
      case ug:
        g[b] = g[b] + (n[x] / 2 - a[x] / 2);
        break;
    }
  }
  return g;
}
function dg(e, n) {
  n === void 0 && (n = {});
  var a = n, s = a.placement, u = s === void 0 ? e.placement : s, d = a.strategy, p = d === void 0 ? e.strategy : d, h = a.boundary, g = h === void 0 ? $3 : h, b = a.rootBoundary, x = b === void 0 ? ZN : b, S = a.elementContext, E = S === void 0 ? Sv : S, R = a.altBoundary, $ = R === void 0 ? !1 : R, M = a.padding, O = M === void 0 ? 0 : M, N = oL(typeof O != "number" ? O : rL(O, Eg)), V = E === Sv ? N3 : Sv, I = e.rects.popper, z = e.elements[$ ? V : E], B = p6(Ed(z) ? z : z.contextElement || lu(e.elements.popper), g, x, p), P = Hf(e.elements.reference), F = iL({
    reference: P,
    element: I,
    strategy: "absolute",
    placement: u
  }), H = Ow(Object.assign({}, I, F)), U = E === Sv ? H : P, Q = {
    top: B.top - U.top + N.top,
    bottom: U.bottom - B.bottom + N.bottom,
    left: B.left - U.left + N.left,
    right: U.right - B.right + N.right
  }, Y = e.modifiersData.offset;
  if (E === Sv && Y) {
    var te = Y[u];
    Object.keys(Q).forEach(function(Z) {
      var q = [Si, xi].indexOf(Z) >= 0 ? 1 : -1, X = [Aa, xi].indexOf(Z) >= 0 ? "y" : "x";
      Q[Z] += te[X] * q;
    });
  }
  return Q;
}
function f6(e, n) {
  n === void 0 && (n = {});
  var a = n, s = a.placement, u = a.boundary, d = a.rootBoundary, p = a.padding, h = a.flipVariations, g = a.allowedAutoPlacements, b = g === void 0 ? JN : g, x = Wf(s), S = x ? h ? BD : BD.filter(function($) {
    return Wf($) === x;
  }) : Eg, E = S.filter(function($) {
    return b.indexOf($) >= 0;
  });
  E.length === 0 && (E = S);
  var R = E.reduce(function($, M) {
    return $[M] = dg(e, {
      placement: M,
      boundary: u,
      rootBoundary: d,
      padding: p
    })[Ws(M)], $;
  }, {});
  return Object.keys(R).sort(function($, M) {
    return R[$] - R[M];
  });
}
function m6(e) {
  if (Ws(e) === o1)
    return [];
  var n = pT(e);
  return [jD(e), n, jD(n)];
}
function h6(e) {
  var n = e.state, a = e.options, s = e.name;
  if (!n.modifiersData[s]._skip) {
    for (var u = a.mainAxis, d = u === void 0 ? !0 : u, p = a.altAxis, h = p === void 0 ? !0 : p, g = a.fallbackPlacements, b = a.padding, x = a.boundary, S = a.rootBoundary, E = a.altBoundary, R = a.flipVariations, $ = R === void 0 ? !0 : R, M = a.allowedAutoPlacements, O = n.options.placement, N = Ws(O), V = N === O, I = g || (V || !$ ? [pT(O)] : m6(O)), z = [O].concat(I).reduce(function(ue, xe) {
      return ue.concat(Ws(xe) === o1 ? f6(n, {
        placement: xe,
        boundary: x,
        rootBoundary: S,
        padding: b,
        flipVariations: $,
        allowedAutoPlacements: M
      }) : xe);
    }, []), B = n.rects.reference, P = n.rects.popper, F = /* @__PURE__ */ new Map(), H = !0, U = z[0], Q = 0; Q < z.length; Q++) {
      var Y = z[Q], te = Ws(Y), Z = Wf(Y) === jf, q = [Aa, xi].indexOf(te) >= 0, X = q ? "width" : "height", oe = dg(n, {
        placement: Y,
        boundary: x,
        rootBoundary: S,
        altBoundary: E,
        padding: b
      }), ie = q ? Z ? Si : _a : Z ? xi : Aa;
      B[X] > P[X] && (ie = pT(ie));
      var K = pT(ie), ne = [];
      if (d && ne.push(oe[te] <= 0), h && ne.push(oe[ie] <= 0, oe[K] <= 0), ne.every(function(ue) {
        return ue;
      })) {
        U = Y, H = !1;
        break;
      }
      F.set(Y, ne);
    }
    if (H)
      for (var se = $ ? 3 : 1, ze = function(xe) {
        var me = z.find(function(Se) {
          var ce = F.get(Se);
          if (ce)
            return ce.slice(0, xe).every(function(Le) {
              return Le;
            });
        });
        if (me)
          return U = me, "break";
      }, Ue = se; Ue > 0; Ue--) {
        var Oe = ze(Ue);
        if (Oe === "break")
          break;
      }
    n.placement !== U && (n.modifiersData[s]._skip = !0, n.placement = U, n.reset = !0);
  }
}
const v6 = {
  name: "flip",
  enabled: !0,
  phase: "main",
  fn: h6,
  requiresIfExists: ["offset"],
  data: {
    _skip: !1
  }
};
function HD(e, n, a) {
  return a === void 0 && (a = {
    x: 0,
    y: 0
  }), {
    top: e.top - n.height - a.y,
    right: e.right - n.width + a.x,
    bottom: e.bottom - n.height + a.y,
    left: e.left - n.width - a.x
  };
}
function WD(e) {
  return [Aa, Si, xi, _a].some(function(n) {
    return e[n] >= 0;
  });
}
function g6(e) {
  var n = e.state, a = e.name, s = n.rects.reference, u = n.rects.popper, d = n.modifiersData.preventOverflow, p = dg(n, {
    elementContext: "reference"
  }), h = dg(n, {
    altBoundary: !0
  }), g = HD(p, s), b = HD(h, u, d), x = WD(g), S = WD(b);
  n.modifiersData[a] = {
    referenceClippingOffsets: g,
    popperEscapeOffsets: b,
    isReferenceHidden: x,
    hasPopperEscaped: S
  }, n.attributes.popper = Object.assign({}, n.attributes.popper, {
    "data-popper-reference-hidden": x,
    "data-popper-escaped": S
  });
}
const b6 = {
  name: "hide",
  enabled: !0,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: g6
};
function y6(e, n, a) {
  var s = Ws(e), u = [_a, Aa].indexOf(s) >= 0 ? -1 : 1, d = typeof a == "function" ? a(Object.assign({}, n, {
    placement: e
  })) : a, p = d[0], h = d[1];
  return p = p || 0, h = (h || 0) * u, [_a, Si].indexOf(s) >= 0 ? {
    x: h,
    y: p
  } : {
    x: p,
    y: h
  };
}
function C6(e) {
  var n = e.state, a = e.options, s = e.name, u = a.offset, d = u === void 0 ? [0, 0] : u, p = JN.reduce(function(x, S) {
    return x[S] = y6(S, n.rects, d), x;
  }, {}), h = p[n.placement], g = h.x, b = h.y;
  n.modifiersData.popperOffsets != null && (n.modifiersData.popperOffsets.x += g, n.modifiersData.popperOffsets.y += b), n.modifiersData[s] = p;
}
const T6 = {
  name: "offset",
  enabled: !0,
  phase: "main",
  requires: ["popperOffsets"],
  fn: C6
};
function x6(e) {
  var n = e.state, a = e.name;
  n.modifiersData[a] = iL({
    reference: n.rects.reference,
    element: n.rects.popper,
    strategy: "absolute",
    placement: n.placement
  });
}
const S6 = {
  name: "popperOffsets",
  enabled: !0,
  phase: "read",
  fn: x6,
  data: {}
};
function k6(e) {
  return e === "x" ? "y" : "x";
}
function w6(e) {
  var n = e.state, a = e.options, s = e.name, u = a.mainAxis, d = u === void 0 ? !0 : u, p = a.altAxis, h = p === void 0 ? !1 : p, g = a.boundary, b = a.rootBoundary, x = a.altBoundary, S = a.padding, E = a.tether, R = E === void 0 ? !0 : E, $ = a.tetherOffset, M = $ === void 0 ? 0 : $, O = dg(n, {
    boundary: g,
    rootBoundary: b,
    padding: S,
    altBoundary: x
  }), N = Ws(n.placement), V = Wf(n.placement), I = !V, z = i1(N), B = k6(z), P = n.modifiersData.popperOffsets, F = n.rects.reference, H = n.rects.popper, U = typeof M == "function" ? M(Object.assign({}, n.rects, {
    placement: n.placement
  })) : M, Q = typeof U == "number" ? {
    mainAxis: U,
    altAxis: U
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, U), Y = n.modifiersData.offset ? n.modifiersData.offset[n.placement] : null, te = {
    x: 0,
    y: 0
  };
  if (P) {
    if (d) {
      var Z, q = z === "y" ? Aa : _a, X = z === "y" ? xi : Si, oe = z === "y" ? "height" : "width", ie = P[z], K = ie + O[q], ne = ie - O[X], se = R ? -H[oe] / 2 : 0, ze = V === jf ? F[oe] : H[oe], Ue = V === jf ? -H[oe] : -F[oe], Oe = n.elements.arrow, ue = R && Oe ? a1(Oe) : {
        width: 0,
        height: 0
      }, xe = n.modifiersData["arrow#persistent"] ? n.modifiersData["arrow#persistent"].padding : nL(), me = xe[q], Se = xe[X], ce = Qv(0, F[oe], ue[oe]), Le = I ? F[oe] / 2 - se - ce - me - Q.mainAxis : ze - ce - me - Q.mainAxis, Ze = I ? -F[oe] / 2 + se + ce + Se + Q.mainAxis : Ue + ce + Se + Q.mainAxis, Ee = n.elements.arrow && Og(n.elements.arrow), Ae = Ee ? z === "y" ? Ee.clientTop || 0 : Ee.clientLeft || 0 : 0, Ce = (Z = Y == null ? void 0 : Y[z]) != null ? Z : 0, ae = ie + Le - Ce - Ae, Pe = ie + Ze - Ce, ke = Qv(R ? PT(K, ae) : K, ie, R ? Rd(ne, Pe) : ne);
      P[z] = ke, te[z] = ke - ie;
    }
    if (h) {
      var pt, _e = z === "x" ? Aa : _a, dt = z === "x" ? xi : Si, ge = P[B], ve = B === "y" ? "height" : "width", qe = ge + O[_e], vt = ge - O[dt], yt = [Aa, _a].indexOf(N) !== -1, Mt = (pt = Y == null ? void 0 : Y[B]) != null ? pt : 0, bt = yt ? qe : ge - F[ve] - H[ve] - Mt + Q.altAxis, wt = yt ? ge + F[ve] + H[ve] - Mt - Q.altAxis : vt, we = R && yt ? K3(bt, ge, wt) : Qv(R ? bt : qe, ge, R ? wt : vt);
      P[B] = we, te[B] = we - ge;
    }
    n.modifiersData[s] = te;
  }
}
const R6 = {
  name: "preventOverflow",
  enabled: !0,
  phase: "main",
  fn: w6,
  requiresIfExists: ["offset"]
};
function E6(e) {
  return {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  };
}
function O6(e) {
  return e === ti(e) || !Ci(e) ? s1(e) : E6(e);
}
function P6(e) {
  var n = e.getBoundingClientRect(), a = Uf(n.width) / e.offsetWidth || 1, s = Uf(n.height) / e.offsetHeight || 1;
  return a !== 1 || s !== 1;
}
function D6(e, n, a) {
  a === void 0 && (a = !1);
  var s = Ci(n), u = Ci(n) && P6(n), d = lu(n), p = Hf(e, u, a), h = {
    scrollLeft: 0,
    scrollTop: 0
  }, g = {
    x: 0,
    y: 0
  };
  return (s || !s && !a) && ((Ks(n) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
  c1(d)) && (h = O6(n)), Ci(n) ? (g = Hf(n, !0), g.x += n.clientLeft, g.y += n.clientTop) : d && (g.x = l1(d))), {
    x: p.left + h.scrollLeft - g.x,
    y: p.top + h.scrollTop - g.y,
    width: p.width,
    height: p.height
  };
}
function M6(e) {
  var n = /* @__PURE__ */ new Map(), a = /* @__PURE__ */ new Set(), s = [];
  e.forEach(function(d) {
    n.set(d.name, d);
  });
  function u(d) {
    a.add(d.name);
    var p = [].concat(d.requires || [], d.requiresIfExists || []);
    p.forEach(function(h) {
      if (!a.has(h)) {
        var g = n.get(h);
        g && u(g);
      }
    }), s.push(d);
  }
  return e.forEach(function(d) {
    a.has(d.name) || u(d);
  }), s;
}
function $6(e) {
  var n = M6(e);
  return U3.reduce(function(a, s) {
    return a.concat(n.filter(function(u) {
      return u.phase === s;
    }));
  }, []);
}
function N6(e) {
  var n;
  return function() {
    return n || (n = new Promise(function(a) {
      Promise.resolve().then(function() {
        n = void 0, a(e());
      });
    })), n;
  };
}
function L6(e) {
  var n = e.reduce(function(a, s) {
    var u = a[s.name];
    return a[s.name] = u ? Object.assign({}, u, s, {
      options: Object.assign({}, u.options, s.options),
      data: Object.assign({}, u.data, s.data)
    }) : s, a;
  }, {});
  return Object.keys(n).map(function(a) {
    return n[a];
  });
}
var YD = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function qD() {
  for (var e = arguments.length, n = new Array(e), a = 0; a < e; a++)
    n[a] = arguments[a];
  return !n.some(function(s) {
    return !(s && typeof s.getBoundingClientRect == "function");
  });
}
function I6(e) {
  e === void 0 && (e = {});
  var n = e, a = n.defaultModifiers, s = a === void 0 ? [] : a, u = n.defaultOptions, d = u === void 0 ? YD : u;
  return function(h, g, b) {
    b === void 0 && (b = d);
    var x = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, YD, d),
      modifiersData: {},
      elements: {
        reference: h,
        popper: g
      },
      attributes: {},
      styles: {}
    }, S = [], E = !1, R = {
      state: x,
      setOptions: function(N) {
        var V = typeof N == "function" ? N(x.options) : N;
        M(), x.options = Object.assign({}, d, x.options, V), x.scrollParents = {
          reference: Ed(h) ? Xv(h) : h.contextElement ? Xv(h.contextElement) : [],
          popper: Xv(g)
        };
        var I = $6(L6([].concat(s, x.options.modifiers)));
        return x.orderedModifiers = I.filter(function(z) {
          return z.enabled;
        }), $(), R.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function() {
        if (!E) {
          var N = x.elements, V = N.reference, I = N.popper;
          if (qD(V, I)) {
            x.rects = {
              reference: D6(V, Og(I), x.options.strategy === "fixed"),
              popper: a1(I)
            }, x.reset = !1, x.placement = x.options.placement, x.orderedModifiers.forEach(function(Q) {
              return x.modifiersData[Q.name] = Object.assign({}, Q.data);
            });
            for (var z = 0; z < x.orderedModifiers.length; z++) {
              if (x.reset === !0) {
                x.reset = !1, z = -1;
                continue;
              }
              var B = x.orderedModifiers[z], P = B.fn, F = B.options, H = F === void 0 ? {} : F, U = B.name;
              typeof P == "function" && (x = P({
                state: x,
                options: H,
                name: U,
                instance: R
              }) || x);
            }
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: N6(function() {
        return new Promise(function(O) {
          R.forceUpdate(), O(x);
        });
      }),
      destroy: function() {
        M(), E = !0;
      }
    };
    if (!qD(h, g))
      return R;
    R.setOptions(b).then(function(O) {
      !E && b.onFirstUpdate && b.onFirstUpdate(O);
    });
    function $() {
      x.orderedModifiers.forEach(function(O) {
        var N = O.name, V = O.options, I = V === void 0 ? {} : V, z = O.effect;
        if (typeof z == "function") {
          var B = z({
            state: x,
            name: N,
            instance: R,
            options: I
          }), P = function() {
          };
          S.push(B || P);
        }
      });
    }
    function M() {
      S.forEach(function(O) {
        return O();
      }), S = [];
    }
    return R;
  };
}
var A6 = [a6, S6, o6, Y3, T6, v6, R6, J3, b6], _6 = /* @__PURE__ */ I6({
  defaultModifiers: A6
});
const sL = "Popper";
function V6(e) {
  return XN(sL, e);
}
m3(sL, ["root"]);
const B6 = ["anchorEl", "children", "direction", "disablePortal", "modifiers", "open", "placement", "popperOptions", "popperRef", "slotProps", "slots", "TransitionProps", "ownerState"], z6 = ["anchorEl", "children", "container", "direction", "disablePortal", "keepMounted", "modifiers", "open", "placement", "popperOptions", "popperRef", "style", "transition", "slotProps", "slots"];
function F6(e, n) {
  if (n === "ltr")
    return e;
  switch (e) {
    case "bottom-end":
      return "bottom-start";
    case "bottom-start":
      return "bottom-end";
    case "top-end":
      return "top-start";
    case "top-start":
      return "top-end";
    default:
      return e;
  }
}
function DT(e) {
  return typeof e == "function" ? e() : e;
}
function KT(e) {
  return e.nodeType !== void 0;
}
function j6(e) {
  return !KT(e);
}
const U6 = () => He({
  root: ["root"]
}, SW(V6)), H6 = {}, W6 = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s;
  const {
    anchorEl: u,
    children: d,
    direction: p,
    disablePortal: h,
    modifiers: g,
    open: b,
    placement: x,
    popperOptions: S,
    popperRef: E,
    slotProps: R = {},
    slots: $ = {},
    TransitionProps: M
    // @ts-ignore internal logic
    // prevent from spreading to DOM, it can come from the parent component e.g. Select.
  } = n, O = le(n, B6), N = k.useRef(null), V = cn(N, a), I = k.useRef(null), z = cn(I, E), B = k.useRef(z);
  ro(() => {
    B.current = z;
  }, [z]), k.useImperativeHandle(E, () => I.current, []);
  const P = F6(x, p), [F, H] = k.useState(P), [U, Q] = k.useState(DT(u));
  k.useEffect(() => {
    I.current && I.current.forceUpdate();
  }), k.useEffect(() => {
    u && Q(DT(u));
  }, [u]), ro(() => {
    if (!U || !b)
      return;
    const X = (K) => {
      H(K.placement);
    };
    if (process.env.NODE_ENV !== "production" && U && KT(U) && U.nodeType === 1) {
      const K = U.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && K.top === 0 && K.left === 0 && K.right === 0 && K.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    let oe = [{
      name: "preventOverflow",
      options: {
        altBoundary: h
      }
    }, {
      name: "flip",
      options: {
        altBoundary: h
      }
    }, {
      name: "onUpdate",
      enabled: !0,
      phase: "afterWrite",
      fn: ({
        state: K
      }) => {
        X(K);
      }
    }];
    g != null && (oe = oe.concat(g)), S && S.modifiers != null && (oe = oe.concat(S.modifiers));
    const ie = _6(U, N.current, y({
      placement: P
    }, S, {
      modifiers: oe
    }));
    return B.current(ie), () => {
      ie.destroy(), B.current(null);
    };
  }, [U, h, g, b, S, P]);
  const Y = {
    placement: F
  };
  M !== null && (Y.TransitionProps = M);
  const te = U6(), Z = (s = $.root) != null ? s : "div", q = rn({
    elementType: Z,
    externalSlotProps: R.root,
    externalForwardedProps: O,
    additionalProps: {
      role: "tooltip",
      ref: V
    },
    ownerState: n,
    className: te.root
  });
  return /* @__PURE__ */ _(Z, y({}, q, {
    children: typeof d == "function" ? d(Y) : d
  }));
}), lL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const {
    anchorEl: s,
    children: u,
    container: d,
    direction: p = "ltr",
    disablePortal: h = !1,
    keepMounted: g = !1,
    modifiers: b,
    open: x,
    placement: S = "bottom",
    popperOptions: E = H6,
    popperRef: R,
    style: $,
    transition: M = !1,
    slotProps: O = {},
    slots: N = {}
  } = n, V = le(n, z6), [I, z] = k.useState(!0), B = () => {
    z(!1);
  }, P = () => {
    z(!0);
  };
  if (!g && !x && (!M || I))
    return null;
  let F;
  if (d)
    F = d;
  else if (s) {
    const Q = DT(s);
    F = Q && KT(Q) ? $n(Q).body : $n(null).body;
  }
  const H = !x && g && (!M || I) ? "none" : void 0, U = M ? {
    in: x,
    onEnter: B,
    onExited: P
  } : void 0;
  return /* @__PURE__ */ _(cg, {
    disablePortal: h,
    container: F,
    children: /* @__PURE__ */ _(W6, y({
      anchorEl: s,
      direction: p,
      disablePortal: h,
      modifiers: b,
      ref: a,
      open: M ? !I : x,
      placement: S,
      popperOptions: E,
      popperRef: R,
      slotProps: O,
      slots: N
    }, V, {
      style: y({
        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
        position: "fixed",
        // Fix Popper.js display issue
        top: 0,
        left: 0,
        display: H
      }, $),
      TransitionProps: U,
      children: u
    }))
  });
});
process.env.NODE_ENV !== "production" && (lL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: Xo(t.oneOfType([Gs, t.object, t.func]), (e) => {
    if (e.open) {
      const n = DT(e.anchorEl);
      if (n && KT(n) && n.nodeType === 1) {
        const a = n.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && a.top === 0 && a.left === 0 && a.right === 0 && a.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!n || typeof n.getBoundingClientRect != "function" || j6(n) && n.contextElement != null && n.contextElement.nodeType !== 1)
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "It should be an HTML element instance or a virtualElement ", "(https://popper.js.org/docs/v2/virtual-elements/)."].join(`
`));
    }
    return null;
  }),
  /**
   * Popper render function or node.
   */
  children: t.oneOfType([t.node, t.func]),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: t.oneOfType([Gs, t.func]),
  /**
   * Direction of the text.
   * @default 'ltr'
   */
  direction: t.oneOf(["ltr", "rtl"]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: t.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: t.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: t.arrayOf(t.shape({
    data: t.object,
    effect: t.func,
    enabled: t.bool,
    fn: t.func,
    name: t.any,
    options: t.object,
    phase: t.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: t.arrayOf(t.string),
    requiresIfExists: t.arrayOf(t.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: t.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: t.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: t.shape({
    modifiers: t.array,
    onFirstUpdate: t.func,
    placement: t.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: t.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: Wn,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: t.shape({
    root: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: t.shape({
    root: t.elementType
  }),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: t.bool
});
const Y6 = 2;
function cL(e, n) {
  return e - n;
}
function GD(e, n) {
  var a;
  const {
    index: s
  } = (a = e.reduce((u, d, p) => {
    const h = Math.abs(n - d);
    return u === null || h < u.distance || h === u.distance ? {
      distance: h,
      index: p
    } : u;
  }, null)) != null ? a : {};
  return s;
}
function YC(e, n) {
  if (n.current !== void 0 && e.changedTouches) {
    const a = e;
    for (let s = 0; s < a.changedTouches.length; s += 1) {
      const u = a.changedTouches[s];
      if (u.identifier === n.current)
        return {
          x: u.clientX,
          y: u.clientY
        };
    }
    return !1;
  }
  return {
    x: e.clientX,
    y: e.clientY
  };
}
function MT(e, n, a) {
  return (e - n) * 100 / (a - n);
}
function q6(e, n, a) {
  return (a - n) * e + n;
}
function G6(e) {
  if (Math.abs(e) < 1) {
    const a = e.toExponential().split("e-"), s = a[0].split(".")[1];
    return (s ? s.length : 0) + parseInt(a[1], 10);
  }
  const n = e.toString().split(".")[1];
  return n ? n.length : 0;
}
function K6(e, n, a) {
  const s = Math.round((e - a) / n) * n + a;
  return Number(s.toFixed(G6(n)));
}
function KD({
  values: e,
  newValue: n,
  index: a
}) {
  const s = e.slice();
  return s[a] = n, s.sort(cL);
}
function qC({
  sliderRef: e,
  activeIndex: n,
  setActive: a
}) {
  var s, u;
  const d = $n(e.current);
  if (!((s = e.current) != null && s.contains(d.activeElement)) || Number(d == null || (u = d.activeElement) == null ? void 0 : u.getAttribute("data-index")) !== n) {
    var p;
    (p = e.current) == null || p.querySelector(`[type="range"][data-index="${n}"]`).focus();
  }
  a && a(n);
}
function GC(e, n) {
  return typeof e == "number" && typeof n == "number" ? e === n : typeof e == "object" && typeof n == "object" ? TW(e, n) : !1;
}
const Q6 = {
  horizontal: {
    offset: (e) => ({
      left: `${e}%`
    }),
    leap: (e) => ({
      width: `${e}%`
    })
  },
  "horizontal-reverse": {
    offset: (e) => ({
      right: `${e}%`
    }),
    leap: (e) => ({
      width: `${e}%`
    })
  },
  vertical: {
    offset: (e) => ({
      bottom: `${e}%`
    }),
    leap: (e) => ({
      height: `${e}%`
    })
  }
}, X6 = (e) => e;
let KC;
function QD() {
  return KC === void 0 && (typeof CSS < "u" && typeof CSS.supports == "function" ? KC = CSS.supports("touch-action", "none") : KC = !0), KC;
}
function Z6(e) {
  const {
    "aria-labelledby": n,
    defaultValue: a,
    disabled: s = !1,
    disableSwap: u = !1,
    isRtl: d = !1,
    marks: p = !1,
    max: h = 100,
    min: g = 0,
    name: b,
    onChange: x,
    onChangeCommitted: S,
    orientation: E = "horizontal",
    rootRef: R,
    scale: $ = X6,
    step: M = 1,
    shiftStep: O = 10,
    tabIndex: N,
    value: V
  } = e, I = k.useRef(), [z, B] = k.useState(-1), [P, F] = k.useState(-1), [H, U] = k.useState(!1), Q = k.useRef(0), [Y, te] = Eo({
    controlled: V,
    default: a ?? g,
    name: "Slider"
  }), Z = x && ((we, Re, at) => {
    const Ke = we.nativeEvent || we, lt = new Ke.constructor(Ke.type, Ke);
    Object.defineProperty(lt, "target", {
      writable: !0,
      value: {
        value: Re,
        name: b
      }
    }), x(lt, Re, at);
  }), q = Array.isArray(Y);
  let X = q ? Y.slice().sort(cL) : [Y];
  X = X.map((we) => we == null ? g : Jc(we, g, h));
  const oe = p === !0 && M !== null ? [...Array(Math.floor((h - g) / M) + 1)].map((we, Re) => ({
    value: g + M * Re
  })) : p || [], ie = oe.map((we) => we.value), {
    isFocusVisibleRef: K,
    onBlur: ne,
    onFocus: se,
    ref: ze
  } = Xf(), [Ue, Oe] = k.useState(-1), ue = k.useRef(), xe = cn(ze, ue), me = cn(R, xe), Se = (we) => (Re) => {
    var at;
    const Ke = Number(Re.currentTarget.getAttribute("data-index"));
    se(Re), K.current === !0 && Oe(Ke), F(Ke), we == null || (at = we.onFocus) == null || at.call(we, Re);
  }, ce = (we) => (Re) => {
    var at;
    ne(Re), K.current === !1 && Oe(-1), F(-1), we == null || (at = we.onBlur) == null || at.call(we, Re);
  }, Le = (we, Re) => {
    const at = Number(we.currentTarget.getAttribute("data-index")), Ke = X[at], lt = ie.indexOf(Ke);
    let et = Re;
    if (oe && M == null) {
      const rt = ie[ie.length - 1];
      et > rt ? et = rt : et < ie[0] ? et = ie[0] : et = et < Ke ? ie[lt - 1] : ie[lt + 1];
    }
    if (et = Jc(et, g, h), q) {
      u && (et = Jc(et, X[at - 1] || -1 / 0, X[at + 1] || 1 / 0));
      const rt = et;
      et = KD({
        values: X,
        newValue: et,
        index: at
      });
      let je = at;
      u || (je = et.indexOf(rt)), qC({
        sliderRef: ue,
        activeIndex: je
      });
    }
    te(et), Oe(at), Z && !GC(et, Y) && Z(we, et, at), S && S(we, et);
  }, Ze = (we) => (Re) => {
    var at;
    if (M !== null) {
      const Ke = Number(Re.currentTarget.getAttribute("data-index")), lt = X[Ke];
      let et = null;
      (Re.key === "ArrowLeft" || Re.key === "ArrowDown") && Re.shiftKey || Re.key === "PageDown" ? et = Math.max(lt - O, g) : ((Re.key === "ArrowRight" || Re.key === "ArrowUp") && Re.shiftKey || Re.key === "PageUp") && (et = Math.min(lt + O, h)), et !== null && (Le(Re, et), Re.preventDefault());
    }
    we == null || (at = we.onKeyDown) == null || at.call(we, Re);
  };
  ro(() => {
    if (s && ue.current.contains(document.activeElement)) {
      var we;
      (we = document.activeElement) == null || we.blur();
    }
  }, [s]), s && z !== -1 && B(-1), s && Ue !== -1 && Oe(-1);
  const Ee = (we) => (Re) => {
    var at;
    (at = we.onChange) == null || at.call(we, Re), Le(Re, Re.target.valueAsNumber);
  }, Ae = k.useRef();
  let Ce = E;
  d && E === "horizontal" && (Ce += "-reverse");
  const ae = ({
    finger: we,
    move: Re = !1
  }) => {
    const {
      current: at
    } = ue, {
      width: Ke,
      height: lt,
      bottom: et,
      left: rt
    } = at.getBoundingClientRect();
    let je;
    Ce.indexOf("vertical") === 0 ? je = (et - we.y) / lt : je = (we.x - rt) / Ke, Ce.indexOf("-reverse") !== -1 && (je = 1 - je);
    let nt;
    if (nt = q6(je, g, h), M)
      nt = K6(nt, M, g);
    else {
      const $t = GD(ie, nt);
      nt = ie[$t];
    }
    nt = Jc(nt, g, h);
    let ht = 0;
    if (q) {
      Re ? ht = Ae.current : ht = GD(X, nt), u && (nt = Jc(nt, X[ht - 1] || -1 / 0, X[ht + 1] || 1 / 0));
      const $t = nt;
      nt = KD({
        values: X,
        newValue: nt,
        index: ht
      }), u && Re || (ht = nt.indexOf($t), Ae.current = ht);
    }
    return {
      newValue: nt,
      activeIndex: ht
    };
  }, Pe = kt((we) => {
    const Re = YC(we, I);
    if (!Re)
      return;
    if (Q.current += 1, we.type === "mousemove" && we.buttons === 0) {
      ke(we);
      return;
    }
    const {
      newValue: at,
      activeIndex: Ke
    } = ae({
      finger: Re,
      move: !0
    });
    qC({
      sliderRef: ue,
      activeIndex: Ke,
      setActive: B
    }), te(at), !H && Q.current > Y6 && U(!0), Z && !GC(at, Y) && Z(we, at, Ke);
  }), ke = kt((we) => {
    const Re = YC(we, I);
    if (U(!1), !Re)
      return;
    const {
      newValue: at
    } = ae({
      finger: Re,
      move: !0
    });
    B(-1), we.type === "touchend" && F(-1), S && S(we, at), I.current = void 0, _e();
  }), pt = kt((we) => {
    if (s)
      return;
    QD() || we.preventDefault();
    const Re = we.changedTouches[0];
    Re != null && (I.current = Re.identifier);
    const at = YC(we, I);
    if (at !== !1) {
      const {
        newValue: lt,
        activeIndex: et
      } = ae({
        finger: at
      });
      qC({
        sliderRef: ue,
        activeIndex: et,
        setActive: B
      }), te(lt), Z && !GC(lt, Y) && Z(we, lt, et);
    }
    Q.current = 0;
    const Ke = $n(ue.current);
    Ke.addEventListener("touchmove", Pe, {
      passive: !0
    }), Ke.addEventListener("touchend", ke, {
      passive: !0
    });
  }), _e = k.useCallback(() => {
    const we = $n(ue.current);
    we.removeEventListener("mousemove", Pe), we.removeEventListener("mouseup", ke), we.removeEventListener("touchmove", Pe), we.removeEventListener("touchend", ke);
  }, [ke, Pe]);
  k.useEffect(() => {
    const {
      current: we
    } = ue;
    return we.addEventListener("touchstart", pt, {
      passive: QD()
    }), () => {
      we.removeEventListener("touchstart", pt), _e();
    };
  }, [_e, pt]), k.useEffect(() => {
    s && _e();
  }, [s, _e]);
  const dt = (we) => (Re) => {
    var at;
    if ((at = we.onMouseDown) == null || at.call(we, Re), s || Re.defaultPrevented || Re.button !== 0)
      return;
    Re.preventDefault();
    const Ke = YC(Re, I);
    if (Ke !== !1) {
      const {
        newValue: et,
        activeIndex: rt
      } = ae({
        finger: Ke
      });
      qC({
        sliderRef: ue,
        activeIndex: rt,
        setActive: B
      }), te(et), Z && !GC(et, Y) && Z(Re, et, rt);
    }
    Q.current = 0;
    const lt = $n(ue.current);
    lt.addEventListener("mousemove", Pe, {
      passive: !0
    }), lt.addEventListener("mouseup", ke);
  }, ge = MT(q ? X[0] : g, g, h), ve = MT(X[X.length - 1], g, h) - ge, qe = (we = {}) => {
    const Re = wd(we), at = {
      onMouseDown: dt(Re || {})
    }, Ke = y({}, Re, at);
    return y({}, we, {
      ref: me
    }, Ke);
  }, vt = (we) => (Re) => {
    var at;
    (at = we.onMouseOver) == null || at.call(we, Re);
    const Ke = Number(Re.currentTarget.getAttribute("data-index"));
    F(Ke);
  }, yt = (we) => (Re) => {
    var at;
    (at = we.onMouseLeave) == null || at.call(we, Re), F(-1);
  };
  return {
    active: z,
    axis: Ce,
    axisProps: Q6,
    dragging: H,
    focusedThumbIndex: Ue,
    getHiddenInputProps: (we = {}) => {
      var Re;
      const at = wd(we), Ke = {
        onChange: Ee(at || {}),
        onFocus: Se(at || {}),
        onBlur: ce(at || {}),
        onKeyDown: Ze(at || {})
      }, lt = y({}, at, Ke);
      return y({
        tabIndex: N,
        "aria-labelledby": n,
        "aria-orientation": E,
        "aria-valuemax": $(h),
        "aria-valuemin": $(g),
        name: b,
        type: "range",
        min: e.min,
        max: e.max,
        step: e.step === null && e.marks ? "any" : (Re = e.step) != null ? Re : void 0,
        disabled: s
      }, we, lt, {
        style: y({}, CN, {
          direction: d ? "rtl" : "ltr",
          // So that VoiceOver's focus indicator matches the thumb's dimensions
          width: "100%",
          height: "100%"
        })
      });
    },
    getRootProps: qe,
    getThumbProps: (we = {}) => {
      const Re = wd(we), at = {
        onMouseOver: vt(Re || {}),
        onMouseLeave: yt(Re || {})
      };
      return y({}, we, Re, at);
    },
    marks: oe,
    open: P,
    range: q,
    rootRef: me,
    trackLeap: ve,
    trackOffset: ge,
    values: X,
    getThumbStyle: (we) => ({
      // So the non active thumb doesn't show its label on hover.
      pointerEvents: z !== -1 && z !== we ? "none" : void 0
    })
  };
}
function J6(e = {}) {
  const {
    autoHideDuration: n = null,
    disableWindowBlurListener: a = !1,
    onClose: s,
    open: u,
    resumeHideDuration: d
  } = e, p = Fl();
  k.useEffect(() => {
    if (!u)
      return;
    function N(V) {
      V.defaultPrevented || (V.key === "Escape" || V.key === "Esc") && (s == null || s(V, "escapeKeyDown"));
    }
    return document.addEventListener("keydown", N), () => {
      document.removeEventListener("keydown", N);
    };
  }, [u, s]);
  const h = kt((N, V) => {
    s == null || s(N, V);
  }), g = kt((N) => {
    !s || N == null || p.start(N, () => {
      h(null, "timeout");
    });
  });
  k.useEffect(() => (u && g(n), p.clear), [u, n, g, p]);
  const b = (N) => {
    s == null || s(N, "clickaway");
  }, x = p.clear, S = k.useCallback(() => {
    n != null && g(d ?? n * 0.5);
  }, [n, d, g]), E = (N) => (V) => {
    const I = N.onBlur;
    I == null || I(V), S();
  }, R = (N) => (V) => {
    const I = N.onFocus;
    I == null || I(V), x();
  }, $ = (N) => (V) => {
    const I = N.onMouseEnter;
    I == null || I(V), x();
  }, M = (N) => (V) => {
    const I = N.onMouseLeave;
    I == null || I(V), S();
  };
  return k.useEffect(() => {
    if (!a && u)
      return window.addEventListener("focus", S), window.addEventListener("blur", x), () => {
        window.removeEventListener("focus", S), window.removeEventListener("blur", x);
      };
  }, [a, u, S, x]), {
    getRootProps: (N = {}) => {
      const V = y({}, wd(e), wd(N));
      return y({
        // ClickAwayListener adds an `onClick` prop which results in the alert not being announced.
        // See https://github.com/mui/material-ui/issues/29080
        role: "presentation"
      }, N, V, {
        onBlur: E(V),
        onFocus: R(V),
        onMouseEnter: $(V),
        onMouseLeave: M(V)
      });
    },
    onClickAway: b
  };
}
const e8 = ["onChange", "maxRows", "minRows", "style", "value"];
function QC(e) {
  return parseInt(e, 10) || 0;
}
const t8 = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function n8(e) {
  return e == null || Object.keys(e).length === 0 || e.outerHeightStyle === 0 && !e.overflowing;
}
const uL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const {
    onChange: s,
    maxRows: u,
    minRows: d = 1,
    style: p,
    value: h
  } = n, g = le(n, e8), {
    current: b
  } = k.useRef(h != null), x = k.useRef(null), S = cn(a, x), E = k.useRef(null), R = k.useCallback(() => {
    const O = x.current, V = Qr(O).getComputedStyle(O);
    if (V.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    const I = E.current;
    I.style.width = V.width, I.value = O.value || n.placeholder || "x", I.value.slice(-1) === `
` && (I.value += " ");
    const z = V.boxSizing, B = QC(V.paddingBottom) + QC(V.paddingTop), P = QC(V.borderBottomWidth) + QC(V.borderTopWidth), F = I.scrollHeight;
    I.value = "x";
    const H = I.scrollHeight;
    let U = F;
    d && (U = Math.max(Number(d) * H, U)), u && (U = Math.min(Number(u) * H, U)), U = Math.max(U, H);
    const Q = U + (z === "border-box" ? B + P : 0), Y = Math.abs(U - F) <= 1;
    return {
      outerHeightStyle: Q,
      overflowing: Y
    };
  }, [u, d, n.placeholder]), $ = k.useCallback(() => {
    const O = R();
    if (n8(O))
      return;
    const N = x.current;
    N.style.height = `${O.outerHeightStyle}px`, N.style.overflow = O.overflowing ? "hidden" : "";
  }, [R]);
  ro(() => {
    const O = () => {
      $();
    };
    let N;
    const V = () => {
      cancelAnimationFrame(N), N = requestAnimationFrame(() => {
        O();
      });
    }, I = Qf(O), z = x.current, B = Qr(z);
    B.addEventListener("resize", I);
    let P;
    return typeof ResizeObserver < "u" && (P = new ResizeObserver(process.env.NODE_ENV === "test" ? V : O), P.observe(z)), () => {
      I.clear(), cancelAnimationFrame(N), B.removeEventListener("resize", I), P && P.disconnect();
    };
  }, [R, $]), ro(() => {
    $();
  });
  const M = (O) => {
    b || $(), s && s(O);
  };
  return /* @__PURE__ */ st(k.Fragment, {
    children: [/* @__PURE__ */ _("textarea", y({
      value: h,
      onChange: M,
      ref: S,
      rows: d
    }, g)), /* @__PURE__ */ _("textarea", {
      "aria-hidden": !0,
      className: n.className,
      readOnly: !0,
      ref: E,
      tabIndex: -1,
      style: y({}, t8.shadow, p, {
        paddingTop: 0,
        paddingBottom: 0
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (uL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: t.oneOfType([t.number, t.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: t.oneOfType([t.number, t.string]),
  /**
   * @ignore
   */
  onChange: t.func,
  /**
   * @ignore
   */
  placeholder: t.string,
  /**
   * @ignore
   */
  style: t.object,
  /**
   * @ignore
   */
  value: t.oneOfType([t.arrayOf(t.string), t.number, t.string])
});
function XD(e) {
  return typeof e.normalize < "u" ? e.normalize("NFD").replace(/[\u0300-\u036f]/g, "") : e;
}
function o8(e = {}) {
  const {
    ignoreAccents: n = !0,
    ignoreCase: a = !0,
    limit: s,
    matchFrom: u = "any",
    stringify: d,
    trim: p = !1
  } = e;
  return (h, {
    inputValue: g,
    getOptionLabel: b
  }) => {
    let x = p ? g.trim() : g;
    a && (x = x.toLowerCase()), n && (x = XD(x));
    const S = x ? h.filter((E) => {
      let R = (d || b)(E);
      return a && (R = R.toLowerCase()), n && (R = XD(R)), u === "start" ? R.indexOf(x) === 0 : R.indexOf(x) > -1;
    }) : h;
    return typeof s == "number" ? S.slice(0, s) : S;
  };
}
function tw(e, n) {
  for (let a = 0; a < e.length; a += 1)
    if (n(e[a]))
      return a;
  return -1;
}
const r8 = o8(), ZD = 5, a8 = (e) => {
  var n;
  return e.current !== null && ((n = e.current.parentElement) == null ? void 0 : n.contains(document.activeElement));
};
function i8(e) {
  const {
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_isActiveElementInListbox: n = a8,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_classNamePrefix: a = "Mui",
    autoComplete: s = !1,
    autoHighlight: u = !1,
    autoSelect: d = !1,
    blurOnSelect: p = !1,
    clearOnBlur: h = !e.freeSolo,
    clearOnEscape: g = !1,
    componentName: b = "useAutocomplete",
    defaultValue: x = e.multiple ? [] : null,
    disableClearable: S = !1,
    disableCloseOnSelect: E = !1,
    disabled: R,
    disabledItemsFocusable: $ = !1,
    disableListWrap: M = !1,
    filterOptions: O = r8,
    filterSelectedOptions: N = !1,
    freeSolo: V = !1,
    getOptionDisabled: I,
    getOptionKey: z,
    getOptionLabel: B = (Ge) => {
      var Te;
      return (Te = Ge.label) != null ? Te : Ge;
    },
    groupBy: P,
    handleHomeEndKeys: F = !e.freeSolo,
    id: H,
    includeInputInList: U = !1,
    inputValue: Q,
    isOptionEqualToValue: Y = (Ge, Te) => Ge === Te,
    multiple: te = !1,
    onChange: Z,
    onClose: q,
    onHighlightChange: X,
    onInputChange: oe,
    onOpen: ie,
    open: K,
    openOnFocus: ne = !1,
    options: se,
    readOnly: ze = !1,
    selectOnFocus: Ue = !e.freeSolo,
    value: Oe
  } = e, ue = pa(H);
  let xe = B;
  xe = (Ge) => {
    const Te = B(Ge);
    if (typeof Te != "string") {
      if (process.env.NODE_ENV !== "production") {
        const it = Te === void 0 ? "undefined" : `${typeof Te} (${Te})`;
        console.error(`MUI: The \`getOptionLabel\` method of ${b} returned ${it} instead of a string for ${JSON.stringify(Ge)}.`);
      }
      return String(Te);
    }
    return Te;
  };
  const me = k.useRef(!1), Se = k.useRef(!0), ce = k.useRef(null), Le = k.useRef(null), [Ze, Ee] = k.useState(null), [Ae, Ce] = k.useState(-1), ae = u ? 0 : -1, Pe = k.useRef(ae), [ke, pt] = Eo({
    controlled: Oe,
    default: x,
    name: b
  }), [_e, dt] = Eo({
    controlled: Q,
    default: "",
    name: b,
    state: "inputValue"
  }), [ge, ve] = k.useState(!1), qe = k.useCallback((Ge, Te) => {
    if (!(te ? ke.length < Te.length : Te !== null) && !h)
      return;
    let Tt;
    if (te)
      Tt = "";
    else if (Te == null)
      Tt = "";
    else {
      const ln = xe(Te);
      Tt = typeof ln == "string" ? ln : "";
    }
    _e !== Tt && (dt(Tt), oe && oe(Ge, Tt, "reset"));
  }, [xe, _e, te, oe, dt, h, ke]), [vt, yt] = Eo({
    controlled: K,
    default: !1,
    name: b,
    state: "open"
  }), [Mt, bt] = k.useState(!0), wt = !te && ke != null && _e === xe(ke), we = vt && !ze, Re = we ? O(
    se.filter((Ge) => !(N && (te ? ke : [ke]).some((Te) => Te !== null && Y(Ge, Te)))),
    // we use the empty string to manipulate `filterOptions` to not filter any options
    // i.e. the filter predicate always returns true
    {
      inputValue: wt && Mt ? "" : _e,
      getOptionLabel: xe
    }
  ) : [], at = jw({
    filteredOptions: Re,
    value: ke,
    inputValue: _e
  });
  k.useEffect(() => {
    const Ge = ke !== at.value;
    ge && !Ge || V && !Ge || qe(null, ke);
  }, [ke, qe, ge, at.value, V]);
  const Ke = vt && Re.length > 0 && !ze;
  if (process.env.NODE_ENV !== "production" && ke !== null && !V && se.length > 0) {
    const Ge = (te ? ke : [ke]).filter((Te) => !se.some((it) => Y(it, Te)));
    Ge.length > 0 && console.warn([`MUI: The value provided to ${b} is invalid.`, `None of the options match with \`${Ge.length > 1 ? JSON.stringify(Ge) : JSON.stringify(Ge[0])}\`.`, "You can use the `isOptionEqualToValue` prop to customize the equality test."].join(`
`));
  }
  const lt = kt((Ge) => {
    Ge === -1 ? ce.current.focus() : Ze.querySelector(`[data-tag-index="${Ge}"]`).focus();
  });
  k.useEffect(() => {
    te && Ae > ke.length - 1 && (Ce(-1), lt(-1));
  }, [ke, te, Ae, lt]);
  function et(Ge, Te) {
    if (!Le.current || Ge < 0 || Ge >= Re.length)
      return -1;
    let it = Ge;
    for (; ; ) {
      const Tt = Le.current.querySelector(`[data-option-index="${it}"]`), ln = $ ? !1 : !Tt || Tt.disabled || Tt.getAttribute("aria-disabled") === "true";
      if (Tt && Tt.hasAttribute("tabindex") && !ln)
        return it;
      if (Te === "next" ? it = (it + 1) % Re.length : it = (it - 1 + Re.length) % Re.length, it === Ge)
        return -1;
    }
  }
  const rt = kt(({
    event: Ge,
    index: Te,
    reason: it = "auto"
  }) => {
    if (Pe.current = Te, Te === -1 ? ce.current.removeAttribute("aria-activedescendant") : ce.current.setAttribute("aria-activedescendant", `${ue}-option-${Te}`), X && X(Ge, Te === -1 ? null : Re[Te], it), !Le.current)
      return;
    const Tt = Le.current.querySelector(`[role="option"].${a}-focused`);
    Tt && (Tt.classList.remove(`${a}-focused`), Tt.classList.remove(`${a}-focusVisible`));
    let ln = Le.current;
    if (Le.current.getAttribute("role") !== "listbox" && (ln = Le.current.parentElement.querySelector('[role="listbox"]')), !ln)
      return;
    if (Te === -1) {
      ln.scrollTop = 0;
      return;
    }
    const Ct = Le.current.querySelector(`[data-option-index="${Te}"]`);
    if (Ct && (Ct.classList.add(`${a}-focused`), it === "keyboard" && Ct.classList.add(`${a}-focusVisible`), ln.scrollHeight > ln.clientHeight && it !== "mouse" && it !== "touch")) {
      const pn = Ct, fr = ln.clientHeight + ln.scrollTop, Gl = pn.offsetTop + pn.offsetHeight;
      Gl > fr ? ln.scrollTop = Gl - ln.clientHeight : pn.offsetTop - pn.offsetHeight * (P ? 1.3 : 0) < ln.scrollTop && (ln.scrollTop = pn.offsetTop - pn.offsetHeight * (P ? 1.3 : 0));
    }
  }), je = kt(({
    event: Ge,
    diff: Te,
    direction: it = "next",
    reason: Tt = "auto"
  }) => {
    if (!we)
      return;
    const Ct = et((() => {
      const pn = Re.length - 1;
      if (Te === "reset")
        return ae;
      if (Te === "start")
        return 0;
      if (Te === "end")
        return pn;
      const fr = Pe.current + Te;
      return fr < 0 ? fr === -1 && U ? -1 : M && Pe.current !== -1 || Math.abs(Te) > 1 ? 0 : pn : fr > pn ? fr === pn + 1 && U ? -1 : M || Math.abs(Te) > 1 ? pn : 0 : fr;
    })(), it);
    if (rt({
      index: Ct,
      reason: Tt,
      event: Ge
    }), s && Te !== "reset")
      if (Ct === -1)
        ce.current.value = _e;
      else {
        const pn = xe(Re[Ct]);
        ce.current.value = pn, pn.toLowerCase().indexOf(_e.toLowerCase()) === 0 && _e.length > 0 && ce.current.setSelectionRange(_e.length, pn.length);
      }
  }), nt = () => {
    const Ge = (Te, it) => {
      const Tt = Te ? xe(Te) : "", ln = it ? xe(it) : "";
      return Tt === ln;
    };
    if (Pe.current !== -1 && at.filteredOptions && at.filteredOptions.length !== Re.length && at.inputValue === _e && (te ? ke.length === at.value.length && at.value.every((Te, it) => xe(ke[it]) === xe(Te)) : Ge(at.value, ke))) {
      const Te = at.filteredOptions[Pe.current];
      if (Te && Re.some((Tt) => xe(Tt) === xe(Te)))
        return !0;
    }
    return !1;
  }, ht = k.useCallback(() => {
    if (!we || nt())
      return;
    const Ge = te ? ke[0] : ke;
    if (Re.length === 0 || Ge == null) {
      je({
        diff: "reset"
      });
      return;
    }
    if (Le.current) {
      if (Ge != null) {
        const Te = Re[Pe.current];
        if (te && Te && tw(ke, (Tt) => Y(Te, Tt)) !== -1)
          return;
        const it = tw(Re, (Tt) => Y(Tt, Ge));
        it === -1 ? je({
          diff: "reset"
        }) : rt({
          index: it
        });
        return;
      }
      if (Pe.current >= Re.length - 1) {
        rt({
          index: Re.length - 1
        });
        return;
      }
      rt({
        index: Pe.current
      });
    }
  }, [
    // Only sync the highlighted index when the option switch between empty and not
    Re.length,
    // Don't sync the highlighted index with the value when multiple
    // eslint-disable-next-line react-hooks/exhaustive-deps
    te ? !1 : ke,
    N,
    je,
    rt,
    we,
    _e,
    te
  ]), $t = kt((Ge) => {
    ag(Le, Ge), Ge && ht();
  });
  process.env.NODE_ENV !== "production" && k.useEffect(() => {
    (!ce.current || ce.current.nodeName !== "INPUT") && (ce.current && ce.current.nodeName === "TEXTAREA" ? console.warn([`A textarea element was provided to ${b} where input was expected.`, "This is not a supported scenario but it may work under certain conditions.", "A textarea keyboard navigation may conflict with Autocomplete controls (e.g. enter and arrow keys).", "Make sure to test keyboard navigation and add custom event handlers if necessary."].join(`
`)) : console.error([`MUI: Unable to find the input element. It was resolved to ${ce.current} while an HTMLInputElement was expected.`, `Instead, ${b} expects an input element.`, "", b === "useAutocomplete" ? "Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed." : "Make sure you have customized the input component correctly."].join(`
`)));
  }, [b]), k.useEffect(() => {
    ht();
  }, [ht]);
  const Lt = (Ge) => {
    vt || (yt(!0), bt(!0), ie && ie(Ge));
  }, Jt = (Ge, Te) => {
    vt && (yt(!1), q && q(Ge, Te));
  }, qt = (Ge, Te, it, Tt) => {
    if (te) {
      if (ke.length === Te.length && ke.every((ln, Ct) => ln === Te[Ct]))
        return;
    } else if (ke === Te)
      return;
    Z && Z(Ge, Te, it, Tt), pt(Te);
  }, en = k.useRef(!1), Nn = (Ge, Te, it = "selectOption", Tt = "options") => {
    let ln = it, Ct = Te;
    if (te) {
      if (Ct = Array.isArray(ke) ? ke.slice() : [], process.env.NODE_ENV !== "production") {
        const fr = Ct.filter((Gl) => Y(Te, Gl));
        fr.length > 1 && console.error([`MUI: The \`isOptionEqualToValue\` method of ${b} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${fr.length} matches.`].join(`
`));
      }
      const pn = tw(Ct, (fr) => Y(Te, fr));
      pn === -1 ? Ct.push(Te) : Tt !== "freeSolo" && (Ct.splice(pn, 1), ln = "removeOption");
    }
    qe(Ge, Ct), qt(Ge, Ct, ln, {
      option: Te
    }), !E && (!Ge || !Ge.ctrlKey && !Ge.metaKey) && Jt(Ge, ln), (p === !0 || p === "touch" && en.current || p === "mouse" && !en.current) && ce.current.blur();
  };
  function nn(Ge, Te) {
    if (Ge === -1)
      return -1;
    let it = Ge;
    for (; ; ) {
      if (Te === "next" && it === ke.length || Te === "previous" && it === -1)
        return -1;
      const Tt = Ze.querySelector(`[data-tag-index="${it}"]`);
      if (!Tt || !Tt.hasAttribute("tabindex") || Tt.disabled || Tt.getAttribute("aria-disabled") === "true")
        it += Te === "next" ? 1 : -1;
      else
        return it;
    }
  }
  const Yn = (Ge, Te) => {
    if (!te)
      return;
    _e === "" && Jt(Ge, "toggleInput");
    let it = Ae;
    Ae === -1 ? _e === "" && Te === "previous" && (it = ke.length - 1) : (it += Te === "next" ? 1 : -1, it < 0 && (it = 0), it === ke.length && (it = -1)), it = nn(it, Te), Ce(it), lt(it);
  }, Po = (Ge) => {
    me.current = !0, dt(""), oe && oe(Ge, "", "clear"), qt(Ge, te ? [] : null, "clear");
  }, Do = (Ge) => (Te) => {
    if (Ge.onKeyDown && Ge.onKeyDown(Te), !Te.defaultMuiPrevented && (Ae !== -1 && ["ArrowLeft", "ArrowRight"].indexOf(Te.key) === -1 && (Ce(-1), lt(-1)), Te.which !== 229))
      switch (Te.key) {
        case "Home":
          we && F && (Te.preventDefault(), je({
            diff: "start",
            direction: "next",
            reason: "keyboard",
            event: Te
          }));
          break;
        case "End":
          we && F && (Te.preventDefault(), je({
            diff: "end",
            direction: "previous",
            reason: "keyboard",
            event: Te
          }));
          break;
        case "PageUp":
          Te.preventDefault(), je({
            diff: -ZD,
            direction: "previous",
            reason: "keyboard",
            event: Te
          }), Lt(Te);
          break;
        case "PageDown":
          Te.preventDefault(), je({
            diff: ZD,
            direction: "next",
            reason: "keyboard",
            event: Te
          }), Lt(Te);
          break;
        case "ArrowDown":
          Te.preventDefault(), je({
            diff: 1,
            direction: "next",
            reason: "keyboard",
            event: Te
          }), Lt(Te);
          break;
        case "ArrowUp":
          Te.preventDefault(), je({
            diff: -1,
            direction: "previous",
            reason: "keyboard",
            event: Te
          }), Lt(Te);
          break;
        case "ArrowLeft":
          Yn(Te, "previous");
          break;
        case "ArrowRight":
          Yn(Te, "next");
          break;
        case "Enter":
          if (Pe.current !== -1 && we) {
            const it = Re[Pe.current], Tt = I ? I(it) : !1;
            if (Te.preventDefault(), Tt)
              return;
            Nn(Te, it, "selectOption"), s && ce.current.setSelectionRange(ce.current.value.length, ce.current.value.length);
          } else
            V && _e !== "" && wt === !1 && (te && Te.preventDefault(), Nn(Te, _e, "createOption", "freeSolo"));
          break;
        case "Escape":
          we ? (Te.preventDefault(), Te.stopPropagation(), Jt(Te, "escape")) : g && (_e !== "" || te && ke.length > 0) && (Te.preventDefault(), Te.stopPropagation(), Po(Te));
          break;
        case "Backspace":
          if (te && !ze && _e === "" && ke.length > 0) {
            const it = Ae === -1 ? ke.length - 1 : Ae, Tt = ke.slice();
            Tt.splice(it, 1), qt(Te, Tt, "removeOption", {
              option: ke[it]
            });
          }
          break;
        case "Delete":
          if (te && !ze && _e === "" && ke.length > 0 && Ae !== -1) {
            const it = Ae, Tt = ke.slice();
            Tt.splice(it, 1), qt(Te, Tt, "removeOption", {
              option: ke[it]
            });
          }
          break;
      }
  }, Zr = (Ge) => {
    ve(!0), ne && !me.current && Lt(Ge);
  }, Bo = (Ge) => {
    if (n(Le)) {
      ce.current.focus();
      return;
    }
    ve(!1), Se.current = !0, me.current = !1, d && Pe.current !== -1 && we ? Nn(Ge, Re[Pe.current], "blur") : d && V && _e !== "" ? Nn(Ge, _e, "blur", "freeSolo") : h && qe(Ge, ke), Jt(Ge, "blur");
  }, Ln = (Ge) => {
    const Te = Ge.target.value;
    _e !== Te && (dt(Te), bt(!1), oe && oe(Ge, Te, "input")), Te === "" ? !S && !te && qt(Ge, null, "clear") : Lt(Ge);
  }, wn = (Ge) => {
    const Te = Number(Ge.currentTarget.getAttribute("data-option-index"));
    Pe.current !== Te && rt({
      event: Ge,
      index: Te,
      reason: "mouse"
    });
  }, qn = (Ge) => {
    rt({
      event: Ge,
      index: Number(Ge.currentTarget.getAttribute("data-option-index")),
      reason: "touch"
    }), en.current = !0;
  }, to = (Ge) => {
    const Te = Number(Ge.currentTarget.getAttribute("data-option-index"));
    Nn(Ge, Re[Te], "selectOption"), en.current = !1;
  }, ao = (Ge) => (Te) => {
    const it = ke.slice();
    it.splice(Ge, 1), qt(Te, it, "removeOption", {
      option: ke[Ge]
    });
  }, Jo = (Ge) => {
    vt ? Jt(Ge, "toggleInput") : Lt(Ge);
  }, zo = (Ge) => {
    Ge.currentTarget.contains(Ge.target) && Ge.target.getAttribute("id") !== ue && Ge.preventDefault();
  }, Fo = (Ge) => {
    Ge.currentTarget.contains(Ge.target) && (ce.current.focus(), Ue && Se.current && ce.current.selectionEnd - ce.current.selectionStart === 0 && ce.current.select(), Se.current = !1);
  }, Nr = (Ge) => {
    !R && (_e === "" || !vt) && Jo(Ge);
  };
  let jo = V && _e.length > 0;
  jo = jo || (te ? ke.length > 0 : ke !== null);
  let Co = Re;
  if (P) {
    const Ge = /* @__PURE__ */ new Map();
    let Te = !1;
    Co = Re.reduce((it, Tt, ln) => {
      const Ct = P(Tt);
      return it.length > 0 && it[it.length - 1].group === Ct ? it[it.length - 1].options.push(Tt) : (process.env.NODE_ENV !== "production" && (Ge.get(Ct) && !Te && (console.warn(`MUI: The options provided combined with the \`groupBy\` method of ${b} returns duplicated headers.`, "You can solve the issue by sorting the options with the output of `groupBy`."), Te = !0), Ge.set(Ct, !0)), it.push({
        key: ln,
        index: ln,
        group: Ct,
        options: [Tt]
      })), it;
    }, []);
  }
  return R && ge && Bo(), {
    getRootProps: (Ge = {}) => y({
      "aria-owns": Ke ? `${ue}-listbox` : null
    }, Ge, {
      onKeyDown: Do(Ge),
      onMouseDown: zo,
      onClick: Fo
    }),
    getInputLabelProps: () => ({
      id: `${ue}-label`,
      htmlFor: ue
    }),
    getInputProps: () => ({
      id: ue,
      value: _e,
      onBlur: Bo,
      onFocus: Zr,
      onChange: Ln,
      onMouseDown: Nr,
      // if open then this is handled imperatively so don't let react override
      // only have an opinion about this when closed
      "aria-activedescendant": we ? "" : null,
      "aria-autocomplete": s ? "both" : "list",
      "aria-controls": Ke ? `${ue}-listbox` : void 0,
      "aria-expanded": Ke,
      // Disable browser's suggestion that might overlap with the popup.
      // Handle autocomplete but not autofill.
      autoComplete: "off",
      ref: ce,
      autoCapitalize: "none",
      spellCheck: "false",
      role: "combobox",
      disabled: R
    }),
    getClearProps: () => ({
      tabIndex: -1,
      type: "button",
      onClick: Po
    }),
    getPopupIndicatorProps: () => ({
      tabIndex: -1,
      type: "button",
      onClick: Jo
    }),
    getTagProps: ({
      index: Ge
    }) => y({
      key: Ge,
      "data-tag-index": Ge,
      tabIndex: -1
    }, !ze && {
      onDelete: ao(Ge)
    }),
    getListboxProps: () => ({
      role: "listbox",
      id: `${ue}-listbox`,
      "aria-labelledby": `${ue}-label`,
      ref: $t,
      onMouseDown: (Ge) => {
        Ge.preventDefault();
      }
    }),
    getOptionProps: ({
      index: Ge,
      option: Te
    }) => {
      var it;
      const Tt = (te ? ke : [ke]).some((Ct) => Ct != null && Y(Te, Ct)), ln = I ? I(Te) : !1;
      return {
        key: (it = z == null ? void 0 : z(Te)) != null ? it : xe(Te),
        tabIndex: -1,
        role: "option",
        id: `${ue}-option-${Ge}`,
        onMouseMove: wn,
        onClick: to,
        onTouchStart: qn,
        "data-option-index": Ge,
        "aria-disabled": ln,
        "aria-selected": Tt
      };
    },
    id: ue,
    inputValue: _e,
    value: ke,
    dirty: jo,
    expanded: we && Ze,
    popupOpen: we,
    focused: ge || Ae !== -1,
    anchorEl: Ze,
    setAnchorEl: Ee,
    focusedTag: Ae,
    groupedOptions: Co
  };
}
function s8(e) {
  return We("MuiAlert", e);
}
const l8 = Ye("MuiAlert", ["root", "action", "icon", "message", "filled", "filledSuccess", "filledInfo", "filledWarning", "filledError", "outlined", "outlinedSuccess", "outlinedInfo", "outlinedWarning", "outlinedError", "standard", "standardSuccess", "standardInfo", "standardWarning", "standardError"]), JD = l8;
function c8(e) {
  return We("MuiIconButton", e);
}
const u8 = Ye("MuiIconButton", ["root", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorError", "colorInfo", "colorSuccess", "colorWarning", "edgeStart", "edgeEnd", "sizeSmall", "sizeMedium", "sizeLarge"]), d8 = u8, p8 = ["edge", "children", "className", "color", "disabled", "disableFocusRipple", "size"], f8 = (e) => {
  const {
    classes: n,
    disabled: a,
    color: s,
    edge: u,
    size: d
  } = e, p = {
    root: ["root", a && "disabled", s !== "default" && `color${pe(s)}`, u && `edge${pe(u)}`, `size${pe(d)}`]
  };
  return He(p, c8, n);
}, m8 = J(Zo, {
  name: "MuiIconButton",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.color !== "default" && n[`color${pe(a.color)}`], a.edge && n[`edge${pe(a.edge)}`], n[`size${pe(a.size)}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  textAlign: "center",
  flex: "0 0 auto",
  fontSize: e.typography.pxToRem(24),
  padding: 8,
  borderRadius: "50%",
  overflow: "visible",
  // Explicitly set the default value to solve a bug on IE11.
  color: (e.vars || e).palette.action.active,
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.shortest
  })
}, !n.disableRipple && {
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette.action.active, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  }
}, n.edge === "start" && {
  marginLeft: n.size === "small" ? -3 : -12
}, n.edge === "end" && {
  marginRight: n.size === "small" ? -3 : -12
}), ({
  theme: e,
  ownerState: n
}) => {
  var a;
  const s = (a = (e.vars || e).palette) == null ? void 0 : a[n.color];
  return y({}, n.color === "inherit" && {
    color: "inherit"
  }, n.color !== "inherit" && n.color !== "default" && y({
    color: s == null ? void 0 : s.main
  }, !n.disableRipple && {
    "&:hover": y({}, s && {
      backgroundColor: e.vars ? `rgba(${s.mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(s.main, e.palette.action.hoverOpacity)
    }, {
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    })
  }), n.size === "small" && {
    padding: 5,
    fontSize: e.typography.pxToRem(18)
  }, n.size === "large" && {
    padding: 12,
    fontSize: e.typography.pxToRem(28)
  }, {
    [`&.${d8.disabled}`]: {
      backgroundColor: "transparent",
      color: (e.vars || e).palette.action.disabled
    }
  });
}), dL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiIconButton"
  }), {
    edge: u = !1,
    children: d,
    className: p,
    color: h = "default",
    disabled: g = !1,
    disableFocusRipple: b = !1,
    size: x = "medium"
  } = s, S = le(s, p8), E = y({}, s, {
    edge: u,
    color: h,
    disabled: g,
    disableFocusRipple: b,
    size: x
  }), R = f8(E);
  return /* @__PURE__ */ _(m8, y({
    className: fe(R.root, p),
    centerRipple: !0,
    focusRipple: !b,
    disabled: g,
    ref: a
  }, S, {
    ownerState: E,
    children: d
  }));
});
process.env.NODE_ENV !== "production" && (dL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The icon to display.
   */
  children: Xo(t.node, (e) => k.Children.toArray(e.children).some((a) => /* @__PURE__ */ k.isValidElement(a) && a.props.onClick) ? new Error(["MUI: You are providing an onClick event listener to a child of a button element.", "Prefer applying it to the IconButton directly.", "This guarantees that the whole <button> will be responsive to click events."].join(`
`)) : null),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: t.oneOfType([t.oneOf(["inherit", "default", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: t.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: t.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: t.oneOf(["end", "start", !1]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["small", "medium", "large"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Ja = dL, h8 = Tn(/* @__PURE__ */ _("path", {
  d: "M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
}), "SuccessOutlined"), v8 = Tn(/* @__PURE__ */ _("path", {
  d: "M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z"
}), "ReportProblemOutlined"), g8 = Tn(/* @__PURE__ */ _("path", {
  d: "M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "ErrorOutline"), b8 = Tn(/* @__PURE__ */ _("path", {
  d: "M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z"
}), "InfoOutlined"), pL = Tn(/* @__PURE__ */ _("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Close"), y8 = ["action", "children", "className", "closeText", "color", "components", "componentsProps", "icon", "iconMapping", "onClose", "role", "severity", "slotProps", "slots", "variant"], C8 = (e) => {
  const {
    variant: n,
    color: a,
    severity: s,
    classes: u
  } = e, d = {
    root: ["root", `${n}${pe(a || s)}`, `${n}`],
    icon: ["icon"],
    message: ["message"],
    action: ["action"]
  };
  return He(d, s8, u);
}, T8 = J(ni, {
  name: "MuiAlert",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[a.variant], n[`${a.variant}${pe(a.color || a.severity)}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => {
  const a = e.palette.mode === "light" ? yT : CT, s = e.palette.mode === "light" ? CT : yT, u = n.color || n.severity;
  return y({}, e.typography.body2, {
    backgroundColor: "transparent",
    display: "flex",
    padding: "6px 16px"
  }, u && n.variant === "standard" && {
    color: e.vars ? e.vars.palette.Alert[`${u}Color`] : a(e.palette[u].light, 0.6),
    backgroundColor: e.vars ? e.vars.palette.Alert[`${u}StandardBg`] : s(e.palette[u].light, 0.9),
    [`& .${JD.icon}`]: e.vars ? {
      color: e.vars.palette.Alert[`${u}IconColor`]
    } : {
      color: e.palette[u].main
    }
  }, u && n.variant === "outlined" && {
    color: e.vars ? e.vars.palette.Alert[`${u}Color`] : a(e.palette[u].light, 0.6),
    border: `1px solid ${(e.vars || e).palette[u].light}`,
    [`& .${JD.icon}`]: e.vars ? {
      color: e.vars.palette.Alert[`${u}IconColor`]
    } : {
      color: e.palette[u].main
    }
  }, u && n.variant === "filled" && y({
    fontWeight: e.typography.fontWeightMedium
  }, e.vars ? {
    color: e.vars.palette.Alert[`${u}FilledColor`],
    backgroundColor: e.vars.palette.Alert[`${u}FilledBg`]
  } : {
    backgroundColor: e.palette.mode === "dark" ? e.palette[u].dark : e.palette[u].main,
    color: e.palette.getContrastText(e.palette[u].main)
  }));
}), x8 = J("div", {
  name: "MuiAlert",
  slot: "Icon",
  overridesResolver: (e, n) => n.icon
})({
  marginRight: 12,
  padding: "7px 0",
  display: "flex",
  fontSize: 22,
  opacity: 0.9
}), S8 = J("div", {
  name: "MuiAlert",
  slot: "Message",
  overridesResolver: (e, n) => n.message
})({
  padding: "8px 0",
  minWidth: 0,
  overflow: "auto"
}), eM = J("div", {
  name: "MuiAlert",
  slot: "Action",
  overridesResolver: (e, n) => n.action
})({
  display: "flex",
  alignItems: "flex-start",
  padding: "4px 0 0 16px",
  marginLeft: "auto",
  marginRight: -8
}), tM = {
  success: /* @__PURE__ */ _(h8, {
    fontSize: "inherit"
  }),
  warning: /* @__PURE__ */ _(v8, {
    fontSize: "inherit"
  }),
  error: /* @__PURE__ */ _(g8, {
    fontSize: "inherit"
  }),
  info: /* @__PURE__ */ _(b8, {
    fontSize: "inherit"
  })
}, fL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiAlert"
  }), {
    action: u,
    children: d,
    className: p,
    closeText: h = "Close",
    color: g,
    components: b = {},
    componentsProps: x = {},
    icon: S,
    iconMapping: E = tM,
    onClose: R,
    role: $ = "alert",
    severity: M = "success",
    slotProps: O = {},
    slots: N = {},
    variant: V = "standard"
  } = s, I = le(s, y8), z = y({}, s, {
    color: g,
    severity: M,
    variant: V
  }), B = C8(z), P = {
    slots: y({
      closeButton: b.CloseButton,
      closeIcon: b.CloseIcon
    }, N),
    slotProps: y({}, x, O)
  }, [F, H] = RT("closeButton", {
    elementType: Ja,
    externalForwardedProps: P,
    ownerState: z
  }), [U, Q] = RT("closeIcon", {
    elementType: pL,
    externalForwardedProps: P,
    ownerState: z
  });
  return /* @__PURE__ */ st(T8, y({
    role: $,
    elevation: 0,
    ownerState: z,
    className: fe(B.root, p),
    ref: a
  }, I, {
    children: [S !== !1 ? /* @__PURE__ */ _(x8, {
      ownerState: z,
      className: B.icon,
      children: S || E[M] || tM[M]
    }) : null, /* @__PURE__ */ _(S8, {
      ownerState: z,
      className: B.message,
      children: d
    }), u != null ? /* @__PURE__ */ _(eM, {
      ownerState: z,
      className: B.action,
      children: u
    }) : null, u == null && R ? /* @__PURE__ */ _(eM, {
      ownerState: z,
      className: B.action,
      children: /* @__PURE__ */ _(F, y({
        size: "small",
        "aria-label": h,
        title: h,
        color: "inherit",
        onClick: R
      }, H, {
        children: /* @__PURE__ */ _(U, y({
          fontSize: "small"
        }, Q))
      }))
    }) : null]
  }));
});
process.env.NODE_ENV !== "production" && (fL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The action to display. It renders after the message, at the end of the alert.
   */
  action: t.node,
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Override the default label for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: t.string,
  /**
   * The color of the component. Unless provided, the value is taken from the `severity` prop.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: t.oneOfType([t.oneOf(["error", "info", "success", "warning"]), t.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   *
   * @default {}
   */
  components: t.shape({
    CloseButton: t.elementType,
    CloseIcon: t.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   *
   * @default {}
   */
  componentsProps: t.shape({
    closeButton: t.object,
    closeIcon: t.object
  }),
  /**
   * Override the icon displayed before the children.
   * Unless provided, the icon is mapped to the value of the `severity` prop.
   * Set to `false` to remove the `icon`.
   */
  icon: t.node,
  /**
   * The component maps the `severity` prop to a range of different icons,
   * for instance success to `<SuccessOutlined>`.
   * If you wish to change this mapping, you can provide your own.
   * Alternatively, you can use the `icon` prop to override the icon displayed.
   */
  iconMapping: t.shape({
    error: t.node,
    info: t.node,
    success: t.node,
    warning: t.node
  }),
  /**
   * Callback fired when the component requests to be closed.
   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: t.func,
  /**
   * The ARIA role attribute of the element.
   * @default 'alert'
   */
  role: t.string,
  /**
   * The severity of the alert. This defines the color and icon used.
   * @default 'success'
   */
  severity: t.oneOfType([t.oneOf(["error", "info", "success", "warning"]), t.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: t.shape({
    closeButton: t.oneOfType([t.func, t.object]),
    closeIcon: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: t.shape({
    closeButton: t.elementType,
    closeIcon: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: t.oneOfType([t.oneOf(["filled", "outlined", "standard"]), t.string])
});
const Oue = fL;
function k8(e) {
  return We("MuiTypography", e);
}
const w8 = Ye("MuiTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "inherit", "button", "caption", "overline", "alignLeft", "alignRight", "alignCenter", "alignJustify", "noWrap", "gutterBottom", "paragraph"]), Pue = w8, R8 = ["align", "className", "component", "gutterBottom", "noWrap", "paragraph", "variant", "variantMapping"], E8 = (e) => {
  const {
    align: n,
    gutterBottom: a,
    noWrap: s,
    paragraph: u,
    variant: d,
    classes: p
  } = e, h = {
    root: ["root", d, e.align !== "inherit" && `align${pe(n)}`, a && "gutterBottom", s && "noWrap", u && "paragraph"]
  };
  return He(h, k8, p);
}, O8 = J("span", {
  name: "MuiTypography",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.variant && n[a.variant], a.align !== "inherit" && n[`align${pe(a.align)}`], a.noWrap && n.noWrap, a.gutterBottom && n.gutterBottom, a.paragraph && n.paragraph];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  margin: 0
}, n.variant === "inherit" && {
  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.
  font: "inherit"
}, n.variant !== "inherit" && e.typography[n.variant], n.align !== "inherit" && {
  textAlign: n.align
}, n.noWrap && {
  overflow: "hidden",
  textOverflow: "ellipsis",
  whiteSpace: "nowrap"
}, n.gutterBottom && {
  marginBottom: "0.35em"
}, n.paragraph && {
  marginBottom: 16
})), nM = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p",
  inherit: "p"
}, P8 = {
  primary: "primary.main",
  textPrimary: "text.primary",
  secondary: "secondary.main",
  textSecondary: "text.secondary",
  error: "error.main"
}, D8 = (e) => P8[e] || e, mL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiTypography"
  }), u = D8(s.color), d = yg(y({}, s, {
    color: u
  })), {
    align: p = "inherit",
    className: h,
    component: g,
    gutterBottom: b = !1,
    noWrap: x = !1,
    paragraph: S = !1,
    variant: E = "body1",
    variantMapping: R = nM
  } = d, $ = le(d, R8), M = y({}, d, {
    align: p,
    color: u,
    className: h,
    component: g,
    gutterBottom: b,
    noWrap: x,
    paragraph: S,
    variant: E,
    variantMapping: R
  }), O = g || (S ? "p" : R[E] || nM[E]) || "span", N = E8(M);
  return /* @__PURE__ */ _(O8, y({
    as: O,
    ref: a,
    ownerState: M,
    className: fe(N.root, h)
  }, $));
});
process.env.NODE_ENV !== "production" && (mL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the component.
   * @default 'inherit'
   */
  align: t.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the text will have a bottom margin.
   * @default false
   */
  gutterBottom: t.bool,
  /**
   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
   *
   * Note that text overflow can only happen with block or inline-block level elements
   * (the element needs to have a width in order to overflow).
   * @default false
   */
  noWrap: t.bool,
  /**
   * If `true`, the element will be a paragraph element.
   * @default false
   */
  paragraph: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Applies the theme typography styles.
   * @default 'body1'
   */
  variant: t.oneOfType([t.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), t.string]),
  /**
   * The component maps the variant prop to a range of different HTML element types.
   * For instance, subtitle1 to `<h6>`.
   * If you wish to change that mapping, you can provide your own.
   * Alternatively, you can use the `component` prop.
   * @default {
   *   h1: 'h1',
   *   h2: 'h2',
   *   h3: 'h3',
   *   h4: 'h4',
   *   h5: 'h5',
   *   h6: 'h6',
   *   subtitle1: 'h6',
   *   subtitle2: 'h6',
   *   body1: 'p',
   *   body2: 'p',
   *   inherit: 'p',
   * }
   */
  variantMapping: t.object
});
const vo = mL;
function M8(e) {
  return We("MuiAlertTitle", e);
}
const $8 = Ye("MuiAlertTitle", ["root"]), Due = $8, N8 = ["className"], L8 = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"]
  }, M8, n);
}, I8 = J(vo, {
  name: "MuiAlertTitle",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(({
  theme: e
}) => ({
  fontWeight: e.typography.fontWeightMedium,
  marginTop: -2
})), hL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiAlertTitle"
  }), {
    className: u
  } = s, d = le(s, N8), p = s, h = L8(p);
  return /* @__PURE__ */ _(I8, y({
    gutterBottom: !0,
    component: "div",
    ownerState: p,
    ref: a,
    className: fe(h.root, u)
  }, d));
});
process.env.NODE_ENV !== "production" && (hL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Mue = hL;
function A8(e) {
  return We("MuiAppBar", e);
}
const _8 = Ye("MuiAppBar", ["root", "positionFixed", "positionAbsolute", "positionSticky", "positionStatic", "positionRelative", "colorDefault", "colorPrimary", "colorSecondary", "colorInherit", "colorTransparent", "colorError", "colorInfo", "colorSuccess", "colorWarning"]), $ue = _8, V8 = ["className", "color", "enableColorOnDark", "position"], B8 = (e) => {
  const {
    color: n,
    position: a,
    classes: s
  } = e, u = {
    root: ["root", `color${pe(n)}`, `position${pe(a)}`]
  };
  return He(u, A8, s);
}, XC = (e, n) => e ? `${e == null ? void 0 : e.replace(")", "")}, ${n})` : n, z8 = J(ni, {
  name: "MuiAppBar",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[`position${pe(a.position)}`], n[`color${pe(a.color)}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => {
  const a = e.palette.mode === "light" ? e.palette.grey[100] : e.palette.grey[900];
  return y({
    display: "flex",
    flexDirection: "column",
    width: "100%",
    boxSizing: "border-box",
    // Prevent padding issue with the Modal and fixed positioned AppBar.
    flexShrink: 0
  }, n.position === "fixed" && {
    position: "fixed",
    zIndex: (e.vars || e).zIndex.appBar,
    top: 0,
    left: "auto",
    right: 0,
    "@media print": {
      // Prevent the app bar to be visible on each printed page.
      position: "absolute"
    }
  }, n.position === "absolute" && {
    position: "absolute",
    zIndex: (e.vars || e).zIndex.appBar,
    top: 0,
    left: "auto",
    right: 0
  }, n.position === "sticky" && {
    // ⚠️ sticky is not supported by IE11.
    position: "sticky",
    zIndex: (e.vars || e).zIndex.appBar,
    top: 0,
    left: "auto",
    right: 0
  }, n.position === "static" && {
    position: "static"
  }, n.position === "relative" && {
    position: "relative"
  }, !e.vars && y({}, n.color === "default" && {
    backgroundColor: a,
    color: e.palette.getContrastText(a)
  }, n.color && n.color !== "default" && n.color !== "inherit" && n.color !== "transparent" && {
    backgroundColor: e.palette[n.color].main,
    color: e.palette[n.color].contrastText
  }, n.color === "inherit" && {
    color: "inherit"
  }, e.palette.mode === "dark" && !n.enableColorOnDark && {
    backgroundColor: null,
    color: null
  }, n.color === "transparent" && y({
    backgroundColor: "transparent",
    color: "inherit"
  }, e.palette.mode === "dark" && {
    backgroundImage: "none"
  })), e.vars && y({}, n.color === "default" && {
    "--AppBar-background": n.enableColorOnDark ? e.vars.palette.AppBar.defaultBg : XC(e.vars.palette.AppBar.darkBg, e.vars.palette.AppBar.defaultBg),
    "--AppBar-color": n.enableColorOnDark ? e.vars.palette.text.primary : XC(e.vars.palette.AppBar.darkColor, e.vars.palette.text.primary)
  }, n.color && !n.color.match(/^(default|inherit|transparent)$/) && {
    "--AppBar-background": n.enableColorOnDark ? e.vars.palette[n.color].main : XC(e.vars.palette.AppBar.darkBg, e.vars.palette[n.color].main),
    "--AppBar-color": n.enableColorOnDark ? e.vars.palette[n.color].contrastText : XC(e.vars.palette.AppBar.darkColor, e.vars.palette[n.color].contrastText)
  }, {
    backgroundColor: "var(--AppBar-background)",
    color: n.color === "inherit" ? "inherit" : "var(--AppBar-color)"
  }, n.color === "transparent" && {
    backgroundImage: "none",
    backgroundColor: "transparent",
    color: "inherit"
  }));
}), vL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiAppBar"
  }), {
    className: u,
    color: d = "primary",
    enableColorOnDark: p = !1,
    position: h = "fixed"
  } = s, g = le(s, V8), b = y({}, s, {
    color: d,
    position: h,
    enableColorOnDark: p
  }), x = B8(b);
  return /* @__PURE__ */ _(z8, y({
    square: !0,
    component: "header",
    ownerState: b,
    elevation: 4,
    className: fe(x.root, u, h === "fixed" && "mui-fixed"),
    ref: a
  }, g));
});
process.env.NODE_ENV !== "production" && (vL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["default", "inherit", "primary", "secondary", "transparent", "error", "info", "success", "warning"]), t.string]),
  /**
   * If true, the `color` prop is applied in dark mode.
   * @default false
   */
  enableColorOnDark: t.bool,
  /**
   * The positioning type. The behavior of the different options is described
   * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning).
   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.
   * @default 'fixed'
   */
  position: t.oneOf(["absolute", "fixed", "relative", "static", "sticky"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Nue = vL;
var u1 = {};
Object.defineProperty(u1, "__esModule", {
  value: !0
});
var gL = u1.default = void 0, F8 = U8(Ia), j8 = ON;
function bL(e) {
  if (typeof WeakMap != "function")
    return null;
  var n = /* @__PURE__ */ new WeakMap(), a = /* @__PURE__ */ new WeakMap();
  return (bL = function(s) {
    return s ? a : n;
  })(e);
}
function U8(e, n) {
  if (!n && e && e.__esModule)
    return e;
  if (e === null || typeof e != "object" && typeof e != "function")
    return { default: e };
  var a = bL(n);
  if (a && a.has(e))
    return a.get(e);
  var s = { __proto__: null }, u = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var d in e)
    if (d !== "default" && Object.prototype.hasOwnProperty.call(e, d)) {
      var p = u ? Object.getOwnPropertyDescriptor(e, d) : null;
      p && (p.get || p.set) ? Object.defineProperty(s, d, p) : s[d] = e[d];
    }
  return s.default = e, a && a.set(e, s), s;
}
function H8(e) {
  return Object.keys(e).length === 0;
}
function W8(e = null) {
  const n = F8.useContext(j8.ThemeContext);
  return !n || H8(n) ? e : n;
}
gL = u1.default = W8;
const Y8 = ["anchorEl", "component", "components", "componentsProps", "container", "disablePortal", "keepMounted", "modifiers", "open", "placement", "popperOptions", "popperRef", "transition", "slots", "slotProps"], q8 = J(lL, {
  name: "MuiPopper",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({}), yL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s;
  const u = gL(), d = Ie({
    props: n,
    name: "MuiPopper"
  }), {
    anchorEl: p,
    component: h,
    components: g,
    componentsProps: b,
    container: x,
    disablePortal: S,
    keepMounted: E,
    modifiers: R,
    open: $,
    placement: M,
    popperOptions: O,
    popperRef: N,
    transition: V,
    slots: I,
    slotProps: z
  } = d, B = le(d, Y8), P = (s = I == null ? void 0 : I.root) != null ? s : g == null ? void 0 : g.Root, F = y({
    anchorEl: p,
    container: x,
    disablePortal: S,
    keepMounted: E,
    modifiers: R,
    open: $,
    placement: M,
    popperOptions: O,
    popperRef: N,
    transition: V
  }, B);
  return /* @__PURE__ */ _(q8, y({
    as: h,
    direction: u == null ? void 0 : u.direction,
    slots: {
      root: P
    },
    slotProps: z ?? b
  }, F, {
    ref: a
  }));
});
process.env.NODE_ENV !== "production" && (yL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: t.oneOfType([Gs, t.object, t.func]),
  /**
   * Popper render function or node.
   */
  children: t.oneOfType([t.node, t.func]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  components: t.shape({
    Root: t.elementType
  }),
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  componentsProps: t.shape({
    root: t.oneOfType([t.func, t.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: t.oneOfType([Gs, t.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: t.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: t.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: t.arrayOf(t.shape({
    data: t.object,
    effect: t.func,
    enabled: t.bool,
    fn: t.func,
    name: t.any,
    options: t.object,
    phase: t.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: t.arrayOf(t.string),
    requiresIfExists: t.arrayOf(t.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: t.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: t.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: t.shape({
    modifiers: t.array,
    onFirstUpdate: t.func,
    placement: t.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: t.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: Wn,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: t.shape({
    root: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: t.shape({
    root: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: t.bool
});
const Pg = yL;
function G8(e) {
  return We("MuiListSubheader", e);
}
const K8 = Ye("MuiListSubheader", ["root", "colorPrimary", "colorInherit", "gutters", "inset", "sticky"]), Lue = K8, Q8 = ["className", "color", "component", "disableGutters", "disableSticky", "inset"], X8 = (e) => {
  const {
    classes: n,
    color: a,
    disableGutters: s,
    inset: u,
    disableSticky: d
  } = e, p = {
    root: ["root", a !== "default" && `color${pe(a)}`, !s && "gutters", u && "inset", !d && "sticky"]
  };
  return He(p, G8, n);
}, Z8 = J("li", {
  name: "MuiListSubheader",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.color !== "default" && n[`color${pe(a.color)}`], !a.disableGutters && n.gutters, a.inset && n.inset, !a.disableSticky && n.sticky];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  boxSizing: "border-box",
  lineHeight: "48px",
  listStyle: "none",
  color: (e.vars || e).palette.text.secondary,
  fontFamily: e.typography.fontFamily,
  fontWeight: e.typography.fontWeightMedium,
  fontSize: e.typography.pxToRem(14)
}, n.color === "primary" && {
  color: (e.vars || e).palette.primary.main
}, n.color === "inherit" && {
  color: "inherit"
}, !n.disableGutters && {
  paddingLeft: 16,
  paddingRight: 16
}, n.inset && {
  paddingLeft: 72
}, !n.disableSticky && {
  position: "sticky",
  top: 0,
  zIndex: 1,
  backgroundColor: (e.vars || e).palette.background.paper
})), d1 = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiListSubheader"
  }), {
    className: u,
    color: d = "default",
    component: p = "li",
    disableGutters: h = !1,
    disableSticky: g = !1,
    inset: b = !1
  } = s, x = le(s, Q8), S = y({}, s, {
    color: d,
    component: p,
    disableGutters: h,
    disableSticky: g,
    inset: b
  }), E = X8(S);
  return /* @__PURE__ */ _(Z8, y({
    as: p,
    className: fe(E.root, u),
    ref: a,
    ownerState: S
  }, x));
});
d1.muiSkipListHighlight = !0;
process.env.NODE_ENV !== "production" && (d1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component. It supports those theme colors that make sense for this component.
   * @default 'default'
   */
  color: t.oneOf(["default", "inherit", "primary"]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the List Subheader will not have gutters.
   * @default false
   */
  disableGutters: t.bool,
  /**
   * If `true`, the List Subheader will not stick to the top during scroll.
   * @default false
   */
  disableSticky: t.bool,
  /**
   * If `true`, the List Subheader is indented.
   * @default false
   */
  inset: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const J8 = d1, e9 = Tn(/* @__PURE__ */ _("path", {
  d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
}), "Cancel");
function t9(e) {
  return We("MuiChip", e);
}
const n9 = Ye("MuiChip", ["root", "sizeSmall", "sizeMedium", "colorError", "colorInfo", "colorPrimary", "colorSecondary", "colorSuccess", "colorWarning", "disabled", "clickable", "clickableColorPrimary", "clickableColorSecondary", "deletable", "deletableColorPrimary", "deletableColorSecondary", "outlined", "filled", "outlinedPrimary", "outlinedSecondary", "filledPrimary", "filledSecondary", "avatar", "avatarSmall", "avatarMedium", "avatarColorPrimary", "avatarColorSecondary", "icon", "iconSmall", "iconMedium", "iconColorPrimary", "iconColorSecondary", "label", "labelSmall", "labelMedium", "deleteIcon", "deleteIconSmall", "deleteIconMedium", "deleteIconColorPrimary", "deleteIconColorSecondary", "deleteIconOutlinedColorPrimary", "deleteIconOutlinedColorSecondary", "deleteIconFilledColorPrimary", "deleteIconFilledColorSecondary", "focusVisible"]), Dn = n9, o9 = ["avatar", "className", "clickable", "color", "component", "deleteIcon", "disabled", "icon", "label", "onClick", "onDelete", "onKeyDown", "onKeyUp", "size", "variant", "tabIndex", "skipFocusWhenDisabled"], r9 = (e) => {
  const {
    classes: n,
    disabled: a,
    size: s,
    color: u,
    iconColor: d,
    onDelete: p,
    clickable: h,
    variant: g
  } = e, b = {
    root: ["root", g, a && "disabled", `size${pe(s)}`, `color${pe(u)}`, h && "clickable", h && `clickableColor${pe(u)}`, p && "deletable", p && `deletableColor${pe(u)}`, `${g}${pe(u)}`],
    label: ["label", `label${pe(s)}`],
    avatar: ["avatar", `avatar${pe(s)}`, `avatarColor${pe(u)}`],
    icon: ["icon", `icon${pe(s)}`, `iconColor${pe(d)}`],
    deleteIcon: ["deleteIcon", `deleteIcon${pe(s)}`, `deleteIconColor${pe(u)}`, `deleteIcon${pe(g)}Color${pe(u)}`]
  };
  return He(b, t9, n);
}, a9 = J("div", {
  name: "MuiChip",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e, {
      color: s,
      iconColor: u,
      clickable: d,
      onDelete: p,
      size: h,
      variant: g
    } = a;
    return [{
      [`& .${Dn.avatar}`]: n.avatar
    }, {
      [`& .${Dn.avatar}`]: n[`avatar${pe(h)}`]
    }, {
      [`& .${Dn.avatar}`]: n[`avatarColor${pe(s)}`]
    }, {
      [`& .${Dn.icon}`]: n.icon
    }, {
      [`& .${Dn.icon}`]: n[`icon${pe(h)}`]
    }, {
      [`& .${Dn.icon}`]: n[`iconColor${pe(u)}`]
    }, {
      [`& .${Dn.deleteIcon}`]: n.deleteIcon
    }, {
      [`& .${Dn.deleteIcon}`]: n[`deleteIcon${pe(h)}`]
    }, {
      [`& .${Dn.deleteIcon}`]: n[`deleteIconColor${pe(s)}`]
    }, {
      [`& .${Dn.deleteIcon}`]: n[`deleteIcon${pe(g)}Color${pe(s)}`]
    }, n.root, n[`size${pe(h)}`], n[`color${pe(s)}`], d && n.clickable, d && s !== "default" && n[`clickableColor${pe(s)})`], p && n.deletable, p && s !== "default" && n[`deletableColor${pe(s)}`], n[g], n[`${g}${pe(s)}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => {
  const a = e.palette.mode === "light" ? e.palette.grey[700] : e.palette.grey[300];
  return y({
    maxWidth: "100%",
    fontFamily: e.typography.fontFamily,
    fontSize: e.typography.pxToRem(13),
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    height: 32,
    color: (e.vars || e).palette.text.primary,
    backgroundColor: (e.vars || e).palette.action.selected,
    borderRadius: 32 / 2,
    whiteSpace: "nowrap",
    transition: e.transitions.create(["background-color", "box-shadow"]),
    // reset cursor explicitly in case ButtonBase is used
    cursor: "unset",
    // We disable the focus ring for mouse, touch and keyboard users.
    outline: 0,
    textDecoration: "none",
    border: 0,
    // Remove `button` border
    padding: 0,
    // Remove `button` padding
    verticalAlign: "middle",
    boxSizing: "border-box",
    [`&.${Dn.disabled}`]: {
      opacity: (e.vars || e).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`& .${Dn.avatar}`]: {
      marginLeft: 5,
      marginRight: -6,
      width: 24,
      height: 24,
      color: e.vars ? e.vars.palette.Chip.defaultAvatarColor : a,
      fontSize: e.typography.pxToRem(12)
    },
    [`& .${Dn.avatarColorPrimary}`]: {
      color: (e.vars || e).palette.primary.contrastText,
      backgroundColor: (e.vars || e).palette.primary.dark
    },
    [`& .${Dn.avatarColorSecondary}`]: {
      color: (e.vars || e).palette.secondary.contrastText,
      backgroundColor: (e.vars || e).palette.secondary.dark
    },
    [`& .${Dn.avatarSmall}`]: {
      marginLeft: 4,
      marginRight: -4,
      width: 18,
      height: 18,
      fontSize: e.typography.pxToRem(10)
    },
    [`& .${Dn.icon}`]: y({
      marginLeft: 5,
      marginRight: -6
    }, n.size === "small" && {
      fontSize: 18,
      marginLeft: 4,
      marginRight: -4
    }, n.iconColor === n.color && y({
      color: e.vars ? e.vars.palette.Chip.defaultIconColor : a
    }, n.color !== "default" && {
      color: "inherit"
    })),
    [`& .${Dn.deleteIcon}`]: y({
      WebkitTapHighlightColor: "transparent",
      color: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / 0.26)` : Yt(e.palette.text.primary, 0.26),
      fontSize: 22,
      cursor: "pointer",
      margin: "0 5px 0 -6px",
      "&:hover": {
        color: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / 0.4)` : Yt(e.palette.text.primary, 0.4)
      }
    }, n.size === "small" && {
      fontSize: 16,
      marginRight: 4,
      marginLeft: -4
    }, n.color !== "default" && {
      color: e.vars ? `rgba(${e.vars.palette[n.color].contrastTextChannel} / 0.7)` : Yt(e.palette[n.color].contrastText, 0.7),
      "&:hover, &:active": {
        color: (e.vars || e).palette[n.color].contrastText
      }
    })
  }, n.size === "small" && {
    height: 24
  }, n.color !== "default" && {
    backgroundColor: (e.vars || e).palette[n.color].main,
    color: (e.vars || e).palette[n.color].contrastText
  }, n.onDelete && {
    [`&.${Dn.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Yt(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
    }
  }, n.onDelete && n.color !== "default" && {
    [`&.${Dn.focusVisible}`]: {
      backgroundColor: (e.vars || e).palette[n.color].dark
    }
  });
}, ({
  theme: e,
  ownerState: n
}) => y({}, n.clickable && {
  userSelect: "none",
  WebkitTapHighlightColor: "transparent",
  cursor: "pointer",
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Yt(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity)
  },
  [`&.${Dn.focusVisible}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Yt(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
  },
  "&:active": {
    boxShadow: (e.vars || e).shadows[1]
  }
}, n.clickable && n.color !== "default" && {
  [`&:hover, &.${Dn.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette[n.color].dark
  }
}), ({
  theme: e,
  ownerState: n
}) => y({}, n.variant === "outlined" && {
  backgroundColor: "transparent",
  border: e.vars ? `1px solid ${e.vars.palette.Chip.defaultBorder}` : `1px solid ${e.palette.mode === "light" ? e.palette.grey[400] : e.palette.grey[700]}`,
  [`&.${Dn.clickable}:hover`]: {
    backgroundColor: (e.vars || e).palette.action.hover
  },
  [`&.${Dn.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette.action.focus
  },
  [`& .${Dn.avatar}`]: {
    marginLeft: 4
  },
  [`& .${Dn.avatarSmall}`]: {
    marginLeft: 2
  },
  [`& .${Dn.icon}`]: {
    marginLeft: 4
  },
  [`& .${Dn.iconSmall}`]: {
    marginLeft: 2
  },
  [`& .${Dn.deleteIcon}`]: {
    marginRight: 5
  },
  [`& .${Dn.deleteIconSmall}`]: {
    marginRight: 3
  }
}, n.variant === "outlined" && n.color !== "default" && {
  color: (e.vars || e).palette[n.color].main,
  border: `1px solid ${e.vars ? `rgba(${e.vars.palette[n.color].mainChannel} / 0.7)` : Yt(e.palette[n.color].main, 0.7)}`,
  [`&.${Dn.clickable}:hover`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette[n.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette[n.color].main, e.palette.action.hoverOpacity)
  },
  [`&.${Dn.focusVisible}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette[n.color].mainChannel} / ${e.vars.palette.action.focusOpacity})` : Yt(e.palette[n.color].main, e.palette.action.focusOpacity)
  },
  [`& .${Dn.deleteIcon}`]: {
    color: e.vars ? `rgba(${e.vars.palette[n.color].mainChannel} / 0.7)` : Yt(e.palette[n.color].main, 0.7),
    "&:hover, &:active": {
      color: (e.vars || e).palette[n.color].main
    }
  }
})), i9 = J("span", {
  name: "MuiChip",
  slot: "Label",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e, {
      size: s
    } = a;
    return [n.label, n[`label${pe(s)}`]];
  }
})(({
  ownerState: e
}) => y({
  overflow: "hidden",
  textOverflow: "ellipsis",
  paddingLeft: 12,
  paddingRight: 12,
  whiteSpace: "nowrap"
}, e.variant === "outlined" && {
  paddingLeft: 11,
  paddingRight: 11
}, e.size === "small" && {
  paddingLeft: 8,
  paddingRight: 8
}, e.size === "small" && e.variant === "outlined" && {
  paddingLeft: 7,
  paddingRight: 7
}));
function oM(e) {
  return e.key === "Backspace" || e.key === "Delete";
}
const CL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiChip"
  }), {
    avatar: u,
    className: d,
    clickable: p,
    color: h = "default",
    component: g,
    deleteIcon: b,
    disabled: x = !1,
    icon: S,
    label: E,
    onClick: R,
    onDelete: $,
    onKeyDown: M,
    onKeyUp: O,
    size: N = "medium",
    variant: V = "filled",
    tabIndex: I,
    skipFocusWhenDisabled: z = !1
    // TODO v6: Rename to `focusableWhenDisabled`.
  } = s, B = le(s, o9), P = k.useRef(null), F = cn(P, a), H = (ne) => {
    ne.stopPropagation(), $ && $(ne);
  }, U = (ne) => {
    ne.currentTarget === ne.target && oM(ne) && ne.preventDefault(), M && M(ne);
  }, Q = (ne) => {
    ne.currentTarget === ne.target && ($ && oM(ne) ? $(ne) : ne.key === "Escape" && P.current && P.current.blur()), O && O(ne);
  }, Y = p !== !1 && R ? !0 : p, te = Y || $ ? Zo : g || "div", Z = y({}, s, {
    component: te,
    disabled: x,
    size: N,
    color: h,
    iconColor: /* @__PURE__ */ k.isValidElement(S) && S.props.color || h,
    onDelete: !!$,
    clickable: Y,
    variant: V
  }), q = r9(Z), X = te === Zo ? y({
    component: g || "div",
    focusVisibleClassName: q.focusVisible
  }, $ && {
    disableRipple: !0
  }) : {};
  let oe = null;
  $ && (oe = b && /* @__PURE__ */ k.isValidElement(b) ? /* @__PURE__ */ k.cloneElement(b, {
    className: fe(b.props.className, q.deleteIcon),
    onClick: H
  }) : /* @__PURE__ */ _(e9, {
    className: fe(q.deleteIcon),
    onClick: H
  }));
  let ie = null;
  u && /* @__PURE__ */ k.isValidElement(u) && (ie = /* @__PURE__ */ k.cloneElement(u, {
    className: fe(q.avatar, u.props.className)
  }));
  let K = null;
  return S && /* @__PURE__ */ k.isValidElement(S) && (K = /* @__PURE__ */ k.cloneElement(S, {
    className: fe(q.icon, S.props.className)
  })), process.env.NODE_ENV !== "production" && ie && K && console.error("MUI: The Chip component can not handle the avatar and the icon prop at the same time. Pick one."), /* @__PURE__ */ st(a9, y({
    as: te,
    className: fe(q.root, d),
    disabled: Y && x ? !0 : void 0,
    onClick: R,
    onKeyDown: U,
    onKeyUp: Q,
    ref: F,
    tabIndex: z && x ? -1 : I,
    ownerState: Z
  }, X, B, {
    children: [ie || K, /* @__PURE__ */ _(i9, {
      className: fe(q.label),
      ownerState: Z,
      children: E
    }), oe]
  }));
});
process.env.NODE_ENV !== "production" && (CL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The Avatar element to display.
   */
  avatar: t.element,
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: UT,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, the chip will appear clickable, and will raise when pressed,
   * even if the onClick prop is not defined.
   * If `false`, the chip will not appear clickable, even if onClick prop is defined.
   * This can be used, for example,
   * along with the component prop to indicate an anchor Chip is clickable.
   * Note: this controls the UI and does not affect the onClick event.
   */
  clickable: t.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: t.oneOfType([t.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Override the default delete icon element. Shown only if `onDelete` is set.
   */
  deleteIcon: t.element,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * Icon element.
   */
  icon: t.element,
  /**
   * The content of the component.
   */
  label: t.node,
  /**
   * @ignore
   */
  onClick: t.func,
  /**
   * Callback fired when the delete icon is clicked.
   * If set, the delete icon will be shown.
   */
  onDelete: t.func,
  /**
   * @ignore
   */
  onKeyDown: t.func,
  /**
   * @ignore
   */
  onKeyUp: t.func,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["medium", "small"]), t.string]),
  /**
   * If `true`, allows the disabled chip to escape focus.
   * If `false`, allows the disabled chip to receive focus.
   * @default false
   */
  skipFocusWhenDisabled: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * @ignore
   */
  tabIndex: t.number,
  /**
   * The variant to use.
   * @default 'filled'
   */
  variant: t.oneOfType([t.oneOf(["filled", "outlined"]), t.string])
});
const TL = CL;
function ql({
  props: e,
  states: n,
  muiFormControl: a
}) {
  return n.reduce((s, u) => (s[u] = e[u], a && typeof e[u] > "u" && (s[u] = a[u]), s), {});
}
const xL = /* @__PURE__ */ k.createContext(void 0);
process.env.NODE_ENV !== "production" && (xL.displayName = "FormControlContext");
const QT = xL;
function is() {
  return k.useContext(QT);
}
function p1(e) {
  return /* @__PURE__ */ _(lN, y({}, e, {
    defaultTheme: WT,
    themeId: ru
  }));
}
process.env.NODE_ENV !== "production" && (p1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: t.oneOfType([t.array, t.func, t.number, t.object, t.string, t.bool])
});
function rM(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function $T(e, n = !1) {
  return e && (rM(e.value) && e.value !== "" || n && rM(e.defaultValue) && e.defaultValue !== "");
}
function s9(e) {
  return e.startAdornment;
}
function l9(e) {
  return We("MuiInputBase", e);
}
const c9 = Ye("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]), Xa = c9, u9 = ["aria-describedby", "autoComplete", "autoFocus", "className", "color", "components", "componentsProps", "defaultValue", "disabled", "disableInjectingGlobalStyles", "endAdornment", "error", "fullWidth", "id", "inputComponent", "inputProps", "inputRef", "margin", "maxRows", "minRows", "multiline", "name", "onBlur", "onChange", "onClick", "onFocus", "onKeyDown", "onKeyUp", "placeholder", "readOnly", "renderSuffix", "rows", "size", "slotProps", "slots", "startAdornment", "type", "value"], XT = (e, n) => {
  const {
    ownerState: a
  } = e;
  return [n.root, a.formControl && n.formControl, a.startAdornment && n.adornedStart, a.endAdornment && n.adornedEnd, a.error && n.error, a.size === "small" && n.sizeSmall, a.multiline && n.multiline, a.color && n[`color${pe(a.color)}`], a.fullWidth && n.fullWidth, a.hiddenLabel && n.hiddenLabel];
}, ZT = (e, n) => {
  const {
    ownerState: a
  } = e;
  return [n.input, a.size === "small" && n.inputSizeSmall, a.multiline && n.inputMultiline, a.type === "search" && n.inputTypeSearch, a.startAdornment && n.inputAdornedStart, a.endAdornment && n.inputAdornedEnd, a.hiddenLabel && n.inputHiddenLabel];
}, d9 = (e) => {
  const {
    classes: n,
    color: a,
    disabled: s,
    error: u,
    endAdornment: d,
    focused: p,
    formControl: h,
    fullWidth: g,
    hiddenLabel: b,
    multiline: x,
    readOnly: S,
    size: E,
    startAdornment: R,
    type: $
  } = e, M = {
    root: ["root", `color${pe(a)}`, s && "disabled", u && "error", g && "fullWidth", p && "focused", h && "formControl", E && E !== "medium" && `size${pe(E)}`, x && "multiline", R && "adornedStart", d && "adornedEnd", b && "hiddenLabel", S && "readOnly"],
    input: ["input", s && "disabled", $ === "search" && "inputTypeSearch", x && "inputMultiline", E === "small" && "inputSizeSmall", b && "inputHiddenLabel", R && "inputAdornedStart", d && "inputAdornedEnd", S && "readOnly"]
  };
  return He(M, l9, n);
}, JT = J("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: XT
})(({
  theme: e,
  ownerState: n
}) => y({}, e.typography.body1, {
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${Xa.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  }
}, n.multiline && y({
  padding: "4px 0 5px"
}, n.size === "small" && {
  paddingTop: 1
}), n.fullWidth && {
  width: "100%"
})), ex = J("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: ZT
})(({
  theme: e,
  ownerState: n
}) => {
  const a = e.palette.mode === "light", s = y({
    color: "currentColor"
  }, e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: a ? 0.42 : 0.5
  }, {
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }), u = {
    opacity: "0 !important"
  }, d = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: a ? 0.42 : 0.5
  };
  return y({
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    // Fix IE11 width issue
    animationName: "mui-auto-fill-cancel",
    animationDuration: "10ms",
    "&::-webkit-input-placeholder": s,
    "&::-moz-placeholder": s,
    // Firefox 19+
    "&:-ms-input-placeholder": s,
    // IE11
    "&::-ms-input-placeholder": s,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${Xa.formControl} &`]: {
      "&::-webkit-input-placeholder": u,
      "&::-moz-placeholder": u,
      // Firefox 19+
      "&:-ms-input-placeholder": u,
      // IE11
      "&::-ms-input-placeholder": u,
      // Edge
      "&:focus::-webkit-input-placeholder": d,
      "&:focus::-moz-placeholder": d,
      // Firefox 19+
      "&:focus:-ms-input-placeholder": d,
      // IE11
      "&:focus::-ms-input-placeholder": d
      // Edge
    },
    [`&.${Xa.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    "&:-webkit-autofill": {
      animationDuration: "5000s",
      animationName: "mui-auto-fill"
    }
  }, n.size === "small" && {
    paddingTop: 1
  }, n.multiline && {
    height: "auto",
    resize: "none",
    padding: 0,
    paddingTop: 0
  }, n.type === "search" && {
    // Improve type search style.
    MozAppearance: "textfield"
  });
}), p9 = /* @__PURE__ */ _(p1, {
  styles: {
    "@keyframes mui-auto-fill": {
      from: {
        display: "block"
      }
    },
    "@keyframes mui-auto-fill-cancel": {
      from: {
        display: "block"
      }
    }
  }
}), SL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s;
  const u = Ie({
    props: n,
    name: "MuiInputBase"
  }), {
    "aria-describedby": d,
    autoComplete: p,
    autoFocus: h,
    className: g,
    components: b = {},
    componentsProps: x = {},
    defaultValue: S,
    disabled: E,
    disableInjectingGlobalStyles: R,
    endAdornment: $,
    fullWidth: M = !1,
    id: O,
    inputComponent: N = "input",
    inputProps: V = {},
    inputRef: I,
    maxRows: z,
    minRows: B,
    multiline: P = !1,
    name: F,
    onBlur: H,
    onChange: U,
    onClick: Q,
    onFocus: Y,
    onKeyDown: te,
    onKeyUp: Z,
    placeholder: q,
    readOnly: X,
    renderSuffix: oe,
    rows: ie,
    slotProps: K = {},
    slots: ne = {},
    startAdornment: se,
    type: ze = "text",
    value: Ue
  } = u, Oe = le(u, u9), ue = V.value != null ? V.value : Ue, {
    current: xe
  } = k.useRef(ue != null), me = k.useRef(), Se = k.useCallback((we) => {
    process.env.NODE_ENV !== "production" && we && we.nodeName !== "INPUT" && !we.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), ce = cn(me, I, V.ref, Se), [Le, Ze] = k.useState(!1), Ee = is();
  process.env.NODE_ENV !== "production" && k.useEffect(() => {
    if (Ee)
      return Ee.registerEffect();
  }, [Ee]);
  const Ae = ql({
    props: u,
    muiFormControl: Ee,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  Ae.focused = Ee ? Ee.focused : Le, k.useEffect(() => {
    !Ee && E && Le && (Ze(!1), H && H());
  }, [Ee, E, Le, H]);
  const Ce = Ee && Ee.onFilled, ae = Ee && Ee.onEmpty, Pe = k.useCallback((we) => {
    $T(we) ? Ce && Ce() : ae && ae();
  }, [Ce, ae]);
  ro(() => {
    xe && Pe({
      value: ue
    });
  }, [ue, Pe, xe]);
  const ke = (we) => {
    if (Ae.disabled) {
      we.stopPropagation();
      return;
    }
    Y && Y(we), V.onFocus && V.onFocus(we), Ee && Ee.onFocus ? Ee.onFocus(we) : Ze(!0);
  }, pt = (we) => {
    H && H(we), V.onBlur && V.onBlur(we), Ee && Ee.onBlur ? Ee.onBlur(we) : Ze(!1);
  }, _e = (we, ...Re) => {
    if (!xe) {
      const at = we.target || me.current;
      if (at == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : qs(1));
      Pe({
        value: at.value
      });
    }
    V.onChange && V.onChange(we, ...Re), U && U(we, ...Re);
  };
  k.useEffect(() => {
    Pe(me.current);
  }, []);
  const dt = (we) => {
    me.current && we.currentTarget === we.target && me.current.focus(), Q && Q(we);
  };
  let ge = N, ve = V;
  P && ge === "input" && (ie ? (process.env.NODE_ENV !== "production" && (B || z) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), ve = y({
    type: void 0,
    minRows: ie,
    maxRows: ie
  }, ve)) : ve = y({
    type: void 0,
    maxRows: z,
    minRows: B
  }, ve), ge = uL);
  const qe = (we) => {
    Pe(we.animationName === "mui-auto-fill-cancel" ? me.current : {
      value: "x"
    });
  };
  k.useEffect(() => {
    Ee && Ee.setAdornedStart(!!se);
  }, [Ee, se]);
  const vt = y({}, u, {
    color: Ae.color || "primary",
    disabled: Ae.disabled,
    endAdornment: $,
    error: Ae.error,
    focused: Ae.focused,
    formControl: Ee,
    fullWidth: M,
    hiddenLabel: Ae.hiddenLabel,
    multiline: P,
    size: Ae.size,
    startAdornment: se,
    type: ze
  }), yt = d9(vt), Mt = ne.root || b.Root || JT, bt = K.root || x.root || {}, wt = ne.input || b.Input || ex;
  return ve = y({}, ve, (s = K.input) != null ? s : x.input), /* @__PURE__ */ st(k.Fragment, {
    children: [!R && p9, /* @__PURE__ */ st(Mt, y({}, bt, !ts(Mt) && {
      ownerState: y({}, vt, bt.ownerState)
    }, {
      ref: a,
      onClick: dt
    }, Oe, {
      className: fe(yt.root, bt.className, g, X && "MuiInputBase-readOnly"),
      children: [se, /* @__PURE__ */ _(QT.Provider, {
        value: null,
        children: /* @__PURE__ */ _(wt, y({
          ownerState: vt,
          "aria-invalid": Ae.error,
          "aria-describedby": d,
          autoComplete: p,
          autoFocus: h,
          defaultValue: S,
          disabled: Ae.disabled,
          id: O,
          onAnimationStart: qe,
          name: F,
          placeholder: q,
          readOnly: X,
          required: Ae.required,
          rows: ie,
          value: ue,
          onKeyDown: te,
          onKeyUp: Z,
          type: ze
        }, ve, !ts(wt) && {
          as: ge,
          ownerState: y({}, vt, ve.ownerState)
        }, {
          ref: ce,
          className: fe(yt.input, ve.className, X && "MuiInputBase-readOnly"),
          onBlur: pt,
          onChange: _e,
          onFocus: ke
        }))
      }), $, oe ? oe(y({}, Ae, {
        startAdornment: se
      })) : null]
    }))]
  });
});
process.env.NODE_ENV !== "production" && (SL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": t.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: t.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: t.oneOfType([t.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    Input: t.elementType,
    Root: t.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: t.shape({
    input: t.object,
    root: t.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: t.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: t.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: t.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: t.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * The id of the `input` element.
   */
  id: t.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: iu,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: t.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: t.oneOfType([t.number, t.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: t.oneOfType([t.number, t.string]),
  /**
   * If `true`, a [TextareaAutosize](/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: t.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: t.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: t.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: t.func,
  /**
   * @ignore
   */
  onClick: t.func,
  /**
   * @ignore
   */
  onFocus: t.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: t.func,
  /**
   * @ignore
   */
  onKeyDown: t.func,
  /**
   * @ignore
   */
  onKeyUp: t.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: t.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: t.bool,
  /**
   * @ignore
   */
  renderSuffix: t.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: t.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: t.oneOfType([t.number, t.string]),
  /**
   * The size of the component.
   */
  size: t.oneOfType([t.oneOf(["medium", "small"]), t.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: t.shape({
    input: t.object,
    root: t.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: t.shape({
    input: t.elementType,
    root: t.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: t.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: t.any
});
const tx = SL;
function f9(e) {
  return We("MuiInput", e);
}
const m9 = y({}, Xa, Ye("MuiInput", ["root", "underline", "input"])), eu = m9;
function h9(e) {
  return We("MuiOutlinedInput", e);
}
const v9 = y({}, Xa, Ye("MuiOutlinedInput", ["root", "notchedOutline", "input"])), js = v9;
function g9(e) {
  return We("MuiFilledInput", e);
}
const b9 = y({}, Xa, Ye("MuiFilledInput", ["root", "underline", "input"])), Za = b9, f1 = Tn(/* @__PURE__ */ _("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown");
function y9(e) {
  return We("MuiAutocomplete", e);
}
const C9 = Ye("MuiAutocomplete", ["root", "expanded", "fullWidth", "focused", "focusVisible", "tag", "tagSizeSmall", "tagSizeMedium", "hasPopupIcon", "hasClearIcon", "inputRoot", "input", "inputFocused", "endAdornment", "clearIndicator", "popupIndicator", "popupIndicatorOpen", "popper", "popperDisablePortal", "paper", "listbox", "loading", "noOptions", "option", "groupLabel", "groupUl"]), yn = C9;
var aM, iM;
const T9 = ["autoComplete", "autoHighlight", "autoSelect", "blurOnSelect", "ChipProps", "className", "clearIcon", "clearOnBlur", "clearOnEscape", "clearText", "closeText", "componentsProps", "defaultValue", "disableClearable", "disableCloseOnSelect", "disabled", "disabledItemsFocusable", "disableListWrap", "disablePortal", "filterOptions", "filterSelectedOptions", "forcePopupIcon", "freeSolo", "fullWidth", "getLimitTagsText", "getOptionDisabled", "getOptionKey", "getOptionLabel", "isOptionEqualToValue", "groupBy", "handleHomeEndKeys", "id", "includeInputInList", "inputValue", "limitTags", "ListboxComponent", "ListboxProps", "loading", "loadingText", "multiple", "noOptionsText", "onChange", "onClose", "onHighlightChange", "onInputChange", "onOpen", "open", "openOnFocus", "openText", "options", "PaperComponent", "PopperComponent", "popupIcon", "readOnly", "renderGroup", "renderInput", "renderOption", "renderTags", "selectOnFocus", "size", "slotProps", "value"], x9 = ["ref"], S9 = (e) => {
  const {
    classes: n,
    disablePortal: a,
    expanded: s,
    focused: u,
    fullWidth: d,
    hasClearIcon: p,
    hasPopupIcon: h,
    inputFocused: g,
    popupOpen: b,
    size: x
  } = e, S = {
    root: ["root", s && "expanded", u && "focused", d && "fullWidth", p && "hasClearIcon", h && "hasPopupIcon"],
    inputRoot: ["inputRoot"],
    input: ["input", g && "inputFocused"],
    tag: ["tag", `tagSize${pe(x)}`],
    endAdornment: ["endAdornment"],
    clearIndicator: ["clearIndicator"],
    popupIndicator: ["popupIndicator", b && "popupIndicatorOpen"],
    popper: ["popper", a && "popperDisablePortal"],
    paper: ["paper"],
    listbox: ["listbox"],
    loading: ["loading"],
    noOptions: ["noOptions"],
    option: ["option"],
    groupLabel: ["groupLabel"],
    groupUl: ["groupUl"]
  };
  return He(S, y9, n);
}, k9 = J("div", {
  name: "MuiAutocomplete",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e, {
      fullWidth: s,
      hasClearIcon: u,
      hasPopupIcon: d,
      inputFocused: p,
      size: h
    } = a;
    return [{
      [`& .${yn.tag}`]: n.tag
    }, {
      [`& .${yn.tag}`]: n[`tagSize${pe(h)}`]
    }, {
      [`& .${yn.inputRoot}`]: n.inputRoot
    }, {
      [`& .${yn.input}`]: n.input
    }, {
      [`& .${yn.input}`]: p && n.inputFocused
    }, n.root, s && n.fullWidth, d && n.hasPopupIcon, u && n.hasClearIcon];
  }
})(({
  ownerState: e
}) => y({
  [`&.${yn.focused} .${yn.clearIndicator}`]: {
    visibility: "visible"
  },
  /* Avoid double tap issue on iOS */
  "@media (pointer: fine)": {
    [`&:hover .${yn.clearIndicator}`]: {
      visibility: "visible"
    }
  }
}, e.fullWidth && {
  width: "100%"
}, {
  [`& .${yn.tag}`]: y({
    margin: 3,
    maxWidth: "calc(100% - 6px)"
  }, e.size === "small" && {
    margin: 2,
    maxWidth: "calc(100% - 4px)"
  }),
  [`& .${yn.inputRoot}`]: {
    flexWrap: "wrap",
    [`.${yn.hasPopupIcon}&, .${yn.hasClearIcon}&`]: {
      paddingRight: 26 + 4
    },
    [`.${yn.hasPopupIcon}.${yn.hasClearIcon}&`]: {
      paddingRight: 52 + 4
    },
    [`& .${yn.input}`]: {
      width: 0,
      minWidth: 30
    }
  },
  [`& .${eu.root}`]: {
    paddingBottom: 1,
    "& .MuiInput-input": {
      padding: "4px 4px 4px 0px"
    }
  },
  [`& .${eu.root}.${Xa.sizeSmall}`]: {
    [`& .${eu.input}`]: {
      padding: "2px 4px 3px 0"
    }
  },
  [`& .${js.root}`]: {
    padding: 9,
    [`.${yn.hasPopupIcon}&, .${yn.hasClearIcon}&`]: {
      paddingRight: 26 + 4 + 9
    },
    [`.${yn.hasPopupIcon}.${yn.hasClearIcon}&`]: {
      paddingRight: 52 + 4 + 9
    },
    [`& .${yn.input}`]: {
      padding: "7.5px 4px 7.5px 5px"
    },
    [`& .${yn.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${js.root}.${Xa.sizeSmall}`]: {
    // Don't specify paddingRight, as it overrides the default value set when there is only
    // one of the popup or clear icon as the specificity is equal so the latter one wins
    paddingTop: 6,
    paddingBottom: 6,
    paddingLeft: 6,
    [`& .${yn.input}`]: {
      padding: "2.5px 4px 2.5px 8px"
    }
  },
  [`& .${Za.root}`]: {
    paddingTop: 19,
    paddingLeft: 8,
    [`.${yn.hasPopupIcon}&, .${yn.hasClearIcon}&`]: {
      paddingRight: 26 + 4 + 9
    },
    [`.${yn.hasPopupIcon}.${yn.hasClearIcon}&`]: {
      paddingRight: 52 + 4 + 9
    },
    [`& .${Za.input}`]: {
      padding: "7px 4px"
    },
    [`& .${yn.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${Za.root}.${Xa.sizeSmall}`]: {
    paddingBottom: 1,
    [`& .${Za.input}`]: {
      padding: "2.5px 4px"
    }
  },
  [`& .${Xa.hiddenLabel}`]: {
    paddingTop: 8
  },
  [`& .${Za.root}.${Xa.hiddenLabel}`]: {
    paddingTop: 0,
    paddingBottom: 0,
    [`& .${yn.input}`]: {
      paddingTop: 16,
      paddingBottom: 17
    }
  },
  [`& .${Za.root}.${Xa.hiddenLabel}.${Xa.sizeSmall}`]: {
    [`& .${yn.input}`]: {
      paddingTop: 8,
      paddingBottom: 9
    }
  },
  [`& .${yn.input}`]: y({
    flexGrow: 1,
    textOverflow: "ellipsis",
    opacity: 0
  }, e.inputFocused && {
    opacity: 1
  })
})), w9 = J("div", {
  name: "MuiAutocomplete",
  slot: "EndAdornment",
  overridesResolver: (e, n) => n.endAdornment
})({
  // We use a position absolute to support wrapping tags.
  position: "absolute",
  right: 0,
  top: "50%",
  transform: "translate(0, -50%)"
}), R9 = J(Ja, {
  name: "MuiAutocomplete",
  slot: "ClearIndicator",
  overridesResolver: (e, n) => n.clearIndicator
})({
  marginRight: -2,
  padding: 4,
  visibility: "hidden"
}), E9 = J(Ja, {
  name: "MuiAutocomplete",
  slot: "PopupIndicator",
  overridesResolver: ({
    ownerState: e
  }, n) => y({}, n.popupIndicator, e.popupOpen && n.popupIndicatorOpen)
})(({
  ownerState: e
}) => y({
  padding: 2,
  marginRight: -2
}, e.popupOpen && {
  transform: "rotate(180deg)"
})), O9 = J(Pg, {
  name: "MuiAutocomplete",
  slot: "Popper",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [{
      [`& .${yn.option}`]: n.option
    }, n.popper, a.disablePortal && n.popperDisablePortal];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  zIndex: (e.vars || e).zIndex.modal
}, n.disablePortal && {
  position: "absolute"
})), P9 = J(ni, {
  name: "MuiAutocomplete",
  slot: "Paper",
  overridesResolver: (e, n) => n.paper
})(({
  theme: e
}) => y({}, e.typography.body1, {
  overflow: "auto"
})), D9 = J("div", {
  name: "MuiAutocomplete",
  slot: "Loading",
  overridesResolver: (e, n) => n.loading
})(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  padding: "14px 16px"
})), M9 = J("div", {
  name: "MuiAutocomplete",
  slot: "NoOptions",
  overridesResolver: (e, n) => n.noOptions
})(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  padding: "14px 16px"
})), $9 = J("div", {
  name: "MuiAutocomplete",
  slot: "Listbox",
  overridesResolver: (e, n) => n.listbox
})(({
  theme: e
}) => ({
  listStyle: "none",
  margin: 0,
  padding: "8px 0",
  maxHeight: "40vh",
  overflow: "auto",
  position: "relative",
  [`& .${yn.option}`]: {
    minHeight: 48,
    display: "flex",
    overflow: "hidden",
    justifyContent: "flex-start",
    alignItems: "center",
    cursor: "pointer",
    paddingTop: 6,
    boxSizing: "border-box",
    outline: "0",
    WebkitTapHighlightColor: "transparent",
    paddingBottom: 6,
    paddingLeft: 16,
    paddingRight: 16,
    [e.breakpoints.up("sm")]: {
      minHeight: "auto"
    },
    [`&.${yn.focused}`]: {
      backgroundColor: (e.vars || e).palette.action.hover,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    '&[aria-disabled="true"]': {
      opacity: (e.vars || e).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`&.${yn.focusVisible}`]: {
      backgroundColor: (e.vars || e).palette.action.focus
    },
    '&[aria-selected="true"]': {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Yt(e.palette.primary.main, e.palette.action.selectedOpacity),
      [`&.${yn.focused}`]: {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Yt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: (e.vars || e).palette.action.selected
        }
      },
      [`&.${yn.focusVisible}`]: {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Yt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
      }
    }
  }
})), N9 = J(J8, {
  name: "MuiAutocomplete",
  slot: "GroupLabel",
  overridesResolver: (e, n) => n.groupLabel
})(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  top: -8
})), L9 = J("ul", {
  name: "MuiAutocomplete",
  slot: "GroupUl",
  overridesResolver: (e, n) => n.groupUl
})({
  padding: 0,
  [`& .${yn.option}`]: {
    paddingLeft: 24
  }
}), kL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d, p;
  const h = Ie({
    props: n,
    name: "MuiAutocomplete"
  }), {
    autoComplete: g = !1,
    autoHighlight: b = !1,
    autoSelect: x = !1,
    blurOnSelect: S = !1,
    ChipProps: E,
    className: R,
    clearIcon: $ = aM || (aM = /* @__PURE__ */ _(pL, {
      fontSize: "small"
    })),
    clearOnBlur: M = !h.freeSolo,
    clearOnEscape: O = !1,
    clearText: N = "Clear",
    closeText: V = "Close",
    componentsProps: I = {},
    defaultValue: z = h.multiple ? [] : null,
    disableClearable: B = !1,
    disableCloseOnSelect: P = !1,
    disabled: F = !1,
    disabledItemsFocusable: H = !1,
    disableListWrap: U = !1,
    disablePortal: Q = !1,
    filterSelectedOptions: Y = !1,
    forcePopupIcon: te = "auto",
    freeSolo: Z = !1,
    fullWidth: q = !1,
    getLimitTagsText: X = (Te) => `+${Te}`,
    getOptionLabel: oe,
    groupBy: ie,
    handleHomeEndKeys: K = !h.freeSolo,
    includeInputInList: ne = !1,
    limitTags: se = -1,
    ListboxComponent: ze = "ul",
    ListboxProps: Ue,
    loading: Oe = !1,
    loadingText: ue = "Loading…",
    multiple: xe = !1,
    noOptionsText: me = "No options",
    openOnFocus: Se = !1,
    openText: ce = "Open",
    PaperComponent: Le = ni,
    PopperComponent: Ze = Pg,
    popupIcon: Ee = iM || (iM = /* @__PURE__ */ _(f1, {})),
    readOnly: Ae = !1,
    renderGroup: Ce,
    renderInput: ae,
    renderOption: Pe,
    renderTags: ke,
    selectOnFocus: pt = !h.freeSolo,
    size: _e = "medium",
    slotProps: dt = {}
  } = h, ge = le(h, T9), {
    getRootProps: ve,
    getInputProps: qe,
    getInputLabelProps: vt,
    getPopupIndicatorProps: yt,
    getClearProps: Mt,
    getTagProps: bt,
    getListboxProps: wt,
    getOptionProps: we,
    value: Re,
    dirty: at,
    expanded: Ke,
    id: lt,
    popupOpen: et,
    focused: rt,
    focusedTag: je,
    anchorEl: nt,
    setAnchorEl: ht,
    inputValue: $t,
    groupedOptions: Lt
  } = i8(y({}, h, {
    componentName: "Autocomplete"
  })), Jt = !B && !F && at && !Ae, qt = (!Z || te === !0) && te !== !1, {
    onMouseDown: en
  } = qe(), {
    ref: Nn
  } = Ue ?? {}, nn = wt(), {
    ref: Yn
  } = nn, Po = le(nn, x9), Do = cn(Yn, Nn), Bo = oe || ((Te) => {
    var it;
    return (it = Te.label) != null ? it : Te;
  }), Ln = y({}, h, {
    disablePortal: Q,
    expanded: Ke,
    focused: rt,
    fullWidth: q,
    getOptionLabel: Bo,
    hasClearIcon: Jt,
    hasPopupIcon: qt,
    inputFocused: je === -1,
    popupOpen: et,
    size: _e
  }), wn = S9(Ln);
  let qn;
  if (xe && Re.length > 0) {
    const Te = (it) => y({
      className: wn.tag,
      disabled: F
    }, bt(it));
    ke ? qn = ke(Re, Te, Ln) : qn = Re.map((it, Tt) => /* @__PURE__ */ _(TL, y({
      label: Bo(it),
      size: _e
    }, Te({
      index: Tt
    }), E)));
  }
  if (se > -1 && Array.isArray(qn)) {
    const Te = qn.length - se;
    !rt && Te > 0 && (qn = qn.splice(0, se), qn.push(/* @__PURE__ */ _("span", {
      className: wn.tag,
      children: X(Te)
    }, qn.length)));
  }
  const ao = Ce || ((Te) => /* @__PURE__ */ st("li", {
    children: [/* @__PURE__ */ _(N9, {
      className: wn.groupLabel,
      ownerState: Ln,
      component: "div",
      children: Te.group
    }), /* @__PURE__ */ _(L9, {
      className: wn.groupUl,
      ownerState: Ln,
      children: Te.children
    })]
  }, Te.key)), zo = Pe || ((Te, it) => /* @__PURE__ */ sN("li", y({}, Te, {
    key: Te.key
  }), Bo(it))), Fo = (Te, it) => {
    const Tt = we({
      option: Te,
      index: it
    });
    return zo(y({}, Tt, {
      className: wn.option
    }), Te, {
      selected: Tt["aria-selected"],
      index: it,
      inputValue: $t
    }, Ln);
  }, Nr = (s = dt.clearIndicator) != null ? s : I.clearIndicator, jo = (u = dt.paper) != null ? u : I.paper, Co = (d = dt.popper) != null ? d : I.popper, Ge = (p = dt.popupIndicator) != null ? p : I.popupIndicator;
  return /* @__PURE__ */ st(k.Fragment, {
    children: [/* @__PURE__ */ _(k9, y({
      ref: a,
      className: fe(wn.root, R),
      ownerState: Ln
    }, ve(ge), {
      children: ae({
        id: lt,
        disabled: F,
        fullWidth: !0,
        size: _e === "small" ? "small" : void 0,
        InputLabelProps: vt(),
        InputProps: y({
          ref: ht,
          className: wn.inputRoot,
          startAdornment: qn,
          onClick: (Te) => {
            Te.target === Te.currentTarget && en(Te);
          }
        }, (Jt || qt) && {
          endAdornment: /* @__PURE__ */ st(w9, {
            className: wn.endAdornment,
            ownerState: Ln,
            children: [Jt ? /* @__PURE__ */ _(R9, y({}, Mt(), {
              "aria-label": N,
              title: N,
              ownerState: Ln
            }, Nr, {
              className: fe(wn.clearIndicator, Nr == null ? void 0 : Nr.className),
              children: $
            })) : null, qt ? /* @__PURE__ */ _(E9, y({}, yt(), {
              disabled: F,
              "aria-label": et ? V : ce,
              title: et ? V : ce,
              ownerState: Ln
            }, Ge, {
              className: fe(wn.popupIndicator, Ge == null ? void 0 : Ge.className),
              children: Ee
            })) : null]
          })
        }),
        inputProps: y({
          className: wn.input,
          disabled: F,
          readOnly: Ae
        }, qe())
      })
    })), nt ? /* @__PURE__ */ _(O9, y({
      as: Ze,
      disablePortal: Q,
      style: {
        width: nt ? nt.clientWidth : null
      },
      ownerState: Ln,
      role: "presentation",
      anchorEl: nt,
      open: et
    }, Co, {
      className: fe(wn.popper, Co == null ? void 0 : Co.className),
      children: /* @__PURE__ */ st(P9, y({
        ownerState: Ln,
        as: Le
      }, jo, {
        className: fe(wn.paper, jo == null ? void 0 : jo.className),
        children: [Oe && Lt.length === 0 ? /* @__PURE__ */ _(D9, {
          className: wn.loading,
          ownerState: Ln,
          children: ue
        }) : null, Lt.length === 0 && !Z && !Oe ? /* @__PURE__ */ _(M9, {
          className: wn.noOptions,
          ownerState: Ln,
          role: "presentation",
          onMouseDown: (Te) => {
            Te.preventDefault();
          },
          children: me
        }) : null, Lt.length > 0 ? /* @__PURE__ */ _($9, y({
          as: ze,
          className: wn.listbox,
          ownerState: Ln
        }, Po, Ue, {
          ref: Do,
          children: Lt.map((Te, it) => ie ? ao({
            key: Te.key,
            group: Te.group,
            children: Te.options.map((Tt, ln) => Fo(Tt, Te.index + ln))
          }) : Fo(Te, it))
        })) : null]
      }))
    })) : null]
  });
});
process.env.NODE_ENV !== "production" && (kL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the portion of the selected suggestion that the user hasn't typed,
   * known as the completion string, appears inline after the input cursor in the textbox.
   * The inline completion string is visually highlighted and has a selected state.
   * @default false
   */
  autoComplete: t.bool,
  /**
   * If `true`, the first option is automatically highlighted.
   * @default false
   */
  autoHighlight: t.bool,
  /**
   * If `true`, the selected option becomes the value of the input
   * when the Autocomplete loses focus unless the user chooses
   * a different option or changes the character string in the input.
   *
   * When using the `freeSolo` mode, the typed value will be the input value
   * if the Autocomplete loses focus without highlighting an option.
   * @default false
   */
  autoSelect: t.bool,
  /**
   * Control if the input should be blurred when an option is selected:
   *
   * - `false` the input is not blurred.
   * - `true` the input is always blurred.
   * - `touch` the input is blurred after a touch event.
   * - `mouse` the input is blurred after a mouse event.
   * @default false
   */
  blurOnSelect: t.oneOfType([t.oneOf(["mouse", "touch"]), t.bool]),
  /**
   * Props applied to the [`Chip`](/material-ui/api/chip/) element.
   */
  ChipProps: t.object,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The icon to display in place of the default clear icon.
   * @default <ClearIcon fontSize="small" />
   */
  clearIcon: t.node,
  /**
   * If `true`, the input's text is cleared on blur if no value is selected.
   *
   * Set it to `true` if you want to help the user enter a new value.
   * Set it to `false` if you want to help the user resume their search.
   * @default !props.freeSolo
   */
  clearOnBlur: t.bool,
  /**
   * If `true`, clear all values when the user presses escape and the popup is closed.
   * @default false
   */
  clearOnEscape: t.bool,
  /**
   * Override the default text for the *clear* icon button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Clear'
   */
  clearText: t.string,
  /**
   * Override the default text for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: t.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  componentsProps: t.shape({
    clearIndicator: t.object,
    paper: t.object,
    popper: t.object,
    popupIndicator: t.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   * @default props.multiple ? [] : null
   */
  defaultValue: Xo(t.any, (e) => e.multiple && e.defaultValue !== void 0 && !Array.isArray(e.defaultValue) ? new Error(["MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.", `However, ${e.defaultValue} was provided.`].join(`
`)) : null),
  /**
   * If `true`, the input can't be cleared.
   * @default false
   */
  disableClearable: t.bool,
  /**
   * If `true`, the popup won't close when a value is selected.
   * @default false
   */
  disableCloseOnSelect: t.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: t.bool,
  /**
   * If `true`, the list box in the popup will not wrap focus.
   * @default false
   */
  disableListWrap: t.bool,
  /**
   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: t.bool,
  /**
   * A function that determines the filtered options to be rendered on search.
   *
   * @default createFilterOptions()
   * @param {Value[]} options The options to render.
   * @param {object} state The state of the component.
   * @returns {Value[]}
   */
  filterOptions: t.func,
  /**
   * If `true`, hide the selected options from the list box.
   * @default false
   */
  filterSelectedOptions: t.bool,
  /**
   * Force the visibility display of the popup icon.
   * @default 'auto'
   */
  forcePopupIcon: t.oneOfType([t.oneOf(["auto"]), t.bool]),
  /**
   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.
   * @default false
   */
  freeSolo: t.bool,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * The label to display when the tags are truncated (`limitTags`).
   *
   * @param {number} more The number of truncated tags.
   * @returns {ReactNode}
   * @default (more) => `+${more}`
   */
  getLimitTagsText: t.func,
  /**
   * Used to determine the disabled state for a given option.
   *
   * @param {Value} option The option to test.
   * @returns {boolean}
   */
  getOptionDisabled: t.func,
  /**
   * Used to determine the key for a given option.
   * This can be useful when the labels of options are not unique (since labels are used as keys by default).
   *
   * @param {Value} option The option to get the key for.
   * @returns {string | number}
   */
  getOptionKey: t.func,
  /**
   * Used to determine the string value for a given option.
   * It's used to fill the input (and the list box options if `renderOption` is not provided).
   *
   * If used in free solo mode, it must accept both the type of the options and a string.
   *
   * @param {Value} option
   * @returns {string}
   * @default (option) => option.label ?? option
   */
  getOptionLabel: t.func,
  /**
   * If provided, the options will be grouped under the returned string.
   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.
   *
   * @param {Value} options The options to group.
   * @returns {string}
   */
  groupBy: t.func,
  /**
   * If `true`, the component handles the "Home" and "End" keys when the popup is open.
   * It should move focus to the first option and last option, respectively.
   * @default !props.freeSolo
   */
  handleHomeEndKeys: t.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide an id it will fall back to a randomly generated one.
   */
  id: t.string,
  /**
   * If `true`, the highlight can move to the input.
   * @default false
   */
  includeInputInList: t.bool,
  /**
   * The input value.
   */
  inputValue: t.string,
  /**
   * Used to determine if the option represents the given value.
   * Uses strict equality by default.
   * ⚠️ Both arguments need to be handled, an option can only match with one value.
   *
   * @param {Value} option The option to test.
   * @param {Value} value The value to test against.
   * @returns {boolean}
   */
  isOptionEqualToValue: t.func,
  /**
   * The maximum number of tags that will be visible when not focused.
   * Set `-1` to disable the limit.
   * @default -1
   */
  limitTags: Ro,
  /**
   * The component used to render the listbox.
   * @default 'ul'
   */
  ListboxComponent: t.elementType,
  /**
   * Props applied to the Listbox element.
   */
  ListboxProps: t.object,
  /**
   * If `true`, the component is in a loading state.
   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).
   * @default false
   */
  loading: t.bool,
  /**
   * Text to display when in a loading state.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Loading…'
   */
  loadingText: t.node,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: t.bool,
  /**
   * Text to display when there are no options.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'No options'
   */
  noOptionsText: t.node,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value|Value[]} value The new value of the component.
   * @param {string} reason One of "createOption", "selectOption", "removeOption", "blur" or "clear".
   * @param {string} [details]
   */
  onChange: t.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} reason Can be: `"toggleInput"`, `"escape"`, `"selectOption"`, `"removeOption"`, `"blur"`.
   */
  onClose: t.func,
  /**
   * Callback fired when the highlight option changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value} option The highlighted option.
   * @param {string} reason Can be: `"keyboard"`, `"auto"`, `"mouse"`, `"touch"`.
   */
  onHighlightChange: t.func,
  /**
   * Callback fired when the input value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} value The new value of the text input.
   * @param {string} reason Can be: `"input"` (user input), `"reset"` (programmatic change), `"clear"`.
   */
  onInputChange: t.func,
  /**
   * @ignore
   */
  onKeyDown: t.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: t.func,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool,
  /**
   * If `true`, the popup will open on input focus.
   * @default false
   */
  openOnFocus: t.bool,
  /**
   * Override the default text for the *open popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Open'
   */
  openText: t.string,
  /**
   * Array of options.
   */
  options: t.array.isRequired,
  /**
   * The component used to render the body of the popup.
   * @default Paper
   */
  PaperComponent: t.elementType,
  /**
   * The component used to position the popup.
   * @default Popper
   */
  PopperComponent: t.elementType,
  /**
   * The icon to display in place of the default popup icon.
   * @default <ArrowDropDownIcon />
   */
  popupIcon: t.node,
  /**
   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.
   * @default false
   */
  readOnly: t.bool,
  /**
   * Render the group.
   *
   * @param {AutocompleteRenderGroupParams} params The group to render.
   * @returns {ReactNode}
   */
  renderGroup: t.func,
  /**
   * Render the input.
   *
   * @param {object} params
   * @returns {ReactNode}
   */
  renderInput: t.func.isRequired,
  /**
   * Render the option, use `getOptionLabel` by default.
   *
   * @param {object} props The props to apply on the li element.
   * @param {Value} option The option to render.
   * @param {object} state The state of each option.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderOption: t.func,
  /**
   * Render the selected value.
   *
   * @param {Value[]} value The `value` provided to the component.
   * @param {function} getTagProps A tag props getter.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderTags: t.func,
  /**
   * If `true`, the input's text is selected on focus.
   * It helps the user clear the selected value.
   * @default !props.freeSolo
   */
  selectOnFocus: t.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["small", "medium"]), t.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: t.shape({
    clearIndicator: t.object,
    paper: t.object,
    popper: t.object,
    popupIndicator: t.object
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The value of the autocomplete.
   *
   * The value must have reference equality with the option in order to be selected.
   * You can customize the equality behavior with the `isOptionEqualToValue` prop.
   */
  value: Xo(t.any, (e) => e.multiple && e.value !== void 0 && !Array.isArray(e.value) ? new Error(["MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.", `However, ${e.value} was provided.`].join(`
`)) : null)
});
const Iue = kL, I9 = Tn(/* @__PURE__ */ _("path", {
  d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
}), "Person");
function A9(e) {
  return We("MuiAvatar", e);
}
const _9 = Ye("MuiAvatar", ["root", "colorDefault", "circular", "rounded", "square", "img", "fallback"]), V9 = _9, B9 = ["alt", "children", "className", "component", "slots", "slotProps", "imgProps", "sizes", "src", "srcSet", "variant"], z9 = (e) => {
  const {
    classes: n,
    variant: a,
    colorDefault: s
  } = e;
  return He({
    root: ["root", a, s && "colorDefault"],
    img: ["img"],
    fallback: ["fallback"]
  }, A9, n);
}, F9 = J("div", {
  name: "MuiAvatar",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[a.variant], a.colorDefault && n.colorDefault];
  }
})(({
  theme: e
}) => ({
  position: "relative",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  flexShrink: 0,
  width: 40,
  height: 40,
  fontFamily: e.typography.fontFamily,
  fontSize: e.typography.pxToRem(20),
  lineHeight: 1,
  borderRadius: "50%",
  overflow: "hidden",
  userSelect: "none",
  variants: [{
    props: {
      variant: "rounded"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius
    }
  }, {
    props: {
      variant: "square"
    },
    style: {
      borderRadius: 0
    }
  }, {
    props: {
      colorDefault: !0
    },
    style: y({
      color: (e.vars || e).palette.background.default
    }, e.vars ? {
      backgroundColor: e.vars.palette.Avatar.defaultBg
    } : y({
      backgroundColor: e.palette.grey[400]
    }, e.applyStyles("dark", {
      backgroundColor: e.palette.grey[600]
    })))
  }]
})), j9 = J("img", {
  name: "MuiAvatar",
  slot: "Img",
  overridesResolver: (e, n) => n.img
})({
  width: "100%",
  height: "100%",
  textAlign: "center",
  // Handle non-square image. The property isn't supported by IE11.
  objectFit: "cover",
  // Hide alt text.
  color: "transparent",
  // Hide the image broken icon, only works on Chrome.
  textIndent: 1e4
}), U9 = J(I9, {
  name: "MuiAvatar",
  slot: "Fallback",
  overridesResolver: (e, n) => n.fallback
})({
  width: "75%",
  height: "75%"
});
function H9({
  crossOrigin: e,
  referrerPolicy: n,
  src: a,
  srcSet: s
}) {
  const [u, d] = k.useState(!1);
  return k.useEffect(() => {
    if (!a && !s)
      return;
    d(!1);
    let p = !0;
    const h = new Image();
    return h.onload = () => {
      p && d("loaded");
    }, h.onerror = () => {
      p && d("error");
    }, h.crossOrigin = e, h.referrerPolicy = n, h.src = a, s && (h.srcset = s), () => {
      p = !1;
    };
  }, [e, n, a, s]), u;
}
const wL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiAvatar"
  }), {
    alt: u,
    children: d,
    className: p,
    component: h = "div",
    slots: g = {},
    slotProps: b = {},
    imgProps: x,
    sizes: S,
    src: E,
    srcSet: R,
    variant: $ = "circular"
  } = s, M = le(s, B9);
  let O = null;
  const N = H9(y({}, x, {
    src: E,
    srcSet: R
  })), V = E || R, I = V && N !== "error", z = y({}, s, {
    colorDefault: !I,
    component: h,
    variant: $
  }), B = z9(z), [P, F] = RT("img", {
    className: B.img,
    elementType: j9,
    externalForwardedProps: {
      slots: g,
      slotProps: {
        img: y({}, x, b.img)
      }
    },
    additionalProps: {
      alt: u,
      src: E,
      srcSet: R,
      sizes: S
    },
    ownerState: z
  });
  return I ? O = /* @__PURE__ */ _(P, y({}, F)) : d || d === 0 ? O = d : V && u ? O = u[0] : O = /* @__PURE__ */ _(U9, {
    ownerState: z,
    className: B.fallback
  }), /* @__PURE__ */ _(F9, y({
    as: h,
    ownerState: z,
    className: fe(B.root, p),
    ref: a
  }, M, {
    children: O
  }));
});
process.env.NODE_ENV !== "production" && (wL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Used in combination with `src` or `srcSet` to
   * provide an alt attribute for the rendered `img` element.
   */
  alt: t.string,
  /**
   * Used to render icon or text elements inside the Avatar if `src` is not set.
   * This can be an element, or just a string.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.
   * It can be used to listen for the loading error event.
   * @deprecated Use `slotProps.img` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   */
  imgProps: t.object,
  /**
   * The `sizes` attribute for the `img` element.
   */
  sizes: t.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: t.shape({
    img: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: t.shape({
    img: t.elementType
  }),
  /**
   * The `src` attribute for the `img` element.
   */
  src: t.string,
  /**
   * The `srcSet` attribute for the `img` element.
   * Use this attribute for responsive image display.
   */
  srcSet: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The shape of the avatar.
   * @default 'circular'
   */
  variant: t.oneOfType([t.oneOf(["circular", "rounded", "square"]), t.string])
});
const W9 = wL;
function Y9(e) {
  return We("MuiAvatarGroup", e);
}
const q9 = Ye("MuiAvatarGroup", ["root", "avatar"]), G9 = q9, K9 = ["children", "className", "component", "componentsProps", "max", "renderSurplus", "slotProps", "spacing", "total", "variant"], sM = {
  small: -16,
  medium: null
}, Q9 = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"],
    avatar: ["avatar"]
  }, Y9, n);
}, X9 = J("div", {
  name: "MuiAvatarGroup",
  slot: "Root",
  overridesResolver: (e, n) => y({
    [`& .${G9.avatar}`]: n.avatar
  }, n.root)
})(({
  theme: e,
  ownerState: n
}) => {
  const a = n.spacing && sM[n.spacing] !== void 0 ? sM[n.spacing] : -n.spacing;
  return {
    [`& .${V9.root}`]: {
      border: `2px solid ${(e.vars || e).palette.background.default}`,
      boxSizing: "content-box",
      marginLeft: a ?? -8,
      "&:last-child": {
        marginLeft: 0
      }
    },
    display: "flex",
    flexDirection: "row-reverse"
  };
}), RL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s;
  const u = Ie({
    props: n,
    name: "MuiAvatarGroup"
  }), {
    children: d,
    className: p,
    component: h = "div",
    componentsProps: g = {},
    max: b = 5,
    renderSurplus: x,
    slotProps: S = {},
    spacing: E = "medium",
    total: R,
    variant: $ = "circular"
  } = u, M = le(u, K9);
  let O = b < 2 ? 2 : b;
  const N = y({}, u, {
    max: b,
    spacing: E,
    component: h,
    variant: $
  }), V = Q9(N), I = k.Children.toArray(d).filter((U) => (process.env.NODE_ENV !== "production" && as.isFragment(U) && console.error(["MUI: The AvatarGroup component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), /* @__PURE__ */ k.isValidElement(U))), z = R || I.length;
  z === O && (O += 1), O = Math.min(z + 1, O);
  const B = Math.min(I.length, O - 1), P = Math.max(z - O, z - B, 0), F = x ? x(P) : `+${P}`, H = (s = S.additionalAvatar) != null ? s : g.additionalAvatar;
  return /* @__PURE__ */ st(X9, y({
    as: h,
    ownerState: N,
    className: fe(V.root, p),
    ref: a
  }, M, {
    children: [P ? /* @__PURE__ */ _(W9, y({
      variant: $
    }, H, {
      className: fe(V.avatar, H == null ? void 0 : H.className),
      children: F
    })) : null, I.slice(0, B).reverse().map((U) => /* @__PURE__ */ k.cloneElement(U, {
      className: fe(U.props.className, V.avatar),
      variant: U.props.variant || $
    }))]
  }));
});
process.env.NODE_ENV !== "production" && (RL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The avatars to stack.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: t.shape({
    additionalAvatar: t.object
  }),
  /**
   * Max avatars to show before +x.
   * @default 5
   */
  max: Xo(t.number, (e) => e.max < 2 ? new Error(["MUI: The prop `max` should be equal to 2 or above.", "A value below is clamped to 2."].join(`
`)) : null),
  /**
   * custom renderer of extraAvatars
   * @param {number} surplus number of extra avatars
   * @returns {React.ReactNode} custom element to display
   */
  renderSurplus: t.func,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: t.shape({
    additionalAvatar: t.object
  }),
  /**
   * Spacing between avatars.
   * @default 'medium'
   */
  spacing: t.oneOfType([t.oneOf(["medium", "small"]), t.number]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The total number of avatars. Used for calculating the number of extra avatars.
   * @default children.length
   */
  total: t.number,
  /**
   * The variant to use.
   * @default 'circular'
   */
  variant: t.oneOfType([t.oneOf(["circular", "rounded", "square"]), t.string])
});
const Aue = RL, Z9 = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"], J9 = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, EL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = En(), u = {
    enter: s.transitions.duration.enteringScreen,
    exit: s.transitions.duration.leavingScreen
  }, {
    addEndListener: d,
    appear: p = !0,
    children: h,
    easing: g,
    in: b,
    onEnter: x,
    onEntered: S,
    onEntering: E,
    onExit: R,
    onExited: $,
    onExiting: M,
    style: O,
    timeout: N = u,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: V = Dd
  } = n, I = le(n, Z9), z = k.useRef(null), B = cn(z, h.ref, a), P = (q) => (X) => {
    if (q) {
      const oe = z.current;
      X === void 0 ? q(oe) : q(oe, X);
    }
  }, F = P(E), H = P((q, X) => {
    YT(q);
    const oe = os({
      style: O,
      timeout: N,
      easing: g
    }, {
      mode: "enter"
    });
    q.style.webkitTransition = s.transitions.create("opacity", oe), q.style.transition = s.transitions.create("opacity", oe), x && x(q, X);
  }), U = P(S), Q = P(M), Y = P((q) => {
    const X = os({
      style: O,
      timeout: N,
      easing: g
    }, {
      mode: "exit"
    });
    q.style.webkitTransition = s.transitions.create("opacity", X), q.style.transition = s.transitions.create("opacity", X), R && R(q);
  }), te = P($);
  return /* @__PURE__ */ _(V, y({
    appear: p,
    in: b,
    nodeRef: z,
    onEnter: H,
    onEntered: U,
    onEntering: F,
    onExit: Y,
    onExited: te,
    onExiting: Q,
    addEndListener: (q) => {
      d && d(z.current, q);
    },
    timeout: N
  }, I, {
    children: (q, X) => /* @__PURE__ */ k.cloneElement(h, y({
      style: y({
        opacity: 0,
        visibility: q === "exited" && !b ? "hidden" : void 0
      }, J9[q], O, h.props.style),
      ref: B
    }, X))
  }));
});
process.env.NODE_ENV !== "production" && (EL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: t.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: t.bool,
  /**
   * A single child content element.
   */
  children: su.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: t.oneOfType([t.shape({
    enter: t.string,
    exit: t.string
  }), t.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: t.bool,
  /**
   * @ignore
   */
  onEnter: t.func,
  /**
   * @ignore
   */
  onEntered: t.func,
  /**
   * @ignore
   */
  onEntering: t.func,
  /**
   * @ignore
   */
  onExit: t.func,
  /**
   * @ignore
   */
  onExited: t.func,
  /**
   * @ignore
   */
  onExiting: t.func,
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: t.oneOfType([t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })])
});
const em = EL;
function eY(e) {
  return We("MuiBackdrop", e);
}
const tY = Ye("MuiBackdrop", ["root", "invisible"]), _ue = tY, nY = ["children", "className", "component", "components", "componentsProps", "invisible", "open", "slotProps", "slots", "TransitionComponent", "transitionDuration"], oY = (e) => {
  const {
    classes: n,
    invisible: a
  } = e;
  return He({
    root: ["root", a && "invisible"]
  }, eY, n);
}, rY = J("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.invisible && n.invisible];
  }
})(({
  ownerState: e
}) => y({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent"
}, e.invisible && {
  backgroundColor: "transparent"
})), OL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d;
  const p = Ie({
    props: n,
    name: "MuiBackdrop"
  }), {
    children: h,
    className: g,
    component: b = "div",
    components: x = {},
    componentsProps: S = {},
    invisible: E = !1,
    open: R,
    slotProps: $ = {},
    slots: M = {},
    TransitionComponent: O = em,
    transitionDuration: N
  } = p, V = le(p, nY), I = y({}, p, {
    component: b,
    invisible: E
  }), z = oY(I), B = (s = $.root) != null ? s : S.root;
  return /* @__PURE__ */ _(O, y({
    in: R,
    timeout: N
  }, V, {
    children: /* @__PURE__ */ _(rY, y({
      "aria-hidden": !0
    }, B, {
      as: (u = (d = M.root) != null ? d : x.Root) != null ? u : b,
      className: fe(z.root, g, B == null ? void 0 : B.className),
      ownerState: y({}, I, B == null ? void 0 : B.ownerState),
      classes: z,
      ref: a,
      children: h
    }))
  }));
});
process.env.NODE_ENV !== "production" && (OL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    Root: t.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: t.shape({
    root: t.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: t.bool,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool.isRequired,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: t.shape({
    root: t.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: t.shape({
    root: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   */
  TransitionComponent: t.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: t.oneOfType([t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })])
});
const PL = OL;
function aY(e) {
  return Ie;
}
function iY(e) {
  return We("MuiBadge", e);
}
const sY = Ye("MuiBadge", [
  "root",
  "badge",
  "dot",
  "standard",
  "anchorOriginTopRight",
  "anchorOriginBottomRight",
  "anchorOriginTopLeft",
  "anchorOriginBottomLeft",
  "invisible",
  "colorError",
  "colorInfo",
  "colorPrimary",
  "colorSecondary",
  "colorSuccess",
  "colorWarning",
  "overlapRectangular",
  "overlapCircular",
  // TODO: v6 remove the overlap value from these class keys
  "anchorOriginTopLeftCircular",
  "anchorOriginTopLeftRectangular",
  "anchorOriginTopRightCircular",
  "anchorOriginTopRightRectangular",
  "anchorOriginBottomLeftCircular",
  "anchorOriginBottomLeftRectangular",
  "anchorOriginBottomRightCircular",
  "anchorOriginBottomRightRectangular"
]), Gc = sY, lY = ["anchorOrigin", "className", "classes", "component", "components", "componentsProps", "children", "overlap", "color", "invisible", "max", "badgeContent", "slots", "slotProps", "showZero", "variant"], nw = 10, ow = 4, cY = aY(), uY = (e) => {
  const {
    color: n,
    anchorOrigin: a,
    invisible: s,
    overlap: u,
    variant: d,
    classes: p = {}
  } = e, h = {
    root: ["root"],
    badge: ["badge", d, s && "invisible", `anchorOrigin${pe(a.vertical)}${pe(a.horizontal)}`, `anchorOrigin${pe(a.vertical)}${pe(a.horizontal)}${pe(u)}`, `overlap${pe(u)}`, n !== "default" && `color${pe(n)}`]
  };
  return He(h, iY, p);
}, dY = J("span", {
  name: "MuiBadge",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({
  position: "relative",
  display: "inline-flex",
  // For correct alignment with the text.
  verticalAlign: "middle",
  flexShrink: 0
}), pY = J("span", {
  name: "MuiBadge",
  slot: "Badge",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.badge, n[a.variant], n[`anchorOrigin${pe(a.anchorOrigin.vertical)}${pe(a.anchorOrigin.horizontal)}${pe(a.overlap)}`], a.color !== "default" && n[`color${pe(a.color)}`], a.invisible && n.invisible];
  }
})(({
  theme: e
}) => {
  var n;
  return {
    display: "flex",
    flexDirection: "row",
    flexWrap: "wrap",
    justifyContent: "center",
    alignContent: "center",
    alignItems: "center",
    position: "absolute",
    boxSizing: "border-box",
    fontFamily: e.typography.fontFamily,
    fontWeight: e.typography.fontWeightMedium,
    fontSize: e.typography.pxToRem(12),
    minWidth: nw * 2,
    lineHeight: 1,
    padding: "0 6px",
    height: nw * 2,
    borderRadius: nw,
    zIndex: 1,
    // Render the badge on top of potential ripples.
    transition: e.transitions.create("transform", {
      easing: e.transitions.easing.easeInOut,
      duration: e.transitions.duration.enteringScreen
    }),
    variants: [...Object.keys(((n = e.vars) != null ? n : e).palette).filter((a) => {
      var s, u;
      return ((s = e.vars) != null ? s : e).palette[a].main && ((u = e.vars) != null ? u : e).palette[a].contrastText;
    }).map((a) => ({
      props: {
        color: a
      },
      style: {
        backgroundColor: (e.vars || e).palette[a].main,
        color: (e.vars || e).palette[a].contrastText
      }
    })), {
      props: {
        variant: "dot"
      },
      style: {
        borderRadius: ow,
        height: ow * 2,
        minWidth: ow * 2,
        padding: 0
      }
    }, {
      props: ({
        ownerState: a
      }) => a.anchorOrigin.vertical === "top" && a.anchorOrigin.horizontal === "right" && a.overlap === "rectangular",
      style: {
        top: 0,
        right: 0,
        transform: "scale(1) translate(50%, -50%)",
        transformOrigin: "100% 0%",
        [`&.${Gc.invisible}`]: {
          transform: "scale(0) translate(50%, -50%)"
        }
      }
    }, {
      props: ({
        ownerState: a
      }) => a.anchorOrigin.vertical === "bottom" && a.anchorOrigin.horizontal === "right" && a.overlap === "rectangular",
      style: {
        bottom: 0,
        right: 0,
        transform: "scale(1) translate(50%, 50%)",
        transformOrigin: "100% 100%",
        [`&.${Gc.invisible}`]: {
          transform: "scale(0) translate(50%, 50%)"
        }
      }
    }, {
      props: ({
        ownerState: a
      }) => a.anchorOrigin.vertical === "top" && a.anchorOrigin.horizontal === "left" && a.overlap === "rectangular",
      style: {
        top: 0,
        left: 0,
        transform: "scale(1) translate(-50%, -50%)",
        transformOrigin: "0% 0%",
        [`&.${Gc.invisible}`]: {
          transform: "scale(0) translate(-50%, -50%)"
        }
      }
    }, {
      props: ({
        ownerState: a
      }) => a.anchorOrigin.vertical === "bottom" && a.anchorOrigin.horizontal === "left" && a.overlap === "rectangular",
      style: {
        bottom: 0,
        left: 0,
        transform: "scale(1) translate(-50%, 50%)",
        transformOrigin: "0% 100%",
        [`&.${Gc.invisible}`]: {
          transform: "scale(0) translate(-50%, 50%)"
        }
      }
    }, {
      props: ({
        ownerState: a
      }) => a.anchorOrigin.vertical === "top" && a.anchorOrigin.horizontal === "right" && a.overlap === "circular",
      style: {
        top: "14%",
        right: "14%",
        transform: "scale(1) translate(50%, -50%)",
        transformOrigin: "100% 0%",
        [`&.${Gc.invisible}`]: {
          transform: "scale(0) translate(50%, -50%)"
        }
      }
    }, {
      props: ({
        ownerState: a
      }) => a.anchorOrigin.vertical === "bottom" && a.anchorOrigin.horizontal === "right" && a.overlap === "circular",
      style: {
        bottom: "14%",
        right: "14%",
        transform: "scale(1) translate(50%, 50%)",
        transformOrigin: "100% 100%",
        [`&.${Gc.invisible}`]: {
          transform: "scale(0) translate(50%, 50%)"
        }
      }
    }, {
      props: ({
        ownerState: a
      }) => a.anchorOrigin.vertical === "top" && a.anchorOrigin.horizontal === "left" && a.overlap === "circular",
      style: {
        top: "14%",
        left: "14%",
        transform: "scale(1) translate(-50%, -50%)",
        transformOrigin: "0% 0%",
        [`&.${Gc.invisible}`]: {
          transform: "scale(0) translate(-50%, -50%)"
        }
      }
    }, {
      props: ({
        ownerState: a
      }) => a.anchorOrigin.vertical === "bottom" && a.anchorOrigin.horizontal === "left" && a.overlap === "circular",
      style: {
        bottom: "14%",
        left: "14%",
        transform: "scale(1) translate(-50%, 50%)",
        transformOrigin: "0% 100%",
        [`&.${Gc.invisible}`]: {
          transform: "scale(0) translate(-50%, 50%)"
        }
      }
    }, {
      props: {
        invisible: !0
      },
      style: {
        transition: e.transitions.create("transform", {
          easing: e.transitions.easing.easeInOut,
          duration: e.transitions.duration.leavingScreen
        })
      }
    }]
  };
}), DL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d, p, h, g;
  const b = cY({
    props: n,
    name: "MuiBadge"
  }), {
    anchorOrigin: x = {
      vertical: "top",
      horizontal: "right"
    },
    className: S,
    component: E,
    components: R = {},
    componentsProps: $ = {},
    children: M,
    overlap: O = "rectangular",
    color: N = "default",
    invisible: V = !1,
    max: I = 99,
    badgeContent: z,
    slots: B,
    slotProps: P,
    showZero: F = !1,
    variant: H = "standard"
  } = b, U = le(b, lY), {
    badgeContent: Q,
    invisible: Y,
    max: te,
    displayValue: Z
  } = d3({
    max: I,
    invisible: V,
    badgeContent: z,
    showZero: F
  }), q = jw({
    anchorOrigin: x,
    color: N,
    overlap: O,
    variant: H,
    badgeContent: z
  }), X = Y || Q == null && H !== "dot", {
    color: oe = N,
    overlap: ie = O,
    anchorOrigin: K = x,
    variant: ne = H
  } = X ? q : b, se = ne !== "dot" ? Z : void 0, ze = y({}, b, {
    badgeContent: Q,
    invisible: X,
    max: te,
    displayValue: se,
    showZero: F,
    anchorOrigin: K,
    color: oe,
    overlap: ie,
    variant: ne
  }), Ue = uY(ze), Oe = (s = (u = B == null ? void 0 : B.root) != null ? u : R.Root) != null ? s : dY, ue = (d = (p = B == null ? void 0 : B.badge) != null ? p : R.Badge) != null ? d : pY, xe = (h = P == null ? void 0 : P.root) != null ? h : $.root, me = (g = P == null ? void 0 : P.badge) != null ? g : $.badge, Se = rn({
    elementType: Oe,
    externalSlotProps: xe,
    externalForwardedProps: U,
    additionalProps: {
      ref: a,
      as: E
    },
    ownerState: ze,
    className: fe(xe == null ? void 0 : xe.className, Ue.root, S)
  }), ce = rn({
    elementType: ue,
    externalSlotProps: me,
    ownerState: ze,
    className: fe(Ue.badge, me == null ? void 0 : me.className)
  });
  return /* @__PURE__ */ st(Oe, y({}, Se, {
    children: [M, /* @__PURE__ */ _(ue, y({}, ce, {
      children: se
    }))]
  }));
});
process.env.NODE_ENV !== "production" && (DL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The anchor of the badge.
   * @default {
   *   vertical: 'top',
   *   horizontal: 'right',
   * }
   */
  anchorOrigin: t.shape({
    horizontal: t.oneOf(["left", "right"]).isRequired,
    vertical: t.oneOf(["bottom", "top"]).isRequired
  }),
  /**
   * The content rendered within the badge.
   */
  badgeContent: t.node,
  /**
   * The badge will be added relative to this node.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: t.oneOfType([t.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    Badge: t.elementType,
    Root: t.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: t.shape({
    badge: t.oneOfType([t.func, t.object]),
    root: t.oneOfType([t.func, t.object])
  }),
  /**
   * If `true`, the badge is invisible.
   * @default false
   */
  invisible: t.bool,
  /**
   * Max count to show.
   * @default 99
   */
  max: t.number,
  /**
   * Wrapped shape the badge should overlap.
   * @default 'rectangular'
   */
  overlap: t.oneOf(["circular", "rectangular"]),
  /**
   * Controls whether the badge is hidden when `badgeContent` is zero.
   * @default false
   */
  showZero: t.bool,
  /**
   * The props used for each slot inside the Badge.
   * @default {}
   */
  slotProps: t.shape({
    badge: t.oneOfType([t.func, t.object]),
    root: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside the Badge.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: t.shape({
    badge: t.elementType,
    root: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: t.oneOfType([t.oneOf(["dot", "standard"]), t.string])
});
const Vue = DL;
function fY(e) {
  return We("MuiBottomNavigation", e);
}
const mY = Ye("MuiBottomNavigation", ["root"]), Bue = mY, hY = ["children", "className", "component", "onChange", "showLabels", "value"], vY = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"]
  }, fY, n);
}, gY = J("div", {
  name: "MuiBottomNavigation",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(({
  theme: e
}) => ({
  display: "flex",
  justifyContent: "center",
  height: 56,
  backgroundColor: (e.vars || e).palette.background.paper
})), ML = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiBottomNavigation"
  }), {
    children: u,
    className: d,
    component: p = "div",
    onChange: h,
    showLabels: g = !1,
    value: b
  } = s, x = le(s, hY), S = y({}, s, {
    component: p,
    showLabels: g
  }), E = vY(S);
  return /* @__PURE__ */ _(gY, y({
    as: p,
    className: fe(E.root, d),
    ref: a,
    ownerState: S
  }, x, {
    children: k.Children.map(u, (R, $) => {
      if (!/* @__PURE__ */ k.isValidElement(R))
        return null;
      process.env.NODE_ENV !== "production" && as.isFragment(R) && console.error(["MUI: The BottomNavigation component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
      const M = R.props.value === void 0 ? $ : R.props.value;
      return /* @__PURE__ */ k.cloneElement(R, {
        selected: M === b,
        showLabel: R.props.showLabel !== void 0 ? R.props.showLabel : g,
        value: M,
        onChange: h
      });
    })
  }));
});
process.env.NODE_ENV !== "production" && (ML.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {any} value We default to the index of the child.
   */
  onChange: t.func,
  /**
   * If `true`, all `BottomNavigationAction`s will show their labels.
   * By default, only the selected `BottomNavigationAction` will show its label.
   * @default false
   */
  showLabels: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The value of the currently selected `BottomNavigationAction`.
   */
  value: t.any
});
const zue = ML;
function bY(e) {
  return We("MuiBottomNavigationAction", e);
}
const yY = Ye("MuiBottomNavigationAction", ["root", "iconOnly", "selected", "label"]), $L = yY, CY = ["className", "icon", "label", "onChange", "onClick", "selected", "showLabel", "value"], TY = (e) => {
  const {
    classes: n,
    showLabel: a,
    selected: s
  } = e;
  return He({
    root: ["root", !a && !s && "iconOnly", s && "selected"],
    label: ["label", !a && !s && "iconOnly", s && "selected"]
  }, bY, n);
}, xY = J(Zo, {
  name: "MuiBottomNavigationAction",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, !a.showLabel && !a.selected && n.iconOnly];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  transition: e.transitions.create(["color", "padding-top"], {
    duration: e.transitions.duration.short
  }),
  padding: "0px 12px",
  minWidth: 80,
  maxWidth: 168,
  color: (e.vars || e).palette.text.secondary,
  flexDirection: "column",
  flex: "1"
}, !n.showLabel && !n.selected && {
  paddingTop: 14
}, !n.showLabel && !n.selected && !n.label && {
  paddingTop: 0
}, {
  [`&.${$L.selected}`]: {
    color: (e.vars || e).palette.primary.main
  }
})), SY = J("span", {
  name: "MuiBottomNavigationAction",
  slot: "Label",
  overridesResolver: (e, n) => n.label
})(({
  theme: e,
  ownerState: n
}) => y({
  fontFamily: e.typography.fontFamily,
  fontSize: e.typography.pxToRem(12),
  opacity: 1,
  transition: "font-size 0.2s, opacity 0.2s",
  transitionDelay: "0.1s"
}, !n.showLabel && !n.selected && {
  opacity: 0,
  transitionDelay: "0s"
}, {
  [`&.${$L.selected}`]: {
    fontSize: e.typography.pxToRem(14)
  }
})), NL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiBottomNavigationAction"
  }), {
    className: u,
    icon: d,
    label: p,
    onChange: h,
    onClick: g,
    value: b
  } = s, x = le(s, CY), S = s, E = TY(S), R = ($) => {
    h && h($, b), g && g($);
  };
  return /* @__PURE__ */ st(xY, y({
    ref: a,
    className: fe(E.root, u),
    focusRipple: !0,
    onClick: R,
    ownerState: S
  }, x, {
    children: [d, /* @__PURE__ */ _(SY, {
      className: E.label,
      ownerState: S,
      children: p
    })]
  }));
});
process.env.NODE_ENV !== "production" && (NL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: UT,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The icon to display.
   */
  icon: t.node,
  /**
   * The label element.
   */
  label: t.node,
  /**
   * @ignore
   */
  onChange: t.func,
  /**
   * @ignore
   */
  onClick: t.func,
  /**
   * If `true`, the `BottomNavigationAction` will show its label.
   * By default, only the selected `BottomNavigationAction`
   * inside `BottomNavigation` will show its label.
   *
   * The prop defaults to the value (`false`) inherited from the parent BottomNavigation component.
   */
  showLabel: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * You can provide your own value. Otherwise, we fallback to the child position index.
   */
  value: t.any
});
const Fue = NL, kY = Tn(/* @__PURE__ */ _("path", {
  d: "M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
}), "MoreHoriz"), wY = ["slots", "slotProps"], RY = J(Zo)(({
  theme: e
}) => y({
  display: "flex",
  marginLeft: `calc(${e.spacing(1)} * 0.5)`,
  marginRight: `calc(${e.spacing(1)} * 0.5)`
}, e.palette.mode === "light" ? {
  backgroundColor: e.palette.grey[100],
  color: e.palette.grey[700]
} : {
  backgroundColor: e.palette.grey[700],
  color: e.palette.grey[100]
}, {
  borderRadius: 2,
  "&:hover, &:focus": y({}, e.palette.mode === "light" ? {
    backgroundColor: e.palette.grey[200]
  } : {
    backgroundColor: e.palette.grey[600]
  }),
  "&:active": y({
    boxShadow: e.shadows[0]
  }, e.palette.mode === "light" ? {
    backgroundColor: gT(e.palette.grey[200], 0.12)
  } : {
    backgroundColor: gT(e.palette.grey[600], 0.12)
  })
})), EY = J(kY)({
  width: 24,
  height: 16
});
function LL(e) {
  const {
    slots: n = {},
    slotProps: a = {}
  } = e, s = le(e, wY), u = e;
  return /* @__PURE__ */ _("li", {
    children: /* @__PURE__ */ _(RY, y({
      focusRipple: !0
    }, s, {
      ownerState: u,
      children: /* @__PURE__ */ _(EY, y({
        as: n.CollapsedIcon,
        ownerState: u
      }, a.collapsedIcon))
    }))
  });
}
process.env.NODE_ENV !== "production" && (LL.propTypes = {
  /**
   * The props used for the CollapsedIcon slot.
   * @default {}
   */
  slotProps: t.shape({
    collapsedIcon: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside the BreadcumbCollapsed.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: t.shape({
    CollapsedIcon: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.object
});
function OY(e) {
  return We("MuiBreadcrumbs", e);
}
const PY = Ye("MuiBreadcrumbs", ["root", "ol", "li", "separator"]), DY = PY, MY = ["children", "className", "component", "slots", "slotProps", "expandText", "itemsAfterCollapse", "itemsBeforeCollapse", "maxItems", "separator"], $Y = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"],
    li: ["li"],
    ol: ["ol"],
    separator: ["separator"]
  }, OY, n);
}, NY = J(vo, {
  name: "MuiBreadcrumbs",
  slot: "Root",
  overridesResolver: (e, n) => [{
    [`& .${DY.li}`]: n.li
  }, n.root]
})({}), LY = J("ol", {
  name: "MuiBreadcrumbs",
  slot: "Ol",
  overridesResolver: (e, n) => n.ol
})({
  display: "flex",
  flexWrap: "wrap",
  alignItems: "center",
  padding: 0,
  margin: 0,
  listStyle: "none"
}), IY = J("li", {
  name: "MuiBreadcrumbs",
  slot: "Separator",
  overridesResolver: (e, n) => n.separator
})({
  display: "flex",
  userSelect: "none",
  marginLeft: 8,
  marginRight: 8
});
function AY(e, n, a, s) {
  return e.reduce((u, d, p) => (p < e.length - 1 ? u = u.concat(d, /* @__PURE__ */ _(IY, {
    "aria-hidden": !0,
    className: n,
    ownerState: s,
    children: a
  }, `separator-${p}`)) : u.push(d), u), []);
}
const IL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiBreadcrumbs"
  }), {
    children: u,
    className: d,
    component: p = "nav",
    slots: h = {},
    slotProps: g = {},
    expandText: b = "Show path",
    itemsAfterCollapse: x = 1,
    itemsBeforeCollapse: S = 1,
    maxItems: E = 8,
    separator: R = "/"
  } = s, $ = le(s, MY), [M, O] = k.useState(!1), N = y({}, s, {
    component: p,
    expanded: M,
    expandText: b,
    itemsAfterCollapse: x,
    itemsBeforeCollapse: S,
    maxItems: E,
    separator: R
  }), V = $Y(N), I = rn({
    elementType: h.CollapsedIcon,
    externalSlotProps: g.collapsedIcon,
    ownerState: N
  }), z = k.useRef(null), B = (F) => {
    const H = () => {
      O(!0);
      const U = z.current.querySelector("a[href],button,[tabindex]");
      U && U.focus();
    };
    return S + x >= F.length ? (process.env.NODE_ENV !== "production" && console.error(["MUI: You have provided an invalid combination of props to the Breadcrumbs.", `itemsAfterCollapse={${x}} + itemsBeforeCollapse={${S}} >= maxItems={${E}}`].join(`
`)), F) : [...F.slice(0, S), /* @__PURE__ */ _(LL, {
      "aria-label": b,
      slots: {
        CollapsedIcon: h.CollapsedIcon
      },
      slotProps: {
        collapsedIcon: I
      },
      onClick: H
    }, "ellipsis"), ...F.slice(F.length - x, F.length)];
  }, P = k.Children.toArray(u).filter((F) => (process.env.NODE_ENV !== "production" && as.isFragment(F) && console.error(["MUI: The Breadcrumbs component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), /* @__PURE__ */ k.isValidElement(F))).map((F, H) => /* @__PURE__ */ _("li", {
    className: V.li,
    children: F
  }, `child-${H}`));
  return /* @__PURE__ */ _(NY, y({
    ref: a,
    component: p,
    color: "text.secondary",
    className: fe(V.root, d),
    ownerState: N
  }, $, {
    children: /* @__PURE__ */ _(LY, {
      className: V.ol,
      ref: z,
      ownerState: N,
      children: AY(M || E && P.length <= E ? P : B(P), V.separator, R, N)
    })
  }));
});
process.env.NODE_ENV !== "production" && (IL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Override the default label for the expand button.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Show path'
   */
  expandText: t.string,
  /**
   * If max items is exceeded, the number of items to show after the ellipsis.
   * @default 1
   */
  itemsAfterCollapse: Ro,
  /**
   * If max items is exceeded, the number of items to show before the ellipsis.
   * @default 1
   */
  itemsBeforeCollapse: Ro,
  /**
   * Specifies the maximum number of breadcrumbs to display. When there are more
   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`
   * will be shown, with an ellipsis in between.
   * @default 8
   */
  maxItems: Ro,
  /**
   * Custom separator node.
   * @default '/'
   */
  separator: t.node,
  /**
   * The props used for each slot inside the Breadcumb.
   * @default {}
   */
  slotProps: t.shape({
    collapsedIcon: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside the Breadcumb.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: t.shape({
    CollapsedIcon: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const jue = IL;
function _Y(e) {
  return We("MuiButton", e);
}
const VY = Ye("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge"]), ZC = VY, AL = /* @__PURE__ */ k.createContext({});
process.env.NODE_ENV !== "production" && (AL.displayName = "ButtonGroupContext");
const _L = AL, VL = /* @__PURE__ */ k.createContext(void 0);
process.env.NODE_ENV !== "production" && (VL.displayName = "ButtonGroupButtonContext");
const BL = VL, BY = ["children", "color", "component", "className", "disabled", "disableElevation", "disableFocusRipple", "endIcon", "focusVisibleClassName", "fullWidth", "size", "startIcon", "type", "variant"], zY = (e) => {
  const {
    color: n,
    disableElevation: a,
    fullWidth: s,
    size: u,
    variant: d,
    classes: p
  } = e, h = {
    root: ["root", d, `${d}${pe(n)}`, `size${pe(u)}`, `${d}Size${pe(u)}`, n === "inherit" && "colorInherit", a && "disableElevation", s && "fullWidth"],
    label: ["label"],
    startIcon: ["startIcon", `iconSize${pe(u)}`],
    endIcon: ["endIcon", `iconSize${pe(u)}`]
  }, g = He(h, _Y, p);
  return y({}, p, g);
}, zL = (e) => y({}, e.size === "small" && {
  "& > *:nth-of-type(1)": {
    fontSize: 18
  }
}, e.size === "medium" && {
  "& > *:nth-of-type(1)": {
    fontSize: 20
  }
}, e.size === "large" && {
  "& > *:nth-of-type(1)": {
    fontSize: 22
  }
}), FY = J(Zo, {
  shouldForwardProp: (e) => Vo(e) || e === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[a.variant], n[`${a.variant}${pe(a.color)}`], n[`size${pe(a.size)}`], n[`${a.variant}Size${pe(a.size)}`], a.color === "inherit" && n.colorInherit, a.disableElevation && n.disableElevation, a.fullWidth && n.fullWidth];
  }
})(({
  theme: e,
  ownerState: n
}) => {
  var a, s;
  const u = e.palette.mode === "light" ? e.palette.grey[300] : e.palette.grey[800], d = e.palette.mode === "light" ? e.palette.grey.A100 : e.palette.grey[700];
  return y({}, e.typography.button, {
    minWidth: 64,
    padding: "6px 16px",
    borderRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: e.transitions.duration.short
    }),
    "&:hover": y({
      textDecoration: "none",
      backgroundColor: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette.text.primary, e.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, n.variant === "text" && n.color !== "inherit" && {
      backgroundColor: e.vars ? `rgba(${e.vars.palette[n.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette[n.color].main, e.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, n.variant === "outlined" && n.color !== "inherit" && {
      border: `1px solid ${(e.vars || e).palette[n.color].main}`,
      backgroundColor: e.vars ? `rgba(${e.vars.palette[n.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette[n.color].main, e.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, n.variant === "contained" && {
      backgroundColor: e.vars ? e.vars.palette.Button.inheritContainedHoverBg : d,
      boxShadow: (e.vars || e).shadows[4],
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        boxShadow: (e.vars || e).shadows[2],
        backgroundColor: (e.vars || e).palette.grey[300]
      }
    }, n.variant === "contained" && n.color !== "inherit" && {
      backgroundColor: (e.vars || e).palette[n.color].dark,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (e.vars || e).palette[n.color].main
      }
    }),
    "&:active": y({}, n.variant === "contained" && {
      boxShadow: (e.vars || e).shadows[8]
    }),
    [`&.${ZC.focusVisible}`]: y({}, n.variant === "contained" && {
      boxShadow: (e.vars || e).shadows[6]
    }),
    [`&.${ZC.disabled}`]: y({
      color: (e.vars || e).palette.action.disabled
    }, n.variant === "outlined" && {
      border: `1px solid ${(e.vars || e).palette.action.disabledBackground}`
    }, n.variant === "contained" && {
      color: (e.vars || e).palette.action.disabled,
      boxShadow: (e.vars || e).shadows[0],
      backgroundColor: (e.vars || e).palette.action.disabledBackground
    })
  }, n.variant === "text" && {
    padding: "6px 8px"
  }, n.variant === "text" && n.color !== "inherit" && {
    color: (e.vars || e).palette[n.color].main
  }, n.variant === "outlined" && {
    padding: "5px 15px",
    border: "1px solid currentColor"
  }, n.variant === "outlined" && n.color !== "inherit" && {
    color: (e.vars || e).palette[n.color].main,
    border: e.vars ? `1px solid rgba(${e.vars.palette[n.color].mainChannel} / 0.5)` : `1px solid ${Yt(e.palette[n.color].main, 0.5)}`
  }, n.variant === "contained" && {
    color: e.vars ? (
      // this is safe because grey does not change between default light/dark mode
      e.vars.palette.text.primary
    ) : (a = (s = e.palette).getContrastText) == null ? void 0 : a.call(s, e.palette.grey[300]),
    backgroundColor: e.vars ? e.vars.palette.Button.inheritContainedBg : u,
    boxShadow: (e.vars || e).shadows[2]
  }, n.variant === "contained" && n.color !== "inherit" && {
    color: (e.vars || e).palette[n.color].contrastText,
    backgroundColor: (e.vars || e).palette[n.color].main
  }, n.color === "inherit" && {
    color: "inherit",
    borderColor: "currentColor"
  }, n.size === "small" && n.variant === "text" && {
    padding: "4px 5px",
    fontSize: e.typography.pxToRem(13)
  }, n.size === "large" && n.variant === "text" && {
    padding: "8px 11px",
    fontSize: e.typography.pxToRem(15)
  }, n.size === "small" && n.variant === "outlined" && {
    padding: "3px 9px",
    fontSize: e.typography.pxToRem(13)
  }, n.size === "large" && n.variant === "outlined" && {
    padding: "7px 21px",
    fontSize: e.typography.pxToRem(15)
  }, n.size === "small" && n.variant === "contained" && {
    padding: "4px 10px",
    fontSize: e.typography.pxToRem(13)
  }, n.size === "large" && n.variant === "contained" && {
    padding: "8px 22px",
    fontSize: e.typography.pxToRem(15)
  }, n.fullWidth && {
    width: "100%"
  });
}, ({
  ownerState: e
}) => e.disableElevation && {
  boxShadow: "none",
  "&:hover": {
    boxShadow: "none"
  },
  [`&.${ZC.focusVisible}`]: {
    boxShadow: "none"
  },
  "&:active": {
    boxShadow: "none"
  },
  [`&.${ZC.disabled}`]: {
    boxShadow: "none"
  }
}), jY = J("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.startIcon, n[`iconSize${pe(a.size)}`]];
  }
})(({
  ownerState: e
}) => y({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4
}, e.size === "small" && {
  marginLeft: -2
}, zL(e))), UY = J("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.endIcon, n[`iconSize${pe(a.size)}`]];
  }
})(({
  ownerState: e
}) => y({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8
}, e.size === "small" && {
  marginRight: -2
}, zL(e))), FL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = k.useContext(_L), u = k.useContext(BL), d = jT(s, n), p = Ie({
    props: d,
    name: "MuiButton"
  }), {
    children: h,
    color: g = "primary",
    component: b = "button",
    className: x,
    disabled: S = !1,
    disableElevation: E = !1,
    disableFocusRipple: R = !1,
    endIcon: $,
    focusVisibleClassName: M,
    fullWidth: O = !1,
    size: N = "medium",
    startIcon: V,
    type: I,
    variant: z = "text"
  } = p, B = le(p, BY), P = y({}, p, {
    color: g,
    component: b,
    disabled: S,
    disableElevation: E,
    disableFocusRipple: R,
    fullWidth: O,
    size: N,
    type: I,
    variant: z
  }), F = zY(P), H = V && /* @__PURE__ */ _(jY, {
    className: F.startIcon,
    ownerState: P,
    children: V
  }), U = $ && /* @__PURE__ */ _(UY, {
    className: F.endIcon,
    ownerState: P,
    children: $
  }), Q = u || "";
  return /* @__PURE__ */ st(FY, y({
    ownerState: P,
    className: fe(s.className, F.root, x, Q),
    component: b,
    disabled: S,
    focusRipple: !R,
    focusVisibleClassName: fe(F.focusVisible, M),
    ref: a,
    type: I
  }, B, {
    classes: F,
    children: [H, h, U]
  }));
});
process.env.NODE_ENV !== "production" && (FL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: t.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: t.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: t.bool,
  /**
   * Element placed after the children.
   */
  endIcon: t.node,
  /**
   * @ignore
   */
  focusVisibleClassName: t.string,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: t.string,
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["small", "medium", "large"]), t.string]),
  /**
   * Element placed before the children.
   */
  startIcon: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * @ignore
   */
  type: t.oneOfType([t.oneOf(["button", "reset", "submit"]), t.string]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: t.oneOfType([t.oneOf(["contained", "outlined", "text"]), t.string])
});
const jv = FL;
function HY(e) {
  return We("MuiButtonGroup", e);
}
const WY = Ye("MuiButtonGroup", ["root", "contained", "outlined", "text", "disableElevation", "disabled", "firstButton", "fullWidth", "vertical", "grouped", "groupedHorizontal", "groupedVertical", "groupedText", "groupedTextHorizontal", "groupedTextVertical", "groupedTextPrimary", "groupedTextSecondary", "groupedOutlined", "groupedOutlinedHorizontal", "groupedOutlinedVertical", "groupedOutlinedPrimary", "groupedOutlinedSecondary", "groupedContained", "groupedContainedHorizontal", "groupedContainedVertical", "groupedContainedPrimary", "groupedContainedSecondary", "lastButton", "middleButton"]), $r = WY, YY = ["children", "className", "color", "component", "disabled", "disableElevation", "disableFocusRipple", "disableRipple", "fullWidth", "orientation", "size", "variant"], qY = (e, n) => {
  const {
    ownerState: a
  } = e;
  return [{
    [`& .${$r.grouped}`]: n.grouped
  }, {
    [`& .${$r.grouped}`]: n[`grouped${pe(a.orientation)}`]
  }, {
    [`& .${$r.grouped}`]: n[`grouped${pe(a.variant)}`]
  }, {
    [`& .${$r.grouped}`]: n[`grouped${pe(a.variant)}${pe(a.orientation)}`]
  }, {
    [`& .${$r.grouped}`]: n[`grouped${pe(a.variant)}${pe(a.color)}`]
  }, {
    [`& .${$r.firstButton}`]: n.firstButton
  }, {
    [`& .${$r.lastButton}`]: n.lastButton
  }, {
    [`& .${$r.middleButton}`]: n.middleButton
  }, n.root, n[a.variant], a.disableElevation === !0 && n.disableElevation, a.fullWidth && n.fullWidth, a.orientation === "vertical" && n.vertical];
}, GY = (e) => {
  const {
    classes: n,
    color: a,
    disabled: s,
    disableElevation: u,
    fullWidth: d,
    orientation: p,
    variant: h
  } = e, g = {
    root: ["root", h, p === "vertical" && "vertical", d && "fullWidth", u && "disableElevation"],
    grouped: ["grouped", `grouped${pe(p)}`, `grouped${pe(h)}`, `grouped${pe(h)}${pe(p)}`, `grouped${pe(h)}${pe(a)}`, s && "disabled"],
    firstButton: ["firstButton"],
    lastButton: ["lastButton"],
    middleButton: ["middleButton"]
  };
  return He(g, HY, n);
}, KY = J("div", {
  name: "MuiButtonGroup",
  slot: "Root",
  overridesResolver: qY
})(({
  theme: e,
  ownerState: n
}) => y({
  display: "inline-flex",
  borderRadius: (e.vars || e).shape.borderRadius
}, n.variant === "contained" && {
  boxShadow: (e.vars || e).shadows[2]
}, n.disableElevation && {
  boxShadow: "none"
}, n.fullWidth && {
  width: "100%"
}, n.orientation === "vertical" && {
  flexDirection: "column"
}, {
  [`& .${$r.grouped}`]: y({
    minWidth: 40,
    "&:hover": y({}, n.variant === "contained" && {
      boxShadow: "none"
    })
  }, n.variant === "contained" && {
    boxShadow: "none"
  }),
  [`& .${$r.firstButton},& .${$r.middleButton}`]: y({}, n.orientation === "horizontal" && {
    borderTopRightRadius: 0,
    borderBottomRightRadius: 0
  }, n.orientation === "vertical" && {
    borderBottomRightRadius: 0,
    borderBottomLeftRadius: 0
  }, n.variant === "text" && n.orientation === "horizontal" && {
    borderRight: e.vars ? `1px solid rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"}`,
    [`&.${$r.disabled}`]: {
      borderRight: `1px solid ${(e.vars || e).palette.action.disabled}`
    }
  }, n.variant === "text" && n.orientation === "vertical" && {
    borderBottom: e.vars ? `1px solid rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"}`,
    [`&.${$r.disabled}`]: {
      borderBottom: `1px solid ${(e.vars || e).palette.action.disabled}`
    }
  }, n.variant === "text" && n.color !== "inherit" && {
    borderColor: e.vars ? `rgba(${e.vars.palette[n.color].mainChannel} / 0.5)` : Yt(e.palette[n.color].main, 0.5)
  }, n.variant === "outlined" && n.orientation === "horizontal" && {
    borderRightColor: "transparent"
  }, n.variant === "outlined" && n.orientation === "vertical" && {
    borderBottomColor: "transparent"
  }, n.variant === "contained" && n.orientation === "horizontal" && {
    borderRight: `1px solid ${(e.vars || e).palette.grey[400]}`,
    [`&.${$r.disabled}`]: {
      borderRight: `1px solid ${(e.vars || e).palette.action.disabled}`
    }
  }, n.variant === "contained" && n.orientation === "vertical" && {
    borderBottom: `1px solid ${(e.vars || e).palette.grey[400]}`,
    [`&.${$r.disabled}`]: {
      borderBottom: `1px solid ${(e.vars || e).palette.action.disabled}`
    }
  }, n.variant === "contained" && n.color !== "inherit" && {
    borderColor: (e.vars || e).palette[n.color].dark
  }, {
    "&:hover": y({}, n.variant === "outlined" && n.orientation === "horizontal" && {
      borderRightColor: "currentColor"
    }, n.variant === "outlined" && n.orientation === "vertical" && {
      borderBottomColor: "currentColor"
    })
  }),
  [`& .${$r.lastButton},& .${$r.middleButton}`]: y({}, n.orientation === "horizontal" && {
    borderTopLeftRadius: 0,
    borderBottomLeftRadius: 0
  }, n.orientation === "vertical" && {
    borderTopRightRadius: 0,
    borderTopLeftRadius: 0
  }, n.variant === "outlined" && n.orientation === "horizontal" && {
    marginLeft: -1
  }, n.variant === "outlined" && n.orientation === "vertical" && {
    marginTop: -1
  })
})), jL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiButtonGroup"
  }), {
    children: u,
    className: d,
    color: p = "primary",
    component: h = "div",
    disabled: g = !1,
    disableElevation: b = !1,
    disableFocusRipple: x = !1,
    disableRipple: S = !1,
    fullWidth: E = !1,
    orientation: R = "horizontal",
    size: $ = "medium",
    variant: M = "outlined"
  } = s, O = le(s, YY), N = y({}, s, {
    color: p,
    component: h,
    disabled: g,
    disableElevation: b,
    disableFocusRipple: x,
    disableRipple: S,
    fullWidth: E,
    orientation: R,
    size: $,
    variant: M
  }), V = GY(N), I = k.useMemo(() => ({
    className: V.grouped,
    color: p,
    disabled: g,
    disableElevation: b,
    disableFocusRipple: x,
    disableRipple: S,
    fullWidth: E,
    size: $,
    variant: M
  }), [p, g, b, x, S, E, $, M, V.grouped]), z = yN(u), B = z.length, P = (F) => {
    const H = F === 0, U = F === B - 1;
    return H && U ? "" : H ? V.firstButton : U ? V.lastButton : V.middleButton;
  };
  return /* @__PURE__ */ _(KY, y({
    as: h,
    role: "group",
    className: fe(V.root, d),
    ref: a,
    ownerState: N
  }, O, {
    children: /* @__PURE__ */ _(_L.Provider, {
      value: I,
      children: z.map((F, H) => /* @__PURE__ */ _(BL.Provider, {
        value: P(H),
        children: F
      }, H))
    })
  }));
});
process.env.NODE_ENV !== "production" && (jL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: t.bool,
  /**
   * If `true`, the button keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: t.bool,
  /**
   * If `true`, the button ripple effect is disabled.
   * @default false
   */
  disableRipple: t.bool,
  /**
   * If `true`, the buttons will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: t.oneOf(["horizontal", "vertical"]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["small", "medium", "large"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: t.oneOfType([t.oneOf(["contained", "outlined", "text"]), t.string])
});
const Uue = jL;
function QY(e) {
  return We("MuiCard", e);
}
const XY = Ye("MuiCard", ["root"]), Hue = XY, ZY = ["className", "raised"], JY = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"]
  }, QY, n);
}, e7 = J(ni, {
  name: "MuiCard",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(() => ({
  overflow: "hidden"
})), UL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiCard"
  }), {
    className: u,
    raised: d = !1
  } = s, p = le(s, ZY), h = y({}, s, {
    raised: d
  }), g = JY(h);
  return /* @__PURE__ */ _(e7, y({
    className: fe(g.root, u),
    elevation: d ? 8 : void 0,
    ref: a,
    ownerState: h
  }, p));
});
process.env.NODE_ENV !== "production" && (UL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, the card will use raised styling.
   * @default false
   */
  raised: Xo(t.bool, (e) => e.raised && e.variant === "outlined" ? new Error('MUI: Combining `raised={true}` with `variant="outlined"` has no effect.') : null),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Wue = UL;
function t7(e) {
  return We("MuiCardActionArea", e);
}
const n7 = Ye("MuiCardActionArea", ["root", "focusVisible", "focusHighlight"]), rw = n7, o7 = ["children", "className", "focusVisibleClassName"], r7 = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"],
    focusHighlight: ["focusHighlight"]
  }, t7, n);
}, a7 = J(Zo, {
  name: "MuiCardActionArea",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(({
  theme: e
}) => ({
  display: "block",
  textAlign: "inherit",
  borderRadius: "inherit",
  // for Safari to work https://github.com/mui/material-ui/issues/36285.
  width: "100%",
  [`&:hover .${rw.focusHighlight}`]: {
    opacity: (e.vars || e).palette.action.hoverOpacity,
    "@media (hover: none)": {
      opacity: 0
    }
  },
  [`&.${rw.focusVisible} .${rw.focusHighlight}`]: {
    opacity: (e.vars || e).palette.action.focusOpacity
  }
})), i7 = J("span", {
  name: "MuiCardActionArea",
  slot: "FocusHighlight",
  overridesResolver: (e, n) => n.focusHighlight
})(({
  theme: e
}) => ({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit",
  opacity: 0,
  backgroundColor: "currentcolor",
  transition: e.transitions.create("opacity", {
    duration: e.transitions.duration.short
  })
})), HL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiCardActionArea"
  }), {
    children: u,
    className: d,
    focusVisibleClassName: p
  } = s, h = le(s, o7), g = s, b = r7(g);
  return /* @__PURE__ */ st(a7, y({
    className: fe(b.root, d),
    focusVisibleClassName: fe(p, b.focusVisible),
    ref: a,
    ownerState: g
  }, h, {
    children: [u, /* @__PURE__ */ _(i7, {
      className: b.focusHighlight,
      ownerState: g
    })]
  }));
});
process.env.NODE_ENV !== "production" && (HL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * @ignore
   */
  focusVisibleClassName: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Yue = HL;
function s7(e) {
  return We("MuiCardActions", e);
}
const l7 = Ye("MuiCardActions", ["root", "spacing"]), que = l7, c7 = ["disableSpacing", "className"], u7 = (e) => {
  const {
    classes: n,
    disableSpacing: a
  } = e;
  return He({
    root: ["root", !a && "spacing"]
  }, s7, n);
}, d7 = J("div", {
  name: "MuiCardActions",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, !a.disableSpacing && n.spacing];
  }
})(({
  ownerState: e
}) => y({
  display: "flex",
  alignItems: "center",
  padding: 8
}, !e.disableSpacing && {
  "& > :not(style) ~ :not(style)": {
    marginLeft: 8
  }
})), WL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiCardActions"
  }), {
    disableSpacing: u = !1,
    className: d
  } = s, p = le(s, c7), h = y({}, s, {
    disableSpacing: u
  }), g = u7(h);
  return /* @__PURE__ */ _(d7, y({
    className: fe(g.root, d),
    ownerState: h,
    ref: a
  }, p));
});
process.env.NODE_ENV !== "production" && (WL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Gue = WL;
function p7(e) {
  return We("MuiCardContent", e);
}
const f7 = Ye("MuiCardContent", ["root"]), Kue = f7, m7 = ["className", "component"], h7 = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"]
  }, p7, n);
}, v7 = J("div", {
  name: "MuiCardContent",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(() => ({
  padding: 16,
  "&:last-child": {
    paddingBottom: 24
  }
})), YL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiCardContent"
  }), {
    className: u,
    component: d = "div"
  } = s, p = le(s, m7), h = y({}, s, {
    component: d
  }), g = h7(h);
  return /* @__PURE__ */ _(v7, y({
    as: d,
    className: fe(g.root, u),
    ownerState: h,
    ref: a
  }, p));
});
process.env.NODE_ENV !== "production" && (YL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Que = YL;
function g7(e) {
  return We("MuiCardHeader", e);
}
const b7 = Ye("MuiCardHeader", ["root", "avatar", "action", "content", "title", "subheader"]), lM = b7, y7 = ["action", "avatar", "className", "component", "disableTypography", "subheader", "subheaderTypographyProps", "title", "titleTypographyProps"], C7 = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"],
    avatar: ["avatar"],
    action: ["action"],
    content: ["content"],
    title: ["title"],
    subheader: ["subheader"]
  }, g7, n);
}, T7 = J("div", {
  name: "MuiCardHeader",
  slot: "Root",
  overridesResolver: (e, n) => y({
    [`& .${lM.title}`]: n.title,
    [`& .${lM.subheader}`]: n.subheader
  }, n.root)
})({
  display: "flex",
  alignItems: "center",
  padding: 16
}), x7 = J("div", {
  name: "MuiCardHeader",
  slot: "Avatar",
  overridesResolver: (e, n) => n.avatar
})({
  display: "flex",
  flex: "0 0 auto",
  marginRight: 16
}), S7 = J("div", {
  name: "MuiCardHeader",
  slot: "Action",
  overridesResolver: (e, n) => n.action
})({
  flex: "0 0 auto",
  alignSelf: "flex-start",
  marginTop: -4,
  marginRight: -8,
  marginBottom: -4
}), k7 = J("div", {
  name: "MuiCardHeader",
  slot: "Content",
  overridesResolver: (e, n) => n.content
})({
  flex: "1 1 auto"
}), qL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiCardHeader"
  }), {
    action: u,
    avatar: d,
    className: p,
    component: h = "div",
    disableTypography: g = !1,
    subheader: b,
    subheaderTypographyProps: x,
    title: S,
    titleTypographyProps: E
  } = s, R = le(s, y7), $ = y({}, s, {
    component: h,
    disableTypography: g
  }), M = C7($);
  let O = S;
  O != null && O.type !== vo && !g && (O = /* @__PURE__ */ _(vo, y({
    variant: d ? "body2" : "h5",
    className: M.title,
    component: "span",
    display: "block"
  }, E, {
    children: O
  })));
  let N = b;
  return N != null && N.type !== vo && !g && (N = /* @__PURE__ */ _(vo, y({
    variant: d ? "body2" : "body1",
    className: M.subheader,
    color: "text.secondary",
    component: "span",
    display: "block"
  }, x, {
    children: N
  }))), /* @__PURE__ */ st(T7, y({
    className: fe(M.root, p),
    as: h,
    ref: a,
    ownerState: $
  }, R, {
    children: [d && /* @__PURE__ */ _(x7, {
      className: M.avatar,
      ownerState: $,
      children: d
    }), /* @__PURE__ */ st(k7, {
      className: M.content,
      ownerState: $,
      children: [O, N]
    }), u && /* @__PURE__ */ _(S7, {
      className: M.action,
      ownerState: $,
      children: u
    })]
  }));
});
process.env.NODE_ENV !== "production" && (qL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The action to display in the card header.
   */
  action: t.node,
  /**
   * The Avatar element to display.
   */
  avatar: t.node,
  /**
   * @ignore
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.
   * This can be useful to render an alternative Typography variant by wrapping
   * the `title` text, and optional `subheader` text
   * with the Typography component.
   * @default false
   */
  disableTypography: t.bool,
  /**
   * The content of the component.
   */
  subheader: t.node,
  /**
   * These props will be forwarded to the subheader
   * (as long as disableTypography is not `true`).
   */
  subheaderTypographyProps: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The content of the component.
   */
  title: t.node,
  /**
   * These props will be forwarded to the title
   * (as long as disableTypography is not `true`).
   */
  titleTypographyProps: t.object
});
const Xue = qL;
function w7(e) {
  return We("MuiCardMedia", e);
}
const R7 = Ye("MuiCardMedia", ["root", "media", "img"]), Zue = R7, E7 = ["children", "className", "component", "image", "src", "style"], O7 = (e) => {
  const {
    classes: n,
    isMediaComponent: a,
    isImageComponent: s
  } = e;
  return He({
    root: ["root", a && "media", s && "img"]
  }, w7, n);
}, P7 = J("div", {
  name: "MuiCardMedia",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e, {
      isMediaComponent: s,
      isImageComponent: u
    } = a;
    return [n.root, s && n.media, u && n.img];
  }
})(({
  ownerState: e
}) => y({
  display: "block",
  backgroundSize: "cover",
  backgroundRepeat: "no-repeat",
  backgroundPosition: "center"
}, e.isMediaComponent && {
  width: "100%"
}, e.isImageComponent && {
  // ⚠️ object-fit is not supported by IE11.
  objectFit: "cover"
})), D7 = ["video", "audio", "picture", "iframe", "img"], M7 = ["picture", "img"], GL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiCardMedia"
  }), {
    children: u,
    className: d,
    component: p = "div",
    image: h,
    src: g,
    style: b
  } = s, x = le(s, E7), S = D7.indexOf(p) !== -1, E = !S && h ? y({
    backgroundImage: `url("${h}")`
  }, b) : b, R = y({}, s, {
    component: p,
    isMediaComponent: S,
    isImageComponent: M7.indexOf(p) !== -1
  }), $ = O7(R);
  return /* @__PURE__ */ _(P7, y({
    className: fe($.root, d),
    as: p,
    role: !S && h ? "img" : void 0,
    ref: a,
    style: E,
    ownerState: R,
    src: S ? h || g : void 0
  }, x, {
    children: u
  }));
});
process.env.NODE_ENV !== "production" && (GL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: Xo(t.node, (e) => !e.children && !e.image && !e.src && !e.component ? new Error("MUI: Either `children`, `image`, `src` or `component` prop must be specified.") : null),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Image to be displayed as a background image.
   * Either `image` or `src` prop must be specified.
   * Note that caller must specify height otherwise the image will not be visible.
   */
  image: t.string,
  /**
   * An alias for `image` property.
   * Available only with media components.
   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.
   */
  src: t.string,
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Jue = GL;
function $7(e) {
  return We("PrivateSwitchBase", e);
}
Ye("PrivateSwitchBase", ["root", "checked", "disabled", "input", "edgeStart", "edgeEnd"]);
const N7 = ["autoFocus", "checked", "checkedIcon", "className", "defaultChecked", "disabled", "disableFocusRipple", "edge", "icon", "id", "inputProps", "inputRef", "name", "onBlur", "onChange", "onFocus", "readOnly", "required", "tabIndex", "type", "value"], L7 = (e) => {
  const {
    classes: n,
    checked: a,
    disabled: s,
    edge: u
  } = e, d = {
    root: ["root", a && "checked", s && "disabled", u && `edge${pe(u)}`],
    input: ["input"]
  };
  return He(d, $7, n);
}, I7 = J(Zo)(({
  ownerState: e
}) => y({
  padding: 9,
  borderRadius: "50%"
}, e.edge === "start" && {
  marginLeft: e.size === "small" ? -3 : -12
}, e.edge === "end" && {
  marginRight: e.size === "small" ? -3 : -12
})), A7 = J("input", {
  shouldForwardProp: Vo
})({
  cursor: "inherit",
  position: "absolute",
  opacity: 0,
  width: "100%",
  height: "100%",
  top: 0,
  left: 0,
  margin: 0,
  padding: 0,
  zIndex: 1
}), KL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const {
    autoFocus: s,
    checked: u,
    checkedIcon: d,
    className: p,
    defaultChecked: h,
    disabled: g,
    disableFocusRipple: b = !1,
    edge: x = !1,
    icon: S,
    id: E,
    inputProps: R,
    inputRef: $,
    name: M,
    onBlur: O,
    onChange: N,
    onFocus: V,
    readOnly: I,
    required: z = !1,
    tabIndex: B,
    type: P,
    value: F
  } = n, H = le(n, N7), [U, Q] = Eo({
    controlled: u,
    default: !!h,
    name: "SwitchBase",
    state: "checked"
  }), Y = is(), te = (ne) => {
    V && V(ne), Y && Y.onFocus && Y.onFocus(ne);
  }, Z = (ne) => {
    O && O(ne), Y && Y.onBlur && Y.onBlur(ne);
  }, q = (ne) => {
    if (ne.nativeEvent.defaultPrevented)
      return;
    const se = ne.target.checked;
    Q(se), N && N(ne, se);
  };
  let X = g;
  Y && typeof X > "u" && (X = Y.disabled);
  const oe = P === "checkbox" || P === "radio", ie = y({}, n, {
    checked: U,
    disabled: X,
    disableFocusRipple: b,
    edge: x
  }), K = L7(ie);
  return /* @__PURE__ */ st(I7, y({
    component: "span",
    className: fe(K.root, p),
    centerRipple: !0,
    focusRipple: !b,
    disabled: X,
    tabIndex: null,
    role: void 0,
    onFocus: te,
    onBlur: Z,
    ownerState: ie,
    ref: a
  }, H, {
    children: [/* @__PURE__ */ _(A7, y({
      autoFocus: s,
      checked: u,
      defaultChecked: h,
      className: K.input,
      disabled: X,
      id: oe ? E : void 0,
      name: M,
      onChange: q,
      readOnly: I,
      ref: $,
      required: z,
      ownerState: ie,
      tabIndex: B,
      type: P
    }, P === "checkbox" && F === void 0 ? {} : {
      value: F
    }, R)), U ? d : S]
  }));
});
process.env.NODE_ENV !== "production" && (KL.propTypes = {
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: t.bool,
  /**
   * If `true`, the component is checked.
   */
  checked: t.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: t.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * @ignore
   */
  defaultChecked: t.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: t.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: t.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: t.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: t.node.isRequired,
  /**
   * The id of the `input` element.
   */
  id: t.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /*
   * @ignore
   */
  name: t.string,
  /**
   * @ignore
   */
  onBlur: t.func,
  /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: t.func,
  /**
   * @ignore
   */
  onFocus: t.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: t.bool,
  /**
   * If `true`, the `input` element is required.
   */
  required: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.object,
  /**
   * @ignore
   */
  tabIndex: t.oneOfType([t.number, t.string]),
  /**
   * The input component prop `type`.
   */
  type: t.string.isRequired,
  /**
   * The value of the component.
   */
  value: t.any
});
const m1 = KL, _7 = Tn(/* @__PURE__ */ _("path", {
  d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
}), "CheckBoxOutlineBlank"), V7 = Tn(/* @__PURE__ */ _("path", {
  d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckBox"), B7 = Tn(/* @__PURE__ */ _("path", {
  d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
}), "IndeterminateCheckBox");
function z7(e) {
  return We("MuiCheckbox", e);
}
const F7 = Ye("MuiCheckbox", ["root", "checked", "disabled", "indeterminate", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium"]), aw = F7, j7 = ["checkedIcon", "color", "icon", "indeterminate", "indeterminateIcon", "inputProps", "size", "className"], U7 = (e) => {
  const {
    classes: n,
    indeterminate: a,
    color: s,
    size: u
  } = e, d = {
    root: ["root", a && "indeterminate", `color${pe(s)}`, `size${pe(u)}`]
  }, p = He(d, z7, n);
  return y({}, n, p);
}, H7 = J(m1, {
  shouldForwardProp: (e) => Vo(e) || e === "classes",
  name: "MuiCheckbox",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.indeterminate && n.indeterminate, n[`size${pe(a.size)}`], a.color !== "default" && n[`color${pe(a.color)}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  color: (e.vars || e).palette.text.secondary
}, !n.disableRipple && {
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${n.color === "default" ? e.vars.palette.action.activeChannel : e.vars.palette[n.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(n.color === "default" ? e.palette.action.active : e.palette[n.color].main, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  }
}, n.color !== "default" && {
  [`&.${aw.checked}, &.${aw.indeterminate}`]: {
    color: (e.vars || e).palette[n.color].main
  },
  [`&.${aw.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  }
})), W7 = /* @__PURE__ */ _(V7, {}), Y7 = /* @__PURE__ */ _(_7, {}), q7 = /* @__PURE__ */ _(B7, {}), QL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u;
  const d = Ie({
    props: n,
    name: "MuiCheckbox"
  }), {
    checkedIcon: p = W7,
    color: h = "primary",
    icon: g = Y7,
    indeterminate: b = !1,
    indeterminateIcon: x = q7,
    inputProps: S,
    size: E = "medium",
    className: R
  } = d, $ = le(d, j7), M = b ? x : g, O = b ? x : p, N = y({}, d, {
    color: h,
    indeterminate: b,
    size: E
  }), V = U7(N);
  return /* @__PURE__ */ _(H7, y({
    type: "checkbox",
    inputProps: y({
      "data-indeterminate": b
    }, S),
    icon: /* @__PURE__ */ k.cloneElement(M, {
      fontSize: (s = M.props.fontSize) != null ? s : E
    }),
    checkedIcon: /* @__PURE__ */ k.cloneElement(O, {
      fontSize: (u = O.props.fontSize) != null ? u : E
    }),
    ownerState: N,
    ref: a,
    className: fe(V.root, R)
  }, $, {
    classes: V
  }));
});
process.env.NODE_ENV !== "production" && (QL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: t.bool,
  /**
   * The icon to display when the component is checked.
   * @default <CheckBoxIcon />
   */
  checkedIcon: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: t.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: t.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <CheckBoxOutlineBlankIcon />
   */
  icon: t.node,
  /**
   * The id of the `input` element.
   */
  id: t.string,
  /**
   * If `true`, the component appears indeterminate.
   * This does not set the native input element to indeterminate due
   * to inconsistent behavior across browsers.
   * However, we set a `data-indeterminate` attribute on the `input`.
   * @default false
   */
  indeterminate: t.bool,
  /**
   * The icon to display when the component is indeterminate.
   * @default <IndeterminateCheckBoxIcon />
   */
  indeterminateIcon: t.node,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: t.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: t.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense checkbox styling.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["medium", "small"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: t.any
});
const ede = QL;
function G7(e) {
  return We("MuiCircularProgress", e);
}
const K7 = Ye("MuiCircularProgress", ["root", "determinate", "indeterminate", "colorPrimary", "colorSecondary", "svg", "circle", "circleDeterminate", "circleIndeterminate", "circleDisableShrink"]), tde = K7, Q7 = ["className", "color", "disableShrink", "size", "style", "thickness", "value", "variant"];
let nx = (e) => e, cM, uM, dM, pM;
const Kc = 44, X7 = rs(cM || (cM = nx`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`)), Z7 = rs(uM || (uM = nx`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -125px;
  }
`)), J7 = (e) => {
  const {
    classes: n,
    variant: a,
    color: s,
    disableShrink: u
  } = e, d = {
    root: ["root", a, `color${pe(s)}`],
    svg: ["svg"],
    circle: ["circle", `circle${pe(a)}`, u && "circleDisableShrink"]
  };
  return He(d, G7, n);
}, eq = J("span", {
  name: "MuiCircularProgress",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[a.variant], n[`color${pe(a.color)}`]];
  }
})(({
  ownerState: e,
  theme: n
}) => y({
  display: "inline-block"
}, e.variant === "determinate" && {
  transition: n.transitions.create("transform")
}, e.color !== "inherit" && {
  color: (n.vars || n).palette[e.color].main
}), ({
  ownerState: e
}) => e.variant === "indeterminate" && au(dM || (dM = nx`
      animation: ${0} 1.4s linear infinite;
    `), X7)), tq = J("svg", {
  name: "MuiCircularProgress",
  slot: "Svg",
  overridesResolver: (e, n) => n.svg
})({
  display: "block"
  // Keeps the progress centered
}), nq = J("circle", {
  name: "MuiCircularProgress",
  slot: "Circle",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.circle, n[`circle${pe(a.variant)}`], a.disableShrink && n.circleDisableShrink];
  }
})(({
  ownerState: e,
  theme: n
}) => y({
  stroke: "currentColor"
}, e.variant === "determinate" && {
  transition: n.transitions.create("stroke-dashoffset")
}, e.variant === "indeterminate" && {
  // Some default value that looks fine waiting for the animation to kicks in.
  strokeDasharray: "80px, 200px",
  strokeDashoffset: 0
  // Add the unit to fix a Edge 16 and below bug.
}), ({
  ownerState: e
}) => e.variant === "indeterminate" && !e.disableShrink && au(pM || (pM = nx`
      animation: ${0} 1.4s ease-in-out infinite;
    `), Z7)), XL = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiCircularProgress"
  }), {
    className: u,
    color: d = "primary",
    disableShrink: p = !1,
    size: h = 40,
    style: g,
    thickness: b = 3.6,
    value: x = 0,
    variant: S = "indeterminate"
  } = s, E = le(s, Q7), R = y({}, s, {
    color: d,
    disableShrink: p,
    size: h,
    thickness: b,
    value: x,
    variant: S
  }), $ = J7(R), M = {}, O = {}, N = {};
  if (S === "determinate") {
    const V = 2 * Math.PI * ((Kc - b) / 2);
    M.strokeDasharray = V.toFixed(3), N["aria-valuenow"] = Math.round(x), M.strokeDashoffset = `${((100 - x) / 100 * V).toFixed(3)}px`, O.transform = "rotate(-90deg)";
  }
  return /* @__PURE__ */ _(eq, y({
    className: fe($.root, u),
    style: y({
      width: h,
      height: h
    }, O, g),
    ownerState: R,
    ref: a,
    role: "progressbar"
  }, N, E, {
    children: /* @__PURE__ */ _(tq, {
      className: $.svg,
      ownerState: R,
      viewBox: `${Kc / 2} ${Kc / 2} ${Kc} ${Kc}`,
      children: /* @__PURE__ */ _(nq, {
        className: $.circle,
        style: M,
        ownerState: R,
        cx: Kc,
        cy: Kc,
        r: (Kc - b) / 2,
        fill: "none",
        strokeWidth: b
      })
    })
  }));
});
process.env.NODE_ENV !== "production" && (XL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * If `true`, the shrink animation is disabled.
   * This only works if variant is `indeterminate`.
   * @default false
   */
  disableShrink: Xo(t.bool, (e) => e.disableShrink && e.variant && e.variant !== "indeterminate" ? new Error("MUI: You have provided the `disableShrink` prop with a variant other than `indeterminate`. This will have no effect.") : null),
  /**
   * The size of the component.
   * If using a number, the pixel unit is assumed.
   * If using a string, you need to provide the CSS unit, e.g. '3rem'.
   * @default 40
   */
  size: t.oneOfType([t.number, t.string]),
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The thickness of the circle.
   * @default 3.6
   */
  thickness: t.number,
  /**
   * The value of the progress indicator for the determinate variant.
   * Value between 0 and 100.
   * @default 0
   */
  value: t.number,
  /**
   * The variant to use.
   * Use indeterminate when there is no progress value.
   * @default 'indeterminate'
   */
  variant: t.oneOf(["determinate", "indeterminate"])
});
const nde = XL, ZL = b4({
  createStyledComponent: J("div", {
    name: "MuiContainer",
    slot: "Root",
    overridesResolver: (e, n) => {
      const {
        ownerState: a
      } = e;
      return [n.root, n[`maxWidth${pe(String(a.maxWidth))}`], a.fixed && n.fixed, a.disableGutters && n.disableGutters];
    }
  }),
  useThemeProps: (e) => Ie({
    props: e,
    name: "MuiContainer"
  })
});
process.env.NODE_ENV !== "production" && (ZL.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: t.bool,
  /**
   * Set the max-width to match the min-width of the current breakpoint.
   * This is useful if you'd prefer to design for a fixed set of sizes
   * instead of trying to accommodate a fully fluid viewport.
   * It's fluid by default.
   * @default false
   */
  fixed: t.bool,
  /**
   * Determine the max-width of the container.
   * The container width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'lg'
   */
  maxWidth: t.oneOfType([t.oneOf(["xs", "sm", "md", "lg", "xl", !1]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const ode = ZL;
function rde(e) {
  return We("MuiContainer", e);
}
const oq = Ye("MuiContainer", ["root", "disableGutters", "fixed", "maxWidthXs", "maxWidthSm", "maxWidthMd", "maxWidthLg", "maxWidthXl"]), ade = oq, JL = (e, n) => y({
  WebkitFontSmoothing: "antialiased",
  // Antialiasing.
  MozOsxFontSmoothing: "grayscale",
  // Antialiasing.
  // Change from `box-sizing: content-box` so that `width`
  // is not affected by `padding` or `border`.
  boxSizing: "border-box",
  // Fix font resize problem in iOS
  WebkitTextSizeAdjust: "100%"
}, n && !e.vars && {
  colorScheme: e.palette.mode
}), eI = (e) => y({
  color: (e.vars || e).palette.text.primary
}, e.typography.body1, {
  backgroundColor: (e.vars || e).palette.background.default,
  "@media print": {
    // Save printer ink.
    backgroundColor: (e.vars || e).palette.common.white
  }
}), rq = (e, n = !1) => {
  var a;
  const s = {};
  n && e.colorSchemes && Object.entries(e.colorSchemes).forEach(([p, h]) => {
    var g;
    s[e.getColorSchemeSelector(p).replace(/\s*&/, "")] = {
      colorScheme: (g = h.palette) == null ? void 0 : g.mode
    };
  });
  let u = y({
    html: JL(e, n),
    "*, *::before, *::after": {
      boxSizing: "inherit"
    },
    "strong, b": {
      fontWeight: e.typography.fontWeightBold
    },
    body: y({
      margin: 0
    }, eI(e), {
      // Add support for document.body.requestFullScreen().
      // Other elements, if background transparent, are not supported.
      "&::backdrop": {
        backgroundColor: (e.vars || e).palette.background.default
      }
    })
  }, s);
  const d = (a = e.components) == null || (a = a.MuiCssBaseline) == null ? void 0 : a.styleOverrides;
  return d && (u = [u, d]), u;
};
function aq(e) {
  const n = Ie({
    props: e,
    name: "MuiCssBaseline"
  }), {
    children: a,
    enableColorScheme: s = !1
  } = n;
  return /* @__PURE__ */ st(k.Fragment, {
    children: [/* @__PURE__ */ _(p1, {
      styles: (u) => rq(u, s)
    }), a]
  });
}
process.env.NODE_ENV !== "production" && (aq.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * You can wrap a node.
   */
  children: t.node,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   * @default false
   */
  enableColorScheme: t.bool
});
const iq = {
  track: "#2b2b2b",
  thumb: "#6b6b6b",
  active: "#959595"
};
function ide(e = iq) {
  return {
    scrollbarColor: `${e.thumb} ${e.track}`,
    "&::-webkit-scrollbar, & *::-webkit-scrollbar": {
      backgroundColor: e.track
    },
    "&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb": {
      borderRadius: 8,
      backgroundColor: e.thumb,
      minHeight: 24,
      border: `3px solid ${e.track}`
    },
    "&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus": {
      backgroundColor: e.active
    },
    "&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active": {
      backgroundColor: e.active
    },
    "&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover": {
      backgroundColor: e.active
    },
    "&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner": {
      backgroundColor: e.track
    }
  };
}
function sq(e) {
  return We("MuiModal", e);
}
const lq = Ye("MuiModal", ["root", "hidden", "backdrop"]), sde = lq, cq = ["BackdropComponent", "BackdropProps", "classes", "className", "closeAfterTransition", "children", "container", "component", "components", "componentsProps", "disableAutoFocus", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "disableScrollLock", "hideBackdrop", "keepMounted", "onBackdropClick", "onClose", "onTransitionEnter", "onTransitionExited", "open", "slotProps", "slots", "theme"], uq = (e) => {
  const {
    open: n,
    exited: a,
    classes: s
  } = e;
  return He({
    root: ["root", !n && a && "hidden"],
    backdrop: ["backdrop"]
  }, sq, s);
}, dq = J("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, !a.open && a.exited && n.hidden];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0
}, !n.open && n.exited && {
  visibility: "hidden"
})), pq = J(PL, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, n) => n.backdrop
})({
  zIndex: -1
}), tI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d, p, h, g;
  const b = Ie({
    name: "MuiModal",
    props: n
  }), {
    BackdropComponent: x = pq,
    BackdropProps: S,
    className: E,
    closeAfterTransition: R = !1,
    children: $,
    container: M,
    component: O,
    components: N = {},
    componentsProps: V = {},
    disableAutoFocus: I = !1,
    disableEnforceFocus: z = !1,
    disableEscapeKeyDown: B = !1,
    disablePortal: P = !1,
    disableRestoreFocus: F = !1,
    disableScrollLock: H = !1,
    hideBackdrop: U = !1,
    keepMounted: Q = !1,
    onBackdropClick: Y,
    open: te,
    slotProps: Z,
    slots: q
    // eslint-disable-next-line react/prop-types
  } = b, X = le(b, cq), oe = y({}, b, {
    closeAfterTransition: R,
    disableAutoFocus: I,
    disableEnforceFocus: z,
    disableEscapeKeyDown: B,
    disablePortal: P,
    disableRestoreFocus: F,
    disableScrollLock: H,
    hideBackdrop: U,
    keepMounted: Q
  }), {
    getRootProps: ie,
    getBackdropProps: K,
    getTransitionProps: ne,
    portalRef: se,
    isTopModal: ze,
    exited: Ue,
    hasTransition: Oe
  } = M3(y({}, oe, {
    rootRef: a
  })), ue = y({}, oe, {
    exited: Ue
  }), xe = uq(ue), me = {};
  if ($.props.tabIndex === void 0 && (me.tabIndex = "-1"), Oe) {
    const {
      onEnter: Ce,
      onExited: ae
    } = ne();
    me.onEnter = Ce, me.onExited = ae;
  }
  const Se = (s = (u = q == null ? void 0 : q.root) != null ? u : N.Root) != null ? s : dq, ce = (d = (p = q == null ? void 0 : q.backdrop) != null ? p : N.Backdrop) != null ? d : x, Le = (h = Z == null ? void 0 : Z.root) != null ? h : V.root, Ze = (g = Z == null ? void 0 : Z.backdrop) != null ? g : V.backdrop, Ee = rn({
    elementType: Se,
    externalSlotProps: Le,
    externalForwardedProps: X,
    getSlotProps: ie,
    additionalProps: {
      ref: a,
      as: O
    },
    ownerState: ue,
    className: fe(E, Le == null ? void 0 : Le.className, xe == null ? void 0 : xe.root, !ue.open && ue.exited && (xe == null ? void 0 : xe.hidden))
  }), Ae = rn({
    elementType: ce,
    externalSlotProps: Ze,
    additionalProps: S,
    getSlotProps: (Ce) => K(y({}, Ce, {
      onClick: (ae) => {
        Y && Y(ae), Ce != null && Ce.onClick && Ce.onClick(ae);
      }
    })),
    className: fe(Ze == null ? void 0 : Ze.className, S == null ? void 0 : S.className, xe == null ? void 0 : xe.backdrop),
    ownerState: ue
  });
  return !Q && !te && (!Oe || Ue) ? null : /* @__PURE__ */ _(cg, {
    ref: se,
    container: M,
    disablePortal: P,
    children: /* @__PURE__ */ st(Se, y({}, Ee, {
      children: [!U && x ? /* @__PURE__ */ _(ce, y({}, Ae)) : null, /* @__PURE__ */ _(lg, {
        disableEnforceFocus: z,
        disableAutoFocus: I,
        disableRestoreFocus: F,
        isEnabled: ze,
        open: te,
        children: /* @__PURE__ */ k.cloneElement($, me)
      })]
    }))
  });
});
process.env.NODE_ENV !== "production" && (tI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: t.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: t.object,
  /**
   * A single child content element.
   */
  children: su.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: t.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    Backdrop: t.elementType,
    Root: t.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: t.shape({
    backdrop: t.oneOfType([t.func, t.object]),
    root: t.oneOfType([t.func, t.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: t.oneOfType([Gs, t.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: t.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: t.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: t.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: t.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: t.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: t.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: t.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: t.bool,
  /**
   * Callback fired when the backdrop is clicked.
   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.
   */
  onBackdropClick: t.func,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: t.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: t.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: t.func,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: t.shape({
    backdrop: t.oneOfType([t.func, t.object]),
    root: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: t.shape({
    backdrop: t.elementType,
    root: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const h1 = tI;
function fq(e) {
  return We("MuiDialog", e);
}
const mq = Ye("MuiDialog", ["root", "scrollPaper", "scrollBody", "container", "paper", "paperScrollPaper", "paperScrollBody", "paperWidthFalse", "paperWidthXs", "paperWidthSm", "paperWidthMd", "paperWidthLg", "paperWidthXl", "paperFullWidth", "paperFullScreen"]), Zv = mq, nI = /* @__PURE__ */ k.createContext({});
process.env.NODE_ENV !== "production" && (nI.displayName = "DialogContext");
const oI = nI, hq = ["aria-describedby", "aria-labelledby", "BackdropComponent", "BackdropProps", "children", "className", "disableEscapeKeyDown", "fullScreen", "fullWidth", "maxWidth", "onBackdropClick", "onClose", "open", "PaperComponent", "PaperProps", "scroll", "TransitionComponent", "transitionDuration", "TransitionProps"], vq = J(PL, {
  name: "MuiDialog",
  slot: "Backdrop",
  overrides: (e, n) => n.backdrop
})({
  // Improve scrollable dialog support.
  zIndex: -1
}), gq = (e) => {
  const {
    classes: n,
    scroll: a,
    maxWidth: s,
    fullWidth: u,
    fullScreen: d
  } = e, p = {
    root: ["root"],
    container: ["container", `scroll${pe(a)}`],
    paper: ["paper", `paperScroll${pe(a)}`, `paperWidth${pe(String(s))}`, u && "paperFullWidth", d && "paperFullScreen"]
  };
  return He(p, fq, n);
}, bq = J(h1, {
  name: "MuiDialog",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({
  "@media print": {
    // Use !important to override the Modal inline-style.
    position: "absolute !important"
  }
}), yq = J("div", {
  name: "MuiDialog",
  slot: "Container",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.container, n[`scroll${pe(a.scroll)}`]];
  }
})(({
  ownerState: e
}) => y({
  height: "100%",
  "@media print": {
    height: "auto"
  },
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}, e.scroll === "paper" && {
  display: "flex",
  justifyContent: "center",
  alignItems: "center"
}, e.scroll === "body" && {
  overflowY: "auto",
  overflowX: "hidden",
  textAlign: "center",
  "&::after": {
    content: '""',
    display: "inline-block",
    verticalAlign: "middle",
    height: "100%",
    width: "0"
  }
})), Cq = J(ni, {
  name: "MuiDialog",
  slot: "Paper",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.paper, n[`scrollPaper${pe(a.scroll)}`], n[`paperWidth${pe(String(a.maxWidth))}`], a.fullWidth && n.paperFullWidth, a.fullScreen && n.paperFullScreen];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  margin: 32,
  position: "relative",
  overflowY: "auto",
  // Fix IE11 issue, to remove at some point.
  "@media print": {
    overflowY: "visible",
    boxShadow: "none"
  }
}, n.scroll === "paper" && {
  display: "flex",
  flexDirection: "column",
  maxHeight: "calc(100% - 64px)"
}, n.scroll === "body" && {
  display: "inline-block",
  verticalAlign: "middle",
  textAlign: "left"
  // 'initial' doesn't work on IE11
}, !n.maxWidth && {
  maxWidth: "calc(100% - 64px)"
}, n.maxWidth === "xs" && {
  maxWidth: e.breakpoints.unit === "px" ? Math.max(e.breakpoints.values.xs, 444) : `max(${e.breakpoints.values.xs}${e.breakpoints.unit}, 444px)`,
  [`&.${Zv.paperScrollBody}`]: {
    [e.breakpoints.down(Math.max(e.breakpoints.values.xs, 444) + 32 * 2)]: {
      maxWidth: "calc(100% - 64px)"
    }
  }
}, n.maxWidth && n.maxWidth !== "xs" && {
  maxWidth: `${e.breakpoints.values[n.maxWidth]}${e.breakpoints.unit}`,
  [`&.${Zv.paperScrollBody}`]: {
    [e.breakpoints.down(e.breakpoints.values[n.maxWidth] + 32 * 2)]: {
      maxWidth: "calc(100% - 64px)"
    }
  }
}, n.fullWidth && {
  width: "calc(100% - 64px)"
}, n.fullScreen && {
  margin: 0,
  width: "100%",
  maxWidth: "100%",
  height: "100%",
  maxHeight: "none",
  borderRadius: 0,
  [`&.${Zv.paperScrollBody}`]: {
    margin: 0,
    maxWidth: "100%"
  }
})), rI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiDialog"
  }), u = En(), d = {
    enter: u.transitions.duration.enteringScreen,
    exit: u.transitions.duration.leavingScreen
  }, {
    "aria-describedby": p,
    "aria-labelledby": h,
    BackdropComponent: g,
    BackdropProps: b,
    children: x,
    className: S,
    disableEscapeKeyDown: E = !1,
    fullScreen: R = !1,
    fullWidth: $ = !1,
    maxWidth: M = "sm",
    onBackdropClick: O,
    onClose: N,
    open: V,
    PaperComponent: I = ni,
    PaperProps: z = {},
    scroll: B = "paper",
    TransitionComponent: P = em,
    transitionDuration: F = d,
    TransitionProps: H
  } = s, U = le(s, hq), Q = y({}, s, {
    disableEscapeKeyDown: E,
    fullScreen: R,
    fullWidth: $,
    maxWidth: M,
    scroll: B
  }), Y = gq(Q), te = k.useRef(), Z = (ie) => {
    te.current = ie.target === ie.currentTarget;
  }, q = (ie) => {
    te.current && (te.current = null, O && O(ie), N && N(ie, "backdropClick"));
  }, X = pa(h), oe = k.useMemo(() => ({
    titleId: X
  }), [X]);
  return /* @__PURE__ */ _(bq, y({
    className: fe(Y.root, S),
    closeAfterTransition: !0,
    components: {
      Backdrop: vq
    },
    componentsProps: {
      backdrop: y({
        transitionDuration: F,
        as: g
      }, b)
    },
    disableEscapeKeyDown: E,
    onClose: N,
    open: V,
    ref: a,
    onClick: q,
    ownerState: Q
  }, U, {
    children: /* @__PURE__ */ _(P, y({
      appear: !0,
      in: V,
      timeout: F,
      role: "presentation"
    }, H, {
      children: /* @__PURE__ */ _(yq, {
        className: fe(Y.container),
        onMouseDown: Z,
        ownerState: Q,
        children: /* @__PURE__ */ _(Cq, y({
          as: I,
          elevation: 24,
          role: "dialog",
          "aria-describedby": p,
          "aria-labelledby": X
        }, z, {
          className: fe(Y.paper, z.className),
          ownerState: Q,
          children: /* @__PURE__ */ _(oI.Provider, {
            value: oe,
            children: x
          })
        }))
      })
    }))
  }));
});
process.env.NODE_ENV !== "production" && (rI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The id(s) of the element(s) that describe the dialog.
   */
  "aria-describedby": t.string,
  /**
   * The id(s) of the element(s) that label the dialog.
   */
  "aria-labelledby": t.string,
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: t.elementType,
  /**
   * @ignore
   */
  BackdropProps: t.object,
  /**
   * Dialog children, usually the included sub-components.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: t.bool,
  /**
   * If `true`, the dialog is full-screen.
   * @default false
   */
  fullScreen: t.bool,
  /**
   * If `true`, the dialog stretches to `maxWidth`.
   *
   * Notice that the dialog width grow is limited by the default margin.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * Determine the max-width of the dialog.
   * The dialog width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'sm'
   */
  maxWidth: t.oneOfType([t.oneOf(["xs", "sm", "md", "lg", "xl", !1]), t.string]),
  /**
   * Callback fired when the backdrop is clicked.
   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.
   */
  onBackdropClick: t.func,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: t.func,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool.isRequired,
  /**
   * The component used to render the body of the dialog.
   * @default Paper
   */
  PaperComponent: t.elementType,
  /**
   * Props applied to the [`Paper`](/material-ui/api/paper/) element.
   * @default {}
   */
  PaperProps: t.object,
  /**
   * Determine the container for scrolling the dialog.
   * @default 'paper'
   */
  scroll: t.oneOf(["body", "paper"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   */
  TransitionComponent: t.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: t.oneOfType([t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: t.object
});
const Tq = rI;
function xq(e) {
  return We("MuiDialogActions", e);
}
const Sq = Ye("MuiDialogActions", ["root", "spacing"]), lde = Sq, kq = ["className", "disableSpacing"], wq = (e) => {
  const {
    classes: n,
    disableSpacing: a
  } = e;
  return He({
    root: ["root", !a && "spacing"]
  }, xq, n);
}, Rq = J("div", {
  name: "MuiDialogActions",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, !a.disableSpacing && n.spacing];
  }
})(({
  ownerState: e
}) => y({
  display: "flex",
  alignItems: "center",
  padding: 8,
  justifyContent: "flex-end",
  flex: "0 0 auto"
}, !e.disableSpacing && {
  "& > :not(style) ~ :not(style)": {
    marginLeft: 8
  }
})), aI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiDialogActions"
  }), {
    className: u,
    disableSpacing: d = !1
  } = s, p = le(s, kq), h = y({}, s, {
    disableSpacing: d
  }), g = wq(h);
  return /* @__PURE__ */ _(Rq, y({
    className: fe(g.root, u),
    ownerState: h,
    ref: a
  }, p));
});
process.env.NODE_ENV !== "production" && (aI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Eq = aI;
function Oq(e) {
  return We("MuiDialogContent", e);
}
const Pq = Ye("MuiDialogContent", ["root", "dividers"]), cde = Pq;
function Dq(e) {
  return We("MuiDialogTitle", e);
}
const Mq = Ye("MuiDialogTitle", ["root"]), $q = Mq, Nq = ["className", "dividers"], Lq = (e) => {
  const {
    classes: n,
    dividers: a
  } = e;
  return He({
    root: ["root", a && "dividers"]
  }, Oq, n);
}, Iq = J("div", {
  name: "MuiDialogContent",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.dividers && n.dividers];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  flex: "1 1 auto",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  overflowY: "auto",
  padding: "20px 24px"
}, n.dividers ? {
  padding: "16px 24px",
  borderTop: `1px solid ${(e.vars || e).palette.divider}`,
  borderBottom: `1px solid ${(e.vars || e).palette.divider}`
} : {
  [`.${$q.root} + &`]: {
    paddingTop: 0
  }
})), iI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiDialogContent"
  }), {
    className: u,
    dividers: d = !1
  } = s, p = le(s, Nq), h = y({}, s, {
    dividers: d
  }), g = Lq(h);
  return /* @__PURE__ */ _(Iq, y({
    className: fe(g.root, u),
    ownerState: h,
    ref: a
  }, p));
});
process.env.NODE_ENV !== "production" && (iI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Display the top and bottom dividers.
   * @default false
   */
  dividers: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Aq = iI;
function _q(e) {
  return We("MuiDialogContentText", e);
}
const Vq = Ye("MuiDialogContentText", ["root"]), ude = Vq, Bq = ["children", "className"], zq = (e) => {
  const {
    classes: n
  } = e, s = He({
    root: ["root"]
  }, _q, n);
  return y({}, n, s);
}, Fq = J(vo, {
  shouldForwardProp: (e) => Vo(e) || e === "classes",
  name: "MuiDialogContentText",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({}), sI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiDialogContentText"
  }), {
    className: u
  } = s, d = le(s, Bq), p = zq(d);
  return /* @__PURE__ */ _(Fq, y({
    component: "p",
    variant: "body1",
    color: "text.secondary",
    ref: a,
    ownerState: d,
    className: fe(p.root, u)
  }, s, {
    classes: p
  }));
});
process.env.NODE_ENV !== "production" && (sI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const dde = sI, jq = ["className", "id"], Uq = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"]
  }, Dq, n);
}, Hq = J(vo, {
  name: "MuiDialogTitle",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({
  padding: "16px 24px",
  flex: "0 0 auto"
}), lI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiDialogTitle"
  }), {
    className: u,
    id: d
  } = s, p = le(s, jq), h = s, g = Uq(h), {
    titleId: b = d
  } = k.useContext(oI);
  return /* @__PURE__ */ _(Hq, y({
    component: "h2",
    className: fe(g.root, u),
    ownerState: h,
    ref: a,
    variant: "h6",
    id: d ?? b
  }, p));
});
process.env.NODE_ENV !== "production" && (lI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * @ignore
   */
  id: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const pde = lI;
function Wq(e) {
  return We("MuiDivider", e);
}
const Yq = Ye("MuiDivider", ["root", "absolute", "fullWidth", "inset", "middle", "flexItem", "light", "vertical", "withChildren", "withChildrenVertical", "textAlignRight", "textAlignLeft", "wrapper", "wrapperVertical"]), fM = Yq, qq = ["absolute", "children", "className", "component", "flexItem", "light", "orientation", "role", "textAlign", "variant"], Gq = (e) => {
  const {
    absolute: n,
    children: a,
    classes: s,
    flexItem: u,
    light: d,
    orientation: p,
    textAlign: h,
    variant: g
  } = e;
  return He({
    root: ["root", n && "absolute", g, d && "light", p === "vertical" && "vertical", u && "flexItem", a && "withChildren", a && p === "vertical" && "withChildrenVertical", h === "right" && p !== "vertical" && "textAlignRight", h === "left" && p !== "vertical" && "textAlignLeft"],
    wrapper: ["wrapper", p === "vertical" && "wrapperVertical"]
  }, Wq, s);
}, Kq = J("div", {
  name: "MuiDivider",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.absolute && n.absolute, n[a.variant], a.light && n.light, a.orientation === "vertical" && n.vertical, a.flexItem && n.flexItem, a.children && n.withChildren, a.children && a.orientation === "vertical" && n.withChildrenVertical, a.textAlign === "right" && a.orientation !== "vertical" && n.textAlignRight, a.textAlign === "left" && a.orientation !== "vertical" && n.textAlignLeft];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  margin: 0,
  // Reset browser default style.
  flexShrink: 0,
  borderWidth: 0,
  borderStyle: "solid",
  borderColor: (e.vars || e).palette.divider,
  borderBottomWidth: "thin"
}, n.absolute && {
  position: "absolute",
  bottom: 0,
  left: 0,
  width: "100%"
}, n.light && {
  borderColor: e.vars ? `rgba(${e.vars.palette.dividerChannel} / 0.08)` : Yt(e.palette.divider, 0.08)
}, n.variant === "inset" && {
  marginLeft: 72
}, n.variant === "middle" && n.orientation === "horizontal" && {
  marginLeft: e.spacing(2),
  marginRight: e.spacing(2)
}, n.variant === "middle" && n.orientation === "vertical" && {
  marginTop: e.spacing(1),
  marginBottom: e.spacing(1)
}, n.orientation === "vertical" && {
  height: "100%",
  borderBottomWidth: 0,
  borderRightWidth: "thin"
}, n.flexItem && {
  alignSelf: "stretch",
  height: "auto"
}), ({
  ownerState: e
}) => y({}, e.children && {
  display: "flex",
  whiteSpace: "nowrap",
  textAlign: "center",
  border: 0,
  "&::before, &::after": {
    content: '""',
    alignSelf: "center"
  }
}), ({
  theme: e,
  ownerState: n
}) => y({}, n.children && n.orientation !== "vertical" && {
  "&::before, &::after": {
    width: "100%",
    borderTop: `thin solid ${(e.vars || e).palette.divider}`
  }
}), ({
  theme: e,
  ownerState: n
}) => y({}, n.children && n.orientation === "vertical" && {
  flexDirection: "column",
  "&::before, &::after": {
    height: "100%",
    borderLeft: `thin solid ${(e.vars || e).palette.divider}`
  }
}), ({
  ownerState: e
}) => y({}, e.textAlign === "right" && e.orientation !== "vertical" && {
  "&::before": {
    width: "90%"
  },
  "&::after": {
    width: "10%"
  }
}, e.textAlign === "left" && e.orientation !== "vertical" && {
  "&::before": {
    width: "10%"
  },
  "&::after": {
    width: "90%"
  }
})), Qq = J("span", {
  name: "MuiDivider",
  slot: "Wrapper",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.wrapper, a.orientation === "vertical" && n.wrapperVertical];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  display: "inline-block",
  paddingLeft: `calc(${e.spacing(1)} * 1.2)`,
  paddingRight: `calc(${e.spacing(1)} * 1.2)`
}, n.orientation === "vertical" && {
  paddingTop: `calc(${e.spacing(1)} * 1.2)`,
  paddingBottom: `calc(${e.spacing(1)} * 1.2)`
})), v1 = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiDivider"
  }), {
    absolute: u = !1,
    children: d,
    className: p,
    component: h = d ? "div" : "hr",
    flexItem: g = !1,
    light: b = !1,
    orientation: x = "horizontal",
    role: S = h !== "hr" ? "separator" : void 0,
    textAlign: E = "center",
    variant: R = "fullWidth"
  } = s, $ = le(s, qq), M = y({}, s, {
    absolute: u,
    component: h,
    flexItem: g,
    light: b,
    orientation: x,
    role: S,
    textAlign: E,
    variant: R
  }), O = Gq(M);
  return /* @__PURE__ */ _(Kq, y({
    as: h,
    className: fe(O.root, p),
    role: S,
    ref: a,
    ownerState: M
  }, $, {
    children: d ? /* @__PURE__ */ _(Qq, {
      className: O.wrapper,
      ownerState: M,
      children: d
    }) : null
  }));
});
v1.muiSkipListHighlight = !0;
process.env.NODE_ENV !== "production" && (v1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Absolutely position the element.
   * @default false
   */
  absolute: t.bool,
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, a vertical divider will have the correct height when used in flex container.
   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)
   * @default false
   */
  flexItem: t.bool,
  /**
   * If `true`, the divider will have a lighter color.
   * @default false
   * @deprecated Use <Divider sx={{ opacity: 0.6 }} /> (or any opacity or color) instead. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/)
   */
  light: t.bool,
  /**
   * The component orientation.
   * @default 'horizontal'
   */
  orientation: t.oneOf(["horizontal", "vertical"]),
  /**
   * @ignore
   */
  role: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The text alignment.
   * @default 'center'
   */
  textAlign: t.oneOf(["center", "left", "right"]),
  /**
   * The variant to use.
   * @default 'fullWidth'
   */
  variant: t.oneOfType([t.oneOf(["fullWidth", "inset", "middle"]), t.string])
});
const mM = v1, Xq = ["addEndListener", "appear", "children", "container", "direction", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];
function Zq(e, n, a) {
  const s = n.getBoundingClientRect(), u = a && a.getBoundingClientRect(), d = Qr(n);
  let p;
  if (n.fakeTransform)
    p = n.fakeTransform;
  else {
    const b = d.getComputedStyle(n);
    p = b.getPropertyValue("-webkit-transform") || b.getPropertyValue("transform");
  }
  let h = 0, g = 0;
  if (p && p !== "none" && typeof p == "string") {
    const b = p.split("(")[1].split(")")[0].split(",");
    h = parseInt(b[4], 10), g = parseInt(b[5], 10);
  }
  return e === "left" ? u ? `translateX(${u.right + h - s.left}px)` : `translateX(${d.innerWidth + h - s.left}px)` : e === "right" ? u ? `translateX(-${s.right - u.left - h}px)` : `translateX(-${s.left + s.width - h}px)` : e === "up" ? u ? `translateY(${u.bottom + g - s.top}px)` : `translateY(${d.innerHeight + g - s.top}px)` : u ? `translateY(-${s.top - u.top + s.height - g}px)` : `translateY(-${s.top + s.height - g}px)`;
}
function cI(e) {
  return typeof e == "function" ? e() : e;
}
function JC(e, n, a) {
  const s = cI(a), u = Zq(e, n, s);
  u && (n.style.webkitTransform = u, n.style.transform = u);
}
const uI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = En(), u = {
    enter: s.transitions.easing.easeOut,
    exit: s.transitions.easing.sharp
  }, d = {
    enter: s.transitions.duration.enteringScreen,
    exit: s.transitions.duration.leavingScreen
  }, {
    addEndListener: p,
    appear: h = !0,
    children: g,
    container: b,
    direction: x = "down",
    easing: S = u,
    in: E,
    onEnter: R,
    onEntered: $,
    onEntering: M,
    onExit: O,
    onExited: N,
    onExiting: V,
    style: I,
    timeout: z = d,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: B = Dd
  } = n, P = le(n, Xq), F = k.useRef(null), H = cn(g.ref, F, a), U = (K) => (ne) => {
    K && (ne === void 0 ? K(F.current) : K(F.current, ne));
  }, Q = U((K, ne) => {
    JC(x, K, b), YT(K), R && R(K, ne);
  }), Y = U((K, ne) => {
    const se = os({
      timeout: z,
      style: I,
      easing: S
    }, {
      mode: "enter"
    });
    K.style.webkitTransition = s.transitions.create("-webkit-transform", y({}, se)), K.style.transition = s.transitions.create("transform", y({}, se)), K.style.webkitTransform = "none", K.style.transform = "none", M && M(K, ne);
  }), te = U($), Z = U(V), q = U((K) => {
    const ne = os({
      timeout: z,
      style: I,
      easing: S
    }, {
      mode: "exit"
    });
    K.style.webkitTransition = s.transitions.create("-webkit-transform", ne), K.style.transition = s.transitions.create("transform", ne), JC(x, K, b), O && O(K);
  }), X = U((K) => {
    K.style.webkitTransition = "", K.style.transition = "", N && N(K);
  }), oe = (K) => {
    p && p(F.current, K);
  }, ie = k.useCallback(() => {
    F.current && JC(x, F.current, b);
  }, [x, b]);
  return k.useEffect(() => {
    if (E || x === "down" || x === "right")
      return;
    const K = Qf(() => {
      F.current && JC(x, F.current, b);
    }), ne = Qr(F.current);
    return ne.addEventListener("resize", K), () => {
      K.clear(), ne.removeEventListener("resize", K);
    };
  }, [x, E, b]), k.useEffect(() => {
    E || ie();
  }, [E, ie]), /* @__PURE__ */ _(B, y({
    nodeRef: F,
    onEnter: Q,
    onEntered: te,
    onEntering: Y,
    onExit: q,
    onExited: X,
    onExiting: Z,
    addEndListener: oe,
    appear: h,
    in: E,
    timeout: z
  }, P, {
    children: (K, ne) => /* @__PURE__ */ k.cloneElement(g, y({
      ref: H,
      style: y({
        visibility: K === "exited" && !E ? "hidden" : void 0
      }, I, g.props.style)
    }, ne))
  }));
});
process.env.NODE_ENV !== "production" && (uI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: t.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: t.bool,
  /**
   * A single child content element.
   */
  children: su.isRequired,
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the container the Slide is transitioning from.
   */
  container: Xo(t.oneOfType([Gs, t.func]), (e) => {
    if (e.open) {
      const n = cI(e.container);
      if (n && n.nodeType === 1) {
        const a = n.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && a.top === 0 && a.left === 0 && a.right === 0 && a.bottom === 0)
          return new Error(["MUI: The `container` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!n || typeof n.getBoundingClientRect != "function" || n.contextElement != null && n.contextElement.nodeType !== 1)
        return new Error(["MUI: The `container` prop provided to the component is invalid.", "It should be an HTML element instance."].join(`
`));
    }
    return null;
  }),
  /**
   * Direction the child node will enter from.
   * @default 'down'
   */
  direction: t.oneOf(["down", "left", "right", "up"]),
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   * @default {
   *   enter: theme.transitions.easing.easeOut,
   *   exit: theme.transitions.easing.sharp,
   * }
   */
  easing: t.oneOfType([t.shape({
    enter: t.string,
    exit: t.string
  }), t.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: t.bool,
  /**
   * @ignore
   */
  onEnter: t.func,
  /**
   * @ignore
   */
  onEntered: t.func,
  /**
   * @ignore
   */
  onEntering: t.func,
  /**
   * @ignore
   */
  onExit: t.func,
  /**
   * @ignore
   */
  onExited: t.func,
  /**
   * @ignore
   */
  onExiting: t.func,
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: t.oneOfType([t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })])
});
const Jq = uI;
function eG(e) {
  return We("MuiDrawer", e);
}
const tG = Ye("MuiDrawer", ["root", "docked", "paper", "paperAnchorLeft", "paperAnchorRight", "paperAnchorTop", "paperAnchorBottom", "paperAnchorDockedLeft", "paperAnchorDockedRight", "paperAnchorDockedTop", "paperAnchorDockedBottom", "modal"]), fde = tG, nG = ["BackdropProps"], oG = ["anchor", "BackdropProps", "children", "className", "elevation", "hideBackdrop", "ModalProps", "onClose", "open", "PaperProps", "SlideProps", "TransitionComponent", "transitionDuration", "variant"], dI = (e, n) => {
  const {
    ownerState: a
  } = e;
  return [n.root, (a.variant === "permanent" || a.variant === "persistent") && n.docked, n.modal];
}, rG = (e) => {
  const {
    classes: n,
    anchor: a,
    variant: s
  } = e, u = {
    root: ["root"],
    docked: [(s === "permanent" || s === "persistent") && "docked"],
    modal: ["modal"],
    paper: ["paper", `paperAnchor${pe(a)}`, s !== "temporary" && `paperAnchorDocked${pe(a)}`]
  };
  return He(u, eG, n);
}, aG = J(h1, {
  name: "MuiDrawer",
  slot: "Root",
  overridesResolver: dI
})(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.drawer
})), hM = J("div", {
  shouldForwardProp: Vo,
  name: "MuiDrawer",
  slot: "Docked",
  skipVariantsResolver: !1,
  overridesResolver: dI
})({
  flex: "0 0 auto"
}), iG = J(ni, {
  name: "MuiDrawer",
  slot: "Paper",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.paper, n[`paperAnchor${pe(a.anchor)}`], a.variant !== "temporary" && n[`paperAnchorDocked${pe(a.anchor)}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  overflowY: "auto",
  display: "flex",
  flexDirection: "column",
  height: "100%",
  flex: "1 0 auto",
  zIndex: (e.vars || e).zIndex.drawer,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  // temporary style
  position: "fixed",
  top: 0,
  // We disable the focus ring for mouse, touch and keyboard users.
  // At some point, it would be better to keep it for keyboard users.
  // :focus-ring CSS pseudo-class will help.
  outline: 0
}, n.anchor === "left" && {
  left: 0
}, n.anchor === "top" && {
  top: 0,
  left: 0,
  right: 0,
  height: "auto",
  maxHeight: "100%"
}, n.anchor === "right" && {
  right: 0
}, n.anchor === "bottom" && {
  top: "auto",
  left: 0,
  bottom: 0,
  right: 0,
  height: "auto",
  maxHeight: "100%"
}, n.anchor === "left" && n.variant !== "temporary" && {
  borderRight: `1px solid ${(e.vars || e).palette.divider}`
}, n.anchor === "top" && n.variant !== "temporary" && {
  borderBottom: `1px solid ${(e.vars || e).palette.divider}`
}, n.anchor === "right" && n.variant !== "temporary" && {
  borderLeft: `1px solid ${(e.vars || e).palette.divider}`
}, n.anchor === "bottom" && n.variant !== "temporary" && {
  borderTop: `1px solid ${(e.vars || e).palette.divider}`
})), pI = {
  left: "right",
  right: "left",
  top: "down",
  bottom: "up"
};
function xd(e) {
  return ["left", "right"].indexOf(e) !== -1;
}
function Uv(e, n) {
  return e.direction === "rtl" && xd(n) ? pI[n] : n;
}
const fI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiDrawer"
  }), u = En(), d = {
    enter: u.transitions.duration.enteringScreen,
    exit: u.transitions.duration.leavingScreen
  }, {
    anchor: p = "left",
    BackdropProps: h,
    children: g,
    className: b,
    elevation: x = 16,
    hideBackdrop: S = !1,
    ModalProps: {
      BackdropProps: E
    } = {},
    onClose: R,
    open: $ = !1,
    PaperProps: M = {},
    SlideProps: O,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: N = Jq,
    transitionDuration: V = d,
    variant: I = "temporary"
  } = s, z = le(s.ModalProps, nG), B = le(s, oG), P = k.useRef(!1);
  k.useEffect(() => {
    P.current = !0;
  }, []);
  const F = Uv(u, p), U = y({}, s, {
    anchor: p,
    elevation: x,
    open: $,
    variant: I
  }, B), Q = rG(U), Y = /* @__PURE__ */ _(iG, y({
    elevation: I === "temporary" ? x : 0,
    square: !0
  }, M, {
    className: fe(Q.paper, M.className),
    ownerState: U,
    children: g
  }));
  if (I === "permanent")
    return /* @__PURE__ */ _(hM, y({
      className: fe(Q.root, Q.docked, b),
      ownerState: U,
      ref: a
    }, B, {
      children: Y
    }));
  const te = /* @__PURE__ */ _(N, y({
    in: $,
    direction: pI[F],
    timeout: V,
    appear: P.current
  }, O, {
    children: Y
  }));
  return I === "persistent" ? /* @__PURE__ */ _(hM, y({
    className: fe(Q.root, Q.docked, b),
    ownerState: U,
    ref: a
  }, B, {
    children: te
  })) : /* @__PURE__ */ _(aG, y({
    BackdropProps: y({}, h, E, {
      transitionDuration: V
    }),
    className: fe(Q.root, Q.modal, b),
    open: $,
    ownerState: U,
    onClose: R,
    hideBackdrop: S,
    ref: a
  }, B, z, {
    children: te
  }));
});
process.env.NODE_ENV !== "production" && (fI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Side from which the drawer will appear.
   * @default 'left'
   */
  anchor: t.oneOf(["bottom", "left", "right", "top"]),
  /**
   * @ignore
   */
  BackdropProps: t.object,
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The elevation of the drawer.
   * @default 16
   */
  elevation: Ro,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: t.bool,
  /**
   * Props applied to the [`Modal`](/material-ui/api/modal/) element.
   * @default {}
   */
  ModalProps: t.object,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: t.func,
  /**
   * If `true`, the component is shown.
   * @default false
   */
  open: t.bool,
  /**
   * Props applied to the [`Paper`](/material-ui/api/paper/) element.
   * @default {}
   */
  PaperProps: t.object,
  /**
   * Props applied to the [`Slide`](/material-ui/api/slide/) element.
   */
  SlideProps: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: t.oneOfType([t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })]),
  /**
   * The variant to use.
   * @default 'temporary'
   */
  variant: t.oneOf(["permanent", "persistent", "temporary"])
});
const sG = fI;
function lG(e) {
  return We("MuiFab", e);
}
const cG = Ye("MuiFab", ["root", "primary", "secondary", "extended", "circular", "focusVisible", "disabled", "colorInherit", "sizeSmall", "sizeMedium", "sizeLarge", "info", "error", "warning", "success"]), vM = cG, uG = ["children", "className", "color", "component", "disabled", "disableFocusRipple", "focusVisibleClassName", "size", "variant"], dG = (e) => {
  const {
    color: n,
    variant: a,
    classes: s,
    size: u
  } = e, d = {
    root: ["root", a, `size${pe(u)}`, n === "inherit" ? "colorInherit" : n]
  }, p = He(d, lG, s);
  return y({}, s, p);
}, pG = J(Zo, {
  name: "MuiFab",
  slot: "Root",
  shouldForwardProp: (e) => Vo(e) || e === "classes",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[a.variant], n[`size${pe(a.size)}`], a.color === "inherit" && n.colorInherit, n[pe(a.size)], n[a.color]];
  }
})(({
  theme: e,
  ownerState: n
}) => {
  var a, s;
  return y({}, e.typography.button, {
    minHeight: 36,
    transition: e.transitions.create(["background-color", "box-shadow", "border-color"], {
      duration: e.transitions.duration.short
    }),
    borderRadius: "50%",
    padding: 0,
    minWidth: 0,
    width: 56,
    height: 56,
    zIndex: (e.vars || e).zIndex.fab,
    boxShadow: (e.vars || e).shadows[6],
    "&:active": {
      boxShadow: (e.vars || e).shadows[12]
    },
    color: e.vars ? e.vars.palette.text.primary : (a = (s = e.palette).getContrastText) == null ? void 0 : a.call(s, e.palette.grey[300]),
    backgroundColor: (e.vars || e).palette.grey[300],
    "&:hover": {
      backgroundColor: (e.vars || e).palette.grey.A100,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (e.vars || e).palette.grey[300]
      },
      textDecoration: "none"
    },
    [`&.${vM.focusVisible}`]: {
      boxShadow: (e.vars || e).shadows[6]
    }
  }, n.size === "small" && {
    width: 40,
    height: 40
  }, n.size === "medium" && {
    width: 48,
    height: 48
  }, n.variant === "extended" && {
    borderRadius: 48 / 2,
    padding: "0 16px",
    width: "auto",
    minHeight: "auto",
    minWidth: 48,
    height: 48
  }, n.variant === "extended" && n.size === "small" && {
    width: "auto",
    padding: "0 8px",
    borderRadius: 34 / 2,
    minWidth: 34,
    height: 34
  }, n.variant === "extended" && n.size === "medium" && {
    width: "auto",
    padding: "0 16px",
    borderRadius: 40 / 2,
    minWidth: 40,
    height: 40
  }, n.color === "inherit" && {
    color: "inherit"
  });
}, ({
  theme: e,
  ownerState: n
}) => y({}, n.color !== "inherit" && n.color !== "default" && (e.vars || e).palette[n.color] != null && {
  color: (e.vars || e).palette[n.color].contrastText,
  backgroundColor: (e.vars || e).palette[n.color].main,
  "&:hover": {
    backgroundColor: (e.vars || e).palette[n.color].dark,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: (e.vars || e).palette[n.color].main
    }
  }
}), ({
  theme: e
}) => ({
  [`&.${vM.disabled}`]: {
    color: (e.vars || e).palette.action.disabled,
    boxShadow: (e.vars || e).shadows[0],
    backgroundColor: (e.vars || e).palette.action.disabledBackground
  }
})), mI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiFab"
  }), {
    children: u,
    className: d,
    color: p = "default",
    component: h = "button",
    disabled: g = !1,
    disableFocusRipple: b = !1,
    focusVisibleClassName: x,
    size: S = "large",
    variant: E = "circular"
  } = s, R = le(s, uG), $ = y({}, s, {
    color: p,
    component: h,
    disabled: g,
    disableFocusRipple: b,
    size: S,
    variant: E
  }), M = dG($);
  return /* @__PURE__ */ _(pG, y({
    className: fe(M.root, d),
    component: h,
    disabled: g,
    focusRipple: !b,
    focusVisibleClassName: fe(M.focusVisible, x),
    ownerState: $,
    ref: a
  }, R, {
    classes: M,
    children: u
  }));
});
process.env.NODE_ENV !== "production" && (mI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: t.oneOfType([t.oneOf(["default", "error", "info", "inherit", "primary", "secondary", "success", "warning"]), t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: t.bool,
  /**
   * If `true`, the ripple effect is disabled.
   */
  disableRipple: t.bool,
  /**
   * @ignore
   */
  focusVisibleClassName: t.string,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: t.string,
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'large'
   */
  size: t.oneOfType([t.oneOf(["small", "medium", "large"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * @default 'circular'
   */
  variant: t.oneOfType([t.oneOf(["circular", "extended"]), t.string])
});
const hI = mI, fG = ["disableUnderline", "components", "componentsProps", "fullWidth", "hiddenLabel", "inputComponent", "multiline", "slotProps", "slots", "type"], mG = (e) => {
  const {
    classes: n,
    disableUnderline: a
  } = e, u = He({
    root: ["root", !a && "underline"],
    input: ["input"]
  }, g9, n);
  return y({}, n, u);
}, hG = J(JT, {
  shouldForwardProp: (e) => Vo(e) || e === "classes",
  name: "MuiFilledInput",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [...XT(e, n), !a.disableUnderline && n.underline];
  }
})(({
  theme: e,
  ownerState: n
}) => {
  var a;
  const s = e.palette.mode === "light", u = s ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)", d = s ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)", p = s ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)", h = s ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return y({
    position: "relative",
    backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : d,
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create("background-color", {
      duration: e.transitions.duration.shorter,
      easing: e.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.hoverBg : p,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : d
      }
    },
    [`&.${Za.focused}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : d
    },
    [`&.${Za.disabled}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.disabledBg : h
    }
  }, !n.disableUnderline && {
    "&::after": {
      borderBottom: `2px solid ${(a = (e.vars || e).palette[n.color || "primary"]) == null ? void 0 : a.main}`,
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '""',
      position: "absolute",
      right: 0,
      transform: "scaleX(0)",
      transition: e.transitions.create("transform", {
        duration: e.transitions.duration.shorter,
        easing: e.transitions.easing.easeOut
      }),
      pointerEvents: "none"
      // Transparent to the hover style.
    },
    [`&.${Za.focused}:after`]: {
      // translateX(0) is a workaround for Safari transform scale bug
      // See https://github.com/mui/material-ui/issues/31766
      transform: "scaleX(1) translateX(0)"
    },
    [`&.${Za.error}`]: {
      "&::before, &::after": {
        borderBottomColor: (e.vars || e).palette.error.main
      }
    },
    "&::before": {
      borderBottom: `1px solid ${e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})` : u}`,
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '"\\00a0"',
      position: "absolute",
      right: 0,
      transition: e.transitions.create("border-bottom-color", {
        duration: e.transitions.duration.shorter
      }),
      pointerEvents: "none"
      // Transparent to the hover style.
    },
    [`&:hover:not(.${Za.disabled}, .${Za.error}):before`]: {
      borderBottom: `1px solid ${(e.vars || e).palette.text.primary}`
    },
    [`&.${Za.disabled}:before`]: {
      borderBottomStyle: "dotted"
    }
  }, n.startAdornment && {
    paddingLeft: 12
  }, n.endAdornment && {
    paddingRight: 12
  }, n.multiline && y({
    padding: "25px 12px 8px"
  }, n.size === "small" && {
    paddingTop: 21,
    paddingBottom: 4
  }, n.hiddenLabel && {
    paddingTop: 16,
    paddingBottom: 17
  }, n.hiddenLabel && n.size === "small" && {
    paddingTop: 8,
    paddingBottom: 9
  }));
}), vG = J(ex, {
  name: "MuiFilledInput",
  slot: "Input",
  overridesResolver: ZT
})(({
  theme: e,
  ownerState: n
}) => y({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12
}, !e.vars && {
  "&:-webkit-autofill": {
    WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
    WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
    caretColor: e.palette.mode === "light" ? null : "#fff",
    borderTopLeftRadius: "inherit",
    borderTopRightRadius: "inherit"
  }
}, e.vars && {
  "&:-webkit-autofill": {
    borderTopLeftRadius: "inherit",
    borderTopRightRadius: "inherit"
  },
  [e.getColorSchemeSelector("dark")]: {
    "&:-webkit-autofill": {
      WebkitBoxShadow: "0 0 0 100px #266798 inset",
      WebkitTextFillColor: "#fff",
      caretColor: "#fff"
    }
  }
}, n.size === "small" && {
  paddingTop: 21,
  paddingBottom: 4
}, n.hiddenLabel && {
  paddingTop: 16,
  paddingBottom: 17
}, n.startAdornment && {
  paddingLeft: 0
}, n.endAdornment && {
  paddingRight: 0
}, n.hiddenLabel && n.size === "small" && {
  paddingTop: 8,
  paddingBottom: 9
}, n.multiline && {
  paddingTop: 0,
  paddingBottom: 0,
  paddingLeft: 0,
  paddingRight: 0
})), g1 = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d, p;
  const h = Ie({
    props: n,
    name: "MuiFilledInput"
  }), {
    components: g = {},
    componentsProps: b,
    fullWidth: x = !1,
    // declare here to prevent spreading to DOM
    inputComponent: S = "input",
    multiline: E = !1,
    slotProps: R,
    slots: $ = {},
    type: M = "text"
  } = h, O = le(h, fG), N = y({}, h, {
    fullWidth: x,
    inputComponent: S,
    multiline: E,
    type: M
  }), V = mG(h), I = {
    root: {
      ownerState: N
    },
    input: {
      ownerState: N
    }
  }, z = R ?? b ? ns(I, R ?? b) : I, B = (s = (u = $.root) != null ? u : g.Root) != null ? s : hG, P = (d = (p = $.input) != null ? p : g.Input) != null ? d : vG;
  return /* @__PURE__ */ _(tx, y({
    slots: {
      root: B,
      input: P
    },
    componentsProps: z,
    fullWidth: x,
    inputComponent: S,
    multiline: E,
    ref: a,
    type: M
  }, O, {
    classes: V
  }));
});
process.env.NODE_ENV !== "production" && (g1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: t.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: t.oneOfType([t.oneOf(["primary", "secondary"]), t.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    Input: t.elementType,
    Root: t.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: t.shape({
    input: t.object,
    root: t.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: t.bool,
  /**
   * If `true`, the input will not have an underline.
   */
  disableUnderline: t.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: t.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: t.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: t.bool,
  /**
   * The id of the `input` element.
   */
  id: t.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: t.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: t.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: t.oneOfType([t.number, t.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: t.oneOfType([t.number, t.string]),
  /**
   * If `true`, a [TextareaAutosize](/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: t.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: t.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: t.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: t.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: t.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: t.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: t.oneOfType([t.number, t.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: t.shape({
    input: t.object,
    root: t.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: t.shape({
    input: t.elementType,
    root: t.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: t.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: t.any
});
g1.muiName = "Input";
const vI = g1;
function gG(e) {
  return We("MuiFormControl", e);
}
const bG = Ye("MuiFormControl", ["root", "marginNone", "marginNormal", "marginDense", "fullWidth", "disabled"]), mde = bG, yG = ["children", "className", "color", "component", "disabled", "error", "focused", "fullWidth", "hiddenLabel", "margin", "required", "size", "variant"], CG = (e) => {
  const {
    classes: n,
    margin: a,
    fullWidth: s
  } = e, u = {
    root: ["root", a !== "none" && `margin${pe(a)}`, s && "fullWidth"]
  };
  return He(u, gG, n);
}, TG = J("div", {
  name: "MuiFormControl",
  slot: "Root",
  overridesResolver: ({
    ownerState: e
  }, n) => y({}, n.root, n[`margin${pe(e.margin)}`], e.fullWidth && n.fullWidth)
})(({
  ownerState: e
}) => y({
  display: "inline-flex",
  flexDirection: "column",
  position: "relative",
  // Reset fieldset default style.
  minWidth: 0,
  padding: 0,
  margin: 0,
  border: 0,
  verticalAlign: "top"
}, e.margin === "normal" && {
  marginTop: 16,
  marginBottom: 8
}, e.margin === "dense" && {
  marginTop: 8,
  marginBottom: 4
}, e.fullWidth && {
  width: "100%"
})), gI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiFormControl"
  }), {
    children: u,
    className: d,
    color: p = "primary",
    component: h = "div",
    disabled: g = !1,
    error: b = !1,
    focused: x,
    fullWidth: S = !1,
    hiddenLabel: E = !1,
    margin: R = "none",
    required: $ = !1,
    size: M = "medium",
    variant: O = "outlined"
  } = s, N = le(s, yG), V = y({}, s, {
    color: p,
    component: h,
    disabled: g,
    error: b,
    fullWidth: S,
    hiddenLabel: E,
    margin: R,
    required: $,
    size: M,
    variant: O
  }), I = CG(V), [z, B] = k.useState(() => {
    let Z = !1;
    return u && k.Children.forEach(u, (q) => {
      if (!Hs(q, ["Input", "Select"]))
        return;
      const X = Hs(q, ["Select"]) ? q.props.input : q;
      X && s9(X.props) && (Z = !0);
    }), Z;
  }), [P, F] = k.useState(() => {
    let Z = !1;
    return u && k.Children.forEach(u, (q) => {
      Hs(q, ["Input", "Select"]) && ($T(q.props, !0) || $T(q.props.inputProps, !0)) && (Z = !0);
    }), Z;
  }), [H, U] = k.useState(!1);
  g && H && U(!1);
  const Q = x !== void 0 && !g ? x : H;
  let Y;
  if (process.env.NODE_ENV !== "production") {
    const Z = k.useRef(!1);
    Y = () => (Z.current && console.error(["MUI: There are multiple `InputBase` components inside a FormControl.", "This creates visual inconsistencies, only use one `InputBase`."].join(`
`)), Z.current = !0, () => {
      Z.current = !1;
    });
  }
  const te = k.useMemo(() => ({
    adornedStart: z,
    setAdornedStart: B,
    color: p,
    disabled: g,
    error: b,
    filled: P,
    focused: Q,
    fullWidth: S,
    hiddenLabel: E,
    size: M,
    onBlur: () => {
      U(!1);
    },
    onEmpty: () => {
      F(!1);
    },
    onFilled: () => {
      F(!0);
    },
    onFocus: () => {
      U(!0);
    },
    registerEffect: Y,
    required: $,
    variant: O
  }), [z, p, g, b, P, Q, S, E, Y, $, M, O]);
  return /* @__PURE__ */ _(QT.Provider, {
    value: te,
    children: /* @__PURE__ */ _(TG, y({
      as: h,
      ownerState: V,
      className: fe(I.root, d),
      ref: a
    }, N, {
      children: u
    }))
  });
});
process.env.NODE_ENV !== "production" && (gI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: t.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: t.bool,
  /**
   * If `true`, the component will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: t.bool,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: t.oneOf(["dense", "none", "normal"]),
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: t.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["medium", "small"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: t.oneOf(["filled", "outlined", "standard"])
});
const xG = gI, bI = j4({
  createStyledComponent: J("div", {
    name: "MuiStack",
    slot: "Root",
    overridesResolver: (e, n) => n.root
  }),
  useThemeProps: (e) => Ie({
    props: e,
    name: "MuiStack"
  })
});
process.env.NODE_ENV !== "production" && (bI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Defines the `flex-direction` style property.
   * It is applied for all screen sizes.
   * @default 'column'
   */
  direction: t.oneOfType([t.oneOf(["column-reverse", "column", "row-reverse", "row"]), t.arrayOf(t.oneOf(["column-reverse", "column", "row-reverse", "row"])), t.object]),
  /**
   * Add an element between each child.
   */
  divider: t.node,
  /**
   * Defines the space between immediate children.
   * @default 0
   */
  spacing: t.oneOfType([t.arrayOf(t.oneOfType([t.number, t.string])), t.number, t.object, t.string]),
  /**
   * The system prop, which allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.
   *
   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),
   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.
   *
   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.
   * @default false
   */
  useFlexGap: t.bool
});
const SG = bI, kG = Ye("MuiStack", ["root"]), hde = kG;
function wG(e) {
  return We("MuiFormControlLabel", e);
}
const RG = Ye("MuiFormControlLabel", ["root", "labelPlacementStart", "labelPlacementTop", "labelPlacementBottom", "disabled", "label", "error", "required", "asterisk"]), Hv = RG, EG = ["checked", "className", "componentsProps", "control", "disabled", "disableTypography", "inputRef", "label", "labelPlacement", "name", "onChange", "required", "slotProps", "value"], OG = (e) => {
  const {
    classes: n,
    disabled: a,
    labelPlacement: s,
    error: u,
    required: d
  } = e, p = {
    root: ["root", a && "disabled", `labelPlacement${pe(s)}`, u && "error", d && "required"],
    label: ["label", a && "disabled"],
    asterisk: ["asterisk", u && "error"]
  };
  return He(p, wG, n);
}, PG = J("label", {
  name: "MuiFormControlLabel",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [{
      [`& .${Hv.label}`]: n.label
    }, n.root, n[`labelPlacement${pe(a.labelPlacement)}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  display: "inline-flex",
  alignItems: "center",
  cursor: "pointer",
  // For correct alignment with the text.
  verticalAlign: "middle",
  WebkitTapHighlightColor: "transparent",
  marginLeft: -11,
  marginRight: 16,
  // used for row presentation of radio/checkbox
  [`&.${Hv.disabled}`]: {
    cursor: "default"
  }
}, n.labelPlacement === "start" && {
  flexDirection: "row-reverse",
  marginLeft: 16,
  // used for row presentation of radio/checkbox
  marginRight: -11
}, n.labelPlacement === "top" && {
  flexDirection: "column-reverse",
  marginLeft: 16
}, n.labelPlacement === "bottom" && {
  flexDirection: "column",
  marginLeft: 16
}, {
  [`& .${Hv.label}`]: {
    [`&.${Hv.disabled}`]: {
      color: (e.vars || e).palette.text.disabled
    }
  }
})), DG = J("span", {
  name: "MuiFormControlLabel",
  slot: "Asterisk",
  overridesResolver: (e, n) => n.asterisk
})(({
  theme: e
}) => ({
  [`&.${Hv.error}`]: {
    color: (e.vars || e).palette.error.main
  }
})), yI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u;
  const d = Ie({
    props: n,
    name: "MuiFormControlLabel"
  }), {
    className: p,
    componentsProps: h = {},
    control: g,
    disabled: b,
    disableTypography: x,
    label: S,
    labelPlacement: E = "end",
    required: R,
    slotProps: $ = {}
  } = d, M = le(d, EG), O = is(), N = (s = b ?? g.props.disabled) != null ? s : O == null ? void 0 : O.disabled, V = R ?? g.props.required, I = {
    disabled: N,
    required: V
  };
  ["checked", "name", "onChange", "value", "inputRef"].forEach((U) => {
    typeof g.props[U] > "u" && typeof d[U] < "u" && (I[U] = d[U]);
  });
  const z = ql({
    props: d,
    muiFormControl: O,
    states: ["error"]
  }), B = y({}, d, {
    disabled: N,
    labelPlacement: E,
    required: V,
    error: z.error
  }), P = OG(B), F = (u = $.typography) != null ? u : h.typography;
  let H = S;
  return H != null && H.type !== vo && !x && (H = /* @__PURE__ */ _(vo, y({
    component: "span"
  }, F, {
    className: fe(P.label, F == null ? void 0 : F.className),
    children: H
  }))), /* @__PURE__ */ st(PG, y({
    className: fe(P.root, p),
    ownerState: B,
    ref: a
  }, M, {
    children: [/* @__PURE__ */ k.cloneElement(g, I), V ? /* @__PURE__ */ st(SG, {
      display: "block",
      children: [H, /* @__PURE__ */ st(DG, {
        ownerState: B,
        "aria-hidden": !0,
        className: P.asterisk,
        children: [" ", "*"]
      })]
    }) : H]
  }));
});
process.env.NODE_ENV !== "production" && (yI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component appears selected.
   */
  checked: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  componentsProps: t.shape({
    typography: t.object
  }),
  /**
   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.
   */
  control: t.element.isRequired,
  /**
   * If `true`, the control is disabled.
   */
  disabled: t.bool,
  /**
   * If `true`, the label is rendered as it is passed without an additional typography node.
   */
  disableTypography: t.bool,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * A text or an element to be used in an enclosing label element.
   */
  label: t.node,
  /**
   * The position of the label.
   * @default 'end'
   */
  labelPlacement: t.oneOf(["bottom", "end", "start", "top"]),
  /**
   * @ignore
   */
  name: t.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: t.func,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: t.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: t.shape({
    typography: t.object
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The value of the component.
   */
  value: t.any
});
const vde = yI;
function MG(e) {
  return We("MuiFormGroup", e);
}
const $G = Ye("MuiFormGroup", ["root", "row", "error"]), gde = $G, NG = ["className", "row"], LG = (e) => {
  const {
    classes: n,
    row: a,
    error: s
  } = e;
  return He({
    root: ["root", a && "row", s && "error"]
  }, MG, n);
}, IG = J("div", {
  name: "MuiFormGroup",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.row && n.row];
  }
})(({
  ownerState: e
}) => y({
  display: "flex",
  flexDirection: "column",
  flexWrap: "wrap"
}, e.row && {
  flexDirection: "row"
})), CI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiFormGroup"
  }), {
    className: u,
    row: d = !1
  } = s, p = le(s, NG), h = is(), g = ql({
    props: s,
    muiFormControl: h,
    states: ["error"]
  }), b = y({}, s, {
    row: d,
    error: g.error
  }), x = LG(b);
  return /* @__PURE__ */ _(IG, y({
    className: fe(x.root, u),
    ownerState: b,
    ref: a
  }, p));
});
process.env.NODE_ENV !== "production" && (CI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Display group of elements in a compact row.
   * @default false
   */
  row: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const AG = CI;
function _G(e) {
  return We("MuiFormHelperText", e);
}
const VG = Ye("MuiFormHelperText", ["root", "error", "disabled", "sizeSmall", "sizeMedium", "contained", "focused", "filled", "required"]), gM = VG;
var bM;
const BG = ["children", "className", "component", "disabled", "error", "filled", "focused", "margin", "required", "variant"], zG = (e) => {
  const {
    classes: n,
    contained: a,
    size: s,
    disabled: u,
    error: d,
    filled: p,
    focused: h,
    required: g
  } = e, b = {
    root: ["root", u && "disabled", d && "error", s && `size${pe(s)}`, a && "contained", h && "focused", p && "filled", g && "required"]
  };
  return He(b, _G, n);
}, FG = J("p", {
  name: "MuiFormHelperText",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.size && n[`size${pe(a.size)}`], a.contained && n.contained, a.filled && n.filled];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  color: (e.vars || e).palette.text.secondary
}, e.typography.caption, {
  textAlign: "left",
  marginTop: 3,
  marginRight: 0,
  marginBottom: 0,
  marginLeft: 0,
  [`&.${gM.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${gM.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}, n.size === "small" && {
  marginTop: 4
}, n.contained && {
  marginLeft: 14,
  marginRight: 14
})), TI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiFormHelperText"
  }), {
    children: u,
    className: d,
    component: p = "p"
  } = s, h = le(s, BG), g = is(), b = ql({
    props: s,
    muiFormControl: g,
    states: ["variant", "size", "disabled", "error", "filled", "focused", "required"]
  }), x = y({}, s, {
    component: p,
    contained: b.variant === "filled" || b.variant === "outlined",
    variant: b.variant,
    size: b.size,
    disabled: b.disabled,
    error: b.error,
    filled: b.filled,
    focused: b.focused,
    required: b.required
  }), S = zG(x);
  return /* @__PURE__ */ _(FG, y({
    as: p,
    ownerState: x,
    className: fe(S.root, d),
    ref: a
  }, h, {
    children: u === " " ? (
      // notranslate needed while Google Translate will not fix zero-width space issue
      bM || (bM = /* @__PURE__ */ _("span", {
        className: "notranslate",
        children: "​"
      }))
    ) : u
  }));
});
process.env.NODE_ENV !== "production" && (TI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   *
   * If `' '` is provided, the component reserves one line height for displaying a future message.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the helper text should be displayed in a disabled state.
   */
  disabled: t.bool,
  /**
   * If `true`, helper text should be displayed in an error state.
   */
  error: t.bool,
  /**
   * If `true`, the helper text should use filled classes key.
   */
  filled: t.bool,
  /**
   * If `true`, the helper text should use focused classes key.
   */
  focused: t.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: t.oneOf(["dense"]),
  /**
   * If `true`, the helper text should use required classes key.
   */
  required: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   */
  variant: t.oneOfType([t.oneOf(["filled", "outlined", "standard"]), t.string])
});
const jG = TI;
function UG(e) {
  return We("MuiFormLabel", e);
}
const HG = Ye("MuiFormLabel", ["root", "colorSecondary", "focused", "disabled", "error", "filled", "required", "asterisk"]), Jv = HG, WG = ["children", "className", "color", "component", "disabled", "error", "filled", "focused", "required"], YG = (e) => {
  const {
    classes: n,
    color: a,
    focused: s,
    disabled: u,
    error: d,
    filled: p,
    required: h
  } = e, g = {
    root: ["root", `color${pe(a)}`, u && "disabled", d && "error", p && "filled", s && "focused", h && "required"],
    asterisk: ["asterisk", d && "error"]
  };
  return He(g, UG, n);
}, qG = J("label", {
  name: "MuiFormLabel",
  slot: "Root",
  overridesResolver: ({
    ownerState: e
  }, n) => y({}, n.root, e.color === "secondary" && n.colorSecondary, e.filled && n.filled)
})(({
  theme: e,
  ownerState: n
}) => y({
  color: (e.vars || e).palette.text.secondary
}, e.typography.body1, {
  lineHeight: "1.4375em",
  padding: 0,
  position: "relative",
  [`&.${Jv.focused}`]: {
    color: (e.vars || e).palette[n.color].main
  },
  [`&.${Jv.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${Jv.error}`]: {
    color: (e.vars || e).palette.error.main
  }
})), GG = J("span", {
  name: "MuiFormLabel",
  slot: "Asterisk",
  overridesResolver: (e, n) => n.asterisk
})(({
  theme: e
}) => ({
  [`&.${Jv.error}`]: {
    color: (e.vars || e).palette.error.main
  }
})), xI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiFormLabel"
  }), {
    children: u,
    className: d,
    component: p = "label"
  } = s, h = le(s, WG), g = is(), b = ql({
    props: s,
    muiFormControl: g,
    states: ["color", "required", "focused", "disabled", "error", "filled"]
  }), x = y({}, s, {
    color: b.color || "primary",
    component: p,
    disabled: b.disabled,
    error: b.error,
    filled: b.filled,
    focused: b.focused,
    required: b.required
  }), S = YG(x);
  return /* @__PURE__ */ st(qG, y({
    as: p,
    ownerState: x,
    className: fe(S.root, d),
    ref: a
  }, h, {
    children: [u, b.required && /* @__PURE__ */ st(GG, {
      ownerState: x,
      "aria-hidden": !0,
      className: S.asterisk,
      children: [" ", "*"]
    })]
  }));
});
process.env.NODE_ENV !== "production" && (xI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: t.oneOfType([t.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the label should be displayed in a disabled state.
   */
  disabled: t.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: t.bool,
  /**
   * If `true`, the label should use filled classes key.
   */
  filled: t.bool,
  /**
   * If `true`, the input of this label is focused (used by `FormGroup` components).
   */
  focused: t.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const KG = xI, SI = /* @__PURE__ */ k.createContext();
process.env.NODE_ENV !== "production" && (SI.displayName = "GridContext");
const yM = SI;
function QG(e) {
  return We("MuiGrid", e);
}
const XG = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], ZG = ["column-reverse", "column", "row-reverse", "row"], JG = ["nowrap", "wrap-reverse", "wrap"], kv = ["auto", !0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], eK = Ye("MuiGrid", [
  "root",
  "container",
  "item",
  "zeroMinWidth",
  // spacings
  ...XG.map((e) => `spacing-xs-${e}`),
  // direction values
  ...ZG.map((e) => `direction-xs-${e}`),
  // wrap values
  ...JG.map((e) => `wrap-xs-${e}`),
  // grid sizes for all breakpoints
  ...kv.map((e) => `grid-xs-${e}`),
  ...kv.map((e) => `grid-sm-${e}`),
  ...kv.map((e) => `grid-md-${e}`),
  ...kv.map((e) => `grid-lg-${e}`),
  ...kv.map((e) => `grid-xl-${e}`)
]), pg = eK, tK = ["className", "columns", "columnSpacing", "component", "container", "direction", "item", "rowSpacing", "spacing", "wrap", "zeroMinWidth"];
function Vf(e) {
  const n = parseFloat(e);
  return `${n}${String(e).replace(String(n), "") || "px"}`;
}
function nK({
  theme: e,
  ownerState: n
}) {
  let a;
  return e.breakpoints.keys.reduce((s, u) => {
    let d = {};
    if (n[u] && (a = n[u]), !a)
      return s;
    if (a === !0)
      d = {
        flexBasis: 0,
        flexGrow: 1,
        maxWidth: "100%"
      };
    else if (a === "auto")
      d = {
        flexBasis: "auto",
        flexGrow: 0,
        flexShrink: 0,
        maxWidth: "none",
        width: "auto"
      };
    else {
      const p = kd({
        values: n.columns,
        breakpoints: e.breakpoints.values
      }), h = typeof p == "object" ? p[u] : p;
      if (h == null)
        return s;
      const g = `${Math.round(a / h * 1e8) / 1e6}%`;
      let b = {};
      if (n.container && n.item && n.columnSpacing !== 0) {
        const x = e.spacing(n.columnSpacing);
        if (x !== "0px") {
          const S = `calc(${g} + ${Vf(x)})`;
          b = {
            flexBasis: S,
            maxWidth: S
          };
        }
      }
      d = y({
        flexBasis: g,
        flexGrow: 0,
        maxWidth: g
      }, b);
    }
    return e.breakpoints.values[u] === 0 ? Object.assign(s, d) : s[e.breakpoints.up(u)] = d, s;
  }, {});
}
function oK({
  theme: e,
  ownerState: n
}) {
  const a = kd({
    values: n.direction,
    breakpoints: e.breakpoints.values
  });
  return og({
    theme: e
  }, a, (s) => {
    const u = {
      flexDirection: s
    };
    return s.indexOf("column") === 0 && (u[`& > .${pg.item}`] = {
      maxWidth: "none"
    }), u;
  });
}
function kI({
  breakpoints: e,
  values: n
}) {
  let a = "";
  Object.keys(n).forEach((u) => {
    a === "" && n[u] !== 0 && (a = u);
  });
  const s = Object.keys(e).sort((u, d) => e[u] - e[d]);
  return s.slice(0, s.indexOf(a));
}
function rK({
  theme: e,
  ownerState: n
}) {
  const {
    container: a,
    rowSpacing: s
  } = n;
  let u = {};
  if (a && s !== 0) {
    const d = kd({
      values: s,
      breakpoints: e.breakpoints.values
    });
    let p;
    typeof d == "object" && (p = kI({
      breakpoints: e.breakpoints.values,
      values: d
    })), u = og({
      theme: e
    }, d, (h, g) => {
      var b;
      const x = e.spacing(h);
      return x !== "0px" ? {
        marginTop: `-${Vf(x)}`,
        [`& > .${pg.item}`]: {
          paddingTop: Vf(x)
        }
      } : (b = p) != null && b.includes(g) ? {} : {
        marginTop: 0,
        [`& > .${pg.item}`]: {
          paddingTop: 0
        }
      };
    });
  }
  return u;
}
function aK({
  theme: e,
  ownerState: n
}) {
  const {
    container: a,
    columnSpacing: s
  } = n;
  let u = {};
  if (a && s !== 0) {
    const d = kd({
      values: s,
      breakpoints: e.breakpoints.values
    });
    let p;
    typeof d == "object" && (p = kI({
      breakpoints: e.breakpoints.values,
      values: d
    })), u = og({
      theme: e
    }, d, (h, g) => {
      var b;
      const x = e.spacing(h);
      return x !== "0px" ? {
        width: `calc(100% + ${Vf(x)})`,
        marginLeft: `-${Vf(x)}`,
        [`& > .${pg.item}`]: {
          paddingLeft: Vf(x)
        }
      } : (b = p) != null && b.includes(g) ? {} : {
        width: "100%",
        marginLeft: 0,
        [`& > .${pg.item}`]: {
          paddingLeft: 0
        }
      };
    });
  }
  return u;
}
function iK(e, n, a = {}) {
  if (!e || e <= 0)
    return [];
  if (typeof e == "string" && !Number.isNaN(Number(e)) || typeof e == "number")
    return [a[`spacing-xs-${String(e)}`]];
  const s = [];
  return n.forEach((u) => {
    const d = e[u];
    Number(d) > 0 && s.push(a[`spacing-${u}-${String(d)}`]);
  }), s;
}
const sK = J("div", {
  name: "MuiGrid",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e, {
      container: s,
      direction: u,
      item: d,
      spacing: p,
      wrap: h,
      zeroMinWidth: g,
      breakpoints: b
    } = a;
    let x = [];
    s && (x = iK(p, b, n));
    const S = [];
    return b.forEach((E) => {
      const R = a[E];
      R && S.push(n[`grid-${E}-${String(R)}`]);
    }), [n.root, s && n.container, d && n.item, g && n.zeroMinWidth, ...x, u !== "row" && n[`direction-xs-${String(u)}`], h !== "wrap" && n[`wrap-xs-${String(h)}`], ...S];
  }
})(({
  ownerState: e
}) => y({
  boxSizing: "border-box"
}, e.container && {
  display: "flex",
  flexWrap: "wrap",
  width: "100%"
}, e.item && {
  margin: 0
  // For instance, it's useful when used with a `figure` element.
}, e.zeroMinWidth && {
  minWidth: 0
}, e.wrap !== "wrap" && {
  flexWrap: e.wrap
}), oK, rK, aK, nK);
function lK(e, n) {
  if (!e || e <= 0)
    return [];
  if (typeof e == "string" && !Number.isNaN(Number(e)) || typeof e == "number")
    return [`spacing-xs-${String(e)}`];
  const a = [];
  return n.forEach((s) => {
    const u = e[s];
    if (Number(u) > 0) {
      const d = `spacing-${s}-${String(u)}`;
      a.push(d);
    }
  }), a;
}
const cK = (e) => {
  const {
    classes: n,
    container: a,
    direction: s,
    item: u,
    spacing: d,
    wrap: p,
    zeroMinWidth: h,
    breakpoints: g
  } = e;
  let b = [];
  a && (b = lK(d, g));
  const x = [];
  g.forEach((E) => {
    const R = e[E];
    R && x.push(`grid-${E}-${String(R)}`);
  });
  const S = {
    root: ["root", a && "container", u && "item", h && "zeroMinWidth", ...b, s !== "row" && `direction-xs-${String(s)}`, p !== "wrap" && `wrap-xs-${String(p)}`, ...x]
  };
  return He(S, QG, n);
}, eg = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiGrid"
  }), {
    breakpoints: u
  } = En(), d = yg(s), {
    className: p,
    columns: h,
    columnSpacing: g,
    component: b = "div",
    container: x = !1,
    direction: S = "row",
    item: E = !1,
    rowSpacing: R,
    spacing: $ = 0,
    wrap: M = "wrap",
    zeroMinWidth: O = !1
  } = d, N = le(d, tK), V = R || $, I = g || $, z = k.useContext(yM), B = x ? h || 12 : z, P = {}, F = y({}, N);
  u.keys.forEach((Q) => {
    N[Q] != null && (P[Q] = N[Q], delete F[Q]);
  });
  const H = y({}, d, {
    columns: B,
    container: x,
    direction: S,
    item: E,
    rowSpacing: V,
    columnSpacing: I,
    wrap: M,
    zeroMinWidth: O,
    spacing: $
  }, P, {
    breakpoints: u.keys
  }), U = cK(H);
  return /* @__PURE__ */ _(yM.Provider, {
    value: B,
    children: /* @__PURE__ */ _(sK, y({
      ownerState: H,
      className: fe(U.root, p),
      as: b,
      ref: a
    }, F))
  });
});
process.env.NODE_ENV !== "production" && (eg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The number of columns.
   * @default 12
   */
  columns: t.oneOfType([t.arrayOf(t.number), t.number, t.object]),
  /**
   * Defines the horizontal space between the type `item` components.
   * It overrides the value of the `spacing` prop.
   */
  columnSpacing: t.oneOfType([t.arrayOf(t.oneOfType([t.number, t.string])), t.number, t.object, t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the component will have the flex *container* behavior.
   * You should be wrapping *items* with a *container*.
   * @default false
   */
  container: t.bool,
  /**
   * Defines the `flex-direction` style property.
   * It is applied for all screen sizes.
   * @default 'row'
   */
  direction: t.oneOfType([t.oneOf(["column-reverse", "column", "row-reverse", "row"]), t.arrayOf(t.oneOf(["column-reverse", "column", "row-reverse", "row"])), t.object]),
  /**
   * If `true`, the component will have the flex *item* behavior.
   * You should be wrapping *items* with a *container*.
   * @default false
   */
  item: t.bool,
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `lg` breakpoint and wider screens if not overridden.
   * @default false
   */
  lg: t.oneOfType([t.oneOf(["auto"]), t.number, t.bool]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `md` breakpoint and wider screens if not overridden.
   * @default false
   */
  md: t.oneOfType([t.oneOf(["auto"]), t.number, t.bool]),
  /**
   * Defines the vertical space between the type `item` components.
   * It overrides the value of the `spacing` prop.
   */
  rowSpacing: t.oneOfType([t.arrayOf(t.oneOfType([t.number, t.string])), t.number, t.object, t.string]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `sm` breakpoint and wider screens if not overridden.
   * @default false
   */
  sm: t.oneOfType([t.oneOf(["auto"]), t.number, t.bool]),
  /**
   * Defines the space between the type `item` components.
   * It can only be used on a type `container` component.
   * @default 0
   */
  spacing: t.oneOfType([t.arrayOf(t.oneOfType([t.number, t.string])), t.number, t.object, t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Defines the `flex-wrap` style property.
   * It's applied for all screen sizes.
   * @default 'wrap'
   */
  wrap: t.oneOf(["nowrap", "wrap-reverse", "wrap"]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `xl` breakpoint and wider screens if not overridden.
   * @default false
   */
  xl: t.oneOfType([t.oneOf(["auto"]), t.number, t.bool]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for all the screen sizes with the lowest priority.
   * @default false
   */
  xs: t.oneOfType([t.oneOf(["auto"]), t.number, t.bool]),
  /**
   * If `true`, it sets `min-width: 0` on the item.
   * Refer to the limitations section of the documentation to better understand the use case.
   * @default false
   */
  zeroMinWidth: t.bool
});
if (process.env.NODE_ENV !== "production") {
  const e = vN("Grid", eg);
  eg["propTypes"] = y({}, eg.propTypes, {
    direction: e("container"),
    lg: e("item"),
    md: e("item"),
    sm: e("item"),
    spacing: e("container"),
    wrap: e("container"),
    xs: e("item"),
    zeroMinWidth: e("item")
  });
}
const bde = eg, wI = L4({
  createStyledComponent: J("div", {
    name: "MuiGrid2",
    slot: "Root",
    overridesResolver: (e, n) => n.root
  }),
  componentName: "MuiGrid2",
  useThemeProps: (e) => Ie({
    props: e,
    name: "MuiGrid2"
  })
});
process.env.NODE_ENV !== "production" && (wI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * @ignore
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const yde = wI;
function Cde(e) {
  return We("MuiGrid2", e);
}
const uK = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], dK = ["column-reverse", "column", "row-reverse", "row"], pK = ["nowrap", "wrap-reverse", "wrap"], wv = ["auto", !0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], fK = Ye("MuiGrid2", [
  "root",
  "container",
  "item",
  "zeroMinWidth",
  // spacings
  ...uK.map((e) => `spacing-xs-${e}`),
  // direction values
  ...dK.map((e) => `direction-xs-${e}`),
  // wrap values
  ...pK.map((e) => `wrap-xs-${e}`),
  // grid sizes for all breakpoints
  ...wv.map((e) => `grid-xs-${e}`),
  ...wv.map((e) => `grid-sm-${e}`),
  ...wv.map((e) => `grid-md-${e}`),
  ...wv.map((e) => `grid-lg-${e}`),
  ...wv.map((e) => `grid-xl-${e}`)
]), Tde = fK, mK = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"];
function Pw(e) {
  return `scale(${e}, ${e ** 2})`;
}
const hK = {
  entering: {
    opacity: 1,
    transform: Pw(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, iw = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), b1 = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const {
    addEndListener: s,
    appear: u = !0,
    children: d,
    easing: p,
    in: h,
    onEnter: g,
    onEntered: b,
    onEntering: x,
    onExit: S,
    onExited: E,
    onExiting: R,
    style: $,
    timeout: M = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: O = Dd
  } = n, N = le(n, mK), V = Fl(), I = k.useRef(), z = En(), B = k.useRef(null), P = cn(B, d.ref, a), F = (X) => (oe) => {
    if (X) {
      const ie = B.current;
      oe === void 0 ? X(ie) : X(ie, oe);
    }
  }, H = F(x), U = F((X, oe) => {
    YT(X);
    const {
      duration: ie,
      delay: K,
      easing: ne
    } = os({
      style: $,
      timeout: M,
      easing: p
    }, {
      mode: "enter"
    });
    let se;
    M === "auto" ? (se = z.transitions.getAutoHeightDuration(X.clientHeight), I.current = se) : se = ie, X.style.transition = [z.transitions.create("opacity", {
      duration: se,
      delay: K
    }), z.transitions.create("transform", {
      duration: iw ? se : se * 0.666,
      delay: K,
      easing: ne
    })].join(","), g && g(X, oe);
  }), Q = F(b), Y = F(R), te = F((X) => {
    const {
      duration: oe,
      delay: ie,
      easing: K
    } = os({
      style: $,
      timeout: M,
      easing: p
    }, {
      mode: "exit"
    });
    let ne;
    M === "auto" ? (ne = z.transitions.getAutoHeightDuration(X.clientHeight), I.current = ne) : ne = oe, X.style.transition = [z.transitions.create("opacity", {
      duration: ne,
      delay: ie
    }), z.transitions.create("transform", {
      duration: iw ? ne : ne * 0.666,
      delay: iw ? ie : ie || ne * 0.333,
      easing: K
    })].join(","), X.style.opacity = 0, X.style.transform = Pw(0.75), S && S(X);
  }), Z = F(E);
  return /* @__PURE__ */ _(O, y({
    appear: u,
    in: h,
    nodeRef: B,
    onEnter: U,
    onEntered: Q,
    onEntering: H,
    onExit: te,
    onExited: Z,
    onExiting: Y,
    addEndListener: (X) => {
      M === "auto" && V.start(I.current || 0, X), s && s(B.current, X);
    },
    timeout: M === "auto" ? null : M
  }, N, {
    children: (X, oe) => /* @__PURE__ */ k.cloneElement(d, y({
      style: y({
        opacity: 0,
        transform: Pw(0.75),
        visibility: X === "exited" && !h ? "hidden" : void 0
      }, hK[X], $, d.props.style),
      ref: P
    }, oe))
  }));
});
process.env.NODE_ENV !== "production" && (b1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: t.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: t.bool,
  /**
   * A single child content element.
   */
  children: su.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: t.oneOfType([t.shape({
    enter: t.string,
    exit: t.string
  }), t.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: t.bool,
  /**
   * @ignore
   */
  onEnter: t.func,
  /**
   * @ignore
   */
  onEntered: t.func,
  /**
   * @ignore
   */
  onEntering: t.func,
  /**
   * @ignore
   */
  onExit: t.func,
  /**
   * @ignore
   */
  onExited: t.func,
  /**
   * @ignore
   */
  onExiting: t.func,
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: t.oneOfType([t.oneOf(["auto"]), t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })])
});
b1.muiSupportAuto = !0;
const fg = b1, vK = ["initialWidth", "width"], tu = ["xs", "sm", "md", "lg", "xl"], gK = (e, n, a = !0) => a ? tu.indexOf(e) <= tu.indexOf(n) : tu.indexOf(e) < tu.indexOf(n), bK = (e, n, a = !1) => a ? tu.indexOf(n) <= tu.indexOf(e) : tu.indexOf(n) < tu.indexOf(e), yK = (e = {}) => (n) => {
  const {
    withTheme: a = !1,
    noSSR: s = !1,
    initialWidth: u
  } = e;
  function d(p) {
    const h = En(), g = p.theme || h, b = zw({
      theme: g,
      name: "MuiWithWidth",
      props: p
    }), {
      initialWidth: x,
      width: S
    } = b, E = le(b, vK), [R, $] = k.useState(!1);
    ro(() => {
      $(!0);
    }, []);
    const O = g.breakpoints.keys.slice().reverse().reduce((V, I) => {
      const z = Tg(g.breakpoints.up(I));
      return !V && z ? I : V;
    }, null), N = y({
      width: S || (R || s ? O : void 0) || x || u
    }, a ? {
      theme: g
    } : {}, E);
    return N.width === void 0 ? null : /* @__PURE__ */ _(n, y({}, N));
  }
  return process.env.NODE_ENV !== "production" && (d.propTypes = {
    /**
     * As `window.innerWidth` is unavailable on the server,
     * we default to rendering an empty component during the first mount.
     * You might want to use a heuristic to approximate
     * the screen width of the client browser screen width.
     *
     * For instance, you could be using the user-agent or the client-hints.
     * https://caniuse.com/#search=client%20hint
     */
    initialWidth: t.oneOf(["xs", "sm", "md", "lg", "xl"]),
    /**
     * @ignore
     */
    theme: t.object,
    /**
     * Bypass the width calculation logic.
     */
    width: t.oneOf(["xs", "sm", "md", "lg", "xl"])
  }), process.env.NODE_ENV !== "production" && (d.displayName = `WithWidth(${Vw(n)})`), d;
}, CK = yK;
function NT(e) {
  const {
    children: n,
    only: a,
    width: s
  } = e, u = En();
  let d = !0;
  if (a)
    if (Array.isArray(a))
      for (let p = 0; p < a.length; p += 1) {
        const h = a[p];
        if (s === h) {
          d = !1;
          break;
        }
      }
    else
      a && s === a && (d = !1);
  if (d)
    for (let p = 0; p < u.breakpoints.keys.length; p += 1) {
      const h = u.breakpoints.keys[p], g = e[`${h}Up`], b = e[`${h}Down`];
      if (g && gK(h, s) || b && bK(h, s)) {
        d = !1;
        break;
      }
    }
  return d ? /* @__PURE__ */ _(k.Fragment, {
    children: n
  }) : null;
}
process.env.NODE_ENV !== "production" && (NT.propTypes = {
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  lgDown: t.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  lgUp: t.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  mdDown: t.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  mdUp: t.bool,
  /**
   * Hide the given breakpoint(s).
   */
  only: t.oneOfType([t.oneOf(["xs", "sm", "md", "lg", "xl"]), t.arrayOf(t.oneOf(["xs", "sm", "md", "lg", "xl"]))]),
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  smDown: t.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  smUp: t.bool,
  /**
   * @ignore
   * width prop provided by withWidth decorator.
   */
  width: t.string.isRequired,
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  xlDown: t.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  xlUp: t.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  xsDown: t.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  // eslint-disable-next-line react/no-unused-prop-types
  xsUp: t.bool
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (NT.propTypes = Pd(NT.propTypes));
const TK = CK()(NT);
function xK(e) {
  return We("PrivateHiddenCss", e);
}
Ye("PrivateHiddenCss", ["root", "xlDown", "xlUp", "onlyXl", "lgDown", "lgUp", "onlyLg", "mdDown", "mdUp", "onlyMd", "smDown", "smUp", "onlySm", "xsDown", "xsUp", "onlyXs"]);
const SK = ["children", "className", "only"], kK = (e) => {
  const {
    classes: n,
    breakpoints: a
  } = e, s = {
    root: ["root", ...a.map(({
      breakpoint: u,
      dir: d
    }) => d === "only" ? `${d}${pe(u)}` : `${u}${pe(d)}`)]
  };
  return He(s, xK, n);
}, wK = J("div", {
  name: "PrivateHiddenCss",
  slot: "Root"
})(({
  theme: e,
  ownerState: n
}) => {
  const a = {
    display: "none"
  };
  return y({}, n.breakpoints.map(({
    breakpoint: s,
    dir: u
  }) => u === "only" ? {
    [e.breakpoints.only(s)]: a
  } : u === "up" ? {
    [e.breakpoints.up(s)]: a
  } : {
    [e.breakpoints.down(s)]: a
  }).reduce((s, u) => (Object.keys(u).forEach((d) => {
    s[d] = u[d];
  }), s), {}));
});
function RI(e) {
  const {
    children: n,
    className: a,
    only: s
  } = e, u = le(e, SK), d = En();
  if (process.env.NODE_ENV !== "production") {
    const b = Object.keys(u).filter((x) => {
      const S = !d.breakpoints.keys.some((E) => `${E}Up` === x || `${E}Down` === x);
      return !["classes", "theme", "isRtl", "sx"].includes(x) && S;
    });
    b.length > 0 && console.error(`MUI: Unsupported props received by \`<Hidden implementation="css" />\`: ${b.join(", ")}. Did you forget to wrap this component in a ThemeProvider declaring these breakpoints?`);
  }
  const p = [];
  for (let b = 0; b < d.breakpoints.keys.length; b += 1) {
    const x = d.breakpoints.keys[b], S = u[`${x}Up`], E = u[`${x}Down`];
    S && p.push({
      breakpoint: x,
      dir: "up"
    }), E && p.push({
      breakpoint: x,
      dir: "down"
    });
  }
  s && (Array.isArray(s) ? s : [s]).forEach((x) => {
    p.push({
      breakpoint: x,
      dir: "only"
    });
  });
  const h = y({}, e, {
    breakpoints: p
  }), g = kK(h);
  return /* @__PURE__ */ _(wK, {
    className: fe(g.root, a),
    ownerState: h,
    children: n
  });
}
process.env.NODE_ENV !== "production" && (RI.propTypes = {
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Specify which implementation to use.  'js' is the default, 'css' works better for
   * server-side rendering.
   */
  implementation: t.oneOf(["js", "css"]),
  /**
   * If `true`, screens this size and down are hidden.
   */
  lgDown: t.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  lgUp: t.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  mdDown: t.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  mdUp: t.bool,
  /**
   * Hide the given breakpoint(s).
   */
  only: t.oneOfType([t.oneOf(["xs", "sm", "md", "lg", "xl"]), t.arrayOf(t.oneOf(["xs", "sm", "md", "lg", "xl"]))]),
  /**
   * If `true`, screens this size and down are hidden.
   */
  smDown: t.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  smUp: t.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  xlDown: t.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  xlUp: t.bool,
  /**
   * If `true`, screens this size and down are hidden.
   */
  xsDown: t.bool,
  /**
   * If `true`, screens this size and up are hidden.
   */
  xsUp: t.bool
});
const RK = ["implementation", "lgDown", "lgUp", "mdDown", "mdUp", "smDown", "smUp", "xlDown", "xlUp", "xsDown", "xsUp"];
function EK(e) {
  const {
    implementation: n = "js",
    lgDown: a = !1,
    lgUp: s = !1,
    mdDown: u = !1,
    mdUp: d = !1,
    smDown: p = !1,
    smUp: h = !1,
    xlDown: g = !1,
    xlUp: b = !1,
    xsDown: x = !1,
    xsUp: S = !1
  } = e, E = le(e, RK);
  return n === "js" ? /* @__PURE__ */ _(TK, y({
    lgDown: a,
    lgUp: s,
    mdDown: u,
    mdUp: d,
    smDown: p,
    smUp: h,
    xlDown: g,
    xlUp: b,
    xsDown: x,
    xsUp: S
  }, E)) : /* @__PURE__ */ _(RI, y({
    lgDown: a,
    lgUp: s,
    mdDown: u,
    mdUp: d,
    smDown: p,
    smUp: h,
    xlDown: g,
    xlUp: b,
    xsDown: x,
    xsUp: S
  }, E));
}
process.env.NODE_ENV !== "production" && (EK.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Specify which implementation to use.  'js' is the default, 'css' works better for
   * server-side rendering.
   * @default 'js'
   */
  implementation: t.oneOf(["css", "js"]),
  /**
   * You can use this prop when choosing the `js` implementation with server-side rendering.
   *
   * As `window.innerWidth` is unavailable on the server,
   * we default to rendering an empty component during the first mount.
   * You might want to use a heuristic to approximate
   * the screen width of the client browser screen width.
   *
   * For instance, you could be using the user-agent or the client-hints.
   * https://caniuse.com/#search=client%20hint
   */
  initialWidth: t.oneOf(["xs", "sm", "md", "lg", "xl"]),
  /**
   * If `true`, component is hidden on screens below (but not including) this size.
   * @default false
   */
  lgDown: t.bool,
  /**
   * If `true`, component is hidden on screens this size and above.
   * @default false
   */
  lgUp: t.bool,
  /**
   * If `true`, component is hidden on screens below (but not including) this size.
   * @default false
   */
  mdDown: t.bool,
  /**
   * If `true`, component is hidden on screens this size and above.
   * @default false
   */
  mdUp: t.bool,
  /**
   * Hide the given breakpoint(s).
   */
  only: t.oneOfType([t.oneOf(["xs", "sm", "md", "lg", "xl"]), t.arrayOf(t.oneOf(["xs", "sm", "md", "lg", "xl"]).isRequired)]),
  /**
   * If `true`, component is hidden on screens below (but not including) this size.
   * @default false
   */
  smDown: t.bool,
  /**
   * If `true`, component is hidden on screens this size and above.
   * @default false
   */
  smUp: t.bool,
  /**
   * If `true`, component is hidden on screens below (but not including) this size.
   * @default false
   */
  xlDown: t.bool,
  /**
   * If `true`, component is hidden on screens this size and above.
   * @default false
   */
  xlUp: t.bool,
  /**
   * If `true`, component is hidden on screens below (but not including) this size.
   * @default false
   */
  xsDown: t.bool,
  /**
   * If `true`, component is hidden on screens this size and above.
   * @default false
   */
  xsUp: t.bool
});
function OK(e) {
  return We("MuiIcon", e);
}
const PK = Ye("MuiIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]), xde = PK, DK = ["baseClassName", "className", "color", "component", "fontSize"], MK = (e) => {
  const {
    color: n,
    fontSize: a,
    classes: s
  } = e, u = {
    root: ["root", n !== "inherit" && `color${pe(n)}`, `fontSize${pe(a)}`]
  };
  return He(u, OK, s);
}, $K = J("span", {
  name: "MuiIcon",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.color !== "inherit" && n[`color${pe(a.color)}`], n[`fontSize${pe(a.fontSize)}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => ({
  userSelect: "none",
  width: "1em",
  height: "1em",
  // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541
  // To remove at some point.
  overflow: "hidden",
  display: "inline-block",
  // allow overflow hidden to take action
  textAlign: "center",
  // support non-square icon
  flexShrink: 0,
  fontSize: {
    inherit: "inherit",
    small: e.typography.pxToRem(20),
    medium: e.typography.pxToRem(24),
    large: e.typography.pxToRem(36)
  }[n.fontSize],
  // TODO v5 deprecate, v6 remove for sx
  color: {
    primary: (e.vars || e).palette.primary.main,
    secondary: (e.vars || e).palette.secondary.main,
    info: (e.vars || e).palette.info.main,
    success: (e.vars || e).palette.success.main,
    warning: (e.vars || e).palette.warning.main,
    action: (e.vars || e).palette.action.active,
    error: (e.vars || e).palette.error.main,
    disabled: (e.vars || e).palette.action.disabled,
    inherit: void 0
  }[n.color]
})), y1 = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiIcon"
  }), {
    baseClassName: u = "material-icons",
    className: d,
    color: p = "inherit",
    component: h = "span",
    fontSize: g = "medium"
  } = s, b = le(s, DK), x = y({}, s, {
    baseClassName: u,
    color: p,
    component: h,
    fontSize: g
  }), S = MK(x);
  return /* @__PURE__ */ _($K, y({
    as: h,
    className: fe(
      u,
      // Prevent the translation of the text content.
      // The font relies on the exact text content to render the icon.
      "notranslate",
      S.root,
      d
    ),
    ownerState: x,
    "aria-hidden": !0,
    ref: a
  }, b));
});
process.env.NODE_ENV !== "production" && (y1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The base class applied to the icon. Defaults to 'material-icons', but can be changed to any
   * other base class that suits the icon font you're using (e.g. material-icons-rounded, fas, etc).
   * @default 'material-icons'
   */
  baseClassName: t.string,
  /**
   * The name of the icon font ligature.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'inherit'
   */
  color: t.oneOfType([t.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: t.oneOfType([t.oneOf(["inherit", "large", "medium", "small"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
y1.muiName = "Icon";
const Sde = y1;
function NK(e) {
  return We("MuiImageList", e);
}
const LK = Ye("MuiImageList", ["root", "masonry", "quilted", "standard", "woven"]), kde = LK, EI = /* @__PURE__ */ k.createContext({});
process.env.NODE_ENV !== "production" && (EI.displayName = "ImageListContext");
const OI = EI, IK = ["children", "className", "cols", "component", "rowHeight", "gap", "style", "variant"], AK = (e) => {
  const {
    classes: n,
    variant: a
  } = e;
  return He({
    root: ["root", a]
  }, NK, n);
}, _K = J("ul", {
  name: "MuiImageList",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[a.variant]];
  }
})(({
  ownerState: e
}) => y({
  display: "grid",
  overflowY: "auto",
  listStyle: "none",
  padding: 0,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
}, e.variant === "masonry" && {
  display: "block"
})), PI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiImageList"
  }), {
    children: u,
    className: d,
    cols: p = 2,
    component: h = "ul",
    rowHeight: g = "auto",
    gap: b = 4,
    style: x,
    variant: S = "standard"
  } = s, E = le(s, IK), R = k.useMemo(() => ({
    rowHeight: g,
    gap: b,
    variant: S
  }), [g, b, S]);
  k.useEffect(() => {
    process.env.NODE_ENV !== "production" && document !== void 0 && !("objectFit" in document.documentElement.style) && console.error(["MUI: ImageList v5+ no longer natively supports Internet Explorer.", "Use v4 of this component instead, or polyfill CSS object-fit."].join(`
`));
  }, []);
  const $ = S === "masonry" ? y({
    columnCount: p,
    columnGap: b
  }, x) : y({
    gridTemplateColumns: `repeat(${p}, 1fr)`,
    gap: b
  }, x), M = y({}, s, {
    component: h,
    gap: b,
    rowHeight: g,
    variant: S
  }), O = AK(M);
  return /* @__PURE__ */ _(_K, y({
    as: h,
    className: fe(O.root, O[S], d),
    ref: a,
    style: $,
    ownerState: M
  }, E, {
    children: /* @__PURE__ */ _(OI.Provider, {
      value: R,
      children: u
    })
  }));
});
process.env.NODE_ENV !== "production" && (PI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `ImageListItem`s.
   */
  children: t.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Number of columns.
   * @default 2
   */
  cols: Ro,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The gap between items in px.
   * @default 4
   */
  gap: t.number,
  /**
   * The height of one row in px.
   * @default 'auto'
   */
  rowHeight: t.oneOfType([t.oneOf(["auto"]), t.number]),
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: t.oneOfType([t.oneOf(["masonry", "quilted", "standard", "woven"]), t.string])
});
const wde = PI;
function VK(e) {
  return We("MuiImageListItem", e);
}
const BK = Ye("MuiImageListItem", ["root", "img", "standard", "woven", "masonry", "quilted"]), CM = BK, zK = ["children", "className", "cols", "component", "rows", "style"], FK = (e) => {
  const {
    classes: n,
    variant: a
  } = e;
  return He({
    root: ["root", a],
    img: ["img"]
  }, VK, n);
}, jK = J("li", {
  name: "MuiImageListItem",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [{
      [`& .${CM.img}`]: n.img
    }, n.root, n[a.variant]];
  }
})(({
  ownerState: e
}) => y({
  display: "block",
  position: "relative"
}, e.variant === "standard" && {
  // For titlebar under list item
  display: "flex",
  flexDirection: "column"
}, e.variant === "woven" && {
  height: "100%",
  alignSelf: "center",
  "&:nth-of-type(even)": {
    height: "70%"
  }
}, {
  [`& .${CM.img}`]: y({
    objectFit: "cover",
    width: "100%",
    height: "100%",
    display: "block"
  }, e.variant === "standard" && {
    height: "auto",
    flexGrow: 1
  })
})), DI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiImageListItem"
  }), {
    children: u,
    className: d,
    cols: p = 1,
    component: h = "li",
    rows: g = 1,
    style: b
  } = s, x = le(s, zK), {
    rowHeight: S = "auto",
    gap: E,
    variant: R
  } = k.useContext(OI);
  let $ = "auto";
  R === "woven" ? $ = void 0 : S !== "auto" && ($ = S * g + E * (g - 1));
  const M = y({}, s, {
    cols: p,
    component: h,
    gap: E,
    rowHeight: S,
    rows: g,
    variant: R
  }), O = FK(M);
  return /* @__PURE__ */ _(jK, y({
    as: h,
    className: fe(O.root, O[R], d),
    ref: a,
    style: y({
      height: $,
      gridColumnEnd: R !== "masonry" ? `span ${p}` : void 0,
      gridRowEnd: R !== "masonry" ? `span ${g}` : void 0,
      marginBottom: R === "masonry" ? E : void 0,
      breakInside: R === "masonry" ? "avoid" : void 0
    }, b),
    ownerState: M
  }, x, {
    children: k.Children.map(u, (N) => /* @__PURE__ */ k.isValidElement(N) ? (process.env.NODE_ENV !== "production" && as.isFragment(N) && console.error(["MUI: The ImageListItem component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), N.type === "img" || Hs(N, ["Image"]) ? /* @__PURE__ */ k.cloneElement(N, {
      className: fe(O.img, N.props.className)
    }) : N) : null)
  }));
});
process.env.NODE_ENV !== "production" && (DI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally an `<img>`.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Width of the item in number of grid columns.
   * @default 1
   */
  cols: Ro,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Height of the item in number of grid rows.
   * @default 1
   */
  rows: Ro,
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Rde = DI;
function UK(e) {
  return We("MuiImageListItemBar", e);
}
const HK = Ye("MuiImageListItemBar", ["root", "positionBottom", "positionTop", "positionBelow", "titleWrap", "titleWrapBottom", "titleWrapTop", "titleWrapBelow", "titleWrapActionPosLeft", "titleWrapActionPosRight", "title", "subtitle", "actionIcon", "actionIconActionPosLeft", "actionIconActionPosRight"]), Ede = HK, WK = ["actionIcon", "actionPosition", "className", "subtitle", "title", "position"], YK = (e) => {
  const {
    classes: n,
    position: a,
    actionIcon: s,
    actionPosition: u
  } = e, d = {
    root: ["root", `position${pe(a)}`],
    titleWrap: ["titleWrap", `titleWrap${pe(a)}`, s && `titleWrapActionPos${pe(u)}`],
    title: ["title"],
    subtitle: ["subtitle"],
    actionIcon: ["actionIcon", `actionIconActionPos${pe(u)}`]
  };
  return He(d, UK, n);
}, qK = J("div", {
  name: "MuiImageListItemBar",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[`position${pe(a.position)}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  position: "absolute",
  left: 0,
  right: 0,
  background: "rgba(0, 0, 0, 0.5)",
  display: "flex",
  alignItems: "center",
  fontFamily: e.typography.fontFamily
}, n.position === "bottom" && {
  bottom: 0
}, n.position === "top" && {
  top: 0
}, n.position === "below" && {
  position: "relative",
  background: "transparent",
  alignItems: "normal"
})), GK = J("div", {
  name: "MuiImageListItemBar",
  slot: "TitleWrap",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.titleWrap, n[`titleWrap${pe(a.position)}`], a.actionIcon && n[`titleWrapActionPos${pe(a.actionPosition)}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  flexGrow: 1,
  padding: "12px 16px",
  color: (e.vars || e).palette.common.white,
  overflow: "hidden"
}, n.position === "below" && {
  padding: "6px 0 12px",
  color: "inherit"
}, n.actionIcon && n.actionPosition === "left" && {
  paddingLeft: 0
}, n.actionIcon && n.actionPosition === "right" && {
  paddingRight: 0
})), KK = J("div", {
  name: "MuiImageListItemBar",
  slot: "Title",
  overridesResolver: (e, n) => n.title
})(({
  theme: e
}) => ({
  fontSize: e.typography.pxToRem(16),
  lineHeight: "24px",
  textOverflow: "ellipsis",
  overflow: "hidden",
  whiteSpace: "nowrap"
})), QK = J("div", {
  name: "MuiImageListItemBar",
  slot: "Subtitle",
  overridesResolver: (e, n) => n.subtitle
})(({
  theme: e
}) => ({
  fontSize: e.typography.pxToRem(12),
  lineHeight: 1,
  textOverflow: "ellipsis",
  overflow: "hidden",
  whiteSpace: "nowrap"
})), XK = J("div", {
  name: "MuiImageListItemBar",
  slot: "ActionIcon",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.actionIcon, n[`actionIconActionPos${pe(a.actionPosition)}`]];
  }
})(({
  ownerState: e
}) => y({}, e.actionPosition === "left" && {
  order: -1
})), MI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiImageListItemBar"
  }), {
    actionIcon: u,
    actionPosition: d = "right",
    className: p,
    subtitle: h,
    title: g,
    position: b = "bottom"
  } = s, x = le(s, WK), S = y({}, s, {
    position: b,
    actionPosition: d
  }), E = YK(S);
  return /* @__PURE__ */ st(qK, y({
    ownerState: S,
    className: fe(E.root, p),
    ref: a
  }, x, {
    children: [/* @__PURE__ */ st(GK, {
      ownerState: S,
      className: E.titleWrap,
      children: [/* @__PURE__ */ _(KK, {
        className: E.title,
        children: g
      }), h ? /* @__PURE__ */ _(QK, {
        className: E.subtitle,
        children: h
      }) : null]
    }), u ? /* @__PURE__ */ _(XK, {
      ownerState: S,
      className: E.actionIcon,
      children: u
    }) : null]
  }));
});
process.env.NODE_ENV !== "production" && (MI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An IconButton element to be used as secondary action target
   * (primary action target is the item itself).
   */
  actionIcon: t.node,
  /**
   * Position of secondary action IconButton.
   * @default 'right'
   */
  actionPosition: t.oneOf(["left", "right"]),
  /**
   * @ignore
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Position of the title bar.
   * @default 'bottom'
   */
  position: t.oneOf(["below", "bottom", "top"]),
  /**
   * String or element serving as subtitle (support text).
   */
  subtitle: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Title to be displayed.
   */
  title: t.node
});
const Ode = MI, ZK = ["disableUnderline", "components", "componentsProps", "fullWidth", "inputComponent", "multiline", "slotProps", "slots", "type"], JK = (e) => {
  const {
    classes: n,
    disableUnderline: a
  } = e, u = He({
    root: ["root", !a && "underline"],
    input: ["input"]
  }, f9, n);
  return y({}, n, u);
}, eQ = J(JT, {
  shouldForwardProp: (e) => Vo(e) || e === "classes",
  name: "MuiInput",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [...XT(e, n), !a.disableUnderline && n.underline];
  }
})(({
  theme: e,
  ownerState: n
}) => {
  let s = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return e.vars && (s = `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`), y({
    position: "relative"
  }, n.formControl && {
    "label + &": {
      marginTop: 16
    }
  }, !n.disableUnderline && {
    "&::after": {
      borderBottom: `2px solid ${(e.vars || e).palette[n.color].main}`,
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '""',
      position: "absolute",
      right: 0,
      transform: "scaleX(0)",
      transition: e.transitions.create("transform", {
        duration: e.transitions.duration.shorter,
        easing: e.transitions.easing.easeOut
      }),
      pointerEvents: "none"
      // Transparent to the hover style.
    },
    [`&.${eu.focused}:after`]: {
      // translateX(0) is a workaround for Safari transform scale bug
      // See https://github.com/mui/material-ui/issues/31766
      transform: "scaleX(1) translateX(0)"
    },
    [`&.${eu.error}`]: {
      "&::before, &::after": {
        borderBottomColor: (e.vars || e).palette.error.main
      }
    },
    "&::before": {
      borderBottom: `1px solid ${s}`,
      left: 0,
      bottom: 0,
      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
      content: '"\\00a0"',
      position: "absolute",
      right: 0,
      transition: e.transitions.create("border-bottom-color", {
        duration: e.transitions.duration.shorter
      }),
      pointerEvents: "none"
      // Transparent to the hover style.
    },
    [`&:hover:not(.${eu.disabled}, .${eu.error}):before`]: {
      borderBottom: `2px solid ${(e.vars || e).palette.text.primary}`,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        borderBottom: `1px solid ${s}`
      }
    },
    [`&.${eu.disabled}:before`]: {
      borderBottomStyle: "dotted"
    }
  });
}), tQ = J(ex, {
  name: "MuiInput",
  slot: "Input",
  overridesResolver: ZT
})({}), C1 = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d, p;
  const h = Ie({
    props: n,
    name: "MuiInput"
  }), {
    disableUnderline: g,
    components: b = {},
    componentsProps: x,
    fullWidth: S = !1,
    inputComponent: E = "input",
    multiline: R = !1,
    slotProps: $,
    slots: M = {},
    type: O = "text"
  } = h, N = le(h, ZK), V = JK(h), z = {
    root: {
      ownerState: {
        disableUnderline: g
      }
    }
  }, B = $ ?? x ? ns($ ?? x, z) : z, P = (s = (u = M.root) != null ? u : b.Root) != null ? s : eQ, F = (d = (p = M.input) != null ? p : b.Input) != null ? d : tQ;
  return /* @__PURE__ */ _(tx, y({
    slots: {
      root: P,
      input: F
    },
    slotProps: B,
    fullWidth: S,
    inputComponent: E,
    multiline: R,
    ref: a,
    type: O
  }, N, {
    classes: V
  }));
});
process.env.NODE_ENV !== "production" && (C1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: t.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: t.oneOfType([t.oneOf(["primary", "secondary"]), t.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    Input: t.elementType,
    Root: t.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: t.shape({
    input: t.object,
    root: t.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: t.bool,
  /**
   * If `true`, the `input` will not have an underline.
   */
  disableUnderline: t.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: t.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: t.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * The id of the `input` element.
   */
  id: t.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: t.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: t.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: t.oneOfType([t.number, t.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: t.oneOfType([t.number, t.string]),
  /**
   * If `true`, a [TextareaAutosize](/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: t.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: t.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: t.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: t.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: t.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: t.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: t.oneOfType([t.number, t.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: t.shape({
    input: t.object,
    root: t.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: t.shape({
    input: t.elementType,
    root: t.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: t.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: t.any
});
C1.muiName = "Input";
const T1 = C1;
function nQ(e) {
  return We("MuiInputAdornment", e);
}
const oQ = Ye("MuiInputAdornment", ["root", "filled", "standard", "outlined", "positionStart", "positionEnd", "disablePointerEvents", "hiddenLabel", "sizeSmall"]), TM = oQ;
var xM;
const rQ = ["children", "className", "component", "disablePointerEvents", "disableTypography", "position", "variant"], aQ = (e, n) => {
  const {
    ownerState: a
  } = e;
  return [n.root, n[`position${pe(a.position)}`], a.disablePointerEvents === !0 && n.disablePointerEvents, n[a.variant]];
}, iQ = (e) => {
  const {
    classes: n,
    disablePointerEvents: a,
    hiddenLabel: s,
    position: u,
    size: d,
    variant: p
  } = e, h = {
    root: ["root", a && "disablePointerEvents", u && `position${pe(u)}`, p, s && "hiddenLabel", d && `size${pe(d)}`]
  };
  return He(h, nQ, n);
}, sQ = J("div", {
  name: "MuiInputAdornment",
  slot: "Root",
  overridesResolver: aQ
})(({
  theme: e,
  ownerState: n
}) => y({
  display: "flex",
  height: "0.01em",
  // Fix IE11 flexbox alignment. To remove at some point.
  maxHeight: "2em",
  alignItems: "center",
  whiteSpace: "nowrap",
  color: (e.vars || e).palette.action.active
}, n.variant === "filled" && {
  // Styles applied to the root element if `variant="filled"`.
  [`&.${TM.positionStart}&:not(.${TM.hiddenLabel})`]: {
    marginTop: 16
  }
}, n.position === "start" && {
  // Styles applied to the root element if `position="start"`.
  marginRight: 8
}, n.position === "end" && {
  // Styles applied to the root element if `position="end"`.
  marginLeft: 8
}, n.disablePointerEvents === !0 && {
  // Styles applied to the root element if `disablePointerEvents={true}`.
  pointerEvents: "none"
})), $I = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiInputAdornment"
  }), {
    children: u,
    className: d,
    component: p = "div",
    disablePointerEvents: h = !1,
    disableTypography: g = !1,
    position: b,
    variant: x
  } = s, S = le(s, rQ), E = is() || {};
  let R = x;
  x && E.variant && process.env.NODE_ENV !== "production" && x === E.variant && console.error("MUI: The `InputAdornment` variant infers the variant prop you do not have to provide one."), E && !R && (R = E.variant);
  const $ = y({}, s, {
    hiddenLabel: E.hiddenLabel,
    size: E.size,
    disablePointerEvents: h,
    position: b,
    variant: R
  }), M = iQ($);
  return /* @__PURE__ */ _(QT.Provider, {
    value: null,
    children: /* @__PURE__ */ _(sQ, y({
      as: p,
      ownerState: $,
      className: fe(M.root, d),
      ref: a
    }, S, {
      children: typeof u == "string" && !g ? /* @__PURE__ */ _(vo, {
        color: "text.secondary",
        children: u
      }) : /* @__PURE__ */ st(k.Fragment, {
        children: [b === "start" ? (
          /* notranslate needed while Google Translate will not fix zero-width space issue */
          xM || (xM = /* @__PURE__ */ _("span", {
            className: "notranslate",
            children: "​"
          }))
        ) : null, u]
      })
    }))
  });
});
process.env.NODE_ENV !== "production" && ($I.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally an `IconButton` or string.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Disable pointer events on the root.
   * This allows for the content of the adornment to focus the `input` on click.
   * @default false
   */
  disablePointerEvents: t.bool,
  /**
   * If children is a string then disable wrapping in a Typography component.
   * @default false
   */
  disableTypography: t.bool,
  /**
   * The position this adornment should appear relative to the `Input`.
   */
  position: t.oneOf(["end", "start"]).isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * Note: If you are using the `TextField` component or the `FormControl` component
   * you do not have to set this manually.
   */
  variant: t.oneOf(["filled", "outlined", "standard"])
});
const NI = $I;
function lQ(e) {
  return We("MuiInputLabel", e);
}
const cQ = Ye("MuiInputLabel", ["root", "focused", "disabled", "error", "required", "asterisk", "formControl", "sizeSmall", "shrink", "animated", "standard", "filled", "outlined"]), Pde = cQ, uQ = ["disableAnimation", "margin", "shrink", "variant", "className"], dQ = (e) => {
  const {
    classes: n,
    formControl: a,
    size: s,
    shrink: u,
    disableAnimation: d,
    variant: p,
    required: h
  } = e, g = {
    root: ["root", a && "formControl", !d && "animated", u && "shrink", s && s !== "normal" && `size${pe(s)}`, p],
    asterisk: [h && "asterisk"]
  }, b = He(g, lQ, n);
  return y({}, n, b);
}, pQ = J(KG, {
  shouldForwardProp: (e) => Vo(e) || e === "classes",
  name: "MuiInputLabel",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [{
      [`& .${Jv.asterisk}`]: n.asterisk
    }, n.root, a.formControl && n.formControl, a.size === "small" && n.sizeSmall, a.shrink && n.shrink, !a.disableAnimation && n.animated, a.focused && n.focused, n[a.variant]];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  display: "block",
  transformOrigin: "top left",
  whiteSpace: "nowrap",
  overflow: "hidden",
  textOverflow: "ellipsis",
  maxWidth: "100%"
}, n.formControl && {
  position: "absolute",
  left: 0,
  top: 0,
  // slight alteration to spec spacing to match visual spec result
  transform: "translate(0, 20px) scale(1)"
}, n.size === "small" && {
  // Compensation for the `Input.inputSizeSmall` style.
  transform: "translate(0, 17px) scale(1)"
}, n.shrink && {
  transform: "translate(0, -1.5px) scale(0.75)",
  transformOrigin: "top left",
  maxWidth: "133%"
}, !n.disableAnimation && {
  transition: e.transitions.create(["color", "transform", "max-width"], {
    duration: e.transitions.duration.shorter,
    easing: e.transitions.easing.easeOut
  })
}, n.variant === "filled" && y({
  // Chrome's autofill feature gives the input field a yellow background.
  // Since the input field is behind the label in the HTML tree,
  // the input field is drawn last and hides the label with an opaque background color.
  // zIndex: 1 will raise the label above opaque background-colors of input.
  zIndex: 1,
  pointerEvents: "none",
  transform: "translate(12px, 16px) scale(1)",
  maxWidth: "calc(100% - 24px)"
}, n.size === "small" && {
  transform: "translate(12px, 13px) scale(1)"
}, n.shrink && y({
  userSelect: "none",
  pointerEvents: "auto",
  transform: "translate(12px, 7px) scale(0.75)",
  maxWidth: "calc(133% - 24px)"
}, n.size === "small" && {
  transform: "translate(12px, 4px) scale(0.75)"
})), n.variant === "outlined" && y({
  // see comment above on filled.zIndex
  zIndex: 1,
  pointerEvents: "none",
  transform: "translate(14px, 16px) scale(1)",
  maxWidth: "calc(100% - 24px)"
}, n.size === "small" && {
  transform: "translate(14px, 9px) scale(1)"
}, n.shrink && {
  userSelect: "none",
  pointerEvents: "auto",
  // Theoretically, we should have (8+5)*2/0.75 = 34px
  // but it feels a better when it bleeds a bit on the left, so 32px.
  maxWidth: "calc(133% - 32px)",
  transform: "translate(14px, -9px) scale(0.75)"
}))), LI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    name: "MuiInputLabel",
    props: n
  }), {
    disableAnimation: u = !1,
    shrink: d,
    className: p
  } = s, h = le(s, uQ), g = is();
  let b = d;
  typeof b > "u" && g && (b = g.filled || g.focused || g.adornedStart);
  const x = ql({
    props: s,
    muiFormControl: g,
    states: ["size", "variant", "required", "focused"]
  }), S = y({}, s, {
    disableAnimation: u,
    formControl: g,
    shrink: b,
    size: x.size,
    variant: x.variant,
    required: x.required,
    focused: x.focused
  }), E = dQ(S);
  return /* @__PURE__ */ _(pQ, y({
    "data-shrink": b,
    ownerState: S,
    ref: a,
    className: fe(E.root, p)
  }, h, {
    classes: E
  }));
});
process.env.NODE_ENV !== "production" && (LI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: t.oneOfType([t.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), t.string]),
  /**
   * If `true`, the transition animation is disabled.
   * @default false
   */
  disableAnimation: t.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: t.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: t.bool,
  /**
   * If `true`, the `input` of this label is focused.
   */
  focused: t.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: t.oneOf(["dense"]),
  /**
   * if `true`, the label will indicate that the `input` is required.
   */
  required: t.bool,
  /**
   * If `true`, the label is shrunk.
   */
  shrink: t.bool,
  /**
   * The size of the component.
   * @default 'normal'
   */
  size: t.oneOfType([t.oneOf(["normal", "small"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   */
  variant: t.oneOf(["filled", "outlined", "standard"])
});
const fQ = LI;
function mQ(e) {
  return We("MuiLinearProgress", e);
}
const hQ = Ye("MuiLinearProgress", ["root", "colorPrimary", "colorSecondary", "determinate", "indeterminate", "buffer", "query", "dashed", "dashedColorPrimary", "dashedColorSecondary", "bar", "barColorPrimary", "barColorSecondary", "bar1Indeterminate", "bar1Determinate", "bar1Buffer", "bar2Indeterminate", "bar2Buffer"]), Dde = hQ, vQ = ["className", "color", "value", "valueBuffer", "variant"];
let tm = (e) => e, SM, kM, wM, RM, EM, OM;
const Dw = 4, gQ = rs(SM || (SM = tm`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`)), bQ = rs(kM || (kM = tm`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`)), yQ = rs(wM || (wM = tm`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`)), CQ = (e) => {
  const {
    classes: n,
    variant: a,
    color: s
  } = e, u = {
    root: ["root", `color${pe(s)}`, a],
    dashed: ["dashed", `dashedColor${pe(s)}`],
    bar1: ["bar", `barColor${pe(s)}`, (a === "indeterminate" || a === "query") && "bar1Indeterminate", a === "determinate" && "bar1Determinate", a === "buffer" && "bar1Buffer"],
    bar2: ["bar", a !== "buffer" && `barColor${pe(s)}`, a === "buffer" && `color${pe(s)}`, (a === "indeterminate" || a === "query") && "bar2Indeterminate", a === "buffer" && "bar2Buffer"]
  };
  return He(u, mQ, n);
}, x1 = (e, n) => n === "inherit" ? "currentColor" : e.vars ? e.vars.palette.LinearProgress[`${n}Bg`] : e.palette.mode === "light" ? zT(e.palette[n].main, 0.62) : FT(e.palette[n].main, 0.5), TQ = J("span", {
  name: "MuiLinearProgress",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[`color${pe(a.color)}`], n[a.variant]];
  }
})(({
  ownerState: e,
  theme: n
}) => y({
  position: "relative",
  overflow: "hidden",
  display: "block",
  height: 4,
  zIndex: 0,
  // Fix Safari's bug during composition of different paint.
  "@media print": {
    colorAdjust: "exact"
  },
  backgroundColor: x1(n, e.color)
}, e.color === "inherit" && e.variant !== "buffer" && {
  backgroundColor: "none",
  "&::before": {
    content: '""',
    position: "absolute",
    left: 0,
    top: 0,
    right: 0,
    bottom: 0,
    backgroundColor: "currentColor",
    opacity: 0.3
  }
}, e.variant === "buffer" && {
  backgroundColor: "transparent"
}, e.variant === "query" && {
  transform: "rotate(180deg)"
})), xQ = J("span", {
  name: "MuiLinearProgress",
  slot: "Dashed",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.dashed, n[`dashedColor${pe(a.color)}`]];
  }
})(({
  ownerState: e,
  theme: n
}) => {
  const a = x1(n, e.color);
  return y({
    position: "absolute",
    marginTop: 0,
    height: "100%",
    width: "100%"
  }, e.color === "inherit" && {
    opacity: 0.3
  }, {
    backgroundImage: `radial-gradient(${a} 0%, ${a} 16%, transparent 42%)`,
    backgroundSize: "10px 10px",
    backgroundPosition: "0 -23px"
  });
}, au(RM || (RM = tm`
    animation: ${0} 3s infinite linear;
  `), yQ)), SQ = J("span", {
  name: "MuiLinearProgress",
  slot: "Bar1",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.bar, n[`barColor${pe(a.color)}`], (a.variant === "indeterminate" || a.variant === "query") && n.bar1Indeterminate, a.variant === "determinate" && n.bar1Determinate, a.variant === "buffer" && n.bar1Buffer];
  }
})(({
  ownerState: e,
  theme: n
}) => y({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  backgroundColor: e.color === "inherit" ? "currentColor" : (n.vars || n).palette[e.color].main
}, e.variant === "determinate" && {
  transition: `transform .${Dw}s linear`
}, e.variant === "buffer" && {
  zIndex: 1,
  transition: `transform .${Dw}s linear`
}), ({
  ownerState: e
}) => (e.variant === "indeterminate" || e.variant === "query") && au(EM || (EM = tm`
      width: auto;
      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
    `), gQ)), kQ = J("span", {
  name: "MuiLinearProgress",
  slot: "Bar2",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.bar, n[`barColor${pe(a.color)}`], (a.variant === "indeterminate" || a.variant === "query") && n.bar2Indeterminate, a.variant === "buffer" && n.bar2Buffer];
  }
})(({
  ownerState: e,
  theme: n
}) => y({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left"
}, e.variant !== "buffer" && {
  backgroundColor: e.color === "inherit" ? "currentColor" : (n.vars || n).palette[e.color].main
}, e.color === "inherit" && {
  opacity: 0.3
}, e.variant === "buffer" && {
  backgroundColor: x1(n, e.color),
  transition: `transform .${Dw}s linear`
}), ({
  ownerState: e
}) => (e.variant === "indeterminate" || e.variant === "query") && au(OM || (OM = tm`
      width: auto;
      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
    `), bQ)), II = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiLinearProgress"
  }), {
    className: u,
    color: d = "primary",
    value: p,
    valueBuffer: h,
    variant: g = "indeterminate"
  } = s, b = le(s, vQ), x = y({}, s, {
    color: d,
    variant: g
  }), S = CQ(x), E = En(), R = {}, $ = {
    bar1: {},
    bar2: {}
  };
  if (g === "determinate" || g === "buffer")
    if (p !== void 0) {
      R["aria-valuenow"] = Math.round(p), R["aria-valuemin"] = 0, R["aria-valuemax"] = 100;
      let M = p - 100;
      E.direction === "rtl" && (M = -M), $.bar1.transform = `translateX(${M}%)`;
    } else
      process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a value prop when using the determinate or buffer variant of LinearProgress .");
  if (g === "buffer")
    if (h !== void 0) {
      let M = (h || 0) - 100;
      E.direction === "rtl" && (M = -M), $.bar2.transform = `translateX(${M}%)`;
    } else
      process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a valueBuffer prop when using the buffer variant of LinearProgress.");
  return /* @__PURE__ */ st(TQ, y({
    className: fe(S.root, u),
    ownerState: x,
    role: "progressbar"
  }, R, {
    ref: a
  }, b, {
    children: [g === "buffer" ? /* @__PURE__ */ _(xQ, {
      className: S.dashed,
      ownerState: x
    }) : null, /* @__PURE__ */ _(SQ, {
      className: S.bar1,
      ownerState: x,
      style: $.bar1
    }), g === "determinate" ? null : /* @__PURE__ */ _(kQ, {
      className: S.bar2,
      ownerState: x,
      style: $.bar2
    })]
  }));
});
process.env.NODE_ENV !== "production" && (II.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["inherit", "primary", "secondary"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The value of the progress indicator for the determinate and buffer variants.
   * Value between 0 and 100.
   */
  value: t.number,
  /**
   * The value for the buffer variant.
   * Value between 0 and 100.
   */
  valueBuffer: t.number,
  /**
   * The variant to use.
   * Use indeterminate or query when there is no progress value.
   * @default 'indeterminate'
   */
  variant: t.oneOf(["buffer", "determinate", "indeterminate", "query"])
});
const wQ = II;
function RQ(e) {
  return We("MuiLink", e);
}
const EQ = Ye("MuiLink", ["root", "underlineNone", "underlineHover", "underlineAlways", "button", "focusVisible"]), OQ = EQ, AI = {
  primary: "primary.main",
  textPrimary: "text.primary",
  secondary: "secondary.main",
  textSecondary: "text.secondary",
  error: "error.main"
}, PQ = (e) => AI[e] || e, DQ = ({
  theme: e,
  ownerState: n
}) => {
  const a = PQ(n.color), s = rD(e, `palette.${a}`, !1) || n.color, u = rD(e, `palette.${a}Channel`);
  return "vars" in e && u ? `rgba(${u} / 0.4)` : Yt(s, 0.4);
}, MQ = DQ, $Q = ["className", "color", "component", "onBlur", "onFocus", "TypographyClasses", "underline", "variant", "sx"], NQ = (e) => {
  const {
    classes: n,
    component: a,
    focusVisible: s,
    underline: u
  } = e, d = {
    root: ["root", `underline${pe(u)}`, a === "button" && "button", s && "focusVisible"]
  };
  return He(d, RQ, n);
}, LQ = J(vo, {
  name: "MuiLink",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[`underline${pe(a.underline)}`], a.component === "button" && n.button];
  }
})(({
  theme: e,
  ownerState: n
}) => y({}, n.underline === "none" && {
  textDecoration: "none"
}, n.underline === "hover" && {
  textDecoration: "none",
  "&:hover": {
    textDecoration: "underline"
  }
}, n.underline === "always" && y({
  textDecoration: "underline"
}, n.color !== "inherit" && {
  textDecorationColor: MQ({
    theme: e,
    ownerState: n
  })
}, {
  "&:hover": {
    textDecorationColor: "inherit"
  }
}), n.component === "button" && {
  position: "relative",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${OQ.focusVisible}`]: {
    outline: "auto"
  }
})), _I = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiLink"
  }), {
    className: u,
    color: d = "primary",
    component: p = "a",
    onBlur: h,
    onFocus: g,
    TypographyClasses: b,
    underline: x = "always",
    variant: S = "inherit",
    sx: E
  } = s, R = le(s, $Q), {
    isFocusVisibleRef: $,
    onBlur: M,
    onFocus: O,
    ref: N
  } = Xf(), [V, I] = k.useState(!1), z = cn(a, N), B = (U) => {
    M(U), $.current === !1 && I(!1), h && h(U);
  }, P = (U) => {
    O(U), $.current === !0 && I(!0), g && g(U);
  }, F = y({}, s, {
    color: d,
    component: p,
    focusVisible: V,
    underline: x,
    variant: S
  }), H = NQ(F);
  return /* @__PURE__ */ _(LQ, y({
    color: d,
    className: fe(H.root, u),
    classes: b,
    component: p,
    onBlur: B,
    onFocus: P,
    ref: z,
    ownerState: F,
    variant: S,
    sx: [...Object.keys(AI).includes(d) ? [] : [{
      color: d
    }], ...Array.isArray(E) ? E : [E]]
  }, R));
});
process.env.NODE_ENV !== "production" && (_I.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the link.
   * @default 'primary'
   */
  color: t.any,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: iu,
  /**
   * @ignore
   */
  onBlur: t.func,
  /**
   * @ignore
   */
  onFocus: t.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.
   */
  TypographyClasses: t.object,
  /**
   * Controls when the link should have an underline.
   * @default 'always'
   */
  underline: t.oneOf(["always", "hover", "none"]),
  /**
   * Applies the theme typography styles.
   * @default 'inherit'
   */
  variant: t.oneOfType([t.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), t.string])
});
const Mde = _I, VI = /* @__PURE__ */ k.createContext({});
process.env.NODE_ENV !== "production" && (VI.displayName = "ListContext");
const Ti = VI;
function IQ(e) {
  return We("MuiList", e);
}
const AQ = Ye("MuiList", ["root", "padding", "dense", "subheader"]), $de = AQ, _Q = ["children", "className", "component", "dense", "disablePadding", "subheader"], VQ = (e) => {
  const {
    classes: n,
    disablePadding: a,
    dense: s,
    subheader: u
  } = e;
  return He({
    root: ["root", !a && "padding", s && "dense", u && "subheader"]
  }, IQ, n);
}, BQ = J("ul", {
  name: "MuiList",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, !a.disablePadding && n.padding, a.dense && n.dense, a.subheader && n.subheader];
  }
})(({
  ownerState: e
}) => y({
  listStyle: "none",
  margin: 0,
  padding: 0,
  position: "relative"
}, !e.disablePadding && {
  paddingTop: 8,
  paddingBottom: 8
}, e.subheader && {
  paddingTop: 0
})), BI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiList"
  }), {
    children: u,
    className: d,
    component: p = "ul",
    dense: h = !1,
    disablePadding: g = !1,
    subheader: b
  } = s, x = le(s, _Q), S = k.useMemo(() => ({
    dense: h
  }), [h]), E = y({}, s, {
    component: p,
    dense: h,
    disablePadding: g
  }), R = VQ(E);
  return /* @__PURE__ */ _(Ti.Provider, {
    value: S,
    children: /* @__PURE__ */ st(BQ, y({
      as: p,
      className: fe(R.root, d),
      ref: a,
      ownerState: E
    }, x, {
      children: [b, u]
    }))
  });
});
process.env.NODE_ENV !== "production" && (BI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: t.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: t.bool,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const zI = BI;
function zQ(e) {
  return We("MuiListItem", e);
}
const FQ = Ye("MuiListItem", ["root", "container", "focusVisible", "dense", "alignItemsFlexStart", "disabled", "divider", "gutters", "padding", "button", "secondaryAction", "selected"]), Mf = FQ;
function jQ(e) {
  return We("MuiListItemButton", e);
}
const UQ = Ye("MuiListItemButton", ["root", "focusVisible", "dense", "alignItemsFlexStart", "disabled", "divider", "gutters", "selected"]), $f = UQ, HQ = ["alignItems", "autoFocus", "component", "children", "dense", "disableGutters", "divider", "focusVisibleClassName", "selected", "className"], WQ = (e, n) => {
  const {
    ownerState: a
  } = e;
  return [n.root, a.dense && n.dense, a.alignItems === "flex-start" && n.alignItemsFlexStart, a.divider && n.divider, !a.disableGutters && n.gutters];
}, YQ = (e) => {
  const {
    alignItems: n,
    classes: a,
    dense: s,
    disabled: u,
    disableGutters: d,
    divider: p,
    selected: h
  } = e, b = He({
    root: ["root", s && "dense", !d && "gutters", p && "divider", u && "disabled", n === "flex-start" && "alignItemsFlexStart", h && "selected"]
  }, jQ, a);
  return y({}, a, b);
}, qQ = J(Zo, {
  shouldForwardProp: (e) => Vo(e) || e === "classes",
  name: "MuiListItemButton",
  slot: "Root",
  overridesResolver: WQ
})(({
  theme: e,
  ownerState: n
}) => y({
  display: "flex",
  flexGrow: 1,
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  minWidth: 0,
  boxSizing: "border-box",
  textAlign: "left",
  paddingTop: 8,
  paddingBottom: 8,
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.shortest
  }),
  "&:hover": {
    textDecoration: "none",
    backgroundColor: (e.vars || e).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${$f.selected}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Yt(e.palette.primary.main, e.palette.action.selectedOpacity),
    [`&.${$f.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Yt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
    }
  },
  [`&.${$f.selected}:hover`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Yt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Yt(e.palette.primary.main, e.palette.action.selectedOpacity)
    }
  },
  [`&.${$f.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette.action.focus
  },
  [`&.${$f.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  }
}, n.divider && {
  borderBottom: `1px solid ${(e.vars || e).palette.divider}`,
  backgroundClip: "padding-box"
}, n.alignItems === "flex-start" && {
  alignItems: "flex-start"
}, !n.disableGutters && {
  paddingLeft: 16,
  paddingRight: 16
}, n.dense && {
  paddingTop: 4,
  paddingBottom: 4
})), FI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiListItemButton"
  }), {
    alignItems: u = "center",
    autoFocus: d = !1,
    component: p = "div",
    children: h,
    dense: g = !1,
    disableGutters: b = !1,
    divider: x = !1,
    focusVisibleClassName: S,
    selected: E = !1,
    className: R
  } = s, $ = le(s, HQ), M = k.useContext(Ti), O = k.useMemo(() => ({
    dense: g || M.dense || !1,
    alignItems: u,
    disableGutters: b
  }), [u, M.dense, g, b]), N = k.useRef(null);
  ro(() => {
    d && (N.current ? N.current.focus() : process.env.NODE_ENV !== "production" && console.error("MUI: Unable to set focus to a ListItemButton whose component has not been rendered."));
  }, [d]);
  const V = y({}, s, {
    alignItems: u,
    dense: O.dense,
    disableGutters: b,
    divider: x,
    selected: E
  }), I = YQ(V), z = cn(N, a);
  return /* @__PURE__ */ _(Ti.Provider, {
    value: O,
    children: /* @__PURE__ */ _(qQ, y({
      ref: z,
      href: $.href || $.to,
      component: ($.href || $.to) && p === "div" ? "button" : p,
      focusVisibleClassName: fe(I.focusVisible, S),
      ownerState: V,
      className: fe(I.root, R)
    }, $, {
      classes: I,
      children: h
    }))
  });
});
process.env.NODE_ENV !== "production" && (FI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Defines the `align-items` style property.
   * @default 'center'
   */
  alignItems: t.oneOf(["center", "flex-start"]),
  /**
   * If `true`, the list item is focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   * @default false
   */
  autoFocus: t.bool,
  /**
   * The content of the component if a `ListItemSecondaryAction` is used it must
   * be the last child.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent List component.
   * @default false
   */
  dense: t.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: t.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the list item.
   * @default false
   */
  divider: t.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: t.string,
  /**
   * @ignore
   */
  href: t.string,
  /**
   * Use to apply selected styling.
   * @default false
   */
  selected: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Nde = FI;
function GQ(e) {
  return We("MuiListItemSecondaryAction", e);
}
const KQ = Ye("MuiListItemSecondaryAction", ["root", "disableGutters"]), Lde = KQ, QQ = ["className"], XQ = (e) => {
  const {
    disableGutters: n,
    classes: a
  } = e;
  return He({
    root: ["root", n && "disableGutters"]
  }, GQ, a);
}, ZQ = J("div", {
  name: "MuiListItemSecondaryAction",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.disableGutters && n.disableGutters];
  }
})(({
  ownerState: e
}) => y({
  position: "absolute",
  right: 16,
  top: "50%",
  transform: "translateY(-50%)"
}, e.disableGutters && {
  right: 0
})), S1 = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiListItemSecondaryAction"
  }), {
    className: u
  } = s, d = le(s, QQ), p = k.useContext(Ti), h = y({}, s, {
    disableGutters: p.disableGutters
  }), g = XQ(h);
  return /* @__PURE__ */ _(ZQ, y({
    className: fe(g.root, u),
    ownerState: h,
    ref: a
  }, d));
});
process.env.NODE_ENV !== "production" && (S1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally an `IconButton` or selection control.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
S1.muiName = "ListItemSecondaryAction";
const JQ = S1, eX = ["className"], tX = ["alignItems", "autoFocus", "button", "children", "className", "component", "components", "componentsProps", "ContainerComponent", "ContainerProps", "dense", "disabled", "disableGutters", "disablePadding", "divider", "focusVisibleClassName", "secondaryAction", "selected", "slotProps", "slots"], nX = (e, n) => {
  const {
    ownerState: a
  } = e;
  return [n.root, a.dense && n.dense, a.alignItems === "flex-start" && n.alignItemsFlexStart, a.divider && n.divider, !a.disableGutters && n.gutters, !a.disablePadding && n.padding, a.button && n.button, a.hasSecondaryAction && n.secondaryAction];
}, oX = (e) => {
  const {
    alignItems: n,
    button: a,
    classes: s,
    dense: u,
    disabled: d,
    disableGutters: p,
    disablePadding: h,
    divider: g,
    hasSecondaryAction: b,
    selected: x
  } = e;
  return He({
    root: ["root", u && "dense", !p && "gutters", !h && "padding", g && "divider", d && "disabled", a && "button", n === "flex-start" && "alignItemsFlexStart", b && "secondaryAction", x && "selected"],
    container: ["container"]
  }, zQ, s);
}, rX = J("div", {
  name: "MuiListItem",
  slot: "Root",
  overridesResolver: nX
})(({
  theme: e,
  ownerState: n
}) => y({
  display: "flex",
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  width: "100%",
  boxSizing: "border-box",
  textAlign: "left"
}, !n.disablePadding && y({
  paddingTop: 8,
  paddingBottom: 8
}, n.dense && {
  paddingTop: 4,
  paddingBottom: 4
}, !n.disableGutters && {
  paddingLeft: 16,
  paddingRight: 16
}, !!n.secondaryAction && {
  // Add some space to avoid collision as `ListItemSecondaryAction`
  // is absolutely positioned.
  paddingRight: 48
}), !!n.secondaryAction && {
  [`& > .${$f.root}`]: {
    paddingRight: 48
  }
}, {
  [`&.${Mf.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette.action.focus
  },
  [`&.${Mf.selected}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Yt(e.palette.primary.main, e.palette.action.selectedOpacity),
    [`&.${Mf.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Yt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
    }
  },
  [`&.${Mf.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  }
}, n.alignItems === "flex-start" && {
  alignItems: "flex-start"
}, n.divider && {
  borderBottom: `1px solid ${(e.vars || e).palette.divider}`,
  backgroundClip: "padding-box"
}, n.button && {
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.shortest
  }),
  "&:hover": {
    textDecoration: "none",
    backgroundColor: (e.vars || e).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${Mf.selected}:hover`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Yt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Yt(e.palette.primary.main, e.palette.action.selectedOpacity)
    }
  }
}, n.hasSecondaryAction && {
  // Add some space to avoid collision as `ListItemSecondaryAction`
  // is absolutely positioned.
  paddingRight: 48
})), aX = J("li", {
  name: "MuiListItem",
  slot: "Container",
  overridesResolver: (e, n) => n.container
})({
  position: "relative"
}), jI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiListItem"
  }), {
    alignItems: u = "center",
    autoFocus: d = !1,
    button: p = !1,
    children: h,
    className: g,
    component: b,
    components: x = {},
    componentsProps: S = {},
    ContainerComponent: E = "li",
    ContainerProps: {
      className: R
    } = {},
    dense: $ = !1,
    disabled: M = !1,
    disableGutters: O = !1,
    disablePadding: N = !1,
    divider: V = !1,
    focusVisibleClassName: I,
    secondaryAction: z,
    selected: B = !1,
    slotProps: P = {},
    slots: F = {}
  } = s, H = le(s.ContainerProps, eX), U = le(s, tX), Q = k.useContext(Ti), Y = k.useMemo(() => ({
    dense: $ || Q.dense || !1,
    alignItems: u,
    disableGutters: O
  }), [u, Q.dense, $, O]), te = k.useRef(null);
  ro(() => {
    d && (te.current ? te.current.focus() : process.env.NODE_ENV !== "production" && console.error("MUI: Unable to set focus to a ListItem whose component has not been rendered."));
  }, [d]);
  const Z = k.Children.toArray(h), q = Z.length && Hs(Z[Z.length - 1], ["ListItemSecondaryAction"]), X = y({}, s, {
    alignItems: u,
    autoFocus: d,
    button: p,
    dense: Y.dense,
    disabled: M,
    disableGutters: O,
    disablePadding: N,
    divider: V,
    hasSecondaryAction: q,
    selected: B
  }), oe = oX(X), ie = cn(te, a), K = F.root || x.Root || rX, ne = P.root || S.root || {}, se = y({
    className: fe(oe.root, ne.className, g),
    disabled: M
  }, U);
  let ze = b || "li";
  return p && (se.component = b || "div", se.focusVisibleClassName = fe(Mf.focusVisible, I), ze = Zo), q ? (ze = !se.component && !b ? "div" : ze, E === "li" && (ze === "li" ? ze = "div" : se.component === "li" && (se.component = "div")), /* @__PURE__ */ _(Ti.Provider, {
    value: Y,
    children: /* @__PURE__ */ st(aX, y({
      as: E,
      className: fe(oe.container, R),
      ref: ie,
      ownerState: X
    }, H, {
      children: [/* @__PURE__ */ _(K, y({}, ne, !ts(K) && {
        as: ze,
        ownerState: y({}, X, ne.ownerState)
      }, se, {
        children: Z
      })), Z.pop()]
    }))
  })) : /* @__PURE__ */ _(Ti.Provider, {
    value: Y,
    children: /* @__PURE__ */ st(K, y({}, ne, {
      as: ze,
      ref: ie
    }, !ts(K) && {
      ownerState: y({}, X, ne.ownerState)
    }, se, {
      children: [Z, z && /* @__PURE__ */ _(JQ, {
        children: z
      })]
    }))
  });
});
process.env.NODE_ENV !== "production" && (jI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Defines the `align-items` style property.
   * @default 'center'
   */
  alignItems: t.oneOf(["center", "flex-start"]),
  /**
   * If `true`, the list item is focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   * @default false
   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead
   */
  autoFocus: t.bool,
  /**
   * If `true`, the list item is a button (using `ButtonBase`). Props intended
   * for `ButtonBase` can then be applied to `ListItem`.
   * @default false
   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead
   */
  button: t.bool,
  /**
   * The content of the component if a `ListItemSecondaryAction` is used it must
   * be the last child.
   */
  children: Xo(t.node, (e) => {
    const n = k.Children.toArray(e.children);
    let a = -1;
    for (let s = n.length - 1; s >= 0; s -= 1) {
      const u = n[s];
      if (Hs(u, ["ListItemSecondaryAction"])) {
        a = s;
        break;
      }
    }
    return a !== -1 && a !== n.length - 1 ? new Error("MUI: You used an element after ListItemSecondaryAction. For ListItem to detect that it has a secondary action you must pass it as the last child to ListItem.") : null;
  }),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    Root: t.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: t.shape({
    root: t.object
  }),
  /**
   * The container component used when a `ListItemSecondaryAction` is the last child.
   * @default 'li'
   * @deprecated
   */
  ContainerComponent: iu,
  /**
   * Props applied to the container component if used.
   * @default {}
   * @deprecated
   */
  ContainerProps: t.object,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent List component.
   * @default false
   */
  dense: t.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead
   */
  disabled: t.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: t.bool,
  /**
   * If `true`, all padding is removed.
   * @default false
   */
  disablePadding: t.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the list item.
   * @default false
   */
  divider: t.bool,
  /**
   * @ignore
   */
  focusVisibleClassName: t.string,
  /**
   * The element to display at the end of ListItem.
   */
  secondaryAction: t.node,
  /**
   * Use to apply selected styling.
   * @default false
   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead
   */
  selected: t.bool,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: t.shape({
    root: t.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: t.shape({
    root: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const iX = jI;
function sX(e) {
  return We("MuiListItemAvatar", e);
}
const lX = Ye("MuiListItemAvatar", ["root", "alignItemsFlexStart"]), Ide = lX, cX = ["className"], uX = (e) => {
  const {
    alignItems: n,
    classes: a
  } = e;
  return He({
    root: ["root", n === "flex-start" && "alignItemsFlexStart"]
  }, sX, a);
}, dX = J("div", {
  name: "MuiListItemAvatar",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.alignItems === "flex-start" && n.alignItemsFlexStart];
  }
})(({
  ownerState: e
}) => y({
  minWidth: 56,
  flexShrink: 0
}, e.alignItems === "flex-start" && {
  marginTop: 8
})), UI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiListItemAvatar"
  }), {
    className: u
  } = s, d = le(s, cX), p = k.useContext(Ti), h = y({}, s, {
    alignItems: p.alignItems
  }), g = uX(h);
  return /* @__PURE__ */ _(dX, y({
    className: fe(g.root, u),
    ownerState: h,
    ref: a
  }, d));
});
process.env.NODE_ENV !== "production" && (UI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally an `Avatar`.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Ade = UI;
function pX(e) {
  return We("MuiListItemIcon", e);
}
const fX = Ye("MuiListItemIcon", ["root", "alignItemsFlexStart"]), PM = fX, mX = ["className"], hX = (e) => {
  const {
    alignItems: n,
    classes: a
  } = e;
  return He({
    root: ["root", n === "flex-start" && "alignItemsFlexStart"]
  }, pX, a);
}, vX = J("div", {
  name: "MuiListItemIcon",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.alignItems === "flex-start" && n.alignItemsFlexStart];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  minWidth: 56,
  color: (e.vars || e).palette.action.active,
  flexShrink: 0,
  display: "inline-flex"
}, n.alignItems === "flex-start" && {
  marginTop: 8
})), HI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiListItemIcon"
  }), {
    className: u
  } = s, d = le(s, mX), p = k.useContext(Ti), h = y({}, s, {
    alignItems: p.alignItems
  }), g = hX(h);
  return /* @__PURE__ */ _(vX, y({
    className: fe(g.root, u),
    ownerState: h,
    ref: a
  }, d));
});
process.env.NODE_ENV !== "production" && (HI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `Icon`, `SvgIcon`,
   * or a `@mui/icons-material` SVG icon element.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const _de = HI;
function gX(e) {
  return We("MuiListItemText", e);
}
const bX = Ye("MuiListItemText", ["root", "multiline", "dense", "inset", "primary", "secondary"]), LT = bX, yX = ["children", "className", "disableTypography", "inset", "primary", "primaryTypographyProps", "secondary", "secondaryTypographyProps"], CX = (e) => {
  const {
    classes: n,
    inset: a,
    primary: s,
    secondary: u,
    dense: d
  } = e;
  return He({
    root: ["root", a && "inset", d && "dense", s && u && "multiline"],
    primary: ["primary"],
    secondary: ["secondary"]
  }, gX, n);
}, TX = J("div", {
  name: "MuiListItemText",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [{
      [`& .${LT.primary}`]: n.primary
    }, {
      [`& .${LT.secondary}`]: n.secondary
    }, n.root, a.inset && n.inset, a.primary && a.secondary && n.multiline, a.dense && n.dense];
  }
})(({
  ownerState: e
}) => y({
  flex: "1 1 auto",
  minWidth: 0,
  marginTop: 4,
  marginBottom: 4
}, e.primary && e.secondary && {
  marginTop: 6,
  marginBottom: 6
}, e.inset && {
  paddingLeft: 56
})), WI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiListItemText"
  }), {
    children: u,
    className: d,
    disableTypography: p = !1,
    inset: h = !1,
    primary: g,
    primaryTypographyProps: b,
    secondary: x,
    secondaryTypographyProps: S
  } = s, E = le(s, yX), {
    dense: R
  } = k.useContext(Ti);
  let $ = g ?? u, M = x;
  const O = y({}, s, {
    disableTypography: p,
    inset: h,
    primary: !!$,
    secondary: !!M,
    dense: R
  }), N = CX(O);
  return $ != null && $.type !== vo && !p && ($ = /* @__PURE__ */ _(vo, y({
    variant: R ? "body2" : "body1",
    className: N.primary,
    component: b != null && b.variant ? void 0 : "span",
    display: "block"
  }, b, {
    children: $
  }))), M != null && M.type !== vo && !p && (M = /* @__PURE__ */ _(vo, y({
    variant: "body2",
    className: N.secondary,
    color: "text.secondary",
    display: "block"
  }, S, {
    children: M
  }))), /* @__PURE__ */ st(TX, y({
    className: fe(N.root, d),
    ownerState: O,
    ref: a
  }, E, {
    children: [$, M]
  }));
});
process.env.NODE_ENV !== "production" && (WI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Alias for the `primary` prop.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, the children won't be wrapped by a Typography component.
   * This can be useful to render an alternative Typography variant by wrapping
   * the `children` (or `primary`) text, and optional `secondary` text
   * with the Typography component.
   * @default false
   */
  disableTypography: t.bool,
  /**
   * If `true`, the children are indented.
   * This should be used if there is no left avatar or left icon.
   * @default false
   */
  inset: t.bool,
  /**
   * The main content element.
   */
  primary: t.node,
  /**
   * These props will be forwarded to the primary typography component
   * (as long as disableTypography is not `true`).
   */
  primaryTypographyProps: t.object,
  /**
   * The secondary content element.
   */
  secondary: t.node,
  /**
   * These props will be forwarded to the secondary typography component
   * (as long as disableTypography is not `true`).
   */
  secondaryTypographyProps: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Vde = WI, xX = ["actions", "autoFocus", "autoFocusItem", "children", "className", "disabledItemsFocusable", "disableListWrap", "onKeyDown", "variant"];
function sw(e, n, a) {
  return e === n ? e.firstChild : n && n.nextElementSibling ? n.nextElementSibling : a ? null : e.firstChild;
}
function DM(e, n, a) {
  return e === n ? a ? e.firstChild : e.lastChild : n && n.previousElementSibling ? n.previousElementSibling : a ? null : e.lastChild;
}
function YI(e, n) {
  if (n === void 0)
    return !0;
  let a = e.innerText;
  return a === void 0 && (a = e.textContent), a = a.trim().toLowerCase(), a.length === 0 ? !1 : n.repeating ? a[0] === n.keys[0] : a.indexOf(n.keys.join("")) === 0;
}
function Rv(e, n, a, s, u, d) {
  let p = !1, h = u(e, n, n ? a : !1);
  for (; h; ) {
    if (h === e.firstChild) {
      if (p)
        return !1;
      p = !0;
    }
    const g = s ? !1 : h.disabled || h.getAttribute("aria-disabled") === "true";
    if (!h.hasAttribute("tabindex") || !YI(h, d) || g)
      h = u(e, h, a);
    else
      return h.focus(), !0;
  }
  return !1;
}
const qI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: s,
    autoFocus: u = !1,
    autoFocusItem: d = !1,
    children: p,
    className: h,
    disabledItemsFocusable: g = !1,
    disableListWrap: b = !1,
    onKeyDown: x,
    variant: S = "selectedMenu"
  } = n, E = le(n, xX), R = k.useRef(null), $ = k.useRef({
    keys: [],
    repeating: !0,
    previousKeyMatched: !0,
    lastTime: null
  });
  ro(() => {
    u && R.current.focus();
  }, [u]), k.useImperativeHandle(s, () => ({
    adjustStyleForScrollbar: (I, z) => {
      const B = !R.current.style.width;
      if (I.clientHeight < R.current.clientHeight && B) {
        const P = `${gN($n(I))}px`;
        R.current.style[z.direction === "rtl" ? "paddingLeft" : "paddingRight"] = P, R.current.style.width = `calc(100% + ${P})`;
      }
      return R.current;
    }
  }), []);
  const M = (I) => {
    const z = R.current, B = I.key, P = $n(z).activeElement;
    if (B === "ArrowDown")
      I.preventDefault(), Rv(z, P, b, g, sw);
    else if (B === "ArrowUp")
      I.preventDefault(), Rv(z, P, b, g, DM);
    else if (B === "Home")
      I.preventDefault(), Rv(z, null, b, g, sw);
    else if (B === "End")
      I.preventDefault(), Rv(z, null, b, g, DM);
    else if (B.length === 1) {
      const F = $.current, H = B.toLowerCase(), U = performance.now();
      F.keys.length > 0 && (U - F.lastTime > 500 ? (F.keys = [], F.repeating = !0, F.previousKeyMatched = !0) : F.repeating && H !== F.keys[0] && (F.repeating = !1)), F.lastTime = U, F.keys.push(H);
      const Q = P && !F.repeating && YI(P, F);
      F.previousKeyMatched && (Q || Rv(z, P, !1, g, sw, F)) ? I.preventDefault() : F.previousKeyMatched = !1;
    }
    x && x(I);
  }, O = cn(R, a);
  let N = -1;
  k.Children.forEach(p, (I, z) => {
    if (!/* @__PURE__ */ k.isValidElement(I)) {
      N === z && (N += 1, N >= p.length && (N = -1));
      return;
    }
    process.env.NODE_ENV !== "production" && as.isFragment(I) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), I.props.disabled || (S === "selectedMenu" && I.props.selected || N === -1) && (N = z), N === z && (I.props.disabled || I.props.muiSkipListHighlight || I.type.muiSkipListHighlight) && (N += 1, N >= p.length && (N = -1));
  });
  const V = k.Children.map(p, (I, z) => {
    if (z === N) {
      const B = {};
      return d && (B.autoFocus = !0), I.props.tabIndex === void 0 && S === "selectedMenu" && (B.tabIndex = 0), /* @__PURE__ */ k.cloneElement(I, B);
    }
    return I;
  });
  return /* @__PURE__ */ _(zI, y({
    role: "menu",
    ref: O,
    className: h,
    onKeyDown: M,
    tabIndex: u ? 0 : -1
  }, E, {
    children: V
  }));
});
process.env.NODE_ENV !== "production" && (qI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, will focus the `[role="menu"]` container and move into tab order.
   * @default false
   */
  autoFocus: t.bool,
  /**
   * If `true`, will focus the first menuitem if `variant="menu"` or selected item
   * if `variant="selectedMenu"`.
   * @default false
   */
  autoFocusItem: t.bool,
  /**
   * MenuList contents, normally `MenuItem`s.
   */
  children: t.node,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: t.bool,
  /**
   * If `true`, the menu items will not wrap focus.
   * @default false
   */
  disableListWrap: t.bool,
  /**
   * @ignore
   */
  onKeyDown: t.func,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   * @default 'selectedMenu'
   */
  variant: t.oneOf(["menu", "selectedMenu"])
});
const k1 = qI;
function SX(e) {
  return We("MuiPopover", e);
}
const kX = Ye("MuiPopover", ["root", "paper"]), Bde = kX, wX = ["onEntering"], RX = ["action", "anchorEl", "anchorOrigin", "anchorPosition", "anchorReference", "children", "className", "container", "elevation", "marginThreshold", "open", "PaperProps", "slots", "slotProps", "transformOrigin", "TransitionComponent", "transitionDuration", "TransitionProps", "disableScrollLock"], EX = ["slotProps"];
function MM(e, n) {
  let a = 0;
  return typeof n == "number" ? a = n : n === "center" ? a = e.height / 2 : n === "bottom" && (a = e.height), a;
}
function $M(e, n) {
  let a = 0;
  return typeof n == "number" ? a = n : n === "center" ? a = e.width / 2 : n === "right" && (a = e.width), a;
}
function NM(e) {
  return [e.horizontal, e.vertical].map((n) => typeof n == "number" ? `${n}px` : n).join(" ");
}
function fT(e) {
  return typeof e == "function" ? e() : e;
}
const OX = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"],
    paper: ["paper"]
  }, SX, n);
}, PX = J(h1, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({}), GI = J(ni, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, n) => n.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), KI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d;
  const p = Ie({
    props: n,
    name: "MuiPopover"
  }), {
    action: h,
    anchorEl: g,
    anchorOrigin: b = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: x,
    anchorReference: S = "anchorEl",
    children: E,
    className: R,
    container: $,
    elevation: M = 8,
    marginThreshold: O = 16,
    open: N,
    PaperProps: V = {},
    slots: I,
    slotProps: z,
    transformOrigin: B = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: P = fg,
    transitionDuration: F = "auto",
    TransitionProps: {
      onEntering: H
    } = {},
    disableScrollLock: U = !1
  } = p, Q = le(p.TransitionProps, wX), Y = le(p, RX), te = (s = z == null ? void 0 : z.paper) != null ? s : V, Z = k.useRef(), q = cn(Z, te.ref), X = y({}, p, {
    anchorOrigin: b,
    anchorReference: S,
    elevation: M,
    marginThreshold: O,
    externalPaperSlotProps: te,
    transformOrigin: B,
    TransitionComponent: P,
    transitionDuration: F,
    TransitionProps: Q
  }), oe = OX(X), ie = k.useCallback(() => {
    if (S === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (x || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), x;
    const Ce = fT(g), ae = Ce && Ce.nodeType === 1 ? Ce : $n(Z.current).body, Pe = ae.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const ke = ae.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && ke.top === 0 && ke.left === 0 && ke.right === 0 && ke.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: Pe.top + MM(Pe, b.vertical),
      left: Pe.left + $M(Pe, b.horizontal)
    };
  }, [g, b.horizontal, b.vertical, x, S]), K = k.useCallback((Ce) => ({
    vertical: MM(Ce, B.vertical),
    horizontal: $M(Ce, B.horizontal)
  }), [B.horizontal, B.vertical]), ne = k.useCallback((Ce) => {
    const ae = {
      width: Ce.offsetWidth,
      height: Ce.offsetHeight
    }, Pe = K(ae);
    if (S === "none")
      return {
        top: null,
        left: null,
        transformOrigin: NM(Pe)
      };
    const ke = ie();
    let pt = ke.top - Pe.vertical, _e = ke.left - Pe.horizontal;
    const dt = pt + ae.height, ge = _e + ae.width, ve = Qr(fT(g)), qe = ve.innerHeight - O, vt = ve.innerWidth - O;
    if (O !== null && pt < O) {
      const yt = pt - O;
      pt -= yt, Pe.vertical += yt;
    } else if (O !== null && dt > qe) {
      const yt = dt - qe;
      pt -= yt, Pe.vertical += yt;
    }
    if (process.env.NODE_ENV !== "production" && ae.height > qe && ae.height && qe && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${ae.height - qe}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), O !== null && _e < O) {
      const yt = _e - O;
      _e -= yt, Pe.horizontal += yt;
    } else if (ge > vt) {
      const yt = ge - vt;
      _e -= yt, Pe.horizontal += yt;
    }
    return {
      top: `${Math.round(pt)}px`,
      left: `${Math.round(_e)}px`,
      transformOrigin: NM(Pe)
    };
  }, [g, S, ie, K, O]), [se, ze] = k.useState(N), Ue = k.useCallback(() => {
    const Ce = Z.current;
    if (!Ce)
      return;
    const ae = ne(Ce);
    ae.top !== null && (Ce.style.top = ae.top), ae.left !== null && (Ce.style.left = ae.left), Ce.style.transformOrigin = ae.transformOrigin, ze(!0);
  }, [ne]);
  k.useEffect(() => (U && window.addEventListener("scroll", Ue), () => window.removeEventListener("scroll", Ue)), [g, U, Ue]);
  const Oe = (Ce, ae) => {
    H && H(Ce, ae), Ue();
  }, ue = () => {
    ze(!1);
  };
  k.useEffect(() => {
    N && Ue();
  }), k.useImperativeHandle(h, () => N ? {
    updatePosition: () => {
      Ue();
    }
  } : null, [N, Ue]), k.useEffect(() => {
    if (!N)
      return;
    const Ce = Qf(() => {
      Ue();
    }), ae = Qr(g);
    return ae.addEventListener("resize", Ce), () => {
      Ce.clear(), ae.removeEventListener("resize", Ce);
    };
  }, [g, N, Ue]);
  let xe = F;
  F === "auto" && !P.muiSupportAuto && (xe = void 0);
  const me = $ || (g ? $n(fT(g)).body : void 0), Se = (u = I == null ? void 0 : I.root) != null ? u : PX, ce = (d = I == null ? void 0 : I.paper) != null ? d : GI, Le = rn({
    elementType: ce,
    externalSlotProps: y({}, te, {
      style: se ? te.style : y({}, te.style, {
        opacity: 0
      })
    }),
    additionalProps: {
      elevation: M,
      ref: q
    },
    ownerState: X,
    className: fe(oe.paper, te == null ? void 0 : te.className)
  }), Ze = rn({
    elementType: Se,
    externalSlotProps: (z == null ? void 0 : z.root) || {},
    externalForwardedProps: Y,
    additionalProps: {
      ref: a,
      slotProps: {
        backdrop: {
          invisible: !0
        }
      },
      container: me,
      open: N
    },
    ownerState: X,
    className: fe(oe.root, R)
  }), {
    slotProps: Ee
  } = Ze, Ae = le(Ze, EX);
  return /* @__PURE__ */ _(Se, y({}, Ae, !ts(Se) && {
    slotProps: Ee,
    disableScrollLock: U
  }, {
    children: /* @__PURE__ */ _(P, y({
      appear: !0,
      in: N,
      onEntering: Oe,
      onExited: ue,
      timeout: xe
    }, Q, {
      children: /* @__PURE__ */ _(ce, y({}, Le, {
        children: E
      }))
    }))
  }));
});
process.env.NODE_ENV !== "production" && (KI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: Wn,
  /**
   * An HTML element, [PopoverVirtualElement](/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: Xo(t.oneOfType([Gs, t.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const n = fT(e.anchorEl);
      if (n && n.nodeType === 1) {
        const a = n.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && a.top === 0 && a.left === 0 && a.right === 0 && a.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${n}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: t.shape({
    horizontal: t.oneOfType([t.oneOf(["center", "left", "right"]), t.number]).isRequired,
    vertical: t.oneOfType([t.oneOf(["bottom", "center", "top"]), t.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: t.shape({
    left: t.number.isRequired,
    top: t.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: t.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: t.oneOfType([Gs, t.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: t.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: Ro,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: t.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: t.func,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool.isRequired,
  /**
   * Props applied to the [`Paper`](/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: t.shape({
    component: iu
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @default {}
   */
  slotProps: t.shape({
    paper: t.oneOfType([t.func, t.object]),
    root: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside.
   *
   * @default {}
   */
  slots: t.shape({
    paper: t.elementType,
    root: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: t.shape({
    horizontal: t.oneOfType([t.oneOf(["center", "left", "right"]), t.number]).isRequired,
    vertical: t.oneOfType([t.oneOf(["bottom", "center", "top"]), t.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Grow
   */
  TransitionComponent: t.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: t.oneOfType([t.oneOf(["auto"]), t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @default {}
   */
  TransitionProps: t.object
});
const DX = KI;
function MX(e) {
  return We("MuiMenu", e);
}
const $X = Ye("MuiMenu", ["root", "paper", "list"]), zde = $X, NX = ["onEntering"], LX = ["autoFocus", "children", "className", "disableAutoFocusItem", "MenuListProps", "onClose", "open", "PaperProps", "PopoverClasses", "transitionDuration", "TransitionProps", "variant", "slots", "slotProps"], IX = {
  vertical: "top",
  horizontal: "right"
}, AX = {
  vertical: "top",
  horizontal: "left"
}, _X = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"],
    paper: ["paper"],
    list: ["list"]
  }, MX, n);
}, VX = J(DX, {
  shouldForwardProp: (e) => Vo(e) || e === "classes",
  name: "MuiMenu",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({}), BX = J(GI, {
  name: "MuiMenu",
  slot: "Paper",
  overridesResolver: (e, n) => n.paper
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tappable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: "calc(100% - 96px)",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
}), zX = J(k1, {
  name: "MuiMenu",
  slot: "List",
  overridesResolver: (e, n) => n.list
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), QI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u;
  const d = Ie({
    props: n,
    name: "MuiMenu"
  }), {
    autoFocus: p = !0,
    children: h,
    className: g,
    disableAutoFocusItem: b = !1,
    MenuListProps: x = {},
    onClose: S,
    open: E,
    PaperProps: R = {},
    PopoverClasses: $,
    transitionDuration: M = "auto",
    TransitionProps: {
      onEntering: O
    } = {},
    variant: N = "selectedMenu",
    slots: V = {},
    slotProps: I = {}
  } = d, z = le(d.TransitionProps, NX), B = le(d, LX), P = En(), F = P.direction === "rtl", H = y({}, d, {
    autoFocus: p,
    disableAutoFocusItem: b,
    MenuListProps: x,
    onEntering: O,
    PaperProps: R,
    transitionDuration: M,
    TransitionProps: z,
    variant: N
  }), U = _X(H), Q = p && !b && E, Y = k.useRef(null), te = (ne, se) => {
    Y.current && Y.current.adjustStyleForScrollbar(ne, P), O && O(ne, se);
  }, Z = (ne) => {
    ne.key === "Tab" && (ne.preventDefault(), S && S(ne, "tabKeyDown"));
  };
  let q = -1;
  k.Children.map(h, (ne, se) => {
    /* @__PURE__ */ k.isValidElement(ne) && (process.env.NODE_ENV !== "production" && as.isFragment(ne) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), ne.props.disabled || (N === "selectedMenu" && ne.props.selected || q === -1) && (q = se));
  });
  const X = (s = V.paper) != null ? s : BX, oe = (u = I.paper) != null ? u : R, ie = rn({
    elementType: V.root,
    externalSlotProps: I.root,
    ownerState: H,
    className: [U.root, g]
  }), K = rn({
    elementType: X,
    externalSlotProps: oe,
    ownerState: H,
    className: U.paper
  });
  return /* @__PURE__ */ _(VX, y({
    onClose: S,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: F ? "right" : "left"
    },
    transformOrigin: F ? IX : AX,
    slots: {
      paper: X,
      root: V.root
    },
    slotProps: {
      root: ie,
      paper: K
    },
    open: E,
    ref: a,
    transitionDuration: M,
    TransitionProps: y({
      onEntering: te
    }, z),
    ownerState: H
  }, B, {
    classes: $,
    children: /* @__PURE__ */ _(zX, y({
      onKeyDown: Z,
      actions: Y,
      autoFocus: p && (q === -1 || b),
      autoFocusItem: Q,
      variant: N
    }, x, {
      className: fe(U.list, x.className),
      children: h
    }))
  }));
});
process.env.NODE_ENV !== "production" && (QI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the position of the menu.
   */
  anchorEl: t.oneOfType([Gs, t.func]),
  /**
   * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
   * children are not focusable. If you set this prop to `false` focus will be placed
   * on the parent modal container. This has severe accessibility implications
   * and should only be considered if you manage focus otherwise.
   * @default true
   */
  autoFocus: t.bool,
  /**
   * Menu contents, normally `MenuItem`s.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * When opening the menu will not focus the active item but the `[role="menu"]`
   * unless `autoFocus` is also set to `false`. Not using the default means not
   * following WAI-ARIA authoring practices. Please be considerate about possible
   * accessibility implications.
   * @default false
   */
  disableAutoFocusItem: t.bool,
  /**
   * Props applied to the [`MenuList`](/material-ui/api/menu-list/) element.
   * @default {}
   */
  MenuListProps: t.object,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
   */
  onClose: t.func,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: t.object,
  /**
   * `classes` prop applied to the [`Popover`](/material-ui/api/popover/) element.
   */
  PopoverClasses: t.object,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @default {}
   */
  slotProps: t.shape({
    paper: t.oneOfType([t.func, t.object]),
    root: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside.
   *
   * @default {}
   */
  slots: t.shape({
    paper: t.elementType,
    root: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The length of the transition in `ms`, or 'auto'
   * @default 'auto'
   */
  transitionDuration: t.oneOfType([t.oneOf(["auto"]), t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @default {}
   */
  TransitionProps: t.object,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.
   * @default 'selectedMenu'
   */
  variant: t.oneOf(["menu", "selectedMenu"])
});
const FX = QI;
function jX(e) {
  return We("MuiMenuItem", e);
}
const UX = Ye("MuiMenuItem", ["root", "focusVisible", "dense", "disabled", "divider", "gutters", "selected"]), Ev = UX, HX = ["autoFocus", "component", "dense", "divider", "disableGutters", "focusVisibleClassName", "role", "tabIndex", "className"], WX = (e, n) => {
  const {
    ownerState: a
  } = e;
  return [n.root, a.dense && n.dense, a.divider && n.divider, !a.disableGutters && n.gutters];
}, YX = (e) => {
  const {
    disabled: n,
    dense: a,
    divider: s,
    disableGutters: u,
    selected: d,
    classes: p
  } = e, g = He({
    root: ["root", a && "dense", n && "disabled", !u && "gutters", s && "divider", d && "selected"]
  }, jX, p);
  return y({}, p, g);
}, qX = J(Zo, {
  shouldForwardProp: (e) => Vo(e) || e === "classes",
  name: "MuiMenuItem",
  slot: "Root",
  overridesResolver: WX
})(({
  theme: e,
  ownerState: n
}) => y({}, e.typography.body1, {
  display: "flex",
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  minHeight: 48,
  paddingTop: 6,
  paddingBottom: 6,
  boxSizing: "border-box",
  whiteSpace: "nowrap"
}, !n.disableGutters && {
  paddingLeft: 16,
  paddingRight: 16
}, n.divider && {
  borderBottom: `1px solid ${(e.vars || e).palette.divider}`,
  backgroundClip: "padding-box"
}, {
  "&:hover": {
    textDecoration: "none",
    backgroundColor: (e.vars || e).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${Ev.selected}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Yt(e.palette.primary.main, e.palette.action.selectedOpacity),
    [`&.${Ev.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Yt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
    }
  },
  [`&.${Ev.selected}:hover`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Yt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Yt(e.palette.primary.main, e.palette.action.selectedOpacity)
    }
  },
  [`&.${Ev.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette.action.focus
  },
  [`&.${Ev.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  },
  [`& + .${fM.root}`]: {
    marginTop: e.spacing(1),
    marginBottom: e.spacing(1)
  },
  [`& + .${fM.inset}`]: {
    marginLeft: 52
  },
  [`& .${LT.root}`]: {
    marginTop: 0,
    marginBottom: 0
  },
  [`& .${LT.inset}`]: {
    paddingLeft: 36
  },
  [`& .${PM.root}`]: {
    minWidth: 36
  }
}, !n.dense && {
  [e.breakpoints.up("sm")]: {
    minHeight: "auto"
  }
}, n.dense && y({
  minHeight: 32,
  // https://m2.material.io/components/menus#specs > Dense
  paddingTop: 4,
  paddingBottom: 4
}, e.typography.body2, {
  [`& .${PM.root} svg`]: {
    fontSize: "1.25rem"
  }
}))), XI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiMenuItem"
  }), {
    autoFocus: u = !1,
    component: d = "li",
    dense: p = !1,
    divider: h = !1,
    disableGutters: g = !1,
    focusVisibleClassName: b,
    role: x = "menuitem",
    tabIndex: S,
    className: E
  } = s, R = le(s, HX), $ = k.useContext(Ti), M = k.useMemo(() => ({
    dense: p || $.dense || !1,
    disableGutters: g
  }), [$.dense, p, g]), O = k.useRef(null);
  ro(() => {
    u && (O.current ? O.current.focus() : process.env.NODE_ENV !== "production" && console.error("MUI: Unable to set focus to a MenuItem whose component has not been rendered."));
  }, [u]);
  const N = y({}, s, {
    dense: M.dense,
    divider: h,
    disableGutters: g
  }), V = YX(s), I = cn(O, a);
  let z;
  return s.disabled || (z = S !== void 0 ? S : -1), /* @__PURE__ */ _(Ti.Provider, {
    value: M,
    children: /* @__PURE__ */ _(qX, y({
      ref: I,
      role: x,
      tabIndex: z,
      component: d,
      focusVisibleClassName: fe(V.focusVisible, b),
      className: fe(V.root, E)
    }, R, {
      ownerState: N,
      classes: V
    }))
  });
});
process.env.NODE_ENV !== "production" && (XI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the list item is focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   * @default false
   */
  autoFocus: t.bool,
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent Menu component.
   * @default false
   */
  dense: t.bool,
  /**
   * @ignore
   */
  disabled: t.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: t.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the menu item.
   * @default false
   */
  divider: t.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: t.string,
  /**
   * @ignore
   */
  role: t.string,
  /**
   * If `true`, the component is selected.
   * @default false
   */
  selected: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * @default 0
   */
  tabIndex: t.number
});
const w1 = XI;
function GX(e) {
  return We("MuiMobileStepper", e);
}
const KX = Ye("MuiMobileStepper", ["root", "positionBottom", "positionTop", "positionStatic", "dots", "dot", "dotActive", "progress"]), Fde = KX, QX = ["activeStep", "backButton", "className", "LinearProgressProps", "nextButton", "position", "steps", "variant"], XX = (e) => {
  const {
    classes: n,
    position: a
  } = e, s = {
    root: ["root", `position${pe(a)}`],
    dots: ["dots"],
    dot: ["dot"],
    dotActive: ["dotActive"],
    progress: ["progress"]
  };
  return He(s, GX, n);
}, ZX = J(ni, {
  name: "MuiMobileStepper",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[`position${pe(a.position)}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  display: "flex",
  flexDirection: "row",
  justifyContent: "space-between",
  alignItems: "center",
  background: (e.vars || e).palette.background.default,
  padding: 8
}, n.position === "bottom" && {
  position: "fixed",
  bottom: 0,
  left: 0,
  right: 0,
  zIndex: (e.vars || e).zIndex.mobileStepper
}, n.position === "top" && {
  position: "fixed",
  top: 0,
  left: 0,
  right: 0,
  zIndex: (e.vars || e).zIndex.mobileStepper
})), JX = J("div", {
  name: "MuiMobileStepper",
  slot: "Dots",
  overridesResolver: (e, n) => n.dots
})(({
  ownerState: e
}) => y({}, e.variant === "dots" && {
  display: "flex",
  flexDirection: "row"
})), eZ = J("div", {
  name: "MuiMobileStepper",
  slot: "Dot",
  shouldForwardProp: (e) => Rg(e) && e !== "dotActive",
  overridesResolver: (e, n) => {
    const {
      dotActive: a
    } = e;
    return [n.dot, a && n.dotActive];
  }
})(({
  theme: e,
  ownerState: n,
  dotActive: a
}) => y({}, n.variant === "dots" && y({
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.shortest
  }),
  backgroundColor: (e.vars || e).palette.action.disabled,
  borderRadius: "50%",
  width: 8,
  height: 8,
  margin: "0 2px"
}, a && {
  backgroundColor: (e.vars || e).palette.primary.main
}))), tZ = J(wQ, {
  name: "MuiMobileStepper",
  slot: "Progress",
  overridesResolver: (e, n) => n.progress
})(({
  ownerState: e
}) => y({}, e.variant === "progress" && {
  width: "50%"
})), ZI = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiMobileStepper"
  }), {
    activeStep: u = 0,
    backButton: d,
    className: p,
    LinearProgressProps: h,
    nextButton: g,
    position: b = "bottom",
    steps: x,
    variant: S = "dots"
  } = s, E = le(s, QX), R = y({}, s, {
    activeStep: u,
    position: b,
    variant: S
  });
  let $;
  S === "progress" && (x === 1 ? $ = 100 : $ = Math.ceil(u / (x - 1) * 100));
  const M = XX(R);
  return /* @__PURE__ */ st(ZX, y({
    square: !0,
    elevation: 0,
    className: fe(M.root, p),
    ref: a,
    ownerState: R
  }, E, {
    children: [d, S === "text" && /* @__PURE__ */ st(k.Fragment, {
      children: [u + 1, " / ", x]
    }), S === "dots" && /* @__PURE__ */ _(JX, {
      ownerState: R,
      className: M.dots,
      children: [...new Array(x)].map((O, N) => /* @__PURE__ */ _(eZ, {
        className: fe(M.dot, N === u && M.dotActive),
        ownerState: R,
        dotActive: N === u
      }, N))
    }), S === "progress" && /* @__PURE__ */ _(tZ, y({
      ownerState: R,
      className: M.progress,
      variant: "determinate",
      value: $
    }, h)), g]
  }));
});
process.env.NODE_ENV !== "production" && (ZI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the active step (zero based index).
   * Defines which dot is highlighted when the variant is 'dots'.
   * @default 0
   */
  activeStep: Ro,
  /**
   * A back button element. For instance, it can be a `Button` or an `IconButton`.
   */
  backButton: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Props applied to the `LinearProgress` element.
   */
  LinearProgressProps: t.object,
  /**
   * A next button element. For instance, it can be a `Button` or an `IconButton`.
   */
  nextButton: t.node,
  /**
   * Set the positioning type.
   * @default 'bottom'
   */
  position: t.oneOf(["bottom", "static", "top"]),
  /**
   * The total steps.
   */
  steps: Ro.isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * @default 'dots'
   */
  variant: t.oneOf(["dots", "progress", "text"])
});
const jde = ZI;
function JI(e) {
  return We("MuiNativeSelect", e);
}
const nZ = Ye("MuiNativeSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]), R1 = nZ, oZ = ["className", "disabled", "error", "IconComponent", "inputRef", "variant"], rZ = (e) => {
  const {
    classes: n,
    variant: a,
    disabled: s,
    multiple: u,
    open: d,
    error: p
  } = e, h = {
    select: ["select", a, s && "disabled", u && "multiple", p && "error"],
    icon: ["icon", `icon${pe(a)}`, d && "iconOpen", s && "disabled"]
  };
  return He(h, JI, n);
}, eA = ({
  ownerState: e,
  theme: n
}) => y({
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  // When interacting quickly, the text can end up selected.
  // Native select can't be selected either.
  userSelect: "none",
  borderRadius: 0,
  // Reset
  cursor: "pointer",
  "&:focus": y({}, n.vars ? {
    backgroundColor: `rgba(${n.vars.palette.common.onBackgroundChannel} / 0.05)`
  } : {
    backgroundColor: n.palette.mode === "light" ? "rgba(0, 0, 0, 0.05)" : "rgba(255, 255, 255, 0.05)"
  }, {
    borderRadius: 0
    // Reset Chrome style
  }),
  // Remove IE11 arrow
  "&::-ms-expand": {
    display: "none"
  },
  [`&.${R1.disabled}`]: {
    cursor: "default"
  },
  "&[multiple]": {
    height: "auto"
  },
  "&:not([multiple]) option, &:not([multiple]) optgroup": {
    backgroundColor: (n.vars || n).palette.background.paper
  },
  // Bump specificity to allow extending custom inputs
  "&&&": {
    paddingRight: 24,
    minWidth: 16
    // So it doesn't collapse.
  }
}, e.variant === "filled" && {
  "&&&": {
    paddingRight: 32
  }
}, e.variant === "outlined" && {
  borderRadius: (n.vars || n).shape.borderRadius,
  "&:focus": {
    borderRadius: (n.vars || n).shape.borderRadius
    // Reset the reset for Chrome style
  },
  "&&&": {
    paddingRight: 32
  }
}), aZ = J("select", {
  name: "MuiNativeSelect",
  slot: "Select",
  shouldForwardProp: Vo,
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.select, n[a.variant], a.error && n.error, {
      [`&.${R1.multiple}`]: n.multiple
    }];
  }
})(eA), tA = ({
  ownerState: e,
  theme: n
}) => y({
  // We use a position absolute over a flexbox in order to forward the pointer events
  // to the input and to support wrapping tags..
  position: "absolute",
  right: 0,
  top: "calc(50% - .5em)",
  // Center vertically, height is 1em
  pointerEvents: "none",
  // Don't block pointer events on the select under the icon.
  color: (n.vars || n).palette.action.active,
  [`&.${R1.disabled}`]: {
    color: (n.vars || n).palette.action.disabled
  }
}, e.open && {
  transform: "rotate(180deg)"
}, e.variant === "filled" && {
  right: 7
}, e.variant === "outlined" && {
  right: 7
}), iZ = J("svg", {
  name: "MuiNativeSelect",
  slot: "Icon",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.icon, a.variant && n[`icon${pe(a.variant)}`], a.open && n.iconOpen];
  }
})(tA), nA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const {
    className: s,
    disabled: u,
    error: d,
    IconComponent: p,
    inputRef: h,
    variant: g = "standard"
  } = n, b = le(n, oZ), x = y({}, n, {
    disabled: u,
    variant: g,
    error: d
  }), S = rZ(x);
  return /* @__PURE__ */ st(k.Fragment, {
    children: [/* @__PURE__ */ _(aZ, y({
      ownerState: x,
      className: fe(S.select, s),
      disabled: u,
      ref: h || a
    }, b)), n.multiple ? null : /* @__PURE__ */ _(iZ, {
      as: p,
      ownerState: x,
      className: S.icon
    })]
  });
});
process.env.NODE_ENV !== "production" && (nA.propTypes = {
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * The CSS class name of the select element.
   */
  className: t.string,
  /**
   * If `true`, the select is disabled.
   */
  disabled: t.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: t.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: t.elementType.isRequired,
  /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */
  inputRef: Wn,
  /**
   * @ignore
   */
  multiple: t.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: t.string,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: t.func,
  /**
   * The input value.
   */
  value: t.any,
  /**
   * The variant to use.
   */
  variant: t.oneOf(["standard", "outlined", "filled"])
});
const oA = nA, sZ = ["className", "children", "classes", "IconComponent", "input", "inputProps", "variant"], lZ = ["root"], cZ = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"]
  }, JI, n);
}, uZ = /* @__PURE__ */ _(T1, {}), E1 = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    name: "MuiNativeSelect",
    props: n
  }), {
    className: u,
    children: d,
    classes: p = {},
    IconComponent: h = f1,
    input: g = uZ,
    inputProps: b
  } = s, x = le(s, sZ), S = is(), E = ql({
    props: s,
    muiFormControl: S,
    states: ["variant"]
  }), R = y({}, s, {
    classes: p
  }), $ = cZ(R), M = le(p, lZ);
  return /* @__PURE__ */ _(k.Fragment, {
    children: /* @__PURE__ */ k.cloneElement(g, y({
      // Most of the logic is implemented in `NativeSelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: oA,
      inputProps: y({
        children: d,
        classes: M,
        IconComponent: h,
        variant: E.variant,
        type: void 0
      }, b, g ? g.props.inputProps : {}),
      ref: a
    }, x, {
      className: fe($.root, g.props.className, u)
    }))
  });
});
process.env.NODE_ENV !== "production" && (E1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: t.elementType,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   * @default <Input />
   */
  input: t.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attributes) applied to the `select` element.
   */
  inputProps: t.object,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {React.ChangeEvent<HTMLSelectElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: t.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The `input` value. The DOM API casts this to a string.
   */
  value: t.any,
  /**
   * The variant to use.
   */
  variant: t.oneOf(["filled", "outlined", "standard"])
});
E1.muiName = "Select";
const Ude = E1;
var LM;
const dZ = ["children", "classes", "className", "label", "notched"], pZ = J("fieldset", {
  shouldForwardProp: Vo
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), fZ = J("legend", {
  shouldForwardProp: Vo
})(({
  ownerState: e,
  theme: n
}) => y({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden"
}, !e.withLabel && {
  padding: 0,
  lineHeight: "11px",
  // sync with `height` in `legend` styles
  transition: n.transitions.create("width", {
    duration: 150,
    easing: n.transitions.easing.easeOut
  })
}, e.withLabel && y({
  display: "block",
  // Fix conflict with normalize.css and sanitize.css
  padding: 0,
  height: 11,
  // sync with `lineHeight` in `legend` styles
  fontSize: "0.75em",
  visibility: "hidden",
  maxWidth: 0.01,
  transition: n.transitions.create("max-width", {
    duration: 50,
    easing: n.transitions.easing.easeOut
  }),
  whiteSpace: "nowrap",
  "& > span": {
    paddingLeft: 5,
    paddingRight: 5,
    display: "inline-block",
    opacity: 0,
    visibility: "visible"
  }
}, e.notched && {
  maxWidth: "100%",
  transition: n.transitions.create("max-width", {
    duration: 100,
    easing: n.transitions.easing.easeOut,
    delay: 50
  })
})));
function rA(e) {
  const {
    className: n,
    label: a,
    notched: s
  } = e, u = le(e, dZ), d = a != null && a !== "", p = y({}, e, {
    notched: s,
    withLabel: d
  });
  return /* @__PURE__ */ _(pZ, y({
    "aria-hidden": !0,
    className: n,
    ownerState: p
  }, u, {
    children: /* @__PURE__ */ _(fZ, {
      ownerState: p,
      children: d ? /* @__PURE__ */ _("span", {
        children: a
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        LM || (LM = /* @__PURE__ */ _("span", {
          className: "notranslate",
          children: "​"
        }))
      )
    })
  }));
}
process.env.NODE_ENV !== "production" && (rA.propTypes = {
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The label.
   */
  label: t.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: t.bool.isRequired,
  /**
   * @ignore
   */
  style: t.object
});
const mZ = ["components", "fullWidth", "inputComponent", "label", "multiline", "notched", "slots", "type"], hZ = (e) => {
  const {
    classes: n
  } = e, s = He({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, h9, n);
  return y({}, n, s);
}, vZ = J(JT, {
  shouldForwardProp: (e) => Vo(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: XT
})(({
  theme: e,
  ownerState: n
}) => {
  const a = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return y({
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${js.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${js.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : a
      }
    },
    [`&.${js.focused} .${js.notchedOutline}`]: {
      borderColor: (e.vars || e).palette[n.color].main,
      borderWidth: 2
    },
    [`&.${js.error} .${js.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.error.main
    },
    [`&.${js.disabled} .${js.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.action.disabled
    }
  }, n.startAdornment && {
    paddingLeft: 14
  }, n.endAdornment && {
    paddingRight: 14
  }, n.multiline && y({
    padding: "16.5px 14px"
  }, n.size === "small" && {
    padding: "8.5px 14px"
  }));
}), gZ = J(rA, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, n) => n.notchedOutline
})(({
  theme: e
}) => {
  const n = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : n
  };
}), bZ = J(ex, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: ZT
})(({
  theme: e,
  ownerState: n
}) => y({
  padding: "16.5px 14px"
}, !e.vars && {
  "&:-webkit-autofill": {
    WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
    WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
    caretColor: e.palette.mode === "light" ? null : "#fff",
    borderRadius: "inherit"
  }
}, e.vars && {
  "&:-webkit-autofill": {
    borderRadius: "inherit"
  },
  [e.getColorSchemeSelector("dark")]: {
    "&:-webkit-autofill": {
      WebkitBoxShadow: "0 0 0 100px #266798 inset",
      WebkitTextFillColor: "#fff",
      caretColor: "#fff"
    }
  }
}, n.size === "small" && {
  padding: "8.5px 14px"
}, n.multiline && {
  padding: 0
}, n.startAdornment && {
  paddingLeft: 0
}, n.endAdornment && {
  paddingRight: 0
})), O1 = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d, p, h;
  const g = Ie({
    props: n,
    name: "MuiOutlinedInput"
  }), {
    components: b = {},
    fullWidth: x = !1,
    inputComponent: S = "input",
    label: E,
    multiline: R = !1,
    notched: $,
    slots: M = {},
    type: O = "text"
  } = g, N = le(g, mZ), V = hZ(g), I = is(), z = ql({
    props: g,
    muiFormControl: I,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), B = y({}, g, {
    color: z.color || "primary",
    disabled: z.disabled,
    error: z.error,
    focused: z.focused,
    formControl: I,
    fullWidth: x,
    hiddenLabel: z.hiddenLabel,
    multiline: R,
    size: z.size,
    type: O
  }), P = (s = (u = M.root) != null ? u : b.Root) != null ? s : vZ, F = (d = (p = M.input) != null ? p : b.Input) != null ? d : bZ;
  return /* @__PURE__ */ _(tx, y({
    slots: {
      root: P,
      input: F
    },
    renderSuffix: (H) => /* @__PURE__ */ _(gZ, {
      ownerState: B,
      className: V.notchedOutline,
      label: E != null && E !== "" && z.required ? h || (h = /* @__PURE__ */ st(k.Fragment, {
        children: [E, " ", "*"]
      })) : E,
      notched: typeof $ < "u" ? $ : !!(H.startAdornment || H.filled || H.focused)
    }),
    fullWidth: x,
    inputComponent: S,
    multiline: R,
    ref: a,
    type: O
  }, N, {
    classes: y({}, V, {
      notchedOutline: null
    })
  }));
});
process.env.NODE_ENV !== "production" && (O1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: t.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: t.oneOfType([t.oneOf(["primary", "secondary"]), t.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    Input: t.elementType,
    Root: t.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: t.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: t.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: t.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * The id of the `input` element.
   */
  id: t.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: t.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: t.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: t.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: t.oneOfType([t.number, t.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: t.oneOfType([t.number, t.string]),
  /**
   * If `true`, a [TextareaAutosize](/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: t.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: t.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: t.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: t.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: t.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: t.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: t.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: t.oneOfType([t.number, t.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: t.shape({
    input: t.elementType,
    root: t.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: t.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: t.any
});
O1.muiName = "Input";
const aA = O1;
function yZ(e) {
  return We("MuiPagination", e);
}
const CZ = Ye("MuiPagination", ["root", "ul", "outlined", "text"]), Hde = CZ, TZ = ["boundaryCount", "componentName", "count", "defaultPage", "disabled", "hideNextButton", "hidePrevButton", "onChange", "page", "showFirstButton", "showLastButton", "siblingCount"];
function xZ(e = {}) {
  const {
    boundaryCount: n = 1,
    componentName: a = "usePagination",
    count: s = 1,
    defaultPage: u = 1,
    disabled: d = !1,
    hideNextButton: p = !1,
    hidePrevButton: h = !1,
    onChange: g,
    page: b,
    showFirstButton: x = !1,
    showLastButton: S = !1,
    siblingCount: E = 1
  } = e, R = le(e, TZ), [$, M] = Eo({
    controlled: b,
    default: u,
    name: a,
    state: "page"
  }), O = (U, Q) => {
    b || M(Q), g && g(U, Q);
  }, N = (U, Q) => {
    const Y = Q - U + 1;
    return Array.from({
      length: Y
    }, (te, Z) => U + Z);
  }, V = N(1, Math.min(n, s)), I = N(Math.max(s - n + 1, n + 1), s), z = Math.max(
    Math.min(
      // Natural start
      $ - E,
      // Lower boundary when page is high
      s - n - E * 2 - 1
    ),
    // Greater than startPages
    n + 2
  ), B = Math.min(
    Math.max(
      // Natural end
      $ + E,
      // Upper boundary when page is low
      n + E * 2 + 2
    ),
    // Less than endPages
    I.length > 0 ? I[0] - 2 : s - 1
  ), P = [
    ...x ? ["first"] : [],
    ...h ? [] : ["previous"],
    ...V,
    // Start ellipsis
    // eslint-disable-next-line no-nested-ternary
    ...z > n + 2 ? ["start-ellipsis"] : n + 1 < s - n ? [n + 1] : [],
    // Sibling pages
    ...N(z, B),
    // End ellipsis
    // eslint-disable-next-line no-nested-ternary
    ...B < s - n - 1 ? ["end-ellipsis"] : s - n > n ? [s - n] : [],
    ...I,
    ...p ? [] : ["next"],
    ...S ? ["last"] : []
  ], F = (U) => {
    switch (U) {
      case "first":
        return 1;
      case "previous":
        return $ - 1;
      case "next":
        return $ + 1;
      case "last":
        return s;
      default:
        return null;
    }
  }, H = P.map((U) => typeof U == "number" ? {
    onClick: (Q) => {
      O(Q, U);
    },
    type: "page",
    page: U,
    selected: U === $,
    disabled: d,
    "aria-current": U === $ ? "true" : void 0
  } : {
    onClick: (Q) => {
      O(Q, F(U));
    },
    type: U,
    page: F(U),
    selected: !1,
    disabled: d || U.indexOf("ellipsis") === -1 && (U === "next" || U === "last" ? $ >= s : $ <= 1)
  });
  return y({
    items: H
  }, R);
}
function SZ(e) {
  return We("MuiPaginationItem", e);
}
const kZ = Ye("MuiPaginationItem", ["root", "page", "sizeSmall", "sizeLarge", "text", "textPrimary", "textSecondary", "outlined", "outlinedPrimary", "outlinedSecondary", "rounded", "ellipsis", "firstLast", "previousNext", "focusVisible", "disabled", "selected", "icon", "colorPrimary", "colorSecondary"]), gi = kZ, Mw = Tn(/* @__PURE__ */ _("path", {
  d: "M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"
}), "FirstPage"), $w = Tn(/* @__PURE__ */ _("path", {
  d: "M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"
}), "LastPage"), IM = Tn(/* @__PURE__ */ _("path", {
  d: "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
}), "NavigateBefore"), AM = Tn(/* @__PURE__ */ _("path", {
  d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
}), "NavigateNext"), wZ = ["className", "color", "component", "components", "disabled", "page", "selected", "shape", "size", "slots", "type", "variant"], iA = (e, n) => {
  const {
    ownerState: a
  } = e;
  return [n.root, n[a.variant], n[`size${pe(a.size)}`], a.variant === "text" && n[`text${pe(a.color)}`], a.variant === "outlined" && n[`outlined${pe(a.color)}`], a.shape === "rounded" && n.rounded, a.type === "page" && n.page, (a.type === "start-ellipsis" || a.type === "end-ellipsis") && n.ellipsis, (a.type === "previous" || a.type === "next") && n.previousNext, (a.type === "first" || a.type === "last") && n.firstLast];
}, RZ = (e) => {
  const {
    classes: n,
    color: a,
    disabled: s,
    selected: u,
    size: d,
    shape: p,
    type: h,
    variant: g
  } = e, b = {
    root: ["root", `size${pe(d)}`, g, p, a !== "standard" && `color${pe(a)}`, a !== "standard" && `${g}${pe(a)}`, s && "disabled", u && "selected", {
      page: "page",
      first: "firstLast",
      last: "firstLast",
      "start-ellipsis": "ellipsis",
      "end-ellipsis": "ellipsis",
      previous: "previousNext",
      next: "previousNext"
    }[h]],
    icon: ["icon"]
  };
  return He(b, SZ, n);
}, EZ = J("div", {
  name: "MuiPaginationItem",
  slot: "Root",
  overridesResolver: iA
})(({
  theme: e,
  ownerState: n
}) => y({}, e.typography.body2, {
  borderRadius: 32 / 2,
  textAlign: "center",
  boxSizing: "border-box",
  minWidth: 32,
  padding: "0 6px",
  margin: "0 3px",
  color: (e.vars || e).palette.text.primary,
  height: "auto",
  [`&.${gi.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  }
}, n.size === "small" && {
  minWidth: 26,
  borderRadius: 26 / 2,
  margin: "0 1px",
  padding: "0 4px"
}, n.size === "large" && {
  minWidth: 40,
  borderRadius: 40 / 2,
  padding: "0 10px",
  fontSize: e.typography.pxToRem(15)
})), OZ = J(Zo, {
  name: "MuiPaginationItem",
  slot: "Root",
  overridesResolver: iA
})(({
  theme: e,
  ownerState: n
}) => y({}, e.typography.body2, {
  borderRadius: 32 / 2,
  textAlign: "center",
  boxSizing: "border-box",
  minWidth: 32,
  height: 32,
  padding: "0 6px",
  margin: "0 3px",
  color: (e.vars || e).palette.text.primary,
  [`&.${gi.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette.action.focus
  },
  [`&.${gi.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  },
  transition: e.transitions.create(["color", "background-color"], {
    duration: e.transitions.duration.short
  }),
  "&:hover": {
    backgroundColor: (e.vars || e).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${gi.selected}`]: {
    backgroundColor: (e.vars || e).palette.action.selected,
    "&:hover": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Yt(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (e.vars || e).palette.action.selected
      }
    },
    [`&.${gi.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Yt(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
    },
    [`&.${gi.disabled}`]: {
      opacity: 1,
      color: (e.vars || e).palette.action.disabled,
      backgroundColor: (e.vars || e).palette.action.selected
    }
  }
}, n.size === "small" && {
  minWidth: 26,
  height: 26,
  borderRadius: 26 / 2,
  margin: "0 1px",
  padding: "0 4px"
}, n.size === "large" && {
  minWidth: 40,
  height: 40,
  borderRadius: 40 / 2,
  padding: "0 10px",
  fontSize: e.typography.pxToRem(15)
}, n.shape === "rounded" && {
  borderRadius: (e.vars || e).shape.borderRadius
}), ({
  theme: e,
  ownerState: n
}) => y({}, n.variant === "text" && {
  [`&.${gi.selected}`]: y({}, n.color !== "standard" && {
    color: (e.vars || e).palette[n.color].contrastText,
    backgroundColor: (e.vars || e).palette[n.color].main,
    "&:hover": {
      backgroundColor: (e.vars || e).palette[n.color].dark,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (e.vars || e).palette[n.color].main
      }
    },
    [`&.${gi.focusVisible}`]: {
      backgroundColor: (e.vars || e).palette[n.color].dark
    }
  }, {
    [`&.${gi.disabled}`]: {
      color: (e.vars || e).palette.action.disabled
    }
  })
}, n.variant === "outlined" && {
  border: e.vars ? `1px solid rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"}`,
  [`&.${gi.selected}`]: y({}, n.color !== "standard" && {
    color: (e.vars || e).palette[n.color].main,
    border: `1px solid ${e.vars ? `rgba(${e.vars.palette[n.color].mainChannel} / 0.5)` : Yt(e.palette[n.color].main, 0.5)}`,
    backgroundColor: e.vars ? `rgba(${e.vars.palette[n.color].mainChannel} / ${e.vars.palette.action.activatedOpacity})` : Yt(e.palette[n.color].main, e.palette.action.activatedOpacity),
    "&:hover": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette[n.color].mainChannel} / calc(${e.vars.palette.action.activatedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Yt(e.palette[n.color].main, e.palette.action.activatedOpacity + e.palette.action.focusOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    [`&.${gi.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette[n.color].mainChannel} / calc(${e.vars.palette.action.activatedOpacity} + ${e.vars.palette.action.focusOpacity}))` : Yt(e.palette[n.color].main, e.palette.action.activatedOpacity + e.palette.action.focusOpacity)
    }
  }, {
    [`&.${gi.disabled}`]: {
      borderColor: (e.vars || e).palette.action.disabledBackground,
      color: (e.vars || e).palette.action.disabled
    }
  })
})), PZ = J("div", {
  name: "MuiPaginationItem",
  slot: "Icon",
  overridesResolver: (e, n) => n.icon
})(({
  theme: e,
  ownerState: n
}) => y({
  fontSize: e.typography.pxToRem(20),
  margin: "0 -8px"
}, n.size === "small" && {
  fontSize: e.typography.pxToRem(18)
}, n.size === "large" && {
  fontSize: e.typography.pxToRem(22)
})), sA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiPaginationItem"
  }), {
    className: u,
    color: d = "standard",
    component: p,
    components: h = {},
    disabled: g = !1,
    page: b,
    selected: x = !1,
    shape: S = "circular",
    size: E = "medium",
    slots: R = {},
    type: $ = "page",
    variant: M = "text"
  } = s, O = le(s, wZ), N = y({}, s, {
    color: d,
    disabled: g,
    selected: x,
    shape: S,
    size: E,
    type: $,
    variant: M
  }), V = En(), I = RZ(N), B = (V.direction === "rtl" ? {
    previous: R.next || h.next || AM,
    next: R.previous || h.previous || IM,
    last: R.first || h.first || Mw,
    first: R.last || h.last || $w
  } : {
    previous: R.previous || h.previous || IM,
    next: R.next || h.next || AM,
    first: R.first || h.first || Mw,
    last: R.last || h.last || $w
  })[$];
  return $ === "start-ellipsis" || $ === "end-ellipsis" ? /* @__PURE__ */ _(EZ, {
    ref: a,
    ownerState: N,
    className: fe(I.root, u),
    children: "…"
  }) : /* @__PURE__ */ st(OZ, y({
    ref: a,
    ownerState: N,
    component: p,
    disabled: g,
    className: fe(I.root, u)
  }, O, {
    children: [$ === "page" && b, B ? /* @__PURE__ */ _(PZ, {
      as: B,
      ownerState: N,
      className: I.icon
    }) : null]
  }));
});
process.env.NODE_ENV !== "production" && (sA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The active color.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'standard'
   */
  color: t.oneOfType([t.oneOf(["primary", "secondary", "standard"]), t.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    first: t.elementType,
    last: t.elementType,
    next: t.elementType,
    previous: t.elementType
  }),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * The current page number.
   */
  page: t.node,
  /**
   * If `true` the pagination item is selected.
   * @default false
   */
  selected: t.bool,
  /**
   * The shape of the pagination item.
   * @default 'circular'
   */
  shape: t.oneOf(["circular", "rounded"]),
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["small", "medium", "large"]), t.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: t.shape({
    first: t.elementType,
    last: t.elementType,
    next: t.elementType,
    previous: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The type of pagination item.
   * @default 'page'
   */
  type: t.oneOf(["end-ellipsis", "first", "last", "next", "page", "previous", "start-ellipsis"]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: t.oneOfType([t.oneOf(["outlined", "text"]), t.string])
});
const DZ = sA, MZ = ["boundaryCount", "className", "color", "count", "defaultPage", "disabled", "getItemAriaLabel", "hideNextButton", "hidePrevButton", "onChange", "page", "renderItem", "shape", "showFirstButton", "showLastButton", "siblingCount", "size", "variant"], $Z = (e) => {
  const {
    classes: n,
    variant: a
  } = e;
  return He({
    root: ["root", a],
    ul: ["ul"]
  }, yZ, n);
}, NZ = J("nav", {
  name: "MuiPagination",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[a.variant]];
  }
})({}), LZ = J("ul", {
  name: "MuiPagination",
  slot: "Ul",
  overridesResolver: (e, n) => n.ul
})({
  display: "flex",
  flexWrap: "wrap",
  alignItems: "center",
  padding: 0,
  margin: 0,
  listStyle: "none"
});
function IZ(e, n, a) {
  return e === "page" ? `${a ? "" : "Go to "}page ${n}` : `Go to ${e} page`;
}
const lA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiPagination"
  }), {
    boundaryCount: u = 1,
    className: d,
    color: p = "standard",
    count: h = 1,
    defaultPage: g = 1,
    disabled: b = !1,
    getItemAriaLabel: x = IZ,
    hideNextButton: S = !1,
    hidePrevButton: E = !1,
    renderItem: R = (H) => /* @__PURE__ */ _(DZ, y({}, H)),
    shape: $ = "circular",
    showFirstButton: M = !1,
    showLastButton: O = !1,
    siblingCount: N = 1,
    size: V = "medium",
    variant: I = "text"
  } = s, z = le(s, MZ), {
    items: B
  } = xZ(y({}, s, {
    componentName: "Pagination"
  })), P = y({}, s, {
    boundaryCount: u,
    color: p,
    count: h,
    defaultPage: g,
    disabled: b,
    getItemAriaLabel: x,
    hideNextButton: S,
    hidePrevButton: E,
    renderItem: R,
    shape: $,
    showFirstButton: M,
    showLastButton: O,
    siblingCount: N,
    size: V,
    variant: I
  }), F = $Z(P);
  return /* @__PURE__ */ _(NZ, y({
    "aria-label": "pagination navigation",
    className: fe(F.root, d),
    ownerState: P,
    ref: a
  }, z, {
    children: /* @__PURE__ */ _(LZ, {
      className: F.ul,
      ownerState: P,
      children: B.map((H, U) => /* @__PURE__ */ _("li", {
        children: R(y({}, H, {
          color: p,
          "aria-label": x(H.type, H.page, H.selected),
          shape: $,
          size: V,
          variant: I
        }))
      }, U))
    })
  }));
});
process.env.NODE_ENV !== "production" && (lA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Number of always visible pages at the beginning and end.
   * @default 1
   */
  boundaryCount: Ro,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The active color.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'standard'
   */
  color: t.oneOfType([t.oneOf(["primary", "secondary", "standard"]), t.string]),
  /**
   * The total number of pages.
   * @default 1
   */
  count: Ro,
  /**
   * The page selected by default when the component is uncontrolled.
   * @default 1
   */
  defaultPage: Ro,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous' | 'start-ellipsis' | 'end-ellipsis'). Defaults to 'page'.
   * @param {number} page The page number to format.
   * @param {bool} selected If true, the current page is selected.
   * @returns {string}
   */
  getItemAriaLabel: t.func,
  /**
   * If `true`, hide the next-page button.
   * @default false
   */
  hideNextButton: t.bool,
  /**
   * If `true`, hide the previous-page button.
   * @default false
   */
  hidePrevButton: t.bool,
  /**
   * Callback fired when the page is changed.
   *
   * @param {React.ChangeEvent<unknown>} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onChange: t.func,
  /**
   * The current page.
   */
  page: Ro,
  /**
   * Render the item.
   * @param {PaginationRenderItemParams} params The props to spread on a PaginationItem.
   * @returns {ReactNode}
   * @default (item) => <PaginationItem {...item} />
   */
  renderItem: t.func,
  /**
   * The shape of the pagination items.
   * @default 'circular'
   */
  shape: t.oneOf(["circular", "rounded"]),
  /**
   * If `true`, show the first-page button.
   * @default false
   */
  showFirstButton: t.bool,
  /**
   * If `true`, show the last-page button.
   * @default false
   */
  showLastButton: t.bool,
  /**
   * Number of always visible pages before and after the current page.
   * @default 1
   */
  siblingCount: Ro,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["small", "medium", "large"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: t.oneOfType([t.oneOf(["outlined", "text"]), t.string])
});
const Wde = lA, AZ = Tn(/* @__PURE__ */ _("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "RadioButtonUnchecked"), _Z = Tn(/* @__PURE__ */ _("path", {
  d: "M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
}), "RadioButtonChecked"), VZ = J("span", {
  shouldForwardProp: Vo
})({
  position: "relative",
  display: "flex"
}), BZ = J(AZ)({
  // Scale applied to prevent dot misalignment in Safari
  transform: "scale(1)"
}), zZ = J(_Z)(({
  theme: e,
  ownerState: n
}) => y({
  left: 0,
  position: "absolute",
  transform: "scale(0)",
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeIn,
    duration: e.transitions.duration.shortest
  })
}, n.checked && {
  transform: "scale(1)",
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeOut,
    duration: e.transitions.duration.shortest
  })
}));
function P1(e) {
  const {
    checked: n = !1,
    classes: a = {},
    fontSize: s
  } = e, u = y({}, e, {
    checked: n
  });
  return /* @__PURE__ */ st(VZ, {
    className: a.root,
    ownerState: u,
    children: [/* @__PURE__ */ _(BZ, {
      fontSize: s,
      className: a.background,
      ownerState: u
    }), /* @__PURE__ */ _(zZ, {
      fontSize: s,
      className: a.dot,
      ownerState: u
    })]
  });
}
process.env.NODE_ENV !== "production" && (P1.propTypes = {
  /**
   * If `true`, the component is checked.
   */
  checked: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   */
  fontSize: t.oneOf(["small", "medium"])
});
const cA = /* @__PURE__ */ k.createContext(void 0);
process.env.NODE_ENV !== "production" && (cA.displayName = "RadioGroupContext");
const uA = cA;
function FZ() {
  return k.useContext(uA);
}
function jZ(e) {
  return We("MuiRadio", e);
}
const UZ = Ye("MuiRadio", ["root", "checked", "disabled", "colorPrimary", "colorSecondary", "sizeSmall"]), _M = UZ, HZ = ["checked", "checkedIcon", "color", "icon", "name", "onChange", "size", "className"], WZ = (e) => {
  const {
    classes: n,
    color: a,
    size: s
  } = e, u = {
    root: ["root", `color${pe(a)}`, s !== "medium" && `size${pe(s)}`]
  };
  return y({}, n, He(u, jZ, n));
}, YZ = J(m1, {
  shouldForwardProp: (e) => Vo(e) || e === "classes",
  name: "MuiRadio",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.size !== "medium" && n[`size${pe(a.size)}`], n[`color${pe(a.color)}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  color: (e.vars || e).palette.text.secondary
}, !n.disableRipple && {
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${n.color === "default" ? e.vars.palette.action.activeChannel : e.vars.palette[n.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(n.color === "default" ? e.palette.action.active : e.palette[n.color].main, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  }
}, n.color !== "default" && {
  [`&.${_M.checked}`]: {
    color: (e.vars || e).palette[n.color].main
  }
}, {
  [`&.${_M.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  }
}));
function qZ(e, n) {
  return typeof n == "object" && n !== null ? e === n : String(e) === String(n);
}
const VM = /* @__PURE__ */ _(P1, {
  checked: !0
}), BM = /* @__PURE__ */ _(P1, {}), dA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u;
  const d = Ie({
    props: n,
    name: "MuiRadio"
  }), {
    checked: p,
    checkedIcon: h = VM,
    color: g = "primary",
    icon: b = BM,
    name: x,
    onChange: S,
    size: E = "medium",
    className: R
  } = d, $ = le(d, HZ), M = y({}, d, {
    color: g,
    size: E
  }), O = WZ(M), N = FZ();
  let V = p;
  const I = TT(S, N && N.onChange);
  let z = x;
  return N && (typeof V > "u" && (V = qZ(N.value, d.value)), typeof z > "u" && (z = N.name)), /* @__PURE__ */ _(YZ, y({
    type: "radio",
    icon: /* @__PURE__ */ k.cloneElement(b, {
      fontSize: (s = BM.props.fontSize) != null ? s : E
    }),
    checkedIcon: /* @__PURE__ */ k.cloneElement(h, {
      fontSize: (u = VM.props.fontSize) != null ? u : E
    }),
    ownerState: M,
    classes: O,
    name: z,
    checked: V,
    onChange: I,
    ref: a,
    className: fe(O.root, R)
  }, $));
});
process.env.NODE_ENV !== "production" && (dA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: t.bool,
  /**
   * The icon to display when the component is checked.
   * @default <RadioButtonIcon checked />
   */
  checkedIcon: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * If `true`, the component is disabled.
   */
  disabled: t.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: t.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <RadioButtonIcon />
   */
  icon: t.node,
  /**
   * The id of the `input` element.
   */
  id: t.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * Name attribute of the `input` element.
   */
  name: t.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: t.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: t.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["medium", "small"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   */
  value: t.any
});
const Yde = dA, GZ = ["actions", "children", "defaultValue", "name", "onChange", "value"], pA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: s,
    children: u,
    defaultValue: d,
    name: p,
    onChange: h,
    value: g
  } = n, b = le(n, GZ), x = k.useRef(null), [S, E] = Eo({
    controlled: g,
    default: d,
    name: "RadioGroup"
  });
  k.useImperativeHandle(s, () => ({
    focus: () => {
      let O = x.current.querySelector("input:not(:disabled):checked");
      O || (O = x.current.querySelector("input:not(:disabled)")), O && O.focus();
    }
  }), []);
  const R = cn(a, x), $ = pa(p), M = k.useMemo(() => ({
    name: $,
    onChange(O) {
      E(O.target.value), h && h(O, O.target.value);
    },
    value: S
  }), [$, h, E, S]);
  return /* @__PURE__ */ _(uA.Provider, {
    value: M,
    children: /* @__PURE__ */ _(AG, y({
      role: "radiogroup",
      ref: R
    }, b, {
      children: u
    }))
  });
});
process.env.NODE_ENV !== "production" && (pA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * The name used to reference the value of the control.
   * If you don't provide this prop, it falls back to a randomly generated name.
   */
  name: t.string,
  /**
   * Callback fired when a radio button is selected.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * @param {string} value The value of the selected radio button.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: t.func,
  /**
   * Value of the selected radio button. The DOM API casts this to a string.
   */
  value: t.any
});
const qde = pA, KZ = Tn(/* @__PURE__ */ _("path", {
  d: "M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
}), "Star"), QZ = Tn(/* @__PURE__ */ _("path", {
  d: "M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
}), "StarBorder");
function XZ(e) {
  return We("MuiRating", e);
}
const ZZ = Ye("MuiRating", ["root", "sizeSmall", "sizeMedium", "sizeLarge", "readOnly", "disabled", "focusVisible", "visuallyHidden", "pristine", "label", "labelEmptyValueActive", "icon", "iconEmpty", "iconFilled", "iconHover", "iconFocus", "iconActive", "decimal"]), Ov = ZZ, JZ = ["value"], eJ = ["className", "defaultValue", "disabled", "emptyIcon", "emptyLabelText", "getLabelText", "highlightSelectedOnly", "icon", "IconContainerComponent", "max", "name", "onChange", "onChangeActive", "onMouseLeave", "onMouseMove", "precision", "readOnly", "size", "value"];
function tJ(e) {
  const n = e.toString().split(".")[1];
  return n ? n.length : 0;
}
function lw(e, n) {
  if (e == null)
    return e;
  const a = Math.round(e / n) * n;
  return Number(a.toFixed(tJ(n)));
}
const nJ = (e) => {
  const {
    classes: n,
    size: a,
    readOnly: s,
    disabled: u,
    emptyValueFocused: d,
    focusVisible: p
  } = e, h = {
    root: ["root", `size${pe(a)}`, u && "disabled", p && "focusVisible", s && "readOnly"],
    label: ["label", "pristine"],
    labelEmptyValue: [d && "labelEmptyValueActive"],
    icon: ["icon"],
    iconEmpty: ["iconEmpty"],
    iconFilled: ["iconFilled"],
    iconHover: ["iconHover"],
    iconFocus: ["iconFocus"],
    iconActive: ["iconActive"],
    decimal: ["decimal"],
    visuallyHidden: ["visuallyHidden"]
  };
  return He(h, XZ, n);
}, oJ = J("span", {
  name: "MuiRating",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [{
      [`& .${Ov.visuallyHidden}`]: n.visuallyHidden
    }, n.root, n[`size${pe(a.size)}`], a.readOnly && n.readOnly];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  display: "inline-flex",
  // Required to position the pristine input absolutely
  position: "relative",
  fontSize: e.typography.pxToRem(24),
  color: "#faaf00",
  cursor: "pointer",
  textAlign: "left",
  width: "min-content",
  WebkitTapHighlightColor: "transparent",
  [`&.${Ov.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity,
    pointerEvents: "none"
  },
  [`&.${Ov.focusVisible} .${Ov.iconActive}`]: {
    outline: "1px solid #999"
  },
  [`& .${Ov.visuallyHidden}`]: CN
}, n.size === "small" && {
  fontSize: e.typography.pxToRem(18)
}, n.size === "large" && {
  fontSize: e.typography.pxToRem(30)
}, n.readOnly && {
  pointerEvents: "none"
})), fA = J("label", {
  name: "MuiRating",
  slot: "Label",
  overridesResolver: ({
    ownerState: e
  }, n) => [n.label, e.emptyValueFocused && n.labelEmptyValueActive]
})(({
  ownerState: e
}) => y({
  cursor: "inherit"
}, e.emptyValueFocused && {
  top: 0,
  bottom: 0,
  position: "absolute",
  outline: "1px solid #999",
  width: "100%"
})), rJ = J("span", {
  name: "MuiRating",
  slot: "Icon",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.icon, a.iconEmpty && n.iconEmpty, a.iconFilled && n.iconFilled, a.iconHover && n.iconHover, a.iconFocus && n.iconFocus, a.iconActive && n.iconActive];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  // Fit wrapper to actual icon size.
  display: "flex",
  transition: e.transitions.create("transform", {
    duration: e.transitions.duration.shortest
  }),
  // Fix mouseLeave issue.
  // https://github.com/facebook/react/issues/4492
  pointerEvents: "none"
}, n.iconActive && {
  transform: "scale(1.2)"
}, n.iconEmpty && {
  color: (e.vars || e).palette.action.disabled
})), aJ = J("span", {
  name: "MuiRating",
  slot: "Decimal",
  shouldForwardProp: (e) => Rg(e) && e !== "iconActive",
  overridesResolver: (e, n) => {
    const {
      iconActive: a
    } = e;
    return [n.decimal, a && n.iconActive];
  }
})(({
  iconActive: e
}) => y({
  position: "relative"
}, e && {
  transform: "scale(1.2)"
}));
function mA(e) {
  const n = le(e, JZ);
  return /* @__PURE__ */ _("span", y({}, n));
}
process.env.NODE_ENV !== "production" && (mA.propTypes = {
  value: t.number.isRequired
});
function Nw(e) {
  const {
    classes: n,
    disabled: a,
    emptyIcon: s,
    focus: u,
    getLabelText: d,
    highlightSelectedOnly: p,
    hover: h,
    icon: g,
    IconContainerComponent: b,
    isActive: x,
    itemValue: S,
    labelProps: E,
    name: R,
    onBlur: $,
    onChange: M,
    onClick: O,
    onFocus: N,
    readOnly: V,
    ownerState: I,
    ratingValue: z,
    ratingValueRounded: B
  } = e, P = p ? S === z : S <= z, F = S <= h, H = S <= u, U = S === B, Q = pa(), Y = /* @__PURE__ */ _(rJ, {
    as: b,
    value: S,
    className: fe(n.icon, P ? n.iconFilled : n.iconEmpty, F && n.iconHover, H && n.iconFocus, x && n.iconActive),
    ownerState: y({}, I, {
      iconEmpty: !P,
      iconFilled: P,
      iconHover: F,
      iconFocus: H,
      iconActive: x
    }),
    children: s && !P ? s : g
  });
  return V ? /* @__PURE__ */ _("span", y({}, E, {
    children: Y
  })) : /* @__PURE__ */ st(k.Fragment, {
    children: [/* @__PURE__ */ st(fA, y({
      ownerState: y({}, I, {
        emptyValueFocused: void 0
      }),
      htmlFor: Q
    }, E, {
      children: [Y, /* @__PURE__ */ _("span", {
        className: n.visuallyHidden,
        children: d(S)
      })]
    })), /* @__PURE__ */ _("input", {
      className: n.visuallyHidden,
      onFocus: N,
      onBlur: $,
      onChange: M,
      onClick: O,
      disabled: a,
      value: S,
      id: Q,
      type: "radio",
      name: R,
      checked: U
    })]
  });
}
process.env.NODE_ENV !== "production" && (Nw.propTypes = {
  classes: t.object.isRequired,
  disabled: t.bool.isRequired,
  emptyIcon: t.node,
  focus: t.number.isRequired,
  getLabelText: t.func.isRequired,
  highlightSelectedOnly: t.bool.isRequired,
  hover: t.number.isRequired,
  icon: t.node,
  IconContainerComponent: t.elementType.isRequired,
  isActive: t.bool.isRequired,
  itemValue: t.number.isRequired,
  labelProps: t.object,
  name: t.string,
  onBlur: t.func.isRequired,
  onChange: t.func.isRequired,
  onClick: t.func.isRequired,
  onFocus: t.func.isRequired,
  ownerState: t.object.isRequired,
  ratingValue: t.number,
  ratingValueRounded: t.number,
  readOnly: t.bool.isRequired
});
const iJ = /* @__PURE__ */ _(KZ, {
  fontSize: "inherit"
}), sJ = /* @__PURE__ */ _(QZ, {
  fontSize: "inherit"
});
function lJ(e) {
  return `${e} Star${e !== 1 ? "s" : ""}`;
}
const hA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    name: "MuiRating",
    props: n
  }), {
    className: u,
    defaultValue: d = null,
    disabled: p = !1,
    emptyIcon: h = sJ,
    emptyLabelText: g = "Empty",
    getLabelText: b = lJ,
    highlightSelectedOnly: x = !1,
    icon: S = iJ,
    IconContainerComponent: E = mA,
    max: R = 5,
    name: $,
    onChange: M,
    onChangeActive: O,
    onMouseLeave: N,
    onMouseMove: V,
    precision: I = 1,
    readOnly: z = !1,
    size: B = "medium",
    value: P
  } = s, F = le(s, eJ), H = pa($), [U, Q] = Eo({
    controlled: P,
    default: d,
    name: "Rating"
  }), Y = lw(U, I), te = En(), [{
    hover: Z,
    focus: q
  }, X] = k.useState({
    hover: -1,
    focus: -1
  });
  let oe = Y;
  Z !== -1 && (oe = Z), q !== -1 && (oe = q);
  const {
    isFocusVisibleRef: ie,
    onBlur: K,
    onFocus: ne,
    ref: se
  } = Xf(), [ze, Ue] = k.useState(!1), Oe = k.useRef(), ue = cn(se, Oe, a), xe = (Pe) => {
    V && V(Pe);
    const ke = Oe.current, {
      right: pt,
      left: _e,
      width: dt
    } = ke.getBoundingClientRect();
    let ge;
    te.direction === "rtl" ? ge = (pt - Pe.clientX) / dt : ge = (Pe.clientX - _e) / dt;
    let ve = lw(R * ge + I / 2, I);
    ve = Jc(ve, I, R), X((qe) => qe.hover === ve && qe.focus === ve ? qe : {
      hover: ve,
      focus: ve
    }), Ue(!1), O && Z !== ve && O(Pe, ve);
  }, me = (Pe) => {
    N && N(Pe);
    const ke = -1;
    X({
      hover: ke,
      focus: ke
    }), O && Z !== ke && O(Pe, ke);
  }, Se = (Pe) => {
    let ke = Pe.target.value === "" ? null : parseFloat(Pe.target.value);
    Z !== -1 && (ke = Z), Q(ke), M && M(Pe, ke);
  }, ce = (Pe) => {
    Pe.clientX === 0 && Pe.clientY === 0 || (X({
      hover: -1,
      focus: -1
    }), Q(null), M && parseFloat(Pe.target.value) === Y && M(Pe, null));
  }, Le = (Pe) => {
    ne(Pe), ie.current === !0 && Ue(!0);
    const ke = parseFloat(Pe.target.value);
    X((pt) => ({
      hover: pt.hover,
      focus: ke
    }));
  }, Ze = (Pe) => {
    if (Z !== -1)
      return;
    K(Pe), ie.current === !1 && Ue(!1);
    const ke = -1;
    X((pt) => ({
      hover: pt.hover,
      focus: ke
    }));
  }, [Ee, Ae] = k.useState(!1), Ce = y({}, s, {
    defaultValue: d,
    disabled: p,
    emptyIcon: h,
    emptyLabelText: g,
    emptyValueFocused: Ee,
    focusVisible: ze,
    getLabelText: b,
    icon: S,
    IconContainerComponent: E,
    max: R,
    precision: I,
    readOnly: z,
    size: B
  }), ae = nJ(Ce);
  return /* @__PURE__ */ st(oJ, y({
    ref: ue,
    onMouseMove: xe,
    onMouseLeave: me,
    className: fe(ae.root, u, z && "MuiRating-readOnly"),
    ownerState: Ce,
    role: z ? "img" : null,
    "aria-label": z ? b(oe) : null
  }, F, {
    children: [Array.from(new Array(R)).map((Pe, ke) => {
      const pt = ke + 1, _e = {
        classes: ae,
        disabled: p,
        emptyIcon: h,
        focus: q,
        getLabelText: b,
        highlightSelectedOnly: x,
        hover: Z,
        icon: S,
        IconContainerComponent: E,
        name: H,
        onBlur: Ze,
        onChange: Se,
        onClick: ce,
        onFocus: Le,
        ratingValue: oe,
        ratingValueRounded: Y,
        readOnly: z,
        ownerState: Ce
      }, dt = pt === Math.ceil(oe) && (Z !== -1 || q !== -1);
      if (I < 1) {
        const ge = Array.from(new Array(1 / I));
        return /* @__PURE__ */ _(aJ, {
          className: fe(ae.decimal, dt && ae.iconActive),
          ownerState: Ce,
          iconActive: dt,
          children: ge.map((ve, qe) => {
            const vt = lw(pt - 1 + (qe + 1) * I, I);
            return /* @__PURE__ */ _(Nw, y({}, _e, {
              // The icon is already displayed as active
              isActive: !1,
              itemValue: vt,
              labelProps: {
                style: ge.length - 1 === qe ? {} : {
                  width: vt === oe ? `${(qe + 1) * I * 100}%` : "0%",
                  overflow: "hidden",
                  position: "absolute"
                }
              }
            }), vt);
          })
        }, pt);
      }
      return /* @__PURE__ */ _(Nw, y({}, _e, {
        isActive: dt,
        itemValue: pt
      }), pt);
    }), !z && !p && /* @__PURE__ */ st(fA, {
      className: fe(ae.label, ae.labelEmptyValue),
      ownerState: Ce,
      children: [/* @__PURE__ */ _("input", {
        className: ae.visuallyHidden,
        value: "",
        id: `${H}-empty`,
        type: "radio",
        name: H,
        checked: Y == null,
        onFocus: () => Ae(!0),
        onBlur: () => Ae(!1),
        onChange: Se
      }), /* @__PURE__ */ _("span", {
        className: ae.visuallyHidden,
        children: g
      })]
    })]
  }));
});
process.env.NODE_ENV !== "production" && (hA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The default value. Use when the component is not controlled.
   * @default null
   */
  defaultValue: t.number,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * The icon to display when empty.
   * @default <StarBorder fontSize="inherit" />
   */
  emptyIcon: t.node,
  /**
   * The label read when the rating input is empty.
   * @default 'Empty'
   */
  emptyLabelText: t.node,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the rating.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @param {number} value The rating label's value to format.
   * @returns {string}
   * @default function defaultLabelText(value) {
   *   return `${value} Star${value !== 1 ? 's' : ''}`;
   * }
   */
  getLabelText: t.func,
  /**
   * If `true`, only the selected icon will be highlighted.
   * @default false
   */
  highlightSelectedOnly: t.bool,
  /**
   * The icon to display.
   * @default <Star fontSize="inherit" />
   */
  icon: t.node,
  /**
   * The component containing the icon.
   * @default function IconContainer(props) {
   *   const { value, ...other } = props;
   *   return <span {...other} />;
   * }
   */
  IconContainerComponent: t.elementType,
  /**
   * Maximum rating.
   * @default 5
   */
  max: t.number,
  /**
   * The name attribute of the radio `input` elements.
   * This input `name` should be unique within the page.
   * Being unique within a form is insufficient since the `name` is used to generated IDs.
   */
  name: t.string,
  /**
   * Callback fired when the value changes.
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {number|null} value The new value.
   */
  onChange: t.func,
  /**
   * Callback function that is fired when the hover state changes.
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {number} value The new value.
   */
  onChangeActive: t.func,
  /**
   * @ignore
   */
  onMouseLeave: t.func,
  /**
   * @ignore
   */
  onMouseMove: t.func,
  /**
   * The minimum increment value change allowed.
   * @default 1
   */
  precision: Xo(t.number, (e) => e.precision < 0.1 ? new Error(["MUI: The prop `precision` should be above 0.1.", "A value below this limit has an imperceptible impact."].join(`
`)) : null),
  /**
   * Removes all hover effects and pointer events.
   * @default false
   */
  readOnly: t.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["small", "medium", "large"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The rating value.
   */
  value: t.number
});
const Gde = hA;
function cJ(e) {
  return We("MuiScopedCssBaseline", e);
}
const uJ = Ye("MuiScopedCssBaseline", ["root"]), Kde = uJ, dJ = ["className", "component", "enableColorScheme"], pJ = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"]
  }, cJ, n);
}, fJ = J("div", {
  name: "MuiScopedCssBaseline",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(({
  theme: e,
  ownerState: n
}) => {
  const a = {};
  return n.enableColorScheme && e.colorSchemes && Object.entries(e.colorSchemes).forEach(([s, u]) => {
    var d;
    a[`&${e.getColorSchemeSelector(s).replace(/\s*&/, "")}`] = {
      colorScheme: (d = u.palette) == null ? void 0 : d.mode
    };
  }), y({}, JL(e, n.enableColorScheme), eI(e), {
    "& *, & *::before, & *::after": {
      boxSizing: "inherit"
    },
    "& strong, & b": {
      fontWeight: e.typography.fontWeightBold
    }
  }, a);
}), vA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiScopedCssBaseline"
  }), {
    className: u,
    component: d = "div"
  } = s, p = le(s, dJ), h = y({}, s, {
    component: d
  }), g = pJ(h);
  return /* @__PURE__ */ _(fJ, y({
    as: d,
    className: fe(g.root, u),
    ref: a,
    ownerState: h
  }, p));
});
process.env.NODE_ENV !== "production" && (vA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   */
  enableColorScheme: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Qde = vA;
function mJ(e) {
  return We("MuiSelect", e);
}
const hJ = Ye("MuiSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "focused", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]), Pv = hJ;
var zM;
const vJ = ["aria-describedby", "aria-label", "autoFocus", "autoWidth", "children", "className", "defaultOpen", "defaultValue", "disabled", "displayEmpty", "error", "IconComponent", "inputRef", "labelId", "MenuProps", "multiple", "name", "onBlur", "onChange", "onClose", "onFocus", "onOpen", "open", "readOnly", "renderValue", "SelectDisplayProps", "tabIndex", "type", "value", "variant"], gJ = J("div", {
  name: "MuiSelect",
  slot: "Select",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [
      // Win specificity over the input base
      {
        [`&.${Pv.select}`]: n.select
      },
      {
        [`&.${Pv.select}`]: n[a.variant]
      },
      {
        [`&.${Pv.error}`]: n.error
      },
      {
        [`&.${Pv.multiple}`]: n.multiple
      }
    ];
  }
})(eA, {
  // Win specificity over the input base
  [`&.${Pv.select}`]: {
    height: "auto",
    // Resets for multiple select with chips
    minHeight: "1.4375em",
    // Required for select\text-field height consistency
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    overflow: "hidden"
  }
}), bJ = J("svg", {
  name: "MuiSelect",
  slot: "Icon",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.icon, a.variant && n[`icon${pe(a.variant)}`], a.open && n.iconOpen];
  }
})(tA), yJ = J("input", {
  shouldForwardProp: (e) => Rg(e) && e !== "classes",
  name: "MuiSelect",
  slot: "NativeInput",
  overridesResolver: (e, n) => n.nativeInput
})({
  bottom: 0,
  left: 0,
  position: "absolute",
  opacity: 0,
  pointerEvents: "none",
  width: "100%",
  boxSizing: "border-box"
});
function FM(e, n) {
  return typeof n == "object" && n !== null ? e === n : String(e) === String(n);
}
function CJ(e) {
  return e == null || typeof e == "string" && !e.trim();
}
const TJ = (e) => {
  const {
    classes: n,
    variant: a,
    disabled: s,
    multiple: u,
    open: d,
    error: p
  } = e, h = {
    select: ["select", a, s && "disabled", u && "multiple", p && "error"],
    icon: ["icon", `icon${pe(a)}`, d && "iconOpen", s && "disabled"],
    nativeInput: ["nativeInput"]
  };
  return He(h, mJ, n);
}, gA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s;
  const {
    "aria-describedby": u,
    "aria-label": d,
    autoFocus: p,
    autoWidth: h,
    children: g,
    className: b,
    defaultOpen: x,
    defaultValue: S,
    disabled: E,
    displayEmpty: R,
    error: $ = !1,
    IconComponent: M,
    inputRef: O,
    labelId: N,
    MenuProps: V = {},
    multiple: I,
    name: z,
    onBlur: B,
    onChange: P,
    onClose: F,
    onFocus: H,
    onOpen: U,
    open: Q,
    readOnly: Y,
    renderValue: te,
    SelectDisplayProps: Z = {},
    tabIndex: q,
    value: X,
    variant: oe = "standard"
  } = n, ie = le(n, vJ), [K, ne] = Eo({
    controlled: X,
    default: S,
    name: "Select"
  }), [se, ze] = Eo({
    controlled: Q,
    default: x,
    name: "Select"
  }), Ue = k.useRef(null), Oe = k.useRef(null), [ue, xe] = k.useState(null), {
    current: me
  } = k.useRef(Q != null), [Se, ce] = k.useState(), Le = cn(a, O), Ze = k.useCallback((rt) => {
    Oe.current = rt, rt && xe(rt);
  }, []), Ee = ue == null ? void 0 : ue.parentNode;
  k.useImperativeHandle(Le, () => ({
    focus: () => {
      Oe.current.focus();
    },
    node: Ue.current,
    value: K
  }), [K]), k.useEffect(() => {
    x && se && ue && !me && (ce(h ? null : Ee.clientWidth), Oe.current.focus());
  }, [ue, h]), k.useEffect(() => {
    p && Oe.current.focus();
  }, [p]), k.useEffect(() => {
    if (!N)
      return;
    const rt = $n(Oe.current).getElementById(N);
    if (rt) {
      const je = () => {
        getSelection().isCollapsed && Oe.current.focus();
      };
      return rt.addEventListener("click", je), () => {
        rt.removeEventListener("click", je);
      };
    }
  }, [N]);
  const Ae = (rt, je) => {
    rt ? U && U(je) : F && F(je), me || (ce(h ? null : Ee.clientWidth), ze(rt));
  }, Ce = (rt) => {
    rt.button === 0 && (rt.preventDefault(), Oe.current.focus(), Ae(!0, rt));
  }, ae = (rt) => {
    Ae(!1, rt);
  }, Pe = k.Children.toArray(g), ke = (rt) => {
    const je = Pe.find((nt) => nt.props.value === rt.target.value);
    je !== void 0 && (ne(je.props.value), P && P(rt, je));
  }, pt = (rt) => (je) => {
    let nt;
    if (je.currentTarget.hasAttribute("tabindex")) {
      if (I) {
        nt = Array.isArray(K) ? K.slice() : [];
        const ht = K.indexOf(rt.props.value);
        ht === -1 ? nt.push(rt.props.value) : nt.splice(ht, 1);
      } else
        nt = rt.props.value;
      if (rt.props.onClick && rt.props.onClick(je), K !== nt && (ne(nt), P)) {
        const ht = je.nativeEvent || je, $t = new ht.constructor(ht.type, ht);
        Object.defineProperty($t, "target", {
          writable: !0,
          value: {
            value: nt,
            name: z
          }
        }), P($t, rt);
      }
      I || Ae(!1, je);
    }
  }, _e = (rt) => {
    Y || [
      " ",
      "ArrowUp",
      "ArrowDown",
      // The native select doesn't respond to enter on macOS, but it's recommended by
      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/
      "Enter"
    ].indexOf(rt.key) !== -1 && (rt.preventDefault(), Ae(!0, rt));
  }, dt = ue !== null && se, ge = (rt) => {
    !dt && B && (Object.defineProperty(rt, "target", {
      writable: !0,
      value: {
        value: K,
        name: z
      }
    }), B(rt));
  };
  delete ie["aria-invalid"];
  let ve, qe;
  const vt = [];
  let yt = !1, Mt = !1;
  ($T({
    value: K
  }) || R) && (te ? ve = te(K) : yt = !0);
  const bt = Pe.map((rt) => {
    if (!/* @__PURE__ */ k.isValidElement(rt))
      return null;
    process.env.NODE_ENV !== "production" && as.isFragment(rt) && console.error(["MUI: The Select component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    let je;
    if (I) {
      if (!Array.isArray(K))
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: The `value` prop must be an array when using the `Select` component with `multiple`." : qs(2));
      je = K.some((nt) => FM(nt, rt.props.value)), je && yt && vt.push(rt.props.children);
    } else
      je = FM(K, rt.props.value), je && yt && (qe = rt.props.children);
    return je && (Mt = !0), /* @__PURE__ */ k.cloneElement(rt, {
      "aria-selected": je ? "true" : "false",
      onClick: pt(rt),
      onKeyUp: (nt) => {
        nt.key === " " && nt.preventDefault(), rt.props.onKeyUp && rt.props.onKeyUp(nt);
      },
      role: "option",
      selected: je,
      value: void 0,
      // The value is most likely not a valid HTML attribute.
      "data-value": rt.props.value
      // Instead, we provide it as a data attribute.
    });
  });
  process.env.NODE_ENV !== "production" && k.useEffect(() => {
    if (!Mt && !I && K !== "") {
      const rt = Pe.map((je) => je.props.value);
      console.warn([`MUI: You have provided an out-of-range value \`${K}\` for the select ${z ? `(name="${z}") ` : ""}component.`, "Consider providing a value that matches one of the available options or ''.", `The available values are ${rt.filter((je) => je != null).map((je) => `\`${je}\``).join(", ") || '""'}.`].join(`
`));
    }
  }, [Mt, Pe, I, z, K]), yt && (I ? vt.length === 0 ? ve = null : ve = vt.reduce((rt, je, nt) => (rt.push(je), nt < vt.length - 1 && rt.push(", "), rt), []) : ve = qe);
  let wt = Se;
  !h && me && ue && (wt = Ee.clientWidth);
  let we;
  typeof q < "u" ? we = q : we = E ? null : 0;
  const Re = Z.id || (z ? `mui-component-select-${z}` : void 0), at = y({}, n, {
    variant: oe,
    value: K,
    open: dt,
    error: $
  }), Ke = TJ(at), lt = y({}, V.PaperProps, (s = V.slotProps) == null ? void 0 : s.paper), et = pa();
  return /* @__PURE__ */ st(k.Fragment, {
    children: [/* @__PURE__ */ _(gJ, y({
      ref: Ze,
      tabIndex: we,
      role: "combobox",
      "aria-controls": et,
      "aria-disabled": E ? "true" : void 0,
      "aria-expanded": dt ? "true" : "false",
      "aria-haspopup": "listbox",
      "aria-label": d,
      "aria-labelledby": [N, Re].filter(Boolean).join(" ") || void 0,
      "aria-describedby": u,
      onKeyDown: _e,
      onMouseDown: E || Y ? null : Ce,
      onBlur: ge,
      onFocus: H
    }, Z, {
      ownerState: at,
      className: fe(Z.className, Ke.select, b),
      id: Re,
      children: CJ(ve) ? (
        // notranslate needed while Google Translate will not fix zero-width space issue
        zM || (zM = /* @__PURE__ */ _("span", {
          className: "notranslate",
          children: "​"
        }))
      ) : ve
    })), /* @__PURE__ */ _(yJ, y({
      "aria-invalid": $,
      value: Array.isArray(K) ? K.join(",") : K,
      name: z,
      ref: Ue,
      "aria-hidden": !0,
      onChange: ke,
      tabIndex: -1,
      disabled: E,
      className: Ke.nativeInput,
      autoFocus: p,
      ownerState: at
    }, ie)), /* @__PURE__ */ _(bJ, {
      as: M,
      className: Ke.icon,
      ownerState: at
    }), /* @__PURE__ */ _(FX, y({
      id: `menu-${z || ""}`,
      anchorEl: Ee,
      open: dt,
      onClose: ae,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "center"
      },
      transformOrigin: {
        vertical: "top",
        horizontal: "center"
      }
    }, V, {
      MenuListProps: y({
        "aria-labelledby": N,
        role: "listbox",
        "aria-multiselectable": I ? "true" : void 0,
        disableListWrap: !0,
        id: et
      }, V.MenuListProps),
      slotProps: y({}, V.slotProps, {
        paper: y({}, lt, {
          style: y({
            minWidth: wt
          }, lt != null ? lt.style : null)
        })
      }),
      children: bt
    }))]
  });
});
process.env.NODE_ENV !== "production" && (gA.propTypes = {
  /**
   * @ignore
   */
  "aria-describedby": t.string,
  /**
   * @ignore
   */
  "aria-label": t.string,
  /**
   * @ignore
   */
  autoFocus: t.bool,
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */
  autoWidth: t.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `<MenuItem>` elements.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * The CSS class name of the select element.
   */
  className: t.string,
  /**
   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.
   * You can only use it when the `native` prop is `false` (default).
   */
  defaultOpen: t.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the select is disabled.
   */
  disabled: t.bool,
  /**
   * If `true`, the selected item is displayed even if its value is empty.
   */
  displayEmpty: t.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: t.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: t.elementType.isRequired,
  /**
   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`
   * Equivalent to `ref`
   */
  inputRef: Wn,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: t.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: t.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */
  multiple: t.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: t.string,
  /**
   * @ignore
   */
  onBlur: t.func,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected.
   */
  onChange: t.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: t.func,
  /**
   * @ignore
   */
  onFocus: t.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: t.func,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool,
  /**
   * @ignore
   */
  readOnly: t.bool,
  /**
   * Render the selected value.
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: t.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: t.object,
  /**
   * @ignore
   */
  tabIndex: t.oneOfType([t.number, t.string]),
  /**
   * @ignore
   */
  type: t.any,
  /**
   * The input value.
   */
  value: t.any,
  /**
   * The variant to use.
   */
  variant: t.oneOf(["standard", "outlined", "filled"])
});
const xJ = gA, SJ = ["autoWidth", "children", "classes", "className", "defaultOpen", "displayEmpty", "IconComponent", "id", "input", "inputProps", "label", "labelId", "MenuProps", "multiple", "native", "onClose", "onOpen", "open", "renderValue", "SelectDisplayProps", "variant"], kJ = ["root"], wJ = (e) => {
  const {
    classes: n
  } = e;
  return n;
}, D1 = {
  name: "MuiSelect",
  overridesResolver: (e, n) => n.root,
  shouldForwardProp: (e) => Vo(e) && e !== "variant",
  slot: "Root"
}, RJ = J(T1, D1)(""), EJ = J(aA, D1)(""), OJ = J(vI, D1)(""), M1 = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    name: "MuiSelect",
    props: n
  }), {
    autoWidth: u = !1,
    children: d,
    classes: p = {},
    className: h,
    defaultOpen: g = !1,
    displayEmpty: b = !1,
    IconComponent: x = f1,
    id: S,
    input: E,
    inputProps: R,
    label: $,
    labelId: M,
    MenuProps: O,
    multiple: N = !1,
    native: V = !1,
    onClose: I,
    onOpen: z,
    open: B,
    renderValue: P,
    SelectDisplayProps: F,
    variant: H = "outlined"
  } = s, U = le(s, SJ), Q = V ? oA : xJ, Y = is(), te = ql({
    props: s,
    muiFormControl: Y,
    states: ["variant", "error"]
  }), Z = te.variant || H, q = y({}, s, {
    variant: Z,
    classes: p
  }), X = wJ(q), oe = le(X, kJ), ie = E || {
    standard: /* @__PURE__ */ _(RJ, {
      ownerState: q
    }),
    outlined: /* @__PURE__ */ _(EJ, {
      label: $,
      ownerState: q
    }),
    filled: /* @__PURE__ */ _(OJ, {
      ownerState: q
    })
  }[Z], K = cn(a, ie.ref);
  return /* @__PURE__ */ _(k.Fragment, {
    children: /* @__PURE__ */ k.cloneElement(ie, y({
      // Most of the logic is implemented in `SelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: Q,
      inputProps: y({
        children: d,
        error: te.error,
        IconComponent: x,
        variant: Z,
        type: void 0,
        // We render a select. We can ignore the type provided by the `Input`.
        multiple: N
      }, V ? {
        id: S
      } : {
        autoWidth: u,
        defaultOpen: g,
        displayEmpty: b,
        labelId: M,
        MenuProps: O,
        onClose: I,
        onOpen: z,
        open: B,
        renderValue: P,
        SelectDisplayProps: y({
          id: S
        }, F)
      }, R, {
        classes: R ? ns(oe, R.classes) : oe
      }, E ? E.props.inputProps : {})
    }, (N && V || b) && Z === "outlined" ? {
      notched: !0
    } : {}, {
      ref: K,
      className: fe(ie.props.className, h, X.root)
    }, !E && {
      variant: Z
    }, U))
  });
});
process.env.NODE_ENV !== "production" && (M1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   * @default false
   */
  autoWidth: t.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
   *
   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, the component is initially open. Use when the component open state is not controlled (i.e. the `open` prop is not defined).
   * You can only use it when the `native` prop is `false` (default).
   * @default false
   */
  defaultOpen: t.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, a value is displayed even if no items are selected.
   *
   * In order to display a meaningful value, a function can be passed to the `renderValue` prop which
   * returns the value to be displayed when no items are selected.
   *
   * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.
   * The label should either be hidden or forced to a shrunk state.
   * @default false
   */
  displayEmpty: t.bool,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: t.elementType,
  /**
   * The `id` of the wrapper element or the `select` element when `native`.
   */
  id: t.string,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */
  input: t.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * When `native` is `true`, the attributes are applied on the `select` element.
   */
  inputProps: t.object,
  /**
   * See [OutlinedInput#label](/material-ui/api/outlined-input/#props)
   */
  label: t.node,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: t.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: t.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: t.bool,
  /**
   * If `true`, the component uses a native `select` element.
   * @default false
   */
  native: t.bool,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {SelectChangeEvent<Value>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event, not a change event, unless the change event is caused by browser autofill.
   * @param {object} [child] The react element that was selected when `native` is `false` (default).
   */
  onChange: t.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select collapses).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: t.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select expands).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: t.func,
  /**
   * If `true`, the component is shown.
   * You can only use it when the `native` prop is `false` (default).
   */
  open: t.bool,
  /**
   * Render the selected value.
   * You can only use it when the `native` prop is `false` (default).
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: t.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The `input` value. Providing an empty string will select no options.
   * Set to an empty string `''` if you don't want any of the available options to be selected.
   *
   * If the value is an object it must have reference equality with the option in order to be selected.
   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
   */
  value: t.oneOfType([t.oneOf([""]), t.any]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: t.oneOf(["filled", "outlined", "standard"])
});
M1.muiName = "Select";
const bA = M1;
function PJ(e) {
  return We("MuiSkeleton", e);
}
const DJ = Ye("MuiSkeleton", ["root", "text", "rectangular", "rounded", "circular", "pulse", "wave", "withChildren", "fitContent", "heightAuto"]), Xde = DJ, MJ = ["animation", "className", "component", "height", "style", "variant", "width"];
let IT = (e) => e, jM, UM, HM, WM;
const $J = (e) => {
  const {
    classes: n,
    variant: a,
    animation: s,
    hasChildren: u,
    width: d,
    height: p
  } = e;
  return He({
    root: ["root", a, s, u && "withChildren", u && !d && "fitContent", u && !p && "heightAuto"]
  }, PJ, n);
}, NJ = rs(jM || (jM = IT`
  0% {
    opacity: 1;
  }

  50% {
    opacity: 0.4;
  }

  100% {
    opacity: 1;
  }
`)), LJ = rs(UM || (UM = IT`
  0% {
    transform: translateX(-100%);
  }

  50% {
    /* +0.5s of delay between each loop */
    transform: translateX(100%);
  }

  100% {
    transform: translateX(100%);
  }
`)), IJ = J("span", {
  name: "MuiSkeleton",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[a.variant], a.animation !== !1 && n[a.animation], a.hasChildren && n.withChildren, a.hasChildren && !a.width && n.fitContent, a.hasChildren && !a.height && n.heightAuto];
  }
})(({
  theme: e,
  ownerState: n
}) => {
  const a = Gw(e.shape.borderRadius) || "px", s = zl(e.shape.borderRadius);
  return y({
    display: "block",
    // Create a "on paper" color with sufficient contrast retaining the color
    backgroundColor: e.vars ? e.vars.palette.Skeleton.bg : Kr(e.palette.text.primary, e.palette.mode === "light" ? 0.11 : 0.13),
    height: "1.2em"
  }, n.variant === "text" && {
    marginTop: 0,
    marginBottom: 0,
    height: "auto",
    transformOrigin: "0 55%",
    transform: "scale(1, 0.60)",
    borderRadius: `${s}${a}/${Math.round(s / 0.6 * 10) / 10}${a}`,
    "&:empty:before": {
      content: '"\\00a0"'
    }
  }, n.variant === "circular" && {
    borderRadius: "50%"
  }, n.variant === "rounded" && {
    borderRadius: (e.vars || e).shape.borderRadius
  }, n.hasChildren && {
    "& > *": {
      visibility: "hidden"
    }
  }, n.hasChildren && !n.width && {
    maxWidth: "fit-content"
  }, n.hasChildren && !n.height && {
    height: "auto"
  });
}, ({
  ownerState: e
}) => e.animation === "pulse" && au(HM || (HM = IT`
      animation: ${0} 2s ease-in-out 0.5s infinite;
    `), NJ), ({
  ownerState: e,
  theme: n
}) => e.animation === "wave" && au(WM || (WM = IT`
      position: relative;
      overflow: hidden;

      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */
      -webkit-mask-image: -webkit-radial-gradient(white, black);

      &::after {
        animation: ${0} 2s linear 0.5s infinite;
        background: linear-gradient(
          90deg,
          transparent,
          ${0},
          transparent
        );
        content: '';
        position: absolute;
        transform: translateX(-100%); /* Avoid flash during server-side hydration */
        bottom: 0;
        left: 0;
        right: 0;
        top: 0;
      }
    `), LJ, (n.vars || n).palette.action.hover)), yA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiSkeleton"
  }), {
    animation: u = "pulse",
    className: d,
    component: p = "span",
    height: h,
    style: g,
    variant: b = "text",
    width: x
  } = s, S = le(s, MJ), E = y({}, s, {
    animation: u,
    component: p,
    variant: b,
    hasChildren: !!S.children
  }), R = $J(E);
  return /* @__PURE__ */ _(IJ, y({
    as: p,
    ref: a,
    className: fe(R.root, d),
    ownerState: E
  }, S, {
    style: y({
      width: x,
      height: h
    }, g)
  }));
});
process.env.NODE_ENV !== "production" && (yA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The animation.
   * If `false` the animation effect is disabled.
   * @default 'pulse'
   */
  animation: t.oneOf(["pulse", "wave", !1]),
  /**
   * Optional children to infer width and height from.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Height of the skeleton.
   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.
   */
  height: t.oneOfType([t.number, t.string]),
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The type of content that will be rendered.
   * @default 'text'
   */
  variant: t.oneOfType([t.oneOf(["circular", "rectangular", "rounded", "text"]), t.string]),
  /**
   * Width of the skeleton.
   * Useful when the skeleton is inside an inline element with no width of its own.
   */
  width: t.oneOfType([t.number, t.string])
});
const AJ = yA, _J = (e) => !e || !ts(e), VJ = _J;
function BJ(e) {
  return We("MuiSlider", e);
}
const zJ = Ye("MuiSlider", ["root", "active", "colorPrimary", "colorSecondary", "colorError", "colorInfo", "colorSuccess", "colorWarning", "disabled", "dragging", "focusVisible", "mark", "markActive", "marked", "markLabel", "markLabelActive", "rail", "sizeSmall", "thumb", "thumbColorPrimary", "thumbColorSecondary", "thumbColorError", "thumbColorSuccess", "thumbColorInfo", "thumbColorWarning", "track", "trackInverted", "trackFalse", "thumbSizeSmall", "valueLabel", "valueLabelOpen", "valueLabelCircle", "valueLabelLabel", "vertical"]), Ji = zJ, FJ = (e) => {
  const {
    open: n
  } = e;
  return {
    offset: fe(n && Ji.valueLabelOpen),
    circle: Ji.valueLabelCircle,
    label: Ji.valueLabelLabel
  };
};
function CA(e) {
  const {
    children: n,
    className: a,
    value: s
  } = e, u = FJ(e);
  return n ? /* @__PURE__ */ k.cloneElement(n, {
    className: fe(n.props.className)
  }, /* @__PURE__ */ st(k.Fragment, {
    children: [n.props.children, /* @__PURE__ */ _("span", {
      className: fe(u.offset, a),
      "aria-hidden": !0,
      children: /* @__PURE__ */ _("span", {
        className: u.circle,
        children: /* @__PURE__ */ _("span", {
          className: u.label,
          children: s
        })
      })
    })]
  })) : null;
}
process.env.NODE_ENV !== "production" && (CA.propTypes = {
  children: t.element.isRequired,
  className: t.string,
  value: t.node
});
const jJ = ["aria-label", "aria-valuetext", "aria-labelledby", "component", "components", "componentsProps", "color", "classes", "className", "disableSwap", "disabled", "getAriaLabel", "getAriaValueText", "marks", "max", "min", "name", "onChange", "onChangeCommitted", "orientation", "shiftStep", "size", "step", "scale", "slotProps", "slots", "tabIndex", "track", "value", "valueLabelDisplay", "valueLabelFormat"];
function YM(e) {
  return e;
}
const UJ = J("span", {
  name: "MuiSlider",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[`color${pe(a.color)}`], a.size !== "medium" && n[`size${pe(a.size)}`], a.marked && n.marked, a.orientation === "vertical" && n.vertical, a.track === "inverted" && n.trackInverted, a.track === !1 && n.trackFalse];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  borderRadius: 12,
  boxSizing: "content-box",
  display: "inline-block",
  position: "relative",
  cursor: "pointer",
  touchAction: "none",
  color: (e.vars || e).palette[n.color].main,
  WebkitTapHighlightColor: "transparent"
}, n.orientation === "horizontal" && y({
  height: 4,
  width: "100%",
  padding: "13px 0",
  // The primary input mechanism of the device includes a pointing device of limited accuracy.
  "@media (pointer: coarse)": {
    // Reach 42px touch target, about ~8mm on screen.
    padding: "20px 0"
  }
}, n.size === "small" && {
  height: 2
}, n.marked && {
  marginBottom: 20
}), n.orientation === "vertical" && y({
  height: "100%",
  width: 4,
  padding: "0 13px",
  // The primary input mechanism of the device includes a pointing device of limited accuracy.
  "@media (pointer: coarse)": {
    // Reach 42px touch target, about ~8mm on screen.
    padding: "0 20px"
  }
}, n.size === "small" && {
  width: 2
}, n.marked && {
  marginRight: 44
}), {
  "@media print": {
    colorAdjust: "exact"
  },
  [`&.${Ji.disabled}`]: {
    pointerEvents: "none",
    cursor: "default",
    color: (e.vars || e).palette.grey[400]
  },
  [`&.${Ji.dragging}`]: {
    [`& .${Ji.thumb}, & .${Ji.track}`]: {
      transition: "none"
    }
  }
})), HJ = J("span", {
  name: "MuiSlider",
  slot: "Rail",
  overridesResolver: (e, n) => n.rail
})(({
  ownerState: e
}) => y({
  display: "block",
  position: "absolute",
  borderRadius: "inherit",
  backgroundColor: "currentColor",
  opacity: 0.38
}, e.orientation === "horizontal" && {
  width: "100%",
  height: "inherit",
  top: "50%",
  transform: "translateY(-50%)"
}, e.orientation === "vertical" && {
  height: "100%",
  width: "inherit",
  left: "50%",
  transform: "translateX(-50%)"
}, e.track === "inverted" && {
  opacity: 1
})), WJ = J("span", {
  name: "MuiSlider",
  slot: "Track",
  overridesResolver: (e, n) => n.track
})(({
  theme: e,
  ownerState: n
}) => {
  const a = (
    // Same logic as the LinearProgress track color
    e.palette.mode === "light" ? zT(e.palette[n.color].main, 0.62) : FT(e.palette[n.color].main, 0.5)
  );
  return y({
    display: "block",
    position: "absolute",
    borderRadius: "inherit",
    border: "1px solid currentColor",
    backgroundColor: "currentColor",
    transition: e.transitions.create(["left", "width", "bottom", "height"], {
      duration: e.transitions.duration.shortest
    })
  }, n.size === "small" && {
    border: "none"
  }, n.orientation === "horizontal" && {
    height: "inherit",
    top: "50%",
    transform: "translateY(-50%)"
  }, n.orientation === "vertical" && {
    width: "inherit",
    left: "50%",
    transform: "translateX(-50%)"
  }, n.track === !1 && {
    display: "none"
  }, n.track === "inverted" && {
    backgroundColor: e.vars ? e.vars.palette.Slider[`${n.color}Track`] : a,
    borderColor: e.vars ? e.vars.palette.Slider[`${n.color}Track`] : a
  });
}), YJ = J("span", {
  name: "MuiSlider",
  slot: "Thumb",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.thumb, n[`thumbColor${pe(a.color)}`], a.size !== "medium" && n[`thumbSize${pe(a.size)}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  position: "absolute",
  width: 20,
  height: 20,
  boxSizing: "border-box",
  borderRadius: "50%",
  outline: 0,
  backgroundColor: "currentColor",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  transition: e.transitions.create(["box-shadow", "left", "bottom"], {
    duration: e.transitions.duration.shortest
  })
}, n.size === "small" && {
  width: 12,
  height: 12
}, n.orientation === "horizontal" && {
  top: "50%",
  transform: "translate(-50%, -50%)"
}, n.orientation === "vertical" && {
  left: "50%",
  transform: "translate(-50%, 50%)"
}, {
  "&::before": y({
    position: "absolute",
    content: '""',
    borderRadius: "inherit",
    width: "100%",
    height: "100%",
    boxShadow: (e.vars || e).shadows[2]
  }, n.size === "small" && {
    boxShadow: "none"
  }),
  "&::after": {
    position: "absolute",
    content: '""',
    borderRadius: "50%",
    // 42px is the hit target
    width: 42,
    height: 42,
    top: "50%",
    left: "50%",
    transform: "translate(-50%, -50%)"
  },
  [`&:hover, &.${Ji.focusVisible}`]: {
    boxShadow: `0px 0px 0px 8px ${e.vars ? `rgba(${e.vars.palette[n.color].mainChannel} / 0.16)` : Yt(e.palette[n.color].main, 0.16)}`,
    "@media (hover: none)": {
      boxShadow: "none"
    }
  },
  [`&.${Ji.active}`]: {
    boxShadow: `0px 0px 0px 14px ${e.vars ? `rgba(${e.vars.palette[n.color].mainChannel} / 0.16)` : Yt(e.palette[n.color].main, 0.16)}`
  },
  [`&.${Ji.disabled}`]: {
    "&:hover": {
      boxShadow: "none"
    }
  }
})), qJ = J(CA, {
  name: "MuiSlider",
  slot: "ValueLabel",
  overridesResolver: (e, n) => n.valueLabel
})(({
  theme: e,
  ownerState: n
}) => y({
  [`&.${Ji.valueLabelOpen}`]: {
    transform: `${n.orientation === "vertical" ? "translateY(-50%)" : "translateY(-100%)"} scale(1)`
  },
  zIndex: 1,
  whiteSpace: "nowrap"
}, e.typography.body2, {
  fontWeight: 500,
  transition: e.transitions.create(["transform"], {
    duration: e.transitions.duration.shortest
  }),
  transform: `${n.orientation === "vertical" ? "translateY(-50%)" : "translateY(-100%)"} scale(0)`,
  position: "absolute",
  backgroundColor: (e.vars || e).palette.grey[600],
  borderRadius: 2,
  color: (e.vars || e).palette.common.white,
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  padding: "0.25rem 0.75rem"
}, n.orientation === "horizontal" && {
  top: "-10px",
  transformOrigin: "bottom center",
  "&::before": {
    position: "absolute",
    content: '""',
    width: 8,
    height: 8,
    transform: "translate(-50%, 50%) rotate(45deg)",
    backgroundColor: "inherit",
    bottom: 0,
    left: "50%"
  }
}, n.orientation === "vertical" && {
  right: n.size === "small" ? "20px" : "30px",
  top: "50%",
  transformOrigin: "right center",
  "&::before": {
    position: "absolute",
    content: '""',
    width: 8,
    height: 8,
    transform: "translate(-50%, -50%) rotate(45deg)",
    backgroundColor: "inherit",
    right: -8,
    top: "50%"
  }
}, n.size === "small" && {
  fontSize: e.typography.pxToRem(12),
  padding: "0.25rem 0.5rem"
})), GJ = J("span", {
  name: "MuiSlider",
  slot: "Mark",
  shouldForwardProp: (e) => Rg(e) && e !== "markActive",
  overridesResolver: (e, n) => {
    const {
      markActive: a
    } = e;
    return [n.mark, a && n.markActive];
  }
})(({
  theme: e,
  ownerState: n,
  markActive: a
}) => y({
  position: "absolute",
  width: 2,
  height: 2,
  borderRadius: 1,
  backgroundColor: "currentColor"
}, n.orientation === "horizontal" && {
  top: "50%",
  transform: "translate(-1px, -50%)"
}, n.orientation === "vertical" && {
  left: "50%",
  transform: "translate(-50%, 1px)"
}, a && {
  backgroundColor: (e.vars || e).palette.background.paper,
  opacity: 0.8
})), KJ = J("span", {
  name: "MuiSlider",
  slot: "MarkLabel",
  shouldForwardProp: (e) => Rg(e) && e !== "markLabelActive",
  overridesResolver: (e, n) => n.markLabel
})(({
  theme: e,
  ownerState: n,
  markLabelActive: a
}) => y({}, e.typography.body2, {
  color: (e.vars || e).palette.text.secondary,
  position: "absolute",
  whiteSpace: "nowrap"
}, n.orientation === "horizontal" && {
  top: 30,
  transform: "translateX(-50%)",
  "@media (pointer: coarse)": {
    top: 40
  }
}, n.orientation === "vertical" && {
  left: 36,
  transform: "translateY(50%)",
  "@media (pointer: coarse)": {
    left: 44
  }
}, a && {
  color: (e.vars || e).palette.text.primary
})), QJ = (e) => {
  const {
    disabled: n,
    dragging: a,
    marked: s,
    orientation: u,
    track: d,
    classes: p,
    color: h,
    size: g
  } = e, b = {
    root: ["root", n && "disabled", a && "dragging", s && "marked", u === "vertical" && "vertical", d === "inverted" && "trackInverted", d === !1 && "trackFalse", h && `color${pe(h)}`, g && `size${pe(g)}`],
    rail: ["rail"],
    track: ["track"],
    mark: ["mark"],
    markActive: ["markActive"],
    markLabel: ["markLabel"],
    markLabelActive: ["markLabelActive"],
    valueLabel: ["valueLabel"],
    thumb: ["thumb", n && "disabled", g && `thumbSize${pe(g)}`, h && `thumbColor${pe(h)}`],
    active: ["active"],
    disabled: ["disabled"],
    focusVisible: ["focusVisible"]
  };
  return He(b, BJ, p);
}, XJ = ({
  children: e
}) => e, TA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d, p, h, g, b, x, S, E, R, $, M, O, N, V, I, z, B, P, F, H, U, Q;
  const Y = Ie({
    props: n,
    name: "MuiSlider"
  }), Z = En().direction === "rtl", {
    "aria-label": q,
    "aria-valuetext": X,
    "aria-labelledby": oe,
    // eslint-disable-next-line react/prop-types
    component: ie = "span",
    components: K = {},
    componentsProps: ne = {},
    color: se = "primary",
    classes: ze,
    className: Ue,
    disableSwap: Oe = !1,
    disabled: ue = !1,
    getAriaLabel: xe,
    getAriaValueText: me,
    marks: Se = !1,
    max: ce = 100,
    min: Le = 0,
    orientation: Ze = "horizontal",
    shiftStep: Ee = 10,
    size: Ae = "medium",
    step: Ce = 1,
    scale: ae = YM,
    slotProps: Pe,
    slots: ke,
    track: pt = "normal",
    valueLabelDisplay: _e = "off",
    valueLabelFormat: dt = YM
  } = Y, ge = le(Y, jJ), ve = y({}, Y, {
    isRtl: Z,
    max: ce,
    min: Le,
    classes: ze,
    disabled: ue,
    disableSwap: Oe,
    orientation: Ze,
    marks: Se,
    color: se,
    size: Ae,
    step: Ce,
    shiftStep: Ee,
    scale: ae,
    track: pt,
    valueLabelDisplay: _e,
    valueLabelFormat: dt
  }), {
    axisProps: qe,
    getRootProps: vt,
    getHiddenInputProps: yt,
    getThumbProps: Mt,
    open: bt,
    active: wt,
    axis: we,
    focusedThumbIndex: Re,
    range: at,
    dragging: Ke,
    marks: lt,
    values: et,
    trackOffset: rt,
    trackLeap: je,
    getThumbStyle: nt
  } = Z6(y({}, ve, {
    rootRef: a
  }));
  ve.marked = lt.length > 0 && lt.some((Te) => Te.label), ve.dragging = Ke, ve.focusedThumbIndex = Re;
  const ht = QJ(ve), $t = (s = (u = ke == null ? void 0 : ke.root) != null ? u : K.Root) != null ? s : UJ, Lt = (d = (p = ke == null ? void 0 : ke.rail) != null ? p : K.Rail) != null ? d : HJ, Jt = (h = (g = ke == null ? void 0 : ke.track) != null ? g : K.Track) != null ? h : WJ, qt = (b = (x = ke == null ? void 0 : ke.thumb) != null ? x : K.Thumb) != null ? b : YJ, en = (S = (E = ke == null ? void 0 : ke.valueLabel) != null ? E : K.ValueLabel) != null ? S : qJ, Nn = (R = ($ = ke == null ? void 0 : ke.mark) != null ? $ : K.Mark) != null ? R : GJ, nn = (M = (O = ke == null ? void 0 : ke.markLabel) != null ? O : K.MarkLabel) != null ? M : KJ, Yn = (N = (V = ke == null ? void 0 : ke.input) != null ? V : K.Input) != null ? N : "input", Po = (I = Pe == null ? void 0 : Pe.root) != null ? I : ne.root, Do = (z = Pe == null ? void 0 : Pe.rail) != null ? z : ne.rail, Zr = (B = Pe == null ? void 0 : Pe.track) != null ? B : ne.track, Bo = (P = Pe == null ? void 0 : Pe.thumb) != null ? P : ne.thumb, Ln = (F = Pe == null ? void 0 : Pe.valueLabel) != null ? F : ne.valueLabel, wn = (H = Pe == null ? void 0 : Pe.mark) != null ? H : ne.mark, qn = (U = Pe == null ? void 0 : Pe.markLabel) != null ? U : ne.markLabel, to = (Q = Pe == null ? void 0 : Pe.input) != null ? Q : ne.input, ao = rn({
    elementType: $t,
    getSlotProps: vt,
    externalSlotProps: Po,
    externalForwardedProps: ge,
    additionalProps: y({}, VJ($t) && {
      as: ie
    }),
    ownerState: y({}, ve, Po == null ? void 0 : Po.ownerState),
    className: [ht.root, Ue]
  }), Jo = rn({
    elementType: Lt,
    externalSlotProps: Do,
    ownerState: ve,
    className: ht.rail
  }), zo = rn({
    elementType: Jt,
    externalSlotProps: Zr,
    additionalProps: {
      style: y({}, qe[we].offset(rt), qe[we].leap(je))
    },
    ownerState: y({}, ve, Zr == null ? void 0 : Zr.ownerState),
    className: ht.track
  }), Fo = rn({
    elementType: qt,
    getSlotProps: Mt,
    externalSlotProps: Bo,
    ownerState: y({}, ve, Bo == null ? void 0 : Bo.ownerState),
    className: ht.thumb
  }), Nr = rn({
    elementType: en,
    externalSlotProps: Ln,
    ownerState: y({}, ve, Ln == null ? void 0 : Ln.ownerState),
    className: ht.valueLabel
  }), jo = rn({
    elementType: Nn,
    externalSlotProps: wn,
    ownerState: ve,
    className: ht.mark
  }), Co = rn({
    elementType: nn,
    externalSlotProps: qn,
    ownerState: ve,
    className: ht.markLabel
  }), Ge = rn({
    elementType: Yn,
    getSlotProps: yt,
    externalSlotProps: to,
    ownerState: ve
  });
  return /* @__PURE__ */ st($t, y({}, ao, {
    children: [/* @__PURE__ */ _(Lt, y({}, Jo)), /* @__PURE__ */ _(Jt, y({}, zo)), lt.filter((Te) => Te.value >= Le && Te.value <= ce).map((Te, it) => {
      const Tt = MT(Te.value, Le, ce), ln = qe[we].offset(Tt);
      let Ct;
      return pt === !1 ? Ct = et.indexOf(Te.value) !== -1 : Ct = pt === "normal" && (at ? Te.value >= et[0] && Te.value <= et[et.length - 1] : Te.value <= et[0]) || pt === "inverted" && (at ? Te.value <= et[0] || Te.value >= et[et.length - 1] : Te.value >= et[0]), /* @__PURE__ */ st(k.Fragment, {
        children: [/* @__PURE__ */ _(Nn, y({
          "data-index": it
        }, jo, !ts(Nn) && {
          markActive: Ct
        }, {
          style: y({}, ln, jo.style),
          className: fe(jo.className, Ct && ht.markActive)
        })), Te.label != null ? /* @__PURE__ */ _(nn, y({
          "aria-hidden": !0,
          "data-index": it
        }, Co, !ts(nn) && {
          markLabelActive: Ct
        }, {
          style: y({}, ln, Co.style),
          className: fe(ht.markLabel, Co.className, Ct && ht.markLabelActive),
          children: Te.label
        })) : null]
      }, it);
    }), et.map((Te, it) => {
      const Tt = MT(Te, Le, ce), ln = qe[we].offset(Tt), Ct = _e === "off" ? XJ : en;
      return (
        /* TODO v6: Change component structure. It will help in avoiding the complicated React.cloneElement API added in SliderValueLabel component. Should be: Thumb -> Input, ValueLabel. Follow Joy UI's Slider structure. */
        /* @__PURE__ */ _(Ct, y({}, !ts(Ct) && {
          valueLabelFormat: dt,
          valueLabelDisplay: _e,
          value: typeof dt == "function" ? dt(ae(Te), it) : dt,
          index: it,
          open: bt === it || wt === it || _e === "on",
          disabled: ue
        }, Nr, {
          children: /* @__PURE__ */ _(qt, y({
            "data-index": it
          }, Fo, {
            className: fe(ht.thumb, Fo.className, wt === it && ht.active, Re === it && ht.focusVisible),
            style: y({}, ln, nt(it), Fo.style),
            children: /* @__PURE__ */ _(Yn, y({
              "data-index": it,
              "aria-label": xe ? xe(it) : q,
              "aria-valuenow": ae(Te),
              "aria-labelledby": oe,
              "aria-valuetext": me ? me(ae(Te), it) : X,
              value: et[it]
            }, Ge))
          }))
        }), it)
      );
    })]
  }));
});
process.env.NODE_ENV !== "production" && (TA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The label of the slider.
   */
  "aria-label": Xo(t.string, (e) => Array.isArray(e.value || e.defaultValue) && e["aria-label"] != null ? new Error("MUI: You need to use the `getAriaLabel` prop instead of `aria-label` when using a range slider.") : null),
  /**
   * The id of the element containing a label for the slider.
   */
  "aria-labelledby": t.string,
  /**
   * A string value that provides a user-friendly name for the current value of the slider.
   */
  "aria-valuetext": Xo(t.string, (e) => Array.isArray(e.value || e.defaultValue) && e["aria-valuetext"] != null ? new Error("MUI: You need to use the `getAriaValueText` prop instead of `aria-valuetext` when using a range slider.") : null),
  /**
   * @ignore
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    Input: t.elementType,
    Mark: t.elementType,
    MarkLabel: t.elementType,
    Rail: t.elementType,
    Root: t.elementType,
    Thumb: t.elementType,
    Track: t.elementType,
    ValueLabel: t.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: t.shape({
    input: t.oneOfType([t.func, t.object]),
    mark: t.oneOfType([t.func, t.object]),
    markLabel: t.oneOfType([t.func, t.object]),
    rail: t.oneOfType([t.func, t.object]),
    root: t.oneOfType([t.func, t.object]),
    thumb: t.oneOfType([t.func, t.object]),
    track: t.oneOfType([t.func, t.object]),
    valueLabel: t.oneOfType([t.func, t.shape({
      children: t.element,
      className: t.string,
      open: t.bool,
      style: t.object,
      value: t.number,
      valueLabelDisplay: t.oneOf(["auto", "off", "on"])
    })])
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.oneOfType([t.arrayOf(t.number), t.number]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, the active thumb doesn't swap when moving pointer over a thumb while dragging another thumb.
   * @default false
   */
  disableSwap: t.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the thumb labels of the slider.
   * This is important for screen reader users.
   * @param {number} index The thumb label's index to format.
   * @returns {string}
   */
  getAriaLabel: t.func,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the slider.
   * This is important for screen reader users.
   * @param {number} value The thumb label's value to format.
   * @param {number} index The thumb label's index to format.
   * @returns {string}
   */
  getAriaValueText: t.func,
  /**
   * Marks indicate predetermined values to which the user can move the slider.
   * If `true` the marks are spaced according the value of the `step` prop.
   * If an array, it should contain objects with `value` and an optional `label` keys.
   * @default false
   */
  marks: t.oneOfType([t.arrayOf(t.shape({
    label: t.node,
    value: t.number.isRequired
  })), t.bool]),
  /**
   * The maximum allowed value of the slider.
   * Should not be equal to min.
   * @default 100
   */
  max: t.number,
  /**
   * The minimum allowed value of the slider.
   * Should not be equal to max.
   * @default 0
   */
  min: t.number,
  /**
   * Name attribute of the hidden `input` element.
   */
  name: t.string,
  /**
   * Callback function that is fired when the slider's value changed.
   *
   * @param {Event} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event not a change event.
   * @param {number | number[]} value The new value.
   * @param {number} activeThumb Index of the currently moved thumb.
   */
  onChange: t.func,
  /**
   * Callback function that is fired when the `mouseup` is triggered.
   *
   * @param {React.SyntheticEvent | Event} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {number | number[]} value The new value.
   */
  onChangeCommitted: t.func,
  /**
   * The component orientation.
   * @default 'horizontal'
   */
  orientation: t.oneOf(["horizontal", "vertical"]),
  /**
   * A transformation function, to change the scale of the slider.
   * @param {any} x
   * @returns {any}
   * @default function Identity(x) {
   *   return x;
   * }
   */
  scale: t.func,
  /**
   * The granularity with which the slider can step through values when using Page Up/Page Down or Shift + Arrow Up/Arrow Down.
   * @default 10
   */
  shiftStep: t.number,
  /**
   * The size of the slider.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["small", "medium"]), t.string]),
  /**
   * The props used for each slot inside the Slider.
   * @default {}
   */
  slotProps: t.shape({
    input: t.oneOfType([t.func, t.object]),
    mark: t.oneOfType([t.func, t.object]),
    markLabel: t.oneOfType([t.func, t.object]),
    rail: t.oneOfType([t.func, t.object]),
    root: t.oneOfType([t.func, t.object]),
    thumb: t.oneOfType([t.func, t.object]),
    track: t.oneOfType([t.func, t.object]),
    valueLabel: t.oneOfType([t.func, t.shape({
      children: t.element,
      className: t.string,
      open: t.bool,
      style: t.object,
      value: t.number,
      valueLabelDisplay: t.oneOf(["auto", "off", "on"])
    })])
  }),
  /**
   * The components used for each slot inside the Slider.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: t.shape({
    input: t.elementType,
    mark: t.elementType,
    markLabel: t.elementType,
    rail: t.elementType,
    root: t.elementType,
    thumb: t.elementType,
    track: t.elementType,
    valueLabel: t.elementType
  }),
  /**
   * The granularity with which the slider can step through values. (A "discrete" slider.)
   * The `min` prop serves as the origin for the valid values.
   * We recommend (max - min) to be evenly divisible by the step.
   *
   * When step is `null`, the thumb can only be slid onto marks provided with the `marks` prop.
   * @default 1
   */
  step: t.number,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Tab index attribute of the hidden `input` element.
   */
  tabIndex: t.number,
  /**
   * The track presentation:
   *
   * - `normal` the track will render a bar representing the slider value.
   * - `inverted` the track will render a bar representing the remaining slider value.
   * - `false` the track will render without a bar.
   * @default 'normal'
   */
  track: t.oneOf(["inverted", "normal", !1]),
  /**
   * The value of the slider.
   * For ranged sliders, provide an array with two values.
   */
  value: t.oneOfType([t.arrayOf(t.number), t.number]),
  /**
   * Controls when the value label is displayed:
   *
   * - `auto` the value label will display when the thumb is hovered or focused.
   * - `on` will display persistently.
   * - `off` will never display.
   * @default 'off'
   */
  valueLabelDisplay: t.oneOf(["auto", "off", "on"]),
  /**
   * The format function the value label's value.
   *
   * When a function is provided, it should have the following signature:
   *
   * - {number} value The value label's value to format
   * - {number} index The value label's index to format
   * @param {any} x
   * @returns {any}
   * @default function Identity(x) {
   *   return x;
   * }
   */
  valueLabelFormat: t.oneOfType([t.func, t.string])
});
const Zde = TA;
function ZJ(e) {
  return We("MuiSnackbarContent", e);
}
const JJ = Ye("MuiSnackbarContent", ["root", "message", "action"]), Jde = JJ, eee = ["action", "className", "message", "role"], tee = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"],
    action: ["action"],
    message: ["message"]
  }, ZJ, n);
}, nee = J(ni, {
  name: "MuiSnackbarContent",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(({
  theme: e
}) => {
  const n = e.palette.mode === "light" ? 0.8 : 0.98, a = gT(e.palette.background.default, n);
  return y({}, e.typography.body2, {
    color: e.vars ? e.vars.palette.SnackbarContent.color : e.palette.getContrastText(a),
    backgroundColor: e.vars ? e.vars.palette.SnackbarContent.bg : a,
    display: "flex",
    alignItems: "center",
    flexWrap: "wrap",
    padding: "6px 16px",
    borderRadius: (e.vars || e).shape.borderRadius,
    flexGrow: 1,
    [e.breakpoints.up("sm")]: {
      flexGrow: "initial",
      minWidth: 288
    }
  });
}), oee = J("div", {
  name: "MuiSnackbarContent",
  slot: "Message",
  overridesResolver: (e, n) => n.message
})({
  padding: "8px 0"
}), ree = J("div", {
  name: "MuiSnackbarContent",
  slot: "Action",
  overridesResolver: (e, n) => n.action
})({
  display: "flex",
  alignItems: "center",
  marginLeft: "auto",
  paddingLeft: 16,
  marginRight: -8
}), xA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiSnackbarContent"
  }), {
    action: u,
    className: d,
    message: p,
    role: h = "alert"
  } = s, g = le(s, eee), b = s, x = tee(b);
  return /* @__PURE__ */ st(nee, y({
    role: h,
    square: !0,
    elevation: 6,
    className: fe(x.root, d),
    ownerState: b,
    ref: a
  }, g, {
    children: [/* @__PURE__ */ _(oee, {
      className: x.message,
      ownerState: b,
      children: p
    }), u ? /* @__PURE__ */ _(ree, {
      className: x.action,
      ownerState: b,
      children: u
    }) : null]
  }));
});
process.env.NODE_ENV !== "production" && (xA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The action to display. It renders after the message, at the end of the snackbar.
   */
  action: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The message to display.
   */
  message: t.node,
  /**
   * The ARIA role attribute of the element.
   * @default 'alert'
   */
  role: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const aee = xA;
function iee(e) {
  return We("MuiSnackbar", e);
}
const see = Ye("MuiSnackbar", ["root", "anchorOriginTopCenter", "anchorOriginBottomCenter", "anchorOriginTopRight", "anchorOriginBottomRight", "anchorOriginTopLeft", "anchorOriginBottomLeft"]), epe = see, lee = ["onEnter", "onExited"], cee = ["action", "anchorOrigin", "autoHideDuration", "children", "className", "ClickAwayListenerProps", "ContentProps", "disableWindowBlurListener", "message", "onBlur", "onClose", "onFocus", "onMouseEnter", "onMouseLeave", "open", "resumeHideDuration", "TransitionComponent", "transitionDuration", "TransitionProps"], uee = (e) => {
  const {
    classes: n,
    anchorOrigin: a
  } = e, s = {
    root: ["root", `anchorOrigin${pe(a.vertical)}${pe(a.horizontal)}`]
  };
  return He(s, iee, n);
}, qM = J("div", {
  name: "MuiSnackbar",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[`anchorOrigin${pe(a.anchorOrigin.vertical)}${pe(a.anchorOrigin.horizontal)}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => {
  const a = {
    left: "50%",
    right: "auto",
    transform: "translateX(-50%)"
  };
  return y({
    zIndex: (e.vars || e).zIndex.snackbar,
    position: "fixed",
    display: "flex",
    left: 8,
    right: 8,
    justifyContent: "center",
    alignItems: "center"
  }, n.anchorOrigin.vertical === "top" ? {
    top: 8
  } : {
    bottom: 8
  }, n.anchorOrigin.horizontal === "left" && {
    justifyContent: "flex-start"
  }, n.anchorOrigin.horizontal === "right" && {
    justifyContent: "flex-end"
  }, {
    [e.breakpoints.up("sm")]: y({}, n.anchorOrigin.vertical === "top" ? {
      top: 24
    } : {
      bottom: 24
    }, n.anchorOrigin.horizontal === "center" && a, n.anchorOrigin.horizontal === "left" && {
      left: 24,
      right: "auto"
    }, n.anchorOrigin.horizontal === "right" && {
      right: 24,
      left: "auto"
    })
  });
}), SA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiSnackbar"
  }), u = En(), d = {
    enter: u.transitions.duration.enteringScreen,
    exit: u.transitions.duration.leavingScreen
  }, {
    action: p,
    anchorOrigin: {
      vertical: h,
      horizontal: g
    } = {
      vertical: "bottom",
      horizontal: "left"
    },
    autoHideDuration: b = null,
    children: x,
    className: S,
    ClickAwayListenerProps: E,
    ContentProps: R,
    disableWindowBlurListener: $ = !1,
    message: M,
    open: O,
    TransitionComponent: N = fg,
    transitionDuration: V = d,
    TransitionProps: {
      onEnter: I,
      onExited: z
    } = {}
  } = s, B = le(s.TransitionProps, lee), P = le(s, cee), F = y({}, s, {
    anchorOrigin: {
      vertical: h,
      horizontal: g
    },
    autoHideDuration: b,
    disableWindowBlurListener: $,
    TransitionComponent: N,
    transitionDuration: V
  }), H = uee(F), {
    getRootProps: U,
    onClickAway: Q
  } = J6(y({}, F)), [Y, te] = k.useState(!0), Z = rn({
    elementType: qM,
    getSlotProps: U,
    externalForwardedProps: P,
    ownerState: F,
    additionalProps: {
      ref: a
    },
    className: [H.root, S]
  }), q = (oe) => {
    te(!0), z && z(oe);
  }, X = (oe, ie) => {
    te(!1), I && I(oe, ie);
  };
  return !O && Y ? null : /* @__PURE__ */ _(ET, y({
    onClickAway: Q
  }, E, {
    children: /* @__PURE__ */ _(qM, y({}, Z, {
      children: /* @__PURE__ */ _(N, y({
        appear: !0,
        in: O,
        timeout: V,
        direction: h === "top" ? "down" : "up",
        onEnter: X,
        onExited: q
      }, B, {
        children: x || /* @__PURE__ */ _(aee, y({
          message: M,
          action: p
        }, R))
      }))
    }))
  }));
});
process.env.NODE_ENV !== "production" && (SA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The action to display. It renders after the message, at the end of the snackbar.
   */
  action: t.node,
  /**
   * The anchor of the `Snackbar`.
   * On smaller screens, the component grows to occupy all the available width,
   * the horizontal alignment is ignored.
   * @default { vertical: 'bottom', horizontal: 'left' }
   */
  anchorOrigin: t.shape({
    horizontal: t.oneOf(["center", "left", "right"]).isRequired,
    vertical: t.oneOf(["bottom", "top"]).isRequired
  }),
  /**
   * The number of milliseconds to wait before automatically calling the
   * `onClose` function. `onClose` should then set the state of the `open`
   * prop to hide the Snackbar. This behavior is disabled by default with
   * the `null` value.
   * @default null
   */
  autoHideDuration: t.number,
  /**
   * Replace the `SnackbarContent` component.
   */
  children: t.element,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Props applied to the `ClickAwayListener` element.
   */
  ClickAwayListenerProps: t.object,
  /**
   * Props applied to the [`SnackbarContent`](/material-ui/api/snackbar-content/) element.
   */
  ContentProps: t.object,
  /**
   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.
   * @default false
   */
  disableWindowBlurListener: t.bool,
  /**
   * When displaying multiple consecutive snackbars using a single parent-rendered
   * `<Snackbar/>`, add the `key` prop to ensure independent treatment of each message.
   * For instance, use `<Snackbar key={message} />`. Otherwise, messages might update
   * in place, and features like `autoHideDuration` could be affected.
   */
  key: () => null,
  /**
   * The message to display.
   */
  message: t.node,
  /**
   * @ignore
   */
  onBlur: t.func,
  /**
   * Callback fired when the component requests to be closed.
   * Typically `onClose` is used to set state in the parent component,
   * which is used to control the `Snackbar` `open` prop.
   * The `reason` parameter can optionally be used to control the response to `onClose`,
   * for example ignoring `clickaway`.
   *
   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.
   * @param {string} reason Can be: `"timeout"` (`autoHideDuration` expired), `"clickaway"`, or `"escapeKeyDown"`.
   */
  onClose: t.func,
  /**
   * @ignore
   */
  onFocus: t.func,
  /**
   * @ignore
   */
  onMouseEnter: t.func,
  /**
   * @ignore
   */
  onMouseLeave: t.func,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool,
  /**
   * The number of milliseconds to wait before dismissing after user interaction.
   * If `autoHideDuration` prop isn't specified, it does nothing.
   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,
   * we default to `autoHideDuration / 2` ms.
   */
  resumeHideDuration: t.number,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Grow
   */
  TransitionComponent: t.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: t.oneOfType([t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @default {}
   */
  TransitionProps: t.object
});
const tpe = SA, dee = ["addEndListener", "appear", "children", "easing", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"], pee = {
  entering: {
    transform: "none"
  },
  entered: {
    transform: "none"
  }
}, kA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = En(), u = {
    enter: s.transitions.duration.enteringScreen,
    exit: s.transitions.duration.leavingScreen
  }, {
    addEndListener: d,
    appear: p = !0,
    children: h,
    easing: g,
    in: b,
    onEnter: x,
    onEntered: S,
    onEntering: E,
    onExit: R,
    onExited: $,
    onExiting: M,
    style: O,
    timeout: N = u,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: V = Dd
  } = n, I = le(n, dee), z = k.useRef(null), B = cn(z, h.ref, a), P = (q) => (X) => {
    if (q) {
      const oe = z.current;
      X === void 0 ? q(oe) : q(oe, X);
    }
  }, F = P(E), H = P((q, X) => {
    YT(q);
    const oe = os({
      style: O,
      timeout: N,
      easing: g
    }, {
      mode: "enter"
    });
    q.style.webkitTransition = s.transitions.create("transform", oe), q.style.transition = s.transitions.create("transform", oe), x && x(q, X);
  }), U = P(S), Q = P(M), Y = P((q) => {
    const X = os({
      style: O,
      timeout: N,
      easing: g
    }, {
      mode: "exit"
    });
    q.style.webkitTransition = s.transitions.create("transform", X), q.style.transition = s.transitions.create("transform", X), R && R(q);
  }), te = P($);
  return /* @__PURE__ */ _(V, y({
    appear: p,
    in: b,
    nodeRef: z,
    onEnter: H,
    onEntered: U,
    onEntering: F,
    onExit: Y,
    onExited: te,
    onExiting: Q,
    addEndListener: (q) => {
      d && d(z.current, q);
    },
    timeout: N
  }, I, {
    children: (q, X) => /* @__PURE__ */ k.cloneElement(h, y({
      style: y({
        transform: "scale(0)",
        visibility: q === "exited" && !b ? "hidden" : void 0
      }, pee[q], O, h.props.style),
      ref: B
    }, X))
  }));
});
process.env.NODE_ENV !== "production" && (kA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: t.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: t.bool,
  /**
   * A single child content element.
   */
  children: su.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: t.oneOfType([t.shape({
    enter: t.string,
    exit: t.string
  }), t.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: t.bool,
  /**
   * @ignore
   */
  onEnter: t.func,
  /**
   * @ignore
   */
  onEntered: t.func,
  /**
   * @ignore
   */
  onEntering: t.func,
  /**
   * @ignore
   */
  onExit: t.func,
  /**
   * @ignore
   */
  onExited: t.func,
  /**
   * @ignore
   */
  onExiting: t.func,
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: t.oneOfType([t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })])
});
const fee = kA;
function mee(e) {
  return We("MuiSpeedDial", e);
}
const hee = Ye("MuiSpeedDial", ["root", "fab", "directionUp", "directionDown", "directionLeft", "directionRight", "actions", "actionsClosed"]), eT = hee, vee = ["ref"], gee = ["ariaLabel", "FabProps", "children", "className", "direction", "hidden", "icon", "onBlur", "onClose", "onFocus", "onKeyDown", "onMouseEnter", "onMouseLeave", "onOpen", "open", "openIcon", "TransitionComponent", "transitionDuration", "TransitionProps"], bee = ["ref"], yee = (e) => {
  const {
    classes: n,
    open: a,
    direction: s
  } = e, u = {
    root: ["root", `direction${pe(s)}`],
    fab: ["fab"],
    actions: ["actions", !a && "actionsClosed"]
  };
  return He(u, mee, n);
};
function Dv(e) {
  if (e === "up" || e === "down")
    return "vertical";
  if (e === "right" || e === "left")
    return "horizontal";
}
const Qc = 32, tT = 16, Cee = J("div", {
  name: "MuiSpeedDial",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[`direction${pe(a.direction)}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  zIndex: (e.vars || e).zIndex.speedDial,
  display: "flex",
  alignItems: "center",
  pointerEvents: "none"
}, n.direction === "up" && {
  flexDirection: "column-reverse",
  [`& .${eT.actions}`]: {
    flexDirection: "column-reverse",
    marginBottom: -Qc,
    paddingBottom: tT + Qc
  }
}, n.direction === "down" && {
  flexDirection: "column",
  [`& .${eT.actions}`]: {
    flexDirection: "column",
    marginTop: -Qc,
    paddingTop: tT + Qc
  }
}, n.direction === "left" && {
  flexDirection: "row-reverse",
  [`& .${eT.actions}`]: {
    flexDirection: "row-reverse",
    marginRight: -Qc,
    paddingRight: tT + Qc
  }
}, n.direction === "right" && {
  flexDirection: "row",
  [`& .${eT.actions}`]: {
    flexDirection: "row",
    marginLeft: -Qc,
    paddingLeft: tT + Qc
  }
})), Tee = J(hI, {
  name: "MuiSpeedDial",
  slot: "Fab",
  overridesResolver: (e, n) => n.fab
})(() => ({
  pointerEvents: "auto"
})), xee = J("div", {
  name: "MuiSpeedDial",
  slot: "Actions",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.actions, !a.open && n.actionsClosed];
  }
})(({
  ownerState: e
}) => y({
  display: "flex",
  pointerEvents: "auto"
}, !e.open && {
  transition: "top 0s linear 0.2s",
  pointerEvents: "none"
})), wA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiSpeedDial"
  }), u = En(), d = {
    enter: u.transitions.duration.enteringScreen,
    exit: u.transitions.duration.leavingScreen
  }, {
    ariaLabel: p,
    FabProps: {
      ref: h
    } = {},
    children: g,
    className: b,
    direction: x = "up",
    hidden: S = !1,
    icon: E,
    onBlur: R,
    onClose: $,
    onFocus: M,
    onKeyDown: O,
    onMouseEnter: N,
    onMouseLeave: V,
    onOpen: I,
    open: z,
    TransitionComponent: B = fee,
    transitionDuration: P = d,
    TransitionProps: F
  } = s, H = le(s.FabProps, vee), U = le(s, gee), [Q, Y] = Eo({
    controlled: z,
    default: !1,
    name: "SpeedDial",
    state: "open"
  }), te = y({}, s, {
    open: Q,
    direction: x
  }), Z = yee(te), q = Fl(), X = k.useRef(0), oe = k.useRef(), ie = k.useRef([]);
  ie.current = [ie.current[0]];
  const K = k.useCallback((ce) => {
    ie.current[0] = ce;
  }, []), ne = cn(h, K), se = (ce, Le) => (Ze) => {
    ie.current[ce + 1] = Ze, Le && Le(Ze);
  }, ze = (ce) => {
    O && O(ce);
    const Le = ce.key.replace("Arrow", "").toLowerCase(), {
      current: Ze = Le
    } = oe;
    if (ce.key === "Escape") {
      Y(!1), ie.current[0].focus(), $ && $(ce, "escapeKeyDown");
      return;
    }
    if (Dv(Le) === Dv(Ze) && Dv(Le) !== void 0) {
      ce.preventDefault();
      const Ee = Le === Ze ? 1 : -1, Ae = Jc(X.current + Ee, 0, ie.current.length - 1);
      ie.current[Ae].focus(), X.current = Ae, oe.current = Ze;
    }
  };
  k.useEffect(() => {
    Q || (X.current = 0, oe.current = void 0);
  }, [Q]);
  const Ue = (ce) => {
    ce.type === "mouseleave" && V && V(ce), ce.type === "blur" && R && R(ce), q.clear(), ce.type === "blur" ? q.start(0, () => {
      Y(!1), $ && $(ce, "blur");
    }) : (Y(!1), $ && $(ce, "mouseLeave"));
  }, Oe = (ce) => {
    H.onClick && H.onClick(ce), q.clear(), Q ? (Y(!1), $ && $(ce, "toggle")) : (Y(!0), I && I(ce, "toggle"));
  }, ue = (ce) => {
    ce.type === "mouseenter" && N && N(ce), ce.type === "focus" && M && M(ce), q.clear(), Q || q.start(0, () => {
      Y(!0), I && I(ce, {
        focus: "focus",
        mouseenter: "mouseEnter"
      }[ce.type]);
    });
  }, xe = p.replace(/^[^a-z]+|[^\w:.-]+/gi, ""), me = k.Children.toArray(g).filter((ce) => (process.env.NODE_ENV !== "production" && as.isFragment(ce) && console.error(["MUI: The SpeedDial component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), /* @__PURE__ */ k.isValidElement(ce))), Se = me.map((ce, Le) => {
    const Ze = ce.props, {
      FabProps: {
        ref: Ee
      } = {},
      tooltipPlacement: Ae
    } = Ze, Ce = le(Ze.FabProps, bee), ae = Ae || (Dv(x) === "vertical" ? "left" : "top");
    return /* @__PURE__ */ k.cloneElement(ce, {
      FabProps: y({}, Ce, {
        ref: se(Le, Ee)
      }),
      delay: 30 * (Q ? Le : me.length - Le),
      open: Q,
      tooltipPlacement: ae,
      id: `${xe}-action-${Le}`
    });
  });
  return /* @__PURE__ */ st(Cee, y({
    className: fe(Z.root, b),
    ref: a,
    role: "presentation",
    onKeyDown: ze,
    onBlur: Ue,
    onFocus: ue,
    onMouseEnter: ue,
    onMouseLeave: Ue,
    ownerState: te
  }, U, {
    children: [/* @__PURE__ */ _(B, y({
      in: !S,
      timeout: P,
      unmountOnExit: !0
    }, F, {
      children: /* @__PURE__ */ _(Tee, y({
        color: "primary",
        "aria-label": p,
        "aria-haspopup": "true",
        "aria-expanded": Q,
        "aria-controls": `${xe}-actions`
      }, H, {
        onClick: Oe,
        className: fe(Z.fab, H.className),
        ref: ne,
        ownerState: te,
        children: /* @__PURE__ */ k.isValidElement(E) && Hs(E, ["SpeedDialIcon"]) ? /* @__PURE__ */ k.cloneElement(E, {
          open: Q
        }) : E
      }))
    })), /* @__PURE__ */ _(xee, {
      id: `${xe}-actions`,
      role: "menu",
      "aria-orientation": Dv(x),
      className: fe(Z.actions, !Q && Z.actionsClosed),
      ownerState: te,
      children: Se
    })]
  }));
});
process.env.NODE_ENV !== "production" && (wA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The aria-label of the button element.
   * Also used to provide the `id` for the `SpeedDial` element and its children.
   */
  ariaLabel: t.string.isRequired,
  /**
   * SpeedDialActions to display when the SpeedDial is `open`.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The direction the actions open relative to the floating action button.
   * @default 'up'
   */
  direction: t.oneOf(["down", "left", "right", "up"]),
  /**
   * Props applied to the [`Fab`](/material-ui/api/fab/) element.
   * @default {}
   */
  FabProps: t.object,
  /**
   * If `true`, the SpeedDial is hidden.
   * @default false
   */
  hidden: t.bool,
  /**
   * The icon to display in the SpeedDial Fab. The `SpeedDialIcon` component
   * provides a default Icon with animation.
   */
  icon: t.node,
  /**
   * @ignore
   */
  onBlur: t.func,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"toggle"`, `"blur"`, `"mouseLeave"`, `"escapeKeyDown"`.
   */
  onClose: t.func,
  /**
   * @ignore
   */
  onFocus: t.func,
  /**
   * @ignore
   */
  onKeyDown: t.func,
  /**
   * @ignore
   */
  onMouseEnter: t.func,
  /**
   * @ignore
   */
  onMouseLeave: t.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"toggle"`, `"focus"`, `"mouseEnter"`.
   */
  onOpen: t.func,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool,
  /**
   * The icon to display in the SpeedDial Fab when the SpeedDial is open.
   */
  openIcon: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Zoom
   */
  TransitionComponent: t.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: t.oneOfType([t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: t.object
});
const npe = wA;
function See(e) {
  return We("MuiTooltip", e);
}
const kee = Ye("MuiTooltip", ["popper", "popperInteractive", "popperArrow", "popperClose", "tooltip", "tooltipArrow", "touch", "tooltipPlacementLeft", "tooltipPlacementRight", "tooltipPlacementTop", "tooltipPlacementBottom", "arrow"]), nu = kee, wee = ["arrow", "children", "classes", "components", "componentsProps", "describeChild", "disableFocusListener", "disableHoverListener", "disableInteractive", "disableTouchListener", "enterDelay", "enterNextDelay", "enterTouchDelay", "followCursor", "id", "leaveDelay", "leaveTouchDelay", "onClose", "onOpen", "open", "placement", "PopperComponent", "PopperProps", "slotProps", "slots", "title", "TransitionComponent", "TransitionProps"];
function Ree(e) {
  return Math.round(e * 1e5) / 1e5;
}
const Eee = (e) => {
  const {
    classes: n,
    disableInteractive: a,
    arrow: s,
    touch: u,
    placement: d
  } = e, p = {
    popper: ["popper", !a && "popperInteractive", s && "popperArrow"],
    tooltip: ["tooltip", s && "tooltipArrow", u && "touch", `tooltipPlacement${pe(d.split("-")[0])}`],
    arrow: ["arrow"]
  };
  return He(p, See, n);
}, Oee = J(Pg, {
  name: "MuiTooltip",
  slot: "Popper",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.popper, !a.disableInteractive && n.popperInteractive, a.arrow && n.popperArrow, !a.open && n.popperClose];
  }
})(({
  theme: e,
  ownerState: n,
  open: a
}) => y({
  zIndex: (e.vars || e).zIndex.tooltip,
  pointerEvents: "none"
}, !n.disableInteractive && {
  pointerEvents: "auto"
}, !a && {
  pointerEvents: "none"
}, n.arrow && {
  [`&[data-popper-placement*="bottom"] .${nu.arrow}`]: {
    top: 0,
    marginTop: "-0.71em",
    "&::before": {
      transformOrigin: "0 100%"
    }
  },
  [`&[data-popper-placement*="top"] .${nu.arrow}`]: {
    bottom: 0,
    marginBottom: "-0.71em",
    "&::before": {
      transformOrigin: "100% 0"
    }
  },
  [`&[data-popper-placement*="right"] .${nu.arrow}`]: y({}, n.isRtl ? {
    right: 0,
    marginRight: "-0.71em"
  } : {
    left: 0,
    marginLeft: "-0.71em"
  }, {
    height: "1em",
    width: "0.71em",
    "&::before": {
      transformOrigin: "100% 100%"
    }
  }),
  [`&[data-popper-placement*="left"] .${nu.arrow}`]: y({}, n.isRtl ? {
    left: 0,
    marginLeft: "-0.71em"
  } : {
    right: 0,
    marginRight: "-0.71em"
  }, {
    height: "1em",
    width: "0.71em",
    "&::before": {
      transformOrigin: "0 0"
    }
  })
})), Pee = J("div", {
  name: "MuiTooltip",
  slot: "Tooltip",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.tooltip, a.touch && n.touch, a.arrow && n.tooltipArrow, n[`tooltipPlacement${pe(a.placement.split("-")[0])}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  backgroundColor: e.vars ? e.vars.palette.Tooltip.bg : Yt(e.palette.grey[700], 0.92),
  borderRadius: (e.vars || e).shape.borderRadius,
  color: (e.vars || e).palette.common.white,
  fontFamily: e.typography.fontFamily,
  padding: "4px 8px",
  fontSize: e.typography.pxToRem(11),
  maxWidth: 300,
  margin: 2,
  wordWrap: "break-word",
  fontWeight: e.typography.fontWeightMedium
}, n.arrow && {
  position: "relative",
  margin: 0
}, n.touch && {
  padding: "8px 16px",
  fontSize: e.typography.pxToRem(14),
  lineHeight: `${Ree(16 / 14)}em`,
  fontWeight: e.typography.fontWeightRegular
}, {
  [`.${nu.popper}[data-popper-placement*="left"] &`]: y({
    transformOrigin: "right center"
  }, n.isRtl ? y({
    marginLeft: "14px"
  }, n.touch && {
    marginLeft: "24px"
  }) : y({
    marginRight: "14px"
  }, n.touch && {
    marginRight: "24px"
  })),
  [`.${nu.popper}[data-popper-placement*="right"] &`]: y({
    transformOrigin: "left center"
  }, n.isRtl ? y({
    marginRight: "14px"
  }, n.touch && {
    marginRight: "24px"
  }) : y({
    marginLeft: "14px"
  }, n.touch && {
    marginLeft: "24px"
  })),
  [`.${nu.popper}[data-popper-placement*="top"] &`]: y({
    transformOrigin: "center bottom",
    marginBottom: "14px"
  }, n.touch && {
    marginBottom: "24px"
  }),
  [`.${nu.popper}[data-popper-placement*="bottom"] &`]: y({
    transformOrigin: "center top",
    marginTop: "14px"
  }, n.touch && {
    marginTop: "24px"
  })
})), Dee = J("span", {
  name: "MuiTooltip",
  slot: "Arrow",
  overridesResolver: (e, n) => n.arrow
})(({
  theme: e
}) => ({
  overflow: "hidden",
  position: "absolute",
  width: "1em",
  height: "0.71em",
  boxSizing: "border-box",
  color: e.vars ? e.vars.palette.Tooltip.bg : Yt(e.palette.grey[700], 0.9),
  "&::before": {
    content: '""',
    margin: "auto",
    display: "block",
    width: "100%",
    height: "100%",
    backgroundColor: "currentColor",
    transform: "rotate(45deg)"
  }
}));
let nT = !1;
const GM = new Sg();
let Mv = {
  x: 0,
  y: 0
};
function oT(e, n) {
  return (a) => {
    n && n(a), e(a);
  };
}
const RA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d, p, h, g, b, x, S, E, R, $, M, O, N, V, I, z, B;
  const P = Ie({
    props: n,
    name: "MuiTooltip"
  }), {
    arrow: F = !1,
    children: H,
    components: U = {},
    componentsProps: Q = {},
    describeChild: Y = !1,
    disableFocusListener: te = !1,
    disableHoverListener: Z = !1,
    disableInteractive: q = !1,
    disableTouchListener: X = !1,
    enterDelay: oe = 100,
    enterNextDelay: ie = 0,
    enterTouchDelay: K = 700,
    followCursor: ne = !1,
    id: se,
    leaveDelay: ze = 0,
    leaveTouchDelay: Ue = 1500,
    onClose: Oe,
    onOpen: ue,
    open: xe,
    placement: me = "bottom",
    PopperComponent: Se,
    PopperProps: ce = {},
    slotProps: Le = {},
    slots: Ze = {},
    title: Ee,
    TransitionComponent: Ae = fg,
    TransitionProps: Ce
  } = P, ae = le(P, wee), Pe = /* @__PURE__ */ k.isValidElement(H) ? H : /* @__PURE__ */ _("span", {
    children: H
  }), ke = En(), pt = ke.direction === "rtl", [_e, dt] = k.useState(), [ge, ve] = k.useState(null), qe = k.useRef(!1), vt = q || ne, yt = Fl(), Mt = Fl(), bt = Fl(), wt = Fl(), [we, Re] = Eo({
    controlled: xe,
    default: !1,
    name: "Tooltip",
    state: "open"
  });
  let at = we;
  if (process.env.NODE_ENV !== "production") {
    const {
      current: Ct
    } = k.useRef(xe !== void 0);
    k.useEffect(() => {
      _e && _e.disabled && !Ct && Ee !== "" && _e.tagName.toLowerCase() === "button" && console.error(["MUI: You are providing a disabled `button` child to the Tooltip component.", "A disabled element does not fire events.", "Tooltip needs to listen to the child element's events to display the title.", "", "Add a simple wrapper element, such as a `span`."].join(`
`));
    }, [Ee, _e, Ct]);
  }
  const Ke = pa(se), lt = k.useRef(), et = kt(() => {
    lt.current !== void 0 && (document.body.style.WebkitUserSelect = lt.current, lt.current = void 0), wt.clear();
  });
  k.useEffect(() => et, [et]);
  const rt = (Ct) => {
    GM.clear(), nT = !0, Re(!0), ue && !at && ue(Ct);
  }, je = kt(
    /**
     * @param {React.SyntheticEvent | Event} event
     */
    (Ct) => {
      GM.start(800 + ze, () => {
        nT = !1;
      }), Re(!1), Oe && at && Oe(Ct), yt.start(ke.transitions.duration.shortest, () => {
        qe.current = !1;
      });
    }
  ), nt = (Ct) => {
    qe.current && Ct.type !== "touchstart" || (_e && _e.removeAttribute("title"), Mt.clear(), bt.clear(), oe || nT && ie ? Mt.start(nT ? ie : oe, () => {
      rt(Ct);
    }) : rt(Ct));
  }, ht = (Ct) => {
    Mt.clear(), bt.start(ze, () => {
      je(Ct);
    });
  }, {
    isFocusVisibleRef: $t,
    onBlur: Lt,
    onFocus: Jt,
    ref: qt
  } = Xf(), [, en] = k.useState(!1), Nn = (Ct) => {
    Lt(Ct), $t.current === !1 && (en(!1), ht(Ct));
  }, nn = (Ct) => {
    _e || dt(Ct.currentTarget), Jt(Ct), $t.current === !0 && (en(!0), nt(Ct));
  }, Yn = (Ct) => {
    qe.current = !0;
    const pn = Pe.props;
    pn.onTouchStart && pn.onTouchStart(Ct);
  }, Po = (Ct) => {
    Yn(Ct), bt.clear(), yt.clear(), et(), lt.current = document.body.style.WebkitUserSelect, document.body.style.WebkitUserSelect = "none", wt.start(K, () => {
      document.body.style.WebkitUserSelect = lt.current, nt(Ct);
    });
  }, Do = (Ct) => {
    Pe.props.onTouchEnd && Pe.props.onTouchEnd(Ct), et(), bt.start(Ue, () => {
      je(Ct);
    });
  };
  k.useEffect(() => {
    if (!at)
      return;
    function Ct(pn) {
      (pn.key === "Escape" || pn.key === "Esc") && je(pn);
    }
    return document.addEventListener("keydown", Ct), () => {
      document.removeEventListener("keydown", Ct);
    };
  }, [je, at]);
  const Zr = cn(Pe.ref, qt, dt, a);
  !Ee && Ee !== 0 && (at = !1);
  const Bo = k.useRef(), Ln = (Ct) => {
    const pn = Pe.props;
    pn.onMouseMove && pn.onMouseMove(Ct), Mv = {
      x: Ct.clientX,
      y: Ct.clientY
    }, Bo.current && Bo.current.update();
  }, wn = {}, qn = typeof Ee == "string";
  Y ? (wn.title = !at && qn && !Z ? Ee : null, wn["aria-describedby"] = at ? Ke : null) : (wn["aria-label"] = qn ? Ee : null, wn["aria-labelledby"] = at && !qn ? Ke : null);
  const to = y({}, wn, ae, Pe.props, {
    className: fe(ae.className, Pe.props.className),
    onTouchStart: Yn,
    ref: Zr
  }, ne ? {
    onMouseMove: Ln
  } : {});
  process.env.NODE_ENV !== "production" && (to["data-mui-internal-clone-element"] = !0, k.useEffect(() => {
    _e && !_e.getAttribute("data-mui-internal-clone-element") && console.error(["MUI: The `children` component of the Tooltip is not forwarding its props correctly.", "Please make sure that props are spread on the same element that the ref is applied to."].join(`
`));
  }, [_e]));
  const ao = {};
  X || (to.onTouchStart = Po, to.onTouchEnd = Do), Z || (to.onMouseOver = oT(nt, to.onMouseOver), to.onMouseLeave = oT(ht, to.onMouseLeave), vt || (ao.onMouseOver = nt, ao.onMouseLeave = ht)), te || (to.onFocus = oT(nn, to.onFocus), to.onBlur = oT(Nn, to.onBlur), vt || (ao.onFocus = nn, ao.onBlur = Nn)), process.env.NODE_ENV !== "production" && Pe.props.title && console.error(["MUI: You have provided a `title` prop to the child of <Tooltip />.", `Remove this title prop \`${Pe.props.title}\` or the Tooltip component.`].join(`
`));
  const Jo = k.useMemo(() => {
    var Ct;
    let pn = [{
      name: "arrow",
      enabled: !!ge,
      options: {
        element: ge,
        padding: 4
      }
    }];
    return (Ct = ce.popperOptions) != null && Ct.modifiers && (pn = pn.concat(ce.popperOptions.modifiers)), y({}, ce.popperOptions, {
      modifiers: pn
    });
  }, [ge, ce]), zo = y({}, P, {
    isRtl: pt,
    arrow: F,
    disableInteractive: vt,
    placement: me,
    PopperComponentProp: Se,
    touch: qe.current
  }), Fo = Eee(zo), Nr = (s = (u = Ze.popper) != null ? u : U.Popper) != null ? s : Oee, jo = (d = (p = (h = Ze.transition) != null ? h : U.Transition) != null ? p : Ae) != null ? d : fg, Co = (g = (b = Ze.tooltip) != null ? b : U.Tooltip) != null ? g : Pee, Ge = (x = (S = Ze.arrow) != null ? S : U.Arrow) != null ? x : Dee, Te = Lf(Nr, y({}, ce, (E = Le.popper) != null ? E : Q.popper, {
    className: fe(Fo.popper, ce == null ? void 0 : ce.className, (R = ($ = Le.popper) != null ? $ : Q.popper) == null ? void 0 : R.className)
  }), zo), it = Lf(jo, y({}, Ce, (M = Le.transition) != null ? M : Q.transition), zo), Tt = Lf(Co, y({}, (O = Le.tooltip) != null ? O : Q.tooltip, {
    className: fe(Fo.tooltip, (N = (V = Le.tooltip) != null ? V : Q.tooltip) == null ? void 0 : N.className)
  }), zo), ln = Lf(Ge, y({}, (I = Le.arrow) != null ? I : Q.arrow, {
    className: fe(Fo.arrow, (z = (B = Le.arrow) != null ? B : Q.arrow) == null ? void 0 : z.className)
  }), zo);
  return /* @__PURE__ */ st(k.Fragment, {
    children: [/* @__PURE__ */ k.cloneElement(Pe, to), /* @__PURE__ */ _(Nr, y({
      as: Se ?? Pg,
      placement: me,
      anchorEl: ne ? {
        getBoundingClientRect: () => ({
          top: Mv.y,
          left: Mv.x,
          right: Mv.x,
          bottom: Mv.y,
          width: 0,
          height: 0
        })
      } : _e,
      popperRef: Bo,
      open: _e ? at : !1,
      id: Ke,
      transition: !0
    }, ao, Te, {
      popperOptions: Jo,
      children: ({
        TransitionProps: Ct
      }) => /* @__PURE__ */ _(jo, y({
        timeout: ke.transitions.duration.shorter
      }, Ct, it, {
        children: /* @__PURE__ */ st(Co, y({}, Tt, {
          children: [Ee, F ? /* @__PURE__ */ _(Ge, y({}, ln, {
            ref: ve
          })) : null]
        }))
      }))
    }))]
  });
});
process.env.NODE_ENV !== "production" && (RA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, adds an arrow to the tooltip.
   * @default false
   */
  arrow: t.bool,
  /**
   * Tooltip reference element.
   */
  children: su.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   */
  components: t.shape({
    Arrow: t.elementType,
    Popper: t.elementType,
    Tooltip: t.elementType,
    Transition: t.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `slotProps` prop.
   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
   *
   * @default {}
   */
  componentsProps: t.shape({
    arrow: t.object,
    popper: t.object,
    tooltip: t.object,
    transition: t.object
  }),
  /**
   * Set to `true` if the `title` acts as an accessible description.
   * By default the `title` acts as an accessible label for the child.
   * @default false
   */
  describeChild: t.bool,
  /**
   * Do not respond to focus-visible events.
   * @default false
   */
  disableFocusListener: t.bool,
  /**
   * Do not respond to hover events.
   * @default false
   */
  disableHoverListener: t.bool,
  /**
   * Makes a tooltip not interactive, i.e. it will close when the user
   * hovers over the tooltip before the `leaveDelay` is expired.
   * @default false
   */
  disableInteractive: t.bool,
  /**
   * Do not respond to long press touch events.
   * @default false
   */
  disableTouchListener: t.bool,
  /**
   * The number of milliseconds to wait before showing the tooltip.
   * This prop won't impact the enter touch delay (`enterTouchDelay`).
   * @default 100
   */
  enterDelay: t.number,
  /**
   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
   * @default 0
   */
  enterNextDelay: t.number,
  /**
   * The number of milliseconds a user must touch the element before showing the tooltip.
   * @default 700
   */
  enterTouchDelay: t.number,
  /**
   * If `true`, the tooltip follow the cursor over the wrapped element.
   * @default false
   */
  followCursor: t.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: t.string,
  /**
   * The number of milliseconds to wait before hiding the tooltip.
   * This prop won't impact the leave touch delay (`leaveTouchDelay`).
   * @default 0
   */
  leaveDelay: t.number,
  /**
   * The number of milliseconds after the user stops touching an element before hiding the tooltip.
   * @default 1500
   */
  leaveTouchDelay: t.number,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: t.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: t.func,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool,
  /**
   * Tooltip placement.
   * @default 'bottom'
   */
  placement: t.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The component used for the popper.
   * @default Popper
   */
  PopperComponent: t.elementType,
  /**
   * Props applied to the [`Popper`](/material-ui/api/popper/) element.
   * @default {}
   */
  PopperProps: t.object,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: t.shape({
    arrow: t.object,
    popper: t.object,
    tooltip: t.object,
    transition: t.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: t.shape({
    arrow: t.elementType,
    popper: t.elementType,
    tooltip: t.elementType,
    transition: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Tooltip title. Zero-length titles string, undefined, null and false are never displayed.
   */
  title: t.node,
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Grow
   */
  TransitionComponent: t.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: t.object
});
const Mee = RA;
function $ee(e) {
  return We("MuiSpeedDialAction", e);
}
const Nee = Ye("MuiSpeedDialAction", ["fab", "fabClosed", "staticTooltip", "staticTooltipClosed", "staticTooltipLabel", "tooltipPlacementLeft", "tooltipPlacementRight"]), Lee = Nee, Iee = ["className", "delay", "FabProps", "icon", "id", "open", "TooltipClasses", "tooltipOpen", "tooltipPlacement", "tooltipTitle"], Aee = (e) => {
  const {
    open: n,
    tooltipPlacement: a,
    classes: s
  } = e, u = {
    fab: ["fab", !n && "fabClosed"],
    staticTooltip: ["staticTooltip", `tooltipPlacement${pe(a)}`, !n && "staticTooltipClosed"],
    staticTooltipLabel: ["staticTooltipLabel"]
  };
  return He(u, $ee, s);
}, _ee = J(hI, {
  name: "MuiSpeedDialAction",
  slot: "Fab",
  skipVariantsResolver: !1,
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.fab, !a.open && n.fabClosed];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  margin: 8,
  color: (e.vars || e).palette.text.secondary,
  backgroundColor: (e.vars || e).palette.background.paper,
  "&:hover": {
    backgroundColor: e.vars ? e.vars.palette.SpeedDialAction.fabHoverBg : gT(e.palette.background.paper, 0.15)
  },
  transition: `${e.transitions.create("transform", {
    duration: e.transitions.duration.shorter
  })}, opacity 0.8s`,
  opacity: 1
}, !n.open && {
  opacity: 0,
  transform: "scale(0)"
})), Vee = J("span", {
  name: "MuiSpeedDialAction",
  slot: "StaticTooltip",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.staticTooltip, !a.open && n.staticTooltipClosed, n[`tooltipPlacement${pe(a.tooltipPlacement)}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => ({
  position: "relative",
  display: "flex",
  alignItems: "center",
  [`& .${Lee.staticTooltipLabel}`]: y({
    transition: e.transitions.create(["transform", "opacity"], {
      duration: e.transitions.duration.shorter
    }),
    opacity: 1
  }, !n.open && {
    opacity: 0,
    transform: "scale(0.5)"
  }, n.tooltipPlacement === "left" && {
    transformOrigin: "100% 50%",
    right: "100%",
    marginRight: 8
  }, n.tooltipPlacement === "right" && {
    transformOrigin: "0% 50%",
    left: "100%",
    marginLeft: 8
  })
})), Bee = J("span", {
  name: "MuiSpeedDialAction",
  slot: "StaticTooltipLabel",
  overridesResolver: (e, n) => n.staticTooltipLabel
})(({
  theme: e
}) => y({
  position: "absolute"
}, e.typography.body1, {
  backgroundColor: (e.vars || e).palette.background.paper,
  borderRadius: (e.vars || e).shape.borderRadius,
  boxShadow: (e.vars || e).shadows[1],
  color: (e.vars || e).palette.text.secondary,
  padding: "4px 16px",
  wordBreak: "keep-all"
})), EA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiSpeedDialAction"
  }), {
    className: u,
    delay: d = 0,
    FabProps: p = {},
    icon: h,
    id: g,
    open: b,
    TooltipClasses: x,
    tooltipOpen: S = !1,
    tooltipPlacement: E = "left",
    tooltipTitle: R
  } = s, $ = le(s, Iee), M = y({}, s, {
    tooltipPlacement: E
  }), O = Aee(M), [N, V] = k.useState(S), I = () => {
    V(!1);
  }, z = () => {
    V(!0);
  }, B = {
    transitionDelay: `${d}ms`
  }, P = /* @__PURE__ */ _(_ee, y({
    size: "small",
    className: fe(O.fab, u),
    tabIndex: -1,
    role: "menuitem",
    ownerState: M
  }, p, {
    style: y({}, B, p.style),
    children: h
  }));
  return S ? /* @__PURE__ */ st(Vee, y({
    id: g,
    ref: a,
    className: O.staticTooltip,
    ownerState: M
  }, $, {
    children: [/* @__PURE__ */ _(Bee, {
      style: B,
      id: `${g}-label`,
      className: O.staticTooltipLabel,
      ownerState: M,
      children: R
    }), /* @__PURE__ */ k.cloneElement(P, {
      "aria-labelledby": `${g}-label`
    })]
  })) : (!b && N && V(!1), /* @__PURE__ */ _(Mee, y({
    id: g,
    ref: a,
    title: R,
    placement: E,
    onClose: I,
    onOpen: z,
    open: b && N,
    classes: x
  }, $, {
    children: P
  })));
});
process.env.NODE_ENV !== "production" && (EA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Adds a transition delay, to allow a series of SpeedDialActions to be animated.
   * @default 0
   */
  delay: t.number,
  /**
   * Props applied to the [`Fab`](/material-ui/api/fab/) component.
   * @default {}
   */
  FabProps: t.object,
  /**
   * The icon to display in the SpeedDial Fab.
   */
  icon: t.node,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: t.string,
  /**
   * If `true`, the component is shown.
   */
  open: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * `classes` prop applied to the [`Tooltip`](/material-ui/api/tooltip/) element.
   */
  TooltipClasses: t.object,
  /**
   * Make the tooltip always visible when the SpeedDial is open.
   * @default false
   */
  tooltipOpen: t.bool,
  /**
   * Placement of the tooltip.
   * @default 'left'
   */
  tooltipPlacement: t.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Label to display in the tooltip.
   */
  tooltipTitle: t.node
});
const ope = EA, zee = Tn(/* @__PURE__ */ _("path", {
  d: "M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
}), "Add");
function Fee(e) {
  return We("MuiSpeedDialIcon", e);
}
const jee = Ye("MuiSpeedDialIcon", ["root", "icon", "iconOpen", "iconWithOpenIconOpen", "openIcon", "openIconOpen"]), gd = jee, Uee = ["className", "icon", "open", "openIcon"], Hee = (e) => {
  const {
    classes: n,
    open: a,
    openIcon: s
  } = e;
  return He({
    root: ["root"],
    icon: ["icon", a && "iconOpen", s && a && "iconWithOpenIconOpen"],
    openIcon: ["openIcon", a && "openIconOpen"]
  }, Fee, n);
}, Wee = J("span", {
  name: "MuiSpeedDialIcon",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [{
      [`& .${gd.icon}`]: n.icon
    }, {
      [`& .${gd.icon}`]: a.open && n.iconOpen
    }, {
      [`& .${gd.icon}`]: a.open && a.openIcon && n.iconWithOpenIconOpen
    }, {
      [`& .${gd.openIcon}`]: n.openIcon
    }, {
      [`& .${gd.openIcon}`]: a.open && n.openIconOpen
    }, n.root];
  }
})(({
  theme: e,
  ownerState: n
}) => ({
  height: 24,
  [`& .${gd.icon}`]: y({
    transition: e.transitions.create(["transform", "opacity"], {
      duration: e.transitions.duration.short
    })
  }, n.open && y({
    transform: "rotate(45deg)"
  }, n.openIcon && {
    opacity: 0
  })),
  [`& .${gd.openIcon}`]: y({
    position: "absolute",
    transition: e.transitions.create(["transform", "opacity"], {
      duration: e.transitions.duration.short
    }),
    opacity: 0,
    transform: "rotate(-45deg)"
  }, n.open && {
    transform: "rotate(0deg)",
    opacity: 1
  })
})), $1 = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiSpeedDialIcon"
  }), {
    className: u,
    icon: d,
    openIcon: p
  } = s, h = le(s, Uee), g = s, b = Hee(g);
  function x(S, E) {
    return /* @__PURE__ */ k.isValidElement(S) ? /* @__PURE__ */ k.cloneElement(S, {
      className: E
    }) : S;
  }
  return /* @__PURE__ */ st(Wee, y({
    className: fe(b.root, u),
    ref: a,
    ownerState: g
  }, h, {
    children: [p ? x(p, b.openIcon) : null, d ? x(d, b.icon) : /* @__PURE__ */ _(zee, {
      className: b.icon
    })]
  }));
});
process.env.NODE_ENV !== "production" && ($1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The icon to display.
   */
  icon: t.node,
  /**
   * @ignore
   * If `true`, the component is shown.
   */
  open: t.bool,
  /**
   * The icon to display in the SpeedDial Floating Action Button when the SpeedDial is open.
   */
  openIcon: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
$1.muiName = "SpeedDialIcon";
const rpe = $1, N1 = /* @__PURE__ */ k.createContext({});
process.env.NODE_ENV !== "production" && (N1.displayName = "StepperContext");
function ape() {
  return k.useContext(N1);
}
const nm = N1, L1 = /* @__PURE__ */ k.createContext({});
process.env.NODE_ENV !== "production" && (L1.displayName = "StepContext");
function ipe() {
  return k.useContext(L1);
}
const Dg = L1;
function Yee(e) {
  return We("MuiStep", e);
}
const qee = Ye("MuiStep", ["root", "horizontal", "vertical", "alternativeLabel", "completed"]), spe = qee, Gee = ["active", "children", "className", "component", "completed", "disabled", "expanded", "index", "last"], Kee = (e) => {
  const {
    classes: n,
    orientation: a,
    alternativeLabel: s,
    completed: u
  } = e;
  return He({
    root: ["root", a, s && "alternativeLabel", u && "completed"]
  }, Yee, n);
}, Qee = J("div", {
  name: "MuiStep",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[a.orientation], a.alternativeLabel && n.alternativeLabel, a.completed && n.completed];
  }
})(({
  ownerState: e
}) => y({}, e.orientation === "horizontal" && {
  paddingLeft: 8,
  paddingRight: 8
}, e.alternativeLabel && {
  flex: 1,
  position: "relative"
})), OA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiStep"
  }), {
    active: u,
    children: d,
    className: p,
    component: h = "div",
    completed: g,
    disabled: b,
    expanded: x = !1,
    index: S,
    last: E
  } = s, R = le(s, Gee), {
    activeStep: $,
    connector: M,
    alternativeLabel: O,
    orientation: N,
    nonLinear: V
  } = k.useContext(nm);
  let [I = !1, z = !1, B = !1] = [u, g, b];
  $ === S ? I = u !== void 0 ? u : !0 : !V && $ > S ? z = g !== void 0 ? g : !0 : !V && $ < S && (B = b !== void 0 ? b : !0);
  const P = k.useMemo(() => ({
    index: S,
    last: E,
    expanded: x,
    icon: S + 1,
    active: I,
    completed: z,
    disabled: B
  }), [S, E, x, I, z, B]), F = y({}, s, {
    active: I,
    orientation: N,
    alternativeLabel: O,
    completed: z,
    disabled: B,
    expanded: x,
    component: h
  }), H = Kee(F), U = /* @__PURE__ */ st(Qee, y({
    as: h,
    className: fe(H.root, p),
    ref: a,
    ownerState: F
  }, R, {
    children: [M && O && S !== 0 ? M : null, d]
  }));
  return /* @__PURE__ */ _(Dg.Provider, {
    value: P,
    children: M && !O && S !== 0 ? /* @__PURE__ */ st(k.Fragment, {
      children: [M, U]
    }) : U
  });
});
process.env.NODE_ENV !== "production" && (OA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Sets the step as active. Is passed to child components.
   */
  active: t.bool,
  /**
   * Should be `Step` sub-components such as `StepLabel`, `StepContent`.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Mark the step as completed. Is passed to child components.
   */
  completed: t.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the step is disabled, will also disable the button if
   * `StepButton` is a child of `Step`. Is passed to child components.
   */
  disabled: t.bool,
  /**
   * Expand the step.
   * @default false
   */
  expanded: t.bool,
  /**
   * The position of the step.
   * The prop defaults to the value inherited from the parent Stepper component.
   */
  index: Ro,
  /**
   * If `true`, the Step is displayed as rendered last.
   * The prop defaults to the value inherited from the parent Stepper component.
   */
  last: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const lpe = OA, Xee = Tn(/* @__PURE__ */ _("path", {
  d: "M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24zm-2 17l-5-5 1.4-1.4 3.6 3.6 7.6-7.6L19 8l-9 9z"
}), "CheckCircle"), Zee = Tn(/* @__PURE__ */ _("path", {
  d: "M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"
}), "Warning");
function Jee(e) {
  return We("MuiStepIcon", e);
}
const ete = Ye("MuiStepIcon", ["root", "active", "completed", "error", "text"]), cw = ete;
var KM;
const tte = ["active", "className", "completed", "error", "icon"], nte = (e) => {
  const {
    classes: n,
    active: a,
    completed: s,
    error: u
  } = e;
  return He({
    root: ["root", a && "active", s && "completed", u && "error"],
    text: ["text"]
  }, Jee, n);
}, uw = J(Tw, {
  name: "MuiStepIcon",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(({
  theme: e
}) => ({
  display: "block",
  transition: e.transitions.create("color", {
    duration: e.transitions.duration.shortest
  }),
  color: (e.vars || e).palette.text.disabled,
  [`&.${cw.completed}`]: {
    color: (e.vars || e).palette.primary.main
  },
  [`&.${cw.active}`]: {
    color: (e.vars || e).palette.primary.main
  },
  [`&.${cw.error}`]: {
    color: (e.vars || e).palette.error.main
  }
})), ote = J("text", {
  name: "MuiStepIcon",
  slot: "Text",
  overridesResolver: (e, n) => n.text
})(({
  theme: e
}) => ({
  fill: (e.vars || e).palette.primary.contrastText,
  fontSize: e.typography.caption.fontSize,
  fontFamily: e.typography.fontFamily
})), PA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiStepIcon"
  }), {
    active: u = !1,
    className: d,
    completed: p = !1,
    error: h = !1,
    icon: g
  } = s, b = le(s, tte), x = y({}, s, {
    active: u,
    completed: p,
    error: h
  }), S = nte(x);
  if (typeof g == "number" || typeof g == "string") {
    const E = fe(d, S.root);
    return h ? /* @__PURE__ */ _(uw, y({
      as: Zee,
      className: E,
      ref: a,
      ownerState: x
    }, b)) : p ? /* @__PURE__ */ _(uw, y({
      as: Xee,
      className: E,
      ref: a,
      ownerState: x
    }, b)) : /* @__PURE__ */ st(uw, y({
      className: E,
      ref: a,
      ownerState: x
    }, b, {
      children: [KM || (KM = /* @__PURE__ */ _("circle", {
        cx: "12",
        cy: "12",
        r: "12"
      })), /* @__PURE__ */ _(ote, {
        className: S.text,
        x: "12",
        y: "12",
        textAnchor: "middle",
        dominantBaseline: "central",
        ownerState: x,
        children: g
      })]
    }));
  }
  return g;
});
process.env.NODE_ENV !== "production" && (PA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Whether this step is active.
   * @default false
   */
  active: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * Mark the step as completed. Is passed to child components.
   * @default false
   */
  completed: t.bool,
  /**
   * If `true`, the step is marked as failed.
   * @default false
   */
  error: t.bool,
  /**
   * The label displayed in the step icon.
   */
  icon: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const rte = PA;
function ate(e) {
  return We("MuiStepLabel", e);
}
const ite = Ye("MuiStepLabel", ["root", "horizontal", "vertical", "label", "active", "completed", "error", "disabled", "iconContainer", "alternativeLabel", "labelContainer"]), ou = ite, ste = ["children", "className", "componentsProps", "error", "icon", "optional", "slotProps", "StepIconComponent", "StepIconProps"], lte = (e) => {
  const {
    classes: n,
    orientation: a,
    active: s,
    completed: u,
    error: d,
    disabled: p,
    alternativeLabel: h
  } = e;
  return He({
    root: ["root", a, d && "error", p && "disabled", h && "alternativeLabel"],
    label: ["label", s && "active", u && "completed", d && "error", p && "disabled", h && "alternativeLabel"],
    iconContainer: ["iconContainer", s && "active", u && "completed", d && "error", p && "disabled", h && "alternativeLabel"],
    labelContainer: ["labelContainer", h && "alternativeLabel"]
  }, ate, n);
}, cte = J("span", {
  name: "MuiStepLabel",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[a.orientation]];
  }
})(({
  ownerState: e
}) => y({
  display: "flex",
  alignItems: "center",
  [`&.${ou.alternativeLabel}`]: {
    flexDirection: "column"
  },
  [`&.${ou.disabled}`]: {
    cursor: "default"
  }
}, e.orientation === "vertical" && {
  textAlign: "left",
  padding: "8px 0"
})), ute = J("span", {
  name: "MuiStepLabel",
  slot: "Label",
  overridesResolver: (e, n) => n.label
})(({
  theme: e
}) => y({}, e.typography.body2, {
  display: "block",
  transition: e.transitions.create("color", {
    duration: e.transitions.duration.shortest
  }),
  [`&.${ou.active}`]: {
    color: (e.vars || e).palette.text.primary,
    fontWeight: 500
  },
  [`&.${ou.completed}`]: {
    color: (e.vars || e).palette.text.primary,
    fontWeight: 500
  },
  [`&.${ou.alternativeLabel}`]: {
    marginTop: 16
  },
  [`&.${ou.error}`]: {
    color: (e.vars || e).palette.error.main
  }
})), dte = J("span", {
  name: "MuiStepLabel",
  slot: "IconContainer",
  overridesResolver: (e, n) => n.iconContainer
})(() => ({
  flexShrink: 0,
  // Fix IE11 issue
  display: "flex",
  paddingRight: 8,
  [`&.${ou.alternativeLabel}`]: {
    paddingRight: 0
  }
})), pte = J("span", {
  name: "MuiStepLabel",
  slot: "LabelContainer",
  overridesResolver: (e, n) => n.labelContainer
})(({
  theme: e
}) => ({
  width: "100%",
  color: (e.vars || e).palette.text.secondary,
  [`&.${ou.alternativeLabel}`]: {
    textAlign: "center"
  }
})), I1 = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s;
  const u = Ie({
    props: n,
    name: "MuiStepLabel"
  }), {
    children: d,
    className: p,
    componentsProps: h = {},
    error: g = !1,
    icon: b,
    optional: x,
    slotProps: S = {},
    StepIconComponent: E,
    StepIconProps: R
  } = u, $ = le(u, ste), {
    alternativeLabel: M,
    orientation: O
  } = k.useContext(nm), {
    active: N,
    disabled: V,
    completed: I,
    icon: z
  } = k.useContext(Dg), B = b || z;
  let P = E;
  B && !P && (P = rte);
  const F = y({}, u, {
    active: N,
    alternativeLabel: M,
    completed: I,
    disabled: V,
    error: g,
    orientation: O
  }), H = lte(F), U = (s = S.label) != null ? s : h.label;
  return /* @__PURE__ */ st(cte, y({
    className: fe(H.root, p),
    ref: a,
    ownerState: F
  }, $, {
    children: [B || P ? /* @__PURE__ */ _(dte, {
      className: H.iconContainer,
      ownerState: F,
      children: /* @__PURE__ */ _(P, y({
        completed: I,
        active: N,
        error: g,
        icon: B
      }, R))
    }) : null, /* @__PURE__ */ st(pte, {
      className: H.labelContainer,
      ownerState: F,
      children: [d ? /* @__PURE__ */ _(ute, y({
        ownerState: F
      }, U, {
        className: fe(H.label, U == null ? void 0 : U.className),
        children: d
      })) : null, x]
    })]
  }));
});
process.env.NODE_ENV !== "production" && (I1.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * In most cases will simply be a string containing a title for the label.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  componentsProps: t.shape({
    label: t.object
  }),
  /**
   * If `true`, the step is marked as failed.
   * @default false
   */
  error: t.bool,
  /**
   * Override the default label of the step icon.
   */
  icon: t.node,
  /**
   * The optional node to display.
   */
  optional: t.node,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: t.shape({
    label: t.object
  }),
  /**
   * The component to render in place of the [`StepIcon`](/material-ui/api/step-icon/).
   */
  StepIconComponent: t.elementType,
  /**
   * Props applied to the [`StepIcon`](/material-ui/api/step-icon/) element.
   */
  StepIconProps: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
I1.muiName = "StepLabel";
const fte = I1;
function mte(e) {
  return We("MuiStepButton", e);
}
const hte = Ye("MuiStepButton", ["root", "horizontal", "vertical", "touchRipple"]), QM = hte, vte = ["children", "className", "icon", "optional"], gte = (e) => {
  const {
    classes: n,
    orientation: a
  } = e;
  return He({
    root: ["root", a],
    touchRipple: ["touchRipple"]
  }, mte, n);
}, bte = J(Zo, {
  name: "MuiStepButton",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [{
      [`& .${QM.touchRipple}`]: n.touchRipple
    }, n.root, n[a.orientation]];
  }
})(({
  ownerState: e
}) => y({
  width: "100%",
  padding: "24px 16px",
  margin: "-24px -16px",
  boxSizing: "content-box"
}, e.orientation === "vertical" && {
  justifyContent: "flex-start",
  padding: "8px",
  margin: "-8px"
}, {
  [`& .${QM.touchRipple}`]: {
    color: "rgba(0, 0, 0, 0.3)"
  }
})), DA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiStepButton"
  }), {
    children: u,
    className: d,
    icon: p,
    optional: h
  } = s, g = le(s, vte), {
    disabled: b,
    active: x
  } = k.useContext(Dg), {
    orientation: S
  } = k.useContext(nm), E = y({}, s, {
    orientation: S
  }), R = gte(E), $ = {
    icon: p,
    optional: h
  }, M = Hs(u, ["StepLabel"]) ? /* @__PURE__ */ k.cloneElement(u, $) : /* @__PURE__ */ _(fte, y({}, $, {
    children: u
  }));
  return /* @__PURE__ */ _(bte, y({
    focusRipple: !0,
    disabled: b,
    TouchRippleProps: {
      className: R.touchRipple
    },
    className: fe(R.root, d),
    ref: a,
    ownerState: E,
    "aria-current": x ? "step" : void 0
  }, g, {
    children: M
  }));
});
process.env.NODE_ENV !== "production" && (DA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Can be a `StepLabel` or a node to place inside `StepLabel` as children.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The icon displayed by the step label.
   */
  icon: t.node,
  /**
   * The optional node to display.
   */
  optional: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const cpe = DA;
function yte(e) {
  return We("MuiStepConnector", e);
}
const Cte = Ye("MuiStepConnector", ["root", "horizontal", "vertical", "alternativeLabel", "active", "completed", "disabled", "line", "lineHorizontal", "lineVertical"]), upe = Cte, Tte = ["className"], xte = (e) => {
  const {
    classes: n,
    orientation: a,
    alternativeLabel: s,
    active: u,
    completed: d,
    disabled: p
  } = e, h = {
    root: ["root", a, s && "alternativeLabel", u && "active", d && "completed", p && "disabled"],
    line: ["line", `line${pe(a)}`]
  };
  return He(h, yte, n);
}, Ste = J("div", {
  name: "MuiStepConnector",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[a.orientation], a.alternativeLabel && n.alternativeLabel, a.completed && n.completed];
  }
})(({
  ownerState: e
}) => y({
  flex: "1 1 auto"
}, e.orientation === "vertical" && {
  marginLeft: 12
  // half icon
}, e.alternativeLabel && {
  position: "absolute",
  top: 8 + 4,
  left: "calc(-50% + 20px)",
  right: "calc(50% + 20px)"
})), kte = J("span", {
  name: "MuiStepConnector",
  slot: "Line",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.line, n[`line${pe(a.orientation)}`]];
  }
})(({
  ownerState: e,
  theme: n
}) => {
  const a = n.palette.mode === "light" ? n.palette.grey[400] : n.palette.grey[600];
  return y({
    display: "block",
    borderColor: n.vars ? n.vars.palette.StepConnector.border : a
  }, e.orientation === "horizontal" && {
    borderTopStyle: "solid",
    borderTopWidth: 1
  }, e.orientation === "vertical" && {
    borderLeftStyle: "solid",
    borderLeftWidth: 1,
    minHeight: 24
  });
}), MA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiStepConnector"
  }), {
    className: u
  } = s, d = le(s, Tte), {
    alternativeLabel: p,
    orientation: h = "horizontal"
  } = k.useContext(nm), {
    active: g,
    disabled: b,
    completed: x
  } = k.useContext(Dg), S = y({}, s, {
    alternativeLabel: p,
    orientation: h,
    active: g,
    completed: x,
    disabled: b
  }), E = xte(S);
  return /* @__PURE__ */ _(Ste, y({
    className: fe(E.root, u),
    ref: a,
    ownerState: S
  }, d, {
    children: /* @__PURE__ */ _(kte, {
      className: E.line,
      ownerState: S
    })
  }));
});
process.env.NODE_ENV !== "production" && (MA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const wte = MA;
function Rte(e) {
  return We("MuiStepContent", e);
}
const Ete = Ye("MuiStepContent", ["root", "last", "transition"]), dpe = Ete, Ote = ["children", "className", "TransitionComponent", "transitionDuration", "TransitionProps"], Pte = (e) => {
  const {
    classes: n,
    last: a
  } = e;
  return He({
    root: ["root", a && "last"],
    transition: ["transition"]
  }, Rte, n);
}, Dte = J("div", {
  name: "MuiStepContent",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.last && n.last];
  }
})(({
  ownerState: e,
  theme: n
}) => y({
  marginLeft: 12,
  // half icon
  paddingLeft: 8 + 12,
  // margin + half icon
  paddingRight: 8,
  borderLeft: n.vars ? `1px solid ${n.vars.palette.StepContent.border}` : `1px solid ${n.palette.mode === "light" ? n.palette.grey[400] : n.palette.grey[600]}`
}, e.last && {
  borderLeft: "none"
})), Mte = J(n1, {
  name: "MuiStepContent",
  slot: "Transition",
  overridesResolver: (e, n) => n.transition
})({}), $A = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiStepContent"
  }), {
    children: u,
    className: d,
    TransitionComponent: p = n1,
    transitionDuration: h = "auto",
    TransitionProps: g
  } = s, b = le(s, Ote), {
    orientation: x
  } = k.useContext(nm), {
    active: S,
    last: E,
    expanded: R
  } = k.useContext(Dg), $ = y({}, s, {
    last: E
  }), M = Pte($);
  process.env.NODE_ENV !== "production" && x !== "vertical" && console.error("MUI: <StepContent /> is only designed for use with the vertical stepper.");
  let O = h;
  return h === "auto" && !p.muiSupportAuto && (O = void 0), /* @__PURE__ */ _(Dte, y({
    className: fe(M.root, d),
    ref: a,
    ownerState: $
  }, b, {
    children: /* @__PURE__ */ _(Mte, y({
      as: p,
      in: S || R,
      className: M.transition,
      ownerState: $,
      timeout: O,
      unmountOnExit: !0
    }, g, {
      children: u
    }))
  }));
});
process.env.NODE_ENV !== "production" && ($A.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Collapse
   */
  TransitionComponent: t.elementType,
  /**
   * Adjust the duration of the content expand transition.
   * Passed as a prop to the transition component.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: t.oneOfType([t.oneOf(["auto"]), t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: t.object
});
const ppe = $A;
function $te(e) {
  return We("MuiStepper", e);
}
const Nte = Ye("MuiStepper", ["root", "horizontal", "vertical", "alternativeLabel"]), fpe = Nte, Lte = ["activeStep", "alternativeLabel", "children", "className", "component", "connector", "nonLinear", "orientation"], Ite = (e) => {
  const {
    orientation: n,
    alternativeLabel: a,
    classes: s
  } = e;
  return He({
    root: ["root", n, a && "alternativeLabel"]
  }, $te, s);
}, Ate = J("div", {
  name: "MuiStepper",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[a.orientation], a.alternativeLabel && n.alternativeLabel];
  }
})(({
  ownerState: e
}) => y({
  display: "flex"
}, e.orientation === "horizontal" && {
  flexDirection: "row",
  alignItems: "center"
}, e.orientation === "vertical" && {
  flexDirection: "column"
}, e.alternativeLabel && {
  alignItems: "flex-start"
})), _te = /* @__PURE__ */ _(wte, {}), NA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiStepper"
  }), {
    activeStep: u = 0,
    alternativeLabel: d = !1,
    children: p,
    className: h,
    component: g = "div",
    connector: b = _te,
    nonLinear: x = !1,
    orientation: S = "horizontal"
  } = s, E = le(s, Lte), R = y({}, s, {
    alternativeLabel: d,
    orientation: S,
    component: g
  }), $ = Ite(R), M = k.Children.toArray(p).filter(Boolean), O = M.map((V, I) => /* @__PURE__ */ k.cloneElement(V, y({
    index: I,
    last: I + 1 === M.length
  }, V.props))), N = k.useMemo(() => ({
    activeStep: u,
    alternativeLabel: d,
    connector: b,
    nonLinear: x,
    orientation: S
  }), [u, d, b, x, S]);
  return /* @__PURE__ */ _(nm.Provider, {
    value: N,
    children: /* @__PURE__ */ _(Ate, y({
      as: g,
      ownerState: R,
      className: fe($.root, h),
      ref: a
    }, E, {
      children: O
    }))
  });
});
process.env.NODE_ENV !== "production" && (NA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the active step (zero based index).
   * Set to -1 to disable all the steps.
   * @default 0
   */
  activeStep: Ro,
  /**
   * If set to 'true' and orientation is horizontal,
   * then the step label will be positioned under the icon.
   * @default false
   */
  alternativeLabel: t.bool,
  /**
   * Two or more `<Step />` components.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * An element to be placed between each step.
   * @default <StepConnector />
   */
  connector: t.element,
  /**
   * If set the `Stepper` will not assist in controlling steps for linear flow.
   * @default false
   */
  nonLinear: t.bool,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: t.oneOf(["horizontal", "vertical"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const mpe = NA, Vte = ["anchor", "classes", "className", "width", "style"], Bte = J("div", {
  shouldForwardProp: Vo
})(({
  theme: e,
  ownerState: n
}) => y({
  position: "fixed",
  top: 0,
  left: 0,
  bottom: 0,
  zIndex: e.zIndex.drawer - 1
}, n.anchor === "left" && {
  right: "auto"
}, n.anchor === "right" && {
  left: "auto",
  right: 0
}, n.anchor === "top" && {
  bottom: "auto",
  right: 0
}, n.anchor === "bottom" && {
  top: "auto",
  bottom: 0,
  right: 0
})), LA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const {
    anchor: s,
    classes: u = {},
    className: d,
    width: p,
    style: h
  } = n, g = le(n, Vte), b = n;
  return /* @__PURE__ */ _(Bte, y({
    className: fe("PrivateSwipeArea-root", u.root, u[`anchor${pe(s)}`], d),
    ref: a,
    style: y({
      [xd(s) ? "width" : "height"]: p
    }, h),
    ownerState: b
  }, g));
});
process.env.NODE_ENV !== "production" && (LA.propTypes = {
  /**
   * Side on which to attach the discovery area.
   */
  anchor: t.oneOf(["left", "top", "right", "bottom"]).isRequired,
  /**
   * @ignore
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * @ignore
   */
  style: t.object,
  /**
   * The width of the left most (or right most) area in `px` where the
   * drawer can be swiped open from.
   */
  width: t.number.isRequired
});
const zte = LA, Fte = ["BackdropProps"], jte = ["anchor", "disableBackdropTransition", "disableDiscovery", "disableSwipeToOpen", "hideBackdrop", "hysteresis", "allowSwipeInChildren", "minFlingVelocity", "ModalProps", "onClose", "onOpen", "open", "PaperProps", "SwipeAreaProps", "swipeAreaWidth", "transitionDuration", "variant"], rT = 3, dw = 20;
let Bl = null;
function pw(e, n, a) {
  return e === "right" ? a.body.offsetWidth - n[0].pageX : n[0].pageX;
}
function fw(e, n, a) {
  return e === "bottom" ? a.innerHeight - n[0].clientY : n[0].clientY;
}
function $v(e, n) {
  return e ? n.clientWidth : n.clientHeight;
}
function XM(e, n, a, s) {
  return Math.min(Math.max(a ? n - e : s + n - e, 0), s);
}
function Ute(e, n) {
  const a = [];
  for (; e && e !== n.parentElement; ) {
    const s = Qr(n).getComputedStyle(e);
    // Ignore the scroll children if the element is absolute positioned.
    s.getPropertyValue("position") === "absolute" || // Ignore the scroll children if the element has an overflowX hidden
    s.getPropertyValue("overflow-x") === "hidden" || (e.clientWidth > 0 && e.scrollWidth > e.clientWidth || e.clientHeight > 0 && e.scrollHeight > e.clientHeight) && a.push(e), e = e.parentElement;
  }
  return a;
}
function Hte({
  domTreeShapes: e,
  start: n,
  current: a,
  anchor: s
}) {
  const u = {
    scrollPosition: {
      x: "scrollLeft",
      y: "scrollTop"
    },
    scrollLength: {
      x: "scrollWidth",
      y: "scrollHeight"
    },
    clientLength: {
      x: "clientWidth",
      y: "clientHeight"
    }
  };
  return e.some((d) => {
    let p = a >= n;
    (s === "top" || s === "left") && (p = !p);
    const h = s === "left" || s === "right" ? "x" : "y", g = Math.round(d[u.scrollPosition[h]]), b = g > 0, x = g + d[u.clientLength[h]] < d[u.scrollLength[h]];
    return !!(p && x || !p && b);
  });
}
const Wte = typeof navigator < "u" && /iPad|iPhone|iPod/.test(navigator.userAgent), IA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Cg({
    name: "MuiSwipeableDrawer",
    props: n
  }), u = En(), d = {
    enter: u.transitions.duration.enteringScreen,
    exit: u.transitions.duration.leavingScreen
  }, {
    anchor: p = "left",
    disableBackdropTransition: h = !1,
    disableDiscovery: g = !1,
    disableSwipeToOpen: b = Wte,
    hideBackdrop: x,
    hysteresis: S = 0.52,
    allowSwipeInChildren: E = !1,
    minFlingVelocity: R = 450,
    ModalProps: {
      BackdropProps: $
    } = {},
    onClose: M,
    onOpen: O,
    open: N = !1,
    PaperProps: V = {},
    SwipeAreaProps: I,
    swipeAreaWidth: z = 20,
    transitionDuration: B = d,
    variant: P = "temporary"
    // Mobile first.
  } = s, F = le(s.ModalProps, Fte), H = le(s, jte), [U, Q] = k.useState(!1), Y = k.useRef({
    isSwiping: null
  }), te = k.useRef(), Z = k.useRef(), q = k.useRef(), X = cn(V.ref, q), oe = k.useRef(!1), ie = k.useRef();
  ro(() => {
    ie.current = null;
  }, [N]);
  const K = k.useCallback((Oe, ue = {}) => {
    const {
      mode: xe = null,
      changeTransition: me = !0
    } = ue, Se = Uv(u, p), ce = ["right", "bottom"].indexOf(Se) !== -1 ? 1 : -1, Le = xd(p), Ze = Le ? `translate(${ce * Oe}px, 0)` : `translate(0, ${ce * Oe}px)`, Ee = q.current.style;
    Ee.webkitTransform = Ze, Ee.transform = Ze;
    let Ae = "";
    if (xe && (Ae = u.transitions.create("all", os({
      easing: void 0,
      style: void 0,
      timeout: B
    }, {
      mode: xe
    }))), me && (Ee.webkitTransition = Ae, Ee.transition = Ae), !h && !x) {
      const Ce = Z.current.style;
      Ce.opacity = 1 - Oe / $v(Le, q.current), me && (Ce.webkitTransition = Ae, Ce.transition = Ae);
    }
  }, [p, h, x, u, B]), ne = kt((Oe) => {
    if (!oe.current)
      return;
    if (Bl = null, oe.current = !1, kT.flushSync(() => {
      Q(!1);
    }), !Y.current.isSwiping) {
      Y.current.isSwiping = null;
      return;
    }
    Y.current.isSwiping = null;
    const ue = Uv(u, p), xe = xd(p);
    let me;
    xe ? me = pw(ue, Oe.changedTouches, $n(Oe.currentTarget)) : me = fw(ue, Oe.changedTouches, Qr(Oe.currentTarget));
    const Se = xe ? Y.current.startX : Y.current.startY, ce = $v(xe, q.current), Le = XM(me, Se, N, ce), Ze = Le / ce;
    if (Math.abs(Y.current.velocity) > R && (ie.current = Math.abs((ce - Le) / Y.current.velocity) * 1e3), N) {
      Y.current.velocity > R || Ze > S ? M() : K(0, {
        mode: "exit"
      });
      return;
    }
    Y.current.velocity < -R || 1 - Ze > S ? O() : K($v(xe, q.current), {
      mode: "enter"
    });
  }), se = (Oe = !1) => {
    if (!U) {
      (Oe || !(g && E)) && kT.flushSync(() => {
        Q(!0);
      });
      const ue = xd(p);
      !N && q.current && K($v(ue, q.current) + (g ? 15 : -dw), {
        changeTransition: !1
      }), Y.current.velocity = 0, Y.current.lastTime = null, Y.current.lastTranslate = null, Y.current.paperHit = !1, oe.current = !0;
    }
  }, ze = kt((Oe) => {
    if (!q.current || !oe.current || Bl !== null && Bl !== Y.current)
      return;
    se(!0);
    const ue = Uv(u, p), xe = xd(p), me = pw(ue, Oe.touches, $n(Oe.currentTarget)), Se = fw(ue, Oe.touches, Qr(Oe.currentTarget));
    if (N && q.current.contains(Oe.target) && Bl === null) {
      const Ae = Ute(Oe.target, q.current);
      if (Hte({
        domTreeShapes: Ae,
        start: xe ? Y.current.startX : Y.current.startY,
        current: xe ? me : Se,
        anchor: p
      })) {
        Bl = !0;
        return;
      }
      Bl = Y.current;
    }
    if (Y.current.isSwiping == null) {
      const Ae = Math.abs(me - Y.current.startX), Ce = Math.abs(Se - Y.current.startY), ae = xe ? Ae > Ce && Ae > rT : Ce > Ae && Ce > rT;
      if (ae && Oe.cancelable && Oe.preventDefault(), ae === !0 || (xe ? Ce > rT : Ae > rT)) {
        if (Y.current.isSwiping = ae, !ae) {
          ne(Oe);
          return;
        }
        Y.current.startX = me, Y.current.startY = Se, !g && !N && (xe ? Y.current.startX -= dw : Y.current.startY -= dw);
      }
    }
    if (!Y.current.isSwiping)
      return;
    const ce = $v(xe, q.current);
    let Le = xe ? Y.current.startX : Y.current.startY;
    N && !Y.current.paperHit && (Le = Math.min(Le, ce));
    const Ze = XM(xe ? me : Se, Le, N, ce);
    if (N)
      if (Y.current.paperHit)
        Ze === 0 && (Y.current.startX = me, Y.current.startY = Se);
      else if (xe ? me < ce : Se < ce)
        Y.current.paperHit = !0, Y.current.startX = me, Y.current.startY = Se;
      else
        return;
    Y.current.lastTranslate === null && (Y.current.lastTranslate = Ze, Y.current.lastTime = performance.now() + 1);
    const Ee = (Ze - Y.current.lastTranslate) / (performance.now() - Y.current.lastTime) * 1e3;
    Y.current.velocity = Y.current.velocity * 0.4 + Ee * 0.6, Y.current.lastTranslate = Ze, Y.current.lastTime = performance.now(), Oe.cancelable && Oe.preventDefault(), K(Ze);
  }), Ue = kt((Oe) => {
    if (Oe.defaultPrevented || Oe.defaultMuiPrevented || N && (x || !Z.current.contains(Oe.target)) && !q.current.contains(Oe.target))
      return;
    const ue = Uv(u, p), xe = xd(p), me = pw(ue, Oe.touches, $n(Oe.currentTarget)), Se = fw(ue, Oe.touches, Qr(Oe.currentTarget));
    if (!N) {
      var ce;
      if (b || !(Oe.target === te.current || (ce = q.current) != null && ce.contains(Oe.target) && (typeof E == "function" ? E(Oe, te.current, q.current) : E)))
        return;
      if (xe) {
        if (me > z)
          return;
      } else if (Se > z)
        return;
    }
    Oe.defaultMuiPrevented = !0, Bl = null, Y.current.startX = me, Y.current.startY = Se, se();
  });
  return k.useEffect(() => {
    if (P === "temporary") {
      const Oe = $n(q.current);
      return Oe.addEventListener("touchstart", Ue), Oe.addEventListener("touchmove", ze, {
        passive: !N
      }), Oe.addEventListener("touchend", ne), () => {
        Oe.removeEventListener("touchstart", Ue), Oe.removeEventListener("touchmove", ze, {
          passive: !N
        }), Oe.removeEventListener("touchend", ne);
      };
    }
  }, [P, N, Ue, ze, ne]), k.useEffect(() => () => {
    Bl === Y.current && (Bl = null);
  }, []), k.useEffect(() => {
    N || Q(!1);
  }, [N]), /* @__PURE__ */ st(k.Fragment, {
    children: [/* @__PURE__ */ _(sG, y({
      open: P === "temporary" && U ? !0 : N,
      variant: P,
      ModalProps: y({
        BackdropProps: y({}, $, {
          ref: Z
        })
      }, P === "temporary" && {
        keepMounted: !0
      }, F),
      hideBackdrop: x,
      PaperProps: y({}, V, {
        style: y({
          pointerEvents: P === "temporary" && !N && !E ? "none" : ""
        }, V.style),
        ref: X
      }),
      anchor: p,
      transitionDuration: ie.current || B,
      onClose: M,
      ref: a
    }, H)), !b && P === "temporary" && /* @__PURE__ */ _(OT, {
      children: /* @__PURE__ */ _(zte, y({
        anchor: p,
        ref: te,
        width: z
      }, I))
    })]
  });
});
process.env.NODE_ENV !== "production" && (IA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If set to true, the swipe event will open the drawer even if the user begins the swipe on one of the drawer's children.
   * This can be useful in scenarios where the drawer is partially visible.
   * You can customize it further with a callback that determines which children the user can drag over to open the drawer
   * (for example, to ignore other elements that handle touch move events, like sliders).
   *
   * @param {TouchEvent} event The 'touchstart' event
   * @param {HTMLDivElement} swipeArea The swipe area element
   * @param {HTMLDivElement} paper The drawer's paper element
   *
   * @default false
   */
  allowSwipeInChildren: t.oneOfType([t.func, t.bool]),
  /**
   * @ignore
   */
  anchor: t.oneOf(["bottom", "left", "right", "top"]),
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Disable the backdrop transition.
   * This can improve the FPS on low-end devices.
   * @default false
   */
  disableBackdropTransition: t.bool,
  /**
   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit
   * to promote accidental discovery of the swipe gesture.
   * @default false
   */
  disableDiscovery: t.bool,
  /**
   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers
   * navigation actions. Swipe to open is disabled on iOS browsers by default.
   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)
   */
  disableSwipeToOpen: t.bool,
  /**
   * @ignore
   */
  hideBackdrop: t.bool,
  /**
   * Affects how far the drawer must be opened/closed to change its state.
   * Specified as percent (0-1) of the width of the drawer
   * @default 0.52
   */
  hysteresis: t.number,
  /**
   * Defines, from which (average) velocity on, the swipe is
   * defined as complete although hysteresis isn't reached.
   * Good threshold is between 250 - 1000 px/s
   * @default 450
   */
  minFlingVelocity: t.number,
  /**
   * @ignore
   */
  ModalProps: t.shape({
    BackdropProps: t.shape({
      component: iu
    })
  }),
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent<{}>} event The event source of the callback.
   */
  onClose: t.func.isRequired,
  /**
   * Callback fired when the component requests to be opened.
   *
   * @param {React.SyntheticEvent<{}>} event The event source of the callback.
   */
  onOpen: t.func.isRequired,
  /**
   * If `true`, the component is shown.
   * @default false
   */
  open: t.bool,
  /**
   * @ignore
   */
  PaperProps: t.shape({
    component: iu,
    style: t.object
  }),
  /**
   * The element is used to intercept the touch events on the edge.
   */
  SwipeAreaProps: t.object,
  /**
   * The width of the left most (or right most) area in `px` that
   * the drawer can be swiped open from.
   * @default 20
   */
  swipeAreaWidth: t.number,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: t.oneOfType([t.number, t.shape({
    appear: t.number,
    enter: t.number,
    exit: t.number
  })]),
  /**
   * @ignore
   */
  variant: t.oneOf(["permanent", "persistent", "temporary"])
});
const hpe = IA;
function Yte(e) {
  return We("MuiSwitch", e);
}
const qte = Ye("MuiSwitch", ["root", "edgeStart", "edgeEnd", "switchBase", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium", "checked", "disabled", "input", "thumb", "track"]), da = qte, Gte = ["className", "color", "edge", "size", "sx"], Kte = (e) => {
  const {
    classes: n,
    edge: a,
    size: s,
    color: u,
    checked: d,
    disabled: p
  } = e, h = {
    root: ["root", a && `edge${pe(a)}`, `size${pe(s)}`],
    switchBase: ["switchBase", `color${pe(u)}`, d && "checked", p && "disabled"],
    thumb: ["thumb"],
    track: ["track"],
    input: ["input"]
  }, g = He(h, Yte, n);
  return y({}, n, g);
}, Qte = J("span", {
  name: "MuiSwitch",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.edge && n[`edge${pe(a.edge)}`], n[`size${pe(a.size)}`]];
  }
})(({
  ownerState: e
}) => y({
  display: "inline-flex",
  width: 34 + 12 * 2,
  height: 14 + 12 * 2,
  overflow: "hidden",
  padding: 12,
  boxSizing: "border-box",
  position: "relative",
  flexShrink: 0,
  zIndex: 0,
  // Reset the stacking context.
  verticalAlign: "middle",
  // For correct alignment with the text.
  "@media print": {
    colorAdjust: "exact"
  }
}, e.edge === "start" && {
  marginLeft: -8
}, e.edge === "end" && {
  marginRight: -8
}, e.size === "small" && {
  width: 40,
  height: 24,
  padding: 7,
  [`& .${da.thumb}`]: {
    width: 16,
    height: 16
  },
  [`& .${da.switchBase}`]: {
    padding: 4,
    [`&.${da.checked}`]: {
      transform: "translateX(16px)"
    }
  }
})), Xte = J(m1, {
  name: "MuiSwitch",
  slot: "SwitchBase",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.switchBase, {
      [`& .${da.input}`]: n.input
    }, a.color !== "default" && n[`color${pe(a.color)}`]];
  }
})(({
  theme: e
}) => ({
  position: "absolute",
  top: 0,
  left: 0,
  zIndex: 1,
  // Render above the focus ripple.
  color: e.vars ? e.vars.palette.Switch.defaultColor : `${e.palette.mode === "light" ? e.palette.common.white : e.palette.grey[300]}`,
  transition: e.transitions.create(["left", "transform"], {
    duration: e.transitions.duration.shortest
  }),
  [`&.${da.checked}`]: {
    transform: "translateX(20px)"
  },
  [`&.${da.disabled}`]: {
    color: e.vars ? e.vars.palette.Switch.defaultDisabledColor : `${e.palette.mode === "light" ? e.palette.grey[100] : e.palette.grey[600]}`
  },
  [`&.${da.checked} + .${da.track}`]: {
    opacity: 0.5
  },
  [`&.${da.disabled} + .${da.track}`]: {
    opacity: e.vars ? e.vars.opacity.switchTrackDisabled : `${e.palette.mode === "light" ? 0.12 : 0.2}`
  },
  [`& .${da.input}`]: {
    left: "-100%",
    width: "300%"
  }
}), ({
  theme: e,
  ownerState: n
}) => y({
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette.action.active, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  }
}, n.color !== "default" && {
  [`&.${da.checked}`]: {
    color: (e.vars || e).palette[n.color].main,
    "&:hover": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette[n.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Yt(e.palette[n.color].main, e.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    [`&.${da.disabled}`]: {
      color: e.vars ? e.vars.palette.Switch[`${n.color}DisabledColor`] : `${e.palette.mode === "light" ? zT(e.palette[n.color].main, 0.62) : FT(e.palette[n.color].main, 0.55)}`
    }
  },
  [`&.${da.checked} + .${da.track}`]: {
    backgroundColor: (e.vars || e).palette[n.color].main
  }
})), Zte = J("span", {
  name: "MuiSwitch",
  slot: "Track",
  overridesResolver: (e, n) => n.track
})(({
  theme: e
}) => ({
  height: "100%",
  width: "100%",
  borderRadius: 14 / 2,
  zIndex: -1,
  transition: e.transitions.create(["opacity", "background-color"], {
    duration: e.transitions.duration.shortest
  }),
  backgroundColor: e.vars ? e.vars.palette.common.onBackground : `${e.palette.mode === "light" ? e.palette.common.black : e.palette.common.white}`,
  opacity: e.vars ? e.vars.opacity.switchTrack : `${e.palette.mode === "light" ? 0.38 : 0.3}`
})), Jte = J("span", {
  name: "MuiSwitch",
  slot: "Thumb",
  overridesResolver: (e, n) => n.thumb
})(({
  theme: e
}) => ({
  boxShadow: (e.vars || e).shadows[1],
  backgroundColor: "currentColor",
  width: 20,
  height: 20,
  borderRadius: "50%"
})), AA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiSwitch"
  }), {
    className: u,
    color: d = "primary",
    edge: p = !1,
    size: h = "medium",
    sx: g
  } = s, b = le(s, Gte), x = y({}, s, {
    color: d,
    edge: p,
    size: h
  }), S = Kte(x), E = /* @__PURE__ */ _(Jte, {
    className: S.thumb,
    ownerState: x
  });
  return /* @__PURE__ */ st(Qte, {
    className: fe(S.root, u),
    sx: g,
    ownerState: x,
    children: [/* @__PURE__ */ _(Xte, y({
      type: "checkbox",
      icon: E,
      checkedIcon: E,
      ref: a,
      ownerState: x
    }, b, {
      classes: y({}, S, {
        root: S.switchBase
      })
    })), /* @__PURE__ */ _(Zte, {
      className: S.track,
      ownerState: x
    })]
  });
});
process.env.NODE_ENV !== "production" && (AA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: t.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: t.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: t.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: t.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: t.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: t.node,
  /**
   * The id of the `input` element.
   */
  id: t.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: t.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: t.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense switch styling.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["medium", "small"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: t.any
});
const vpe = AA;
function ene(e) {
  return We("MuiTab", e);
}
const tne = Ye("MuiTab", ["root", "labelIcon", "textColorInherit", "textColorPrimary", "textColorSecondary", "selected", "disabled", "fullWidth", "wrapped", "iconWrapper"]), bd = tne, nne = ["className", "disabled", "disableFocusRipple", "fullWidth", "icon", "iconPosition", "indicator", "label", "onChange", "onClick", "onFocus", "selected", "selectionFollowsFocus", "textColor", "value", "wrapped"], one = (e) => {
  const {
    classes: n,
    textColor: a,
    fullWidth: s,
    wrapped: u,
    icon: d,
    label: p,
    selected: h,
    disabled: g
  } = e, b = {
    root: ["root", d && p && "labelIcon", `textColor${pe(a)}`, s && "fullWidth", u && "wrapped", h && "selected", g && "disabled"],
    iconWrapper: ["iconWrapper"]
  };
  return He(b, ene, n);
}, rne = J(Zo, {
  name: "MuiTab",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.label && a.icon && n.labelIcon, n[`textColor${pe(a.textColor)}`], a.fullWidth && n.fullWidth, a.wrapped && n.wrapped];
  }
})(({
  theme: e,
  ownerState: n
}) => y({}, e.typography.button, {
  maxWidth: 360,
  minWidth: 90,
  position: "relative",
  minHeight: 48,
  flexShrink: 0,
  padding: "12px 16px",
  overflow: "hidden",
  whiteSpace: "normal",
  textAlign: "center"
}, n.label && {
  flexDirection: n.iconPosition === "top" || n.iconPosition === "bottom" ? "column" : "row"
}, {
  lineHeight: 1.25
}, n.icon && n.label && {
  minHeight: 72,
  paddingTop: 9,
  paddingBottom: 9,
  [`& > .${bd.iconWrapper}`]: y({}, n.iconPosition === "top" && {
    marginBottom: 6
  }, n.iconPosition === "bottom" && {
    marginTop: 6
  }, n.iconPosition === "start" && {
    marginRight: e.spacing(1)
  }, n.iconPosition === "end" && {
    marginLeft: e.spacing(1)
  })
}, n.textColor === "inherit" && {
  color: "inherit",
  opacity: 0.6,
  // same opacity as theme.palette.text.secondary
  [`&.${bd.selected}`]: {
    opacity: 1
  },
  [`&.${bd.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  }
}, n.textColor === "primary" && {
  color: (e.vars || e).palette.text.secondary,
  [`&.${bd.selected}`]: {
    color: (e.vars || e).palette.primary.main
  },
  [`&.${bd.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  }
}, n.textColor === "secondary" && {
  color: (e.vars || e).palette.text.secondary,
  [`&.${bd.selected}`]: {
    color: (e.vars || e).palette.secondary.main
  },
  [`&.${bd.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  }
}, n.fullWidth && {
  flexShrink: 1,
  flexGrow: 1,
  flexBasis: 0,
  maxWidth: "none"
}, n.wrapped && {
  fontSize: e.typography.pxToRem(12)
})), _A = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiTab"
  }), {
    className: u,
    disabled: d = !1,
    disableFocusRipple: p = !1,
    // eslint-disable-next-line react/prop-types
    fullWidth: h,
    icon: g,
    iconPosition: b = "top",
    // eslint-disable-next-line react/prop-types
    indicator: x,
    label: S,
    onChange: E,
    onClick: R,
    onFocus: $,
    // eslint-disable-next-line react/prop-types
    selected: M,
    // eslint-disable-next-line react/prop-types
    selectionFollowsFocus: O,
    // eslint-disable-next-line react/prop-types
    textColor: N = "inherit",
    value: V,
    wrapped: I = !1
  } = s, z = le(s, nne), B = y({}, s, {
    disabled: d,
    disableFocusRipple: p,
    selected: M,
    icon: !!g,
    iconPosition: b,
    label: !!S,
    fullWidth: h,
    textColor: N,
    wrapped: I
  }), P = one(B), F = g && S && /* @__PURE__ */ k.isValidElement(g) ? /* @__PURE__ */ k.cloneElement(g, {
    className: fe(P.iconWrapper, g.props.className)
  }) : g, H = (Q) => {
    !M && E && E(Q, V), R && R(Q);
  }, U = (Q) => {
    O && !M && E && E(Q, V), $ && $(Q);
  };
  return /* @__PURE__ */ st(rne, y({
    focusRipple: !p,
    className: fe(P.root, u),
    ref: a,
    role: "tab",
    "aria-selected": M,
    disabled: d,
    onClick: H,
    onFocus: U,
    ownerState: B,
    tabIndex: M ? 0 : -1
  }, z, {
    children: [b === "top" || b === "start" ? /* @__PURE__ */ st(k.Fragment, {
      children: [F, S]
    }) : /* @__PURE__ */ st(k.Fragment, {
      children: [S, F]
    }), x]
  }));
});
process.env.NODE_ENV !== "production" && (_A.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: UT,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: t.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: t.bool,
  /**
   * The icon to display.
   */
  icon: t.oneOfType([t.element, t.string]),
  /**
   * The position of the icon relative to the label.
   * @default 'top'
   */
  iconPosition: t.oneOf(["bottom", "end", "start", "top"]),
  /**
   * The label element.
   */
  label: t.node,
  /**
   * @ignore
   */
  onChange: t.func,
  /**
   * @ignore
   */
  onClick: t.func,
  /**
   * @ignore
   */
  onFocus: t.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * You can provide your own value. Otherwise, we fallback to the child position index.
   */
  value: t.any,
  /**
   * Tab labels appear in a single row.
   * They can use a second line if needed.
   * @default false
   */
  wrapped: t.bool
});
const ZM = _A, VA = /* @__PURE__ */ k.createContext();
process.env.NODE_ENV !== "production" && (VA.displayName = "TableContext");
const BA = VA;
function ane(e) {
  return We("MuiTable", e);
}
const ine = Ye("MuiTable", ["root", "stickyHeader"]), gpe = ine, sne = ["className", "component", "padding", "size", "stickyHeader"], lne = (e) => {
  const {
    classes: n,
    stickyHeader: a
  } = e;
  return He({
    root: ["root", a && "stickyHeader"]
  }, ane, n);
}, cne = J("table", {
  name: "MuiTable",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.stickyHeader && n.stickyHeader];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  display: "table",
  width: "100%",
  borderCollapse: "collapse",
  borderSpacing: 0,
  "& caption": y({}, e.typography.body2, {
    padding: e.spacing(2),
    color: (e.vars || e).palette.text.secondary,
    textAlign: "left",
    captionSide: "bottom"
  })
}, n.stickyHeader && {
  borderCollapse: "separate"
})), JM = "table", zA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiTable"
  }), {
    className: u,
    component: d = JM,
    padding: p = "normal",
    size: h = "medium",
    stickyHeader: g = !1
  } = s, b = le(s, sne), x = y({}, s, {
    component: d,
    padding: p,
    size: h,
    stickyHeader: g
  }), S = lne(x), E = k.useMemo(() => ({
    padding: p,
    size: h,
    stickyHeader: g
  }), [p, h, g]);
  return /* @__PURE__ */ _(BA.Provider, {
    value: E,
    children: /* @__PURE__ */ _(cne, y({
      as: d,
      role: d === JM ? null : "table",
      ref: a,
      className: fe(S.root, u),
      ownerState: x
    }, b))
  });
});
process.env.NODE_ENV !== "production" && (zA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the table, normally `TableHead` and `TableBody`.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Allows TableCells to inherit padding of the Table.
   * @default 'normal'
   */
  padding: t.oneOf(["checkbox", "none", "normal"]),
  /**
   * Allows TableCells to inherit size of the Table.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["medium", "small"]), t.string]),
  /**
   * Set the header sticky.
   *
   * ⚠️ It doesn't work with IE11.
   * @default false
   */
  stickyHeader: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const bpe = zA, FA = /* @__PURE__ */ k.createContext();
process.env.NODE_ENV !== "production" && (FA.displayName = "Tablelvl2Context");
const Mg = FA;
function une(e) {
  return We("MuiTableBody", e);
}
const dne = Ye("MuiTableBody", ["root"]), ype = dne, pne = ["className", "component"], fne = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"]
  }, une, n);
}, mne = J("tbody", {
  name: "MuiTableBody",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({
  display: "table-row-group"
}), hne = {
  variant: "body"
}, e$ = "tbody", jA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiTableBody"
  }), {
    className: u,
    component: d = e$
  } = s, p = le(s, pne), h = y({}, s, {
    component: d
  }), g = fne(h);
  return /* @__PURE__ */ _(Mg.Provider, {
    value: hne,
    children: /* @__PURE__ */ _(mne, y({
      className: fe(g.root, u),
      as: d,
      ref: a,
      role: d === e$ ? null : "rowgroup",
      ownerState: h
    }, p))
  });
});
process.env.NODE_ENV !== "production" && (jA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `TableRow`.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Cpe = jA;
function vne(e) {
  return We("MuiTableCell", e);
}
const gne = Ye("MuiTableCell", ["root", "head", "body", "footer", "sizeSmall", "sizeMedium", "paddingCheckbox", "paddingNone", "alignLeft", "alignCenter", "alignRight", "alignJustify", "stickyHeader"]), bne = gne, yne = ["align", "className", "component", "padding", "scope", "size", "sortDirection", "variant"], Cne = (e) => {
  const {
    classes: n,
    variant: a,
    align: s,
    padding: u,
    size: d,
    stickyHeader: p
  } = e, h = {
    root: ["root", a, p && "stickyHeader", s !== "inherit" && `align${pe(s)}`, u !== "normal" && `padding${pe(u)}`, `size${pe(d)}`]
  };
  return He(h, vne, n);
}, Tne = J("td", {
  name: "MuiTableCell",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[a.variant], n[`size${pe(a.size)}`], a.padding !== "normal" && n[`padding${pe(a.padding)}`], a.align !== "inherit" && n[`align${pe(a.align)}`], a.stickyHeader && n.stickyHeader];
  }
})(({
  theme: e,
  ownerState: n
}) => y({}, e.typography.body2, {
  display: "table-cell",
  verticalAlign: "inherit",
  // Workaround for a rendering bug with spanned columns in Chrome 62.0.
  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.
  borderBottom: e.vars ? `1px solid ${e.vars.palette.TableCell.border}` : `1px solid
    ${e.palette.mode === "light" ? zT(Yt(e.palette.divider, 1), 0.88) : FT(Yt(e.palette.divider, 1), 0.68)}`,
  textAlign: "left",
  padding: 16
}, n.variant === "head" && {
  color: (e.vars || e).palette.text.primary,
  lineHeight: e.typography.pxToRem(24),
  fontWeight: e.typography.fontWeightMedium
}, n.variant === "body" && {
  color: (e.vars || e).palette.text.primary
}, n.variant === "footer" && {
  color: (e.vars || e).palette.text.secondary,
  lineHeight: e.typography.pxToRem(21),
  fontSize: e.typography.pxToRem(12)
}, n.size === "small" && {
  padding: "6px 16px",
  [`&.${bne.paddingCheckbox}`]: {
    width: 24,
    // prevent the checkbox column from growing
    padding: "0 12px 0 16px",
    "& > *": {
      padding: 0
    }
  }
}, n.padding === "checkbox" && {
  width: 48,
  // prevent the checkbox column from growing
  padding: "0 0 0 4px"
}, n.padding === "none" && {
  padding: 0
}, n.align === "left" && {
  textAlign: "left"
}, n.align === "center" && {
  textAlign: "center"
}, n.align === "right" && {
  textAlign: "right",
  flexDirection: "row-reverse"
}, n.align === "justify" && {
  textAlign: "justify"
}, n.stickyHeader && {
  position: "sticky",
  top: 0,
  zIndex: 2,
  backgroundColor: (e.vars || e).palette.background.default
})), UA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiTableCell"
  }), {
    align: u = "inherit",
    className: d,
    component: p,
    padding: h,
    scope: g,
    size: b,
    sortDirection: x,
    variant: S
  } = s, E = le(s, yne), R = k.useContext(BA), $ = k.useContext(Mg), M = $ && $.variant === "head";
  let O;
  p ? O = p : O = M ? "th" : "td";
  let N = g;
  O === "td" ? N = void 0 : !N && M && (N = "col");
  const V = S || $ && $.variant, I = y({}, s, {
    align: u,
    component: O,
    padding: h || (R && R.padding ? R.padding : "normal"),
    size: b || (R && R.size ? R.size : "medium"),
    sortDirection: x,
    stickyHeader: V === "head" && R && R.stickyHeader,
    variant: V
  }), z = Cne(I);
  let B = null;
  return x && (B = x === "asc" ? "ascending" : "descending"), /* @__PURE__ */ _(Tne, y({
    as: O,
    ref: a,
    className: fe(z.root, d),
    "aria-sort": B,
    scope: N,
    ownerState: I
  }, E));
});
process.env.NODE_ENV !== "production" && (UA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the table cell content.
   *
   * Monetary or generally number fields **should be right aligned** as that allows
   * you to add them up quickly in your head without having to worry about decimals.
   * @default 'inherit'
   */
  align: t.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Sets the padding applied to the cell.
   * The prop defaults to the value (`'default'`) inherited from the parent Table component.
   */
  padding: t.oneOf(["checkbox", "none", "normal"]),
  /**
   * Set scope attribute.
   */
  scope: t.string,
  /**
   * Specify the size of the cell.
   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.
   */
  size: t.oneOfType([t.oneOf(["medium", "small"]), t.string]),
  /**
   * Set aria-sort direction.
   */
  sortDirection: t.oneOf(["asc", "desc", !1]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Specify the cell type.
   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.
   */
  variant: t.oneOfType([t.oneOf(["body", "footer", "head"]), t.string])
});
const Lw = UA;
function xne(e) {
  return We("MuiTableContainer", e);
}
const Sne = Ye("MuiTableContainer", ["root"]), Tpe = Sne, kne = ["className", "component"], wne = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"]
  }, xne, n);
}, Rne = J("div", {
  name: "MuiTableContainer",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({
  width: "100%",
  overflowX: "auto"
}), HA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiTableContainer"
  }), {
    className: u,
    component: d = "div"
  } = s, p = le(s, kne), h = y({}, s, {
    component: d
  }), g = wne(h);
  return /* @__PURE__ */ _(Rne, y({
    ref: a,
    as: d,
    className: fe(g.root, u),
    ownerState: h
  }, p));
});
process.env.NODE_ENV !== "production" && (HA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `Table`.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const xpe = HA;
function Ene(e) {
  return We("MuiTableFooter", e);
}
const One = Ye("MuiTableFooter", ["root"]), Spe = One, Pne = ["className", "component"], Dne = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"]
  }, Ene, n);
}, Mne = J("tfoot", {
  name: "MuiTableFooter",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({
  display: "table-footer-group"
}), $ne = {
  variant: "footer"
}, t$ = "tfoot", WA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiTableFooter"
  }), {
    className: u,
    component: d = t$
  } = s, p = le(s, Pne), h = y({}, s, {
    component: d
  }), g = Dne(h);
  return /* @__PURE__ */ _(Mg.Provider, {
    value: $ne,
    children: /* @__PURE__ */ _(Mne, y({
      as: d,
      className: fe(g.root, u),
      ref: a,
      role: d === t$ ? null : "rowgroup",
      ownerState: h
    }, p))
  });
});
process.env.NODE_ENV !== "production" && (WA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `TableRow`.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const kpe = WA;
function Nne(e) {
  return We("MuiTableHead", e);
}
const Lne = Ye("MuiTableHead", ["root"]), wpe = Lne, Ine = ["className", "component"], Ane = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"]
  }, Nne, n);
}, _ne = J("thead", {
  name: "MuiTableHead",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({
  display: "table-header-group"
}), Vne = {
  variant: "head"
}, n$ = "thead", YA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiTableHead"
  }), {
    className: u,
    component: d = n$
  } = s, p = le(s, Ine), h = y({}, s, {
    component: d
  }), g = Ane(h);
  return /* @__PURE__ */ _(Mg.Provider, {
    value: Vne,
    children: /* @__PURE__ */ _(_ne, y({
      as: d,
      className: fe(g.root, u),
      ref: a,
      role: d === n$ ? null : "rowgroup",
      ownerState: h
    }, p))
  });
});
process.env.NODE_ENV !== "production" && (YA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `TableRow`.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Rpe = YA;
function Bne(e) {
  return We("MuiToolbar", e);
}
const zne = Ye("MuiToolbar", ["root", "gutters", "regular", "dense"]), Epe = zne, Fne = ["className", "component", "disableGutters", "variant"], jne = (e) => {
  const {
    classes: n,
    disableGutters: a,
    variant: s
  } = e;
  return He({
    root: ["root", !a && "gutters", s]
  }, Bne, n);
}, Une = J("div", {
  name: "MuiToolbar",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, !a.disableGutters && n.gutters, n[a.variant]];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  position: "relative",
  display: "flex",
  alignItems: "center"
}, !n.disableGutters && {
  paddingLeft: e.spacing(2),
  paddingRight: e.spacing(2),
  [e.breakpoints.up("sm")]: {
    paddingLeft: e.spacing(3),
    paddingRight: e.spacing(3)
  }
}, n.variant === "dense" && {
  minHeight: 48
}), ({
  theme: e,
  ownerState: n
}) => n.variant === "regular" && e.mixins.toolbar), qA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiToolbar"
  }), {
    className: u,
    component: d = "div",
    disableGutters: p = !1,
    variant: h = "regular"
  } = s, g = le(s, Fne), b = y({}, s, {
    component: d,
    disableGutters: p,
    variant: h
  }), x = jne(b);
  return /* @__PURE__ */ _(Une, y({
    as: d,
    className: fe(x.root, u),
    ref: a,
    ownerState: b
  }, g));
});
process.env.NODE_ENV !== "production" && (qA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.
   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, disables gutter padding.
   * @default false
   */
  disableGutters: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The variant to use.
   * @default 'regular'
   */
  variant: t.oneOfType([t.oneOf(["dense", "regular"]), t.string])
});
const Hne = qA, GA = Tn(/* @__PURE__ */ _("path", {
  d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
}), "KeyboardArrowLeft"), KA = Tn(/* @__PURE__ */ _("path", {
  d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
}), "KeyboardArrowRight"), Wne = ["backIconButtonProps", "count", "disabled", "getItemAriaLabel", "nextIconButtonProps", "onPageChange", "page", "rowsPerPage", "showFirstButton", "showLastButton", "slots", "slotProps"], QA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d, p, h, g, b, x;
  const {
    backIconButtonProps: S,
    count: E,
    disabled: R = !1,
    getItemAriaLabel: $,
    nextIconButtonProps: M,
    onPageChange: O,
    page: N,
    rowsPerPage: V,
    showFirstButton: I,
    showLastButton: z,
    slots: B = {},
    slotProps: P = {}
  } = n, F = le(n, Wne), H = En(), U = (Le) => {
    O(Le, 0);
  }, Q = (Le) => {
    O(Le, N - 1);
  }, Y = (Le) => {
    O(Le, N + 1);
  }, te = (Le) => {
    O(Le, Math.max(0, Math.ceil(E / V) - 1));
  }, Z = (s = B.firstButton) != null ? s : Ja, q = (u = B.lastButton) != null ? u : Ja, X = (d = B.nextButton) != null ? d : Ja, oe = (p = B.previousButton) != null ? p : Ja, ie = (h = B.firstButtonIcon) != null ? h : Mw, K = (g = B.lastButtonIcon) != null ? g : $w, ne = (b = B.nextButtonIcon) != null ? b : KA, se = (x = B.previousButtonIcon) != null ? x : GA, ze = H.direction === "rtl" ? q : Z, Ue = H.direction === "rtl" ? X : oe, Oe = H.direction === "rtl" ? oe : X, ue = H.direction === "rtl" ? Z : q, xe = H.direction === "rtl" ? P.lastButton : P.firstButton, me = H.direction === "rtl" ? P.nextButton : P.previousButton, Se = H.direction === "rtl" ? P.previousButton : P.nextButton, ce = H.direction === "rtl" ? P.firstButton : P.lastButton;
  return /* @__PURE__ */ st("div", y({
    ref: a
  }, F, {
    children: [I && /* @__PURE__ */ _(ze, y({
      onClick: U,
      disabled: R || N === 0,
      "aria-label": $("first", N),
      title: $("first", N)
    }, xe, {
      children: H.direction === "rtl" ? /* @__PURE__ */ _(K, y({}, P.lastButtonIcon)) : /* @__PURE__ */ _(ie, y({}, P.firstButtonIcon))
    })), /* @__PURE__ */ _(Ue, y({
      onClick: Q,
      disabled: R || N === 0,
      color: "inherit",
      "aria-label": $("previous", N),
      title: $("previous", N)
    }, me ?? S, {
      children: H.direction === "rtl" ? /* @__PURE__ */ _(ne, y({}, P.nextButtonIcon)) : /* @__PURE__ */ _(se, y({}, P.previousButtonIcon))
    })), /* @__PURE__ */ _(Oe, y({
      onClick: Y,
      disabled: R || (E !== -1 ? N >= Math.ceil(E / V) - 1 : !1),
      color: "inherit",
      "aria-label": $("next", N),
      title: $("next", N)
    }, Se ?? M, {
      children: H.direction === "rtl" ? /* @__PURE__ */ _(se, y({}, P.previousButtonIcon)) : /* @__PURE__ */ _(ne, y({}, P.nextButtonIcon))
    })), z && /* @__PURE__ */ _(ue, y({
      onClick: te,
      disabled: R || N >= Math.ceil(E / V) - 1,
      "aria-label": $("last", N),
      title: $("last", N)
    }, ce, {
      children: H.direction === "rtl" ? /* @__PURE__ */ _(ie, y({}, P.firstButtonIcon)) : /* @__PURE__ */ _(K, y({}, P.lastButtonIcon))
    }))]
  }));
});
process.env.NODE_ENV !== "production" && (QA.propTypes = {
  /**
   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.
   */
  backIconButtonProps: t.object,
  /**
   * The total number of rows.
   */
  count: t.number.isRequired,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   *
   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.
   * @param {number} page The page number to format.
   * @returns {string}
   */
  getItemAriaLabel: t.func.isRequired,
  /**
   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.
   */
  nextIconButtonProps: t.object,
  /**
   * Callback fired when the page is changed.
   *
   * @param {object} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onPageChange: t.func.isRequired,
  /**
   * The zero-based index of the current page.
   */
  page: t.number.isRequired,
  /**
   * The number of rows per page.
   */
  rowsPerPage: t.number.isRequired,
  /**
   * If `true`, show the first-page button.
   */
  showFirstButton: t.bool.isRequired,
  /**
   * If `true`, show the last-page button.
   */
  showLastButton: t.bool.isRequired,
  /**
   * The props used for each slot inside the TablePaginationActions.
   * @default {}
   */
  slotProps: t.shape({
    firstButton: t.object,
    firstButtonIcon: t.object,
    lastButton: t.object,
    lastButtonIcon: t.object,
    nextButton: t.object,
    nextButtonIcon: t.object,
    previousButton: t.object,
    previousButtonIcon: t.object
  }),
  /**
   * The components used for each slot inside the TablePaginationActions.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: t.shape({
    firstButton: t.elementType,
    firstButtonIcon: t.elementType,
    lastButton: t.elementType,
    lastButtonIcon: t.elementType,
    nextButton: t.elementType,
    nextButtonIcon: t.elementType,
    previousButton: t.elementType,
    previousButtonIcon: t.elementType
  })
});
const Yne = QA;
function qne(e) {
  return We("MuiTablePagination", e);
}
const Gne = Ye("MuiTablePagination", ["root", "toolbar", "spacer", "selectLabel", "selectRoot", "select", "selectIcon", "input", "menuItem", "displayedRows", "actions"]), tg = Gne;
var o$;
const Kne = ["ActionsComponent", "backIconButtonProps", "className", "colSpan", "component", "count", "disabled", "getItemAriaLabel", "labelDisplayedRows", "labelRowsPerPage", "nextIconButtonProps", "onPageChange", "onRowsPerPageChange", "page", "rowsPerPage", "rowsPerPageOptions", "SelectProps", "showFirstButton", "showLastButton", "slotProps", "slots"], Qne = J(Lw, {
  name: "MuiTablePagination",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(({
  theme: e
}) => ({
  overflow: "auto",
  color: (e.vars || e).palette.text.primary,
  fontSize: e.typography.pxToRem(14),
  // Increase the specificity to override TableCell.
  "&:last-child": {
    padding: 0
  }
})), Xne = J(Hne, {
  name: "MuiTablePagination",
  slot: "Toolbar",
  overridesResolver: (e, n) => y({
    [`& .${tg.actions}`]: n.actions
  }, n.toolbar)
})(({
  theme: e
}) => ({
  minHeight: 52,
  paddingRight: 2,
  [`${e.breakpoints.up("xs")} and (orientation: landscape)`]: {
    minHeight: 52
  },
  [e.breakpoints.up("sm")]: {
    minHeight: 52,
    paddingRight: 2
  },
  [`& .${tg.actions}`]: {
    flexShrink: 0,
    marginLeft: 20
  }
})), Zne = J("div", {
  name: "MuiTablePagination",
  slot: "Spacer",
  overridesResolver: (e, n) => n.spacer
})({
  flex: "1 1 100%"
}), Jne = J("p", {
  name: "MuiTablePagination",
  slot: "SelectLabel",
  overridesResolver: (e, n) => n.selectLabel
})(({
  theme: e
}) => y({}, e.typography.body2, {
  flexShrink: 0
})), eoe = J(bA, {
  name: "MuiTablePagination",
  slot: "Select",
  overridesResolver: (e, n) => y({
    [`& .${tg.selectIcon}`]: n.selectIcon,
    [`& .${tg.select}`]: n.select
  }, n.input, n.selectRoot)
})({
  color: "inherit",
  fontSize: "inherit",
  flexShrink: 0,
  marginRight: 32,
  marginLeft: 8,
  [`& .${tg.select}`]: {
    paddingLeft: 8,
    paddingRight: 24,
    textAlign: "right",
    textAlignLast: "right"
    // Align <select> on Chrome.
  }
}), toe = J(w1, {
  name: "MuiTablePagination",
  slot: "MenuItem",
  overridesResolver: (e, n) => n.menuItem
})({}), noe = J("p", {
  name: "MuiTablePagination",
  slot: "DisplayedRows",
  overridesResolver: (e, n) => n.displayedRows
})(({
  theme: e
}) => y({}, e.typography.body2, {
  flexShrink: 0
}));
function ooe({
  from: e,
  to: n,
  count: a
}) {
  return `${e}–${n} of ${a !== -1 ? a : `more than ${n}`}`;
}
function roe(e) {
  return `Go to ${e} page`;
}
const aoe = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"],
    toolbar: ["toolbar"],
    spacer: ["spacer"],
    selectLabel: ["selectLabel"],
    select: ["select"],
    input: ["input"],
    selectIcon: ["selectIcon"],
    menuItem: ["menuItem"],
    displayedRows: ["displayedRows"],
    actions: ["actions"]
  }, qne, n);
}, XA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s;
  const u = Ie({
    props: n,
    name: "MuiTablePagination"
  }), {
    ActionsComponent: d = Yne,
    backIconButtonProps: p,
    className: h,
    colSpan: g,
    component: b = Lw,
    count: x,
    disabled: S = !1,
    getItemAriaLabel: E = roe,
    labelDisplayedRows: R = ooe,
    labelRowsPerPage: $ = "Rows per page:",
    nextIconButtonProps: M,
    onPageChange: O,
    onRowsPerPageChange: N,
    page: V,
    rowsPerPage: I,
    rowsPerPageOptions: z = [10, 25, 50, 100],
    SelectProps: B = {},
    showFirstButton: P = !1,
    showLastButton: F = !1,
    slotProps: H = {},
    slots: U = {}
  } = u, Q = le(u, Kne), Y = u, te = aoe(Y), Z = (s = H == null ? void 0 : H.select) != null ? s : B, q = Z.native ? "option" : toe;
  let X;
  (b === Lw || b === "td") && (X = g || 1e3);
  const oe = pa(Z.id), ie = pa(Z.labelId), K = () => x === -1 ? (V + 1) * I : I === -1 ? x : Math.min(x, (V + 1) * I);
  return /* @__PURE__ */ _(Qne, y({
    colSpan: X,
    ref: a,
    as: b,
    ownerState: Y,
    className: fe(te.root, h)
  }, Q, {
    children: /* @__PURE__ */ st(Xne, {
      className: te.toolbar,
      children: [/* @__PURE__ */ _(Zne, {
        className: te.spacer
      }), z.length > 1 && /* @__PURE__ */ _(Jne, {
        className: te.selectLabel,
        id: ie,
        children: $
      }), z.length > 1 && /* @__PURE__ */ _(eoe, y({
        variant: "standard"
      }, !Z.variant && {
        input: o$ || (o$ = /* @__PURE__ */ _(tx, {}))
      }, {
        value: I,
        onChange: N,
        id: oe,
        labelId: ie
      }, Z, {
        classes: y({}, Z.classes, {
          // TODO v5 remove `classes.input`
          root: fe(te.input, te.selectRoot, (Z.classes || {}).root),
          select: fe(te.select, (Z.classes || {}).select),
          // TODO v5 remove `selectIcon`
          icon: fe(te.selectIcon, (Z.classes || {}).icon)
        }),
        disabled: S,
        children: z.map((ne) => /* @__PURE__ */ sN(q, y({}, !ts(q) && {
          ownerState: Y
        }, {
          className: te.menuItem,
          key: ne.label ? ne.label : ne,
          value: ne.value ? ne.value : ne
        }), ne.label ? ne.label : ne))
      })), /* @__PURE__ */ _(noe, {
        className: te.displayedRows,
        children: R({
          from: x === 0 ? 0 : V * I + 1,
          to: K(),
          count: x === -1 ? -1 : x,
          page: V
        })
      }), /* @__PURE__ */ _(d, {
        className: te.actions,
        backIconButtonProps: p,
        count: x,
        nextIconButtonProps: M,
        onPageChange: O,
        page: V,
        rowsPerPage: I,
        showFirstButton: P,
        showLastButton: F,
        slotProps: H.actions,
        slots: U.actions,
        getItemAriaLabel: E,
        disabled: S
      })]
    })
  }));
});
process.env.NODE_ENV !== "production" && (XA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The component used for displaying the actions.
   * Either a string to use a HTML element or a component.
   * @default TablePaginationActions
   */
  ActionsComponent: t.elementType,
  /**
   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) component.
   *
   * This prop is an alias for `slotProps.actions.previousButton` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.actions.previousButton` instead.
   */
  backIconButtonProps: t.object,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * @ignore
   */
  colSpan: t.number,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * The total number of rows.
   *
   * To enable server side pagination for an unknown number of items, provide -1.
   */
  count: Ro.isRequired,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').
   * @returns {string}
   * @default function defaultGetAriaLabel(type) {
   *   return `Go to ${type} page`;
   * }
   */
  getItemAriaLabel: t.func,
  /**
   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`
   * object.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default function defaultLabelDisplayedRows({ from, to, count }) {
   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;
   * }
   */
  labelDisplayedRows: t.func,
  /**
   * Customize the rows per page label.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   * @default 'Rows per page:'
   */
  labelRowsPerPage: t.node,
  /**
   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.
   *
   * This prop is an alias for `slotProps.actions.nextButton` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.actions.nextButton` instead.
   */
  nextIconButtonProps: t.object,
  /**
   * Callback fired when the page is changed.
   *
   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onPageChange: t.func.isRequired,
  /**
   * Callback fired when the number of rows per page is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   */
  onRowsPerPageChange: t.func,
  /**
   * The zero-based index of the current page.
   */
  page: Xo(Ro.isRequired, (e) => {
    const {
      count: n,
      page: a,
      rowsPerPage: s
    } = e;
    if (n === -1)
      return null;
    const u = Math.max(0, Math.ceil(n / s) - 1);
    return a < 0 || a > u ? new Error(`MUI: The page prop of a TablePagination is out of range (0 to ${u}, but page is ${a}).`) : null;
  }),
  /**
   * The number of rows per page.
   *
   * Set -1 to display all the rows.
   */
  rowsPerPage: Ro.isRequired,
  /**
   * Customizes the options of the rows per page select field. If less than two options are
   * available, no select field will be displayed.
   * Use -1 for the value with a custom label to show all the rows.
   * @default [10, 25, 50, 100]
   */
  rowsPerPageOptions: t.arrayOf(t.oneOfType([t.number, t.shape({
    label: t.string.isRequired,
    value: t.number.isRequired
  })]).isRequired),
  /**
   * Props applied to the rows per page [`Select`](/material-ui/api/select/) element.
   *
   * This prop is an alias for `slotProps.select` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.select` instead.
   *
   * @default {}
   */
  SelectProps: t.object,
  /**
   * If `true`, show the first-page button.
   * @default false
   */
  showFirstButton: t.bool,
  /**
   * If `true`, show the last-page button.
   * @default false
   */
  showLastButton: t.bool,
  /**
   * The props used for each slot inside the TablePagination.
   * @default {}
   */
  slotProps: t.shape({
    actions: t.shape({
      firstButton: t.object,
      firstButtonIcon: t.object,
      lastButton: t.object,
      lastButtonIcon: t.object,
      nextButton: t.object,
      nextButtonIcon: t.object,
      previousButton: t.object,
      previousButtonIcon: t.object
    }),
    select: t.object
  }),
  /**
   * The components used for each slot inside the TablePagination.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: t.shape({
    actions: t.shape({
      firstButton: t.elementType,
      firstButtonIcon: t.elementType,
      lastButton: t.elementType,
      lastButtonIcon: t.elementType,
      nextButton: t.elementType,
      nextButtonIcon: t.elementType,
      previousButton: t.elementType,
      previousButtonIcon: t.elementType
    })
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Ope = XA;
function ioe(e) {
  return We("MuiTableRow", e);
}
const soe = Ye("MuiTableRow", ["root", "selected", "hover", "head", "footer"]), r$ = soe, loe = ["className", "component", "hover", "selected"], coe = (e) => {
  const {
    classes: n,
    selected: a,
    hover: s,
    head: u,
    footer: d
  } = e;
  return He({
    root: ["root", a && "selected", s && "hover", u && "head", d && "footer"]
  }, ioe, n);
}, uoe = J("tr", {
  name: "MuiTableRow",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.head && n.head, a.footer && n.footer];
  }
})(({
  theme: e
}) => ({
  color: "inherit",
  display: "table-row",
  verticalAlign: "middle",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  [`&.${r$.hover}:hover`]: {
    backgroundColor: (e.vars || e).palette.action.hover
  },
  [`&.${r$.selected}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : Yt(e.palette.primary.main, e.palette.action.selectedOpacity),
    "&:hover": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Yt(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity)
    }
  }
})), a$ = "tr", ZA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiTableRow"
  }), {
    className: u,
    component: d = a$,
    hover: p = !1,
    selected: h = !1
  } = s, g = le(s, loe), b = k.useContext(Mg), x = y({}, s, {
    component: d,
    hover: p,
    selected: h,
    head: b && b.variant === "head",
    footer: b && b.variant === "footer"
  }), S = coe(x);
  return /* @__PURE__ */ _(uoe, y({
    as: d,
    ref: a,
    className: fe(S.root, u),
    role: d === a$ ? null : "row",
    ownerState: x
  }, g));
});
process.env.NODE_ENV !== "production" && (ZA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Should be valid `<tr>` children such as `TableCell`.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * If `true`, the table row will shade on hover.
   * @default false
   */
  hover: t.bool,
  /**
   * If `true`, the table row will have the selected shading.
   * @default false
   */
  selected: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Ppe = ZA, doe = Tn(/* @__PURE__ */ _("path", {
  d: "M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
}), "ArrowDownward");
function poe(e) {
  return We("MuiTableSortLabel", e);
}
const foe = Ye("MuiTableSortLabel", ["root", "active", "icon", "iconDirectionDesc", "iconDirectionAsc"]), mw = foe, moe = ["active", "children", "className", "direction", "hideSortIcon", "IconComponent"], hoe = (e) => {
  const {
    classes: n,
    direction: a,
    active: s
  } = e, u = {
    root: ["root", s && "active"],
    icon: ["icon", `iconDirection${pe(a)}`]
  };
  return He(u, poe, n);
}, voe = J(Zo, {
  name: "MuiTableSortLabel",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.active && n.active];
  }
})(({
  theme: e
}) => ({
  cursor: "pointer",
  display: "inline-flex",
  justifyContent: "flex-start",
  flexDirection: "inherit",
  alignItems: "center",
  "&:focus": {
    color: (e.vars || e).palette.text.secondary
  },
  "&:hover": {
    color: (e.vars || e).palette.text.secondary,
    [`& .${mw.icon}`]: {
      opacity: 0.5
    }
  },
  [`&.${mw.active}`]: {
    color: (e.vars || e).palette.text.primary,
    [`& .${mw.icon}`]: {
      opacity: 1,
      color: (e.vars || e).palette.text.secondary
    }
  }
})), goe = J("span", {
  name: "MuiTableSortLabel",
  slot: "Icon",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.icon, n[`iconDirection${pe(a.direction)}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => y({
  fontSize: 18,
  marginRight: 4,
  marginLeft: 4,
  opacity: 0,
  transition: e.transitions.create(["opacity", "transform"], {
    duration: e.transitions.duration.shorter
  }),
  userSelect: "none"
}, n.direction === "desc" && {
  transform: "rotate(0deg)"
}, n.direction === "asc" && {
  transform: "rotate(180deg)"
})), JA = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiTableSortLabel"
  }), {
    active: u = !1,
    children: d,
    className: p,
    direction: h = "asc",
    hideSortIcon: g = !1,
    IconComponent: b = doe
  } = s, x = le(s, moe), S = y({}, s, {
    active: u,
    direction: h,
    hideSortIcon: g,
    IconComponent: b
  }), E = hoe(S);
  return /* @__PURE__ */ st(voe, y({
    className: fe(E.root, p),
    component: "span",
    disableRipple: !0,
    ownerState: S,
    ref: a
  }, x, {
    children: [d, g && !u ? null : /* @__PURE__ */ _(goe, {
      as: b,
      className: fe(E.icon),
      ownerState: S
    })]
  }));
});
process.env.NODE_ENV !== "production" && (JA.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the label will have the active styling (should be true for the sorted column).
   * @default false
   */
  active: t.bool,
  /**
   * Label contents, the arrow will be appended automatically.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The current sort direction.
   * @default 'asc'
   */
  direction: t.oneOf(["asc", "desc"]),
  /**
   * Hide sort icon when active is false.
   * @default false
   */
  hideSortIcon: t.bool,
  /**
   * Sort icon to use.
   * @default ArrowDownwardIcon
   */
  IconComponent: t.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Dpe = JA;
function boe(e) {
  return (1 + Math.sin(Math.PI * e - Math.PI / 2)) / 2;
}
function yoe(e, n, a, s = {}, u = () => {
}) {
  const {
    ease: d = boe,
    duration: p = 300
    // standard
  } = s;
  let h = null;
  const g = n[e];
  let b = !1;
  const x = () => {
    b = !0;
  }, S = (E) => {
    if (b) {
      u(new Error("Animation cancelled"));
      return;
    }
    h === null && (h = E);
    const R = Math.min(1, (E - h) / p);
    if (n[e] = d(R) * (a - g) + g, R >= 1) {
      requestAnimationFrame(() => {
        u(null);
      });
      return;
    }
    requestAnimationFrame(S);
  };
  return g === a ? (u(new Error("Element already at target position")), x) : (requestAnimationFrame(S), x);
}
const Coe = ["onChange"], Toe = {
  width: 99,
  height: 99,
  position: "absolute",
  top: -9999,
  overflow: "scroll"
};
function e_(e) {
  const {
    onChange: n
  } = e, a = le(e, Coe), s = k.useRef(), u = k.useRef(null), d = () => {
    s.current = u.current.offsetHeight - u.current.clientHeight;
  };
  return ro(() => {
    const p = Qf(() => {
      const g = s.current;
      d(), g !== s.current && n(s.current);
    }), h = Qr(u.current);
    return h.addEventListener("resize", p), () => {
      p.clear(), h.removeEventListener("resize", p);
    };
  }, [n]), k.useEffect(() => {
    d(), n(s.current);
  }, [n]), /* @__PURE__ */ _("div", y({
    style: Toe,
    ref: u
  }, a));
}
process.env.NODE_ENV !== "production" && (e_.propTypes = {
  onChange: t.func.isRequired
});
function xoe(e) {
  return We("MuiTabScrollButton", e);
}
const Soe = Ye("MuiTabScrollButton", ["root", "vertical", "horizontal", "disabled"]), koe = Soe, woe = ["className", "slots", "slotProps", "direction", "orientation", "disabled"], Roe = (e) => {
  const {
    classes: n,
    orientation: a,
    disabled: s
  } = e;
  return He({
    root: ["root", a, s && "disabled"]
  }, xoe, n);
}, Eoe = J(Zo, {
  name: "MuiTabScrollButton",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, a.orientation && n[a.orientation]];
  }
})(({
  ownerState: e
}) => y({
  width: 40,
  flexShrink: 0,
  opacity: 0.8,
  [`&.${koe.disabled}`]: {
    opacity: 0
  }
}, e.orientation === "vertical" && {
  width: "100%",
  height: 40,
  "& svg": {
    transform: `rotate(${e.isRtl ? -90 : 90}deg)`
  }
})), t_ = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u;
  const d = Ie({
    props: n,
    name: "MuiTabScrollButton"
  }), {
    className: p,
    slots: h = {},
    slotProps: g = {},
    direction: b
  } = d, x = le(d, woe), E = En().direction === "rtl", R = y({
    isRtl: E
  }, d), $ = Roe(R), M = (s = h.StartScrollButtonIcon) != null ? s : GA, O = (u = h.EndScrollButtonIcon) != null ? u : KA, N = rn({
    elementType: M,
    externalSlotProps: g.startScrollButtonIcon,
    additionalProps: {
      fontSize: "small"
    },
    ownerState: R
  }), V = rn({
    elementType: O,
    externalSlotProps: g.endScrollButtonIcon,
    additionalProps: {
      fontSize: "small"
    },
    ownerState: R
  });
  return /* @__PURE__ */ _(Eoe, y({
    component: "div",
    className: fe($.root, p),
    ref: a,
    role: null,
    ownerState: R,
    tabIndex: null
  }, x, {
    children: b === "left" ? /* @__PURE__ */ _(M, y({}, N)) : /* @__PURE__ */ _(O, y({}, V))
  }));
});
process.env.NODE_ENV !== "production" && (t_.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The direction the button should indicate.
   */
  direction: t.oneOf(["left", "right"]).isRequired,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * The component orientation (layout flow direction).
   */
  orientation: t.oneOf(["horizontal", "vertical"]).isRequired,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   * @default {}
   */
  slotProps: t.shape({
    endScrollButtonIcon: t.oneOfType([t.func, t.object]),
    startScrollButtonIcon: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: t.shape({
    EndScrollButtonIcon: t.elementType,
    StartScrollButtonIcon: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Ooe = t_;
function Poe(e) {
  return We("MuiTabs", e);
}
const Doe = Ye("MuiTabs", ["root", "vertical", "flexContainer", "flexContainerVertical", "centered", "scroller", "fixed", "scrollableX", "scrollableY", "hideScrollbar", "scrollButtons", "scrollButtonsHideMobile", "indicator"]), mT = Doe, Moe = ["aria-label", "aria-labelledby", "action", "centered", "children", "className", "component", "allowScrollButtonsMobile", "indicatorColor", "onChange", "orientation", "ScrollButtonComponent", "scrollButtons", "selectionFollowsFocus", "slots", "slotProps", "TabIndicatorProps", "TabScrollButtonProps", "textColor", "value", "variant", "visibleScrollbar"], i$ = (e, n) => e === n ? e.firstChild : n && n.nextElementSibling ? n.nextElementSibling : e.firstChild, s$ = (e, n) => e === n ? e.lastChild : n && n.previousElementSibling ? n.previousElementSibling : e.lastChild, aT = (e, n, a) => {
  let s = !1, u = a(e, n);
  for (; u; ) {
    if (u === e.firstChild) {
      if (s)
        return;
      s = !0;
    }
    const d = u.disabled || u.getAttribute("aria-disabled") === "true";
    if (!u.hasAttribute("tabindex") || d)
      u = a(e, u);
    else {
      u.focus();
      return;
    }
  }
}, $oe = (e) => {
  const {
    vertical: n,
    fixed: a,
    hideScrollbar: s,
    scrollableX: u,
    scrollableY: d,
    centered: p,
    scrollButtonsHideMobile: h,
    classes: g
  } = e;
  return He({
    root: ["root", n && "vertical"],
    scroller: ["scroller", a && "fixed", s && "hideScrollbar", u && "scrollableX", d && "scrollableY"],
    flexContainer: ["flexContainer", n && "flexContainerVertical", p && "centered"],
    indicator: ["indicator"],
    scrollButtons: ["scrollButtons", h && "scrollButtonsHideMobile"],
    scrollableX: [u && "scrollableX"],
    hideScrollbar: [s && "hideScrollbar"]
  }, Poe, g);
}, Noe = J("div", {
  name: "MuiTabs",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [{
      [`& .${mT.scrollButtons}`]: n.scrollButtons
    }, {
      [`& .${mT.scrollButtons}`]: a.scrollButtonsHideMobile && n.scrollButtonsHideMobile
    }, n.root, a.vertical && n.vertical];
  }
})(({
  ownerState: e,
  theme: n
}) => y({
  overflow: "hidden",
  minHeight: 48,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  display: "flex"
}, e.vertical && {
  flexDirection: "column"
}, e.scrollButtonsHideMobile && {
  [`& .${mT.scrollButtons}`]: {
    [n.breakpoints.down("sm")]: {
      display: "none"
    }
  }
})), Loe = J("div", {
  name: "MuiTabs",
  slot: "Scroller",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.scroller, a.fixed && n.fixed, a.hideScrollbar && n.hideScrollbar, a.scrollableX && n.scrollableX, a.scrollableY && n.scrollableY];
  }
})(({
  ownerState: e
}) => y({
  position: "relative",
  display: "inline-block",
  flex: "1 1 auto",
  whiteSpace: "nowrap"
}, e.fixed && {
  overflowX: "hidden",
  width: "100%"
}, e.hideScrollbar && {
  // Hide dimensionless scrollbar on macOS
  scrollbarWidth: "none",
  // Firefox
  "&::-webkit-scrollbar": {
    display: "none"
    // Safari + Chrome
  }
}, e.scrollableX && {
  overflowX: "auto",
  overflowY: "hidden"
}, e.scrollableY && {
  overflowY: "auto",
  overflowX: "hidden"
})), Ioe = J("div", {
  name: "MuiTabs",
  slot: "FlexContainer",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.flexContainer, a.vertical && n.flexContainerVertical, a.centered && n.centered];
  }
})(({
  ownerState: e
}) => y({
  display: "flex"
}, e.vertical && {
  flexDirection: "column"
}, e.centered && {
  justifyContent: "center"
})), Aoe = J("span", {
  name: "MuiTabs",
  slot: "Indicator",
  overridesResolver: (e, n) => n.indicator
})(({
  ownerState: e,
  theme: n
}) => y({
  position: "absolute",
  height: 2,
  bottom: 0,
  width: "100%",
  transition: n.transitions.create()
}, e.indicatorColor === "primary" && {
  backgroundColor: (n.vars || n).palette.primary.main
}, e.indicatorColor === "secondary" && {
  backgroundColor: (n.vars || n).palette.secondary.main
}, e.vertical && {
  height: "100%",
  width: 2,
  right: 0
})), _oe = J(e_)({
  overflowX: "auto",
  overflowY: "hidden",
  // Hide dimensionless scrollbar on macOS
  scrollbarWidth: "none",
  // Firefox
  "&::-webkit-scrollbar": {
    display: "none"
    // Safari + Chrome
  }
}), l$ = {};
let c$ = !1;
const n_ = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiTabs"
  }), u = En(), d = u.direction === "rtl", {
    "aria-label": p,
    "aria-labelledby": h,
    action: g,
    centered: b = !1,
    children: x,
    className: S,
    component: E = "div",
    allowScrollButtonsMobile: R = !1,
    indicatorColor: $ = "primary",
    onChange: M,
    orientation: O = "horizontal",
    ScrollButtonComponent: N = Ooe,
    scrollButtons: V = "auto",
    selectionFollowsFocus: I,
    slots: z = {},
    slotProps: B = {},
    TabIndicatorProps: P = {},
    TabScrollButtonProps: F = {},
    textColor: H = "primary",
    value: U,
    variant: Q = "standard",
    visibleScrollbar: Y = !1
  } = s, te = le(s, Moe), Z = Q === "scrollable", q = O === "vertical", X = q ? "scrollTop" : "scrollLeft", oe = q ? "top" : "left", ie = q ? "bottom" : "right", K = q ? "clientHeight" : "clientWidth", ne = q ? "height" : "width", se = y({}, s, {
    component: E,
    allowScrollButtonsMobile: R,
    indicatorColor: $,
    orientation: O,
    vertical: q,
    scrollButtons: V,
    textColor: H,
    variant: Q,
    visibleScrollbar: Y,
    fixed: !Z,
    hideScrollbar: Z && !Y,
    scrollableX: Z && !q,
    scrollableY: Z && q,
    centered: b && !Z,
    scrollButtonsHideMobile: !R
  }), ze = $oe(se), Ue = rn({
    elementType: z.StartScrollButtonIcon,
    externalSlotProps: B.startScrollButtonIcon,
    ownerState: se
  }), Oe = rn({
    elementType: z.EndScrollButtonIcon,
    externalSlotProps: B.endScrollButtonIcon,
    ownerState: se
  });
  process.env.NODE_ENV !== "production" && b && Z && console.error('MUI: You can not use the `centered={true}` and `variant="scrollable"` properties at the same time on a `Tabs` component.');
  const [ue, xe] = k.useState(!1), [me, Se] = k.useState(l$), [ce, Le] = k.useState(!1), [Ze, Ee] = k.useState(!1), [Ae, Ce] = k.useState(!1), [ae, Pe] = k.useState({
    overflow: "hidden",
    scrollbarWidth: 0
  }), ke = /* @__PURE__ */ new Map(), pt = k.useRef(null), _e = k.useRef(null), dt = () => {
    const je = pt.current;
    let nt;
    if (je) {
      const $t = je.getBoundingClientRect();
      nt = {
        clientWidth: je.clientWidth,
        scrollLeft: je.scrollLeft,
        scrollTop: je.scrollTop,
        scrollLeftNormalized: WH(je, u.direction),
        scrollWidth: je.scrollWidth,
        top: $t.top,
        bottom: $t.bottom,
        left: $t.left,
        right: $t.right
      };
    }
    let ht;
    if (je && U !== !1) {
      const $t = _e.current.children;
      if ($t.length > 0) {
        const Lt = $t[ke.get(U)];
        process.env.NODE_ENV !== "production" && (Lt || console.error(["MUI: The `value` provided to the Tabs component is invalid.", `None of the Tabs' children match with "${U}".`, ke.keys ? `You can provide one of the following values: ${Array.from(ke.keys()).join(", ")}.` : null].join(`
`))), ht = Lt ? Lt.getBoundingClientRect() : null, process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "test" && !c$ && ht && ht.width === 0 && ht.height === 0 && // if the whole Tabs component is hidden, don't warn
        nt.clientWidth !== 0 && (nt = null, console.error(["MUI: The `value` provided to the Tabs component is invalid.", `The Tab with this \`value\` ("${U}") is not part of the document layout.`, "Make sure the tab item is present in the document or that it's not `display: none`."].join(`
`)), c$ = !0);
      }
    }
    return {
      tabsMeta: nt,
      tabMeta: ht
    };
  }, ge = kt(() => {
    const {
      tabsMeta: je,
      tabMeta: nt
    } = dt();
    let ht = 0, $t;
    if (q)
      $t = "top", nt && je && (ht = nt.top - je.top + je.scrollTop);
    else if ($t = d ? "right" : "left", nt && je) {
      const Jt = d ? je.scrollLeftNormalized + je.clientWidth - je.scrollWidth : je.scrollLeft;
      ht = (d ? -1 : 1) * (nt[$t] - je[$t] + Jt);
    }
    const Lt = {
      [$t]: ht,
      // May be wrong until the font is loaded.
      [ne]: nt ? nt[ne] : 0
    };
    if (isNaN(me[$t]) || isNaN(me[ne]))
      Se(Lt);
    else {
      const Jt = Math.abs(me[$t] - Lt[$t]), qt = Math.abs(me[ne] - Lt[ne]);
      (Jt >= 1 || qt >= 1) && Se(Lt);
    }
  }), ve = (je, {
    animation: nt = !0
  } = {}) => {
    nt ? yoe(X, pt.current, je, {
      duration: u.transitions.duration.standard
    }) : pt.current[X] = je;
  }, qe = (je) => {
    let nt = pt.current[X];
    q ? nt += je : (nt += je * (d ? -1 : 1), nt *= d && bN() === "reverse" ? -1 : 1), ve(nt);
  }, vt = () => {
    const je = pt.current[K];
    let nt = 0;
    const ht = Array.from(_e.current.children);
    for (let $t = 0; $t < ht.length; $t += 1) {
      const Lt = ht[$t];
      if (nt + Lt[K] > je) {
        $t === 0 && (nt = je);
        break;
      }
      nt += Lt[K];
    }
    return nt;
  }, yt = () => {
    qe(-1 * vt());
  }, Mt = () => {
    qe(vt());
  }, bt = k.useCallback((je) => {
    Pe({
      overflow: null,
      scrollbarWidth: je
    });
  }, []), wt = () => {
    const je = {};
    je.scrollbarSizeListener = Z ? /* @__PURE__ */ _(_oe, {
      onChange: bt,
      className: fe(ze.scrollableX, ze.hideScrollbar)
    }) : null;
    const ht = Z && (V === "auto" && (ce || Ze) || V === !0);
    return je.scrollButtonStart = ht ? /* @__PURE__ */ _(N, y({
      slots: {
        StartScrollButtonIcon: z.StartScrollButtonIcon
      },
      slotProps: {
        startScrollButtonIcon: Ue
      },
      orientation: O,
      direction: d ? "right" : "left",
      onClick: yt,
      disabled: !ce
    }, F, {
      className: fe(ze.scrollButtons, F.className)
    })) : null, je.scrollButtonEnd = ht ? /* @__PURE__ */ _(N, y({
      slots: {
        EndScrollButtonIcon: z.EndScrollButtonIcon
      },
      slotProps: {
        endScrollButtonIcon: Oe
      },
      orientation: O,
      direction: d ? "left" : "right",
      onClick: Mt,
      disabled: !Ze
    }, F, {
      className: fe(ze.scrollButtons, F.className)
    })) : null, je;
  }, we = kt((je) => {
    const {
      tabsMeta: nt,
      tabMeta: ht
    } = dt();
    if (!(!ht || !nt)) {
      if (ht[oe] < nt[oe]) {
        const $t = nt[X] + (ht[oe] - nt[oe]);
        ve($t, {
          animation: je
        });
      } else if (ht[ie] > nt[ie]) {
        const $t = nt[X] + (ht[ie] - nt[ie]);
        ve($t, {
          animation: je
        });
      }
    }
  }), Re = kt(() => {
    Z && V !== !1 && Ce(!Ae);
  });
  k.useEffect(() => {
    const je = Qf(() => {
      pt.current && ge();
    });
    let nt;
    const ht = (Jt) => {
      Jt.forEach((qt) => {
        qt.removedNodes.forEach((en) => {
          var Nn;
          (Nn = nt) == null || Nn.unobserve(en);
        }), qt.addedNodes.forEach((en) => {
          var Nn;
          (Nn = nt) == null || Nn.observe(en);
        });
      }), je(), Re();
    }, $t = Qr(pt.current);
    $t.addEventListener("resize", je);
    let Lt;
    return typeof ResizeObserver < "u" && (nt = new ResizeObserver(je), Array.from(_e.current.children).forEach((Jt) => {
      nt.observe(Jt);
    })), typeof MutationObserver < "u" && (Lt = new MutationObserver(ht), Lt.observe(_e.current, {
      childList: !0
    })), () => {
      var Jt, qt;
      je.clear(), $t.removeEventListener("resize", je), (Jt = Lt) == null || Jt.disconnect(), (qt = nt) == null || qt.disconnect();
    };
  }, [ge, Re]), k.useEffect(() => {
    const je = Array.from(_e.current.children), nt = je.length;
    if (typeof IntersectionObserver < "u" && nt > 0 && Z && V !== !1) {
      const ht = je[0], $t = je[nt - 1], Lt = {
        root: pt.current,
        threshold: 0.99
      }, Jt = (nn) => {
        Le(!nn[0].isIntersecting);
      }, qt = new IntersectionObserver(Jt, Lt);
      qt.observe(ht);
      const en = (nn) => {
        Ee(!nn[0].isIntersecting);
      }, Nn = new IntersectionObserver(en, Lt);
      return Nn.observe($t), () => {
        qt.disconnect(), Nn.disconnect();
      };
    }
  }, [Z, V, Ae, x == null ? void 0 : x.length]), k.useEffect(() => {
    xe(!0);
  }, []), k.useEffect(() => {
    ge();
  }), k.useEffect(() => {
    we(l$ !== me);
  }, [we, me]), k.useImperativeHandle(g, () => ({
    updateIndicator: ge,
    updateScrollButtons: Re
  }), [ge, Re]);
  const at = /* @__PURE__ */ _(Aoe, y({}, P, {
    className: fe(ze.indicator, P.className),
    ownerState: se,
    style: y({}, me, P.style)
  }));
  let Ke = 0;
  const lt = k.Children.map(x, (je) => {
    if (!/* @__PURE__ */ k.isValidElement(je))
      return null;
    process.env.NODE_ENV !== "production" && as.isFragment(je) && console.error(["MUI: The Tabs component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    const nt = je.props.value === void 0 ? Ke : je.props.value;
    ke.set(nt, Ke);
    const ht = nt === U;
    return Ke += 1, /* @__PURE__ */ k.cloneElement(je, y({
      fullWidth: Q === "fullWidth",
      indicator: ht && !ue && at,
      selected: ht,
      selectionFollowsFocus: I,
      onChange: M,
      textColor: H,
      value: nt
    }, Ke === 1 && U === !1 && !je.props.tabIndex ? {
      tabIndex: 0
    } : {}));
  }), et = (je) => {
    const nt = _e.current, ht = $n(nt).activeElement;
    if (ht.getAttribute("role") !== "tab")
      return;
    let Lt = O === "horizontal" ? "ArrowLeft" : "ArrowUp", Jt = O === "horizontal" ? "ArrowRight" : "ArrowDown";
    switch (O === "horizontal" && d && (Lt = "ArrowRight", Jt = "ArrowLeft"), je.key) {
      case Lt:
        je.preventDefault(), aT(nt, ht, s$);
        break;
      case Jt:
        je.preventDefault(), aT(nt, ht, i$);
        break;
      case "Home":
        je.preventDefault(), aT(nt, null, i$);
        break;
      case "End":
        je.preventDefault(), aT(nt, null, s$);
        break;
    }
  }, rt = wt();
  return /* @__PURE__ */ st(Noe, y({
    className: fe(ze.root, S),
    ownerState: se,
    ref: a,
    as: E
  }, te, {
    children: [rt.scrollButtonStart, rt.scrollbarSizeListener, /* @__PURE__ */ st(Loe, {
      className: ze.scroller,
      ownerState: se,
      style: {
        overflow: ae.overflow,
        [q ? `margin${d ? "Left" : "Right"}` : "marginBottom"]: Y ? void 0 : -ae.scrollbarWidth
      },
      ref: pt,
      children: [/* @__PURE__ */ _(Ioe, {
        "aria-label": p,
        "aria-labelledby": h,
        "aria-orientation": O === "vertical" ? "vertical" : null,
        className: ze.flexContainer,
        ownerState: se,
        onKeyDown: et,
        ref: _e,
        role: "tablist",
        children: lt
      }), ue && at]
    }), rt.scrollButtonEnd]
  }));
});
process.env.NODE_ENV !== "production" && (n_.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Callback fired when the component mounts.
   * This is useful when you want to trigger an action programmatically.
   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`
   *
   * @param {object} actions This object contains all possible actions
   * that can be triggered programmatically.
   */
  action: Wn,
  /**
   * If `true`, the scroll buttons aren't forced hidden on mobile.
   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.
   * @default false
   */
  allowScrollButtonsMobile: t.bool,
  /**
   * The label for the Tabs as a string.
   */
  "aria-label": t.string,
  /**
   * An id or list of ids separated by a space that label the Tabs.
   */
  "aria-labelledby": t.string,
  /**
   * If `true`, the tabs are centered.
   * This prop is intended for large views.
   * @default false
   */
  centered: t.bool,
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: t.elementType,
  /**
   * Determines the color of the indicator.
   * @default 'primary'
   */
  indicatorColor: t.oneOfType([t.oneOf(["primary", "secondary"]), t.string]),
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {any} value We default to the index of the child (number)
   */
  onChange: t.func,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: t.oneOf(["horizontal", "vertical"]),
  /**
   * The component used to render the scroll buttons.
   * @default TabScrollButton
   */
  ScrollButtonComponent: t.elementType,
  /**
   * Determine behavior of scroll buttons when tabs are set to scroll:
   *
   * - `auto` will only present them when not all the items are visible.
   * - `true` will always present them.
   * - `false` will never present them.
   *
   * By default the scroll buttons are hidden on mobile.
   * This behavior can be disabled with `allowScrollButtonsMobile`.
   * @default 'auto'
   */
  scrollButtons: t.oneOf(["auto", !1, !0]),
  /**
   * If `true` the selected tab changes on focus. Otherwise it only
   * changes on activation.
   */
  selectionFollowsFocus: t.bool,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   * @default {}
   */
  slotProps: t.shape({
    endScrollButtonIcon: t.oneOfType([t.func, t.object]),
    startScrollButtonIcon: t.oneOfType([t.func, t.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: t.shape({
    EndScrollButtonIcon: t.elementType,
    StartScrollButtonIcon: t.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Props applied to the tab indicator element.
   * @default  {}
   */
  TabIndicatorProps: t.object,
  /**
   * Props applied to the [`TabScrollButton`](/material-ui/api/tab-scroll-button/) element.
   * @default {}
   */
  TabScrollButtonProps: t.object,
  /**
   * Determines the color of the `Tab`.
   * @default 'primary'
   */
  textColor: t.oneOf(["inherit", "primary", "secondary"]),
  /**
   * The value of the currently selected `Tab`.
   * If you don't want any selected `Tab`, you can set this prop to `false`.
   */
  value: t.any,
  /**
   * Determines additional display behavior of the tabs:
   *
   *  - `scrollable` will invoke scrolling properties and allow for horizontally
   *  scrolling (or swiping) of the tab bar.
   *  - `fullWidth` will make the tabs grow to use all the available space,
   *  which should be used for small views, like on mobile.
   *  - `standard` will render the default state.
   * @default 'standard'
   */
  variant: t.oneOf(["fullWidth", "scrollable", "standard"]),
  /**
   * If `true`, the scrollbar is visible. It can be useful when displaying
   * a long vertical list of tabs.
   * @default false
   */
  visibleScrollbar: t.bool
});
const Voe = n_;
function Boe(e) {
  return We("MuiTextField", e);
}
const zoe = Ye("MuiTextField", ["root"]), Mpe = zoe, Foe = ["autoComplete", "autoFocus", "children", "className", "color", "defaultValue", "disabled", "error", "FormHelperTextProps", "fullWidth", "helperText", "id", "InputLabelProps", "inputProps", "InputProps", "inputRef", "label", "maxRows", "minRows", "multiline", "name", "onBlur", "onChange", "onFocus", "placeholder", "required", "rows", "select", "SelectProps", "type", "value", "variant"], joe = {
  standard: T1,
  filled: vI,
  outlined: aA
}, Uoe = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"]
  }, Boe, n);
}, Hoe = J(xG, {
  name: "MuiTextField",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({}), o_ = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiTextField"
  }), {
    autoComplete: u,
    autoFocus: d = !1,
    children: p,
    className: h,
    color: g = "primary",
    defaultValue: b,
    disabled: x = !1,
    error: S = !1,
    FormHelperTextProps: E,
    fullWidth: R = !1,
    helperText: $,
    id: M,
    InputLabelProps: O,
    inputProps: N,
    InputProps: V,
    inputRef: I,
    label: z,
    maxRows: B,
    minRows: P,
    multiline: F = !1,
    name: H,
    onBlur: U,
    onChange: Q,
    onFocus: Y,
    placeholder: te,
    required: Z = !1,
    rows: q,
    select: X = !1,
    SelectProps: oe,
    type: ie,
    value: K,
    variant: ne = "outlined"
  } = s, se = le(s, Foe), ze = y({}, s, {
    autoFocus: d,
    color: g,
    disabled: x,
    error: S,
    fullWidth: R,
    multiline: F,
    required: Z,
    select: X,
    variant: ne
  }), Ue = Uoe(ze);
  process.env.NODE_ENV !== "production" && X && !p && console.error("MUI: `children` must be passed when using the `TextField` component with `select`.");
  const Oe = {};
  ne === "outlined" && (O && typeof O.shrink < "u" && (Oe.notched = O.shrink), Oe.label = z), X && ((!oe || !oe.native) && (Oe.id = void 0), Oe["aria-describedby"] = void 0);
  const ue = pa(M), xe = $ && ue ? `${ue}-helper-text` : void 0, me = z && ue ? `${ue}-label` : void 0, Se = joe[ne], ce = /* @__PURE__ */ _(Se, y({
    "aria-describedby": xe,
    autoComplete: u,
    autoFocus: d,
    defaultValue: b,
    fullWidth: R,
    multiline: F,
    name: H,
    rows: q,
    maxRows: B,
    minRows: P,
    type: ie,
    value: K,
    id: ue,
    inputRef: I,
    onBlur: U,
    onChange: Q,
    onFocus: Y,
    placeholder: te,
    inputProps: N
  }, Oe, V));
  return /* @__PURE__ */ st(Hoe, y({
    className: fe(Ue.root, h),
    disabled: x,
    error: S,
    fullWidth: R,
    ref: a,
    required: Z,
    color: g,
    variant: ne,
    ownerState: ze
  }, se, {
    children: [z != null && z !== "" && /* @__PURE__ */ _(fQ, y({
      htmlFor: ue,
      id: me
    }, O, {
      children: z
    })), X ? /* @__PURE__ */ _(bA, y({
      "aria-describedby": xe,
      id: ue,
      labelId: me,
      value: K,
      input: ce
    }, oe, {
      children: p
    })) : ce, $ && /* @__PURE__ */ _(jG, y({
      id: xe
    }, E, {
      children: $
    }))]
  }));
});
process.env.NODE_ENV !== "production" && (o_.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: t.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: t.bool,
  /**
   * @ignore
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOfType([t.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: t.bool,
  /**
   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.
   */
  FormHelperTextProps: t.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * The helper text content.
   */
  helperText: t.node,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: t.string,
  /**
   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   */
  InputLabelProps: t.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: t.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](/material-ui/api/filled-input/),
   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)
   * component depending on the `variant` prop value.
   */
  InputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * The label content.
   */
  label: t.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: t.oneOf(["dense", "none", "normal"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: t.oneOfType([t.number, t.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: t.oneOfType([t.number, t.string]),
  /**
   * If `true`, a `textarea` element is rendered instead of an input.
   * @default false
   */
  multiline: t.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: t.string,
  /**
   * @ignore
   */
  onBlur: t.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: t.func,
  /**
   * @ignore
   */
  onFocus: t.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: t.string,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: t.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: t.oneOfType([t.number, t.string]),
  /**
   * Render a [`Select`](/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.
   * If this option is set you must pass the options of the select as children.
   * @default false
   */
  select: t.bool,
  /**
   * Props applied to the [`Select`](/material-ui/api/select/) element.
   */
  SelectProps: t.object,
  /**
   * The size of the component.
   */
  size: t.oneOfType([t.oneOf(["medium", "small"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */
  type: t.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: t.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: t.oneOf(["filled", "outlined", "standard"])
});
const A1 = o_;
function Woe(e) {
  return We("MuiToggleButton", e);
}
const Yoe = Ye("MuiToggleButton", ["root", "disabled", "selected", "standard", "primary", "secondary", "sizeSmall", "sizeMedium", "sizeLarge", "fullWidth"]), Af = Yoe, r_ = /* @__PURE__ */ k.createContext({});
process.env.NODE_ENV !== "production" && (r_.displayName = "ToggleButtonGroupContext");
const a_ = r_, i_ = /* @__PURE__ */ k.createContext(void 0);
process.env.NODE_ENV !== "production" && (i_.displayName = "ToggleButtonGroupButtonContext");
const s_ = i_;
function qoe(e, n) {
  return n === void 0 || e === void 0 ? !1 : Array.isArray(n) ? n.indexOf(e) >= 0 : e === n;
}
const Goe = ["value"], Koe = ["children", "className", "color", "disabled", "disableFocusRipple", "fullWidth", "onChange", "onClick", "selected", "size", "value"], Qoe = (e) => {
  const {
    classes: n,
    fullWidth: a,
    selected: s,
    disabled: u,
    size: d,
    color: p
  } = e, h = {
    root: ["root", s && "selected", u && "disabled", a && "fullWidth", `size${pe(d)}`, p]
  };
  return He(h, Woe, n);
}, Xoe = J(Zo, {
  name: "MuiToggleButton",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [n.root, n[`size${pe(a.size)}`]];
  }
})(({
  theme: e,
  ownerState: n
}) => {
  let a = n.color === "standard" ? e.palette.text.primary : e.palette[n.color].main, s;
  return e.vars && (a = n.color === "standard" ? e.vars.palette.text.primary : e.vars.palette[n.color].main, s = n.color === "standard" ? e.vars.palette.text.primaryChannel : e.vars.palette[n.color].mainChannel), y({}, e.typography.button, {
    borderRadius: (e.vars || e).shape.borderRadius,
    padding: 11,
    border: `1px solid ${(e.vars || e).palette.divider}`,
    color: (e.vars || e).palette.action.active
  }, n.fullWidth && {
    width: "100%"
  }, {
    [`&.${Af.disabled}`]: {
      color: (e.vars || e).palette.action.disabled,
      border: `1px solid ${(e.vars || e).palette.action.disabledBackground}`
    },
    "&:hover": {
      textDecoration: "none",
      // Reset on mouse devices
      backgroundColor: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : Kr(e.palette.text.primary, e.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    [`&.${Af.selected}`]: {
      color: a,
      backgroundColor: e.vars ? `rgba(${s} / ${e.vars.palette.action.selectedOpacity})` : Kr(a, e.palette.action.selectedOpacity),
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${s} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : Kr(a, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: e.vars ? `rgba(${s} / ${e.vars.palette.action.selectedOpacity})` : Kr(a, e.palette.action.selectedOpacity)
        }
      }
    }
  }, n.size === "small" && {
    padding: 7,
    fontSize: e.typography.pxToRem(13)
  }, n.size === "large" && {
    padding: 15,
    fontSize: e.typography.pxToRem(15)
  });
}), l_ = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = k.useContext(a_), {
    value: u
  } = s, d = le(s, Goe), p = k.useContext(s_), h = jT(y({}, d, {
    selected: qoe(n.value, u)
  }), n), g = Ie({
    props: h,
    name: "MuiToggleButton"
  }), {
    children: b,
    className: x,
    color: S = "standard",
    disabled: E = !1,
    disableFocusRipple: R = !1,
    fullWidth: $ = !1,
    onChange: M,
    onClick: O,
    selected: N,
    size: V = "medium",
    value: I
  } = g, z = le(g, Koe), B = y({}, g, {
    color: S,
    disabled: E,
    disableFocusRipple: R,
    fullWidth: $,
    size: V
  }), P = Qoe(B), F = (U) => {
    O && (O(U, I), U.defaultPrevented) || M && M(U, I);
  }, H = p || "";
  return /* @__PURE__ */ _(Xoe, y({
    className: fe(d.className, P.root, x, H),
    disabled: E,
    focusRipple: !R,
    ref: a,
    onClick: F,
    onChange: M,
    value: I,
    ownerState: B,
    "aria-pressed": N
  }, z, {
    children: b
  }));
});
process.env.NODE_ENV !== "production" && (l_.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the button when it is in an active state.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'standard'
   */
  color: t.oneOfType([t.oneOf(["standard", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: t.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: t.bool,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * Callback fired when the state changes.
   *
   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.
   * @param {any} value of the selected button.
   */
  onChange: t.func,
  /**
   * Callback fired when the button is clicked.
   *
   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.
   * @param {any} value of the selected button.
   */
  onClick: t.func,
  /**
   * If `true`, the button is rendered in an active state.
   */
  selected: t.bool,
  /**
   * The size of the component.
   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["small", "medium", "large"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The value to associate with the button when selected in a
   * ToggleButtonGroup.
   */
  value: t.any.isRequired
});
const $pe = l_;
function Zoe(e) {
  return We("MuiToggleButtonGroup", e);
}
const Joe = Ye("MuiToggleButtonGroup", ["root", "selected", "vertical", "disabled", "grouped", "groupedHorizontal", "groupedVertical", "fullWidth", "firstButton", "lastButton", "middleButton"]), ho = Joe, ere = ["children", "className", "color", "disabled", "exclusive", "fullWidth", "onChange", "orientation", "size", "value"], tre = (e) => {
  const {
    classes: n,
    orientation: a,
    fullWidth: s,
    disabled: u
  } = e, d = {
    root: ["root", a === "vertical" && "vertical", s && "fullWidth"],
    grouped: ["grouped", `grouped${pe(a)}`, u && "disabled"],
    firstButton: ["firstButton"],
    lastButton: ["lastButton"],
    middleButton: ["middleButton"]
  };
  return He(d, Zoe, n);
}, nre = J("div", {
  name: "MuiToggleButtonGroup",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: a
    } = e;
    return [{
      [`& .${ho.grouped}`]: n.grouped
    }, {
      [`& .${ho.grouped}`]: n[`grouped${pe(a.orientation)}`]
    }, {
      [`& .${ho.firstButton}`]: n.firstButton
    }, {
      [`& .${ho.lastButton}`]: n.lastButton
    }, {
      [`& .${ho.middleButton}`]: n.middleButton
    }, n.root, a.orientation === "vertical" && n.vertical, a.fullWidth && n.fullWidth];
  }
})(({
  ownerState: e,
  theme: n
}) => y({
  display: "inline-flex",
  borderRadius: (n.vars || n).shape.borderRadius
}, e.orientation === "vertical" && {
  flexDirection: "column"
}, e.fullWidth && {
  width: "100%"
}, {
  [`& .${ho.grouped}`]: y({}, e.orientation === "horizontal" ? {
    [`&.${ho.selected} + .${ho.grouped}.${ho.selected}`]: {
      borderLeft: 0,
      marginLeft: 0
    }
  } : {
    [`&.${ho.selected} + .${ho.grouped}.${ho.selected}`]: {
      borderTop: 0,
      marginTop: 0
    }
  })
}, e.orientation === "horizontal" ? {
  [`& .${ho.firstButton},& .${ho.middleButton}`]: {
    borderTopRightRadius: 0,
    borderBottomRightRadius: 0
  },
  [`& .${ho.lastButton},& .${ho.middleButton}`]: {
    marginLeft: -1,
    borderLeft: "1px solid transparent",
    borderTopLeftRadius: 0,
    borderBottomLeftRadius: 0
  }
} : {
  [`& .${ho.firstButton},& .${ho.middleButton}`]: {
    borderBottomLeftRadius: 0,
    borderBottomRightRadius: 0
  },
  [`& .${ho.lastButton},& .${ho.middleButton}`]: {
    marginTop: -1,
    borderTop: "1px solid transparent",
    borderTopLeftRadius: 0,
    borderTopRightRadius: 0
  }
}, e.orientation === "horizontal" ? {
  [`& .${ho.lastButton}.${Af.disabled},& .${ho.middleButton}.${Af.disabled}`]: {
    borderLeft: "1px solid transparent"
  }
} : {
  [`& .${ho.lastButton}.${Af.disabled},& .${ho.middleButton}.${Af.disabled}`]: {
    borderTop: "1px solid transparent"
  }
})), c_ = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiToggleButtonGroup"
  }), {
    children: u,
    className: d,
    color: p = "standard",
    disabled: h = !1,
    exclusive: g = !1,
    fullWidth: b = !1,
    onChange: x,
    orientation: S = "horizontal",
    size: E = "medium",
    value: R
  } = s, $ = le(s, ere), M = y({}, s, {
    disabled: h,
    fullWidth: b,
    orientation: S,
    size: E
  }), O = tre(M), N = k.useCallback((F, H) => {
    if (!x)
      return;
    const U = R && R.indexOf(H);
    let Q;
    R && U >= 0 ? (Q = R.slice(), Q.splice(U, 1)) : Q = R ? R.concat(H) : [H], x(F, Q);
  }, [x, R]), V = k.useCallback((F, H) => {
    x && x(F, R === H ? null : H);
  }, [x, R]), I = k.useMemo(() => ({
    className: O.grouped,
    onChange: g ? V : N,
    value: R,
    size: E,
    fullWidth: b,
    color: p,
    disabled: h
  }), [O.grouped, g, V, N, R, E, b, p, h]), z = yN(u), B = z.length, P = (F) => {
    const H = F === 0, U = F === B - 1;
    return H && U ? "" : H ? O.firstButton : U ? O.lastButton : O.middleButton;
  };
  return /* @__PURE__ */ _(nre, y({
    role: "group",
    className: fe(O.root, d),
    ref: a,
    ownerState: M
  }, $, {
    children: /* @__PURE__ */ _(a_.Provider, {
      value: I,
      children: z.map((F, H) => (process.env.NODE_ENV !== "production" && as.isFragment(F) && console.error(["MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), /* @__PURE__ */ _(s_.Provider, {
        value: P(H),
        children: F
      }, H)))
    })
  }));
});
process.env.NODE_ENV !== "production" && (c_.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * @ignore
   */
  className: t.string,
  /**
   * The color of the button when it is selected.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'standard'
   */
  color: t.oneOfType([t.oneOf(["standard", "primary", "secondary", "error", "info", "success", "warning"]), t.string]),
  /**
   * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, only allow one of the child ToggleButton values to be selected.
   * @default false
   */
  exclusive: t.bool,
  /**
   * If `true`, the button group will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.
   * @param {any} value of the selected buttons. When `exclusive` is true
   * this is a single value; when false an array of selected values. If no value
   * is selected and `exclusive` is true the value is null; when false an empty array.
   */
  onChange: t.func,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: t.oneOf(["horizontal", "vertical"]),
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: t.oneOfType([t.oneOf(["small", "medium", "large"]), t.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The currently selected value within the group or an array of selected
   * values when `exclusive` is false.
   *
   * The value must have reference equality with the option in order to be selected.
   */
  value: t.any
});
const Npe = c_, ore = ["getTrigger", "target"];
function rre(e, n) {
  const {
    disableHysteresis: a = !1,
    threshold: s = 100,
    target: u
  } = n, d = e.current;
  return u && (e.current = u.pageYOffset !== void 0 ? u.pageYOffset : u.scrollTop), !a && d !== void 0 && e.current < d ? !1 : e.current > s;
}
const are = typeof window < "u" ? window : null;
function Lpe(e = {}) {
  const {
    getTrigger: n = rre,
    target: a = are
  } = e, s = le(e, ore), u = k.useRef(), [d, p] = k.useState(() => n(u, s));
  return k.useEffect(() => {
    const h = () => {
      p(n(u, y({
        target: a
      }, s)));
    };
    return h(), a.addEventListener("scroll", h, {
      passive: !0
    }), () => {
      a.removeEventListener("scroll", h, {
        passive: !0
      });
    };
  }, [a, n, JSON.stringify(s)]), d;
}
const ire = ["localeText"], mg = /* @__PURE__ */ k.createContext(null);
process.env.NODE_ENV !== "production" && (mg.displayName = "MuiPickersAdapterContext");
const $g = function(n) {
  var a;
  const {
    localeText: s
  } = n, u = le(n, ire), {
    utils: d,
    localeText: p
  } = (a = k.useContext(mg)) != null ? a : {
    utils: void 0,
    localeText: void 0
  }, h = Ie({
    // We don't want to pass the `localeText` prop to the theme, that way it will always return the theme value,
    // We will then merge this theme value with our value manually
    props: u,
    name: "MuiLocalizationProvider"
  }), {
    children: g,
    dateAdapter: b,
    dateFormats: x,
    dateLibInstance: S,
    adapterLocale: E,
    localeText: R
  } = h, $ = k.useMemo(() => y({}, R, p, s), [R, p, s]), M = k.useMemo(() => {
    if (!b)
      return d || null;
    const V = new b({
      locale: E,
      formats: x,
      instance: S
    });
    if (!V.isMUIAdapter)
      throw new Error(["MUI: The date adapter should be imported from `@mui/x-date-pickers` or `@mui/x-date-pickers-pro`, not from `@date-io`", "For example, `import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'` instead of `import AdapterDayjs from '@date-io/dayjs'`", "More information on the installation documentation: https://mui.com/x/react-date-pickers/getting-started/#installation"].join(`
`));
    return V;
  }, [b, E, x, S, d]), O = k.useMemo(() => M ? {
    minDate: M.date("1900-01-01T00:00:00.000"),
    maxDate: M.date("2099-12-31T00:00:00.000")
  } : null, [M]), N = k.useMemo(() => ({
    utils: M,
    defaultDates: O,
    localeText: $
  }), [O, M, $]);
  return /* @__PURE__ */ _(mg.Provider, {
    value: N,
    children: g
  });
};
process.env.NODE_ENV !== "production" && ($g.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Locale for the date library you are using
   */
  adapterLocale: t.any,
  children: t.node,
  /**
   * Date library adapter class function.
   * @see See the localization provider {@link https://mui.com/x/react-date-pickers/getting-started/#setup-your-date-library-adapter date adapter setup section} for more details.
   */
  dateAdapter: t.func,
  /**
   * Formats that are used for any child pickers
   */
  dateFormats: t.shape({
    dayOfMonth: t.string,
    fullDate: t.string,
    fullDateTime: t.string,
    fullDateTime12h: t.string,
    fullDateTime24h: t.string,
    fullDateWithWeekday: t.string,
    fullTime: t.string,
    fullTime12h: t.string,
    fullTime24h: t.string,
    hours12h: t.string,
    hours24h: t.string,
    keyboardDate: t.string,
    keyboardDateTime: t.string,
    keyboardDateTime12h: t.string,
    keyboardDateTime24h: t.string,
    meridiem: t.string,
    minutes: t.string,
    month: t.string,
    monthAndDate: t.string,
    monthAndYear: t.string,
    monthShort: t.string,
    normalDate: t.string,
    normalDateWithWeekday: t.string,
    seconds: t.string,
    shortDate: t.string,
    weekday: t.string,
    weekdayShort: t.string,
    year: t.string
  }),
  /**
   * Date library instance you are using, if it has some global overrides
   * ```jsx
   * dateLibInstance={momentTimeZone}
   * ```
   */
  dateLibInstance: t.any,
  /**
   * Locale for components texts
   */
  localeText: t.object
});
const kn = (e) => ({
  components: {
    MuiLocalizationProvider: {
      defaultProps: {
        localeText: y({}, e)
      }
    }
  }
}), u_ = {
  // Calendar navigation
  previousMonth: "Previous month",
  nextMonth: "Next month",
  // View navigation
  openPreviousView: "open previous view",
  openNextView: "open next view",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "year view is open, switch to calendar view" : "calendar view is open, switch to year view",
  // DateRange placeholders
  start: "Start",
  end: "End",
  // Action bar
  cancelButtonLabel: "Cancel",
  clearButtonLabel: "Clear",
  okButtonLabel: "OK",
  todayButtonLabel: "Today",
  // Toolbar titles
  datePickerToolbarTitle: "Select date",
  dateTimePickerToolbarTitle: "Select date & time",
  timePickerToolbarTitle: "Select time",
  dateRangePickerToolbarTitle: "Select date range",
  // Clock labels
  clockLabelText: (e, n, a) => `Select ${e}. ${n === null ? "No time selected" : `Selected time is ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} hours`,
  minutesClockNumberText: (e) => `${e} minutes`,
  secondsClockNumberText: (e) => `${e} seconds`,
  // Digital clock labels
  selectViewText: (e) => `Select ${e}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Week number",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Week ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Choose date, selected date is ${n.format(e, "fullDate")}` : "Choose date",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Choose time, selected time is ${n.format(e, "fullTime")}` : "Choose time",
  fieldClearLabel: "Clear value",
  // Table labels
  timeTableLabel: "pick time",
  dateTableLabel: "pick date",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Y".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, d_ = u_, sre = kn(u_), Md = () => {
  const e = k.useContext(mg);
  if (e === null)
    throw new Error(["MUI: Can not find the date and time pickers localization context.", "It looks like you forgot to wrap your component in LocalizationProvider.", "This can also happen if you are bundling multiple versions of the `@mui/x-date-pickers` package"].join(`
`));
  if (e.utils === null)
    throw new Error(["MUI: Can not find the date and time pickers adapter from its localization context.", "It looks like you forgot to pass a `dateAdapter` to your LocalizationProvider."].join(`
`));
  const n = k.useMemo(() => y({}, d_, e.localeText), [e.localeText]);
  return k.useMemo(() => y({}, e, {
    localeText: n
  }), [e, n]);
}, dn = () => Md().utils, $d = () => Md().defaultDates, pr = () => Md().localeText, Nd = (e) => {
  const n = dn(), a = k.useRef();
  return a.current === void 0 && (a.current = n.dateWithTimezone(void 0, e)), a.current;
}, p_ = Tn(/* @__PURE__ */ _("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown"), f_ = Tn(/* @__PURE__ */ _("path", {
  d: "M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z"
}), "ArrowLeft"), m_ = Tn(/* @__PURE__ */ _("path", {
  d: "M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"
}), "ArrowRight"), _1 = Tn(/* @__PURE__ */ _("path", {
  d: "M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z"
}), "Calendar"), h_ = Tn(/* @__PURE__ */ st(k.Fragment, {
  children: [/* @__PURE__ */ _("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }), /* @__PURE__ */ _("path", {
    d: "M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z"
  })]
}), "Clock"), v_ = Tn(/* @__PURE__ */ _("path", {
  d: "M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"
}), "DateRange"), g_ = Tn(/* @__PURE__ */ st(k.Fragment, {
  children: [/* @__PURE__ */ _("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }), /* @__PURE__ */ _("path", {
    d: "M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z"
  })]
}), "Time"), b_ = Tn(/* @__PURE__ */ _("path", {
  d: "M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Clear");
function lre(e) {
  return We("MuiPickersArrowSwitcher", e);
}
Ye("MuiPickersArrowSwitcher", ["root", "spacer", "button"]);
const cre = ["children", "className", "slots", "slotProps", "isNextDisabled", "isNextHidden", "onGoToNext", "nextLabel", "isPreviousDisabled", "isPreviousHidden", "onGoToPrevious", "previousLabel"], ure = ["ownerState"], dre = ["ownerState"], pre = J("div", {
  name: "MuiPickersArrowSwitcher",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({
  display: "flex"
}), fre = J("div", {
  name: "MuiPickersArrowSwitcher",
  slot: "Spacer",
  overridesResolver: (e, n) => n.spacer
})(({
  theme: e
}) => ({
  width: e.spacing(3)
})), u$ = J(Ja, {
  name: "MuiPickersArrowSwitcher",
  slot: "Button",
  overridesResolver: (e, n) => n.button
})(({
  ownerState: e
}) => y({}, e.hidden && {
  visibility: "hidden"
})), mre = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"],
    spacer: ["spacer"],
    button: ["button"]
  }, lre, n);
}, y_ = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d, p;
  const g = En().direction === "rtl", b = Ie({
    props: n,
    name: "MuiPickersArrowSwitcher"
  }), {
    children: x,
    className: S,
    slots: E,
    slotProps: R,
    isNextDisabled: $,
    isNextHidden: M,
    onGoToNext: O,
    nextLabel: N,
    isPreviousDisabled: V,
    isPreviousHidden: I,
    onGoToPrevious: z,
    previousLabel: B
  } = b, P = le(b, cre), F = b, H = mre(F), U = {
    isDisabled: $,
    isHidden: M,
    goTo: O,
    label: N
  }, Q = {
    isDisabled: V,
    isHidden: I,
    goTo: z,
    label: B
  }, Y = (s = E == null ? void 0 : E.previousIconButton) != null ? s : u$, te = rn({
    elementType: Y,
    externalSlotProps: R == null ? void 0 : R.previousIconButton,
    additionalProps: {
      size: "medium",
      title: Q.label,
      "aria-label": Q.label,
      disabled: Q.isDisabled,
      edge: "end",
      onClick: Q.goTo
    },
    ownerState: y({}, F, {
      hidden: Q.isHidden
    }),
    className: H.button
  }), Z = (u = E == null ? void 0 : E.nextIconButton) != null ? u : u$, q = rn({
    elementType: Z,
    externalSlotProps: R == null ? void 0 : R.nextIconButton,
    additionalProps: {
      size: "medium",
      title: U.label,
      "aria-label": U.label,
      disabled: U.isDisabled,
      edge: "start",
      onClick: U.goTo
    },
    ownerState: y({}, F, {
      hidden: U.isHidden
    }),
    className: H.button
  }), X = (d = E == null ? void 0 : E.leftArrowIcon) != null ? d : f_, oe = rn({
    elementType: X,
    externalSlotProps: R == null ? void 0 : R.leftArrowIcon,
    additionalProps: {
      fontSize: "inherit"
    },
    ownerState: void 0
  }), ie = le(oe, ure), K = (p = E == null ? void 0 : E.rightArrowIcon) != null ? p : m_, ne = rn({
    elementType: K,
    externalSlotProps: R == null ? void 0 : R.rightArrowIcon,
    additionalProps: {
      fontSize: "inherit"
    },
    ownerState: void 0
  }), se = le(ne, dre);
  return /* @__PURE__ */ st(pre, y({
    ref: a,
    className: fe(H.root, S),
    ownerState: F
  }, P, {
    children: [/* @__PURE__ */ _(Y, y({}, te, {
      children: g ? /* @__PURE__ */ _(K, y({}, se)) : /* @__PURE__ */ _(X, y({}, ie))
    })), x ? /* @__PURE__ */ _(vo, {
      variant: "subtitle1",
      component: "span",
      children: x
    }) : /* @__PURE__ */ _(fre, {
      className: H.spacer,
      ownerState: F
    }), /* @__PURE__ */ _(Z, y({}, q, {
      children: g ? /* @__PURE__ */ _(X, y({}, ie)) : /* @__PURE__ */ _(K, y({}, se))
    }))]
  }));
}), Us = (e, n) => e.length !== n.length ? !1 : n.every((a) => e.includes(a)), V1 = ({
  openTo: e,
  defaultOpenTo: n,
  views: a,
  defaultViews: s
}) => {
  const u = a ?? s;
  let d;
  if (e != null)
    d = e;
  else if (u.includes(n))
    d = n;
  else if (u.length > 0)
    d = u[0];
  else
    throw new Error("MUI: The `views` prop must contain at least one view");
  return {
    views: u,
    openTo: d
  };
}, C_ = ["hours", "minutes", "seconds"], Yf = (e) => C_.includes(e), Xc = (e) => C_.includes(e) || e === "meridiem", hre = (e, n) => e ? n.getHours(e) >= 12 ? "pm" : "am" : null, hg = (e, n, a) => a && (e >= 12 ? "pm" : "am") !== n ? n === "am" ? e - 12 : e + 12 : e, vre = (e, n, a, s) => {
  const u = hg(s.getHours(e), n, a);
  return s.setHours(e, u);
}, d$ = (e, n) => n.getHours(e) * 3600 + n.getMinutes(e) * 60 + n.getSeconds(e), Ng = (e, n) => (a, s) => e ? n.isAfter(a, s) : d$(a, n) > d$(s, n), AT = (e, {
  format: n,
  views: a,
  ampm: s
}) => {
  if (n != null)
    return n;
  const u = e.formats;
  return Us(a, ["hours"]) ? s ? `${u.hours12h} ${u.meridiem}` : u.hours24h : Us(a, ["minutes"]) ? u.minutes : Us(a, ["seconds"]) ? u.seconds : Us(a, ["minutes", "seconds"]) ? `${u.minutes}:${u.seconds}` : Us(a, ["hours", "minutes", "seconds"]) ? s ? `${u.hours12h}:${u.minutes}:${u.seconds} ${u.meridiem}` : `${u.hours24h}:${u.minutes}:${u.seconds}` : s ? `${u.hours12h}:${u.minutes} ${u.meridiem}` : `${u.hours24h}:${u.minutes}`;
};
let hw = !1;
function Lg({
  onChange: e,
  onViewChange: n,
  openTo: a,
  view: s,
  views: u,
  autoFocus: d,
  focusedView: p,
  onFocusedViewChange: h
}) {
  var g, b;
  process.env.NODE_ENV !== "production" && (hw || (s != null && !u.includes(s) && (console.warn(`MUI: \`view="${s}"\` is not a valid prop.`, `It must be an element of \`views=["${u.join('", "')}"]\`.`), hw = !0), s == null && a != null && !u.includes(a) && (console.warn(`MUI: \`openTo="${a}"\` is not a valid prop.`, `It must be an element of \`views=["${u.join('", "')}"]\`.`), hw = !0)));
  const x = k.useRef(a), S = k.useRef(u), E = k.useRef(u.includes(a) ? a : u[0]), [R, $] = Eo({
    name: "useViews",
    state: "view",
    controlled: s,
    default: E.current
  }), M = k.useRef(d ? R : null), [O, N] = Eo({
    name: "useViews",
    state: "focusedView",
    controlled: p,
    default: M.current
  });
  k.useEffect(() => {
    (x.current && x.current !== a || S.current && S.current.some((U) => !u.includes(U))) && ($(u.includes(a) ? a : u[0]), S.current = u, x.current = a);
  }, [a, $, R, u]);
  const V = u.indexOf(R), I = (g = u[V - 1]) != null ? g : null, z = (b = u[V + 1]) != null ? b : null, B = kt((U, Q) => {
    N(Q ? U : (Y) => U === Y ? null : Y), h == null || h(U, Q);
  }), P = kt((U) => {
    B(U, !0), U !== R && ($(U), n && n(U));
  }), F = kt(() => {
    z && P(z);
  }), H = kt((U, Q, Y) => {
    const te = Q === "finish", Z = Y ? (
      // handles case like `DateTimePicker`, where a view might return a `finish` selection state
      // but we it's not the final view given all `views` -> overall selection state should be `partial`.
      u.indexOf(Y) < u.length - 1
    ) : !!z;
    if (e(U, te && Z ? "partial" : Q, Y), Y && Y !== R) {
      const X = u[u.indexOf(Y) + 1];
      X && P(X);
    } else
      te && F();
  });
  return {
    view: R,
    setView: P,
    focusedView: O,
    setFocusedView: B,
    nextView: z,
    previousView: I,
    // Always return up to date default view instead of the initial one (i.e. defaultView.current)
    defaultView: u.includes(a) ? a : u[0],
    goToNextView: F,
    setValueAndGoToNextView: H
  };
}
function gre(e, {
  disableFuture: n,
  maxDate: a,
  timezone: s
}) {
  const u = dn();
  return k.useMemo(() => {
    const d = u.dateWithTimezone(void 0, s), p = u.startOfMonth(n && u.isBefore(d, a) ? d : a);
    return !u.isAfter(p, e);
  }, [n, a, e, u, s]);
}
function bre(e, {
  disablePast: n,
  minDate: a,
  timezone: s
}) {
  const u = dn();
  return k.useMemo(() => {
    const d = u.dateWithTimezone(void 0, s), p = u.startOfMonth(n && u.isAfter(d, a) ? d : a);
    return !u.isBefore(p, e);
  }, [n, a, e, u, s]);
}
function ox(e, n, a, s) {
  const u = dn(), d = hre(e, u), p = k.useCallback((h) => {
    const g = e == null ? null : vre(e, h, !!n, u);
    a(g, s ?? "partial");
  }, [n, e, a, s, u]);
  return {
    meridiemMode: d,
    handleMeridiemChange: p
  };
}
const Od = 36, om = 2, Ig = 320, yre = 280, rx = 334, T_ = 232, Wv = 48, ax = J("div")({
  overflow: "hidden",
  width: Ig,
  maxHeight: rx,
  display: "flex",
  flexDirection: "column",
  margin: "0 auto"
});
function x_(e) {
  return We("MuiTimeClock", e);
}
const Cre = Ye("MuiTimeClock", ["root", "arrowSwitcher"]), qf = 220, Ys = 36, vg = {
  x: qf / 2,
  y: qf / 2
}, S_ = {
  x: vg.x,
  y: 0
}, Tre = S_.x - vg.x, xre = S_.y - vg.y, Sre = (e) => e * (180 / Math.PI), k_ = (e, n, a) => {
  const s = n - vg.x, u = a - vg.y, d = Math.atan2(Tre, xre) - Math.atan2(s, u);
  let p = Sre(d);
  p = Math.round(p / e) * e, p %= 360;
  const h = Math.floor(p / e) || 0, g = s ** 2 + u ** 2, b = Math.sqrt(g);
  return {
    value: h,
    distance: b
  };
}, kre = (e, n, a = 1) => {
  const s = a * 6;
  let {
    value: u
  } = k_(s, e, n);
  return u = u * a % 60, u;
}, wre = (e, n, a) => {
  const {
    value: s,
    distance: u
  } = k_(30, e, n);
  let d = s || 12;
  return a ? d %= 12 : u < qf / 2 - Ys && (d += 12, d %= 24), d;
};
function Rre(e) {
  return We("MuiClockPointer", e);
}
const Ere = Ye("MuiClockPointer", ["root", "thumb"]), Ore = ["className", "hasSelected", "isInner", "type", "viewValue"], Pre = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"],
    thumb: ["thumb"]
  }, Rre, n);
}, Dre = J("div", {
  name: "MuiClockPointer",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(({
  theme: e,
  ownerState: n
}) => y({
  width: 2,
  backgroundColor: (e.vars || e).palette.primary.main,
  position: "absolute",
  left: "calc(50% - 1px)",
  bottom: "50%",
  transformOrigin: "center bottom 0px"
}, n.shouldAnimate && {
  transition: e.transitions.create(["transform", "height"])
})), Mre = J("div", {
  name: "MuiClockPointer",
  slot: "Thumb",
  overridesResolver: (e, n) => n.thumb
})(({
  theme: e,
  ownerState: n
}) => y({
  width: 4,
  height: 4,
  backgroundColor: (e.vars || e).palette.primary.contrastText,
  borderRadius: "50%",
  position: "absolute",
  top: -21,
  left: `calc(50% - ${Ys / 2}px)`,
  border: `${(Ys - 4) / 2}px solid ${(e.vars || e).palette.primary.main}`,
  boxSizing: "content-box"
}, n.hasSelected && {
  backgroundColor: (e.vars || e).palette.primary.main
}));
function $re(e) {
  const n = Ie({
    props: e,
    name: "MuiClockPointer"
  }), {
    className: a,
    isInner: s,
    type: u,
    viewValue: d
  } = n, p = le(n, Ore), h = k.useRef(u);
  k.useEffect(() => {
    h.current = u;
  }, [u]);
  const g = y({}, n, {
    shouldAnimate: h.current !== u
  }), b = Pre(g);
  return /* @__PURE__ */ _(Dre, y({
    style: (() => {
      let E = 360 / (u === "hours" ? 12 : 60) * d;
      return u === "hours" && d > 12 && (E -= 360), {
        height: Math.round((s ? 0.26 : 0.4) * qf),
        transform: `rotateZ(${E}deg)`
      };
    })(),
    className: fe(a, b.root),
    ownerState: g
  }, p, {
    children: /* @__PURE__ */ _(Mre, {
      ownerState: g,
      className: b.thumb
    })
  }));
}
function Nre(e) {
  return We("MuiClock", e);
}
const Lre = Ye("MuiClock", ["root", "clock", "wrapper", "squareMask", "pin", "amButton", "pmButton", "meridiemText"]), ng = ({
  date: e,
  disableFuture: n,
  disablePast: a,
  maxDate: s,
  minDate: u,
  isDateDisabled: d,
  utils: p,
  timezone: h
}) => {
  const g = p.startOfDay(p.dateWithTimezone(void 0, h));
  a && p.isBefore(u, g) && (u = g), n && p.isAfter(s, g) && (s = g);
  let b = e, x = e;
  for (p.isBefore(e, u) && (b = u, x = null), p.isAfter(e, s) && (x && (x = s), b = null); b || x; ) {
    if (b && p.isAfter(b, s) && (b = null), x && p.isBefore(x, u) && (x = null), b) {
      if (!d(b))
        return b;
      b = p.addDays(b, 1);
    }
    if (x) {
      if (!d(x))
        return x;
      x = p.addDays(x, -1);
    }
  }
  return null;
}, Ire = (e, n) => n == null || !e.isValid(n) ? null : n, Xr = (e, n, a) => n == null || !e.isValid(n) ? a : n, Are = (e, n, a) => !e.isValid(n) && n != null && !e.isValid(a) && a != null ? !0 : e.isEqual(n, a), B1 = (e, n) => {
  const s = [e.startOfYear(n)];
  for (; s.length < 12; ) {
    const u = s[s.length - 1];
    s.push(e.addMonths(u, 1));
  }
  return s;
}, Iw = (e, n, a) => {
  let s = n;
  return s = e.setHours(s, e.getHours(a)), s = e.setMinutes(s, e.getMinutes(a)), s = e.setSeconds(s, e.getSeconds(a)), s;
}, z1 = (e, n, a) => a === "date" ? e.startOfDay(e.dateWithTimezone(void 0, n)) : e.dateWithTimezone(void 0, n), es = (e, n) => {
  const a = e.setHours(e.date(), n === "am" ? 2 : 14);
  return e.format(a, "meridiem");
}, _re = ["year", "month", "day"], Bf = (e) => _re.includes(e), gg = (e, {
  format: n,
  views: a
}, s) => {
  if (n != null)
    return n;
  const u = e.formats;
  return Us(a, ["year"]) ? u.year : Us(a, ["month"]) ? u.month : Us(a, ["day"]) ? u.dayOfMonth : Us(a, ["month", "year"]) ? `${u.month} ${u.year}` : Us(a, ["day", "month"]) ? `${u.month} ${u.dayOfMonth}` : s ? /en/.test(e.getCurrentLocaleCode()) ? u.normalDateWithWeekday : u.normalDate : u.keyboardDate;
}, Vre = (e, n) => {
  const a = e.startOfWeek(n);
  return [0, 1, 2, 3, 4, 5, 6].map((s) => e.addDays(a, s));
}, Bre = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"],
    clock: ["clock"],
    wrapper: ["wrapper"],
    squareMask: ["squareMask"],
    pin: ["pin"],
    amButton: ["amButton"],
    pmButton: ["pmButton"],
    meridiemText: ["meridiemText"]
  }, Nre, n);
}, zre = J("div", {
  name: "MuiClock",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(({
  theme: e
}) => ({
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  margin: e.spacing(2)
})), Fre = J("div", {
  name: "MuiClock",
  slot: "Clock",
  overridesResolver: (e, n) => n.clock
})({
  backgroundColor: "rgba(0,0,0,.07)",
  borderRadius: "50%",
  height: 220,
  width: 220,
  flexShrink: 0,
  position: "relative",
  pointerEvents: "none"
}), jre = J("div", {
  name: "MuiClock",
  slot: "Wrapper",
  overridesResolver: (e, n) => n.wrapper
})({
  "&:focus": {
    outline: "none"
  }
}), Ure = J("div", {
  name: "MuiClock",
  slot: "SquareMask",
  overridesResolver: (e, n) => n.squareMask
})(({
  ownerState: e
}) => y({
  width: "100%",
  height: "100%",
  position: "absolute",
  pointerEvents: "auto",
  outline: 0,
  // Disable scroll capabilities.
  touchAction: "none",
  userSelect: "none"
}, e.disabled ? {} : {
  "@media (pointer: fine)": {
    cursor: "pointer",
    borderRadius: "50%"
  },
  "&:active": {
    cursor: "move"
  }
})), Hre = J("div", {
  name: "MuiClock",
  slot: "Pin",
  overridesResolver: (e, n) => n.pin
})(({
  theme: e
}) => ({
  width: 6,
  height: 6,
  borderRadius: "50%",
  backgroundColor: (e.vars || e).palette.primary.main,
  position: "absolute",
  top: "50%",
  left: "50%",
  transform: "translate(-50%, -50%)"
})), Wre = J(Ja, {
  name: "MuiClock",
  slot: "AmButton",
  overridesResolver: (e, n) => n.amButton
})(({
  theme: e,
  ownerState: n
}) => y({
  zIndex: 1,
  position: "absolute",
  bottom: 8,
  left: 8,
  paddingLeft: 4,
  paddingRight: 4,
  width: Ys
}, n.meridiemMode === "am" && {
  backgroundColor: (e.vars || e).palette.primary.main,
  color: (e.vars || e).palette.primary.contrastText,
  "&:hover": {
    backgroundColor: (e.vars || e).palette.primary.light
  }
})), Yre = J(Ja, {
  name: "MuiClock",
  slot: "PmButton",
  overridesResolver: (e, n) => n.pmButton
})(({
  theme: e,
  ownerState: n
}) => y({
  zIndex: 1,
  position: "absolute",
  bottom: 8,
  right: 8,
  paddingLeft: 4,
  paddingRight: 4,
  width: Ys
}, n.meridiemMode === "pm" && {
  backgroundColor: (e.vars || e).palette.primary.main,
  color: (e.vars || e).palette.primary.contrastText,
  "&:hover": {
    backgroundColor: (e.vars || e).palette.primary.light
  }
})), p$ = J(vo, {
  name: "MuiClock",
  slot: "meridiemText",
  overridesResolver: (e, n) => n.meridiemText
})({
  overflow: "hidden",
  whiteSpace: "nowrap",
  textOverflow: "ellipsis"
});
function qre(e) {
  const n = Ie({
    props: e,
    name: "MuiClock"
  }), {
    ampm: a,
    ampmInClock: s,
    autoFocus: u,
    children: d,
    value: p,
    handleMeridiemChange: h,
    isTimeDisabled: g,
    meridiemMode: b,
    minutesStep: x = 1,
    onChange: S,
    selectedId: E,
    type: R,
    viewValue: $,
    disabled: M,
    readOnly: O,
    className: N
  } = n, V = n, I = dn(), z = pr(), B = k.useRef(!1), P = Bre(V), F = g($, R), H = !a && R === "hours" && ($ < 1 || $ > 12), U = (ne, se) => {
    M || O || g(ne, R) || S(ne, se);
  }, Q = (ne, se) => {
    let {
      offsetX: ze,
      offsetY: Ue
    } = ne;
    if (ze === void 0) {
      const ue = ne.target.getBoundingClientRect();
      ze = ne.changedTouches[0].clientX - ue.left, Ue = ne.changedTouches[0].clientY - ue.top;
    }
    const Oe = R === "seconds" || R === "minutes" ? kre(ze, Ue, x) : wre(ze, Ue, !!a);
    U(Oe, se);
  }, Y = (ne) => {
    B.current = !0, Q(ne, "shallow");
  }, te = (ne) => {
    B.current && (Q(ne, "finish"), B.current = !1);
  }, Z = (ne) => {
    ne.buttons > 0 && Q(ne.nativeEvent, "shallow");
  }, q = (ne) => {
    B.current && (B.current = !1), Q(ne.nativeEvent, "finish");
  }, X = k.useMemo(() => R === "hours" ? !0 : $ % 5 === 0, [R, $]), oe = R === "minutes" ? x : 1, ie = k.useRef(null);
  ro(() => {
    u && ie.current.focus();
  }, [u]);
  const K = (ne) => {
    if (!B.current)
      switch (ne.key) {
        case "Home":
          U(0, "partial"), ne.preventDefault();
          break;
        case "End":
          U(R === "minutes" ? 59 : 23, "partial"), ne.preventDefault();
          break;
        case "ArrowUp":
          U($ + oe, "partial"), ne.preventDefault();
          break;
        case "ArrowDown":
          U($ - oe, "partial"), ne.preventDefault();
          break;
      }
  };
  return /* @__PURE__ */ st(zre, {
    className: fe(N, P.root),
    children: [/* @__PURE__ */ st(Fre, {
      className: P.clock,
      children: [/* @__PURE__ */ _(Ure, {
        onTouchMove: Y,
        onTouchEnd: te,
        onMouseUp: q,
        onMouseMove: Z,
        ownerState: {
          disabled: M
        },
        className: P.squareMask
      }), !F && /* @__PURE__ */ st(k.Fragment, {
        children: [/* @__PURE__ */ _(Hre, {
          className: P.pin
        }), p != null && /* @__PURE__ */ _($re, {
          type: R,
          viewValue: $,
          isInner: H,
          hasSelected: X
        })]
      }), /* @__PURE__ */ _(jre, {
        "aria-activedescendant": E,
        "aria-label": z.clockLabelText(R, p, I),
        ref: ie,
        role: "listbox",
        onKeyDown: K,
        tabIndex: 0,
        className: P.wrapper,
        children: d
      })]
    }), a && s && /* @__PURE__ */ st(k.Fragment, {
      children: [/* @__PURE__ */ _(Wre, {
        onClick: O ? void 0 : () => h("am"),
        disabled: M || b === null,
        ownerState: V,
        className: P.amButton,
        title: es(I, "am"),
        children: /* @__PURE__ */ _(p$, {
          variant: "caption",
          className: P.meridiemText,
          children: es(I, "am")
        })
      }), /* @__PURE__ */ _(Yre, {
        disabled: M || b === null,
        onClick: O ? void 0 : () => h("pm"),
        ownerState: V,
        className: P.pmButton,
        title: es(I, "pm"),
        children: /* @__PURE__ */ _(p$, {
          variant: "caption",
          className: P.meridiemText,
          children: es(I, "pm")
        })
      })]
    })]
  });
}
function Gre(e) {
  return We("MuiClockNumber", e);
}
const Yv = Ye("MuiClockNumber", ["root", "selected", "disabled"]), Kre = ["className", "disabled", "index", "inner", "label", "selected"], Qre = (e) => {
  const {
    classes: n,
    selected: a,
    disabled: s
  } = e;
  return He({
    root: ["root", a && "selected", s && "disabled"]
  }, Gre, n);
}, Xre = J("span", {
  name: "MuiClockNumber",
  slot: "Root",
  overridesResolver: (e, n) => [n.root, {
    [`&.${Yv.disabled}`]: n.disabled
  }, {
    [`&.${Yv.selected}`]: n.selected
  }]
})(({
  theme: e,
  ownerState: n
}) => y({
  height: Ys,
  width: Ys,
  position: "absolute",
  left: `calc((100% - ${Ys}px) / 2)`,
  display: "inline-flex",
  justifyContent: "center",
  alignItems: "center",
  borderRadius: "50%",
  color: (e.vars || e).palette.text.primary,
  fontFamily: e.typography.fontFamily,
  "&:focused": {
    backgroundColor: (e.vars || e).palette.background.paper
  },
  [`&.${Yv.selected}`]: {
    color: (e.vars || e).palette.primary.contrastText
  },
  [`&.${Yv.disabled}`]: {
    pointerEvents: "none",
    color: (e.vars || e).palette.text.disabled
  }
}, n.inner && y({}, e.typography.body2, {
  color: (e.vars || e).palette.text.secondary
})));
function w_(e) {
  const n = Ie({
    props: e,
    name: "MuiClockNumber"
  }), {
    className: a,
    disabled: s,
    index: u,
    inner: d,
    label: p,
    selected: h
  } = n, g = le(n, Kre), b = n, x = Qre(b), S = u % 12 / 12 * Math.PI * 2 - Math.PI / 2, E = (qf - Ys - 2) / 2 * (d ? 0.65 : 1), R = Math.round(Math.cos(S) * E), $ = Math.round(Math.sin(S) * E);
  return /* @__PURE__ */ _(Xre, y({
    className: fe(a, x.root),
    "aria-disabled": s ? !0 : void 0,
    "aria-selected": h ? !0 : void 0,
    role: "option",
    style: {
      transform: `translate(${R}px, ${$ + (qf - Ys) / 2}px`
    },
    ownerState: b
  }, g, {
    children: p
  }));
}
const Zre = ({
  ampm: e,
  value: n,
  getClockNumberText: a,
  isDisabled: s,
  selectedId: u,
  utils: d
}) => {
  const p = n ? d.getHours(n) : null, h = [], g = e ? 1 : 0, b = e ? 12 : 23, x = (S) => p === null ? !1 : e ? S === 12 ? p === 12 || p === 0 : p === S || p - 12 === S : p === S;
  for (let S = g; S <= b; S += 1) {
    let E = S.toString();
    S === 0 && (E = "00");
    const R = !e && (S === 0 || S > 12);
    E = d.formatNumber(E);
    const $ = x(S);
    h.push(/* @__PURE__ */ _(w_, {
      id: $ ? u : void 0,
      index: S,
      inner: R,
      selected: $,
      disabled: s(S),
      label: E,
      "aria-label": a(E)
    }, S));
  }
  return h;
}, f$ = ({
  utils: e,
  value: n,
  isDisabled: a,
  getClockNumberText: s,
  selectedId: u
}) => {
  const d = e.formatNumber;
  return [[5, d("05")], [10, d("10")], [15, d("15")], [20, d("20")], [25, d("25")], [30, d("30")], [35, d("35")], [40, d("40")], [45, d("45")], [50, d("50")], [55, d("55")], [0, d("00")]].map(([p, h], g) => {
    const b = p === n;
    return /* @__PURE__ */ _(w_, {
      label: h,
      id: b ? u : void 0,
      index: g + 1,
      inner: !1,
      disabled: a(p),
      selected: b,
      "aria-label": s(h)
    }, p);
  });
}, F1 = ({
  timezone: e,
  value: n,
  defaultValue: a,
  onChange: s,
  valueManager: u
}) => {
  var d, p;
  const h = dn(), g = k.useRef(a), b = (d = n ?? g.current) != null ? d : u.emptyValue, x = k.useMemo(() => u.getTimezone(h, b), [h, u, b]), S = kt((M) => x == null ? M : u.setTimezone(h, x, M)), E = (p = e ?? x) != null ? p : "default", R = k.useMemo(() => u.setTimezone(h, E, b), [u, h, E, b]), $ = kt((M, ...O) => {
    const N = S(M);
    s == null || s(N, ...O);
  });
  return {
    value: R,
    handleValueChange: $,
    timezone: E
  };
}, rm = ({
  name: e,
  timezone: n,
  value: a,
  defaultValue: s,
  onChange: u,
  valueManager: d
}) => {
  const [p, h] = Eo({
    name: e,
    state: "value",
    controlled: a,
    default: s ?? d.emptyValue
  }), g = kt((b, ...x) => {
    h(b), u == null || u(b, ...x);
  });
  return F1({
    timezone: n,
    value: p,
    defaultValue: void 0,
    onChange: g,
    valueManager: d
  });
}, Zi = {
  year: 1,
  month: 2,
  day: 3,
  hours: 4,
  minutes: 5,
  seconds: 6,
  milliseconds: 7
}, Jre = (e) => Math.max(...e.map((n) => {
  var a;
  return (a = Zi[n.type]) != null ? a : 1;
})), Nv = (e, n, a) => {
  if (n === Zi.year)
    return e.startOfYear(a);
  if (n === Zi.month)
    return e.startOfMonth(a);
  if (n === Zi.day)
    return e.startOfDay(a);
  let s = a;
  return n < Zi.minutes && (s = e.setMinutes(s, 0)), n < Zi.seconds && (s = e.setSeconds(s, 0)), n < Zi.milliseconds && (s = e.setMilliseconds(s, 0)), s;
}, eae = ({
  props: e,
  utils: n,
  granularity: a,
  timezone: s,
  getTodayDate: u
}) => {
  var d;
  let p = u ? u() : Nv(n, a, z1(n, s));
  e.minDate != null && n.isAfterDay(e.minDate, p) && (p = Nv(n, a, e.minDate)), e.maxDate != null && n.isBeforeDay(e.maxDate, p) && (p = Nv(n, a, e.maxDate));
  const h = Ng((d = e.disableIgnoringDatePartForTimeValidation) != null ? d : !1, n);
  return e.minTime != null && h(e.minTime, p) && (p = Nv(n, a, e.disableIgnoringDatePartForTimeValidation ? e.minTime : Iw(n, p, e.minTime))), e.maxTime != null && h(p, e.maxTime) && (p = Nv(n, a, e.disableIgnoringDatePartForTimeValidation ? e.maxTime : Iw(n, p, e.maxTime))), p;
}, j1 = (e, n) => {
  const a = e.formatTokenMap[n];
  if (a == null)
    throw new Error([`MUI: The token "${n}" is not supported by the Date and Time Pickers.`, "Please try using another token or open an issue on https://github.com/mui/mui-x/issues/new/choose if you think it should be supported."].join(`
`));
  return typeof a == "string" ? {
    type: a,
    contentType: a === "meridiem" ? "letter" : "digit",
    maxLength: void 0
  } : {
    type: a.sectionType,
    contentType: a.contentType,
    maxLength: a.maxLength
  };
}, tae = (e) => {
  switch (e) {
    case "ArrowUp":
      return 1;
    case "ArrowDown":
      return -1;
    case "PageUp":
      return 5;
    case "PageDown":
      return -5;
    default:
      return 0;
  }
}, ix = (e, n, a) => {
  const s = [], u = e.dateWithTimezone(void 0, n), d = e.startOfWeek(u), p = e.endOfWeek(u);
  let h = d;
  for (; e.isBefore(h, p); )
    s.push(h), h = e.addDays(h, 1);
  return s.map((g) => e.formatByString(g, a));
}, R_ = (e, n, a, s) => {
  switch (a) {
    case "month":
      return B1(e, e.dateWithTimezone(void 0, n)).map((u) => e.formatByString(u, s));
    case "weekDay":
      return ix(e, n, s);
    case "meridiem": {
      const u = e.dateWithTimezone(void 0, n);
      return [e.startOfDay(u), e.endOfDay(u)].map((d) => e.formatByString(d, s));
    }
    default:
      return [];
  }
}, E_ = (e, n, a) => {
  let s = n;
  for (s = Number(s).toString(); s.length < a; )
    s = `0${s}`;
  return s;
}, O_ = (e, n, a, s, u) => {
  if (process.env.NODE_ENV !== "production" && u.type !== "day" && u.contentType === "digit-with-letter")
    throw new Error([`MUI: The token "${u.format}" is a digit format with letter in it.'
             This type of format is only supported for 'day' sections`].join(`
`));
  if (u.type === "day" && u.contentType === "digit-with-letter") {
    const p = e.setDate(s.longestMonth, a);
    return e.formatByString(p, u.format);
  }
  const d = a.toString();
  return u.hasLeadingZerosInInput ? E_(e, d, u.maxLength) : d;
}, nae = (e, n, a, s, u, d, p) => {
  const h = tae(s), g = s === "Home", b = s === "End", x = a.value === "" || g || b, S = () => {
    const R = u[a.type]({
      currentDate: d,
      format: a.format,
      contentType: a.contentType
    }), $ = (V) => O_(e, n, V, R, a), M = a.type === "minutes" && p != null && p.minutesStep ? p.minutesStep : 1;
    let N = parseInt(a.value, 10) + h * M;
    if (x) {
      if (a.type === "year" && !b && !g)
        return e.formatByString(e.dateWithTimezone(void 0, n), a.format);
      h > 0 || g ? N = R.minimum : N = R.maximum;
    }
    return N % M !== 0 && ((h < 0 || g) && (N += M - (M + N) % M), (h > 0 || b) && (N -= N % M)), N > R.maximum ? $(R.minimum + (N - R.maximum - 1) % (R.maximum - R.minimum + 1)) : N < R.minimum ? $(R.maximum - (R.minimum - N - 1) % (R.maximum - R.minimum + 1)) : $(N);
  }, E = () => {
    const R = R_(e, n, a.type, a.format);
    if (R.length === 0)
      return a.value;
    if (x)
      return h > 0 || g ? R[0] : R[R.length - 1];
    const M = (R.indexOf(a.value) + R.length + h) % R.length;
    return R[M];
  };
  return a.contentType === "digit" || a.contentType === "digit-with-letter" ? S() : E();
}, U1 = (e, n) => {
  let a = e.value || e.placeholder;
  const s = n === "non-input" ? e.hasLeadingZerosInFormat : e.hasLeadingZerosInInput;
  return n === "non-input" && e.hasLeadingZerosInInput && !e.hasLeadingZerosInFormat && (a = Number(a).toString()), ["input-rtl", "input-ltr"].includes(n) && e.contentType === "digit" && !s && a.length === 1 && (a = `${a}‎`), n === "input-rtl" && (a = `⁨${a}⁩`), a;
}, _f = (e) => e.replace(/[\u2066\u2067\u2068\u2069]/g, ""), P_ = (e, n) => {
  let a = 0, s = n ? 1 : 0;
  const u = [];
  for (let d = 0; d < e.length; d += 1) {
    const p = e[d], h = U1(p, n ? "input-rtl" : "input-ltr"), g = `${p.startSeparator}${h}${p.endSeparator}`, b = _f(g).length, x = g.length, S = _f(h), E = s + h.indexOf(S[0]) + p.startSeparator.length, R = E + S.length;
    u.push(y({}, p, {
      start: a,
      end: a + b,
      startInInput: E,
      endInInput: R
    })), a += b, s += x;
  }
  return u;
}, oae = (e, n, a, s, u) => {
  switch (s.type) {
    case "year":
      return a.fieldYearPlaceholder({
        digitAmount: e.formatByString(e.dateWithTimezone(void 0, n), u).length,
        format: u
      });
    case "month":
      return a.fieldMonthPlaceholder({
        contentType: s.contentType,
        format: u
      });
    case "day":
      return a.fieldDayPlaceholder({
        format: u
      });
    case "weekDay":
      return a.fieldWeekDayPlaceholder({
        contentType: s.contentType,
        format: u
      });
    case "hours":
      return a.fieldHoursPlaceholder({
        format: u
      });
    case "minutes":
      return a.fieldMinutesPlaceholder({
        format: u
      });
    case "seconds":
      return a.fieldSecondsPlaceholder({
        format: u
      });
    case "meridiem":
      return a.fieldMeridiemPlaceholder({
        format: u
      });
    default:
      return u;
  }
}, m$ = (e, n, a, s) => {
  if (process.env.NODE_ENV !== "production" && j1(e, a).type === "weekDay")
    throw new Error("changeSectionValueFormat doesn't support week day formats");
  return e.formatByString(e.parse(n, a), s);
}, D_ = (e, n, a) => e.formatByString(e.dateWithTimezone(void 0, n), a).length === 4, M_ = (e, n, a, s, u) => {
  if (a !== "digit")
    return !1;
  const d = e.dateWithTimezone(void 0, n);
  switch (s) {
    case "year":
      return D_(e, n, u) ? e.formatByString(e.setYear(d, 1), u) === "0001" : e.formatByString(e.setYear(d, 2001), u) === "01";
    case "month":
      return e.formatByString(e.startOfYear(d), u).length > 1;
    case "day":
      return e.formatByString(e.startOfMonth(d), u).length > 1;
    case "weekDay":
      return e.formatByString(e.startOfWeek(d), u).length > 1;
    case "hours":
      return e.formatByString(e.setHours(d, 1), u).length > 1;
    case "minutes":
      return e.formatByString(e.setMinutes(d, 1), u).length > 1;
    case "seconds":
      return e.formatByString(e.setSeconds(d, 1), u).length > 1;
    default:
      throw new Error("Invalid section type");
  }
}, rae = (e, n) => {
  const a = [], {
    start: s,
    end: u
  } = e.escapedCharacters, d = new RegExp(`(\\${s}[^\\${u}]*\\${u})+`, "g");
  let p = null;
  for (; p = d.exec(n); )
    a.push({
      start: p.index,
      end: d.lastIndex - 1
    });
  return a;
}, h$ = (e, n, a, s, u, d, p, h) => {
  let g = "";
  const b = [], x = e.date(), S = (I) => {
    if (I === "")
      return null;
    const z = j1(e, I), B = M_(e, n, z.contentType, z.type, I), P = p ? B : z.contentType === "digit", F = u != null && e.isValid(u);
    let H = F ? e.formatByString(u, I) : "", U = null;
    if (P)
      if (B)
        U = H === "" ? e.formatByString(x, I).length : H.length;
      else {
        if (z.maxLength == null)
          throw new Error(`MUI: The token ${I} should have a 'maxDigitNumber' property on it's adapter`);
        U = z.maxLength, F && (H = E_(e, H, U));
      }
    return b.push(y({}, z, {
      format: I,
      maxLength: U,
      value: H,
      placeholder: oae(e, n, a, z, I),
      hasLeadingZeros: B,
      hasLeadingZerosInFormat: B,
      hasLeadingZerosInInput: P,
      startSeparator: b.length === 0 ? g : "",
      endSeparator: "",
      modified: !1
    })), null;
  };
  let E = 10, R = s, $ = e.expandFormat(s);
  for (; $ !== R; )
    if (R = $, $ = e.expandFormat(R), E -= 1, E < 0)
      throw new Error("MUI: The format expansion seems to be  enter in an infinite loop. Please open an issue with the format passed to the picker component");
  const M = $, O = rae(e, M), N = new RegExp(`^(${Object.keys(e.formatTokenMap).sort((I, z) => z.length - I.length).join("|")})`, "g");
  let V = "";
  for (let I = 0; I < M.length; I += 1) {
    const z = O.find((U) => U.start <= I && U.end >= I), B = M[I], P = z != null, F = `${V}${M.slice(I)}`, H = N.test(F);
    !P && B.match(/([A-Za-z]+)/) && H ? (V = F.slice(0, N.lastIndex), I += N.lastIndex - 1) : P && (z == null ? void 0 : z.start) === I || (z == null ? void 0 : z.end) === I || (S(V), V = "", b.length === 0 ? g += B : b[b.length - 1].endSeparator += B);
  }
  return S(V), b.map((I) => {
    const z = (B) => {
      let P = B;
      return h && P !== null && P.includes(" ") && (P = `⁩${P}⁦`), d === "spacious" && ["/", ".", "-"].includes(P) && (P = ` ${P} `), P;
    };
    return I.startSeparator = z(I.startSeparator), I.endSeparator = z(I.endSeparator), I;
  });
}, aae = (e, n) => {
  const a = n.some((h) => h.type === "day"), s = [], u = [];
  for (let h = 0; h < n.length; h += 1) {
    const g = n[h];
    a && g.type === "weekDay" || (s.push(g.format), u.push(U1(g, "non-input")));
  }
  const d = s.join(" "), p = u.join(" ");
  return e.parse(p, d);
}, iae = (e, n) => {
  const s = e.map((u) => {
    const d = U1(u, n ? "input-rtl" : "input-ltr");
    return `${u.startSeparator}${d}${u.endSeparator}`;
  }).join("");
  return n ? `⁦${s}⁩` : s;
}, sae = (e, n) => {
  const a = e.dateWithTimezone(void 0, n), s = e.endOfYear(a), u = e.endOfDay(a), {
    maxDaysInMonth: d,
    longestMonth: p
  } = B1(e, a).reduce((h, g) => {
    const b = e.getDaysInMonth(g);
    return b > h.maxDaysInMonth ? {
      maxDaysInMonth: b,
      longestMonth: g
    } : h;
  }, {
    maxDaysInMonth: 0,
    longestMonth: null
  });
  return {
    year: ({
      format: h
    }) => ({
      minimum: 0,
      maximum: D_(e, n, h) ? 9999 : 99
    }),
    month: () => ({
      minimum: 1,
      // Assumption: All years have the same amount of months
      maximum: e.getMonth(s) + 1
    }),
    day: ({
      currentDate: h
    }) => ({
      minimum: 1,
      maximum: h != null && e.isValid(h) ? e.getDaysInMonth(h) : d,
      longestMonth: p
    }),
    weekDay: ({
      format: h,
      contentType: g
    }) => {
      if (g === "digit") {
        const b = ix(e, n, h).map(Number);
        return {
          minimum: Math.min(...b),
          maximum: Math.max(...b)
        };
      }
      return {
        minimum: 1,
        maximum: 7
      };
    },
    hours: ({
      format: h
    }) => {
      const g = e.getHours(u);
      return e.formatByString(e.endOfDay(a), h) !== g.toString() ? {
        minimum: 1,
        maximum: Number(e.formatByString(e.startOfDay(a), h))
      } : {
        minimum: 0,
        maximum: g
      };
    },
    minutes: () => ({
      minimum: 0,
      // Assumption: All years have the same amount of minutes
      maximum: e.getMinutes(u)
    }),
    seconds: () => ({
      minimum: 0,
      // Assumption: All years have the same amount of seconds
      maximum: e.getSeconds(u)
    }),
    meridiem: () => ({
      minimum: 0,
      maximum: 0
    })
  };
};
let v$ = !1;
const g$ = (e, n) => {
  if (process.env.NODE_ENV !== "production" && !v$) {
    const a = [];
    ["date", "date-time"].includes(n) && a.push("weekDay", "day", "month", "year"), ["time", "date-time"].includes(n) && a.push("hours", "minutes", "seconds", "meridiem");
    const s = e.find((u) => !a.includes(u.type));
    s && (console.warn(`MUI: The field component you are using is not compatible with the "${s.type} date section.`, `The supported date sections are ["${a.join('", "')}"]\`.`), v$ = !0);
  }
}, lae = (e, n, a, s, u) => {
  switch (a.type) {
    case "year":
      return e.setYear(u, e.getYear(s));
    case "month":
      return e.setMonth(u, e.getMonth(s));
    case "weekDay": {
      const d = ix(e, n, a.format), p = e.formatByString(s, a.format), h = d.indexOf(p), b = d.indexOf(a.value) - h;
      return e.addDays(s, b);
    }
    case "day":
      return e.setDate(u, e.getDate(s));
    case "meridiem": {
      const d = e.getHours(s) < 12, p = e.getHours(u);
      return d && p >= 12 ? e.addHours(u, -12) : !d && p < 12 ? e.addHours(u, 12) : u;
    }
    case "hours":
      return e.setHours(u, e.getHours(s));
    case "minutes":
      return e.setMinutes(u, e.getMinutes(s));
    case "seconds":
      return e.setSeconds(u, e.getSeconds(s));
    default:
      return u;
  }
}, b$ = {
  year: 1,
  month: 2,
  day: 3,
  weekDay: 4,
  hours: 5,
  minutes: 6,
  seconds: 7,
  meridiem: 8
}, y$ = (e, n, a, s, u, d) => (
  // cloning sections before sort to avoid mutating it
  [...s].sort((p, h) => b$[p.type] - b$[h.type]).reduce((p, h) => !d || h.modified ? lae(e, n, h, a, p) : p, u)
), cae = () => navigator.userAgent.toLowerCase().indexOf("android") > -1, uae = (e, n) => {
  const a = {};
  if (!n)
    return e.forEach((g, b) => {
      const x = b === 0 ? null : b - 1, S = b === e.length - 1 ? null : b + 1;
      a[b] = {
        leftIndex: x,
        rightIndex: S
      };
    }), {
      neighbors: a,
      startIndex: 0,
      endIndex: e.length - 1
    };
  const s = {}, u = {};
  let d = 0, p = 0, h = e.length - 1;
  for (; h >= 0; ) {
    p = e.findIndex(
      // eslint-disable-next-line @typescript-eslint/no-loop-func
      (g, b) => {
        var x;
        return b >= d && ((x = g.endSeparator) == null ? void 0 : x.includes(" ")) && // Special case where the spaces were not there in the initial input
        g.endSeparator !== " / ";
      }
    ), p === -1 && (p = e.length - 1);
    for (let g = p; g >= d; g -= 1)
      u[g] = h, s[h] = g, h -= 1;
    d = p + 1;
  }
  return e.forEach((g, b) => {
    const x = u[b], S = x === 0 ? null : s[x - 1], E = x === e.length - 1 ? null : s[x + 1];
    a[b] = {
      leftIndex: S,
      rightIndex: E
    };
  }), {
    neighbors: a,
    startIndex: s[0],
    endIndex: s[e.length - 1]
  };
}, dae = ["value", "referenceDate"], Oo = {
  emptyValue: null,
  getTodayValue: z1,
  getInitialReferenceValue: (e) => {
    let {
      value: n,
      referenceDate: a
    } = e, s = le(e, dae);
    return n != null && s.utils.isValid(n) ? n : a ?? eae(s);
  },
  cleanValue: Ire,
  areValuesEqual: Are,
  isSameError: (e, n) => e === n,
  hasError: (e) => e != null,
  defaultErrorState: null,
  getTimezone: (e, n) => n == null || !e.isValid(n) ? null : e.getTimezone(n),
  setTimezone: (e, n, a) => a == null ? null : e.setTimezone(a, n)
}, H1 = {
  updateReferenceValue: (e, n, a) => n == null || !e.isValid(n) ? a : n,
  getSectionsFromValue: (e, n, a, s, u) => !e.isValid(n) && !!a ? a : P_(u(n), s),
  getValueStrFromSections: iae,
  getActiveDateManager: (e, n) => ({
    date: n.value,
    referenceDate: n.referenceValue,
    getSections: (a) => a,
    getNewValuesFromNewActiveDate: (a) => ({
      value: a,
      referenceValue: a == null || !e.isValid(a) ? n.referenceValue : a
    })
  }),
  parseValueStr: (e, n, a) => a(e.trim(), n)
}, Ag = (e) => {
  if (e !== void 0)
    return Object.keys(e).reduce((n, a) => y({}, n, {
      [`${a.slice(0, 1).toLowerCase()}${a.slice(1)}`]: e[a]
    }), {});
}, W1 = ({
  value: e,
  referenceDate: n,
  utils: a,
  props: s,
  timezone: u
}) => {
  const d = k.useMemo(
    () => Oo.getInitialReferenceValue({
      value: e,
      utils: a,
      props: s,
      referenceDate: n,
      granularity: Zi.day,
      timezone: u,
      getTodayDate: () => z1(a, u, "date")
    }),
    // We only want to compute the reference date on mount.
    []
    // eslint-disable-line react-hooks/exhaustive-deps
  );
  return e ?? d;
}, pae = ["ampm", "ampmInClock", "autoFocus", "components", "componentsProps", "slots", "slotProps", "value", "defaultValue", "referenceDate", "disableIgnoringDatePartForTimeValidation", "maxTime", "minTime", "disableFuture", "disablePast", "minutesStep", "shouldDisableClock", "shouldDisableTime", "showViewSwitcher", "onChange", "view", "views", "openTo", "onViewChange", "focusedView", "onFocusedViewChange", "className", "disabled", "readOnly", "timezone"], fae = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"],
    arrowSwitcher: ["arrowSwitcher"]
  }, x_, n);
}, mae = J(ax, {
  name: "MuiTimeClock",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({
  display: "flex",
  flexDirection: "column",
  position: "relative"
}), hae = J(y_, {
  name: "MuiTimeClock",
  slot: "ArrowSwitcher",
  overridesResolver: (e, n) => n.arrowSwitcher
})({
  position: "absolute",
  right: 12,
  top: 15
}), vae = ["hours", "minutes"], Y1 = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = dn(), u = Ie({
    props: n,
    name: "MuiTimeClock"
  }), {
    ampm: d = s.is12HourCycleInCurrentLocale(),
    ampmInClock: p = !1,
    autoFocus: h,
    components: g,
    componentsProps: b,
    slots: x,
    slotProps: S,
    value: E,
    defaultValue: R,
    referenceDate: $,
    disableIgnoringDatePartForTimeValidation: M = !1,
    maxTime: O,
    minTime: N,
    disableFuture: V,
    disablePast: I,
    minutesStep: z = 1,
    shouldDisableClock: B,
    shouldDisableTime: P,
    showViewSwitcher: F,
    onChange: H,
    view: U,
    views: Q = vae,
    openTo: Y,
    onViewChange: te,
    focusedView: Z,
    onFocusedViewChange: q,
    className: X,
    disabled: oe,
    readOnly: ie,
    timezone: K
  } = u, ne = le(u, pae), se = x ?? Ag(g), ze = S ?? b, {
    value: Ue,
    handleValueChange: Oe,
    timezone: ue
  } = rm({
    name: "TimeClock",
    timezone: K,
    value: E,
    defaultValue: R,
    onChange: H,
    valueManager: Oo
  }), xe = W1({
    value: Ue,
    referenceDate: $,
    utils: s,
    props: u,
    timezone: ue
  }), me = pr(), Se = Nd(ue), {
    view: ce,
    setView: Le,
    previousView: Ze,
    nextView: Ee,
    setValueAndGoToNextView: Ae
  } = Lg({
    view: U,
    views: Q,
    openTo: Y,
    onViewChange: te,
    onChange: Oe,
    focusedView: Z,
    onFocusedViewChange: q
  }), {
    meridiemMode: Ce,
    handleMeridiemChange: ae
  } = ox(xe, d, Ae), Pe = k.useCallback((ge, ve) => {
    const qe = Ng(M, s), vt = ve === "hours" || ve === "minutes" && Q.includes("seconds"), yt = ({
      start: bt,
      end: wt
    }) => !(N && qe(N, wt) || O && qe(bt, O) || V && qe(bt, Se) || I && qe(Se, vt ? wt : bt)), Mt = (bt, wt = 1) => {
      if (bt % wt !== 0 || B != null && B(bt, ve))
        return !1;
      if (P)
        switch (ve) {
          case "hours":
            return !P(s.setHours(xe, bt), "hours");
          case "minutes":
            return !P(s.setMinutes(xe, bt), "minutes");
          case "seconds":
            return !P(s.setSeconds(xe, bt), "seconds");
          default:
            return !1;
        }
      return !0;
    };
    switch (ve) {
      case "hours": {
        const bt = hg(ge, Ce, d), wt = s.setHours(xe, bt), we = s.setSeconds(s.setMinutes(wt, 0), 0), Re = s.setSeconds(s.setMinutes(wt, 59), 59);
        return !yt({
          start: we,
          end: Re
        }) || !Mt(bt);
      }
      case "minutes": {
        const bt = s.setMinutes(xe, ge), wt = s.setSeconds(bt, 0), we = s.setSeconds(bt, 59);
        return !yt({
          start: wt,
          end: we
        }) || !Mt(ge, z);
      }
      case "seconds": {
        const bt = s.setSeconds(xe, ge);
        return !yt({
          start: bt,
          end: bt
        }) || !Mt(ge);
      }
      default:
        throw new Error("not supported");
    }
  }, [d, xe, M, O, Ce, N, z, B, P, s, V, I, Se, Q]), ke = pa(), pt = k.useMemo(() => {
    switch (ce) {
      case "hours": {
        const ge = (ve, qe) => {
          const vt = hg(ve, Ce, d);
          Ae(s.setHours(xe, vt), qe);
        };
        return {
          onChange: ge,
          viewValue: s.getHours(xe),
          children: Zre({
            value: Ue,
            utils: s,
            ampm: d,
            onChange: ge,
            getClockNumberText: me.hoursClockNumberText,
            isDisabled: (ve) => oe || Pe(ve, "hours"),
            selectedId: ke
          })
        };
      }
      case "minutes": {
        const ge = s.getMinutes(xe), ve = (qe, vt) => {
          Ae(s.setMinutes(xe, qe), vt);
        };
        return {
          viewValue: ge,
          onChange: ve,
          children: f$({
            utils: s,
            value: ge,
            onChange: ve,
            getClockNumberText: me.minutesClockNumberText,
            isDisabled: (qe) => oe || Pe(qe, "minutes"),
            selectedId: ke
          })
        };
      }
      case "seconds": {
        const ge = s.getSeconds(xe), ve = (qe, vt) => {
          Ae(s.setSeconds(xe, qe), vt);
        };
        return {
          viewValue: ge,
          onChange: ve,
          children: f$({
            utils: s,
            value: ge,
            onChange: ve,
            getClockNumberText: me.secondsClockNumberText,
            isDisabled: (qe) => oe || Pe(qe, "seconds"),
            selectedId: ke
          })
        };
      }
      default:
        throw new Error("You must provide the type for ClockView");
    }
  }, [ce, s, Ue, d, me.hoursClockNumberText, me.minutesClockNumberText, me.secondsClockNumberText, Ce, Ae, xe, Pe, ke, oe]), _e = u, dt = fae(_e);
  return /* @__PURE__ */ st(mae, y({
    ref: a,
    className: fe(dt.root, X),
    ownerState: _e
  }, ne, {
    children: [/* @__PURE__ */ _(qre, y({
      autoFocus: h ?? !!Z,
      ampmInClock: p && Q.includes("hours"),
      value: Ue,
      type: ce,
      ampm: d,
      minutesStep: z,
      isTimeDisabled: Pe,
      meridiemMode: Ce,
      handleMeridiemChange: ae,
      selectedId: ke,
      disabled: oe,
      readOnly: ie
    }, pt)), F && /* @__PURE__ */ _(hae, {
      className: dt.arrowSwitcher,
      slots: se,
      slotProps: ze,
      onGoToPrevious: () => Le(Ze),
      isPreviousDisabled: !Ze,
      previousLabel: me.openPreviousView,
      onGoToNext: () => Le(Ee),
      isNextDisabled: !Ee,
      nextLabel: me.openNextView,
      ownerState: _e
    })]
  }));
});
process.env.NODE_ENV !== "production" && (Y1.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default `utils.is12HourCycleInCurrentLocale()`
   */
  ampm: t.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default false
   */
  ampmInClock: t.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  className: t.string,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the picker views and text field are disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * Controlled focused view.
   */
  focusedView: t.oneOf(["hours", "minutes", "seconds"]),
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: t.any,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: t.any,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: t.number,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TView The view type. Will be one of date or time views.
   * @param {TValue} value The new value.
   * @param {PickerSelectionState | undefined} selectionState Indicates if the date selection is complete.
   * @param {TView | undefined} selectedView Indicates the view in which the selection has been made.
   */
  onChange: t.func,
  /**
   * Callback fired on focused view change.
   * @template TView
   * @param {TView} view The new view to focus or not.
   * @param {boolean} hasFocus `true` if the view should be focused.
   */
  onFocusedViewChange: t.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: t.func,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: t.oneOf(["hours", "minutes", "seconds"]),
  /**
   * If `true`, the picker views and text field are read-only.
   * @default false
   */
  readOnly: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid time using the validation props, except callbacks such as `shouldDisableTime`.
   */
  referenceDate: t.any,
  /**
   * Disable specific clock time.
   * @param {number} clockValue The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   * @deprecated Consider using `shouldDisableTime`.
   */
  shouldDisableClock: t.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: t.func,
  showViewSwitcher: t.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: t.oneOf(["hours", "minutes", "seconds"]),
  /**
   * Available views.
   * @default ['hours', 'minutes']
   */
  views: t.arrayOf(t.oneOf(["hours", "minutes", "seconds"]).isRequired)
});
function $_(e) {
  return We("MuiDigitalClock", e);
}
const N_ = Ye("MuiDigitalClock", ["root", "list", "item"]), gae = ["ampm", "timeStep", "autoFocus", "components", "componentsProps", "slots", "slotProps", "value", "defaultValue", "referenceDate", "disableIgnoringDatePartForTimeValidation", "maxTime", "minTime", "disableFuture", "disablePast", "minutesStep", "shouldDisableClock", "shouldDisableTime", "onChange", "view", "openTo", "onViewChange", "focusedView", "onFocusedViewChange", "className", "disabled", "readOnly", "views", "skipDisabled", "timezone"], bae = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"],
    list: ["list"],
    item: ["item"]
  }, $_, n);
}, yae = J(ax, {
  name: "MuiDigitalClock",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(({
  ownerState: e
}) => ({
  overflowY: "auto",
  width: "100%",
  "@media (prefers-reduced-motion: no-preference)": {
    scrollBehavior: e.alreadyRendered ? "smooth" : "auto"
  },
  maxHeight: T_
})), Cae = J(k1, {
  name: "MuiDigitalClock",
  slot: "List",
  overridesResolver: (e, n) => n.list
})({
  padding: 0
}), Tae = J(w1, {
  name: "MuiDigitalClock",
  slot: "Item",
  overridesResolver: (e, n) => n.item
})(({
  theme: e
}) => ({
  padding: "8px 16px",
  margin: "2px 4px",
  "&:first-of-type": {
    marginTop: 4
  },
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Kr(e.palette.primary.main, e.palette.action.hoverOpacity)
  },
  "&.Mui-selected": {
    backgroundColor: (e.vars || e).palette.primary.main,
    color: (e.vars || e).palette.primary.contrastText,
    "&:focus-visible, &:hover": {
      backgroundColor: (e.vars || e).palette.primary.dark
    }
  },
  "&.Mui-focusVisible": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.focusOpacity})` : Kr(e.palette.primary.main, e.palette.action.focusOpacity)
  }
})), q1 = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d;
  const p = dn(), h = k.useRef(null), g = cn(a, h), b = Ie({
    props: n,
    name: "MuiDigitalClock"
  }), {
    ampm: x = p.is12HourCycleInCurrentLocale(),
    timeStep: S = 30,
    autoFocus: E,
    components: R,
    componentsProps: $,
    slots: M,
    slotProps: O,
    value: N,
    defaultValue: V,
    referenceDate: I,
    disableIgnoringDatePartForTimeValidation: z = !1,
    maxTime: B,
    minTime: P,
    disableFuture: F,
    disablePast: H,
    minutesStep: U = 1,
    shouldDisableClock: Q,
    shouldDisableTime: Y,
    onChange: te,
    view: Z,
    openTo: q,
    onViewChange: X,
    focusedView: oe,
    onFocusedViewChange: ie,
    className: K,
    disabled: ne,
    readOnly: se,
    views: ze = ["hours"],
    skipDisabled: Ue = !1,
    timezone: Oe
  } = b, ue = le(b, gae), {
    value: xe,
    handleValueChange: me,
    timezone: Se
  } = rm({
    name: "DigitalClock",
    timezone: Oe,
    value: N,
    defaultValue: V,
    onChange: te,
    valueManager: Oo
  }), ce = pr(), Le = Nd(Se), Ze = k.useMemo(() => y({}, b, {
    alreadyRendered: !!h.current
  }), [b]), Ee = bae(Ze), Ae = (s = (u = M == null ? void 0 : M.digitalClockItem) != null ? u : R == null ? void 0 : R.DigitalClockItem) != null ? s : Tae, Ce = rn({
    elementType: Ae,
    externalSlotProps: (d = O == null ? void 0 : O.digitalClockItem) != null ? d : $ == null ? void 0 : $.digitalClockItem,
    ownerState: {},
    className: Ee.item
  }), ae = W1({
    value: xe,
    referenceDate: I,
    utils: p,
    props: b,
    timezone: Se
  }), Pe = kt((ge) => me(ge, "finish", "hours")), {
    setValueAndGoToNextView: ke
  } = Lg({
    view: Z,
    views: ze,
    openTo: q,
    onViewChange: X,
    onChange: Pe,
    focusedView: oe,
    onFocusedViewChange: ie
  }), pt = kt((ge) => {
    ke(ge, "finish");
  });
  k.useEffect(() => {
    if (h.current === null)
      return;
    const ge = h.current.querySelector('[role="listbox"] [role="option"][aria-selected="true"]');
    if (!ge)
      return;
    const ve = ge.offsetTop;
    h.current.scrollTop = ve - 4;
  });
  const _e = k.useCallback((ge) => {
    const ve = Ng(z, p), qe = () => !(P && ve(P, ge) || B && ve(ge, B) || F && ve(ge, Le) || H && ve(Le, ge)), vt = () => p.getMinutes(ge) % U !== 0 || Q != null && Q(p.toJsDate(ge).getTime(), "hours") ? !1 : Y ? !Y(ge, "hours") : !0;
    return !qe() || !vt();
  }, [z, p, P, B, F, Le, H, U, Q, Y]), dt = k.useMemo(() => {
    const ge = p.startOfDay(ae);
    return [ge, ...Array.from({
      length: Math.ceil(24 * 60 / S) - 1
    }, (ve, qe) => p.addMinutes(ge, S * (qe + 1)))];
  }, [ae, S, p]);
  return /* @__PURE__ */ _(yae, y({
    ref: g,
    className: fe(Ee.root, K),
    ownerState: Ze
  }, ue, {
    children: /* @__PURE__ */ _(Cae, {
      autoFocusItem: E || !!oe,
      role: "listbox",
      "aria-label": ce.timePickerToolbarTitle,
      className: Ee.list,
      children: dt.map((ge) => {
        if (Ue && _e(ge))
          return null;
        const ve = p.isEqual(ge, xe);
        return /* @__PURE__ */ _(Ae, y({
          onClick: () => !se && pt(ge),
          selected: ve,
          disabled: ne || _e(ge),
          disableRipple: se,
          role: "option",
          "aria-disabled": se,
          "aria-selected": ve
        }, Ce, {
          children: p.format(ge, x ? "fullTime12h" : "fullTime24h")
        }), p.toISO(ge));
      })
    })
  }));
});
process.env.NODE_ENV !== "production" && (q1.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default `utils.is12HourCycleInCurrentLocale()`
   */
  ampm: t.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  className: t.string,
  /**
   * Overrideable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the picker views and text field are disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * Controlled focused view.
   */
  focusedView: t.oneOf(["hours"]),
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: t.any,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: t.any,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: t.number,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TView The view type. Will be one of date or time views.
   * @param {TValue} value The new value.
   * @param {PickerSelectionState | undefined} selectionState Indicates if the date selection is complete.
   * @param {TView | undefined} selectedView Indicates the view in which the selection has been made.
   */
  onChange: t.func,
  /**
   * Callback fired on focused view change.
   * @template TView
   * @param {TView} view The new view to focus or not.
   * @param {boolean} hasFocus `true` if the view should be focused.
   */
  onFocusedViewChange: t.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: t.func,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: t.oneOf(["hours"]),
  /**
   * If `true`, the picker views and text field are read-only.
   * @default false
   */
  readOnly: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid time using the validation props, except callbacks such as `shouldDisableTime`.
   */
  referenceDate: t.any,
  /**
   * Disable specific clock time.
   * @param {number} clockValue The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   * @deprecated Consider using `shouldDisableTime`.
   */
  shouldDisableClock: t.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: t.func,
  /**
   * If `true`, disabled digital clock items will not be rendered.
   * @default false
   */
  skipDisabled: t.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overrideable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The time steps between two time options.
   * For example, if `timeStep = 45`, then the available time options will be `[00:00, 00:45, 01:30, 02:15, 03:00, etc.]`.
   * @default 30
   */
  timeStep: t.number,
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: t.oneOf(["hours"]),
  /**
   * Available views.
   * @default ['hours']
   */
  views: t.arrayOf(t.oneOf(["hours"]))
});
function L_(e) {
  return We("MuiMultiSectionDigitalClock", e);
}
const xae = Ye("MuiMultiSectionDigitalClock", ["root"]);
function Sae(e) {
  return We("MuiMultiSectionDigitalClockSection", e);
}
const I_ = Ye("MuiMultiSectionDigitalClockSection", ["root", "item"]), kae = ["autoFocus", "onChange", "className", "disabled", "readOnly", "items", "active", "slots", "slotProps", "skipDisabled"], wae = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"],
    item: ["item"]
  }, Sae, n);
}, Rae = J(k1, {
  name: "MuiMultiSectionDigitalClockSection",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(({
  theme: e,
  ownerState: n
}) => ({
  maxHeight: T_,
  width: 56,
  padding: 0,
  overflow: "hidden",
  "@media (prefers-reduced-motion: no-preference)": {
    scrollBehavior: n.alreadyRendered ? "smooth" : "auto"
  },
  "@media (pointer: fine)": {
    "&:hover": {
      overflowY: "auto"
    }
  },
  "@media (pointer: none), (pointer: coarse)": {
    overflowY: "auto"
  },
  "&:not(:first-of-type)": {
    borderLeft: `1px solid ${(e.vars || e).palette.divider}`
  },
  "&:after": {
    display: "block",
    content: '""',
    // subtracting the height of one item, extra margin and borders to make sure the max height is correct
    height: "calc(100% - 40px - 6px)"
  }
})), Eae = J(w1, {
  name: "MuiMultiSectionDigitalClockSection",
  slot: "Item",
  overridesResolver: (e, n) => n.item
})(({
  theme: e
}) => ({
  padding: 8,
  margin: "2px 4px",
  width: Wv,
  justifyContent: "center",
  "&:first-of-type": {
    marginTop: 4
  },
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Kr(e.palette.primary.main, e.palette.action.hoverOpacity)
  },
  "&.Mui-selected": {
    backgroundColor: (e.vars || e).palette.primary.main,
    color: (e.vars || e).palette.primary.contrastText,
    "&:focus-visible, &:hover": {
      backgroundColor: (e.vars || e).palette.primary.dark
    }
  },
  "&.Mui-focusVisible": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.focusOpacity})` : Kr(e.palette.primary.main, e.palette.action.focusOpacity)
  }
})), Oae = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s;
  const u = k.useRef(null), d = cn(a, u), p = k.useRef(null), h = Ie({
    props: n,
    name: "MuiMultiSectionDigitalClockSection"
  }), {
    autoFocus: g,
    onChange: b,
    className: x,
    disabled: S,
    readOnly: E,
    items: R,
    active: $,
    slots: M,
    slotProps: O,
    skipDisabled: N
  } = h, V = le(h, kae), I = k.useMemo(() => y({}, h, {
    alreadyRendered: !!u.current
  }), [h]), z = wae(I), B = (s = M == null ? void 0 : M.digitalClockSectionItem) != null ? s : Eae;
  return k.useEffect(() => {
    if (u.current === null)
      return;
    const P = u.current.querySelector('[role="option"][aria-selected="true"]');
    if ($ && g && P && P.focus(), !P || p.current === P)
      return;
    p.current = P;
    const F = P.offsetTop;
    u.current.scrollTop = F - 4;
  }), /* @__PURE__ */ _(Rae, y({
    ref: d,
    className: fe(z.root, x),
    ownerState: I,
    autoFocusItem: g && $,
    role: "listbox"
  }, V, {
    children: R.map((P) => {
      var F, H;
      if (N && (F = P.isDisabled) != null && F.call(P, P.value))
        return null;
      const U = P.isSelected(P.value);
      return /* @__PURE__ */ _(B, y({
        onClick: () => !E && b(P.value),
        selected: U,
        disabled: S || ((H = P.isDisabled) == null ? void 0 : H.call(P, P.value)),
        disableRipple: E,
        role: "option",
        "aria-disabled": E,
        "aria-label": P.ariaLabel,
        "aria-selected": U,
        className: z.item
      }, O == null ? void 0 : O.digitalClockSectionItem, {
        children: P.label
      }), P.label);
    })
  }));
}), Pae = ({
  now: e,
  value: n,
  utils: a,
  ampm: s,
  isDisabled: u,
  resolveAriaLabel: d,
  timeStep: p
}) => {
  const h = n ? a.getHours(n) : null, g = [], b = (S) => h === null ? !1 : s ? S === 12 ? h === 12 || h === 0 : h === S || h - 12 === S : h === S, x = s ? 11 : 23;
  for (let S = 0; S <= x; S += p) {
    let E = a.format(a.setHours(e, S), s ? "hours12h" : "hours24h");
    const R = d(parseInt(E, 10).toString());
    E = a.formatNumber(E), g.push({
      value: S,
      label: E,
      isSelected: b,
      isDisabled: u,
      ariaLabel: R
    });
  }
  return g;
}, C$ = ({
  value: e,
  utils: n,
  isDisabled: a,
  timeStep: s,
  resolveLabel: u,
  resolveAriaLabel: d,
  hasValue: p = !0
}) => {
  const h = (g) => e === null ? !1 : p && e === g;
  return [...Array.from({
    length: Math.ceil(60 / s)
  }, (g, b) => {
    const x = s * b;
    return {
      value: x,
      label: n.formatNumber(u(x)),
      isDisabled: a,
      isSelected: h,
      ariaLabel: d(x.toString())
    };
  })];
}, Dae = ["ampm", "timeSteps", "autoFocus", "components", "componentsProps", "slots", "slotProps", "value", "defaultValue", "referenceDate", "disableIgnoringDatePartForTimeValidation", "maxTime", "minTime", "disableFuture", "disablePast", "minutesStep", "shouldDisableClock", "shouldDisableTime", "onChange", "view", "views", "openTo", "onViewChange", "focusedView", "onFocusedViewChange", "className", "disabled", "readOnly", "skipDisabled", "timezone"], Mae = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"]
  }, L_, n);
}, $ae = J(ax, {
  name: "MuiMultiSectionDigitalClock",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(({
  theme: e
}) => ({
  display: "flex",
  flexDirection: "row",
  width: "100%",
  borderBottom: `1px solid ${(e.vars || e).palette.divider}`
})), G1 = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = dn(), u = Ie({
    props: n,
    name: "MuiMultiSectionDigitalClock"
  }), {
    ampm: d = s.is12HourCycleInCurrentLocale(),
    timeSteps: p,
    autoFocus: h,
    components: g,
    componentsProps: b,
    slots: x,
    slotProps: S,
    value: E,
    defaultValue: R,
    referenceDate: $,
    disableIgnoringDatePartForTimeValidation: M = !1,
    maxTime: O,
    minTime: N,
    disableFuture: V,
    disablePast: I,
    minutesStep: z = 1,
    shouldDisableClock: B,
    shouldDisableTime: P,
    onChange: F,
    view: H,
    views: U = ["hours", "minutes"],
    openTo: Q,
    onViewChange: Y,
    focusedView: te,
    onFocusedViewChange: Z,
    className: q,
    disabled: X,
    readOnly: oe,
    skipDisabled: ie = !1,
    timezone: K
  } = u, ne = le(u, Dae), {
    value: se,
    handleValueChange: ze,
    timezone: Ue
  } = rm({
    name: "MultiSectionDigitalClock",
    timezone: K,
    value: E,
    defaultValue: R,
    onChange: F,
    valueManager: Oo
  }), Oe = pr(), ue = Nd(Ue), xe = k.useMemo(() => y({
    hours: 1,
    minutes: 5,
    seconds: 5
  }, p), [p]), me = W1({
    value: se,
    referenceDate: $,
    utils: s,
    props: u,
    timezone: Ue
  }), Se = kt((ge, ve, qe) => ze(ge, ve, qe)), ce = k.useMemo(() => !d || !U.includes("hours") || U.includes("meridiem") ? U : [...U, "meridiem"], [d, U]), {
    view: Le,
    setValueAndGoToNextView: Ze,
    focusedView: Ee
  } = Lg({
    view: H,
    views: ce,
    openTo: Q,
    onViewChange: Y,
    onChange: Se,
    focusedView: te,
    onFocusedViewChange: Z
  }), Ae = kt((ge) => {
    Ze(ge, "finish", "meridiem");
  }), {
    meridiemMode: Ce,
    handleMeridiemChange: ae
  } = ox(me, d, Ae, "finish"), Pe = k.useCallback((ge, ve) => {
    const qe = Ng(M, s), vt = ve === "hours" || ve === "minutes" && ce.includes("seconds"), yt = ({
      start: bt,
      end: wt
    }) => !(N && qe(N, wt) || O && qe(bt, O) || V && qe(bt, ue) || I && qe(ue, vt ? wt : bt)), Mt = (bt, wt = 1) => {
      if (bt % wt !== 0 || B != null && B(bt, ve))
        return !1;
      if (P)
        switch (ve) {
          case "hours":
            return !P(s.setHours(me, bt), "hours");
          case "minutes":
            return !P(s.setMinutes(me, bt), "minutes");
          case "seconds":
            return !P(s.setSeconds(me, bt), "seconds");
          default:
            return !1;
        }
      return !0;
    };
    switch (ve) {
      case "hours": {
        const bt = hg(ge, Ce, d), wt = s.setHours(me, bt), we = s.setSeconds(s.setMinutes(wt, 0), 0), Re = s.setSeconds(s.setMinutes(wt, 59), 59);
        return !yt({
          start: we,
          end: Re
        }) || !Mt(bt);
      }
      case "minutes": {
        const bt = s.setMinutes(me, ge), wt = s.setSeconds(bt, 0), we = s.setSeconds(bt, 59);
        return !yt({
          start: wt,
          end: we
        }) || !Mt(ge, z);
      }
      case "seconds": {
        const bt = s.setSeconds(me, ge);
        return !yt({
          start: bt,
          end: bt
        }) || !Mt(ge);
      }
      default:
        throw new Error("not supported");
    }
  }, [d, me, M, O, Ce, N, z, B, P, s, V, I, ue, ce]), ke = k.useCallback((ge) => {
    switch (ge) {
      case "hours":
        return {
          onChange: (ve) => {
            const qe = hg(ve, Ce, d);
            Ze(s.setHours(me, qe), "finish", "hours");
          },
          items: Pae({
            now: ue,
            value: se,
            ampm: d,
            utils: s,
            isDisabled: (ve) => X || Pe(ve, "hours"),
            timeStep: xe.hours,
            resolveAriaLabel: Oe.hoursClockNumberText
          })
        };
      case "minutes":
        return {
          onChange: (ve) => {
            Ze(s.setMinutes(me, ve), "finish", "minutes");
          },
          items: C$({
            value: s.getMinutes(me),
            utils: s,
            isDisabled: (ve) => X || Pe(ve, "minutes"),
            resolveLabel: (ve) => s.format(s.setMinutes(ue, ve), "minutes"),
            timeStep: xe.minutes,
            hasValue: !!se,
            resolveAriaLabel: Oe.minutesClockNumberText
          })
        };
      case "seconds":
        return {
          onChange: (ve) => {
            Ze(s.setSeconds(me, ve), "finish", "seconds");
          },
          items: C$({
            value: s.getSeconds(me),
            utils: s,
            isDisabled: (ve) => X || Pe(ve, "seconds"),
            resolveLabel: (ve) => s.format(s.setSeconds(ue, ve), "seconds"),
            timeStep: xe.seconds,
            hasValue: !!se,
            resolveAriaLabel: Oe.secondsClockNumberText
          })
        };
      case "meridiem": {
        const ve = es(s, "am"), qe = es(s, "pm");
        return {
          onChange: ae,
          items: [{
            value: "am",
            label: ve,
            isSelected: () => !!se && Ce === "am",
            ariaLabel: ve
          }, {
            value: "pm",
            label: qe,
            isSelected: () => !!se && Ce === "pm",
            ariaLabel: qe
          }]
        };
      }
      default:
        throw new Error(`Unknown view: ${ge} found.`);
    }
  }, [ue, se, d, s, xe.hours, xe.minutes, xe.seconds, Oe.hoursClockNumberText, Oe.minutesClockNumberText, Oe.secondsClockNumberText, Ce, Ze, me, X, Pe, ae]), pt = k.useMemo(() => ce.reduce((ge, ve) => y({}, ge, {
    [ve]: ke(ve)
  }), {}), [ce, ke]), _e = u, dt = Mae(_e);
  return /* @__PURE__ */ _($ae, y({
    ref: a,
    className: fe(dt.root, q),
    ownerState: _e,
    role: "group"
  }, ne, {
    children: Object.entries(pt).map(([ge, ve]) => /* @__PURE__ */ _(Oae, {
      items: ve.items,
      onChange: ve.onChange,
      active: Le === ge,
      autoFocus: h ?? Ee === ge,
      disabled: X,
      readOnly: oe,
      slots: x ?? g,
      slotProps: S ?? b,
      skipDisabled: ie,
      "aria-label": Oe.selectViewText(ge)
    }, ge))
  }));
});
process.env.NODE_ENV !== "production" && (G1.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default `utils.is12HourCycleInCurrentLocale()`
   */
  ampm: t.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  className: t.string,
  /**
   * Overrideable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the picker views and text field are disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * Controlled focused view.
   */
  focusedView: t.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: t.any,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: t.any,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: t.number,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TView The view type. Will be one of date or time views.
   * @param {TValue} value The new value.
   * @param {PickerSelectionState | undefined} selectionState Indicates if the date selection is complete.
   * @param {TView | undefined} selectedView Indicates the view in which the selection has been made.
   */
  onChange: t.func,
  /**
   * Callback fired on focused view change.
   * @template TView
   * @param {TView} view The new view to focus or not.
   * @param {boolean} hasFocus `true` if the view should be focused.
   */
  onFocusedViewChange: t.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: t.func,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: t.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * If `true`, the picker views and text field are read-only.
   * @default false
   */
  readOnly: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid time using the validation props, except callbacks such as `shouldDisableTime`.
   */
  referenceDate: t.any,
  /**
   * Disable specific clock time.
   * @param {number} clockValue The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   * @deprecated Consider using `shouldDisableTime`.
   */
  shouldDisableClock: t.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: t.func,
  /**
   * If `true`, disabled digital clock items will not be rendered.
   * @default false
   */
  skipDisabled: t.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overrideable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * The time steps between two time unit options.
   * For example, if `timeStep.minutes = 8`, then the available minute options will be `[0, 8, 16, 24, 32, 40, 48, 56]`.
   * @default{ hours: 1, minutes: 5, seconds: 5 }
   */
  timeSteps: t.shape({
    hours: t.number,
    minutes: t.number,
    seconds: t.number
  }),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: t.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * Available views.
   * @default ['hours', 'minutes']
   */
  views: t.arrayOf(t.oneOf(["hours", "meridiem", "minutes", "seconds"]).isRequired)
});
function A_(e) {
  return We("MuiPickersDay", e);
}
const Zc = Ye("MuiPickersDay", ["root", "dayWithMargin", "dayOutsideMonth", "hiddenDaySpacingFiller", "today", "selected", "disabled"]), Nae = ["autoFocus", "className", "day", "disabled", "disableHighlightToday", "disableMargin", "hidden", "isAnimating", "onClick", "onDaySelect", "onFocus", "onBlur", "onKeyDown", "onMouseDown", "onMouseEnter", "outsideCurrentMonth", "selected", "showDaysOutsideCurrentMonth", "children", "today", "isFirstVisibleCell", "isLastVisibleCell"], Lae = (e) => {
  const {
    selected: n,
    disableMargin: a,
    disableHighlightToday: s,
    today: u,
    disabled: d,
    outsideCurrentMonth: p,
    showDaysOutsideCurrentMonth: h,
    classes: g
  } = e, b = p && !h;
  return He({
    root: ["root", n && !b && "selected", d && "disabled", !a && "dayWithMargin", !s && u && "today", p && h && "dayOutsideMonth", b && "hiddenDaySpacingFiller"],
    hiddenDaySpacingFiller: ["hiddenDaySpacingFiller"]
  }, A_, g);
}, __ = ({
  theme: e,
  ownerState: n
}) => y({}, e.typography.caption, {
  width: Od,
  height: Od,
  borderRadius: "50%",
  padding: 0,
  // explicitly setting to `transparent` to avoid potentially getting impacted by change from the overridden component
  backgroundColor: "transparent",
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.short
  }),
  color: (e.vars || e).palette.text.primary,
  "@media (pointer: fine)": {
    "&:hover": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Kr(e.palette.primary.main, e.palette.action.hoverOpacity)
    }
  },
  "&:focus": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.focusOpacity})` : Kr(e.palette.primary.main, e.palette.action.focusOpacity),
    [`&.${Zc.selected}`]: {
      willChange: "background-color",
      backgroundColor: (e.vars || e).palette.primary.dark
    }
  },
  [`&.${Zc.selected}`]: {
    color: (e.vars || e).palette.primary.contrastText,
    backgroundColor: (e.vars || e).palette.primary.main,
    fontWeight: e.typography.fontWeightMedium,
    "&:hover": {
      willChange: "background-color",
      backgroundColor: (e.vars || e).palette.primary.dark
    }
  },
  [`&.${Zc.disabled}:not(.${Zc.selected})`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${Zc.disabled}&.${Zc.selected}`]: {
    opacity: 0.6
  }
}, !n.disableMargin && {
  margin: `0 ${om}px`
}, n.outsideCurrentMonth && n.showDaysOutsideCurrentMonth && {
  color: (e.vars || e).palette.text.secondary
}, !n.disableHighlightToday && n.today && {
  [`&:not(.${Zc.selected})`]: {
    border: `1px solid ${(e.vars || e).palette.text.secondary}`
  }
}), V_ = (e, n) => {
  const {
    ownerState: a
  } = e;
  return [n.root, !a.disableMargin && n.dayWithMargin, !a.disableHighlightToday && a.today && n.today, !a.outsideCurrentMonth && a.showDaysOutsideCurrentMonth && n.dayOutsideMonth, a.outsideCurrentMonth && !a.showDaysOutsideCurrentMonth && n.hiddenDaySpacingFiller];
}, Iae = J(Zo, {
  name: "MuiPickersDay",
  slot: "Root",
  overridesResolver: V_
})(__), Aae = J("div", {
  name: "MuiPickersDay",
  slot: "Root",
  overridesResolver: V_
})(({
  theme: e,
  ownerState: n
}) => y({}, __({
  theme: e,
  ownerState: n
}), {
  // visibility: 'hidden' does not work here as it hides the element from screen readers as well
  opacity: 0,
  pointerEvents: "none"
})), Lv = () => {
}, B_ = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiPickersDay"
  }), {
    autoFocus: u = !1,
    className: d,
    day: p,
    disabled: h = !1,
    disableHighlightToday: g = !1,
    disableMargin: b = !1,
    isAnimating: x,
    onClick: S,
    onDaySelect: E,
    onFocus: R = Lv,
    onBlur: $ = Lv,
    onKeyDown: M = Lv,
    onMouseDown: O = Lv,
    onMouseEnter: N = Lv,
    outsideCurrentMonth: V,
    selected: I = !1,
    showDaysOutsideCurrentMonth: z = !1,
    children: B,
    today: P = !1
  } = s, F = le(s, Nae), H = y({}, s, {
    autoFocus: u,
    disabled: h,
    disableHighlightToday: g,
    disableMargin: b,
    selected: I,
    showDaysOutsideCurrentMonth: z,
    today: P
  }), U = Lae(H), Q = dn(), Y = k.useRef(null), te = cn(Y, a);
  ro(() => {
    u && !h && !x && !V && Y.current.focus();
  }, [u, h, x, V]);
  const Z = (X) => {
    O(X), V && X.preventDefault();
  }, q = (X) => {
    h || E(p), V && X.currentTarget.focus(), S && S(X);
  };
  return V && !z ? /* @__PURE__ */ _(Aae, {
    className: fe(U.root, U.hiddenDaySpacingFiller, d),
    ownerState: H,
    role: F.role
  }) : /* @__PURE__ */ _(Iae, y({
    className: fe(U.root, d),
    ref: te,
    centerRipple: !0,
    disabled: h,
    tabIndex: I ? 0 : -1,
    onKeyDown: (X) => M(X, p),
    onFocus: (X) => R(X, p),
    onBlur: (X) => $(X, p),
    onMouseEnter: (X) => N(X, p),
    onClick: q,
    onMouseDown: Z
  }, F, {
    ownerState: H,
    children: B || Q.format(p, "dayOfMonth")
  }));
});
process.env.NODE_ENV !== "production" && (B_.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: t.oneOfType([t.func, t.shape({
    current: t.shape({
      focusVisible: t.func.isRequired
    })
  })]),
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  className: t.string,
  component: t.elementType,
  /**
   * The date to show.
   */
  day: t.any.isRequired,
  /**
   * If `true`, renders as disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: t.bool,
  /**
   * If `true`, days are rendering without margin. Useful for displaying linked range of days.
   * @default false
   */
  disableMargin: t.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: t.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: t.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: t.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: t.string,
  isAnimating: t.bool,
  /**
   * If `true`, day is the first visible cell of the month.
   * Either the first day of the month or the first day of the week depending on `showDaysOutsideCurrentMonth`.
   */
  isFirstVisibleCell: t.bool.isRequired,
  /**
   * If `true`, day is the last visible cell of the month.
   * Either the last day of the month or the last day of the week depending on `showDaysOutsideCurrentMonth`.
   */
  isLastVisibleCell: t.bool.isRequired,
  onBlur: t.func,
  onDaySelect: t.func.isRequired,
  onFocus: t.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: t.func,
  onKeyDown: t.func,
  onMouseEnter: t.func,
  /**
   * If `true`, day is outside of month and will be hidden.
   */
  outsideCurrentMonth: t.bool.isRequired,
  /**
   * If `true`, renders as selected.
   * @default false
   */
  selected: t.bool,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: t.bool,
  style: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * @default 0
   */
  tabIndex: t.number,
  /**
   * If `true`, renders as today date.
   * @default false
   */
  today: t.bool,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: t.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: t.oneOfType([t.func, t.shape({
    current: t.shape({
      pulsate: t.func.isRequired,
      start: t.func.isRequired,
      stop: t.func.isRequired
    })
  })])
});
const z_ = /* @__PURE__ */ k.memo(B_), T$ = {
  // maps TimeView to its translation
  hours: "гадзіны",
  minutes: "хвіліны",
  seconds: "секунды",
  meridiem: "мерыдыем"
}, _ae = {
  // Calendar navigation
  previousMonth: "Папярэдні месяц",
  nextMonth: "Наступны месяц",
  // View navigation
  openPreviousView: "адкрыць папярэдні выгляд",
  openNextView: "адкрыць наступны выгляд",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "гадавы выгляд адкрыты, перайсці да каляндарнага выгляду" : "каляндарны выгляд адкрыты, перайсці да гадавога выгляду",
  // DateRange placeholders
  start: "Пачатак",
  end: "Канец",
  // Action bar
  cancelButtonLabel: "Адмена",
  clearButtonLabel: "Ачысціць",
  okButtonLabel: "OK",
  todayButtonLabel: "Сёння",
  // Toolbar titles
  datePickerToolbarTitle: "Абраць дату",
  dateTimePickerToolbarTitle: "Абраць дату і час",
  timePickerToolbarTitle: "Абраць час",
  dateRangePickerToolbarTitle: "Абраць каляндарны перыяд",
  // Clock labels
  clockLabelText: (e, n, a) => `Абярыце ${T$[e]}. ${n === null ? "Час не абраны" : `Абраны час ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} гадзін`,
  minutesClockNumberText: (e) => `${e} хвілін`,
  secondsClockNumberText: (e) => `${e} секунд`,
  // Digital clock labels
  selectViewText: (e) => `Абярыце ${T$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Нумар тыдня",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Тыдзень ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Абраць дату, абрана дата  ${n.format(e, "fullDate")}` : "Абраць дату",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Абраць час, абрыны час  ${n.format(e, "fullTime")}` : "Абраць час",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "абраць час",
  dateTableLabel: "абраць дату",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Y".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, Vae = kn(_ae), x$ = {
  hours: "les hores",
  minutes: "els minuts",
  seconds: "els segons",
  meridiem: "meridiem"
}, Bae = {
  // Calendar navigation
  previousMonth: "Últim mes",
  nextMonth: "Pròxim mes",
  // View navigation
  openPreviousView: "obrir l'última vista",
  openNextView: "obrir la següent vista",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "la vista de l'any està oberta, canvie a la vista de calendari" : "la vista de calendari està oberta, canvie a la vista de l'any",
  // DateRange placeholders
  start: "Començar",
  end: "Terminar",
  // Action bar
  cancelButtonLabel: "Cancel·lar",
  clearButtonLabel: "Netejar",
  okButtonLabel: "OK",
  todayButtonLabel: "Hui",
  // Toolbar titles
  datePickerToolbarTitle: "Seleccionar data",
  dateTimePickerToolbarTitle: "Seleccionar data i hora",
  timePickerToolbarTitle: "Seleccionar hora",
  dateRangePickerToolbarTitle: "Seleccionar rang de dates",
  // Clock labels
  clockLabelText: (e, n, a) => `Seleccione ${x$[e]}. ${n === null ? "Sense temps seleccionat" : `El temps seleccionat és ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} hores`,
  minutesClockNumberText: (e) => `${e} minuts`,
  secondsClockNumberText: (e) => `${e} segons`,
  // Digital clock labels
  selectViewText: (e) => `Seleccionar ${x$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Número de setmana",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Setmana ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Tria la data, la data triada és ${n.format(e, "fullDate")}` : "Tria la data",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Tria l'hora, l'hora triada és ${n.format(e, "fullTime")}` : "Tria l'hora",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "tria la data",
  dateTableLabel: "tria l'hora",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Y".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, zae = kn(Bae), S$ = {
  hours: "Hodiny",
  minutes: "Minuty",
  seconds: "Sekundy",
  meridiem: "Odpoledne"
}, Fae = {
  // Calendar navigation
  previousMonth: "Předchozí měsíc",
  nextMonth: "Další měsíc",
  // View navigation
  openPreviousView: "otevřít předchozí zobrazení",
  openNextView: "otevřít další zobrazení",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "roční zobrazení otevřeno, přepněte do zobrazení kalendáře" : "zobrazení kalendáře otevřeno, přepněte do zobrazení roku",
  // DateRange placeholders
  start: "Začátek",
  end: "Konec",
  // Action bar
  cancelButtonLabel: "Zrušit",
  clearButtonLabel: "Vymazat",
  okButtonLabel: "Potvrdit",
  todayButtonLabel: "Dnes",
  // Toolbar titles
  datePickerToolbarTitle: "Vyberte datum",
  dateTimePickerToolbarTitle: "Vyberte datum a čas",
  timePickerToolbarTitle: "Vyberte čas",
  dateRangePickerToolbarTitle: "Vyberete rozmezí dat",
  // Clock labels
  clockLabelText: (e, n, a) => {
    var s;
    return `${(s = S$[e]) != null ? s : e} vybrány. ${n === null ? "Není vybrán čas" : `Vybraný čas je ${a.format(n, "fullTime")}`}`;
  },
  hoursClockNumberText: (e) => `${e} hodin`,
  minutesClockNumberText: (e) => `${e} minut`,
  secondsClockNumberText: (e) => `${e} sekund`,
  // Digital clock labels
  selectViewText: (e) => `Vyberte ${S$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Týden v roce",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `${e} týden v roce`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Vyberte datum, vybrané datum je ${n.format(e, "fullDate")}` : "Vyberte datum",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Vyberte čas, vybraný čas je ${n.format(e, "fullTime")}` : "Vyberte čas",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "vyberte čas",
  dateTableLabel: "vyberte datum",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Y".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, jae = kn(Fae), k$ = {
  hours: "Timer",
  minutes: "Minutter",
  seconds: "Sekunder",
  meridiem: "Meridiem"
}, Uae = {
  // Calendar navigation
  previousMonth: "Forrige måned",
  nextMonth: "Næste måned",
  // View navigation
  openPreviousView: "åben forrige visning",
  openNextView: "åben næste visning",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "årsvisning er åben, skift til kalendervisning" : "kalendervisning er åben, skift til årsvisning",
  // DateRange placeholders
  start: "Start",
  end: "Slut",
  // Action bar
  cancelButtonLabel: "Annuller",
  clearButtonLabel: "Ryd",
  okButtonLabel: "OK",
  todayButtonLabel: "I dag",
  // Toolbar titles
  datePickerToolbarTitle: "Vælg dato",
  dateTimePickerToolbarTitle: "Vælg dato & tidspunkt",
  timePickerToolbarTitle: "Vælg tidspunkt",
  dateRangePickerToolbarTitle: "Vælg datointerval",
  // Clock labels
  clockLabelText: (e, n, a) => {
    var s;
    return `Vælg ${(s = k$[e]) != null ? s : e}. ${n === null ? "Intet tidspunkt valgt" : `Valgte tidspunkt er ${a.format(n, "fullTime")}`}`;
  },
  hoursClockNumberText: (e) => `${e} timer`,
  minutesClockNumberText: (e) => `${e} minutter`,
  secondsClockNumberText: (e) => `${e} sekunder`,
  // Digital clock labels
  selectViewText: (e) => `Vælg ${k$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Ugenummer",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Uge ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Vælg dato, valgte dato er ${n.format(e, "fullDate")}` : "Vælg dato",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Vælg tidspunkt, valgte tidspunkt er ${n.format(e, "fullTime")}` : "Vælg tidspunkt",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "vælg tidspunkt",
  dateTableLabel: "vælg dato",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Y".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, Hae = kn(Uae), Iv = {
  hours: "Stunden",
  minutes: "Minuten",
  seconds: "Sekunden",
  meridiem: "Meridiem"
}, Wae = {
  // Calendar navigation
  previousMonth: "Letzter Monat",
  nextMonth: "Nächster Monat",
  // View navigation
  openPreviousView: "Letzte Ansicht öffnen",
  openNextView: "Nächste Ansicht öffnen",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "Jahresansicht ist geöffnet, zur Kalenderansicht wechseln" : "Kalenderansicht ist geöffnet, zur Jahresansicht wechseln",
  // DateRange placeholders
  start: "Beginn",
  end: "Ende",
  // Action bar
  cancelButtonLabel: "Abbrechen",
  clearButtonLabel: "Löschen",
  okButtonLabel: "OK",
  todayButtonLabel: "Heute",
  // Toolbar titles
  datePickerToolbarTitle: "Datum auswählen",
  dateTimePickerToolbarTitle: "Datum & Uhrzeit auswählen",
  timePickerToolbarTitle: "Uhrzeit auswählen",
  dateRangePickerToolbarTitle: "Datumsbereich auswählen",
  // Clock labels
  clockLabelText: (e, n, a) => {
    var s;
    return `${(s = Iv[e]) != null ? s : e} auswählen. ${n === null ? "Keine Uhrzeit ausgewählt" : `Gewählte Uhrzeit ist ${a.format(n, "fullTime")}`}`;
  },
  hoursClockNumberText: (e) => `${e} ${Iv.hours}`,
  minutesClockNumberText: (e) => `${e} ${Iv.minutes}`,
  secondsClockNumberText: (e) => `${e}  ${Iv.seconds}`,
  // Digital clock labels
  selectViewText: (e) => `${Iv[e]} auswählen`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Kalenderwoche",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Woche ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Datum auswählen, gewähltes Datum ist ${n.format(e, "fullDate")}` : "Datum auswählen",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Uhrzeit auswählen, gewählte Uhrzeit ist ${n.format(e, "fullTime")}` : "Uhrzeit auswählen",
  fieldClearLabel: "Wert leeren",
  // Table labels
  timeTableLabel: "Uhrzeit auswählen",
  dateTableLabel: "Datum auswählen",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "J".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "TT",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, Yae = kn(Wae), w$ = {
  hours: "ώρες",
  minutes: "λεπτά",
  seconds: "δευτερόλεπτα",
  meridiem: "μεσημβρία"
}, qae = {
  // Calendar navigation
  previousMonth: "Προηγούμενος μήνας",
  nextMonth: "Επόμενος μήνας",
  // View navigation
  openPreviousView: "ανοίγμα προηγούμενης προβολή",
  openNextView: "ανοίγμα επόμενης προβολή",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "η προβολή έτους είναι ανοιχτή, μεταβείτε στην προβολή ημερολογίου" : "η προβολή ημερολογίου είναι ανοιχτή, μεταβείτε στην προβολή έτους",
  // DateRange placeholders
  start: "Αρχή",
  end: "Τέλος",
  // Action bar
  cancelButtonLabel: "Άκυρο",
  clearButtonLabel: "Καθαρισμός",
  okButtonLabel: "OK",
  todayButtonLabel: "Σήμερα",
  // Toolbar titles
  datePickerToolbarTitle: "Επιλέξτε ημερομηνία",
  dateTimePickerToolbarTitle: "Επιλέξτε ημερομηνία και ώρα",
  timePickerToolbarTitle: "Επιλέξτε ώρα",
  dateRangePickerToolbarTitle: "Επιλέξτε εύρος ημερομηνιών",
  // Clock labels
  clockLabelText: (e, n, a) => `Επιλέξτε ${w$[e]}. ${n === null ? "Δεν έχει επιλεγεί ώρα" : `Η επιλεγμένη ώρα είναι ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} ώρες`,
  minutesClockNumberText: (e) => `${e} λεπτά`,
  secondsClockNumberText: (e) => `${e} δευτερόλεπτα`,
  // Digital clock labels
  selectViewText: (e) => `Επιλέξτε ${w$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Αριθμός εβδομάδας",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Εβδομάδα ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Επιλέξτε ημερομηνία, η επιλεγμένη ημερομηνία είναι ${n.format(e, "fullDate")}` : "Επιλέξτε ημερομηνία",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Επιλέξτε ώρα, η επιλεγμένη ώρα είναι ${n.format(e, "fullTime")}` : "Επιλέξτε ώρα",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "επιλέξτε ώρα",
  dateTableLabel: "επιλέξτε ημερομηνία",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Y".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, Gae = kn(qae), R$ = {
  hours: "las horas",
  minutes: "los minutos",
  seconds: "los segundos",
  meridiem: "meridiano"
}, Kae = {
  // Calendar navigation
  previousMonth: "Último mes",
  nextMonth: "Próximo mes",
  // View navigation
  openPreviousView: "abrir la última vista",
  openNextView: "abrir la siguiente vista",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "la vista del año está abierta, cambie a la vista de calendario" : "la vista de calendario está abierta, cambie a la vista del año",
  // DateRange placeholders
  start: "Empezar",
  end: "Terminar",
  // Action bar
  cancelButtonLabel: "Cancelar",
  clearButtonLabel: "Limpiar",
  okButtonLabel: "OK",
  todayButtonLabel: "Hoy",
  // Toolbar titles
  datePickerToolbarTitle: "Seleccionar fecha",
  dateTimePickerToolbarTitle: "Seleccionar fecha y hora",
  timePickerToolbarTitle: "Seleccionar hora",
  dateRangePickerToolbarTitle: "Seleccionar rango de fecha",
  // Clock labels
  clockLabelText: (e, n, a) => `Seleccione ${R$[e]}. ${n === null ? "No hay hora seleccionada" : `La hora seleccionada es ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} horas`,
  minutesClockNumberText: (e) => `${e} minutos`,
  secondsClockNumberText: (e) => `${e} segundos`,
  // Digital clock labels
  selectViewText: (e) => `Seleccionar ${R$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Número de semana",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Semana ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Elige fecha, la fecha elegida es ${n.format(e, "fullDate")}` : "Elige fecha",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Elige hora, la hora elegida es ${n.format(e, "fullTime")}` : "Elige hora",
  fieldClearLabel: "Limpiar valor",
  // Table labels
  timeTableLabel: "elige hora",
  dateTableLabel: "elige fecha",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "A".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, Qae = kn(Kae), E$ = {
  hours: "orduak",
  minutes: "minutuak",
  seconds: "segunduak",
  meridiem: "meridianoa"
}, Xae = {
  // Calendar navigation
  previousMonth: "Azken hilabetea",
  nextMonth: "Hurrengo hilabetea",
  // View navigation
  openPreviousView: "azken bista ireki",
  openNextView: "hurrengo bista ireki",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "urteko bista irekita dago, aldatu egutegi bistara" : "egutegi bista irekita dago, aldatu urteko bistara",
  // DateRange placeholders
  start: "Hasi",
  end: "Bukatu",
  // Action bar
  cancelButtonLabel: "Utxi",
  clearButtonLabel: "Garbitu",
  okButtonLabel: "OK",
  todayButtonLabel: "Gaur",
  // Toolbar titles
  datePickerToolbarTitle: "Data aukeratu",
  dateTimePickerToolbarTitle: "Data eta ordua aukeratu",
  timePickerToolbarTitle: "Ordua aukeratu",
  dateRangePickerToolbarTitle: "Data tartea aukeratu",
  // Clock labels
  clockLabelText: (e, n, a) => `Aukeratu ${E$[e]}. ${n === null ? "Ez da ordurik aukertau" : `Aukeratutako ordua ${a.format(n, "fullTime")} da`}`,
  hoursClockNumberText: (e) => `${e} ordu`,
  minutesClockNumberText: (e) => `${e} minutu`,
  secondsClockNumberText: (e) => `${e} segundu`,
  // Digital clock labels
  selectViewText: (e) => `Aukeratu ${E$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Astea zenbakia",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `${e} astea`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Data aukeratu, aukeratutako data ${n.format(e, "fullDate")} da` : "Data aukeratu",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Ordua aukeratu, aukeratutako ordua ${n.format(e, "fullTime")} da` : "Ordua aukeratu",
  fieldClearLabel: "Balioa garbitu",
  // Table labels
  timeTableLabel: "ordua aukeratu",
  dateTableLabel: "data aukeratu",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Y".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, Zae = kn(Xae), O$ = {
  hours: "ساعت ها",
  minutes: "دقیقه ها",
  seconds: "ثانیه ها",
  meridiem: "بعد از ظهر"
}, Jae = {
  // Calendar navigation
  previousMonth: "ماه گذشته",
  nextMonth: "ماه آینده",
  // View navigation
  openPreviousView: "نمای قبلی",
  openNextView: "نمای بعدی",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "نمای سال باز است، رفتن به نمای تقویم" : "نمای تقویم باز است، رفتن به نمای سال",
  // DateRange placeholders
  start: "شروع",
  end: "پایان",
  // Action bar
  cancelButtonLabel: "لغو",
  clearButtonLabel: "پاک کردن",
  okButtonLabel: "اوکی",
  todayButtonLabel: "امروز",
  // Toolbar titles
  datePickerToolbarTitle: "تاریخ را انتخاب کنید",
  dateTimePickerToolbarTitle: "تاریخ و ساعت را انتخاب کنید",
  timePickerToolbarTitle: "ساعت را انتخاب کنید",
  dateRangePickerToolbarTitle: "محدوده تاریخ را انتخاب کنید",
  // Clock labels
  clockLabelText: (e, n, a) => ` را انتخاب کنید ${O$[e]}. ${n === null ? "هیچ ساعتی انتخاب نشده است" : `ساعت انتخاب ${a.format(n, "fullTime")} می باشد`}`,
  hoursClockNumberText: (e) => `${e} ساعت ها`,
  minutesClockNumberText: (e) => `${e} دقیقه ها`,
  secondsClockNumberText: (e) => `${e} ثانیه ها`,
  // Digital clock labels
  selectViewText: (e) => ` را انتخاب کنید ${O$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "عدد هفته",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `هفته ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `تاریخ را انتخاب کنید، تاریخ انتخاب شده ${n.format(e, "fullDate")} می باشد` : "تاریخ را انتخاب کنید",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `ساعت را انتخاب کنید، ساعت انتخاب شده ${n.format(e, "fullTime")} می باشد` : "ساعت را انتخاب کنید",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "انتخاب تاریخ",
  dateTableLabel: "انتخاب ساعت",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Y".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, eie = kn(Jae), P$ = {
  hours: "tunnit",
  minutes: "minuutit",
  seconds: "sekuntit",
  meridiem: "iltapäivä"
}, tie = {
  // Calendar navigation
  previousMonth: "Edellinen kuukausi",
  nextMonth: "Seuraava kuukausi",
  // View navigation
  openPreviousView: "avaa edellinen kuukausi",
  openNextView: "avaa seuraava kuukausi",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "vuosinäkymä on auki, vaihda kalenterinäkymään" : "kalenterinäkymä on auki, vaihda vuosinäkymään",
  // DateRange placeholders
  start: "Alku",
  end: "Loppu",
  // Action bar
  cancelButtonLabel: "Peruuta",
  clearButtonLabel: "Tyhjennä",
  okButtonLabel: "OK",
  todayButtonLabel: "Tänään",
  // Toolbar titles
  datePickerToolbarTitle: "Valitse päivä",
  dateTimePickerToolbarTitle: "Valitse päivä ja aika",
  timePickerToolbarTitle: "Valitse aika",
  dateRangePickerToolbarTitle: "Valitse aikaväli",
  // Clock labels
  clockLabelText: (e, n, a) => `Valitse ${P$[e]}. ${n === null ? "Ei aikaa valittuna" : `Valittu aika on ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} tuntia`,
  minutesClockNumberText: (e) => `${e} minuuttia`,
  secondsClockNumberText: (e) => `${e} sekunttia`,
  // Digital clock labels
  selectViewText: (e) => `Valitse ${P$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Viikko",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Viikko ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Valitse päivä, valittu päivä on ${n.format(e, "fullDate")}` : "Valitse päivä",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Valitse aika, valittu aika on ${n.format(e, "fullTime")}` : "Valitse aika",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "valitse aika",
  dateTableLabel: "valitse päivä",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "V".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "KKKK" : "KK",
  fieldDayPlaceholder: () => "PP",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "tt",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, nie = kn(tie), D$ = {
  hours: "heures",
  minutes: "minutes",
  seconds: "secondes",
  meridiem: "méridien"
}, oie = {
  // Calendar navigation
  previousMonth: "Mois précédent",
  nextMonth: "Mois suivant",
  // View navigation
  openPreviousView: "Ouvrir la vue précédente",
  openNextView: "Ouvrir la vue suivante",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "La vue année est ouverte, ouvrir la vue calendrier" : "La vue calendrier est ouverte, ouvrir la vue année",
  // DateRange placeholders
  start: "Début",
  end: "Fin",
  // Action bar
  cancelButtonLabel: "Annuler",
  clearButtonLabel: "Vider",
  okButtonLabel: "OK",
  todayButtonLabel: "Aujourd'hui",
  // Toolbar titles
  datePickerToolbarTitle: "Choisir une date",
  dateTimePickerToolbarTitle: "Choisir la date et l'heure",
  timePickerToolbarTitle: "Choisir l'heure",
  dateRangePickerToolbarTitle: "Choisir la plage de dates",
  // Clock labels
  clockLabelText: (e, n, a) => `Choix des ${D$[e]}. ${n === null ? "Aucune heure choisie" : `L'heure choisie est ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} heures`,
  minutesClockNumberText: (e) => `${e} minutes`,
  secondsClockNumberText: (e) => `${e} secondes`,
  // Digital clock labels
  selectViewText: (e) => `Choisir ${D$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Semaine",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Semaine ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Choisir la date, la date sélectionnée est ${n.format(e, "fullDate")}` : "Choisir la date",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Choisir l'heure, l'heure sélectionnée est ${n.format(e, "fullTime")}` : "Choisir l'heure",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "choix de l'heure",
  dateTableLabel: "choix de la date",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "A".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "JJ",
  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, rie = kn(oie), M$ = {
  hours: "שעות",
  minutes: "דקות",
  seconds: "שניות",
  meridiem: "מרידיאם"
}, aie = {
  // Calendar navigation
  previousMonth: "חודש קודם",
  nextMonth: "חודש הבא",
  // View navigation
  openPreviousView: "תצוגה קודמת",
  openNextView: "תצוגה הבאה",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "תצוגת שנה פתוחה, מעבר לתצוגת לוח שנה" : "תצוגת לוח שנה פתוחה, מעבר לתצוגת שנה",
  // DateRange placeholders
  start: "תחילה",
  end: "סיום",
  // Action bar
  cancelButtonLabel: "ביטול",
  clearButtonLabel: "ניקוי",
  okButtonLabel: "אישור",
  todayButtonLabel: "היום",
  // Toolbar titles
  datePickerToolbarTitle: "בחירת תאריך",
  dateTimePickerToolbarTitle: "בחירת תאריך ושעה",
  timePickerToolbarTitle: "בחירת שעה",
  dateRangePickerToolbarTitle: "בחירת טווח תאריכים",
  // Clock labels
  clockLabelText: (e, n, a) => `בחירת ${M$[e]}. ${n === null ? "לא נבחרה שעה" : `השעה הנבחרת היא ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} שעות`,
  minutesClockNumberText: (e) => `${e} דקות`,
  secondsClockNumberText: (e) => `${e} שניות`,
  // Digital clock labels
  selectViewText: (e) => `בחירת ${M$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "שבוע מספר",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `שבוע ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `בחירת תאריך, התאריך שנבחר הוא ${n.format(e, "fullDate")}` : "בחירת תאריך",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `בחירת שעה, השעה שנבחרה היא ${n.format(e, "fullTime")}` : "בחירת שעה",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "בחירת שעה",
  dateTableLabel: "בחירת תאריך",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Y".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, iie = kn(aie), Av = {
  hours: "Óra",
  minutes: "Perc",
  seconds: "Másodperc",
  meridiem: "Délután"
}, sie = {
  // Calendar navigation
  previousMonth: "Előző hónap",
  nextMonth: "Következő hónap",
  // View navigation
  openPreviousView: "Előző nézet megnyitása",
  openNextView: "Következő nézet megnyitása",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "az évválasztó már nyitva, váltson a naptárnézetre" : "a naptárnézet már nyitva, váltson az évválasztóra",
  // DateRange placeholders
  start: "Kezdő dátum",
  end: "Záró dátum",
  // Action bar
  cancelButtonLabel: "Mégse",
  clearButtonLabel: "Törlés",
  okButtonLabel: "OK",
  todayButtonLabel: "Ma",
  // Toolbar titles
  datePickerToolbarTitle: "Dátum kiválasztása",
  dateTimePickerToolbarTitle: "Dátum és idő kiválasztása",
  timePickerToolbarTitle: "Idő kiválasztása",
  dateRangePickerToolbarTitle: "Dátumhatárok kiválasztása",
  // Clock labels
  clockLabelText: (e, n, a) => {
    var s;
    return `${(s = Av[e]) != null ? s : e} kiválasztása. ${n === null ? "Nincs kiválasztva idő" : `A kiválasztott idő ${a.format(n, "fullTime")}`}`;
  },
  hoursClockNumberText: (e) => `${e} ${Av.hours.toLowerCase()}`,
  minutesClockNumberText: (e) => `${e} ${Av.minutes.toLowerCase()}`,
  secondsClockNumberText: (e) => `${e}  ${Av.seconds.toLowerCase()}`,
  // Digital clock labels
  selectViewText: (e) => `${Av[e]} kiválasztása`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Hét",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `${e}. hét`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Válasszon dátumot, a kiválasztott dátum: ${n.format(e, "fullDate")}` : "Válasszon dátumot",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Válasszon időt, a kiválasztott idő: ${n.format(e, "fullTime")}` : "Válasszon időt",
  fieldClearLabel: "Tartalom ürítése",
  // Table labels
  timeTableLabel: "válasszon időt",
  dateTableLabel: "válasszon dátumot",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "É".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "HHHH" : "HH",
  fieldDayPlaceholder: () => "NN",
  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',
  fieldHoursPlaceholder: () => "óó",
  fieldMinutesPlaceholder: () => "pp",
  fieldSecondsPlaceholder: () => "mm",
  fieldMeridiemPlaceholder: () => "dd"
}, lie = kn(sie), $$ = {
  hours: "klukkustundir",
  minutes: "mínútur",
  seconds: "sekúndur",
  meridiem: "eftirmiðdagur"
}, cie = {
  // Calendar navigation
  previousMonth: "Fyrri mánuður",
  nextMonth: "Næsti mánuður",
  // View navigation
  openPreviousView: "opna fyrri skoðun",
  openNextView: "opna næstu skoðun",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "ársskoðun er opin, skipta yfir í dagatalsskoðun" : "dagatalsskoðun er opin, skipta yfir í ársskoðun",
  // DateRange placeholders
  start: "Upphaf",
  end: "Endir",
  // Action bar
  cancelButtonLabel: "Hætta við",
  clearButtonLabel: "Hreinsa",
  okButtonLabel: "OK",
  todayButtonLabel: "Í dag",
  // Toolbar titles
  datePickerToolbarTitle: "Velja dagsetningu",
  dateTimePickerToolbarTitle: "Velja dagsetningu og tíma",
  timePickerToolbarTitle: "Velja tíma",
  dateRangePickerToolbarTitle: "Velja tímabil",
  // Clock labels
  clockLabelText: (e, n, a) => `Velja ${$$[e]}. ${n === null ? "Enginn tími valinn" : `Valinn tími er ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} klukkustundir`,
  minutesClockNumberText: (e) => `${e} mínútur`,
  secondsClockNumberText: (e) => `${e} sekúndur`,
  // Digital clock labels
  selectViewText: (e) => `Velja ${$$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Vikunúmer",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Vika ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Velja dagsetningu, valin dagsetning er ${n.format(e, "fullDate")}` : "Velja dagsetningu",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Velja tíma, valinn tími er ${n.format(e, "fullTime")}` : "Velja tíma",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "velja tíma",
  dateTableLabel: "velja dagsetningu",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Á".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "kk",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "ee"
}, uie = kn(cie), N$ = {
  hours: "le ore",
  minutes: "i minuti",
  seconds: "i secondi",
  meridiem: "il meridiano"
}, die = {
  // Calendar navigation
  previousMonth: "Mese precedente",
  nextMonth: "Mese successivo",
  // View navigation
  openPreviousView: "apri la vista precedente",
  openNextView: "apri la vista successiva",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "la vista dell'anno è aperta, passare alla vista del calendario" : "la vista dell'calendario è aperta, passare alla vista dell'anno",
  // DateRange placeholders
  start: "Inizio",
  end: "Fine",
  // Action bar
  cancelButtonLabel: "Cancellare",
  clearButtonLabel: "Sgomberare",
  okButtonLabel: "OK",
  todayButtonLabel: "Oggi",
  // Toolbar titles
  datePickerToolbarTitle: "Seleziona data",
  dateTimePickerToolbarTitle: "Seleziona data e orario",
  timePickerToolbarTitle: "Seleziona orario",
  dateRangePickerToolbarTitle: "Seleziona intervallo di date",
  // Clock labels
  clockLabelText: (e, n, a) => `Seleziona ${N$[e]}. ${n === null ? "Nessun orario selezionato" : `L'ora selezionata è ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} ore`,
  minutesClockNumberText: (e) => `${e} minuti`,
  secondsClockNumberText: (e) => `${e} secondi`,
  // Digital clock labels
  selectViewText: (e) => `Seleziona ${N$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Numero settimana",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Settimana ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Scegli la data, la data selezionata è ${n.format(e, "fullDate")}` : "Scegli la data",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Scegli l'ora, l'ora selezionata è ${n.format(e, "fullTime")}` : "Scegli l'ora",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "scegli un'ora",
  dateTableLabel: "scegli una data",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "A".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "GG",
  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, pie = kn(die), _v = {
  hours: "時間",
  minutes: "分",
  seconds: "秒",
  meridiem: "メリディム"
}, fie = {
  // Calendar navigation
  previousMonth: "先月",
  nextMonth: "来月",
  // View navigation
  openPreviousView: "前の表示を開く",
  openNextView: "次の表示を開く",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "年選択表示からカレンダー表示に切り替える" : "カレンダー表示から年選択表示に切り替える",
  // DateRange placeholders
  start: "開始",
  end: "終了",
  // Action bar
  cancelButtonLabel: "キャンセル",
  clearButtonLabel: "クリア",
  okButtonLabel: "確定",
  todayButtonLabel: "今日",
  // Toolbar titles
  datePickerToolbarTitle: "日付を選択",
  dateTimePickerToolbarTitle: "日時を選択",
  timePickerToolbarTitle: "時間を選択",
  dateRangePickerToolbarTitle: "日付の範囲を選択",
  // Clock labels
  clockLabelText: (e, n, a) => {
    var s;
    return `${(s = _v[e]) != null ? s : e}を選択してください ${n === null ? "時間が選択されていません" : `選択した時間は ${a.format(n, "fullTime")} です`}`;
  },
  hoursClockNumberText: (e) => `${e} ${_v.hours}`,
  minutesClockNumberText: (e) => `${e} ${_v.minutes}`,
  secondsClockNumberText: (e) => `${e} ${_v.seconds}`,
  // Digital clock labels
  selectViewText: (e) => `を選択 ${_v[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "週番号",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `${e}週目`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `日付を選択してください。選択した日付は ${n.format(e, "fullDate")} です` : "日付を選択してください",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `時間を選択してください。選択した時間は ${n.format(e, "fullTime")} です` : "時間を選択してください",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "時間を選択",
  dateTableLabel: "日付を選択",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Y".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, mie = kn(fie), L$ = {
  hours: "시간을",
  minutes: "분을",
  seconds: "초를",
  meridiem: "메리디엠"
}, hie = {
  // Calendar navigation
  previousMonth: "이전 달",
  nextMonth: "다음 달",
  // View navigation
  openPreviousView: "이전 화면 보기",
  openNextView: "다음 화면 보기",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "연도 선택 화면에서 달력 화면으로 전환하기" : "달력 화면에서 연도 선택 화면으로 전환하기",
  // DateRange placeholders
  start: "시작",
  end: "종료",
  // Action bar
  cancelButtonLabel: "취소",
  clearButtonLabel: "초기화",
  okButtonLabel: "확인",
  todayButtonLabel: "오늘",
  // Toolbar titles
  datePickerToolbarTitle: "날짜 선택하기",
  dateTimePickerToolbarTitle: "날짜 & 시간 선택하기",
  timePickerToolbarTitle: "시간 선택하기",
  dateRangePickerToolbarTitle: "날짜 범위 선택하기",
  // Clock labels
  clockLabelText: (e, n, a) => `${L$[e]} 선택하세요. ${n === null ? "시간을 선택하지 않았습니다." : `현재 선택된 시간은 ${a.format(n, "fullTime")}입니다.`}`,
  hoursClockNumberText: (e) => `${e}시간`,
  minutesClockNumberText: (e) => `${e}분`,
  secondsClockNumberText: (e) => `${e}초`,
  // Digital clock labels
  selectViewText: (e) => `${L$[e]} 선택하기`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "주 번호",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `${e}번째 주`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `날짜를 선택하세요. 현재 선택된 날짜는 ${n.format(e, "fullDate")}입니다.` : "날짜를 선택하세요",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `시간을 선택하세요. 현재 선택된 시간은 ${n.format(e, "fullTime")}입니다.` : "시간을 선택하세요",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "선택한 시간",
  dateTableLabel: "선택한 날짜",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Y".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, vie = kn(hie), I$ = {
  hours: "Сағатты",
  minutes: "Минутты",
  seconds: "Секундты",
  meridiem: "Меридием"
}, gie = {
  // Calendar navigation
  previousMonth: "Алдыңғы ай",
  nextMonth: "Келесі ай",
  // View navigation
  openPreviousView: "Алдыңғы көріністі ашу",
  openNextView: "Келесі көріністі ашу",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "жылдық көріністі ашу, күнтізбе көрінісіне ауысу" : "күнтізбе көрінісін ашу, жылдық көрінісіне ауысу",
  // DateRange placeholders
  start: "Бастау",
  end: "Cоңы",
  // Action bar
  cancelButtonLabel: "Бас тарту",
  clearButtonLabel: "Тазарту",
  okButtonLabel: "Ок",
  todayButtonLabel: "Бүгін",
  // Toolbar titles
  datePickerToolbarTitle: "Күнді таңдау",
  dateTimePickerToolbarTitle: "Күн мен уақытты таңдау",
  timePickerToolbarTitle: "Уақытты таңдау",
  dateRangePickerToolbarTitle: "Кезеңді таңдаңыз",
  // Clock labels
  clockLabelText: (e, n, a) => `${I$[e]} таңдау. ${n === null ? "Уақыт таңдалмаған" : `Таңдалған уақыт ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} сағат`,
  minutesClockNumberText: (e) => `${e} минут`,
  secondsClockNumberText: (e) => `${e} секунд`,
  // Digital clock labels
  selectViewText: (e) => `${I$[e]} таңдау`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Апта нөмірі",
  calendarWeekNumberHeaderText: "№",
  calendarWeekNumberAriaLabelText: (e) => `Апта ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Күнді таңдаңыз, таңдалған күн ${n.format(e, "fullDate")}` : "Күнді таңдаңыз",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Уақытты таңдаңыз, таңдалған уақыт ${n.format(e, "fullTime")}` : "Уақытты таңдаңыз",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "уақытты таңдау",
  dateTableLabel: "күнді таңдау",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Ж".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "AAAA" : "AA",
  fieldDayPlaceholder: () => "КК",
  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',
  fieldHoursPlaceholder: () => "сс",
  fieldMinutesPlaceholder: () => "мм",
  fieldSecondsPlaceholder: () => "сс",
  fieldMeridiemPlaceholder: () => "(т|к)"
}, bie = kn(gie), yie = {
  // Calendar navigation
  previousMonth: "Предходен месец",
  nextMonth: "Следен месец",
  // View navigation
  openPreviousView: "отвори претходен приказ",
  openNextView: "отвори следен приказ",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "годишен приказ, отвори календарски приказ" : "календарски приказ, отвори годишен приказ",
  // DateRange placeholders
  start: "Почеток",
  end: "Крај",
  // Action bar
  cancelButtonLabel: "Откажи",
  clearButtonLabel: "Избриши",
  okButtonLabel: "OK",
  todayButtonLabel: "Денес",
  // Toolbar titles
  datePickerToolbarTitle: "Избери датум",
  dateTimePickerToolbarTitle: "Избери датум и време",
  timePickerToolbarTitle: "Избери време",
  dateRangePickerToolbarTitle: "Избери временски опсег",
  // Clock labels
  clockLabelText: (e, n, a) => `Select ${e}. ${n === null ? "Нема избрано време" : `Избраното време е ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} часа`,
  minutesClockNumberText: (e) => `${e} минути`,
  secondsClockNumberText: (e) => `${e} секунди`,
  // Digital clock labels
  selectViewText: (e) => `Избери ${e}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Недела број",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Недела ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Избери датум, избраниот датум е ${n.format(e, "fullDate")}` : "Избери датум",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Избери време, избраното време е ${n.format(e, "fullTime")}` : "Избери време",
  fieldClearLabel: "Избриши",
  // Table labels
  timeTableLabel: "одбери време",
  dateTableLabel: "одбери датум",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Г".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "ДД",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "чч",
  fieldMinutesPlaceholder: () => "мм",
  fieldSecondsPlaceholder: () => "сс",
  fieldMeridiemPlaceholder: () => "aa"
}, Cie = kn(yie), A$ = {
  hours: "timer",
  minutes: "minutter",
  seconds: "sekunder",
  meridiem: "meridiem"
}, Tie = {
  // Calendar navigation
  previousMonth: "Forrige måned",
  nextMonth: "Neste måned",
  // View navigation
  openPreviousView: "åpne forrige visning",
  openNextView: "åpne neste visning",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "årsvisning er åpen, bytt til kalendervisning" : "kalendervisning er åpen, bytt til årsvisning",
  // DateRange placeholders
  start: "Start",
  end: "Slutt",
  // Action bar
  cancelButtonLabel: "Avbryt",
  clearButtonLabel: "Fjern",
  okButtonLabel: "OK",
  todayButtonLabel: "I dag",
  // Toolbar titles
  datePickerToolbarTitle: "Velg dato",
  dateTimePickerToolbarTitle: "Velg dato & klokkeslett",
  timePickerToolbarTitle: "Velg klokkeslett",
  dateRangePickerToolbarTitle: "Velg datoperiode",
  // Clock labels
  clockLabelText: (e, n, a) => `Velg ${A$[e]}. ${n === null ? "Ingen tid valgt" : `Valgt tid er ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} timer`,
  minutesClockNumberText: (e) => `${e} minutter`,
  secondsClockNumberText: (e) => `${e} sekunder`,
  // Digital clock labels
  selectViewText: (e) => `Velg ${A$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Ukenummer",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Uke ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Velg dato, valgt dato er ${n.format(e, "fullDate")}` : "Velg dato",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Velg tid, valgt tid er ${n.format(e, "fullTime")}` : "Velg tid",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "velg tid",
  dateTableLabel: "velg dato",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Å".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "tt",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, xie = kn(Tie), _$ = {
  hours: "uren",
  minutes: "minuten",
  seconds: "seconden",
  meridiem: "meridium"
}, Sie = {
  // Calendar navigation
  previousMonth: "Vorige maand",
  nextMonth: "Volgende maand",
  // View navigation
  openPreviousView: "open vorige view",
  openNextView: "open volgende view",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "jaarweergave is geopend, schakel over naar kalenderweergave" : "kalenderweergave is geopend, switch naar jaarweergave",
  // DateRange placeholders
  start: "Start",
  end: "Einde",
  // Action bar
  cancelButtonLabel: "Annuleren",
  clearButtonLabel: "Resetten",
  okButtonLabel: "OK",
  todayButtonLabel: "Vandaag",
  // Toolbar titles
  datePickerToolbarTitle: "Selecteer datum",
  dateTimePickerToolbarTitle: "Selecteer datum & tijd",
  timePickerToolbarTitle: "Selecteer tijd",
  dateRangePickerToolbarTitle: "Selecteer datumbereik",
  // Clock labels
  clockLabelText: (e, n, a) => `Selecteer ${_$[e]}. ${n === null ? "Geen tijd geselecteerd" : `Geselecteerde tijd is ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} uren`,
  minutesClockNumberText: (e) => `${e} minuten`,
  secondsClockNumberText: (e) => `${e} seconden`,
  // Digital clock labels
  selectViewText: (e) => `Selecteer ${_$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Weeknummer",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Week ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Kies datum, geselecteerde datum is ${n.format(e, "fullDate")}` : "Kies datum",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Kies tijd, geselecteerde tijd is ${n.format(e, "fullTime")}` : "Kies tijd",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "kies tijd",
  dateTableLabel: "kies datum",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Y".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, kie = kn(Sie), V$ = {
  hours: "godzin",
  minutes: "minut",
  seconds: "sekund",
  meridiem: "popołudnie"
}, wie = {
  // Calendar navigation
  previousMonth: "Poprzedni miesiąc",
  nextMonth: "Następny miesiąc",
  // View navigation
  openPreviousView: "otwórz poprzedni widok",
  openNextView: "otwórz następny widok",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "otwarty jest widok roku, przełącz na widok kalendarza" : "otwarty jest widok kalendarza, przełącz na widok roku",
  // DateRange placeholders
  start: "Początek",
  end: "Koniec",
  // Action bar
  cancelButtonLabel: "Anuluj",
  clearButtonLabel: "Wyczyść",
  okButtonLabel: "Zatwierdź",
  todayButtonLabel: "Dzisiaj",
  // Toolbar titles
  datePickerToolbarTitle: "Wybierz datę",
  dateTimePickerToolbarTitle: "Wybierz datę i czas",
  timePickerToolbarTitle: "Wybierz czas",
  dateRangePickerToolbarTitle: "Wybierz zakres dat",
  // Clock labels
  clockLabelText: (e, n, a) => `Wybierz ${V$[e]}. ${n === null ? "Nie wybrano czasu" : `Wybrany czas to ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} godzin`,
  minutesClockNumberText: (e) => `${e} minut`,
  secondsClockNumberText: (e) => `${e} sekund`,
  // Digital clock labels
  selectViewText: (e) => `Wybierz ${V$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Numer tygodnia",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Tydzień ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e != null && n.isValid(e) ? `Wybierz datę, obecnie wybrana data to ${n.format(e, "fullDate")}` : "Wybierz datę",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Wybierz czas, obecnie wybrany czas to ${n.format(e, "fullTime")}` : "Wybierz czas",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "wybierz czas",
  dateTableLabel: "wybierz datę"
  // Field section placeholders
  // fieldYearPlaceholder: params => 'Y'.repeat(params.digitAmount),
  // fieldMonthPlaceholder: params => params.contentType === 'letter' ? 'MMMM' : 'MM',
  // fieldDayPlaceholder: () => 'DD',
  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',
  // fieldHoursPlaceholder: () => 'hh',
  // fieldMinutesPlaceholder: () => 'mm',
  // fieldSecondsPlaceholder: () => 'ss',
  // fieldMeridiemPlaceholder: () => 'aa',
}, Rie = kn(wie), B$ = {
  hours: "horas",
  minutes: "minutos",
  seconds: "segundos",
  meridiem: "meridiano"
}, Eie = {
  // Calendar navigation
  previousMonth: "Mês anterior",
  nextMonth: "Próximo mês",
  // View navigation
  openPreviousView: "Abrir próxima seleção",
  openNextView: "Abrir seleção anterior",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "Seleção de ano está aberta, alternando para seleção de calendário" : "Seleção de calendários está aberta, alternando para seleção de ano",
  // DateRange placeholders
  start: "Início",
  end: "Fim",
  // Action bar
  cancelButtonLabel: "Cancelar",
  clearButtonLabel: "Limpar",
  okButtonLabel: "OK",
  todayButtonLabel: "Hoje",
  // Toolbar titles
  datePickerToolbarTitle: "Selecione a data",
  dateTimePickerToolbarTitle: "Selecione data e hora",
  timePickerToolbarTitle: "Selecione a hora",
  dateRangePickerToolbarTitle: "Selecione o intervalo entre datas",
  // Clock labels
  clockLabelText: (e, n, a) => `Selecione ${B$[e]}. ${n === null ? "Hora não selecionada" : `Selecionado a hora ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} horas`,
  minutesClockNumberText: (e) => `${e} minutos`,
  secondsClockNumberText: (e) => `${e} segundos`,
  // Digital clock labels
  selectViewText: (e) => `Selecione ${B$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Número da semana",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Semana ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Escolha uma data, data selecionada ${n.format(e, "fullDate")}` : "Escolha uma data",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Escolha uma hora, hora selecionada ${n.format(e, "fullTime")}` : "Escolha uma hora",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "escolha uma hora",
  dateTableLabel: "escolha uma data",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "A".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "SSSS" : "SS",
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, Oie = kn(Eie), Vv = {
  hours: "Ore",
  minutes: "Minute",
  seconds: "Secunde",
  meridiem: "Meridiane"
}, Pie = {
  // Calendar navigation
  previousMonth: "Luna anterioară",
  nextMonth: "Luna următoare",
  // View navigation
  openPreviousView: "Deschideți vizualizarea anterioară",
  openNextView: "Deschideți vizualizarea următoare",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "Vizualizarea anuală este deschisă, comutați la vizualizarea calendarului" : "Vizualizarea calendarului este deschisă, comutați la vizualizarea anuală",
  // DateRange placeholders
  start: "Început",
  end: "Sfârșit",
  // Action bar
  cancelButtonLabel: "Anulare",
  clearButtonLabel: "Ștergere",
  okButtonLabel: "OK",
  todayButtonLabel: "Astăzi",
  // Toolbar titles
  datePickerToolbarTitle: "Selectați data",
  dateTimePickerToolbarTitle: "Selectați data și ora",
  timePickerToolbarTitle: "Selectați ora",
  dateRangePickerToolbarTitle: "Selectați intervalul de date",
  // Clock labels
  clockLabelText: (e, n, a) => {
    var s;
    return `Selectați ${(s = Vv[e]) != null ? s : e}. ${n === null ? "Nicio oră selectată" : `Ora selectată este ${a.format(n, "fullTime")}`}`;
  },
  hoursClockNumberText: (e) => `${e} ${Vv.hours}`,
  minutesClockNumberText: (e) => `${e} ${Vv.minutes}`,
  secondsClockNumberText: (e) => `${e}  ${Vv.seconds}`,
  // Digital clock labels
  selectViewText: (e) => `Selectați ${Vv[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Număr săptămână",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Săptămâna ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Selectați data, data selectată este ${n.format(e, "fullDate")}` : "Selectați data",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Selectați ora, ora selectată este ${n.format(e, "fullTime")}` : "Selectați ora",
  fieldClearLabel: "Golire conținut",
  // Table labels
  timeTableLabel: "Selectați ora",
  dateTableLabel: "Selectați data",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "A".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "LLLL" : "LL",
  fieldDayPlaceholder: () => "ZZ",
  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, Die = kn(Pie), z$ = {
  hours: "часы",
  minutes: "минуты",
  seconds: "секунды",
  meridiem: "меридием"
}, Mie = {
  // Calendar navigation
  previousMonth: "Предыдущий месяц",
  nextMonth: "Следующий месяц",
  // View navigation
  openPreviousView: "открыть предыдущий вид",
  openNextView: "открыть следующий вид",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "открыт годовой вид, переключить на календарный вид" : "открыт календарный вид, переключить на годовой вид",
  // DateRange placeholders
  start: "Начало",
  end: "Конец",
  // Action bar
  cancelButtonLabel: "Отмена",
  clearButtonLabel: "Очистить",
  okButtonLabel: "Ок",
  todayButtonLabel: "Сегодня",
  // Toolbar titles
  datePickerToolbarTitle: "Выбрать дату",
  dateTimePickerToolbarTitle: "Выбрать дату и время",
  timePickerToolbarTitle: "Выбрать время",
  dateRangePickerToolbarTitle: "Выбрать период",
  // Clock labels
  clockLabelText: (e, n, a) => `Выбрать ${z$[e]}. ${n === null ? "Время не выбрано" : `Выбрано время ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} часов`,
  minutesClockNumberText: (e) => `${e} минут`,
  secondsClockNumberText: (e) => `${e} секунд`,
  // Digital clock labels
  selectViewText: (e) => `Выбрать ${z$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Номер недели",
  calendarWeekNumberHeaderText: "№",
  calendarWeekNumberAriaLabelText: (e) => `Неделя ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Выберите дату, выбрана дата ${n.format(e, "fullDate")}` : "Выберите дату",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Выберите время, выбрано время ${n.format(e, "fullTime")}` : "Выберите время",
  fieldClearLabel: "Очистить значение",
  // Table labels
  timeTableLabel: "выбрать время",
  dateTableLabel: "выбрать дату",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Г".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "ММММ" : "ММ",
  fieldDayPlaceholder: () => "ДД",
  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',
  fieldHoursPlaceholder: () => "чч",
  fieldMinutesPlaceholder: () => "мм",
  fieldSecondsPlaceholder: () => "сс",
  fieldMeridiemPlaceholder: () => "(д|п)п"
}, $ie = kn(Mie), F$ = {
  hours: "Hodiny",
  minutes: "Minúty",
  seconds: "Sekundy",
  meridiem: "Popoludnie"
}, Nie = {
  // Calendar navigation
  previousMonth: "Ďalší mesiac",
  nextMonth: "Predchádzajúci mesiac",
  // View navigation
  openPreviousView: "otvoriť predchádzajúce zobrazenie",
  openNextView: "otvoriť ďalšie zobrazenie",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "ročné zobrazenie otvorené, prepnite do zobrazenia kalendára" : "zobrazenie kalendára otvorené, prepnite do zobrazenia roka",
  // DateRange placeholders
  start: "Začiatok",
  end: "Koniec",
  // Action bar
  cancelButtonLabel: "Zrušiť",
  clearButtonLabel: "Vymazať",
  okButtonLabel: "Potvrdiť",
  todayButtonLabel: "Dnes",
  // Toolbar titles
  datePickerToolbarTitle: "Vyberte dátum",
  dateTimePickerToolbarTitle: "Vyberte dátum a čas",
  timePickerToolbarTitle: "Vyberte čas",
  dateRangePickerToolbarTitle: "Vyberete rozmedzie dátumov",
  // Clock labels
  clockLabelText: (e, n, a) => {
    var s;
    return `${(s = F$[e]) != null ? s : e} vybraný. ${n === null ? "Nie je vybraný čas" : `Vybraný čas je ${a.format(n, "fullTime")}`}`;
  },
  hoursClockNumberText: (e) => `${e} hodín`,
  minutesClockNumberText: (e) => `${e} minút`,
  secondsClockNumberText: (e) => `${e} sekúnd`,
  // Digital clock labels
  selectViewText: (e) => `Vyberte ${F$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Týždeň v roku",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `${e} týždeň v roku`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Vyberte dátum, vybraný dátum je ${n.format(e, "fullDate")}` : "Vyberte dátum",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Vyberte čas, vybraný čas je ${n.format(e, "fullTime")}` : "Vyberte čas",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "vyberte čas",
  dateTableLabel: "vyberte dátum",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Y".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, Lie = kn(Nie), j$ = {
  hours: "timmar",
  minutes: "minuter",
  seconds: "sekunder",
  meridiem: "meridiem"
}, Iie = {
  // Calendar navigation
  previousMonth: "Föregående månad",
  nextMonth: "Nästa månad",
  // View navigation
  openPreviousView: "öppna föregående vy",
  openNextView: "öppna nästa vy",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "årsvyn är öppen, byt till kalendervy" : "kalendervyn är öppen, byt till årsvy",
  // DateRange placeholders
  start: "Start",
  end: "Slut",
  // Action bar
  cancelButtonLabel: "Avbryt",
  clearButtonLabel: "Rensa",
  okButtonLabel: "OK",
  todayButtonLabel: "Idag",
  // Toolbar titles
  datePickerToolbarTitle: "Välj datum",
  dateTimePickerToolbarTitle: "Välj datum & tid",
  timePickerToolbarTitle: "Välj tid",
  dateRangePickerToolbarTitle: "Välj datumintervall",
  // Clock labels
  clockLabelText: (e, n, a) => `Välj ${j$[e]}. ${n === null ? "Ingen tid vald" : `Vald tid är ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} timmar`,
  minutesClockNumberText: (e) => `${e} minuter`,
  secondsClockNumberText: (e) => `${e} sekunder`,
  // Digital clock labels
  selectViewText: (e) => `Välj ${j$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Vecka nummer",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Vecka ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Välj datum, valt datum är ${n.format(e, "fullDate")}` : "Välj datum",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Välj tid, vald tid är ${n.format(e, "fullTime")}` : "Välj tid",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "välj tid",
  dateTableLabel: "välj datum"
  // Field section placeholders
  // fieldYearPlaceholder: params => 'Y'.repeat(params.digitAmount),
  // fieldMonthPlaceholder: params => params.contentType === 'letter' ? 'MMMM' : 'MM',
  // fieldDayPlaceholder: () => 'DD',
  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',
  // fieldHoursPlaceholder: () => 'hh',
  // fieldMinutesPlaceholder: () => 'mm',
  // fieldSecondsPlaceholder: () => 'ss',
  // fieldMeridiemPlaceholder: () => 'aa',
}, Aie = kn(Iie), U$ = {
  hours: "saat",
  minutes: "dakika",
  seconds: "saniye",
  meridiem: "öğleden sonra"
}, _ie = {
  // Calendar navigation
  previousMonth: "Önceki ay",
  nextMonth: "Sonraki ay",
  // View navigation
  openPreviousView: "sonraki görünüm",
  openNextView: "önceki görünüm",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "yıl görünümü açık, takvim görünümüne geç" : "takvim görünümü açık, yıl görünümüne geç",
  // DateRange placeholders
  start: "Başlangıç",
  end: "Bitiş",
  // Action bar
  cancelButtonLabel: "iptal",
  clearButtonLabel: "Temizle",
  okButtonLabel: "Tamam",
  todayButtonLabel: "Bugün",
  // Toolbar titles
  datePickerToolbarTitle: "Tarih Seç",
  dateTimePickerToolbarTitle: "Tarih & Saat seç",
  timePickerToolbarTitle: "Saat seç",
  dateRangePickerToolbarTitle: "Tarih aralığı seçin",
  // Clock labels
  clockLabelText: (e, n, a) => `${U$[e]} seç.  ${n === null ? "Zaman seçilmedi" : `Seçilen zaman: ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} saat`,
  minutesClockNumberText: (e) => `${e} dakika`,
  secondsClockNumberText: (e) => `${e} saniye`,
  // Digital clock labels
  selectViewText: (e) => `Seç ${U$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Hafta numarası",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Hafta ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Tarih seçin, seçilen tarih: ${n.format(e, "fullDate")}` : "Tarih seç",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Saat seçin, seçilen saat: ${n.format(e, "fullTime")}` : "Saat seç",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "saat seç",
  dateTableLabel: "tarih seç",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Y".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "AAA" : "AA",
  fieldDayPlaceholder: () => "GG",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "HHH" : "HH",
  fieldHoursPlaceholder: () => "ss",
  fieldMinutesPlaceholder: () => "dd",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, Vie = kn(_ie), H$ = {
  hours: "годин",
  minutes: "хвилин",
  seconds: "секунд",
  meridiem: "Південь"
}, Bie = {
  // Calendar navigation
  previousMonth: "Попередній місяць",
  nextMonth: "Наступний місяць",
  // View navigation
  openPreviousView: "відкрити попередній вигляд",
  openNextView: "відкрити наступний вигляд",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "річний вигляд відкрито, перейти до календарного вигляду" : "календарний вигляд відкрито, перейти до річного вигляду",
  // DateRange placeholders
  start: "Початок",
  end: "Кінець",
  // Action bar
  cancelButtonLabel: "Відміна",
  clearButtonLabel: "Очистити",
  okButtonLabel: "OK",
  todayButtonLabel: "Сьогодні",
  // Toolbar titles
  datePickerToolbarTitle: "Вибрати дату",
  dateTimePickerToolbarTitle: "Вибрати дату і час",
  timePickerToolbarTitle: "Вибрати час",
  dateRangePickerToolbarTitle: "Вибрати календарний період",
  // Clock labels
  clockLabelText: (e, n, a) => `Вибрати ${H$[e]}. ${n === null ? "Час не вибраний" : `Вибрано час ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} годин`,
  minutesClockNumberText: (e) => `${e} хвилин`,
  secondsClockNumberText: (e) => `${e} секунд`,
  // Digital clock labels
  selectViewText: (e) => `Вибрати ${H$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Номер тижня",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Тиждень ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Оберіть дату, обрана дата  ${n.format(e, "fullDate")}` : "Оберіть дату",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Оберіть час, обраний час  ${n.format(e, "fullTime")}` : "Оберіть час",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "оберіть час",
  dateTableLabel: "оберіть дату",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Y".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, zie = kn(Bie), W$ = {
  hours: "گھنٹے",
  minutes: "منٹ",
  seconds: "سیکنڈ",
  meridiem: "میریڈیم"
}, Fie = {
  // Calendar navigation
  previousMonth: "پچھلا مہینہ",
  nextMonth: "اگلا مہینہ",
  // View navigation
  openPreviousView: "پچھلا ویو کھولیں",
  openNextView: "اگلا ویو کھولیں",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "سال والا ویو کھلا ہے۔ کیلنڈر والا ویو کھولیں" : "کیلنڈر والا ویو کھلا ہے۔ سال والا ویو کھولیں",
  // DateRange placeholders
  start: "شروع",
  end: "ختم",
  // Action bar
  cancelButtonLabel: "کینسل",
  clearButtonLabel: "کلئیر",
  okButtonLabel: "اوکے",
  todayButtonLabel: "آج",
  // Toolbar titles
  datePickerToolbarTitle: "تاریخ منتخب کریں",
  dateTimePickerToolbarTitle: "تاریخ اور وقت منتخب کریں",
  timePickerToolbarTitle: "وقت منتخب کریں",
  dateRangePickerToolbarTitle: "تاریخوں کی رینج منتخب کریں",
  // Clock labels
  clockLabelText: (e, n, a) => `${W$[e]} منتخب کریں ${n === null ? "کوئی وقت منتخب نہیں" : `منتخب وقت ہے ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} گھنٹے`,
  minutesClockNumberText: (e) => `${e} منٹ`,
  secondsClockNumberText: (e) => `${e} سیکنڈ`,
  // Digital clock labels
  selectViewText: (e) => `${W$[e]} منتخب کریں`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "ہفتہ نمبر",
  calendarWeekNumberHeaderText: "نمبر",
  calendarWeekNumberAriaLabelText: (e) => `ہفتہ ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `تاریخ منتخب کریں، منتخب شدہ تاریخ ہے ${n.format(e, "fullDate")}` : "تاریخ منتخب کریں",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `وقت منتخب کریں، منتخب شدہ وقت ہے ${n.format(e, "fullTime")}` : "وقت منتخب کریں",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "وقت منتخب کریں",
  dateTableLabel: "تاریخ منتخب کریں"
  // Field section placeholders
  // fieldYearPlaceholder: params => 'Y'.repeat(params.digitAmount),
  // fieldMonthPlaceholder: params => params.contentType === 'letter' ? 'MMMM' : 'MM',
  // fieldDayPlaceholder: () => 'DD',
  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',
  // fieldHoursPlaceholder: () => 'hh',
  // fieldMinutesPlaceholder: () => 'mm',
  // fieldSecondsPlaceholder: () => 'ss',
  // fieldMeridiemPlaceholder: () => 'aa',
}, jie = kn(Fie), Y$ = {
  hours: "giờ",
  minutes: "phút",
  seconds: "giây",
  meridiem: "buổi"
}, Uie = {
  // Calendar navigation
  previousMonth: "Tháng trước",
  nextMonth: "Tháng sau",
  // View navigation
  openPreviousView: "mở xem trước",
  openNextView: "mở xem sau",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "đang mở xem năm, chuyển sang xem lịch" : "đang mở xem lịch, chuyển sang xem năm",
  // DateRange placeholders
  start: "Bắt đầu",
  end: "Kết thúc",
  // Action bar
  cancelButtonLabel: "Hủy",
  clearButtonLabel: "Xóa",
  okButtonLabel: "OK",
  todayButtonLabel: "Hôm nay",
  // Toolbar titles
  datePickerToolbarTitle: "Chọn ngày",
  dateTimePickerToolbarTitle: "Chọn ngày và giờ",
  timePickerToolbarTitle: "Chọn giờ",
  dateRangePickerToolbarTitle: "Chọn khoảng ngày",
  // Clock labels
  clockLabelText: (e, n, a) => `Chọn ${Y$[e]}. ${n === null ? "Không có giờ được chọn" : `Giờ được chọn là ${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} giờ`,
  minutesClockNumberText: (e) => `${e} phút`,
  secondsClockNumberText: (e) => `${e} giây`,
  // Digital clock labels
  selectViewText: (e) => `Chọn ${Y$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Số tuần",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Tuần ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Chọn ngày, ngày đã chọn là ${n.format(e, "fullDate")}` : "Chọn ngày",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `Chọn giờ, giờ đã chọn là ${n.format(e, "fullTime")}` : "Chọn giờ",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "chọn giờ",
  dateTableLabel: "chọn ngày",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Y".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, Hie = kn(Uie), q$ = {
  hours: "小时",
  minutes: "分钟",
  seconds: "秒",
  meridiem: "子午线"
}, Wie = {
  // Calendar navigation
  previousMonth: "上个月",
  nextMonth: "下个月",
  // View navigation
  openPreviousView: "前一个视图",
  openNextView: "下一个视图",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "年视图已打开，切换为日历视图" : "日历视图已打开，切换为年视图",
  // DateRange placeholders
  start: "开始",
  end: "结束",
  // Action bar
  cancelButtonLabel: "取消",
  clearButtonLabel: "清除",
  okButtonLabel: "确认",
  todayButtonLabel: "今天",
  // Toolbar titles
  datePickerToolbarTitle: "选择日期",
  dateTimePickerToolbarTitle: "选择日期和时间",
  timePickerToolbarTitle: "选择时间",
  dateRangePickerToolbarTitle: "选择时间范围",
  // Clock labels
  clockLabelText: (e, n, a) => `选择 ${q$[e]}. ${n === null ? "未选择时间" : `已选择${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e}小时`,
  minutesClockNumberText: (e) => `${e}分钟`,
  secondsClockNumberText: (e) => `${e}秒`,
  // Digital clock labels
  selectViewText: (e) => `选择 ${q$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "周数",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `第${e}周`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `选择日期，已选择${n.format(e, "fullDate")}` : "选择日期",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `选择时间，已选择${n.format(e, "fullTime")}` : "选择时间",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "选择时间",
  dateTableLabel: "选择日期",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Y".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, Yie = kn(Wie), G$ = {
  hours: "小時",
  minutes: "分鐘",
  seconds: "秒",
  meridiem: "子午線"
}, qie = {
  // Calendar navigation
  previousMonth: "上個月",
  nextMonth: "下個月",
  // View navigation
  openPreviousView: "前一個檢視表",
  openNextView: "下一個檢視表",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "年份檢視表已打開，切換以檢視日曆" : "日曆檢視表已打開，切換以檢視年份",
  // DateRange placeholders
  start: "開始",
  end: "結束",
  // Action bar
  cancelButtonLabel: "取消",
  clearButtonLabel: "清除",
  okButtonLabel: "確認",
  todayButtonLabel: "今日",
  // Toolbar titles
  datePickerToolbarTitle: "選擇日期",
  dateTimePickerToolbarTitle: "選擇日期和時間",
  timePickerToolbarTitle: "選擇時間",
  dateRangePickerToolbarTitle: "選擇時間範圍",
  // Clock labels
  clockLabelText: (e, n, a) => `選擇 ${G$[e]}. ${n === null ? "未選擇時間" : `已選擇${a.format(n, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e}小時`,
  minutesClockNumberText: (e) => `${e}分鐘`,
  secondsClockNumberText: (e) => `${e}秒`,
  // Digital clock labels
  selectViewText: (e) => `選擇 ${G$[e]}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "週數",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `第${e}週`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `選擇日期，已選擇${n.format(e, "fullDate")}` : "選擇日期",
  openTimePickerDialogue: (e, n) => e !== null && n.isValid(e) ? `選擇時間，已選擇${n.format(e, "fullTime")}` : "選擇時間",
  // fieldClearLabel: 'Clear value',
  // Table labels
  timeTableLabel: "選擇時間",
  dateTableLabel: "選擇日期",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Y".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa"
}, Gie = kn(qie);
function F_(e, n, a, s) {
  const {
    value: u,
    onError: d
  } = e, p = Md(), h = k.useRef(s), g = n({
    adapter: p,
    value: u,
    props: e
  });
  return k.useEffect(() => {
    d && !a(g, h.current) && d(g, u), h.current = g;
  }, [a, d, h, g, u]), g;
}
const Kie = (e) => {
  const n = dn(), a = pr(), s = Md(), d = En().direction === "rtl", {
    valueManager: p,
    fieldValueManager: h,
    valueType: g,
    validator: b,
    internalProps: x,
    internalProps: {
      value: S,
      defaultValue: E,
      referenceDate: R,
      onChange: $,
      format: M,
      formatDensity: O = "dense",
      selectedSections: N,
      onSelectedSectionsChange: V,
      shouldRespectLeadingZeros: I = !1,
      timezone: z
    }
  } = e, {
    timezone: B,
    value: P,
    handleValueChange: F
  } = F1({
    timezone: z,
    value: S,
    defaultValue: E,
    onChange: $,
    valueManager: p
  }), H = k.useMemo(() => sae(n, B), [n, B]), U = k.useCallback((ue, xe = null) => h.getSectionsFromValue(n, ue, xe, d, (me) => h$(n, B, a, M, me, O, I, d)), [h, M, a, d, I, n, O, B]), Q = k.useMemo(() => h.getValueStrFromSections(U(p.emptyValue), d), [h, U, p.emptyValue, d]), [Y, te] = k.useState(() => {
    const ue = U(P);
    g$(ue, g);
    const xe = {
      sections: ue,
      value: P,
      referenceValue: p.emptyValue,
      tempValueStrAndroid: null
    }, me = Jre(ue), Se = p.getInitialReferenceValue({
      referenceDate: R,
      value: P,
      utils: n,
      props: x,
      granularity: me,
      timezone: B
    });
    return y({}, xe, {
      referenceValue: Se
    });
  }), [Z, q] = Eo({
    controlled: N,
    default: null,
    name: "useField",
    state: "selectedSectionIndexes"
  }), X = (ue) => {
    q(ue), V == null || V(ue), te((xe) => y({}, xe, {
      selectedSectionQuery: null
    }));
  }, oe = k.useMemo(() => {
    if (Z == null)
      return null;
    if (Z === "all")
      return {
        startIndex: 0,
        endIndex: Y.sections.length - 1,
        shouldSelectBoundarySelectors: !0
      };
    if (typeof Z == "number")
      return {
        startIndex: Z,
        endIndex: Z
      };
    if (typeof Z == "string") {
      const ue = Y.sections.findIndex((xe) => xe.type === Z);
      return {
        startIndex: ue,
        endIndex: ue
      };
    }
    return Z;
  }, [Z, Y.sections]), ie = ({
    value: ue,
    referenceValue: xe,
    sections: me
  }) => {
    if (te((ce) => y({}, ce, {
      sections: me,
      value: ue,
      referenceValue: xe,
      tempValueStrAndroid: null
    })), p.areValuesEqual(n, Y.value, ue))
      return;
    const Se = {
      validationError: b({
        adapter: s,
        value: ue,
        props: y({}, x, {
          value: ue,
          timezone: B
        })
      })
    };
    F(ue, Se);
  }, K = (ue, xe) => {
    const me = [...Y.sections];
    return me[ue] = y({}, me[ue], {
      value: xe,
      modified: !0
    }), P_(me, d);
  }, ne = () => {
    ie({
      value: p.emptyValue,
      referenceValue: Y.referenceValue,
      sections: U(p.emptyValue)
    });
  }, se = () => {
    if (oe == null)
      return;
    const ue = Y.sections[oe.startIndex], xe = h.getActiveDateManager(n, Y, ue), Se = xe.getSections(Y.sections).filter((Ee) => Ee.value !== "").length === (ue.value === "" ? 0 : 1), ce = K(oe.startIndex, ""), Le = Se ? null : n.date(/* @__PURE__ */ new Date("")), Ze = xe.getNewValuesFromNewActiveDate(Le);
    (Le != null && !n.isValid(Le)) != (xe.date != null && !n.isValid(xe.date)) ? ie(y({}, Ze, {
      sections: ce
    })) : te((Ee) => y({}, Ee, Ze, {
      sections: ce,
      tempValueStrAndroid: null
    }));
  }, ze = (ue) => {
    const xe = (ce, Le) => {
      const Ze = n.parse(ce, M);
      if (Ze == null || !n.isValid(Ze))
        return null;
      const Ee = h$(n, B, a, M, Ze, O, I, d);
      return y$(n, B, Ze, Ee, Le, !1);
    }, me = h.parseValueStr(ue, Y.referenceValue, xe), Se = h.updateReferenceValue(n, me, Y.referenceValue);
    ie({
      value: me,
      referenceValue: Se,
      sections: U(me, Y.sections)
    });
  }, Ue = ({
    activeSection: ue,
    newSectionValue: xe,
    shouldGoToNextSection: me
  }) => {
    me && oe && oe.startIndex < Y.sections.length - 1 ? X(oe.startIndex + 1) : oe && oe.startIndex !== oe.endIndex && X(oe.startIndex);
    const Se = h.getActiveDateManager(n, Y, ue), ce = K(oe.startIndex, xe), Le = Se.getSections(ce), Ze = aae(n, Le);
    let Ee, Ae;
    if (Ze != null && n.isValid(Ze)) {
      const Ce = y$(n, B, Ze, Le, Se.referenceDate, !0);
      Ee = Se.getNewValuesFromNewActiveDate(Ce), Ae = !0;
    } else
      Ee = Se.getNewValuesFromNewActiveDate(Ze), Ae = (Ze != null && !n.isValid(Ze)) != (Se.date != null && !n.isValid(Se.date));
    return Ae ? ie(y({}, Ee, {
      sections: ce
    })) : te((Ce) => y({}, Ce, Ee, {
      sections: ce,
      tempValueStrAndroid: null
    }));
  }, Oe = (ue) => te((xe) => y({}, xe, {
    tempValueStrAndroid: ue
  }));
  return k.useEffect(() => {
    const ue = U(Y.value);
    g$(ue, g), te((xe) => y({}, xe, {
      sections: ue
    }));
  }, [M, n.locale]), k.useEffect(() => {
    let ue = !1;
    p.areValuesEqual(n, Y.value, P) ? ue = p.getTimezone(n, Y.value) !== p.getTimezone(n, P) : ue = !0, ue && te((xe) => y({}, xe, {
      value: P,
      referenceValue: h.updateReferenceValue(n, P, xe.referenceValue),
      sections: U(P)
    }));
  }, [P]), {
    state: Y,
    selectedSectionIndexes: oe,
    setSelectedSections: X,
    clearValue: ne,
    clearActiveSection: se,
    updateSectionValue: Ue,
    updateValueFromValueStr: ze,
    setTempAndroidValueStr: Oe,
    sectionsValueBoundaries: H,
    placeholder: Q,
    timezone: B
  };
}, Qie = 5e3, Pf = (e) => e.saveQuery != null, Xie = ({
  sections: e,
  updateSectionValue: n,
  sectionsValueBoundaries: a,
  setTempAndroidValueStr: s,
  timezone: u
}) => {
  const d = dn(), [p, h] = k.useState(null), g = kt(() => h(null));
  k.useEffect(() => {
    var R;
    p != null && ((R = e[p.sectionIndex]) == null ? void 0 : R.type) !== p.sectionType && g();
  }, [e, p, g]), k.useEffect(() => {
    if (p != null) {
      const R = setTimeout(() => g(), Qie);
      return () => {
        window.clearTimeout(R);
      };
    }
    return () => {
    };
  }, [p, g]);
  const b = ({
    keyPressed: R,
    sectionIndex: $
  }, M, O) => {
    const N = R.toLowerCase(), V = e[$];
    if (p != null && (!O || O(p.value)) && p.sectionIndex === $) {
      const z = `${p.value}${N}`, B = M(z, V);
      if (!Pf(B))
        return h({
          sectionIndex: $,
          value: z,
          sectionType: V.type
        }), B;
    }
    const I = M(N, V);
    return Pf(I) && !I.saveQuery ? (g(), null) : (h({
      sectionIndex: $,
      value: N,
      sectionType: V.type
    }), Pf(I) ? null : I);
  }, x = (R) => {
    const $ = (N, V, I) => {
      const z = V.filter((B) => B.toLowerCase().startsWith(I));
      return z.length === 0 ? {
        saveQuery: !1
      } : {
        sectionValue: z[0],
        shouldGoToNextSection: z.length === 1
      };
    }, M = (N, V, I, z) => {
      const B = (P) => R_(d, u, V.type, P);
      if (V.contentType === "letter")
        return $(V.format, B(V.format), N);
      if (I && z != null && j1(d, I).contentType === "letter") {
        const P = B(I), F = $(I, P, N);
        return Pf(F) ? {
          saveQuery: !1
        } : y({}, F, {
          sectionValue: z(F.sectionValue, P)
        });
      }
      return {
        saveQuery: !1
      };
    };
    return b(R, (N, V) => {
      switch (V.type) {
        case "month": {
          const I = (z) => m$(d, z, d.formats.month, V.format);
          return M(N, V, d.formats.month, I);
        }
        case "weekDay": {
          const I = (z, B) => B.indexOf(z).toString();
          return M(N, V, d.formats.weekday, I);
        }
        case "meridiem":
          return M(N, V);
        default:
          return {
            saveQuery: !1
          };
      }
    });
  }, S = (R) => {
    const $ = (O, N) => {
      const V = +`${O}`, I = a[N.type]({
        currentDate: null,
        format: N.format,
        contentType: N.contentType
      });
      if (V > I.maximum)
        return {
          saveQuery: !1
        };
      if (V < I.minimum)
        return {
          saveQuery: !0
        };
      const z = +`${O}0` > I.maximum || O.length === I.maximum.toString().length;
      return {
        sectionValue: O_(d, u, V, I, N),
        shouldGoToNextSection: z
      };
    };
    return b(R, (O, N) => {
      if (N.contentType === "digit" || N.contentType === "digit-with-letter")
        return $(O, N);
      if (N.type === "month") {
        const V = M_(d, u, "digit", "month", "MM"), I = $(O, {
          type: N.type,
          format: "MM",
          hasLeadingZerosInFormat: V,
          hasLeadingZerosInInput: !0,
          contentType: "digit",
          maxLength: 2
        });
        if (Pf(I))
          return I;
        const z = m$(d, I.sectionValue, "MM", N.format);
        return y({}, I, {
          sectionValue: z
        });
      }
      if (N.type === "weekDay") {
        const V = $(O, N);
        if (Pf(V))
          return V;
        const I = ix(d, u, N.format)[Number(V.sectionValue) - 1];
        return y({}, V, {
          sectionValue: I
        });
      }
      return {
        saveQuery: !1
      };
    }, (O) => !Number.isNaN(Number(O)));
  };
  return {
    applyCharacterEditing: kt((R) => {
      const $ = e[R.sectionIndex], O = !Number.isNaN(Number(R.keyPressed)) ? S(R) : x(R);
      O == null ? s(null) : n({
        activeSection: $,
        newSectionValue: O.sectionValue,
        shouldGoToNextSection: O.shouldGoToNextSection
      });
    }),
    resetCharacterQuery: g
  };
};
function Nf(e, n) {
  return Array.isArray(n) ? n.every((a) => e.indexOf(a) !== -1) : e.indexOf(n) !== -1;
}
const Zie = (e, n) => (a) => {
  (a.key === "Enter" || a.key === " ") && (e(a), a.preventDefault(), a.stopPropagation()), n && n(a);
}, _T = (e = document) => {
  const n = e.activeElement;
  return n ? n.shadowRoot ? _T(n.shadowRoot) : n : null;
}, sx = "@media (pointer: fine)", Jie = ["onClick", "onKeyDown", "onFocus", "onBlur", "onMouseUp", "onPaste", "error", "clearable", "onClear", "disabled"], K1 = (e) => {
  const n = dn(), {
    state: a,
    selectedSectionIndexes: s,
    setSelectedSections: u,
    clearValue: d,
    clearActiveSection: p,
    updateSectionValue: h,
    updateValueFromValueStr: g,
    setTempAndroidValueStr: b,
    sectionsValueBoundaries: x,
    placeholder: S,
    timezone: E
  } = Kie(e), {
    inputRef: R,
    internalProps: $,
    internalProps: {
      readOnly: M = !1,
      unstableFieldRef: O,
      minutesStep: N
    },
    forwardedProps: {
      onClick: V,
      onKeyDown: I,
      onFocus: z,
      onBlur: B,
      onMouseUp: P,
      onPaste: F,
      error: H,
      clearable: U,
      onClear: Q,
      disabled: Y
    },
    fieldValueManager: te,
    valueManager: Z,
    validator: q
  } = e, X = le(e.forwardedProps, Jie), {
    applyCharacterEditing: oe,
    resetCharacterQuery: ie
  } = Xie({
    sections: a.sections,
    updateSectionValue: h,
    sectionsValueBoundaries: x,
    setTempAndroidValueStr: b,
    timezone: E
  }), K = k.useRef(null), ne = cn(R, K), se = k.useRef(void 0), Ue = En().direction === "rtl", Oe = k.useMemo(() => uae(a.sections, Ue), [a.sections, Ue]), ue = () => {
    var ge;
    if (M) {
      u(null);
      return;
    }
    const ve = (ge = K.current.selectionStart) != null ? ge : 0;
    let qe;
    ve <= a.sections[0].startInInput || ve >= a.sections[a.sections.length - 1].endInInput ? qe = 1 : qe = a.sections.findIndex((yt) => yt.startInInput - yt.startSeparator.length > ve);
    const vt = qe === -1 ? a.sections.length - 1 : qe - 1;
    u(vt);
  }, xe = kt((ge, ...ve) => {
    ge.isDefaultPrevented() || (V == null || V(ge, ...ve), ue());
  }), me = kt((ge) => {
    P == null || P(ge), ge.preventDefault();
  }), Se = kt((...ge) => {
    z == null || z(...ge);
    const ve = K.current;
    window.clearTimeout(se.current), se.current = setTimeout(() => {
      !ve || ve !== K.current || s != null || M || (// avoid selecting all sections when focusing empty field without value
      ve.value.length && Number(ve.selectionEnd) - Number(ve.selectionStart) === ve.value.length ? u("all") : ue());
    });
  }), ce = kt((...ge) => {
    B == null || B(...ge), u(null);
  }), Le = kt((ge) => {
    if (F == null || F(ge), M) {
      ge.preventDefault();
      return;
    }
    const ve = ge.clipboardData.getData("text");
    if (s && s.startIndex === s.endIndex) {
      const qe = a.sections[s.startIndex], vt = /^[a-zA-Z]+$/.test(ve), yt = /^[0-9]+$/.test(ve), Mt = /^(([a-zA-Z]+)|)([0-9]+)(([a-zA-Z]+)|)$/.test(ve);
      if (qe.contentType === "letter" && vt || qe.contentType === "digit" && yt || qe.contentType === "digit-with-letter" && Mt) {
        ie(), h({
          activeSection: qe,
          newSectionValue: ve,
          shouldGoToNextSection: !0
        }), ge.preventDefault();
        return;
      }
      if (vt || yt) {
        ge.preventDefault();
        return;
      }
    }
    ge.preventDefault(), ie(), g(ve);
  }), Ze = kt((ge) => {
    if (M)
      return;
    const ve = ge.target.value;
    if (ve === "") {
      ie(), d();
      return;
    }
    const qe = ge.nativeEvent.data, vt = qe && qe.length > 1, yt = vt ? qe : ve, Mt = _f(yt);
    if (s == null || vt) {
      g(vt ? qe : Mt);
      return;
    }
    let bt;
    if (s.startIndex === 0 && s.endIndex === a.sections.length - 1 && Mt.length === 1)
      bt = Mt;
    else {
      const wt = _f(te.getValueStrFromSections(a.sections, Ue));
      let we = -1, Re = -1;
      for (let et = 0; et < wt.length; et += 1)
        we === -1 && wt[et] !== Mt[et] && (we = et), Re === -1 && wt[wt.length - et - 1] !== Mt[Mt.length - et - 1] && (Re = et);
      const at = a.sections[s.startIndex];
      if (we < at.start || wt.length - Re - 1 > at.end)
        return;
      const lt = Mt.length - wt.length + at.end - _f(at.endSeparator || "").length;
      bt = Mt.slice(at.start + _f(at.startSeparator || "").length, lt);
    }
    if (bt.length === 0) {
      cae() ? b(yt) : (ie(), p());
      return;
    }
    oe({
      keyPressed: bt,
      sectionIndex: s.startIndex
    });
  }), Ee = kt((ge) => {
    switch (I == null || I(ge), !0) {
      case (ge.key === "a" && (ge.ctrlKey || ge.metaKey)): {
        ge.preventDefault(), u("all");
        break;
      }
      case ge.key === "ArrowRight": {
        if (ge.preventDefault(), s == null)
          u(Oe.startIndex);
        else if (s.startIndex !== s.endIndex)
          u(s.endIndex);
        else {
          const ve = Oe.neighbors[s.startIndex].rightIndex;
          ve !== null && u(ve);
        }
        break;
      }
      case ge.key === "ArrowLeft": {
        if (ge.preventDefault(), s == null)
          u(Oe.endIndex);
        else if (s.startIndex !== s.endIndex)
          u(s.startIndex);
        else {
          const ve = Oe.neighbors[s.startIndex].leftIndex;
          ve !== null && u(ve);
        }
        break;
      }
      case ge.key === "Delete": {
        if (ge.preventDefault(), M)
          break;
        s == null || s.startIndex === 0 && s.endIndex === a.sections.length - 1 ? d() : p(), ie();
        break;
      }
      case ["ArrowUp", "ArrowDown", "Home", "End", "PageUp", "PageDown"].includes(ge.key): {
        if (ge.preventDefault(), M || s == null)
          break;
        const ve = a.sections[s.startIndex], qe = te.getActiveDateManager(n, a, ve), vt = nae(n, E, ve, ge.key, x, qe.date, {
          minutesStep: N
        });
        h({
          activeSection: ve,
          newSectionValue: vt,
          shouldGoToNextSection: !1
        });
        break;
      }
    }
  });
  ro(() => {
    if (!K.current)
      return;
    if (s == null) {
      K.current.scrollLeft && (K.current.scrollLeft = 0);
      return;
    }
    const ge = a.sections[s.startIndex], ve = a.sections[s.endIndex];
    let qe = ge.startInInput, vt = ve.endInInput;
    if (s.shouldSelectBoundarySelectors && (qe -= ge.startSeparator.length, vt += ve.endSeparator.length), qe !== K.current.selectionStart || vt !== K.current.selectionEnd) {
      const yt = K.current.scrollTop;
      K.current === _T(document) && K.current.setSelectionRange(qe, vt), K.current.scrollTop = yt;
    }
  });
  const Ae = F_(y({}, $, {
    value: a.value,
    timezone: E
  }), q, Z.isSameError, Z.defaultErrorState), Ce = k.useMemo(() => H !== void 0 ? H : Z.hasError(Ae), [Z, Ae, H]);
  k.useEffect(() => {
    !Ce && !s && ie();
  }, [a.referenceValue, s, Ce]), k.useEffect(() => (K.current && K.current === document.activeElement && u("all"), () => window.clearTimeout(se.current)), []), k.useEffect(() => {
    a.tempValueStrAndroid != null && s != null && (ie(), p());
  }, [a.tempValueStrAndroid]);
  const ae = k.useMemo(() => {
    var ge;
    return (ge = a.tempValueStrAndroid) != null ? ge : te.getValueStrFromSections(a.sections, Ue);
  }, [a.sections, te, a.tempValueStrAndroid, Ue]), Pe = k.useMemo(() => s == null || a.sections[s.startIndex].contentType === "letter" ? "text" : "numeric", [s, a.sections]), ke = K.current && K.current === _T(document), pt = Z.areValuesEqual(n, a.value, Z.emptyValue), _e = !ke && pt;
  k.useImperativeHandle(O, () => ({
    getSections: () => a.sections,
    getActiveSectionIndex: () => {
      var ge, ve;
      const qe = (ge = K.current.selectionStart) != null ? ge : 0, vt = (ve = K.current.selectionEnd) != null ? ve : 0;
      if (qe === 0 && vt === 0)
        return null;
      const yt = qe <= a.sections[0].startInInput ? 1 : a.sections.findIndex((Mt) => Mt.startInInput - Mt.startSeparator.length > qe);
      return yt === -1 ? a.sections.length - 1 : yt - 1;
    },
    setSelectedSections: (ge) => u(ge)
  }));
  const dt = kt((ge, ...ve) => {
    var qe;
    ge.preventDefault(), Q == null || Q(ge, ...ve), d(), K == null || (qe = K.current) == null || qe.focus(), u(0);
  });
  return y({
    placeholder: S,
    autoComplete: "off",
    disabled: !!Y
  }, X, {
    value: _e ? "" : ae,
    inputMode: Pe,
    readOnly: M,
    onClick: xe,
    onFocus: Se,
    onBlur: ce,
    onPaste: Le,
    onChange: Ze,
    onKeyDown: Ee,
    onMouseUp: me,
    onClear: dt,
    error: Ce,
    ref: ne,
    clearable: !!(U && !pt && !M && !Y)
  });
}, am = ({
  props: e,
  value: n,
  adapter: a
}) => {
  if (n === null)
    return null;
  const {
    shouldDisableDate: s,
    shouldDisableMonth: u,
    shouldDisableYear: d,
    disablePast: p,
    disableFuture: h,
    timezone: g
  } = e, b = a.utils.dateWithTimezone(void 0, g), x = Xr(a.utils, e.minDate, a.defaultDates.minDate), S = Xr(a.utils, e.maxDate, a.defaultDates.maxDate);
  switch (!0) {
    case !a.utils.isValid(n):
      return "invalidDate";
    case !!(s && s(n)):
      return "shouldDisableDate";
    case !!(u && u(n)):
      return "shouldDisableMonth";
    case !!(d && d(n)):
      return "shouldDisableYear";
    case !!(h && a.utils.isAfterDay(n, b)):
      return "disableFuture";
    case !!(p && a.utils.isBeforeDay(n, b)):
      return "disablePast";
    case !!(x && a.utils.isBeforeDay(n, x)):
      return "minDate";
    case !!(S && a.utils.isAfterDay(n, S)):
      return "maxDate";
    default:
      return null;
  }
}, Aw = ["disablePast", "disableFuture", "minDate", "maxDate", "shouldDisableDate", "shouldDisableMonth", "shouldDisableYear"], _w = ["disablePast", "disableFuture", "minTime", "maxTime", "shouldDisableClock", "shouldDisableTime", "minutesStep", "ampm", "disableIgnoringDatePartForTimeValidation"], j_ = ["minDateTime", "maxDateTime"], ese = [...Aw, ..._w, ...j_], im = (e) => ese.reduce((n, a) => (e.hasOwnProperty(a) && (n[a] = e[a]), n), {}), tse = ["value", "defaultValue", "referenceDate", "format", "formatDensity", "onChange", "timezone", "readOnly", "onError", "shouldRespectLeadingZeros", "selectedSections", "onSelectedSectionsChange", "unstableFieldRef"], Q1 = (e, n) => {
  const a = y({}, e), s = {}, u = (d) => {
    a.hasOwnProperty(d) && (s[d] = a[d], delete a[d]);
  };
  return tse.forEach(u), n === "date" ? Aw.forEach(u) : n === "time" ? _w.forEach(u) : n === "date-time" && (Aw.forEach(u), _w.forEach(u), j_.forEach(u)), {
    forwardedProps: a,
    internalProps: s
  };
}, nse = (e) => {
  var n, a, s;
  const u = dn(), d = $d();
  return y({}, e, {
    disablePast: (n = e.disablePast) != null ? n : !1,
    disableFuture: (a = e.disableFuture) != null ? a : !1,
    format: (s = e.format) != null ? s : u.formats.keyboardDate,
    minDate: Xr(u, e.minDate, d.minDate),
    maxDate: Xr(u, e.maxDate, d.maxDate)
  });
}, U_ = ({
  props: e,
  inputRef: n
}) => {
  const a = nse(e), {
    forwardedProps: s,
    internalProps: u
  } = Q1(a, "date");
  return K1({
    inputRef: n,
    forwardedProps: s,
    internalProps: u,
    valueManager: Oo,
    fieldValueManager: H1,
    validator: am,
    valueType: "date"
  });
}, ose = J(Tq)({
  [`& .${Zv.container}`]: {
    outline: 0
  },
  [`& .${Zv.paper}`]: {
    outline: 0,
    minWidth: Ig
  }
}), rse = J(Aq)({
  "&:first-of-type": {
    padding: 0
  }
});
function ase(e) {
  var n, a;
  const {
    children: s,
    onDismiss: u,
    open: d,
    slots: p,
    slotProps: h
  } = e, g = (n = p == null ? void 0 : p.dialog) != null ? n : ose, b = (a = p == null ? void 0 : p.mobileTransition) != null ? a : em;
  return /* @__PURE__ */ _(g, y({
    open: d,
    onClose: u
  }, h == null ? void 0 : h.dialog, {
    TransitionComponent: b,
    TransitionProps: h == null ? void 0 : h.mobileTransition,
    PaperComponent: p == null ? void 0 : p.mobilePaper,
    PaperProps: h == null ? void 0 : h.mobilePaper,
    children: /* @__PURE__ */ _(rse, {
      children: s
    })
  }));
}
function ise(e) {
  return We("MuiPickersPopper", e);
}
Ye("MuiPickersPopper", ["root", "paper"]);
const sse = "@media (prefers-reduced-motion: reduce)", zf = typeof navigator < "u" && navigator.userAgent.match(/android\s(\d+)|OS\s(\d+)/i), K$ = zf && zf[1] ? parseInt(zf[1], 10) : null, Q$ = zf && zf[2] ? parseInt(zf[2], 10) : null, lse = K$ && K$ < 10 || Q$ && Q$ < 13 || !1, H_ = () => Tg(sse, {
  defaultMatches: !1
}) || lse, cse = ["PaperComponent", "popperPlacement", "ownerState", "children", "paperSlotProps", "paperClasses", "onPaperClick", "onPaperTouchStart"], use = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"],
    paper: ["paper"]
  }, ise, n);
}, dse = J(Pg, {
  name: "MuiPickersPopper",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(({
  theme: e
}) => ({
  zIndex: e.zIndex.modal
})), pse = J(ni, {
  name: "MuiPickersPopper",
  slot: "Paper",
  overridesResolver: (e, n) => n.paper
})(({
  ownerState: e
}) => y({
  outline: 0,
  transformOrigin: "top center"
}, e.placement.includes("top") && {
  transformOrigin: "bottom center"
}));
function fse(e, n) {
  return n.documentElement.clientWidth < e.clientX || n.documentElement.clientHeight < e.clientY;
}
function mse(e, n) {
  const a = k.useRef(!1), s = k.useRef(!1), u = k.useRef(null), d = k.useRef(!1);
  k.useEffect(() => {
    if (!e)
      return;
    function g() {
      d.current = !0;
    }
    return document.addEventListener("mousedown", g, !0), document.addEventListener("touchstart", g, !0), () => {
      document.removeEventListener("mousedown", g, !0), document.removeEventListener("touchstart", g, !0), d.current = !1;
    };
  }, [e]);
  const p = kt((g) => {
    if (!d.current)
      return;
    const b = s.current;
    s.current = !1;
    const x = $n(u.current);
    if (!u.current || // is a TouchEvent?
    "clientX" in g && fse(g, x))
      return;
    if (a.current) {
      a.current = !1;
      return;
    }
    let S;
    g.composedPath ? S = g.composedPath().indexOf(u.current) > -1 : S = !x.documentElement.contains(g.target) || u.current.contains(g.target), !S && !b && n(g);
  }), h = () => {
    s.current = !0;
  };
  return k.useEffect(() => {
    if (e) {
      const g = $n(u.current), b = () => {
        a.current = !0;
      };
      return g.addEventListener("touchstart", p), g.addEventListener("touchmove", b), () => {
        g.removeEventListener("touchstart", p), g.removeEventListener("touchmove", b);
      };
    }
  }, [e, p]), k.useEffect(() => {
    if (e) {
      const g = $n(u.current);
      return g.addEventListener("click", p), () => {
        g.removeEventListener("click", p), s.current = !1;
      };
    }
  }, [e, p]), [u, h, h];
}
const hse = /* @__PURE__ */ k.forwardRef((e, n) => {
  const {
    PaperComponent: a,
    popperPlacement: s,
    ownerState: u,
    children: d,
    paperSlotProps: p,
    paperClasses: h,
    onPaperClick: g,
    onPaperTouchStart: b
    // picks up the style props provided by `Transition`
    // https://mui.com/material-ui/transitions/#child-requirement
  } = e, x = le(e, cse), S = y({}, u, {
    placement: s
  }), E = rn({
    elementType: a,
    externalSlotProps: p,
    additionalProps: {
      tabIndex: -1,
      elevation: 8,
      ref: n
    },
    className: h,
    ownerState: S
  });
  return /* @__PURE__ */ _(a, y({}, x, E, {
    onClick: (R) => {
      var $;
      g(R), ($ = E.onClick) == null || $.call(E, R);
    },
    onTouchStart: (R) => {
      var $;
      b(R), ($ = E.onTouchStart) == null || $.call(E, R);
    },
    ownerState: S,
    children: d
  }));
});
function vse(e) {
  var n, a, s, u;
  const d = Ie({
    props: e,
    name: "MuiPickersPopper"
  }), {
    anchorEl: p,
    children: h,
    containerRef: g = null,
    shouldRestoreFocus: b,
    onBlur: x,
    onDismiss: S,
    open: E,
    role: R,
    placement: $,
    slots: M,
    slotProps: O,
    reduceAnimations: N
  } = d;
  k.useEffect(() => {
    function ne(se) {
      E && (se.key === "Escape" || se.key === "Esc") && S();
    }
    return document.addEventListener("keydown", ne), () => {
      document.removeEventListener("keydown", ne);
    };
  }, [S, E]);
  const V = k.useRef(null);
  k.useEffect(() => {
    R === "tooltip" || b && !b() || (E ? V.current = _T(document) : V.current && V.current instanceof HTMLElement && setTimeout(() => {
      V.current instanceof HTMLElement && V.current.focus();
    }));
  }, [E, R, b]);
  const [I, z, B] = mse(E, x ?? S), P = k.useRef(null), F = cn(P, g), H = cn(F, I), U = d, Q = use(U), Y = H_(), te = N ?? Y, Z = (ne) => {
    ne.key === "Escape" && (ne.stopPropagation(), S());
  }, q = ((n = M == null ? void 0 : M.desktopTransition) != null ? n : te) ? em : fg, X = (a = M == null ? void 0 : M.desktopTrapFocus) != null ? a : lg, oe = (s = M == null ? void 0 : M.desktopPaper) != null ? s : pse, ie = (u = M == null ? void 0 : M.popper) != null ? u : dse, K = rn({
    elementType: ie,
    externalSlotProps: O == null ? void 0 : O.popper,
    additionalProps: {
      transition: !0,
      role: R,
      open: E,
      anchorEl: p,
      placement: $,
      onKeyDown: Z
    },
    className: Q.root,
    ownerState: d
  });
  return /* @__PURE__ */ _(ie, y({}, K, {
    children: ({
      TransitionProps: ne,
      placement: se
    }) => /* @__PURE__ */ _(X, y({
      open: E,
      disableAutoFocus: !0,
      disableRestoreFocus: !0,
      disableEnforceFocus: R === "tooltip",
      isEnabled: () => !0
    }, O == null ? void 0 : O.desktopTrapFocus, {
      children: /* @__PURE__ */ _(q, y({}, ne, O == null ? void 0 : O.desktopTransition, {
        children: /* @__PURE__ */ _(hse, {
          PaperComponent: oe,
          ownerState: U,
          popperPlacement: se,
          ref: H,
          onPaperClick: z,
          onPaperTouchStart: B,
          paperClasses: Q.paper,
          paperSlotProps: O == null ? void 0 : O.desktopPaper,
          children: h
        })
      }))
    }))
  }));
}
function W_(e) {
  return We("MuiPickersToolbar", e);
}
Ye("MuiPickersToolbar", ["root", "content"]);
const gse = (e) => {
  const {
    classes: n,
    isLandscape: a
  } = e;
  return He({
    root: ["root"],
    content: ["content"],
    penIconButton: ["penIconButton", a && "penIconButtonLandscape"]
  }, W_, n);
}, bse = J("div", {
  name: "MuiPickersToolbar",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(({
  theme: e,
  ownerState: n
}) => y({
  display: "flex",
  flexDirection: "column",
  alignItems: "flex-start",
  justifyContent: "space-between",
  padding: e.spacing(2, 3)
}, n.isLandscape && {
  height: "auto",
  maxWidth: 160,
  padding: 16,
  justifyContent: "flex-start",
  flexWrap: "wrap"
})), yse = J("div", {
  name: "MuiPickersToolbar",
  slot: "Content",
  overridesResolver: (e, n) => n.content
})(({
  ownerState: e
}) => {
  var n;
  return {
    display: "flex",
    flexWrap: "wrap",
    width: "100%",
    justifyContent: e.isLandscape ? "flex-start" : "space-between",
    flexDirection: e.isLandscape ? (n = e.landscapeDirection) != null ? n : "column" : "row",
    flex: 1,
    alignItems: e.isLandscape ? "flex-start" : "center"
  };
}), X1 = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiPickersToolbar"
  }), {
    children: u,
    className: d,
    toolbarTitle: p,
    hidden: h,
    titleId: g
  } = s, b = s, x = gse(b);
  return h ? null : /* @__PURE__ */ st(bse, {
    ref: a,
    className: fe(x.root, d),
    ownerState: b,
    children: [/* @__PURE__ */ _(vo, {
      color: "text.secondary",
      variant: "overline",
      id: g,
      children: p
    }), /* @__PURE__ */ _(yse, {
      className: x.content,
      ownerState: b,
      children: u
    })]
  });
});
function Cse(e) {
  return We("MuiPickersToolbarText", e);
}
const X$ = Ye("MuiPickersToolbarText", ["root", "selected"]), Tse = ["className", "selected", "value"], xse = (e) => {
  const {
    classes: n,
    selected: a
  } = e;
  return He({
    root: ["root", a && "selected"]
  }, Cse, n);
}, Sse = J(vo, {
  name: "MuiPickersToolbarText",
  slot: "Root",
  overridesResolver: (e, n) => [n.root, {
    [`&.${X$.selected}`]: n.selected
  }]
})(({
  theme: e
}) => ({
  transition: e.transitions.create("color"),
  color: (e.vars || e).palette.text.secondary,
  [`&.${X$.selected}`]: {
    color: (e.vars || e).palette.text.primary
  }
})), Z1 = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiPickersToolbarText"
  }), {
    className: u,
    value: d
  } = s, p = le(s, Tse), h = xse(s);
  return /* @__PURE__ */ _(Sse, y({
    ref: a,
    className: fe(u, h.root),
    component: "span"
  }, p, {
    children: d
  }));
}), kse = ["align", "className", "selected", "typographyClassName", "value", "variant", "width"], wse = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"]
  }, W_, n);
}, Rse = J(jv, {
  name: "MuiPickersToolbarButton",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({
  padding: 0,
  minWidth: 16,
  textTransform: "none"
}), Qa = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiPickersToolbarButton"
  }), {
    align: u,
    className: d,
    selected: p,
    typographyClassName: h,
    value: g,
    variant: b,
    width: x
  } = s, S = le(s, kse), E = wse(s);
  return /* @__PURE__ */ _(Rse, y({
    variant: "text",
    ref: a,
    className: fe(d, E.root)
  }, x ? {
    sx: {
      width: x
    }
  } : {}, S, {
    children: /* @__PURE__ */ _(Z1, {
      align: u,
      className: h,
      variant: b,
      value: g,
      selected: p
    })
  }));
}), Ese = ({
  open: e,
  onOpen: n,
  onClose: a
}) => {
  const s = k.useRef(typeof e == "boolean").current, [u, d] = k.useState(!1);
  k.useEffect(() => {
    if (s) {
      if (typeof e != "boolean")
        throw new Error("You must not mix controlling and uncontrolled mode for `open` prop");
      d(e);
    }
  }, [s, e]);
  const p = k.useCallback((h) => {
    s || d(h), h && n && n(), !h && a && a();
  }, [s, n, a]);
  return {
    isOpen: u,
    setIsOpen: p
  };
}, Ose = (e) => {
  const {
    action: n,
    hasChanged: a,
    dateState: s,
    isControlled: u
  } = e, d = !u && !s.hasBeenModifiedSinceMount;
  return n.name === "setValueFromField" ? !0 : n.name === "setValueFromAction" ? d && ["accept", "today", "clear"].includes(n.pickerAction) ? !0 : a(s.lastPublishedValue) : n.name === "setValueFromView" && n.selectionState !== "shallow" || n.name === "setValueFromShortcut" ? d ? !0 : a(s.lastPublishedValue) : !1;
}, Pse = (e) => {
  const {
    action: n,
    hasChanged: a,
    dateState: s,
    isControlled: u,
    closeOnSelect: d
  } = e, p = !u && !s.hasBeenModifiedSinceMount;
  return n.name === "setValueFromAction" ? p && ["accept", "today", "clear"].includes(n.pickerAction) ? !0 : a(s.lastCommittedValue) : n.name === "setValueFromView" && n.selectionState === "finish" && d ? p ? !0 : a(s.lastCommittedValue) : n.name === "setValueFromShortcut" ? n.changeImportance === "accept" && a(s.lastCommittedValue) : !1;
}, Dse = (e) => {
  const {
    action: n,
    closeOnSelect: a
  } = e;
  return n.name === "setValueFromAction" ? !0 : n.name === "setValueFromView" ? n.selectionState === "finish" && a : n.name === "setValueFromShortcut" ? n.changeImportance === "accept" : !1;
}, Mse = ({
  props: e,
  valueManager: n,
  valueType: a,
  wrapperVariant: s,
  validator: u
}) => {
  const {
    onAccept: d,
    onChange: p,
    value: h,
    defaultValue: g,
    closeOnSelect: b = s === "desktop",
    selectedSections: x,
    onSelectedSectionsChange: S,
    timezone: E
  } = e, {
    current: R
  } = k.useRef(g), {
    current: $
  } = k.useRef(h !== void 0);
  process.env.NODE_ENV !== "production" && (k.useEffect(() => {
    $ !== (h !== void 0) && console.error([`MUI: A component is changing the ${$ ? "" : "un"}controlled value of a picker to be ${$ ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", "Decide between using a controlled or uncontrolled valuefor the lifetime of the component.", "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
  }, [h]), k.useEffect(() => {
    !$ && R !== g && console.error(["MUI: A component is changing the defaultValue of an uncontrolled picker after being initialized. To suppress this warning opt to use a controlled value."].join(`
`));
  }, [JSON.stringify(R)]));
  const M = dn(), O = Md(), [N, V] = Eo({
    controlled: x,
    default: null,
    name: "usePickerValue",
    state: "selectedSections"
  }), {
    isOpen: I,
    setIsOpen: z
  } = Ese(e), [B, P] = k.useState(() => {
    let Se;
    return h !== void 0 ? Se = h : R !== void 0 ? Se = R : Se = n.emptyValue, {
      draft: Se,
      lastPublishedValue: Se,
      lastCommittedValue: Se,
      lastControlledValue: h,
      hasBeenModifiedSinceMount: !1
    };
  }), {
    timezone: F,
    handleValueChange: H
  } = F1({
    timezone: E,
    value: h,
    defaultValue: R,
    onChange: p,
    valueManager: n
  });
  F_(y({}, e, {
    value: B.draft,
    timezone: F
  }), u, n.isSameError, n.defaultErrorState);
  const U = kt((Se) => {
    const ce = {
      action: Se,
      dateState: B,
      hasChanged: (Ae) => !n.areValuesEqual(M, Se.value, Ae),
      isControlled: $,
      closeOnSelect: b
    }, Le = Ose(ce), Ze = Pse(ce), Ee = Dse(ce);
    if (P((Ae) => y({}, Ae, {
      draft: Se.value,
      lastPublishedValue: Le ? Se.value : Ae.lastPublishedValue,
      lastCommittedValue: Ze ? Se.value : Ae.lastCommittedValue,
      hasBeenModifiedSinceMount: !0
    })), Le) {
      const Ce = {
        validationError: Se.name === "setValueFromField" ? Se.context.validationError : u({
          adapter: O,
          value: Se.value,
          props: y({}, e, {
            value: Se.value,
            timezone: F
          })
        })
      };
      Se.name === "setValueFromShortcut" && Se.shortcut != null && (Ce.shortcut = Se.shortcut), H(Se.value, Ce);
    }
    Ze && d && d(Se.value), Ee && z(!1);
  });
  if (h !== void 0 && (B.lastControlledValue === void 0 || !n.areValuesEqual(M, B.lastControlledValue, h))) {
    const Se = n.areValuesEqual(M, B.draft, h);
    P((ce) => y({}, ce, {
      lastControlledValue: h
    }, Se ? {} : {
      lastCommittedValue: h,
      lastPublishedValue: h,
      draft: h,
      hasBeenModifiedSinceMount: !0
    }));
  }
  const Q = kt(() => {
    U({
      value: n.emptyValue,
      name: "setValueFromAction",
      pickerAction: "clear"
    });
  }), Y = kt(() => {
    U({
      value: B.lastPublishedValue,
      name: "setValueFromAction",
      pickerAction: "accept"
    });
  }), te = kt(() => {
    U({
      value: B.lastPublishedValue,
      name: "setValueFromAction",
      pickerAction: "dismiss"
    });
  }), Z = kt(() => {
    U({
      value: B.lastCommittedValue,
      name: "setValueFromAction",
      pickerAction: "cancel"
    });
  }), q = kt(() => {
    U({
      value: n.getTodayValue(M, F, a),
      name: "setValueFromAction",
      pickerAction: "today"
    });
  }), X = kt(() => z(!0)), oe = kt(() => z(!1)), ie = kt((Se, ce = "partial") => U({
    name: "setValueFromView",
    value: Se,
    selectionState: ce
  })), K = kt((Se, ce, Le) => U({
    name: "setValueFromShortcut",
    value: Se,
    changeImportance: ce ?? "accept",
    shortcut: Le
  })), ne = kt((Se, ce) => U({
    name: "setValueFromField",
    value: Se,
    context: ce
  })), se = kt((Se) => {
    V(Se), S == null || S(Se);
  }), ze = {
    onClear: Q,
    onAccept: Y,
    onDismiss: te,
    onCancel: Z,
    onSetToday: q,
    onOpen: X,
    onClose: oe
  }, Ue = {
    value: B.draft,
    onChange: ne,
    selectedSections: N,
    onSelectedSectionsChange: se
  }, Oe = k.useMemo(() => n.cleanValue(M, B.draft), [M, n, B.draft]), ue = {
    value: Oe,
    onChange: ie,
    onClose: oe,
    open: I,
    onSelectedSectionsChange: se
  }, me = y({}, ze, {
    value: Oe,
    onChange: ie,
    onSelectShortcut: K,
    isValid: (Se) => {
      const ce = u({
        adapter: O,
        value: Se,
        props: y({}, e, {
          value: Se,
          timezone: F
        })
      });
      return !n.hasError(ce);
    }
  });
  return {
    open: I,
    fieldProps: Ue,
    viewProps: ue,
    layoutProps: me,
    actions: ze
  };
}, $se = ["className", "sx"], Nse = ({
  props: e,
  propsFromPickerValue: n,
  additionalViewProps: a,
  inputRef: s,
  autoFocusView: u
}) => {
  const {
    onChange: d,
    open: p,
    onSelectedSectionsChange: h,
    onClose: g
  } = n, {
    views: b,
    openTo: x,
    onViewChange: S,
    disableOpenPicker: E,
    viewRenderers: R,
    timezone: $
  } = e, M = le(e, $se), {
    view: O,
    setView: N,
    defaultView: V,
    focusedView: I,
    setFocusedView: z,
    setValueAndGoToNextView: B
  } = Lg({
    view: void 0,
    views: b,
    openTo: x,
    onChange: d,
    onViewChange: S,
    autoFocus: u
  }), {
    hasUIView: P,
    viewModeLookup: F
  } = k.useMemo(() => b.reduce((q, X) => {
    let oe;
    return E ? oe = "field" : R[X] != null ? oe = "UI" : oe = "field", q.viewModeLookup[X] = oe, oe === "UI" && (q.hasUIView = !0), q;
  }, {
    hasUIView: !1,
    viewModeLookup: {}
  }), [E, R, b]), H = k.useMemo(() => b.reduce((q, X) => R[X] != null && Yf(X) ? q + 1 : q, 0), [R, b]), U = F[O], Q = kt(() => U === "UI"), [Y, te] = k.useState(U === "UI" ? O : null);
  return Y !== O && F[O] === "UI" && te(O), ro(() => {
    U === "field" && p && (g(), setTimeout(() => {
      s == null || s.current.focus(), h(O);
    }));
  }, [O]), ro(() => {
    if (!p)
      return;
    let q = O;
    U === "field" && Y != null && (q = Y), q !== V && F[q] === "UI" && F[V] === "UI" && (q = V), q !== O && N(q), z(q, !0);
  }, [p]), {
    hasUIView: P,
    shouldRestoreFocus: Q,
    layoutProps: {
      views: b,
      view: Y,
      onViewChange: N
    },
    renderCurrentView: () => {
      if (Y == null)
        return null;
      const q = R[Y];
      return q == null ? null : q(y({}, M, a, n, {
        views: b,
        timezone: $,
        onChange: B,
        view: Y,
        onViewChange: N,
        focusedView: I,
        onFocusedViewChange: z,
        showViewSwitcher: H > 1,
        timeViewsCount: H
      }));
    }
  };
};
function Z$() {
  return typeof window > "u" ? "portrait" : window.screen && window.screen.orientation && window.screen.orientation.angle ? Math.abs(window.screen.orientation.angle) === 90 ? "landscape" : "portrait" : window.orientation && Math.abs(Number(window.orientation)) === 90 ? "landscape" : "portrait";
}
const Lse = (e, n) => {
  const [a, s] = k.useState(Z$);
  return ro(() => {
    const d = () => {
      s(Z$());
    };
    return window.addEventListener("orientationchange", d), () => {
      window.removeEventListener("orientationchange", d);
    };
  }, []), Nf(e, ["hours", "minutes", "seconds"]) ? !1 : (n || a) === "landscape";
}, Ise = ({
  props: e,
  propsFromPickerValue: n,
  propsFromPickerViews: a,
  wrapperVariant: s
}) => {
  const {
    orientation: u
  } = e, d = Lse(a.views, u);
  return {
    layoutProps: y({}, a, n, {
      isLandscape: d,
      wrapperVariant: s,
      disabled: e.disabled,
      readOnly: e.readOnly
    })
  };
}, Y_ = (e, n = "warning") => {
  let a = !1;
  const s = Array.isArray(e) ? e.join(`
`) : e;
  return () => {
    a || (a = !0, n === "error" ? console.error(s) : console.warn(s));
  };
}, Ase = Y_(["The `renderInput` prop has been removed in version 6.0 of the Date and Time Pickers.", "You can replace it with the `textField` component slot in most cases.", "For more information, please have a look at the migration guide (https://mui.com/x/migration/migration-pickers-v5/#input-renderer-required-in-v5)."]), J1 = ({
  props: e,
  valueManager: n,
  valueType: a,
  wrapperVariant: s,
  inputRef: u,
  additionalViewProps: d,
  validator: p,
  autoFocusView: h
}) => {
  process.env.NODE_ENV !== "production" && e.renderInput != null && Ase();
  const g = Mse({
    props: e,
    valueManager: n,
    valueType: a,
    wrapperVariant: s,
    validator: p
  }), b = Nse({
    props: e,
    inputRef: u,
    additionalViewProps: d,
    autoFocusView: h,
    propsFromPickerValue: g.viewProps
  }), x = Ise({
    props: e,
    wrapperVariant: s,
    propsFromPickerValue: g.layoutProps,
    propsFromPickerViews: b.layoutProps
  });
  return {
    // Picker value
    open: g.open,
    actions: g.actions,
    fieldProps: g.fieldProps,
    // Picker views
    renderCurrentView: b.renderCurrentView,
    hasUIView: b.hasUIView,
    shouldRestoreFocus: b.shouldRestoreFocus,
    // Picker layout
    layoutProps: x.layoutProps
  };
};
function q_(e) {
  return We("MuiPickersLayout", e);
}
const hT = Ye("MuiPickersLayout", ["root", "landscape", "contentWrapper", "toolbar", "actionBar", "tabs", "shortcuts"]), _se = ["onAccept", "onClear", "onCancel", "onSetToday", "actions"];
function eR(e) {
  const {
    onAccept: n,
    onClear: a,
    onCancel: s,
    onSetToday: u,
    actions: d
  } = e, p = le(e, _se), h = pr();
  if (d == null || d.length === 0)
    return null;
  const g = d == null ? void 0 : d.map((b) => {
    switch (b) {
      case "clear":
        return /* @__PURE__ */ _(jv, {
          onClick: a,
          children: h.clearButtonLabel
        }, b);
      case "cancel":
        return /* @__PURE__ */ _(jv, {
          onClick: s,
          children: h.cancelButtonLabel
        }, b);
      case "accept":
        return /* @__PURE__ */ _(jv, {
          onClick: n,
          children: h.okButtonLabel
        }, b);
      case "today":
        return /* @__PURE__ */ _(jv, {
          onClick: u,
          children: h.todayButtonLabel
        }, b);
      default:
        return null;
    }
  });
  return /* @__PURE__ */ _(Eq, y({}, p, {
    children: g
  }));
}
process.env.NODE_ENV !== "production" && (eR.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Ordered array of actions to display.
   * If empty, does not display that action bar.
   * @default `['cancel', 'accept']` for mobile and `[]` for desktop
   */
  actions: t.arrayOf(t.oneOf(["accept", "cancel", "clear", "today"]).isRequired),
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: t.bool,
  onAccept: t.func.isRequired,
  onCancel: t.func.isRequired,
  onClear: t.func.isRequired,
  onSetToday: t.func.isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
const Vse = ["items", "changeImportance", "isLandscape", "onChange", "isValid"], Bse = ["getValue"];
function tR(e) {
  const {
    items: n,
    changeImportance: a,
    onChange: s,
    isValid: u
  } = e, d = le(e, Vse);
  if (n == null || n.length === 0)
    return null;
  const p = n.map((h) => {
    let {
      getValue: g
    } = h, b = le(h, Bse);
    const x = g({
      isValid: u
    });
    return {
      label: b.label,
      onClick: () => {
        s(x, a, b);
      },
      disabled: !u(x)
    };
  });
  return /* @__PURE__ */ _(zI, y({
    dense: !0,
    sx: [{
      maxHeight: rx,
      maxWidth: 200,
      overflow: "auto"
    }, ...Array.isArray(d.sx) ? d.sx : [d.sx]]
  }, d, {
    children: p.map((h) => /* @__PURE__ */ _(iX, {
      children: /* @__PURE__ */ _(TL, y({}, h))
    }, h.label))
  }));
}
process.env.NODE_ENV !== "production" && (tR.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Importance of the change when picking a shortcut:
   * - "accept": fires `onChange`, fires `onAccept` and closes the picker.
   * - "set": fires `onChange` but do not fire `onAccept` and does not close the picker.
   * @default "accept"
   */
  changeImportance: t.oneOf(["accept", "set"]),
  className: t.string,
  component: t.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: t.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: t.bool,
  isLandscape: t.bool.isRequired,
  isValid: t.func.isRequired,
  /**
   * Ordered array of shortcuts to display.
   * If empty, does not display the shortcuts.
   * @default `[]`
   */
  items: t.arrayOf(t.shape({
    getValue: t.func.isRequired,
    label: t.string.isRequired
  })),
  onChange: t.func.isRequired,
  style: t.object,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: t.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
function zse(e) {
  return e.view !== null;
}
const Fse = (e) => {
  const {
    classes: n,
    isLandscape: a
  } = e;
  return He({
    root: ["root", a && "landscape"],
    contentWrapper: ["contentWrapper"],
    toolbar: ["toolbar"],
    actionBar: ["actionBar"],
    tabs: ["tabs"],
    landscape: ["landscape"],
    shortcuts: ["shortcuts"]
  }, q_, n);
}, jse = (e) => {
  var n, a;
  const {
    wrapperVariant: s,
    onAccept: u,
    onClear: d,
    onCancel: p,
    onSetToday: h,
    view: g,
    views: b,
    onViewChange: x,
    value: S,
    onChange: E,
    onSelectShortcut: R,
    isValid: $,
    isLandscape: M,
    disabled: O,
    readOnly: N,
    children: V,
    components: I,
    componentsProps: z,
    slots: B,
    slotProps: P
    // TODO: Remove this "as" hack. It get introduced to mark `value` prop in PickersLayoutProps as not required.
    // The true type should be
    // - For pickers value: TDate | null
    // - For range pickers value: [TDate | null, TDate | null]
  } = e, F = B ?? Ag(I), H = P ?? z, U = Fse(e), Q = (n = F == null ? void 0 : F.actionBar) != null ? n : eR, Y = rn({
    elementType: Q,
    externalSlotProps: H == null ? void 0 : H.actionBar,
    additionalProps: {
      onAccept: u,
      onClear: d,
      onCancel: p,
      onSetToday: h,
      actions: s === "desktop" ? [] : ["cancel", "accept"],
      className: U.actionBar
    },
    ownerState: y({}, e, {
      wrapperVariant: s
    })
  }), te = /* @__PURE__ */ _(Q, y({}, Y)), Z = F == null ? void 0 : F.toolbar, q = rn({
    elementType: Z,
    externalSlotProps: H == null ? void 0 : H.toolbar,
    additionalProps: {
      isLandscape: M,
      onChange: E,
      value: S,
      view: g,
      onViewChange: x,
      views: b,
      disabled: O,
      readOnly: N,
      className: U.toolbar
    },
    ownerState: y({}, e, {
      wrapperVariant: s
    })
  }), X = zse(q) && Z ? /* @__PURE__ */ _(Z, y({}, q)) : null, oe = V, ie = F == null ? void 0 : F.tabs, K = g && ie ? /* @__PURE__ */ _(ie, y({
    view: g,
    onViewChange: x,
    className: U.tabs
  }, H == null ? void 0 : H.tabs)) : null, ne = (a = F == null ? void 0 : F.shortcuts) != null ? a : tR, se = rn({
    elementType: ne,
    externalSlotProps: H == null ? void 0 : H.shortcuts,
    additionalProps: {
      isValid: $,
      isLandscape: M,
      onChange: R,
      className: U.shortcuts
    },
    ownerState: {
      isValid: $,
      isLandscape: M,
      onChange: R,
      className: U.shortcuts,
      wrapperVariant: s
    }
  }), ze = g && ne ? /* @__PURE__ */ _(ne, y({}, se)) : null;
  return {
    toolbar: X,
    content: oe,
    tabs: K,
    actionBar: te,
    shortcuts: ze
  };
}, G_ = jse, Use = (e) => {
  const {
    isLandscape: n,
    classes: a
  } = e;
  return He({
    root: ["root", n && "landscape"],
    contentWrapper: ["contentWrapper"]
  }, q_, a);
}, nR = J("div", {
  name: "MuiPickersLayout",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(({
  theme: e,
  ownerState: n
}) => ({
  display: "grid",
  gridAutoColumns: "max-content auto max-content",
  gridAutoRows: "max-content auto max-content",
  [`& .${hT.toolbar}`]: n.isLandscape ? {
    gridColumn: e.direction === "rtl" ? 3 : 1,
    gridRow: "2 / 3"
  } : {
    gridColumn: "2 / 4",
    gridRow: 1
  },
  [`.${hT.shortcuts}`]: n.isLandscape ? {
    gridColumn: "2 / 4",
    gridRow: 1
  } : {
    gridColumn: e.direction === "rtl" ? 3 : 1,
    gridRow: "2 / 3"
  },
  [`& .${hT.actionBar}`]: {
    gridColumn: "1 / 4",
    gridRow: 3
  }
}));
nR.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  as: t.elementType,
  ownerState: t.shape({
    isLandscape: t.bool.isRequired
  }).isRequired,
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
};
const K_ = J("div", {
  name: "MuiPickersLayout",
  slot: "ContentWrapper",
  overridesResolver: (e, n) => n.contentWrapper
})({
  gridColumn: 2,
  gridRow: 2,
  display: "flex",
  flexDirection: "column"
}), _g = function(n) {
  const a = Ie({
    props: n,
    name: "MuiPickersLayout"
  }), {
    toolbar: s,
    content: u,
    tabs: d,
    actionBar: p,
    shortcuts: h
  } = G_(a), {
    sx: g,
    className: b,
    isLandscape: x,
    ref: S,
    wrapperVariant: E
  } = a, R = a, $ = Use(R);
  return /* @__PURE__ */ st(nR, {
    ref: S,
    sx: g,
    className: fe(b, $.root),
    ownerState: R,
    children: [x ? h : s, x ? s : h, /* @__PURE__ */ _(K_, {
      className: $.contentWrapper,
      children: E === "desktop" ? /* @__PURE__ */ st(k.Fragment, {
        children: [u, d]
      }) : /* @__PURE__ */ st(k.Fragment, {
        children: [d, u]
      })
    }), p]
  });
};
process.env.NODE_ENV !== "production" && (_g.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  children: t.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  className: t.string,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  disabled: t.bool,
  isLandscape: t.bool.isRequired,
  isValid: t.func.isRequired,
  onAccept: t.func.isRequired,
  onCancel: t.func.isRequired,
  onChange: t.func.isRequired,
  onClear: t.func.isRequired,
  onClose: t.func.isRequired,
  onDismiss: t.func.isRequired,
  onOpen: t.func.isRequired,
  onSelectShortcut: t.func.isRequired,
  onSetToday: t.func.isRequired,
  onViewChange: t.func.isRequired,
  /**
   * Force rendering in particular orientation.
   */
  orientation: t.oneOf(["landscape", "portrait"]),
  readOnly: t.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  value: t.any,
  view: t.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]),
  views: t.arrayOf(t.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]).isRequired).isRequired,
  wrapperVariant: t.oneOf(["desktop", "mobile"])
});
const Hse = ["props", "ref"], Wse = J(_g)(({
  theme: e
}) => ({
  overflow: "hidden",
  minWidth: Ig,
  backgroundColor: (e.vars || e).palette.background.paper
})), oR = (e) => {
  var n;
  let {
    props: a,
    ref: s
  } = e, u = le(e, Hse);
  const {
    localeText: d,
    slots: p,
    slotProps: h,
    className: g,
    sx: b,
    displayStaticWrapperAs: x,
    autoFocus: S
  } = a, {
    layoutProps: E,
    renderCurrentView: R
  } = J1(y({}, u, {
    props: a,
    autoFocusView: S ?? !1,
    additionalViewProps: {},
    wrapperVariant: x
  })), $ = (n = p == null ? void 0 : p.layout) != null ? n : Wse;
  return {
    renderPicker: () => {
      var O, N, V;
      return /* @__PURE__ */ _($g, {
        localeText: d,
        children: /* @__PURE__ */ _($, y({}, E, h == null ? void 0 : h.layout, {
          slots: p,
          slotProps: h,
          sx: [...Array.isArray(b) ? b : [b], ...Array.isArray(h == null || (O = h.layout) == null ? void 0 : O.sx) ? h.layout.sx : [h == null || (N = h.layout) == null ? void 0 : N.sx]],
          className: fe(g, h == null || (V = h.layout) == null ? void 0 : V.className),
          ref: s,
          children: R()
        }))
      });
    }
  };
}, Vg = ({
  adapter: e,
  value: n,
  props: a
}) => {
  if (n === null)
    return null;
  const {
    minTime: s,
    maxTime: u,
    minutesStep: d,
    shouldDisableClock: p,
    shouldDisableTime: h,
    disableIgnoringDatePartForTimeValidation: g = !1,
    disablePast: b,
    disableFuture: x,
    timezone: S
  } = a, E = e.utils.dateWithTimezone(void 0, S), R = Ng(g, e.utils);
  switch (!0) {
    case !e.utils.isValid(n):
      return "invalidDate";
    case !!(s && R(s, n)):
      return "minTime";
    case !!(u && R(n, u)):
      return "maxTime";
    case !!(x && e.utils.isAfter(n, E)):
      return "disableFuture";
    case !!(b && e.utils.isBefore(n, E)):
      return "disablePast";
    case !!(h && h(n, "hours")):
      return "shouldDisableTime-hours";
    case !!(h && h(n, "minutes")):
      return "shouldDisableTime-minutes";
    case !!(h && h(n, "seconds")):
      return "shouldDisableTime-seconds";
    case !!(p && p(e.utils.getHours(n), "hours")):
      return "shouldDisableClock-hours";
    case !!(p && p(e.utils.getMinutes(n), "minutes")):
      return "shouldDisableClock-minutes";
    case !!(p && p(e.utils.getSeconds(n), "seconds")):
      return "shouldDisableClock-seconds";
    case !!(d && e.utils.getMinutes(n) % d !== 0):
      return "minutesStep";
    default:
      return null;
  }
}, lx = ({
  props: e,
  value: n,
  adapter: a
}) => {
  const s = am({
    adapter: a,
    value: n,
    props: e
  });
  return s !== null ? s : Vg({
    adapter: a,
    value: n,
    props: e
  });
}, Yse = (e) => We("MuiPickersSlideTransition", e), Ka = Ye("MuiPickersSlideTransition", ["root", "slideEnter-left", "slideEnter-right", "slideEnterActive", "slideExit", "slideExitActiveLeft-left", "slideExitActiveLeft-right"]), qse = ["children", "className", "reduceAnimations", "slideDirection", "transKey", "classes"], Gse = (e) => {
  const {
    classes: n,
    slideDirection: a
  } = e, s = {
    root: ["root"],
    exit: ["slideExit"],
    enterActive: ["slideEnterActive"],
    enter: [`slideEnter-${a}`],
    exitActive: [`slideExitActiveLeft-${a}`]
  };
  return He(s, Yse, n);
}, Kse = J(e1, {
  name: "MuiPickersSlideTransition",
  slot: "Root",
  overridesResolver: (e, n) => [n.root, {
    [`.${Ka["slideEnter-left"]}`]: n["slideEnter-left"]
  }, {
    [`.${Ka["slideEnter-right"]}`]: n["slideEnter-right"]
  }, {
    [`.${Ka.slideEnterActive}`]: n.slideEnterActive
  }, {
    [`.${Ka.slideExit}`]: n.slideExit
  }, {
    [`.${Ka["slideExitActiveLeft-left"]}`]: n["slideExitActiveLeft-left"]
  }, {
    [`.${Ka["slideExitActiveLeft-right"]}`]: n["slideExitActiveLeft-right"]
  }]
})(({
  theme: e
}) => {
  const n = e.transitions.create("transform", {
    duration: e.transitions.duration.complex,
    easing: "cubic-bezier(0.35, 0.8, 0.4, 1)"
  });
  return {
    display: "block",
    position: "relative",
    overflowX: "hidden",
    "& > *": {
      position: "absolute",
      top: 0,
      right: 0,
      left: 0
    },
    [`& .${Ka["slideEnter-left"]}`]: {
      willChange: "transform",
      transform: "translate(100%)",
      zIndex: 1
    },
    [`& .${Ka["slideEnter-right"]}`]: {
      willChange: "transform",
      transform: "translate(-100%)",
      zIndex: 1
    },
    [`& .${Ka.slideEnterActive}`]: {
      transform: "translate(0%)",
      transition: n
    },
    [`& .${Ka.slideExit}`]: {
      transform: "translate(0%)"
    },
    [`& .${Ka["slideExitActiveLeft-left"]}`]: {
      willChange: "transform",
      transform: "translate(-100%)",
      transition: n,
      zIndex: 0
    },
    [`& .${Ka["slideExitActiveLeft-right"]}`]: {
      willChange: "transform",
      transform: "translate(100%)",
      transition: n,
      zIndex: 0
    }
  };
});
function Qse(e) {
  const n = Ie({
    props: e,
    name: "MuiPickersSlideTransition"
  }), {
    children: a,
    className: s,
    reduceAnimations: u,
    transKey: d
    // extracting `classes` from `other`
  } = n, p = le(n, qse), h = Gse(n), g = En();
  if (u)
    return /* @__PURE__ */ _("div", {
      className: fe(h.root, s),
      children: a
    });
  const b = {
    exit: h.exit,
    enterActive: h.enterActive,
    enter: h.enter,
    exitActive: h.exitActive
  };
  return /* @__PURE__ */ _(Kse, {
    className: fe(h.root, s),
    childFactory: (x) => /* @__PURE__ */ k.cloneElement(x, {
      classNames: b
    }),
    role: "presentation",
    children: /* @__PURE__ */ _(nW, y({
      mountOnEnter: !0,
      unmountOnExit: !0,
      timeout: g.transitions.duration.complex,
      classNames: b
    }, p, {
      children: a
    }), d)
  });
}
const Q_ = ({
  shouldDisableDate: e,
  shouldDisableMonth: n,
  shouldDisableYear: a,
  minDate: s,
  maxDate: u,
  disableFuture: d,
  disablePast: p,
  timezone: h
}) => {
  const g = Md();
  return k.useCallback((b) => am({
    adapter: g,
    value: b,
    props: {
      shouldDisableDate: e,
      shouldDisableMonth: n,
      shouldDisableYear: a,
      minDate: s,
      maxDate: u,
      disableFuture: d,
      disablePast: p,
      timezone: h
    }
  }) !== null, [g, e, n, a, s, u, d, p, h]);
}, Xse = (e) => We("MuiDayCalendar", e), Zse = Ye("MuiDayCalendar", ["root", "header", "weekDayLabel", "loadingContainer", "slideTransition", "monthContainer", "weekContainer", "weekNumberLabel", "weekNumber"]), Jse = ["parentProps", "day", "focusableDay", "selectedDays", "isDateDisabled", "currentMonthNumber", "isViewFocused"], ele = ["ownerState"], tle = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"],
    header: ["header"],
    weekDayLabel: ["weekDayLabel"],
    loadingContainer: ["loadingContainer"],
    slideTransition: ["slideTransition"],
    monthContainer: ["monthContainer"],
    weekContainer: ["weekContainer"],
    weekNumberLabel: ["weekNumberLabel"],
    weekNumber: ["weekNumber"]
  }, Xse, n);
}, X_ = (Od + om * 2) * 6, nle = J("div", {
  name: "MuiDayCalendar",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({}), ole = J("div", {
  name: "MuiDayCalendar",
  slot: "Header",
  overridesResolver: (e, n) => n.header
})({
  display: "flex",
  justifyContent: "center",
  alignItems: "center"
}), rle = J(vo, {
  name: "MuiDayCalendar",
  slot: "WeekDayLabel",
  overridesResolver: (e, n) => n.weekDayLabel
})(({
  theme: e
}) => ({
  width: 36,
  height: 40,
  margin: "0 2px",
  textAlign: "center",
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  color: (e.vars || e).palette.text.secondary
})), ale = J(vo, {
  name: "MuiDayCalendar",
  slot: "WeekNumberLabel",
  overridesResolver: (e, n) => n.weekNumberLabel
})(({
  theme: e
}) => ({
  width: 36,
  height: 40,
  margin: "0 2px",
  textAlign: "center",
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  color: e.palette.text.disabled
})), ile = J(vo, {
  name: "MuiDayCalendar",
  slot: "WeekNumber",
  overridesResolver: (e, n) => n.weekNumber
})(({
  theme: e
}) => y({}, e.typography.caption, {
  width: Od,
  height: Od,
  padding: 0,
  margin: `0 ${om}px`,
  color: e.palette.text.disabled,
  fontSize: "0.75rem",
  alignItems: "center",
  justifyContent: "center",
  display: "inline-flex"
})), sle = J("div", {
  name: "MuiDayCalendar",
  slot: "LoadingContainer",
  overridesResolver: (e, n) => n.loadingContainer
})({
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  minHeight: X_
}), lle = J(Qse, {
  name: "MuiDayCalendar",
  slot: "SlideTransition",
  overridesResolver: (e, n) => n.slideTransition
})({
  minHeight: X_
}), cle = J("div", {
  name: "MuiDayCalendar",
  slot: "MonthContainer",
  overridesResolver: (e, n) => n.monthContainer
})({
  overflow: "hidden"
}), ule = J("div", {
  name: "MuiDayCalendar",
  slot: "WeekContainer",
  overridesResolver: (e, n) => n.weekContainer
})({
  margin: `${om}px 0`,
  display: "flex",
  justifyContent: "center"
});
function dle(e) {
  var n, a, s;
  let {
    parentProps: u,
    day: d,
    focusableDay: p,
    selectedDays: h,
    isDateDisabled: g,
    currentMonthNumber: b,
    isViewFocused: x
  } = e, S = le(e, Jse);
  const {
    disabled: E,
    disableHighlightToday: R,
    isMonthSwitchingAnimating: $,
    showDaysOutsideCurrentMonth: M,
    components: O,
    componentsProps: N,
    slots: V,
    slotProps: I,
    timezone: z
  } = u, B = dn(), P = Nd(z), F = p !== null && B.isSameDay(d, p), H = h.some((ie) => B.isSameDay(ie, d)), U = B.isSameDay(d, P), Q = (n = (a = V == null ? void 0 : V.day) != null ? a : O == null ? void 0 : O.Day) != null ? n : z_, Y = rn({
    elementType: Q,
    externalSlotProps: (s = I == null ? void 0 : I.day) != null ? s : N == null ? void 0 : N.day,
    additionalProps: y({
      disableHighlightToday: R,
      showDaysOutsideCurrentMonth: M,
      role: "gridcell",
      isAnimating: $,
      // it is used in date range dragging logic by accessing `dataset.timestamp`
      "data-timestamp": B.toJsDate(d).valueOf()
    }, S),
    ownerState: y({}, u, {
      day: d,
      selected: H
    })
  }), te = le(Y, ele), Z = k.useMemo(() => E || g(d), [E, g, d]), q = k.useMemo(() => B.getMonth(d) !== b, [B, d, b]), X = k.useMemo(() => {
    const ie = B.startOfMonth(B.setMonth(d, b));
    return M ? B.isSameDay(d, B.startOfWeek(ie)) : B.isSameDay(d, ie);
  }, [b, d, M, B]), oe = k.useMemo(() => {
    const ie = B.endOfMonth(B.setMonth(d, b));
    return M ? B.isSameDay(d, B.endOfWeek(ie)) : B.isSameDay(d, ie);
  }, [b, d, M, B]);
  return /* @__PURE__ */ _(Q, y({}, te, {
    day: d,
    disabled: Z,
    autoFocus: x && F,
    today: U,
    outsideCurrentMonth: q,
    isFirstVisibleCell: X,
    isLastVisibleCell: oe,
    selected: H,
    tabIndex: F ? 0 : -1,
    "aria-selected": H,
    "aria-current": U ? "date" : void 0
  }));
}
function ple(e) {
  const n = Ie({
    props: e,
    name: "MuiDayCalendar"
  }), {
    onFocusedDayChange: a,
    className: s,
    currentMonth: u,
    selectedDays: d,
    focusedDay: p,
    loading: h,
    onSelectedDaysChange: g,
    onMonthSwitchingAnimationEnd: b,
    readOnly: x,
    reduceAnimations: S,
    renderLoading: E = () => /* @__PURE__ */ _("span", {
      children: "..."
    }),
    slideDirection: R,
    TransitionProps: $,
    disablePast: M,
    disableFuture: O,
    minDate: N,
    maxDate: V,
    shouldDisableDate: I,
    shouldDisableMonth: z,
    shouldDisableYear: B,
    dayOfWeekFormatter: P,
    hasFocus: F,
    onFocusedViewChange: H,
    gridLabelId: U,
    displayWeekNumber: Q,
    fixedWeekNumber: Y,
    autoFocus: te,
    timezone: Z
  } = n, q = Nd(Z), X = dn(), oe = tle(n), K = En().direction === "rtl", ne = P || ((_e, dt) => X.format(dt, "weekdayShort").charAt(0).toUpperCase()), se = Q_({
    shouldDisableDate: I,
    shouldDisableMonth: z,
    shouldDisableYear: B,
    minDate: N,
    maxDate: V,
    disablePast: M,
    disableFuture: O,
    timezone: Z
  }), ze = pr(), [Ue, Oe] = Eo({
    name: "DayCalendar",
    state: "hasFocus",
    controlled: F,
    default: te ?? !1
  }), [ue, xe] = k.useState(() => p || q), me = kt((_e) => {
    x || g(_e);
  }), Se = (_e) => {
    se(_e) || (a(_e), xe(_e), H == null || H(!0), Oe(!0));
  }, ce = kt((_e, dt) => {
    switch (_e.key) {
      case "ArrowUp":
        Se(X.addDays(dt, -7)), _e.preventDefault();
        break;
      case "ArrowDown":
        Se(X.addDays(dt, 7)), _e.preventDefault();
        break;
      case "ArrowLeft": {
        const ge = X.addDays(dt, K ? 1 : -1), ve = X.addMonths(dt, K ? 1 : -1), qe = ng({
          utils: X,
          date: ge,
          minDate: K ? ge : X.startOfMonth(ve),
          maxDate: K ? X.endOfMonth(ve) : ge,
          isDateDisabled: se,
          timezone: Z
        });
        Se(qe || ge), _e.preventDefault();
        break;
      }
      case "ArrowRight": {
        const ge = X.addDays(dt, K ? -1 : 1), ve = X.addMonths(dt, K ? -1 : 1), qe = ng({
          utils: X,
          date: ge,
          minDate: K ? X.startOfMonth(ve) : ge,
          maxDate: K ? ge : X.endOfMonth(ve),
          isDateDisabled: se,
          timezone: Z
        });
        Se(qe || ge), _e.preventDefault();
        break;
      }
      case "Home":
        Se(X.startOfWeek(dt)), _e.preventDefault();
        break;
      case "End":
        Se(X.endOfWeek(dt)), _e.preventDefault();
        break;
      case "PageUp":
        Se(X.addMonths(dt, 1)), _e.preventDefault();
        break;
      case "PageDown":
        Se(X.addMonths(dt, -1)), _e.preventDefault();
        break;
    }
  }), Le = kt((_e, dt) => Se(dt)), Ze = kt((_e, dt) => {
    Ue && X.isSameDay(ue, dt) && (H == null || H(!1));
  }), Ee = X.getMonth(u), Ae = k.useMemo(() => d.filter((_e) => !!_e).map((_e) => X.startOfDay(_e)), [X, d]), Ce = Ee, ae = k.useMemo(() => /* @__PURE__ */ k.createRef(), [Ce]), Pe = X.startOfWeek(q), ke = k.useMemo(() => {
    const _e = X.startOfMonth(u), dt = X.endOfMonth(u);
    return se(ue) || X.isAfterDay(ue, dt) || X.isBeforeDay(ue, _e) ? ng({
      utils: X,
      date: ue,
      minDate: _e,
      maxDate: dt,
      disablePast: M,
      disableFuture: O,
      isDateDisabled: se,
      timezone: Z
    }) : ue;
  }, [u, O, M, ue, se, X, Z]), pt = k.useMemo(() => {
    const _e = X.setTimezone(u, Z), dt = X.getWeekArray(_e);
    let ge = X.addMonths(_e, 1);
    for (; Y && dt.length < Y; ) {
      const ve = X.getWeekArray(ge), qe = X.isSameDay(dt[dt.length - 1][0], ve[0][0]);
      ve.slice(qe ? 1 : 0).forEach((vt) => {
        dt.length < Y && dt.push(vt);
      }), ge = X.addMonths(ge, 1);
    }
    return dt;
  }, [u, Y, X, Z]);
  return /* @__PURE__ */ st(nle, {
    role: "grid",
    "aria-labelledby": U,
    className: oe.root,
    children: [/* @__PURE__ */ st(ole, {
      role: "row",
      className: oe.header,
      children: [Q && /* @__PURE__ */ _(ale, {
        variant: "caption",
        role: "columnheader",
        "aria-label": ze.calendarWeekNumberHeaderLabel,
        className: oe.weekNumberLabel,
        children: ze.calendarWeekNumberHeaderText
      }), Vre(X, q).map((_e, dt) => {
        var ge;
        const ve = X.format(_e, "weekdayShort");
        return /* @__PURE__ */ _(rle, {
          variant: "caption",
          role: "columnheader",
          "aria-label": X.format(X.addDays(Pe, dt), "weekday"),
          className: oe.weekDayLabel,
          children: (ge = ne == null ? void 0 : ne(ve, _e)) != null ? ge : ve
        }, ve + dt.toString());
      })]
    }), h ? /* @__PURE__ */ _(sle, {
      className: oe.loadingContainer,
      children: E()
    }) : /* @__PURE__ */ _(lle, y({
      transKey: Ce,
      onExited: b,
      reduceAnimations: S,
      slideDirection: R,
      className: fe(s, oe.slideTransition)
    }, $, {
      nodeRef: ae,
      children: /* @__PURE__ */ _(cle, {
        ref: ae,
        role: "rowgroup",
        className: oe.monthContainer,
        children: pt.map((_e, dt) => /* @__PURE__ */ st(ule, {
          role: "row",
          className: oe.weekContainer,
          "aria-rowindex": dt + 1,
          children: [Q && /* @__PURE__ */ _(ile, {
            className: oe.weekNumber,
            role: "rowheader",
            "aria-label": ze.calendarWeekNumberAriaLabelText(X.getWeekNumber(_e[0])),
            children: ze.calendarWeekNumberText(X.getWeekNumber(_e[0]))
          }), _e.map((ge, ve) => /* @__PURE__ */ _(dle, {
            parentProps: n,
            day: ge,
            selectedDays: Ae,
            focusableDay: ke,
            onKeyDown: ce,
            onFocus: Le,
            onBlur: Ze,
            onDaySelect: me,
            isDateDisabled: se,
            currentMonthNumber: Ee,
            isViewFocused: Ue,
            "aria-colindex": ve + 1
          }, ge.toString()))]
        }, `week-${_e[0]}`))
      })
    }))]
  });
}
const fle = (e, n, a) => (s, u) => {
  switch (u.type) {
    case "changeMonth":
      return y({}, s, {
        slideDirection: u.direction,
        currentMonth: u.newMonth,
        isMonthSwitchingAnimating: !e
      });
    case "finishMonthSwitchingAnimation":
      return y({}, s, {
        isMonthSwitchingAnimating: !1
      });
    case "changeFocusedDay": {
      if (s.focusedDay != null && u.focusedDay != null && a.isSameDay(u.focusedDay, s.focusedDay))
        return s;
      const d = u.focusedDay != null && !n && !a.isSameMonth(s.currentMonth, u.focusedDay);
      return y({}, s, {
        focusedDay: u.focusedDay,
        isMonthSwitchingAnimating: d && !e && !u.withoutMonthSwitchingAnimation,
        currentMonth: d ? a.startOfMonth(u.focusedDay) : s.currentMonth,
        slideDirection: u.focusedDay != null && a.isAfterDay(u.focusedDay, s.currentMonth) ? "left" : "right"
      });
    }
    default:
      throw new Error("missing support");
  }
}, mle = (e) => {
  const {
    value: n,
    referenceDate: a,
    defaultCalendarMonth: s,
    disableFuture: u,
    disablePast: d,
    disableSwitchToMonthOnDayFocus: p = !1,
    maxDate: h,
    minDate: g,
    onMonthChange: b,
    reduceAnimations: x,
    shouldDisableDate: S,
    timezone: E
  } = e, R = dn(), $ = k.useRef(fle(!!x, p, R)).current, M = k.useMemo(
    () => {
      let F = null;
      return a ? F = a : s && (F = R.startOfMonth(s)), Oo.getInitialReferenceValue({
        value: n,
        utils: R,
        timezone: E,
        props: e,
        referenceDate: F,
        granularity: Zi.day
      });
    },
    []
    // eslint-disable-line react-hooks/exhaustive-deps
  ), [O, N] = k.useReducer($, {
    isMonthSwitchingAnimating: !1,
    focusedDay: M,
    currentMonth: R.startOfMonth(M),
    slideDirection: "left"
  }), V = k.useCallback((F) => {
    N(y({
      type: "changeMonth"
    }, F)), b && b(F.newMonth);
  }, [b]), I = k.useCallback((F) => {
    const H = F;
    R.isSameMonth(H, O.currentMonth) || V({
      newMonth: R.startOfMonth(H),
      direction: R.isAfterDay(H, O.currentMonth) ? "left" : "right"
    });
  }, [O.currentMonth, V, R]), z = Q_({
    shouldDisableDate: S,
    minDate: g,
    maxDate: h,
    disableFuture: u,
    disablePast: d,
    timezone: E
  }), B = k.useCallback(() => {
    N({
      type: "finishMonthSwitchingAnimation"
    });
  }, []), P = kt((F, H) => {
    z(F) || N({
      type: "changeFocusedDay",
      focusedDay: F,
      withoutMonthSwitchingAnimation: H
    });
  });
  return {
    referenceDate: M,
    calendarState: O,
    changeMonth: I,
    changeFocusedDay: P,
    isDateDisabled: z,
    onMonthSwitchingAnimationEnd: B,
    handleChangeMonth: V
  };
}, hle = ["ownerState"], cx = ({
  clearable: e,
  fieldProps: n,
  InputProps: a,
  onClear: s,
  slots: u,
  slotProps: d,
  components: p,
  componentsProps: h
}) => {
  var g, b, x, S, E, R;
  const $ = pr(), M = (g = (b = u == null ? void 0 : u.clearButton) != null ? b : p == null ? void 0 : p.ClearButton) != null ? g : Ja, O = rn({
    elementType: M,
    externalSlotProps: (x = d == null ? void 0 : d.clearButton) != null ? x : h == null ? void 0 : h.clearButton,
    ownerState: {},
    className: "clearButton",
    additionalProps: {
      title: $.fieldClearLabel
    }
  }), N = le(O, hle), V = (S = (E = u == null ? void 0 : u.clearIcon) != null ? E : p == null ? void 0 : p.ClearIcon) != null ? S : b_, I = rn({
    elementType: V,
    externalSlotProps: (R = d == null ? void 0 : d.clearIcon) != null ? R : h == null ? void 0 : h.clearIcon,
    ownerState: {}
  }), z = y({}, a, {
    endAdornment: /* @__PURE__ */ st(k.Fragment, {
      children: [e && /* @__PURE__ */ _(NI, {
        position: "end",
        sx: {
          marginRight: a != null && a.endAdornment ? -1 : -1.5
        },
        children: /* @__PURE__ */ _(M, y({}, N, {
          onClick: s,
          children: /* @__PURE__ */ _(V, y({
            fontSize: "small"
          }, I))
        }))
      }), a == null ? void 0 : a.endAdornment]
    })
  }), B = y({}, n, {
    sx: [{
      "& .clearButton": {
        opacity: 1
      },
      "@media (pointer: fine)": {
        "& .clearButton": {
          opacity: 0
        },
        "&:hover, &:focus-within": {
          ".clearButton": {
            opacity: 1
          }
        }
      }
    }, ...Array.isArray(n.sx) ? n.sx : [n.sx]]
  });
  return {
    InputProps: z,
    fieldProps: B
  };
}, vle = ["components", "componentsProps", "slots", "slotProps", "InputProps", "inputProps"], gle = ["inputRef"], ble = ["ref", "onPaste", "onKeyDown", "inputMode", "readOnly", "clearable", "onClear"], ux = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d;
  const p = Ie({
    props: n,
    name: "MuiDateField"
  }), {
    components: h,
    componentsProps: g,
    slots: b,
    slotProps: x,
    InputProps: S,
    inputProps: E
  } = p, R = le(p, vle), $ = p, M = (s = (u = b == null ? void 0 : b.textField) != null ? u : h == null ? void 0 : h.TextField) != null ? s : A1, O = rn({
    elementType: M,
    externalSlotProps: (d = x == null ? void 0 : x.textField) != null ? d : g == null ? void 0 : g.textField,
    externalForwardedProps: R,
    ownerState: $
  }), {
    inputRef: N
  } = O, V = le(O, gle);
  V.inputProps = y({}, E, V.inputProps), V.InputProps = y({}, S, V.InputProps);
  const I = U_({
    props: V,
    inputRef: N
  }), {
    ref: z,
    onPaste: B,
    onKeyDown: P,
    inputMode: F,
    readOnly: H,
    clearable: U,
    onClear: Q
  } = I, Y = le(I, ble), {
    InputProps: te,
    fieldProps: Z
  } = cx({
    onClear: Q,
    clearable: U,
    fieldProps: Y,
    InputProps: Y.InputProps,
    slots: b,
    slotProps: x,
    components: h,
    componentsProps: g
  });
  return /* @__PURE__ */ _(M, y({
    ref: a
  }, Z, {
    InputProps: y({}, te, {
      readOnly: H
    }),
    inputProps: y({}, Y.inputProps, {
      inputMode: F,
      onPaste: B,
      onKeyDown: P,
      ref: z
    })
  }));
});
process.env.NODE_ENV !== "production" && (ux.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: t.bool,
  className: t.string,
  /**
   * If `true`, a clear button will be shown in the field allowing value clearing.
   * @default false
   */
  clearable: t.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOf(["error", "info", "primary", "secondary", "success", "warning"]),
  component: t.elementType,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: t.bool,
  /**
   * Format of the date when rendered in the input(s).
   */
  format: t.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: t.oneOf(["dense", "spacious"]),
  /**
   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.
   */
  FormHelperTextProps: t.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * The helper text content.
   */
  helperText: t.node,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: t.bool,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: t.string,
  /**
   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   */
  InputLabelProps: t.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: t.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](/material-ui/api/filled-input/),
   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)
   * component depending on the `variant` prop value.
   */
  InputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * The label content.
   */
  label: t.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: t.oneOf(["dense", "none", "normal"]),
  /**
   * Maximal selectable date.
   */
  maxDate: t.any,
  /**
   * Minimal selectable date.
   */
  minDate: t.any,
  /**
   * Name attribute of the `input` element.
   */
  name: t.string,
  onBlur: t.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: t.func,
  /**
   * Callback fired when the clear button is clicked.
   */
  onClear: t.func,
  /**
   * Callback fired when the error associated to the current value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TError} error The new error.
   * @param {TValue} value The value associated to the error.
   */
  onError: t.func,
  onFocus: t.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: t.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   * @default false
   */
  readOnly: t.bool,
  /**
   * The date used to generate a part of the new value that is not present in the format when both `value` and `defaultValue` are empty.
   * For example, on time fields it will be used to determine the date to set.
   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`. Value is rounded to the most granular section used.
   */
  referenceDate: t.any,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: t.bool,
  /**
   * The currently selected sections.
   * This prop accept four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If an object with a `startIndex` and `endIndex` properties are provided, the sections between those two indexes will be selected.
   * 3. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 4. If `null` is provided, no section will be selected
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: t.oneOfType([t.oneOf(["all", "day", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), t.number, t.shape({
    endIndex: t.number.isRequired,
    startIndex: t.number.isRequired
  })]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: t.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: t.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: t.func,
  /**
   * If `true`, the format will respect the leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `8/16/2018`)
   * If `false`, the format will always add leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `08/16/2018`)
   *
   * Warning n°1: Luxon is not able to respect the leading zeroes when using macro tokens (e.g: "DD"), so `shouldRespectLeadingZeros={true}` might lead to inconsistencies when using `AdapterLuxon`.
   *
   * Warning n°2: When `shouldRespectLeadingZeros={true}`, the field will add an invisible character on the sections containing a single digit to make sure `onChange` is fired.
   * If you need to get the clean value from the input, you can remove this character using `input.value.replace(/\u200e/g, '')`.
   *
   * Warning n°3: When used in strict mode, dayjs and moment require to respect the leading zeros.
   * This mean that when using `shouldRespectLeadingZeros={false}`, if you retrieve the value directly from the input (not listening to `onChange`) and your format contains tokens without leading zeros, the value will not be parsed by your library.
   *
   * @default `false`
   */
  shouldRespectLeadingZeros: t.bool,
  /**
   * The size of the component.
   */
  size: t.oneOf(["medium", "small"]),
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  style: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The ref object used to imperatively interact with the field.
   */
  unstableFieldRef: t.oneOfType([t.func, t.object]),
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: t.oneOf(["filled", "outlined", "standard"])
});
const yle = (e) => {
  var n, a, s, u;
  const d = dn(), h = ((n = e.ampm) != null ? n : d.is12HourCycleInCurrentLocale()) ? d.formats.fullTime12h : d.formats.fullTime24h;
  return y({}, e, {
    disablePast: (a = e.disablePast) != null ? a : !1,
    disableFuture: (s = e.disableFuture) != null ? s : !1,
    format: (u = e.format) != null ? u : h
  });
}, Z_ = ({
  props: e,
  inputRef: n
}) => {
  const a = yle(e), {
    forwardedProps: s,
    internalProps: u
  } = Q1(a, "time");
  return K1({
    inputRef: n,
    forwardedProps: s,
    internalProps: u,
    valueManager: Oo,
    fieldValueManager: H1,
    validator: Vg,
    valueType: "time"
  });
}, Cle = ["slots", "slotProps", "components", "componentsProps", "InputProps", "inputProps"], Tle = ["inputRef"], xle = ["ref", "onPaste", "onKeyDown", "inputMode", "readOnly", "clearable", "onClear"], dx = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d;
  const p = Ie({
    props: n,
    name: "MuiTimeField"
  }), {
    slots: h,
    slotProps: g,
    components: b,
    componentsProps: x,
    InputProps: S,
    inputProps: E
  } = p, R = le(p, Cle), $ = p, M = (s = (u = h == null ? void 0 : h.textField) != null ? u : b == null ? void 0 : b.TextField) != null ? s : A1, O = rn({
    elementType: M,
    externalSlotProps: (d = g == null ? void 0 : g.textField) != null ? d : x == null ? void 0 : x.textField,
    externalForwardedProps: R,
    ownerState: $
  }), {
    inputRef: N
  } = O, V = le(O, Tle);
  V.inputProps = y({}, E, V.inputProps), V.InputProps = y({}, S, V.InputProps);
  const I = Z_({
    props: V,
    inputRef: N
  }), {
    ref: z,
    onPaste: B,
    onKeyDown: P,
    inputMode: F,
    readOnly: H,
    clearable: U,
    onClear: Q
  } = I, Y = le(I, xle), {
    InputProps: te,
    fieldProps: Z
  } = cx({
    onClear: Q,
    clearable: U,
    fieldProps: Y,
    InputProps: Y.InputProps,
    slots: h,
    slotProps: g,
    components: b,
    componentsProps: x
  });
  return /* @__PURE__ */ _(M, y({
    ref: a
  }, Z, {
    InputProps: y({}, te, {
      readOnly: H
    }),
    inputProps: y({}, Y.inputProps, {
      inputMode: F,
      onPaste: B,
      onKeyDown: P,
      ref: z
    })
  }));
});
process.env.NODE_ENV !== "production" && (dx.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default `utils.is12HourCycleInCurrentLocale()`
   */
  ampm: t.bool,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: t.bool,
  className: t.string,
  /**
   * If `true`, a clear button will be shown in the field allowing value clearing.
   * @default false
   */
  clearable: t.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOf(["error", "info", "primary", "secondary", "success", "warning"]),
  component: t.elementType,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: t.bool,
  /**
   * Format of the date when rendered in the input(s).
   */
  format: t.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: t.oneOf(["dense", "spacious"]),
  /**
   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.
   */
  FormHelperTextProps: t.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * The helper text content.
   */
  helperText: t.node,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: t.bool,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: t.string,
  /**
   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   */
  InputLabelProps: t.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: t.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](/material-ui/api/filled-input/),
   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)
   * component depending on the `variant` prop value.
   */
  InputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * The label content.
   */
  label: t.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: t.oneOf(["dense", "none", "normal"]),
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: t.any,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: t.any,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: t.number,
  /**
   * Name attribute of the `input` element.
   */
  name: t.string,
  onBlur: t.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: t.func,
  /**
   * Callback fired when the clear button is clicked.
   */
  onClear: t.func,
  /**
   * Callback fired when the error associated to the current value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TError} error The new error.
   * @param {TValue} value The value associated to the error.
   */
  onError: t.func,
  onFocus: t.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: t.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   * @default false
   */
  readOnly: t.bool,
  /**
   * The date used to generate a part of the new value that is not present in the format when both `value` and `defaultValue` are empty.
   * For example, on time fields it will be used to determine the date to set.
   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`. Value is rounded to the most granular section used.
   */
  referenceDate: t.any,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: t.bool,
  /**
   * The currently selected sections.
   * This prop accept four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If an object with a `startIndex` and `endIndex` properties are provided, the sections between those two indexes will be selected.
   * 3. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 4. If `null` is provided, no section will be selected
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: t.oneOfType([t.oneOf(["all", "day", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), t.number, t.shape({
    endIndex: t.number.isRequired,
    startIndex: t.number.isRequired
  })]),
  /**
   * Disable specific clock time.
   * @param {number} clockValue The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   * @deprecated Consider using `shouldDisableTime`.
   */
  shouldDisableClock: t.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: t.func,
  /**
   * If `true`, the format will respect the leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `8/16/2018`)
   * If `false`, the format will always add leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `08/16/2018`)
   *
   * Warning n°1: Luxon is not able to respect the leading zeroes when using macro tokens (e.g: "DD"), so `shouldRespectLeadingZeros={true}` might lead to inconsistencies when using `AdapterLuxon`.
   *
   * Warning n°2: When `shouldRespectLeadingZeros={true}`, the field will add an invisible character on the sections containing a single digit to make sure `onChange` is fired.
   * If you need to get the clean value from the input, you can remove this character using `input.value.replace(/\u200e/g, '')`.
   *
   * Warning n°3: When used in strict mode, dayjs and moment require to respect the leading zeros.
   * This mean that when using `shouldRespectLeadingZeros={false}`, if you retrieve the value directly from the input (not listening to `onChange`) and your format contains tokens without leading zeros, the value will not be parsed by your library.
   *
   * @default `false`
   */
  shouldRespectLeadingZeros: t.bool,
  /**
   * The size of the component.
   */
  size: t.oneOf(["medium", "small"]),
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  style: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The ref object used to imperatively interact with the field.
   */
  unstableFieldRef: t.oneOfType([t.func, t.object]),
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: t.oneOf(["filled", "outlined", "standard"])
});
const Sle = (e) => {
  var n, a, s, u, d, p, h, g;
  const b = dn(), x = $d(), E = ((n = e.ampm) != null ? n : b.is12HourCycleInCurrentLocale()) ? b.formats.keyboardDateTime12h : b.formats.keyboardDateTime24h;
  return y({}, e, {
    disablePast: (a = e.disablePast) != null ? a : !1,
    disableFuture: (s = e.disableFuture) != null ? s : !1,
    format: (u = e.format) != null ? u : E,
    disableIgnoringDatePartForTimeValidation: !!(e.minDateTime || e.maxDateTime),
    minDate: Xr(b, (d = e.minDateTime) != null ? d : e.minDate, x.minDate),
    maxDate: Xr(b, (p = e.maxDateTime) != null ? p : e.maxDate, x.maxDate),
    minTime: (h = e.minDateTime) != null ? h : e.minTime,
    maxTime: (g = e.maxDateTime) != null ? g : e.maxTime
  });
}, J_ = ({
  props: e,
  inputRef: n
}) => {
  const a = Sle(e), {
    forwardedProps: s,
    internalProps: u
  } = Q1(a, "date-time");
  return K1({
    inputRef: n,
    forwardedProps: s,
    internalProps: u,
    valueManager: Oo,
    fieldValueManager: H1,
    validator: lx,
    valueType: "date-time"
  });
}, kle = ["components", "componentsProps", "slots", "slotProps", "InputProps", "inputProps"], wle = ["inputRef"], Rle = ["ref", "onPaste", "onKeyDown", "inputMode", "readOnly", "clearable", "onClear"], px = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d;
  const p = Ie({
    props: n,
    name: "MuiDateTimeField"
  }), {
    components: h,
    componentsProps: g,
    slots: b,
    slotProps: x,
    InputProps: S,
    inputProps: E
  } = p, R = le(p, kle), $ = p, M = (s = (u = b == null ? void 0 : b.textField) != null ? u : h == null ? void 0 : h.TextField) != null ? s : A1, O = rn({
    elementType: M,
    externalSlotProps: (d = x == null ? void 0 : x.textField) != null ? d : g == null ? void 0 : g.textField,
    externalForwardedProps: R,
    ownerState: $
  }), {
    inputRef: N
  } = O, V = le(O, wle);
  V.inputProps = y({}, E, V.inputProps), V.InputProps = y({}, S, V.InputProps);
  const I = J_({
    props: V,
    inputRef: N
  }), {
    ref: z,
    onPaste: B,
    onKeyDown: P,
    inputMode: F,
    readOnly: H,
    clearable: U,
    onClear: Q
  } = I, Y = le(I, Rle), {
    InputProps: te,
    fieldProps: Z
  } = cx({
    onClear: Q,
    clearable: U,
    fieldProps: Y,
    InputProps: Y.InputProps,
    slots: b,
    slotProps: x,
    components: h,
    componentsProps: g
  });
  return /* @__PURE__ */ _(M, y({
    ref: a
  }, Z, {
    InputProps: y({}, te, {
      readOnly: H
    }),
    inputProps: y({}, Y.inputProps, {
      inputMode: F,
      onPaste: B,
      onKeyDown: P,
      ref: z
    })
  }));
});
process.env.NODE_ENV !== "production" && (px.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default `utils.is12HourCycleInCurrentLocale()`
   */
  ampm: t.bool,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: t.bool,
  className: t.string,
  /**
   * If `true`, a clear button will be shown in the field allowing value clearing.
   * @default false
   */
  clearable: t.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: t.oneOf(["error", "info", "primary", "secondary", "success", "warning"]),
  component: t.elementType,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: t.bool,
  /**
   * Format of the date when rendered in the input(s).
   */
  format: t.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: t.oneOf(["dense", "spacious"]),
  /**
   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.
   */
  FormHelperTextProps: t.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: t.bool,
  /**
   * The helper text content.
   */
  helperText: t.node,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: t.bool,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: t.string,
  /**
   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   */
  InputLabelProps: t.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: t.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](/material-ui/api/filled-input/),
   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)
   * component depending on the `variant` prop value.
   */
  InputProps: t.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * The label content.
   */
  label: t.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: t.oneOf(["dense", "none", "normal"]),
  /**
   * Maximal selectable date.
   */
  maxDate: t.any,
  /**
   * Maximal selectable moment of time with binding to date, to set max time in each day use `maxTime`.
   */
  maxDateTime: t.any,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: t.any,
  /**
   * Minimal selectable date.
   */
  minDate: t.any,
  /**
   * Minimal selectable moment of time with binding to date, to set min time in each day use `minTime`.
   */
  minDateTime: t.any,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: t.any,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: t.number,
  /**
   * Name attribute of the `input` element.
   */
  name: t.string,
  onBlur: t.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: t.func,
  /**
   * Callback fired when the clear button is clicked.
   */
  onClear: t.func,
  /**
   * Callback fired when the error associated to the current value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TError} error The new error.
   * @param {TValue} value The value associated to the error.
   */
  onError: t.func,
  onFocus: t.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: t.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   * @default false
   */
  readOnly: t.bool,
  /**
   * The date used to generate a part of the new value that is not present in the format when both `value` and `defaultValue` are empty.
   * For example, on time fields it will be used to determine the date to set.
   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`. Value is rounded to the most granular section used.
   */
  referenceDate: t.any,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: t.bool,
  /**
   * The currently selected sections.
   * This prop accept four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If an object with a `startIndex` and `endIndex` properties are provided, the sections between those two indexes will be selected.
   * 3. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 4. If `null` is provided, no section will be selected
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: t.oneOfType([t.oneOf(["all", "day", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), t.number, t.shape({
    endIndex: t.number.isRequired,
    startIndex: t.number.isRequired
  })]),
  /**
   * Disable specific clock time.
   * @param {number} clockValue The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   * @deprecated Consider using `shouldDisableTime`.
   */
  shouldDisableClock: t.func,
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: t.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: t.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: t.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: t.func,
  /**
   * If `true`, the format will respect the leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `8/16/2018`)
   * If `false`, the format will always add leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `08/16/2018`)
   *
   * Warning n°1: Luxon is not able to respect the leading zeroes when using macro tokens (e.g: "DD"), so `shouldRespectLeadingZeros={true}` might lead to inconsistencies when using `AdapterLuxon`.
   *
   * Warning n°2: When `shouldRespectLeadingZeros={true}`, the field will add an invisible character on the sections containing a single digit to make sure `onChange` is fired.
   * If you need to get the clean value from the input, you can remove this character using `input.value.replace(/\u200e/g, '')`.
   *
   * Warning n°3: When used in strict mode, dayjs and moment require to respect the leading zeros.
   * This mean that when using `shouldRespectLeadingZeros={false}`, if you retrieve the value directly from the input (not listening to `onChange`) and your format contains tokens without leading zeros, the value will not be parsed by your library.
   *
   * @default `false`
   */
  shouldRespectLeadingZeros: t.bool,
  /**
   * The size of the component.
   */
  size: t.oneOf(["medium", "small"]),
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  style: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The ref object used to imperatively interact with the field.
   */
  unstableFieldRef: t.oneOfType([t.func, t.object]),
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: t.oneOf(["filled", "outlined", "standard"])
});
const Ele = (e) => We("MuiPickersFadeTransitionGroup", e), Ole = Ye("MuiPickersFadeTransitionGroup", ["root"]), Ple = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"]
  }, Ele, n);
}, Dle = J(e1, {
  name: "MuiPickersFadeTransitionGroup",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({
  display: "block",
  position: "relative"
});
function eV(e) {
  const n = Ie({
    props: e,
    name: "MuiPickersFadeTransitionGroup"
  }), {
    children: a,
    className: s,
    reduceAnimations: u,
    transKey: d
  } = n, p = Ple(n), h = En();
  return u ? a : /* @__PURE__ */ _(Dle, {
    className: fe(p.root, s),
    children: /* @__PURE__ */ _(em, {
      appear: !1,
      mountOnEnter: !0,
      unmountOnExit: !0,
      timeout: {
        appear: h.transitions.duration.enteringScreen,
        enter: h.transitions.duration.enteringScreen,
        exit: 0
      },
      children: a
    }, d)
  });
}
function Mle(e) {
  return We("MuiPickersMonth", e);
}
const qv = Ye("MuiPickersMonth", ["root", "monthButton", "disabled", "selected"]), $le = ["autoFocus", "children", "disabled", "selected", "value", "tabIndex", "onClick", "onKeyDown", "onFocus", "onBlur", "aria-current", "aria-label", "monthsPerRow"], Nle = (e) => {
  const {
    disabled: n,
    selected: a,
    classes: s
  } = e;
  return He({
    root: ["root"],
    monthButton: ["monthButton", n && "disabled", a && "selected"]
  }, Mle, s);
}, Lle = J("div", {
  name: "MuiPickersMonth",
  slot: "Root",
  overridesResolver: (e, n) => [n.root]
})(({
  ownerState: e
}) => ({
  flexBasis: e.monthsPerRow === 3 ? "33.3%" : "25%",
  display: "flex",
  alignItems: "center",
  justifyContent: "center"
})), Ile = J("button", {
  name: "MuiPickersMonth",
  slot: "MonthButton",
  overridesResolver: (e, n) => [n.monthButton, {
    [`&.${qv.disabled}`]: n.disabled
  }, {
    [`&.${qv.selected}`]: n.selected
  }]
})(({
  theme: e
}) => y({
  color: "unset",
  backgroundColor: "transparent",
  border: 0,
  outline: 0
}, e.typography.subtitle1, {
  margin: "8px 0",
  height: 36,
  width: 72,
  borderRadius: 18,
  cursor: "pointer",
  "&:focus": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Kr(e.palette.action.active, e.palette.action.hoverOpacity)
  },
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Kr(e.palette.action.active, e.palette.action.hoverOpacity)
  },
  "&:disabled": {
    cursor: "auto",
    pointerEvents: "none"
  },
  [`&.${qv.disabled}`]: {
    color: (e.vars || e).palette.text.secondary
  },
  [`&.${qv.selected}`]: {
    color: (e.vars || e).palette.primary.contrastText,
    backgroundColor: (e.vars || e).palette.primary.main,
    "&:focus, &:hover": {
      backgroundColor: (e.vars || e).palette.primary.dark
    }
  }
})), Ale = /* @__PURE__ */ k.memo(function(n) {
  const a = Ie({
    props: n,
    name: "MuiPickersMonth"
  }), {
    autoFocus: s,
    children: u,
    disabled: d,
    selected: p,
    value: h,
    tabIndex: g,
    onClick: b,
    onKeyDown: x,
    onFocus: S,
    onBlur: E,
    "aria-current": R,
    "aria-label": $
    // We don't want to forward this prop to the root element
  } = a, M = le(a, $le), O = k.useRef(null), N = Nle(a);
  return ro(() => {
    if (s) {
      var V;
      (V = O.current) == null || V.focus();
    }
  }, [s]), /* @__PURE__ */ _(Lle, y({
    className: N.root,
    ownerState: a
  }, M, {
    children: /* @__PURE__ */ _(Ile, {
      ref: O,
      disabled: d,
      type: "button",
      role: "radio",
      tabIndex: d ? -1 : g,
      "aria-current": R,
      "aria-checked": p,
      "aria-label": $,
      onClick: (V) => b(V, h),
      onKeyDown: (V) => x(V, h),
      onFocus: (V) => S(V, h),
      onBlur: (V) => E(V, h),
      className: N.monthButton,
      ownerState: a,
      children: u
    })
  }));
});
function tV(e) {
  return We("MuiMonthCalendar", e);
}
const _le = Ye("MuiMonthCalendar", ["root"]), Vle = ["className", "value", "defaultValue", "referenceDate", "disabled", "disableFuture", "disablePast", "maxDate", "minDate", "onChange", "shouldDisableMonth", "readOnly", "disableHighlightToday", "autoFocus", "onMonthFocus", "hasFocus", "onFocusedViewChange", "monthsPerRow", "timezone", "gridLabelId"], Ble = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"]
  }, tV, n);
};
function zle(e, n) {
  const a = dn(), s = $d(), u = Ie({
    props: e,
    name: n
  });
  return y({
    disableFuture: !1,
    disablePast: !1
  }, u, {
    minDate: Xr(a, u.minDate, s.minDate),
    maxDate: Xr(a, u.maxDate, s.maxDate)
  });
}
const Fle = J("div", {
  name: "MuiMonthCalendar",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({
  display: "flex",
  flexWrap: "wrap",
  alignContent: "stretch",
  padding: "0 4px",
  width: Ig,
  // avoid padding increasing width over defined
  boxSizing: "border-box"
}), rR = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = zle(n, "MuiMonthCalendar"), {
    className: u,
    value: d,
    defaultValue: p,
    referenceDate: h,
    disabled: g,
    disableFuture: b,
    disablePast: x,
    maxDate: S,
    minDate: E,
    onChange: R,
    shouldDisableMonth: $,
    readOnly: M,
    disableHighlightToday: O,
    autoFocus: N = !1,
    onMonthFocus: V,
    hasFocus: I,
    onFocusedViewChange: z,
    monthsPerRow: B = 3,
    timezone: P,
    gridLabelId: F
  } = s, H = le(s, Vle), {
    value: U,
    handleValueChange: Q,
    timezone: Y
  } = rm({
    name: "MonthCalendar",
    timezone: P,
    value: d,
    defaultValue: p,
    onChange: R,
    valueManager: Oo
  }), te = Nd(Y), Z = Gf(), q = dn(), X = k.useMemo(
    () => Oo.getInitialReferenceValue({
      value: U,
      utils: q,
      props: s,
      timezone: Y,
      referenceDate: h,
      granularity: Zi.month
    }),
    []
    // eslint-disable-line react-hooks/exhaustive-deps
  ), oe = s, ie = Ble(oe), K = k.useMemo(() => q.getMonth(te), [q, te]), ne = k.useMemo(() => U != null ? q.getMonth(U) : O ? null : q.getMonth(X), [U, q, O, X]), [se, ze] = k.useState(() => ne || K), [Ue, Oe] = Eo({
    name: "MonthCalendar",
    state: "hasFocus",
    controlled: I,
    default: N ?? !1
  }), ue = kt((Ee) => {
    Oe(Ee), z && z(Ee);
  }), xe = k.useCallback((Ee) => {
    const Ae = q.startOfMonth(x && q.isAfter(te, E) ? te : E), Ce = q.startOfMonth(b && q.isBefore(te, S) ? te : S), ae = q.startOfMonth(Ee);
    return q.isBefore(ae, Ae) || q.isAfter(ae, Ce) ? !0 : $ ? $(ae) : !1;
  }, [b, x, S, E, te, $, q]), me = kt((Ee, Ae) => {
    if (M)
      return;
    const Ce = q.setMonth(U ?? X, Ae);
    Q(Ce);
  }), Se = kt((Ee) => {
    xe(q.setMonth(U ?? X, Ee)) || (ze(Ee), ue(!0), V && V(Ee));
  });
  k.useEffect(() => {
    ze((Ee) => ne !== null && Ee !== ne ? ne : Ee);
  }, [ne]);
  const ce = kt((Ee, Ae) => {
    switch (Ee.key) {
      case "ArrowUp":
        Se((12 + Ae - 3) % 12), Ee.preventDefault();
        break;
      case "ArrowDown":
        Se((12 + Ae + 3) % 12), Ee.preventDefault();
        break;
      case "ArrowLeft":
        Se((12 + Ae + (Z.direction === "ltr" ? -1 : 1)) % 12), Ee.preventDefault();
        break;
      case "ArrowRight":
        Se((12 + Ae + (Z.direction === "ltr" ? 1 : -1)) % 12), Ee.preventDefault();
        break;
    }
  }), Le = kt((Ee, Ae) => {
    Se(Ae);
  }), Ze = kt((Ee, Ae) => {
    se === Ae && ue(!1);
  });
  return /* @__PURE__ */ _(Fle, y({
    ref: a,
    className: fe(ie.root, u),
    ownerState: oe,
    role: "radiogroup",
    "aria-labelledby": F
  }, H, {
    children: B1(q, U ?? X).map((Ee) => {
      const Ae = q.getMonth(Ee), Ce = q.format(Ee, "monthShort"), ae = q.format(Ee, "month"), Pe = Ae === ne, ke = g || xe(Ee);
      return /* @__PURE__ */ _(Ale, {
        selected: Pe,
        value: Ae,
        onClick: me,
        onKeyDown: ce,
        autoFocus: Ue && Ae === se,
        disabled: ke,
        tabIndex: Ae === se ? 0 : -1,
        onFocus: Le,
        onBlur: Ze,
        "aria-current": K === Ae ? "date" : void 0,
        "aria-label": ae,
        monthsPerRow: B,
        children: Ce
      }, Ce);
    })
  }));
});
process.env.NODE_ENV !== "production" && (rR.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  autoFocus: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * className applied to the root element.
   */
  className: t.string,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true` picker is disabled
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  gridLabelId: t.string,
  hasFocus: t.bool,
  /**
   * Maximal selectable date.
   */
  maxDate: t.any,
  /**
   * Minimal selectable date.
   */
  minDate: t.any,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: t.oneOf([3, 4]),
  /**
   * Callback fired when the value changes.
   * @template TDate
   * @param {TDate} value The new value.
   */
  onChange: t.func,
  onFocusedViewChange: t.func,
  onMonthFocus: t.func,
  /**
   * If `true` picker is readonly
   */
  readOnly: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid month using the validation props, except callbacks such as `shouldDisableMonth`.
   */
  referenceDate: t.any,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: t.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any
});
function jle(e) {
  return We("MuiPickersYear", e);
}
const Gv = Ye("MuiPickersYear", ["root", "yearButton", "selected", "disabled"]), Ule = ["autoFocus", "className", "children", "disabled", "selected", "value", "tabIndex", "onClick", "onKeyDown", "onFocus", "onBlur", "aria-current", "yearsPerRow"], Hle = (e) => {
  const {
    disabled: n,
    selected: a,
    classes: s
  } = e;
  return He({
    root: ["root"],
    yearButton: ["yearButton", n && "disabled", a && "selected"]
  }, jle, s);
}, Wle = J("div", {
  name: "MuiPickersYear",
  slot: "Root",
  overridesResolver: (e, n) => [n.root]
})(({
  ownerState: e
}) => ({
  flexBasis: e.yearsPerRow === 3 ? "33.3%" : "25%",
  display: "flex",
  alignItems: "center",
  justifyContent: "center"
})), Yle = J("button", {
  name: "MuiPickersYear",
  slot: "YearButton",
  overridesResolver: (e, n) => [n.yearButton, {
    [`&.${Gv.disabled}`]: n.disabled
  }, {
    [`&.${Gv.selected}`]: n.selected
  }]
})(({
  theme: e
}) => y({
  color: "unset",
  backgroundColor: "transparent",
  border: 0,
  outline: 0
}, e.typography.subtitle1, {
  margin: "6px 0",
  height: 36,
  width: 72,
  borderRadius: 18,
  cursor: "pointer",
  "&:focus": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.focusOpacity})` : Kr(e.palette.action.active, e.palette.action.focusOpacity)
  },
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Kr(e.palette.action.active, e.palette.action.hoverOpacity)
  },
  "&:disabled": {
    cursor: "auto",
    pointerEvents: "none"
  },
  [`&.${Gv.disabled}`]: {
    color: (e.vars || e).palette.text.secondary
  },
  [`&.${Gv.selected}`]: {
    color: (e.vars || e).palette.primary.contrastText,
    backgroundColor: (e.vars || e).palette.primary.main,
    "&:focus, &:hover": {
      backgroundColor: (e.vars || e).palette.primary.dark
    }
  }
})), qle = /* @__PURE__ */ k.memo(function(n) {
  const a = Ie({
    props: n,
    name: "MuiPickersYear"
  }), {
    autoFocus: s,
    className: u,
    children: d,
    disabled: p,
    selected: h,
    value: g,
    tabIndex: b,
    onClick: x,
    onKeyDown: S,
    onFocus: E,
    onBlur: R,
    "aria-current": $
    // We don't want to forward this prop to the root element
  } = a, M = le(a, Ule), O = k.useRef(null), N = Hle(a);
  return k.useEffect(() => {
    s && O.current.focus();
  }, [s]), /* @__PURE__ */ _(Wle, y({
    className: fe(N.root, u),
    ownerState: a
  }, M, {
    children: /* @__PURE__ */ _(Yle, {
      ref: O,
      disabled: p,
      type: "button",
      role: "radio",
      tabIndex: p ? -1 : b,
      "aria-current": $,
      "aria-checked": h,
      onClick: (V) => x(V, g),
      onKeyDown: (V) => S(V, g),
      onFocus: (V) => E(V, g),
      onBlur: (V) => R(V, g),
      className: N.yearButton,
      ownerState: a,
      children: d
    })
  }));
});
function nV(e) {
  return We("MuiYearCalendar", e);
}
const Gle = Ye("MuiYearCalendar", ["root"]), Kle = ["autoFocus", "className", "value", "defaultValue", "referenceDate", "disabled", "disableFuture", "disablePast", "maxDate", "minDate", "onChange", "readOnly", "shouldDisableYear", "disableHighlightToday", "onYearFocus", "hasFocus", "onFocusedViewChange", "yearsPerRow", "timezone", "gridLabelId"], Qle = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"]
  }, nV, n);
};
function Xle(e, n) {
  var a;
  const s = dn(), u = $d(), d = Ie({
    props: e,
    name: n
  });
  return y({
    disablePast: !1,
    disableFuture: !1
  }, d, {
    yearsPerRow: (a = d.yearsPerRow) != null ? a : 3,
    minDate: Xr(s, d.minDate, u.minDate),
    maxDate: Xr(s, d.maxDate, u.maxDate)
  });
}
const Zle = J("div", {
  name: "MuiYearCalendar",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({
  display: "flex",
  flexDirection: "row",
  flexWrap: "wrap",
  overflowY: "auto",
  height: "100%",
  padding: "0 4px",
  width: Ig,
  maxHeight: yre,
  // avoid padding increasing width over defined
  boxSizing: "border-box",
  position: "relative"
}), aR = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Xle(n, "MuiYearCalendar"), {
    autoFocus: u,
    className: d,
    value: p,
    defaultValue: h,
    referenceDate: g,
    disabled: b,
    disableFuture: x,
    disablePast: S,
    maxDate: E,
    minDate: R,
    onChange: $,
    readOnly: M,
    shouldDisableYear: O,
    disableHighlightToday: N,
    onYearFocus: V,
    hasFocus: I,
    onFocusedViewChange: z,
    yearsPerRow: B,
    timezone: P,
    gridLabelId: F
  } = s, H = le(s, Kle), {
    value: U,
    handleValueChange: Q,
    timezone: Y
  } = rm({
    name: "YearCalendar",
    timezone: P,
    value: p,
    defaultValue: h,
    onChange: $,
    valueManager: Oo
  }), te = Nd(Y), Z = Gf(), q = dn(), X = k.useMemo(
    () => Oo.getInitialReferenceValue({
      value: U,
      utils: q,
      props: s,
      timezone: Y,
      referenceDate: g,
      granularity: Zi.year
    }),
    []
    // eslint-disable-line react-hooks/exhaustive-deps
  ), oe = s, ie = Qle(oe), K = k.useMemo(() => q.getYear(te), [q, te]), ne = k.useMemo(() => U != null ? q.getYear(U) : N ? null : q.getYear(X), [U, q, N, X]), [se, ze] = k.useState(() => ne || K), [Ue, Oe] = Eo({
    name: "YearCalendar",
    state: "hasFocus",
    controlled: I,
    default: u ?? !1
  }), ue = kt((Ce) => {
    Oe(Ce), z && z(Ce);
  }), xe = k.useCallback((Ce) => {
    if (S && q.isBeforeYear(Ce, te) || x && q.isAfterYear(Ce, te) || R && q.isBeforeYear(Ce, R) || E && q.isAfterYear(Ce, E))
      return !0;
    if (!O)
      return !1;
    const ae = q.startOfYear(Ce);
    return O(ae);
  }, [x, S, E, R, te, O, q]), me = kt((Ce, ae) => {
    if (M)
      return;
    const Pe = q.setYear(U ?? X, ae);
    Q(Pe);
  }), Se = kt((Ce) => {
    xe(q.setYear(U ?? X, Ce)) || (ze(Ce), ue(!0), V == null || V(Ce));
  });
  k.useEffect(() => {
    ze((Ce) => ne !== null && Ce !== ne ? ne : Ce);
  }, [ne]);
  const ce = kt((Ce, ae) => {
    switch (Ce.key) {
      case "ArrowUp":
        Se(ae - B), Ce.preventDefault();
        break;
      case "ArrowDown":
        Se(ae + B), Ce.preventDefault();
        break;
      case "ArrowLeft":
        Se(ae + (Z.direction === "ltr" ? -1 : 1)), Ce.preventDefault();
        break;
      case "ArrowRight":
        Se(ae + (Z.direction === "ltr" ? 1 : -1)), Ce.preventDefault();
        break;
    }
  }), Le = kt((Ce, ae) => {
    Se(ae);
  }), Ze = kt((Ce, ae) => {
    se === ae && ue(!1);
  }), Ee = k.useRef(null), Ae = cn(a, Ee);
  return k.useEffect(() => {
    if (u || Ee.current === null)
      return;
    const Ce = Ee.current.querySelector('[tabindex="0"]');
    if (!Ce)
      return;
    const ae = Ce.offsetHeight, Pe = Ce.offsetTop, ke = Ee.current.clientHeight, pt = Ee.current.scrollTop, _e = Pe + ae;
    ae > ke || Pe < pt || (Ee.current.scrollTop = _e - ke / 2 - ae / 2);
  }, [u]), /* @__PURE__ */ _(Zle, y({
    ref: Ae,
    className: fe(ie.root, d),
    ownerState: oe,
    role: "radiogroup",
    "aria-labelledby": F
  }, H, {
    children: q.getYearRange(R, E).map((Ce) => {
      const ae = q.getYear(Ce), Pe = ae === ne, ke = b || xe(Ce);
      return /* @__PURE__ */ _(qle, {
        selected: Pe,
        value: ae,
        onClick: me,
        onKeyDown: ce,
        autoFocus: Ue && ae === se,
        disabled: ke,
        tabIndex: ae === se ? 0 : -1,
        onFocus: Le,
        onBlur: Ze,
        "aria-current": K === ae ? "date" : void 0,
        yearsPerRow: B,
        children: q.format(Ce, "year")
      }, q.format(Ce, "year"));
    })
  }));
});
process.env.NODE_ENV !== "production" && (aR.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  autoFocus: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * className applied to the root element.
   */
  className: t.string,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true` picker is disabled
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  gridLabelId: t.string,
  hasFocus: t.bool,
  /**
   * Maximal selectable date.
   */
  maxDate: t.any,
  /**
   * Minimal selectable date.
   */
  minDate: t.any,
  /**
   * Callback fired when the value changes.
   * @template TDate
   * @param {TDate} value The new value.
   */
  onChange: t.func,
  onFocusedViewChange: t.func,
  onYearFocus: t.func,
  /**
   * If `true` picker is readonly
   */
  readOnly: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid year using the validation props, except callbacks such as `shouldDisableYear`.
   */
  referenceDate: t.any,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: t.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * Years rendered per row.
   * @default 3
   */
  yearsPerRow: t.oneOf([3, 4])
});
const Jle = (e) => We("MuiPickersCalendarHeader", e), oV = Ye("MuiPickersCalendarHeader", ["root", "labelContainer", "label", "switchViewButton", "switchViewIcon"]), ece = ["slots", "slotProps", "components", "componentsProps", "currentMonth", "disabled", "disableFuture", "disablePast", "maxDate", "minDate", "onMonthChange", "onViewChange", "view", "reduceAnimations", "views", "labelId", "className", "timezone"], tce = ["ownerState"], nce = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"],
    labelContainer: ["labelContainer"],
    label: ["label"],
    switchViewButton: ["switchViewButton"],
    switchViewIcon: ["switchViewIcon"]
  }, Jle, n);
}, oce = J("div", {
  name: "MuiPickersCalendarHeader",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({
  display: "flex",
  alignItems: "center",
  marginTop: 16,
  marginBottom: 8,
  paddingLeft: 24,
  paddingRight: 12,
  // prevent jumping in safari
  maxHeight: 30,
  minHeight: 30
}), rce = J("div", {
  name: "MuiPickersCalendarHeader",
  slot: "LabelContainer",
  overridesResolver: (e, n) => n.labelContainer
})(({
  theme: e
}) => y({
  display: "flex",
  overflow: "hidden",
  alignItems: "center",
  cursor: "pointer",
  marginRight: "auto"
}, e.typography.body1, {
  fontWeight: e.typography.fontWeightMedium
})), ace = J("div", {
  name: "MuiPickersCalendarHeader",
  slot: "Label",
  overridesResolver: (e, n) => n.label
})({
  marginRight: 6
}), ice = J(Ja, {
  name: "MuiPickersCalendarHeader",
  slot: "SwitchViewButton",
  overridesResolver: (e, n) => n.switchViewButton
})(({
  ownerState: e
}) => y({
  marginRight: "auto"
}, e.view === "year" && {
  [`.${oV.switchViewIcon}`]: {
    transform: "rotate(180deg)"
  }
})), sce = J(p_, {
  name: "MuiPickersCalendarHeader",
  slot: "SwitchViewIcon",
  overridesResolver: (e, n) => n.switchViewIcon
})(({
  theme: e
}) => ({
  willChange: "transform",
  transition: e.transitions.create("transform"),
  transform: "rotate(0deg)"
})), iR = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d, p;
  const h = pr(), g = dn(), b = Ie({
    props: n,
    name: "MuiPickersCalendarHeader"
  }), {
    slots: x,
    slotProps: S,
    components: E,
    currentMonth: R,
    disabled: $,
    disableFuture: M,
    disablePast: O,
    maxDate: N,
    minDate: V,
    onMonthChange: I,
    onViewChange: z,
    view: B,
    reduceAnimations: P,
    views: F,
    labelId: H,
    className: U,
    timezone: Q
  } = b, Y = le(b, ece), te = b, Z = nce(b), q = (s = (u = x == null ? void 0 : x.switchViewButton) != null ? u : E == null ? void 0 : E.SwitchViewButton) != null ? s : ice, X = rn({
    elementType: q,
    externalSlotProps: S == null ? void 0 : S.switchViewButton,
    additionalProps: {
      size: "small",
      "aria-label": h.calendarViewSwitchingButtonAriaLabel(B)
    },
    ownerState: te,
    className: Z.switchViewButton
  }), oe = (d = (p = x == null ? void 0 : x.switchViewIcon) != null ? p : E == null ? void 0 : E.SwitchViewIcon) != null ? d : sce, ie = rn({
    elementType: oe,
    externalSlotProps: S == null ? void 0 : S.switchViewIcon,
    ownerState: void 0,
    className: Z.switchViewIcon
  }), K = le(ie, tce), ne = () => I(g.addMonths(R, 1), "left"), se = () => I(g.addMonths(R, -1), "right"), ze = gre(R, {
    disableFuture: M,
    maxDate: N,
    timezone: Q
  }), Ue = bre(R, {
    disablePast: O,
    minDate: V,
    timezone: Q
  }), Oe = () => {
    if (!(F.length === 1 || !z || $))
      if (F.length === 2)
        z(F.find((ue) => ue !== B) || F[0]);
      else {
        const ue = F.indexOf(B) !== 0 ? 0 : 1;
        z(F[ue]);
      }
  };
  return F.length === 1 && F[0] === "year" ? null : /* @__PURE__ */ st(oce, y({}, Y, {
    ownerState: te,
    className: fe(U, Z.root),
    ref: a,
    children: [/* @__PURE__ */ st(rce, {
      role: "presentation",
      onClick: Oe,
      ownerState: te,
      "aria-live": "polite",
      className: Z.labelContainer,
      children: [/* @__PURE__ */ _(eV, {
        reduceAnimations: P,
        transKey: g.format(R, "monthAndYear"),
        children: /* @__PURE__ */ _(ace, {
          id: H,
          ownerState: te,
          className: Z.label,
          children: g.format(R, "monthAndYear")
        })
      }), F.length > 1 && !$ && /* @__PURE__ */ _(q, y({}, X, {
        children: /* @__PURE__ */ _(oe, y({}, K))
      }))]
    }), /* @__PURE__ */ _(em, {
      in: B === "day",
      children: /* @__PURE__ */ _(y_, {
        slots: x,
        slotProps: S,
        onGoToPrevious: se,
        isPreviousDisabled: Ue,
        previousLabel: h.previousMonth,
        onGoToNext: ne,
        isNextDisabled: ze,
        nextLabel: h.nextMonth
      })
    })]
  }));
});
process.env.NODE_ENV !== "production" && (iR.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * className applied to the root element.
   */
  className: t.string,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  currentMonth: t.any.isRequired,
  disabled: t.bool,
  disableFuture: t.bool,
  disablePast: t.bool,
  labelId: t.string,
  maxDate: t.any.isRequired,
  minDate: t.any.isRequired,
  onMonthChange: t.func.isRequired,
  onViewChange: t.func,
  reduceAnimations: t.bool.isRequired,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  timezone: t.string.isRequired,
  view: t.oneOf(["day", "month", "year"]).isRequired,
  views: t.arrayOf(t.oneOf(["day", "month", "year"]).isRequired).isRequired
});
const rV = (e) => We("MuiDateCalendar", e), lce = Ye("MuiDateCalendar", ["root", "viewTransitionContainer"]), cce = ["autoFocus", "onViewChange", "value", "defaultValue", "referenceDate", "disableFuture", "disablePast", "defaultCalendarMonth", "onChange", "onYearChange", "onMonthChange", "reduceAnimations", "shouldDisableDate", "shouldDisableMonth", "shouldDisableYear", "view", "views", "openTo", "className", "disabled", "readOnly", "minDate", "maxDate", "disableHighlightToday", "focusedView", "onFocusedViewChange", "showDaysOutsideCurrentMonth", "fixedWeekNumber", "dayOfWeekFormatter", "components", "componentsProps", "slots", "slotProps", "loading", "renderLoading", "displayWeekNumber", "yearsPerRow", "monthsPerRow", "timezone"], uce = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"],
    viewTransitionContainer: ["viewTransitionContainer"]
  }, rV, n);
};
function dce(e, n) {
  var a, s, u, d, p, h, g;
  const b = dn(), x = $d(), S = H_(), E = Ie({
    props: e,
    name: n
  });
  return y({}, E, {
    loading: (a = E.loading) != null ? a : !1,
    disablePast: (s = E.disablePast) != null ? s : !1,
    disableFuture: (u = E.disableFuture) != null ? u : !1,
    openTo: (d = E.openTo) != null ? d : "day",
    views: (p = E.views) != null ? p : ["year", "day"],
    reduceAnimations: (h = E.reduceAnimations) != null ? h : S,
    renderLoading: (g = E.renderLoading) != null ? g : () => /* @__PURE__ */ _("span", {
      children: "..."
    }),
    minDate: Xr(b, E.minDate, x.minDate),
    maxDate: Xr(b, E.maxDate, x.maxDate)
  });
}
const pce = J(ax, {
  name: "MuiDateCalendar",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({
  display: "flex",
  flexDirection: "column",
  height: rx
}), fce = J(eV, {
  name: "MuiDateCalendar",
  slot: "ViewTransitionContainer",
  overridesResolver: (e, n) => n.viewTransitionContainer
})({}), fx = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d;
  const p = dn(), h = pa(), g = dce(n, "MuiDateCalendar"), {
    autoFocus: b,
    onViewChange: x,
    value: S,
    defaultValue: E,
    referenceDate: R,
    disableFuture: $,
    disablePast: M,
    defaultCalendarMonth: O,
    onChange: N,
    onYearChange: V,
    onMonthChange: I,
    reduceAnimations: z,
    shouldDisableDate: B,
    shouldDisableMonth: P,
    shouldDisableYear: F,
    view: H,
    views: U,
    openTo: Q,
    className: Y,
    disabled: te,
    readOnly: Z,
    minDate: q,
    maxDate: X,
    disableHighlightToday: oe,
    focusedView: ie,
    onFocusedViewChange: K,
    showDaysOutsideCurrentMonth: ne,
    fixedWeekNumber: se,
    dayOfWeekFormatter: ze,
    components: Ue,
    componentsProps: Oe,
    slots: ue,
    slotProps: xe,
    loading: me,
    renderLoading: Se,
    displayWeekNumber: ce,
    yearsPerRow: Le,
    monthsPerRow: Ze,
    timezone: Ee
  } = g, Ae = le(g, cce), {
    value: Ce,
    handleValueChange: ae,
    timezone: Pe
  } = rm({
    name: "DateCalendar",
    timezone: Ee,
    value: S,
    defaultValue: E,
    onChange: N,
    valueManager: Oo
  }), {
    view: ke,
    setView: pt,
    focusedView: _e,
    setFocusedView: dt,
    goToNextView: ge,
    setValueAndGoToNextView: ve
  } = Lg({
    view: H,
    views: U,
    openTo: Q,
    onChange: ae,
    onViewChange: x,
    autoFocus: b,
    focusedView: ie,
    onFocusedViewChange: K
  }), {
    referenceDate: qe,
    calendarState: vt,
    changeFocusedDay: yt,
    changeMonth: Mt,
    handleChangeMonth: bt,
    isDateDisabled: wt,
    onMonthSwitchingAnimationEnd: we
  } = mle({
    value: Ce,
    defaultCalendarMonth: O,
    referenceDate: R,
    reduceAnimations: z,
    onMonthChange: I,
    minDate: q,
    maxDate: X,
    shouldDisableDate: B,
    disablePast: M,
    disableFuture: $,
    timezone: Pe
  }), Re = te && Ce || q, at = te && Ce || X, Ke = `${h}-grid-label`, lt = _e !== null, et = (s = (u = ue == null ? void 0 : ue.calendarHeader) != null ? u : Ue == null ? void 0 : Ue.CalendarHeader) != null ? s : iR, rt = rn({
    elementType: et,
    externalSlotProps: (d = xe == null ? void 0 : xe.calendarHeader) != null ? d : Oe == null ? void 0 : Oe.calendarHeader,
    additionalProps: {
      views: U,
      view: ke,
      currentMonth: vt.currentMonth,
      onViewChange: pt,
      onMonthChange: (nn, Yn) => bt({
        newMonth: nn,
        direction: Yn
      }),
      minDate: Re,
      maxDate: at,
      disabled: te,
      disablePast: M,
      disableFuture: $,
      reduceAnimations: z,
      timezone: Pe,
      labelId: Ke,
      slots: ue,
      slotProps: xe
    },
    ownerState: g
  }), je = kt((nn) => {
    const Yn = p.startOfMonth(nn), Po = p.endOfMonth(nn), Do = wt(nn) ? ng({
      utils: p,
      date: nn,
      minDate: p.isBefore(q, Yn) ? Yn : q,
      maxDate: p.isAfter(X, Po) ? Po : X,
      disablePast: M,
      disableFuture: $,
      isDateDisabled: wt,
      timezone: Pe
    }) : nn;
    Do ? (ve(Do, "finish"), I == null || I(Yn)) : (ge(), Mt(Yn)), yt(Do, !0);
  }), nt = kt((nn) => {
    const Yn = p.startOfYear(nn), Po = p.endOfYear(nn), Do = wt(nn) ? ng({
      utils: p,
      date: nn,
      minDate: p.isBefore(q, Yn) ? Yn : q,
      maxDate: p.isAfter(X, Po) ? Po : X,
      disablePast: M,
      disableFuture: $,
      isDateDisabled: wt,
      timezone: Pe
    }) : nn;
    Do ? (ve(Do, "finish"), V == null || V(Do)) : (ge(), Mt(Yn)), yt(Do, !0);
  }), ht = kt((nn) => ae(nn && Iw(p, nn, Ce ?? qe), "finish", ke));
  k.useEffect(() => {
    Ce != null && p.isValid(Ce) && Mt(Ce);
  }, [Ce]);
  const $t = g, Lt = uce($t), Jt = {
    disablePast: M,
    disableFuture: $,
    maxDate: X,
    minDate: q
  }, qt = {
    disableHighlightToday: oe,
    readOnly: Z,
    disabled: te,
    timezone: Pe,
    gridLabelId: Ke
  }, en = k.useRef(ke);
  k.useEffect(() => {
    en.current !== ke && (_e === en.current && dt(ke, !0), en.current = ke);
  }, [_e, dt, ke]);
  const Nn = k.useMemo(() => [Ce], [Ce]);
  return /* @__PURE__ */ st(pce, y({
    ref: a,
    className: fe(Lt.root, Y),
    ownerState: $t
  }, Ae, {
    children: [/* @__PURE__ */ _(et, y({}, rt)), /* @__PURE__ */ _(fce, {
      reduceAnimations: z,
      className: Lt.viewTransitionContainer,
      transKey: ke,
      ownerState: $t,
      children: /* @__PURE__ */ st("div", {
        children: [ke === "year" && /* @__PURE__ */ _(aR, y({}, Jt, qt, {
          value: Ce,
          onChange: nt,
          shouldDisableYear: F,
          hasFocus: lt,
          onFocusedViewChange: (nn) => dt("year", nn),
          yearsPerRow: Le,
          referenceDate: qe
        })), ke === "month" && /* @__PURE__ */ _(rR, y({}, Jt, qt, {
          hasFocus: lt,
          className: Y,
          value: Ce,
          onChange: je,
          shouldDisableMonth: P,
          onFocusedViewChange: (nn) => dt("month", nn),
          monthsPerRow: Ze,
          referenceDate: qe
        })), ke === "day" && /* @__PURE__ */ _(ple, y({}, vt, Jt, qt, {
          onMonthSwitchingAnimationEnd: we,
          onFocusedDayChange: yt,
          reduceAnimations: z,
          selectedDays: Nn,
          onSelectedDaysChange: ht,
          shouldDisableDate: B,
          shouldDisableMonth: P,
          shouldDisableYear: F,
          hasFocus: lt,
          onFocusedViewChange: (nn) => dt("day", nn),
          showDaysOutsideCurrentMonth: ne,
          fixedWeekNumber: se,
          dayOfWeekFormatter: ze,
          displayWeekNumber: ce,
          components: Ue,
          componentsProps: Oe,
          slots: ue,
          slotProps: xe,
          loading: me,
          renderLoading: Se
        }))]
      })
    })]
  }));
});
process.env.NODE_ENV !== "production" && (fx.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  className: t.string,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: t.func,
  /**
   * Default calendar month displayed when `value` and `defaultValue` are empty.
   * @deprecated Consider using `referenceDate` instead.
   */
  defaultCalendarMonth: t.any,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: t.bool,
  /**
   * Calendar will show more weeks in order to match this value.
   * Put it to 6 for having fix number of week in Gregorian calendars
   * @default undefined
   */
  fixedWeekNumber: t.number,
  /**
   * Controlled focused view.
   */
  focusedView: t.oneOf(["day", "month", "year"]),
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: t.bool,
  /**
   * Maximal selectable date.
   */
  maxDate: t.any,
  /**
   * Minimal selectable date.
   */
  minDate: t.any,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: t.oneOf([3, 4]),
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TView The view type. Will be one of date or time views.
   * @param {TValue} value The new value.
   * @param {PickerSelectionState | undefined} selectionState Indicates if the date selection is complete.
   * @param {TView | undefined} selectedView Indicates the view in which the selection has been made.
   */
  onChange: t.func,
  /**
   * Callback fired on focused view change.
   * @template TView
   * @param {TView} view The new view to focus or not.
   * @param {boolean} hasFocus `true` if the view should be focused.
   */
  onFocusedViewChange: t.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: t.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: t.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: t.func,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: t.oneOf(["day", "month", "year"]),
  /**
   * Make picker read only.
   * @default false
   */
  readOnly: t.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`.
   */
  referenceDate: t.any,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: t.func,
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: t.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: t.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: t.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: t.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: t.oneOf(["day", "month", "year"]),
  /**
   * Available views.
   */
  views: t.arrayOf(t.oneOf(["day", "month", "year"]).isRequired),
  /**
   * Years rendered per row.
   * @default 3
   */
  yearsPerRow: t.oneOf([3, 4])
});
const aV = (e) => We("MuiDayCalendarSkeleton", e), mce = Ye("MuiDayCalendarSkeleton", ["root", "week", "daySkeleton"]), hce = ["className"], vce = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"],
    week: ["week"],
    daySkeleton: ["daySkeleton"]
  }, aV, n);
}, gce = J("div", {
  name: "MuiDayCalendarSkeleton",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({
  alignSelf: "start"
}), bce = J("div", {
  name: "MuiDayCalendarSkeleton",
  slot: "Week",
  overridesResolver: (e, n) => n.week
})({
  margin: `${om}px 0`,
  display: "flex",
  justifyContent: "center"
}), iV = J(AJ, {
  name: "MuiDayCalendarSkeleton",
  slot: "DaySkeleton",
  overridesResolver: (e, n) => n.daySkeleton
})(({
  ownerState: e
}) => y({
  margin: `0 ${om}px`
}, e.day === 0 && {
  visibility: "hidden"
}));
iV.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  ownerState: t.shape({
    day: t.number.isRequired
  }).isRequired
};
const yce = [[0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 0]];
function sV(e) {
  const n = Ie({
    props: e,
    name: "MuiDayCalendarSkeleton"
  }), {
    className: a
  } = n, s = le(n, hce), u = vce(s);
  return /* @__PURE__ */ _(gce, y({
    className: fe(u.root, a)
  }, s, {
    children: yce.map((d, p) => /* @__PURE__ */ _(bce, {
      className: u.week,
      children: d.map((h, g) => /* @__PURE__ */ _(iV, {
        variant: "circular",
        width: Od,
        height: Od,
        className: u.daySkeleton,
        ownerState: {
          day: h
        }
      }, g))
    }, p))
  }));
}
process.env.NODE_ENV !== "production" && (sV.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
});
function Cce(e) {
  return We("MuiDatePickerToolbar", e);
}
const Tce = Ye("MuiDatePickerToolbar", ["root", "title"]), xce = ["value", "isLandscape", "onChange", "toolbarFormat", "toolbarPlaceholder", "views", "className"], Sce = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"],
    title: ["title"]
  }, Cce, n);
}, kce = J(X1, {
  name: "MuiDatePickerToolbar",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({}), wce = J(vo, {
  name: "MuiDatePickerToolbar",
  slot: "Title",
  overridesResolver: (e, n) => n.title
})(({
  ownerState: e
}) => y({}, e.isLandscape && {
  margin: "auto 16px auto auto"
})), sR = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiDatePickerToolbar"
  }), {
    value: u,
    isLandscape: d,
    toolbarFormat: p,
    toolbarPlaceholder: h = "––",
    views: g,
    className: b
  } = s, x = le(s, xce), S = dn(), E = pr(), R = Sce(s), $ = k.useMemo(() => {
    if (!u)
      return h;
    const O = gg(S, {
      format: p,
      views: g
    }, !0);
    return S.formatByString(u, O);
  }, [u, p, h, S, g]), M = s;
  return /* @__PURE__ */ _(kce, y({
    ref: a,
    toolbarTitle: E.datePickerToolbarTitle,
    isLandscape: d,
    className: fe(R.root, b)
  }, x, {
    children: /* @__PURE__ */ _(wce, {
      variant: "h4",
      align: d ? "left" : "center",
      ownerState: M,
      className: R.title,
      children: $
    })
  }));
});
process.env.NODE_ENV !== "production" && (sR.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * className applied to the root component.
   */
  className: t.string,
  disabled: t.bool,
  /**
   * If `true`, show the toolbar even in desktop mode.
   * @default `true` for Desktop, `false` for Mobile.
   */
  hidden: t.bool,
  isLandscape: t.bool.isRequired,
  onChange: t.func.isRequired,
  /**
   * Callback called when a toolbar is clicked
   * @template TView
   * @param {TView} view The view to open
   */
  onViewChange: t.func.isRequired,
  readOnly: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  titleId: t.string,
  /**
   * Toolbar date format.
   */
  toolbarFormat: t.string,
  /**
   * Toolbar value placeholder—it is displayed when the value is empty.
   * @default "––"
   */
  toolbarPlaceholder: t.node,
  value: t.any,
  /**
   * Currently visible picker view.
   */
  view: t.oneOf(["day", "month", "year"]).isRequired,
  views: t.arrayOf(t.oneOf(["day", "month", "year"]).isRequired).isRequired
});
function lR(e, n) {
  var a, s, u, d;
  const p = dn(), h = $d(), g = Ie({
    props: e,
    name: n
  }), b = k.useMemo(() => {
    var S;
    return ((S = g.localeText) == null ? void 0 : S.toolbarTitle) == null ? g.localeText : y({}, g.localeText, {
      datePickerToolbarTitle: g.localeText.toolbarTitle
    });
  }, [g.localeText]), x = (a = g.slots) != null ? a : Ag(g.components);
  return y({}, g, {
    localeText: b
  }, V1({
    views: g.views,
    openTo: g.openTo,
    defaultViews: ["year", "day"],
    defaultOpenTo: "day"
  }), {
    disableFuture: (s = g.disableFuture) != null ? s : !1,
    disablePast: (u = g.disablePast) != null ? u : !1,
    minDate: Xr(p, g.minDate, h.minDate),
    maxDate: Xr(p, g.maxDate, h.maxDate),
    slots: y({
      toolbar: sR
    }, x),
    slotProps: (d = g.slotProps) != null ? d : g.componentsProps
  });
}
const Rce = ["props", "getOpenDialogAriaText"], Ece = ["ownerState"], Oce = ["ownerState"], cR = (e) => {
  var n, a, s, u, d;
  let {
    props: p,
    getOpenDialogAriaText: h
  } = e, g = le(e, Rce);
  const {
    slots: b,
    slotProps: x,
    className: S,
    sx: E,
    format: R,
    formatDensity: $,
    timezone: M,
    name: O,
    label: N,
    inputRef: V,
    readOnly: I,
    disabled: z,
    autoFocus: B,
    localeText: P,
    reduceAnimations: F
  } = p, H = dn(), U = k.useRef(null), Q = k.useRef(null), Y = pa(), te = (n = x == null || (a = x.toolbar) == null ? void 0 : a.hidden) != null ? n : !1, {
    open: Z,
    actions: q,
    hasUIView: X,
    layoutProps: oe,
    renderCurrentView: ie,
    shouldRestoreFocus: K,
    fieldProps: ne
  } = J1(y({}, g, {
    props: p,
    inputRef: U,
    autoFocusView: !0,
    additionalViewProps: {},
    wrapperVariant: "desktop"
  })), se = (s = b.inputAdornment) != null ? s : NI, ze = rn({
    elementType: se,
    externalSlotProps: x == null ? void 0 : x.inputAdornment,
    additionalProps: {
      position: "end"
    },
    ownerState: p
  }), Ue = le(ze, Ece), Oe = (u = b.openPickerButton) != null ? u : Ja, ue = rn({
    elementType: Oe,
    externalSlotProps: x == null ? void 0 : x.openPickerButton,
    additionalProps: {
      disabled: z || I,
      onClick: Z ? q.onClose : q.onOpen,
      "aria-label": h(ne.value, H),
      edge: Ue.position
    },
    ownerState: p
  }), xe = le(ue, Oce), me = b.openPickerIcon, Se = b.field, ce = rn({
    elementType: Se,
    externalSlotProps: x == null ? void 0 : x.field,
    additionalProps: y({}, ne, te && {
      id: Y
    }, {
      readOnly: I,
      disabled: z,
      className: S,
      sx: E,
      format: R,
      formatDensity: $,
      timezone: M,
      label: N,
      name: O,
      autoFocus: B && !p.open,
      focused: Z ? !0 : void 0
    }),
    ownerState: p
  });
  X && (ce.InputProps = y({}, ce.InputProps, {
    ref: Q,
    [`${Ue.position}Adornment`]: /* @__PURE__ */ _(se, y({}, Ue, {
      children: /* @__PURE__ */ _(Oe, y({}, xe, {
        children: /* @__PURE__ */ _(me, y({}, x == null ? void 0 : x.openPickerIcon))
      }))
    }))
  }));
  const Le = y({
    textField: b.textField,
    clearIcon: b.clearIcon,
    clearButton: b.clearButton
  }, ce.slots), Ze = (d = b.layout) != null ? d : _g, Ee = cn(U, ce.inputRef, V);
  let Ae = Y;
  te && (N ? Ae = `${Y}-label` : Ae = void 0);
  const Ce = y({}, x, {
    toolbar: y({}, x == null ? void 0 : x.toolbar, {
      titleId: Y
    }),
    popper: y({
      "aria-labelledby": Ae
    }, x == null ? void 0 : x.popper)
  });
  return {
    renderPicker: () => /* @__PURE__ */ st($g, {
      localeText: P,
      children: [/* @__PURE__ */ _(Se, y({}, ce, {
        slots: Le,
        slotProps: Ce,
        inputRef: Ee
      })), /* @__PURE__ */ _(vse, y({
        role: "dialog",
        placement: "bottom-start",
        anchorEl: Q.current
      }, q, {
        open: Z,
        slots: b,
        slotProps: Ce,
        shouldRestoreFocus: K,
        reduceAnimations: F,
        children: /* @__PURE__ */ _(Ze, y({}, oe, Ce == null ? void 0 : Ce.layout, {
          slots: b,
          slotProps: Ce,
          children: ie()
        }))
      }))]
    })
  };
}, dr = ({
  view: e,
  onViewChange: n,
  views: a,
  focusedView: s,
  onFocusedViewChange: u,
  value: d,
  defaultValue: p,
  referenceDate: h,
  onChange: g,
  className: b,
  classes: x,
  disableFuture: S,
  disablePast: E,
  minDate: R,
  maxDate: $,
  shouldDisableDate: M,
  shouldDisableMonth: O,
  shouldDisableYear: N,
  reduceAnimations: V,
  onMonthChange: I,
  monthsPerRow: z,
  onYearChange: B,
  yearsPerRow: P,
  defaultCalendarMonth: F,
  components: H,
  componentsProps: U,
  slots: Q,
  slotProps: Y,
  loading: te,
  renderLoading: Z,
  disableHighlightToday: q,
  readOnly: X,
  disabled: oe,
  showDaysOutsideCurrentMonth: ie,
  dayOfWeekFormatter: K,
  sx: ne,
  autoFocus: se,
  fixedWeekNumber: ze,
  displayWeekNumber: Ue,
  timezone: Oe
}) => /* @__PURE__ */ _(fx, {
  view: e,
  onViewChange: n,
  views: a.filter(Bf),
  focusedView: s && Bf(s) ? s : null,
  onFocusedViewChange: u,
  value: d,
  defaultValue: p,
  referenceDate: h,
  onChange: g,
  className: b,
  classes: x,
  disableFuture: S,
  disablePast: E,
  minDate: R,
  maxDate: $,
  shouldDisableDate: M,
  shouldDisableMonth: O,
  shouldDisableYear: N,
  reduceAnimations: V,
  onMonthChange: I,
  monthsPerRow: z,
  onYearChange: B,
  yearsPerRow: P,
  defaultCalendarMonth: F,
  components: H,
  componentsProps: U,
  slots: Q,
  slotProps: Y,
  loading: te,
  renderLoading: Z,
  disableHighlightToday: q,
  readOnly: X,
  disabled: oe,
  showDaysOutsideCurrentMonth: ie,
  dayOfWeekFormatter: K,
  sx: ne,
  autoFocus: se,
  fixedWeekNumber: ze,
  displayWeekNumber: Ue,
  timezone: Oe
}), uR = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d, p;
  const h = pr(), g = dn(), b = lR(n, "MuiDesktopDatePicker"), x = y({
    day: dr,
    month: dr,
    year: dr
  }, b.viewRenderers), S = y({}, b, {
    viewRenderers: x,
    format: gg(g, b, !1),
    yearsPerRow: (s = b.yearsPerRow) != null ? s : 4,
    slots: y({
      openPickerIcon: _1,
      field: ux
    }, b.slots),
    slotProps: y({}, b.slotProps, {
      field: (R) => {
        var $;
        return y({}, Yl(($ = b.slotProps) == null ? void 0 : $.field, R), im(b), {
          ref: a
        });
      },
      toolbar: y({
        hidden: !0
      }, (u = b.slotProps) == null ? void 0 : u.toolbar)
    })
  }), {
    renderPicker: E
  } = cR({
    props: S,
    valueManager: Oo,
    valueType: "date",
    getOpenDialogAriaText: (d = (p = S.localeText) == null ? void 0 : p.openDatePickerDialogue) != null ? d : h.openDatePickerDialogue,
    validator: am
  });
  return E();
});
uR.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: t.bool,
  /**
   * Class name applied to the root element.
   */
  className: t.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: t.bool,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: t.func,
  /**
   * Default calendar month displayed when `value` and `defaultValue` are empty.
   * @deprecated Consider using `referenceDate` instead.
   */
  defaultCalendarMonth: t.any,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: t.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: t.bool,
  /**
   * Calendar will show more weeks in order to match this value.
   * Put it to 6 for having fix number of week in Gregorian calendars
   * @default undefined
   */
  fixedWeekNumber: t.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: t.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: t.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * The label content.
   */
  label: t.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: t.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: t.object,
  /**
   * Maximal selectable date.
   */
  maxDate: t.any,
  /**
   * Minimal selectable date.
   */
  minDate: t.any,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: t.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: t.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   */
  onAccept: t.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: t.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: t.func,
  /**
   * Callback fired when the error associated to the current value changes.
   * If the error has a non-null value, then the `TextField` will be rendered in `error` state.
   *
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TError} error The new error describing why the current value is not valid.
   * @param {TValue} value The value associated to the error.
   */
  onError: t.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: t.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: t.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: t.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: t.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: t.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: t.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: t.oneOf(["day", "month", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: t.oneOf(["landscape", "portrait"]),
  readOnly: t.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: t.any,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: t.func,
  /**
   * The currently selected sections.
   * This prop accept four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If an object with a `startIndex` and `endIndex` properties are provided, the sections between those two indexes will be selected.
   * 3. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 4. If `null` is provided, no section will be selected
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: t.oneOfType([t.oneOf(["all", "day", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), t.number, t.shape({
    endIndex: t.number.isRequired,
    startIndex: t.number.isRequired
  })]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: t.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: t.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: t.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: t.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: t.oneOf(["day", "month", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be the used.
   */
  viewRenderers: t.shape({
    day: t.func,
    month: t.func,
    year: t.func
  }),
  /**
   * Available views.
   */
  views: t.arrayOf(t.oneOf(["day", "month", "year"]).isRequired),
  /**
   * Years rendered per row.
   * @default 4
   */
  yearsPerRow: t.oneOf([3, 4])
};
const Pce = ["props", "getOpenDialogAriaText"], dR = (e) => {
  var n, a, s;
  let {
    props: u,
    getOpenDialogAriaText: d
  } = e, p = le(e, Pce);
  const {
    slots: h,
    slotProps: g,
    className: b,
    sx: x,
    format: S,
    formatDensity: E,
    timezone: R,
    name: $,
    label: M,
    inputRef: O,
    readOnly: N,
    disabled: V,
    localeText: I
  } = u, z = dn(), B = k.useRef(null), P = pa(), F = (n = g == null || (a = g.toolbar) == null ? void 0 : a.hidden) != null ? n : !1, {
    open: H,
    actions: U,
    layoutProps: Q,
    renderCurrentView: Y,
    fieldProps: te
  } = J1(y({}, p, {
    props: u,
    inputRef: B,
    autoFocusView: !0,
    additionalViewProps: {},
    wrapperVariant: "mobile"
  })), Z = h.field, q = rn({
    elementType: Z,
    externalSlotProps: g == null ? void 0 : g.field,
    additionalProps: y({}, te, F && {
      id: P
    }, !(V || N) && {
      onClick: U.onOpen,
      onKeyDown: Zie(U.onOpen)
    }, {
      readOnly: N ?? !0,
      disabled: V,
      className: b,
      sx: x,
      format: S,
      formatDensity: E,
      timezone: R,
      label: M,
      name: $
    }),
    ownerState: u
  });
  q.inputProps = y({}, q.inputProps, {
    "aria-label": d(te.value, z)
  });
  const X = y({
    textField: h.textField
  }, q.slots), oe = (s = h.layout) != null ? s : _g, ie = cn(B, q.inputRef, O);
  let K = P;
  F && (M ? K = `${P}-label` : K = void 0);
  const ne = y({}, g, {
    toolbar: y({}, g == null ? void 0 : g.toolbar, {
      titleId: P
    }),
    mobilePaper: y({
      "aria-labelledby": K
    }, g == null ? void 0 : g.mobilePaper)
  });
  return {
    renderPicker: () => /* @__PURE__ */ st($g, {
      localeText: I,
      children: [/* @__PURE__ */ _(Z, y({}, q, {
        slots: X,
        slotProps: ne,
        inputRef: ie
      })), /* @__PURE__ */ _(ase, y({}, U, {
        open: H,
        slots: h,
        slotProps: ne,
        children: /* @__PURE__ */ _(oe, y({}, Q, ne == null ? void 0 : ne.layout, {
          slots: h,
          slotProps: ne,
          children: Y()
        }))
      }))]
    })
  };
}, pR = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d;
  const p = pr(), h = dn(), g = lR(n, "MuiMobileDatePicker"), b = y({
    day: dr,
    month: dr,
    year: dr
  }, g.viewRenderers), x = y({}, g, {
    viewRenderers: b,
    format: gg(h, g, !1),
    slots: y({
      field: ux
    }, g.slots),
    slotProps: y({}, g.slotProps, {
      field: (E) => {
        var R;
        return y({}, Yl((R = g.slotProps) == null ? void 0 : R.field, E), im(g), {
          ref: a
        });
      },
      toolbar: y({
        hidden: !1
      }, (s = g.slotProps) == null ? void 0 : s.toolbar)
    })
  }), {
    renderPicker: S
  } = dR({
    props: x,
    valueManager: Oo,
    valueType: "date",
    getOpenDialogAriaText: (u = (d = x.localeText) == null ? void 0 : d.openDatePickerDialogue) != null ? u : p.openDatePickerDialogue,
    validator: am
  });
  return S();
});
pR.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: t.bool,
  /**
   * Class name applied to the root element.
   */
  className: t.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: t.bool,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: t.func,
  /**
   * Default calendar month displayed when `value` and `defaultValue` are empty.
   * @deprecated Consider using `referenceDate` instead.
   */
  defaultCalendarMonth: t.any,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: t.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: t.bool,
  /**
   * Calendar will show more weeks in order to match this value.
   * Put it to 6 for having fix number of week in Gregorian calendars
   * @default undefined
   */
  fixedWeekNumber: t.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: t.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: t.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * The label content.
   */
  label: t.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: t.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: t.object,
  /**
   * Maximal selectable date.
   */
  maxDate: t.any,
  /**
   * Minimal selectable date.
   */
  minDate: t.any,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: t.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: t.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   */
  onAccept: t.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: t.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: t.func,
  /**
   * Callback fired when the error associated to the current value changes.
   * If the error has a non-null value, then the `TextField` will be rendered in `error` state.
   *
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TError} error The new error describing why the current value is not valid.
   * @param {TValue} value The value associated to the error.
   */
  onError: t.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: t.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: t.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: t.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: t.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: t.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: t.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: t.oneOf(["day", "month", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: t.oneOf(["landscape", "portrait"]),
  readOnly: t.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: t.any,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: t.func,
  /**
   * The currently selected sections.
   * This prop accept four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If an object with a `startIndex` and `endIndex` properties are provided, the sections between those two indexes will be selected.
   * 3. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 4. If `null` is provided, no section will be selected
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: t.oneOfType([t.oneOf(["all", "day", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), t.number, t.shape({
    endIndex: t.number.isRequired,
    startIndex: t.number.isRequired
  })]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: t.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: t.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: t.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: t.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: t.oneOf(["day", "month", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be the used.
   */
  viewRenderers: t.shape({
    day: t.func,
    month: t.func,
    year: t.func
  }),
  /**
   * Available views.
   */
  views: t.arrayOf(t.oneOf(["day", "month", "year"]).isRequired),
  /**
   * Years rendered per row.
   * @default 3
   */
  yearsPerRow: t.oneOf([3, 4])
};
const Dce = ["desktopModeMediaQuery"], lV = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiDatePicker"
  }), {
    desktopModeMediaQuery: u = sx
  } = s, d = le(s, Dce);
  return Tg(u, {
    defaultMatches: !0
  }) ? /* @__PURE__ */ _(uR, y({
    ref: a
  }, d)) : /* @__PURE__ */ _(pR, y({
    ref: a
  }, d));
});
process.env.NODE_ENV !== "production" && (lV.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: t.bool,
  /**
   * Class name applied to the root element.
   */
  className: t.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: t.bool,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: t.func,
  /**
   * Default calendar month displayed when `value` and `defaultValue` are empty.
   * @deprecated Consider using `referenceDate` instead.
   */
  defaultCalendarMonth: t.any,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * CSS media query when `Mobile` mode will be changed to `Desktop`.
   * @default '@media (pointer: fine)'
   * @example '@media (min-width: 720px)' or theme.breakpoints.up("sm")
   */
  desktopModeMediaQuery: t.string,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: t.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: t.bool,
  /**
   * Calendar will show more weeks in order to match this value.
   * Put it to 6 for having fix number of week in Gregorian calendars
   * @default undefined
   */
  fixedWeekNumber: t.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: t.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: t.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * The label content.
   */
  label: t.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: t.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: t.object,
  /**
   * Maximal selectable date.
   */
  maxDate: t.any,
  /**
   * Minimal selectable date.
   */
  minDate: t.any,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: t.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: t.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   */
  onAccept: t.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: t.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: t.func,
  /**
   * Callback fired when the error associated to the current value changes.
   * If the error has a non-null value, then the `TextField` will be rendered in `error` state.
   *
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TError} error The new error describing why the current value is not valid.
   * @param {TValue} value The value associated to the error.
   */
  onError: t.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: t.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: t.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: t.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: t.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: t.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: t.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: t.oneOf(["day", "month", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: t.oneOf(["landscape", "portrait"]),
  readOnly: t.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: t.any,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: t.func,
  /**
   * The currently selected sections.
   * This prop accept four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If an object with a `startIndex` and `endIndex` properties are provided, the sections between those two indexes will be selected.
   * 3. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 4. If `null` is provided, no section will be selected
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: t.oneOfType([t.oneOf(["all", "day", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), t.number, t.shape({
    endIndex: t.number.isRequired,
    startIndex: t.number.isRequired
  })]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: t.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: t.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: t.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: t.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: t.oneOf(["day", "month", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be the used.
   */
  viewRenderers: t.shape({
    day: t.func,
    month: t.func,
    year: t.func
  }),
  /**
   * Available views.
   */
  views: t.arrayOf(t.oneOf(["day", "month", "year"]).isRequired),
  /**
   * Years rendered per row.
   * @default 4 on desktop, 3 on mobile
   */
  yearsPerRow: t.oneOf([3, 4])
});
const cV = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d;
  const p = lR(n, "MuiStaticDatePicker"), h = (s = p.displayStaticWrapperAs) != null ? s : "mobile", g = y({
    day: dr,
    month: dr,
    year: dr
  }, p.viewRenderers), b = y({}, p, {
    viewRenderers: g,
    displayStaticWrapperAs: h,
    yearsPerRow: (u = p.yearsPerRow) != null ? u : h === "mobile" ? 3 : 4,
    slotProps: y({}, p.slotProps, {
      toolbar: y({
        hidden: h === "desktop"
      }, (d = p.slotProps) == null ? void 0 : d.toolbar)
    })
  }), {
    renderPicker: x
  } = oR({
    props: b,
    valueManager: Oo,
    valueType: "date",
    validator: am,
    ref: a
  });
  return x();
});
cV.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: t.bool,
  /**
   * Class name applied to the root element.
   */
  className: t.string,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: t.func,
  /**
   * Default calendar month displayed when `value` and `defaultValue` are empty.
   * @deprecated Consider using `referenceDate` instead.
   */
  defaultCalendarMonth: t.any,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * Force static wrapper inner components to be rendered in mobile or desktop mode.
   * @default "mobile"
   */
  displayStaticWrapperAs: t.oneOf(["desktop", "mobile"]),
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: t.bool,
  /**
   * Calendar will show more weeks in order to match this value.
   * Put it to 6 for having fix number of week in Gregorian calendars
   * @default undefined
   */
  fixedWeekNumber: t.number,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: t.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: t.object,
  /**
   * Maximal selectable date.
   */
  maxDate: t.any,
  /**
   * Minimal selectable date.
   */
  minDate: t.any,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: t.oneOf([3, 4]),
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   */
  onAccept: t.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: t.func,
  /**
   * Callback fired when component requests to be closed.
   * Can be fired when selecting (by default on `desktop` mode) or clearing a value.
   * @deprecated Please avoid using as it will be removed in next major version.
   */
  onClose: t.func,
  /**
   * Callback fired when the error associated to the current value changes.
   * If the error has a non-null value, then the `TextField` will be rendered in `error` state.
   *
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TError} error The new error describing why the current value is not valid.
   * @param {TValue} value The value associated to the error.
   */
  onError: t.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: t.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: t.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: t.func,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: t.oneOf(["day", "month", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: t.oneOf(["landscape", "portrait"]),
  readOnly: t.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: t.any,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: t.func,
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: t.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: t.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: t.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: t.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: t.oneOf(["day", "month", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be the used.
   */
  viewRenderers: t.shape({
    day: t.func,
    month: t.func,
    year: t.func
  }),
  /**
   * Available views.
   */
  views: t.arrayOf(t.oneOf(["day", "month", "year"]).isRequired),
  /**
   * Years rendered per row.
   * @default 3
   */
  yearsPerRow: t.oneOf([3, 4])
};
function Mce(e) {
  return We("MuiTimePickerToolbar", e);
}
const Ff = Ye("MuiTimePickerToolbar", ["root", "separator", "hourMinuteLabel", "hourMinuteLabelLandscape", "hourMinuteLabelReverse", "ampmSelection", "ampmLandscape", "ampmLabel"]), $ce = ["ampm", "ampmInClock", "value", "isLandscape", "onChange", "view", "onViewChange", "views", "disabled", "readOnly", "className"], Nce = (e) => {
  const {
    theme: n,
    isLandscape: a,
    classes: s
  } = e, u = {
    root: ["root"],
    separator: ["separator"],
    hourMinuteLabel: ["hourMinuteLabel", a && "hourMinuteLabelLandscape", n.direction === "rtl" && "hourMinuteLabelReverse"],
    ampmSelection: ["ampmSelection", a && "ampmLandscape"],
    ampmLabel: ["ampmLabel"]
  };
  return He(u, Mce, s);
}, Lce = J(X1, {
  name: "MuiTimePickerToolbar",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({}), Ice = J(Z1, {
  name: "MuiTimePickerToolbar",
  slot: "Separator",
  overridesResolver: (e, n) => n.separator
})({
  outline: 0,
  margin: "0 4px 0 2px",
  cursor: "default"
}), uV = J("div", {
  name: "MuiTimePickerToolbar",
  slot: "HourMinuteLabel",
  overridesResolver: (e, n) => [{
    [`&.${Ff.hourMinuteLabelLandscape}`]: n.hourMinuteLabelLandscape,
    [`&.${Ff.hourMinuteLabelReverse}`]: n.hourMinuteLabelReverse
  }, n.hourMinuteLabel]
})(({
  theme: e,
  ownerState: n
}) => y({
  display: "flex",
  justifyContent: "flex-end",
  alignItems: "flex-end"
}, n.isLandscape && {
  marginTop: "auto"
}, e.direction === "rtl" && {
  flexDirection: "row-reverse"
}));
uV.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  as: t.elementType,
  ownerState: t.object.isRequired,
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
};
const dV = J("div", {
  name: "MuiTimePickerToolbar",
  slot: "AmPmSelection",
  overridesResolver: (e, n) => [{
    [`.${Ff.ampmLabel}`]: n.ampmLabel
  }, {
    [`&.${Ff.ampmLandscape}`]: n.ampmLandscape
  }, n.ampmSelection]
})(({
  ownerState: e
}) => y({
  display: "flex",
  flexDirection: "column",
  marginRight: "auto",
  marginLeft: 12
}, e.isLandscape && {
  margin: "4px 0 auto",
  flexDirection: "row",
  justifyContent: "space-around",
  flexBasis: "100%"
}, {
  [`& .${Ff.ampmLabel}`]: {
    fontSize: 17
  }
}));
dV.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  as: t.elementType,
  ownerState: t.object.isRequired,
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
};
function fR(e) {
  const n = Ie({
    props: e,
    name: "MuiTimePickerToolbar"
  }), {
    ampm: a,
    ampmInClock: s,
    value: u,
    isLandscape: d,
    onChange: p,
    view: h,
    onViewChange: g,
    views: b,
    disabled: x,
    readOnly: S,
    className: E
  } = n, R = le(n, $ce), $ = dn(), M = pr(), O = En(), N = !!(a && !s && b.includes("hours")), {
    meridiemMode: V,
    handleMeridiemChange: I
  } = ox(u, a, p), z = (H) => a ? $.format(H, "hours12h") : $.format(H, "hours24h"), B = n, P = Nce(y({}, B, {
    theme: O
  })), F = /* @__PURE__ */ _(Ice, {
    tabIndex: -1,
    value: ":",
    variant: "h3",
    selected: !1,
    className: P.separator
  });
  return /* @__PURE__ */ st(Lce, y({
    landscapeDirection: "row",
    toolbarTitle: M.timePickerToolbarTitle,
    isLandscape: d,
    ownerState: B,
    className: fe(P.root, E)
  }, R, {
    children: [/* @__PURE__ */ st(uV, {
      className: P.hourMinuteLabel,
      ownerState: B,
      children: [Nf(b, "hours") && /* @__PURE__ */ _(Qa, {
        tabIndex: -1,
        variant: "h3",
        onClick: () => g("hours"),
        selected: h === "hours",
        value: u ? z(u) : "--"
      }), Nf(b, ["hours", "minutes"]) && F, Nf(b, "minutes") && /* @__PURE__ */ _(Qa, {
        tabIndex: -1,
        variant: "h3",
        onClick: () => g("minutes"),
        selected: h === "minutes",
        value: u ? $.format(u, "minutes") : "--"
      }), Nf(b, ["minutes", "seconds"]) && F, Nf(b, "seconds") && /* @__PURE__ */ _(Qa, {
        variant: "h3",
        onClick: () => g("seconds"),
        selected: h === "seconds",
        value: u ? $.format(u, "seconds") : "--"
      })]
    }), N && /* @__PURE__ */ st(dV, {
      className: P.ampmSelection,
      ownerState: B,
      children: [/* @__PURE__ */ _(Qa, {
        disableRipple: !0,
        variant: "subtitle2",
        selected: V === "am",
        typographyClassName: P.ampmLabel,
        value: es($, "am"),
        onClick: S ? void 0 : () => I("am"),
        disabled: x
      }), /* @__PURE__ */ _(Qa, {
        disableRipple: !0,
        variant: "subtitle2",
        selected: V === "pm",
        typographyClassName: P.ampmLabel,
        value: es($, "pm"),
        onClick: S ? void 0 : () => I("pm"),
        disabled: x
      })]
    })]
  }));
}
process.env.NODE_ENV !== "production" && (fR.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  ampm: t.bool,
  ampmInClock: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * className applied to the root component.
   */
  className: t.string,
  disabled: t.bool,
  /**
   * If `true`, show the toolbar even in desktop mode.
   * @default `true` for Desktop, `false` for Mobile.
   */
  hidden: t.bool,
  isLandscape: t.bool.isRequired,
  onChange: t.func.isRequired,
  /**
   * Callback called when a toolbar is clicked
   * @template TView
   * @param {TView} view The view to open
   */
  onViewChange: t.func.isRequired,
  readOnly: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  titleId: t.string,
  /**
   * Toolbar date format.
   */
  toolbarFormat: t.string,
  /**
   * Toolbar value placeholder—it is displayed when the value is empty.
   * @default "––"
   */
  toolbarPlaceholder: t.node,
  value: t.any,
  /**
   * Currently visible picker view.
   */
  view: t.oneOf(["hours", "meridiem", "minutes", "seconds"]).isRequired,
  views: t.arrayOf(t.oneOf(["hours", "meridiem", "minutes", "seconds"]).isRequired).isRequired
});
function mR(e, n) {
  var a, s, u, d, p;
  const h = dn(), g = Ie({
    props: e,
    name: n
  }), b = (a = g.ampm) != null ? a : h.is12HourCycleInCurrentLocale(), x = k.useMemo(() => {
    var R;
    return ((R = g.localeText) == null ? void 0 : R.toolbarTitle) == null ? g.localeText : y({}, g.localeText, {
      timePickerToolbarTitle: g.localeText.toolbarTitle
    });
  }, [g.localeText]), S = (s = g.slots) != null ? s : Ag(g.components), E = (u = g.slotProps) != null ? u : g.componentsProps;
  return y({}, g, {
    ampm: b,
    localeText: x
  }, V1({
    views: g.views,
    openTo: g.openTo,
    defaultViews: ["hours", "minutes"],
    defaultOpenTo: "hours"
  }), {
    disableFuture: (d = g.disableFuture) != null ? d : !1,
    disablePast: (p = g.disablePast) != null ? p : !1,
    slots: y({
      toolbar: fR
    }, S),
    slotProps: y({}, E, {
      toolbar: y({
        ampm: b,
        ampmInClock: g.ampmInClock
      }, E == null ? void 0 : E.toolbar)
    })
  });
}
const ei = ({
  view: e,
  onViewChange: n,
  focusedView: a,
  onFocusedViewChange: s,
  views: u,
  value: d,
  defaultValue: p,
  referenceDate: h,
  onChange: g,
  className: b,
  classes: x,
  disableFuture: S,
  disablePast: E,
  minTime: R,
  maxTime: $,
  shouldDisableTime: M,
  shouldDisableClock: O,
  minutesStep: N,
  ampm: V,
  ampmInClock: I,
  components: z,
  componentsProps: B,
  slots: P,
  slotProps: F,
  readOnly: H,
  disabled: U,
  sx: Q,
  autoFocus: Y,
  showViewSwitcher: te,
  disableIgnoringDatePartForTimeValidation: Z,
  timezone: q
}) => /* @__PURE__ */ _(Y1, {
  view: e,
  onViewChange: n,
  focusedView: a && Yf(a) ? a : null,
  onFocusedViewChange: s,
  views: u.filter(Yf),
  value: d,
  defaultValue: p,
  referenceDate: h,
  onChange: g,
  className: b,
  classes: x,
  disableFuture: S,
  disablePast: E,
  minTime: R,
  maxTime: $,
  shouldDisableTime: M,
  shouldDisableClock: O,
  minutesStep: N,
  ampm: V,
  ampmInClock: I,
  components: z,
  componentsProps: B,
  slots: P,
  slotProps: F,
  readOnly: H,
  disabled: U,
  sx: Q,
  autoFocus: Y,
  showViewSwitcher: te,
  disableIgnoringDatePartForTimeValidation: Z,
  timezone: q
}), hR = ({
  view: e,
  onViewChange: n,
  focusedView: a,
  onFocusedViewChange: s,
  views: u,
  value: d,
  defaultValue: p,
  referenceDate: h,
  onChange: g,
  className: b,
  classes: x,
  disableFuture: S,
  disablePast: E,
  minTime: R,
  maxTime: $,
  shouldDisableTime: M,
  shouldDisableClock: O,
  minutesStep: N,
  ampm: V,
  components: I,
  componentsProps: z,
  slots: B,
  slotProps: P,
  readOnly: F,
  disabled: H,
  sx: U,
  autoFocus: Q,
  disableIgnoringDatePartForTimeValidation: Y,
  timeSteps: te,
  skipDisabled: Z,
  timezone: q
}) => /* @__PURE__ */ _(q1, {
  view: e,
  onViewChange: n,
  focusedView: a,
  onFocusedViewChange: s,
  views: u.filter(Yf),
  value: d,
  defaultValue: p,
  referenceDate: h,
  onChange: g,
  className: b,
  classes: x,
  disableFuture: S,
  disablePast: E,
  minTime: R,
  maxTime: $,
  shouldDisableTime: M,
  shouldDisableClock: O,
  minutesStep: N,
  ampm: V,
  components: I,
  componentsProps: z,
  slots: B,
  slotProps: P,
  readOnly: F,
  disabled: H,
  sx: U,
  autoFocus: Q,
  disableIgnoringDatePartForTimeValidation: Y,
  timeStep: te == null ? void 0 : te.minutes,
  skipDisabled: Z,
  timezone: q
}), VT = ({
  view: e,
  onViewChange: n,
  focusedView: a,
  onFocusedViewChange: s,
  views: u,
  value: d,
  defaultValue: p,
  referenceDate: h,
  onChange: g,
  className: b,
  classes: x,
  disableFuture: S,
  disablePast: E,
  minTime: R,
  maxTime: $,
  shouldDisableTime: M,
  shouldDisableClock: O,
  minutesStep: N,
  ampm: V,
  components: I,
  componentsProps: z,
  slots: B,
  slotProps: P,
  readOnly: F,
  disabled: H,
  sx: U,
  autoFocus: Q,
  disableIgnoringDatePartForTimeValidation: Y,
  timeSteps: te,
  skipDisabled: Z,
  timezone: q
}) => /* @__PURE__ */ _(G1, {
  view: e,
  onViewChange: n,
  focusedView: a,
  onFocusedViewChange: s,
  views: u.filter(Yf),
  value: d,
  defaultValue: p,
  referenceDate: h,
  onChange: g,
  className: b,
  classes: x,
  disableFuture: S,
  disablePast: E,
  minTime: R,
  maxTime: $,
  shouldDisableTime: M,
  shouldDisableClock: O,
  minutesStep: N,
  ampm: V,
  components: I,
  componentsProps: z,
  slots: B,
  slotProps: P,
  readOnly: F,
  disabled: H,
  sx: U,
  autoFocus: Q,
  disableIgnoringDatePartForTimeValidation: Y,
  timeSteps: te,
  skipDisabled: Z,
  timezone: q
}), Ace = ["views", "format"], pV = (e, n) => {
  let {
    views: a,
    format: s
  } = n, u = le(n, Ace);
  if (s)
    return s;
  const d = [], p = [];
  if (a.forEach((b) => {
    Yf(b) ? p.push(b) : d.push(b);
  }), p.length === 0)
    return gg(e, y({
      views: d
    }, u), !1);
  if (d.length === 0)
    return AT(e, y({
      views: p
    }, u));
  const h = AT(e, y({
    views: p
  }, u));
  return `${gg(e, y({
    views: d
  }, u), !1)} ${h}`;
}, _ce = (e, n, a) => a ? n.filter((s) => !Xc(s) || s === "hours") : e ? [...n, "meridiem"] : n, Vce = (e, n) => {
  var a, s;
  return 24 * 60 / (((a = e.hours) != null ? a : 1) * ((s = e.minutes) != null ? s : 5)) <= n;
};
function fV({
  thresholdToRenderTimeInASingleColumn: e,
  ampm: n,
  timeSteps: a,
  views: s
}) {
  const u = e ?? 24, d = y({
    hours: 1,
    minutes: 5,
    seconds: 5
  }, a), p = Vce(d, u);
  return {
    thresholdToRenderTimeInASingleColumn: u,
    timeSteps: d,
    shouldRenderTimeInASingleColumn: p,
    views: _ce(n, s, p)
  };
}
const vR = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d, p, h, g;
  const b = pr(), x = dn(), S = mR(n, "MuiDesktopTimePicker"), {
    shouldRenderTimeInASingleColumn: E,
    views: R,
    timeSteps: $
  } = fV(S), M = E ? hR : VT, O = y({
    hours: M,
    minutes: M,
    seconds: M,
    meridiem: M
  }, S.viewRenderers), N = (s = S.ampmInClock) != null ? s : !0, V = E ? [] : ["accept"], z = ((u = O.hours) == null ? void 0 : u.name) === VT.name ? R : R.filter((F) => F !== "meridiem"), B = y({}, S, {
    ampmInClock: N,
    timeSteps: $,
    viewRenderers: O,
    format: AT(x, S),
    // Setting only `hours` time view in case of single column time picker
    // Allows for easy view lifecycle management
    views: E ? ["hours"] : z,
    slots: y({
      field: dx,
      openPickerIcon: h_
    }, S.slots),
    slotProps: y({}, S.slotProps, {
      field: (F) => {
        var H;
        return y({}, Yl((H = S.slotProps) == null ? void 0 : H.field, F), im(S), {
          ref: a
        });
      },
      toolbar: y({
        hidden: !0,
        ampmInClock: N
      }, (d = S.slotProps) == null ? void 0 : d.toolbar),
      actionBar: y({
        actions: V
      }, (p = S.slotProps) == null ? void 0 : p.actionBar)
    })
  }), {
    renderPicker: P
  } = cR({
    props: B,
    valueManager: Oo,
    valueType: "time",
    getOpenDialogAriaText: (h = (g = B.localeText) == null ? void 0 : g.openTimePickerDialogue) != null ? h : b.openTimePickerDialogue,
    validator: Vg
  });
  return P();
});
vR.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default `utils.is12HourCycleInCurrentLocale()`
   */
  ampm: t.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default true on desktop, false on mobile
   */
  ampmInClock: t.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: t.bool,
  /**
   * Class name applied to the root element.
   */
  className: t.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: t.bool,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: t.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: t.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: t.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * The label content.
   */
  label: t.node,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: t.object,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: t.any,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: t.any,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: t.number,
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: t.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   */
  onAccept: t.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: t.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: t.func,
  /**
   * Callback fired when the error associated to the current value changes.
   * If the error has a non-null value, then the `TextField` will be rendered in `error` state.
   *
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TError} error The new error describing why the current value is not valid.
   * @param {TValue} value The value associated to the error.
   */
  onError: t.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: t.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: t.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: t.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: t.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: t.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: t.oneOf(["landscape", "portrait"]),
  readOnly: t.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: t.any,
  /**
   * The currently selected sections.
   * This prop accept four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If an object with a `startIndex` and `endIndex` properties are provided, the sections between those two indexes will be selected.
   * 3. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 4. If `null` is provided, no section will be selected
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: t.oneOfType([t.oneOf(["all", "day", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), t.number, t.shape({
    endIndex: t.number.isRequired,
    startIndex: t.number.isRequired
  })]),
  /**
   * Disable specific clock time.
   * @param {number} clockValue The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   * @deprecated Consider using `shouldDisableTime`.
   */
  shouldDisableClock: t.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: t.func,
  /**
   * If `true`, disabled digital clock items will not be rendered.
   * @default false
   */
  skipDisabled: t.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Amount of time options below or at which the single column time renderer is used.
   * @default 24
   */
  thresholdToRenderTimeInASingleColumn: t.number,
  /**
   * The time steps between two time unit options.
   * For example, if `timeStep.minutes = 8`, then the available minute options will be `[0, 8, 16, 24, 32, 40, 48, 56]`.
   * When single column time renderer is used, only `timeStep.minutes` will be used.
   * @default{ hours: 1, minutes: 5, seconds: 5 }
   */
  timeSteps: t.shape({
    hours: t.number,
    minutes: t.number,
    seconds: t.number
  }),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: t.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be the used.
   */
  viewRenderers: t.shape({
    hours: t.func,
    meridiem: t.func,
    minutes: t.func,
    seconds: t.func
  }),
  /**
   * Available views.
   */
  views: t.arrayOf(t.oneOf(["hours", "minutes", "seconds"]).isRequired)
};
const gR = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d, p;
  const h = pr(), g = dn(), b = mR(n, "MuiMobileTimePicker"), x = y({
    hours: ei,
    minutes: ei,
    seconds: ei
  }, b.viewRenderers), S = (s = b.ampmInClock) != null ? s : !1, E = y({}, b, {
    ampmInClock: S,
    viewRenderers: x,
    format: AT(g, b),
    slots: y({
      field: dx
    }, b.slots),
    slotProps: y({}, b.slotProps, {
      field: ($) => {
        var M;
        return y({}, Yl((M = b.slotProps) == null ? void 0 : M.field, $), im(b), {
          ref: a
        });
      },
      toolbar: y({
        hidden: !1,
        ampmInClock: S
      }, (u = b.slotProps) == null ? void 0 : u.toolbar)
    })
  }), {
    renderPicker: R
  } = dR({
    props: E,
    valueManager: Oo,
    valueType: "time",
    getOpenDialogAriaText: (d = (p = E.localeText) == null ? void 0 : p.openTimePickerDialogue) != null ? d : h.openTimePickerDialogue,
    validator: Vg
  });
  return R();
});
gR.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default `utils.is12HourCycleInCurrentLocale()`
   */
  ampm: t.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default true on desktop, false on mobile
   */
  ampmInClock: t.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: t.bool,
  /**
   * Class name applied to the root element.
   */
  className: t.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: t.bool,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: t.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: t.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: t.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * The label content.
   */
  label: t.node,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: t.object,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: t.any,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: t.any,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: t.number,
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: t.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   */
  onAccept: t.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: t.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: t.func,
  /**
   * Callback fired when the error associated to the current value changes.
   * If the error has a non-null value, then the `TextField` will be rendered in `error` state.
   *
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TError} error The new error describing why the current value is not valid.
   * @param {TValue} value The value associated to the error.
   */
  onError: t.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: t.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: t.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: t.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: t.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: t.oneOf(["hours", "minutes", "seconds"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: t.oneOf(["landscape", "portrait"]),
  readOnly: t.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: t.any,
  /**
   * The currently selected sections.
   * This prop accept four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If an object with a `startIndex` and `endIndex` properties are provided, the sections between those two indexes will be selected.
   * 3. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 4. If `null` is provided, no section will be selected
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: t.oneOfType([t.oneOf(["all", "day", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), t.number, t.shape({
    endIndex: t.number.isRequired,
    startIndex: t.number.isRequired
  })]),
  /**
   * Disable specific clock time.
   * @param {number} clockValue The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   * @deprecated Consider using `shouldDisableTime`.
   */
  shouldDisableClock: t.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: t.func,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: t.oneOf(["hours", "minutes", "seconds"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be the used.
   */
  viewRenderers: t.shape({
    hours: t.func,
    minutes: t.func,
    seconds: t.func
  }),
  /**
   * Available views.
   */
  views: t.arrayOf(t.oneOf(["hours", "minutes", "seconds"]).isRequired)
};
const Bce = ["desktopModeMediaQuery"], mV = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiTimePicker"
  }), {
    desktopModeMediaQuery: u = sx
  } = s, d = le(s, Bce);
  return Tg(u, {
    defaultMatches: !0
  }) ? /* @__PURE__ */ _(vR, y({
    ref: a
  }, d)) : /* @__PURE__ */ _(gR, y({
    ref: a
  }, d));
});
process.env.NODE_ENV !== "production" && (mV.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default `utils.is12HourCycleInCurrentLocale()`
   */
  ampm: t.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default true on desktop, false on mobile
   */
  ampmInClock: t.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: t.bool,
  /**
   * Class name applied to the root element.
   */
  className: t.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: t.bool,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * CSS media query when `Mobile` mode will be changed to `Desktop`.
   * @default '@media (pointer: fine)'
   * @example '@media (min-width: 720px)' or theme.breakpoints.up("sm")
   */
  desktopModeMediaQuery: t.string,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: t.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: t.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: t.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * The label content.
   */
  label: t.node,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: t.object,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: t.any,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: t.any,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: t.number,
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: t.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   */
  onAccept: t.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: t.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: t.func,
  /**
   * Callback fired when the error associated to the current value changes.
   * If the error has a non-null value, then the `TextField` will be rendered in `error` state.
   *
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TError} error The new error describing why the current value is not valid.
   * @param {TValue} value The value associated to the error.
   */
  onError: t.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: t.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: t.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: t.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: t.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: t.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: t.oneOf(["landscape", "portrait"]),
  readOnly: t.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: t.any,
  /**
   * The currently selected sections.
   * This prop accept four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If an object with a `startIndex` and `endIndex` properties are provided, the sections between those two indexes will be selected.
   * 3. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 4. If `null` is provided, no section will be selected
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: t.oneOfType([t.oneOf(["all", "day", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), t.number, t.shape({
    endIndex: t.number.isRequired,
    startIndex: t.number.isRequired
  })]),
  /**
   * Disable specific clock time.
   * @param {number} clockValue The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   * @deprecated Consider using `shouldDisableTime`.
   */
  shouldDisableClock: t.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: t.func,
  /**
   * If `true`, disabled digital clock items will not be rendered.
   * @default false
   */
  skipDisabled: t.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Amount of time options below or at which the single column time renderer is used.
   * @default 24
   */
  thresholdToRenderTimeInASingleColumn: t.number,
  /**
   * The time steps between two time unit options.
   * For example, if `timeStep.minutes = 8`, then the available minute options will be `[0, 8, 16, 24, 32, 40, 48, 56]`.
   * When single column time renderer is used, only `timeStep.minutes` will be used.
   * @default{ hours: 1, minutes: 5, seconds: 5 }
   */
  timeSteps: t.shape({
    hours: t.number,
    minutes: t.number,
    seconds: t.number
  }),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: t.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be the used.
   */
  viewRenderers: t.shape({
    hours: t.func,
    meridiem: t.func,
    minutes: t.func,
    seconds: t.func
  }),
  /**
   * Available views.
   */
  views: t.arrayOf(t.oneOf(["hours", "minutes", "seconds"]).isRequired)
});
const hV = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d;
  const p = mR(n, "MuiStaticTimePicker"), h = (s = p.displayStaticWrapperAs) != null ? s : "mobile", g = (u = p.ampmInClock) != null ? u : h === "desktop", b = y({
    hours: ei,
    minutes: ei,
    seconds: ei
  }, p.viewRenderers), x = y({}, p, {
    viewRenderers: b,
    displayStaticWrapperAs: h,
    ampmInClock: g,
    slotProps: y({}, p.slotProps, {
      toolbar: y({
        hidden: h === "desktop",
        ampmInClock: g
      }, (d = p.slotProps) == null ? void 0 : d.toolbar)
    })
  }), {
    renderPicker: S
  } = oR({
    props: x,
    valueManager: Oo,
    valueType: "time",
    validator: Vg,
    ref: a
  });
  return S();
});
hV.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default `utils.is12HourCycleInCurrentLocale()`
   */
  ampm: t.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default true on desktop, false on mobile
   */
  ampmInClock: t.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: t.bool,
  /**
   * Class name applied to the root element.
   */
  className: t.string,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * Force static wrapper inner components to be rendered in mobile or desktop mode.
   * @default "mobile"
   */
  displayStaticWrapperAs: t.oneOf(["desktop", "mobile"]),
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: t.object,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: t.any,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: t.any,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: t.number,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   */
  onAccept: t.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: t.func,
  /**
   * Callback fired when component requests to be closed.
   * Can be fired when selecting (by default on `desktop` mode) or clearing a value.
   * @deprecated Please avoid using as it will be removed in next major version.
   */
  onClose: t.func,
  /**
   * Callback fired when the error associated to the current value changes.
   * If the error has a non-null value, then the `TextField` will be rendered in `error` state.
   *
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TError} error The new error describing why the current value is not valid.
   * @param {TValue} value The value associated to the error.
   */
  onError: t.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: t.func,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: t.oneOf(["hours", "minutes", "seconds"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: t.oneOf(["landscape", "portrait"]),
  readOnly: t.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: t.any,
  /**
   * Disable specific clock time.
   * @param {number} clockValue The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   * @deprecated Consider using `shouldDisableTime`.
   */
  shouldDisableClock: t.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: t.func,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: t.oneOf(["hours", "minutes", "seconds"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be the used.
   */
  viewRenderers: t.shape({
    hours: t.func,
    minutes: t.func,
    seconds: t.func
  }),
  /**
   * Available views.
   */
  views: t.arrayOf(t.oneOf(["hours", "minutes", "seconds"]).isRequired)
};
function zce(e) {
  return We("MuiDateTimePickerTabs", e);
}
const Fce = Ye("MuiDateTimePickerTabs", ["root"]), jce = (e) => Bf(e) ? "date" : "time", Uce = (e) => e === "date" ? "day" : "hours", Hce = (e) => {
  const {
    classes: n
  } = e;
  return He({
    root: ["root"]
  }, zce, n);
}, Wce = J(Voe, {
  name: "MuiDateTimePickerTabs",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(({
  theme: e
}) => ({
  boxShadow: `0 -1px 0 0 inset ${(e.vars || e).palette.divider}`,
  "&:last-child": {
    boxShadow: `0 1px 0 0 inset ${(e.vars || e).palette.divider}`,
    [`& .${mT.indicator}`]: {
      bottom: "auto",
      top: 0
    }
  }
})), bR = function(n) {
  const a = Ie({
    props: n,
    name: "MuiDateTimePickerTabs"
  }), {
    dateIcon: s = /* @__PURE__ */ _(v_, {}),
    onViewChange: u,
    timeIcon: d = /* @__PURE__ */ _(g_, {}),
    view: p,
    hidden: h = typeof window > "u" || window.innerHeight < 667,
    className: g,
    sx: b
  } = a, x = pr(), S = Hce(a), E = (R, $) => {
    u(Uce($));
  };
  return h ? null : /* @__PURE__ */ st(Wce, {
    ownerState: a,
    variant: "fullWidth",
    value: jce(p),
    onChange: E,
    className: fe(g, S.root),
    sx: b,
    children: [/* @__PURE__ */ _(ZM, {
      value: "date",
      "aria-label": x.dateTableLabel,
      icon: /* @__PURE__ */ _(k.Fragment, {
        children: s
      })
    }), /* @__PURE__ */ _(ZM, {
      value: "time",
      "aria-label": x.timeTableLabel,
      icon: /* @__PURE__ */ _(k.Fragment, {
        children: d
      })
    })]
  });
};
process.env.NODE_ENV !== "production" && (bR.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  className: t.string,
  /**
   * Date tab icon.
   * @default DateRange
   */
  dateIcon: t.node,
  /**
   * Toggles visibility of the tabs allowing view switching.
   * @default `window.innerHeight < 667` for `DesktopDateTimePicker` and `MobileDateTimePicker`, `displayStaticWrapperAs === 'desktop'` for `StaticDateTimePicker`
   */
  hidden: t.bool,
  /**
   * Callback called when a tab is clicked
   * @template TView
   * @param {TView} view The view to open
   */
  onViewChange: t.func.isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Time tab icon.
   * @default Time
   */
  timeIcon: t.node,
  /**
   * Currently visible picker view.
   */
  view: t.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]).isRequired
});
function Yce(e) {
  return We("MuiDateTimePickerToolbar", e);
}
const vT = Ye("MuiDateTimePickerToolbar", ["root", "dateContainer", "timeContainer", "timeDigitsContainer", "separator", "timeLabelReverse", "ampmSelection", "ampmLandscape", "ampmLabel"]), qce = ["ampm", "ampmInClock", "value", "onChange", "view", "isLandscape", "onViewChange", "toolbarFormat", "toolbarPlaceholder", "views", "disabled", "readOnly", "toolbarVariant"], Gce = (e) => {
  const {
    classes: n,
    theme: a,
    isLandscape: s
  } = e, u = {
    root: ["root"],
    dateContainer: ["dateContainer"],
    timeContainer: ["timeContainer", a.direction === "rtl" && "timeLabelReverse"],
    timeDigitsContainer: ["timeDigitsContainer", a.direction === "rtl" && "timeLabelReverse"],
    separator: ["separator"],
    ampmSelection: ["ampmSelection", s && "ampmLandscape"],
    ampmLabel: ["ampmLabel"]
  };
  return He(u, Yce, n);
}, vV = J(X1, {
  name: "MuiDateTimePickerToolbar",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})(({
  theme: e,
  ownerState: n
}) => ({
  paddingLeft: n.toolbarVariant === "desktop" && !n.isLandscape ? 24 : 16,
  paddingRight: n.toolbarVariant === "desktop" && !n.isLandscape ? 0 : 16,
  borderBottom: n.toolbarVariant === "desktop" ? `1px solid ${(e.vars || e).palette.divider}` : void 0,
  borderRight: n.toolbarVariant === "desktop" && n.isLandscape ? `1px solid ${(e.vars || e).palette.divider}` : void 0,
  justifyContent: "space-around",
  position: "relative"
}));
vV.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  as: t.elementType,
  classes: t.object,
  className: t.string,
  isLandscape: t.bool.isRequired,
  isMobileKeyboardViewOpen: t.bool,
  landscapeDirection: t.oneOf(["column", "row"]),
  ownerState: t.object.isRequired,
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  toggleMobileKeyboardView: t.func,
  toolbarTitle: t.node,
  viewType: t.oneOf(["date", "time"])
};
const Kce = J("div", {
  name: "MuiDateTimePickerToolbar",
  slot: "DateContainer",
  overridesResolver: (e, n) => n.dateContainer
})({
  display: "flex",
  flexDirection: "column",
  alignItems: "flex-start"
}), gV = J("div", {
  name: "MuiDateTimePickerToolbar",
  slot: "TimeContainer",
  overridesResolver: (e, n) => n.timeContainer
})(({
  theme: e,
  ownerState: n
}) => {
  const a = n.isLandscape && n.toolbarVariant !== "desktop" ? "column" : "row";
  return y({
    display: "flex",
    flexDirection: a
  }, n.toolbarVariant === "desktop" && y({}, !n.isLandscape && {
    gap: 9,
    marginRight: 4,
    alignSelf: "flex-end"
  }), e.direction === "rtl" && {
    flexDirection: `${a}-reverse`
  });
}), Qce = J("div", {
  name: "MuiDateTimePickerToolbar",
  slot: "TimeDigitsContainer",
  overridesResolver: (e, n) => n.timeDigitsContainer
})(({
  theme: e,
  ownerState: n
}) => y({
  display: "flex"
}, n.toolbarVariant === "desktop" && {
  gap: 1.5
}, e.direction === "rtl" && {
  flexDirection: "row-reverse"
}));
gV.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  as: t.elementType,
  ownerState: t.object.isRequired,
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object])
};
const J$ = J(Z1, {
  name: "MuiDateTimePickerToolbar",
  slot: "Separator",
  overridesResolver: (e, n) => n.separator
})(({
  ownerState: e
}) => ({
  margin: e.toolbarVariant === "desktop" ? 0 : "0 4px 0 2px",
  cursor: "default"
})), Xce = J("div", {
  name: "MuiDateTimePickerToolbar",
  slot: "AmPmSelection",
  overridesResolver: (e, n) => [{
    [`.${vT.ampmLabel}`]: n.ampmLabel
  }, {
    [`&.${vT.ampmLandscape}`]: n.ampmLandscape
  }, n.ampmSelection]
})(({
  ownerState: e
}) => y({
  display: "flex",
  flexDirection: "column",
  marginRight: "auto",
  marginLeft: 12
}, e.isLandscape && {
  margin: "4px 0 auto",
  flexDirection: "row",
  justifyContent: "space-around",
  width: "100%"
}, {
  [`& .${vT.ampmLabel}`]: {
    fontSize: 17
  }
}));
function yR(e) {
  const n = Ie({
    props: e,
    name: "MuiDateTimePickerToolbar"
  }), {
    ampm: a,
    ampmInClock: s,
    value: u,
    onChange: d,
    view: p,
    isLandscape: h,
    onViewChange: g,
    toolbarFormat: b,
    toolbarPlaceholder: x = "––",
    views: S,
    disabled: E,
    readOnly: R,
    toolbarVariant: $ = "mobile"
  } = n, M = le(n, qce), O = n, N = dn(), {
    meridiemMode: V,
    handleMeridiemChange: I
  } = ox(u, a, d), z = !!(a && !s), B = $ === "desktop", P = pr(), F = En(), H = Gce(y({}, O, {
    theme: F
  })), U = (Y) => a ? N.format(Y, "hours12h") : N.format(Y, "hours24h"), Q = k.useMemo(() => u ? b ? N.formatByString(u, b) : N.format(u, "shortDate") : x, [u, b, x, N]);
  return /* @__PURE__ */ st(vV, y({
    toolbarTitle: P.dateTimePickerToolbarTitle,
    isLandscape: h,
    className: H.root
  }, M, {
    ownerState: O,
    children: [/* @__PURE__ */ st(Kce, {
      className: H.dateContainer,
      ownerState: O,
      children: [S.includes("year") && /* @__PURE__ */ _(Qa, {
        tabIndex: -1,
        variant: "subtitle1",
        onClick: () => g("year"),
        selected: p === "year",
        value: u ? N.format(u, "year") : "–"
      }), S.includes("day") && /* @__PURE__ */ _(Qa, {
        tabIndex: -1,
        variant: B ? "h5" : "h4",
        onClick: () => g("day"),
        selected: p === "day",
        value: Q
      })]
    }), /* @__PURE__ */ st(gV, {
      className: H.timeContainer,
      ownerState: O,
      children: [/* @__PURE__ */ st(Qce, {
        className: H.timeDigitsContainer,
        ownerState: O,
        children: [S.includes("hours") && /* @__PURE__ */ _(Qa, {
          variant: B ? "h5" : "h3",
          width: B && !h ? Wv : void 0,
          onClick: () => g("hours"),
          selected: p === "hours",
          value: u ? U(u) : "--"
        }), S.includes("minutes") && /* @__PURE__ */ st(k.Fragment, {
          children: [/* @__PURE__ */ _(J$, {
            variant: B ? "h5" : "h3",
            value: ":",
            className: H.separator,
            ownerState: O
          }), /* @__PURE__ */ _(Qa, {
            variant: B ? "h5" : "h3",
            width: B && !h ? Wv : void 0,
            onClick: () => g("minutes"),
            selected: p === "minutes",
            value: u ? N.format(u, "minutes") : "--"
          })]
        }), S.includes("seconds") && /* @__PURE__ */ st(k.Fragment, {
          children: [/* @__PURE__ */ _(J$, {
            variant: B ? "h5" : "h3",
            value: ":",
            className: H.separator,
            ownerState: O
          }), /* @__PURE__ */ _(Qa, {
            variant: B ? "h5" : "h3",
            width: B && !h ? Wv : void 0,
            onClick: () => g("seconds"),
            selected: p === "seconds",
            value: u ? N.format(u, "seconds") : "--"
          })]
        })]
      }), z && !B && /* @__PURE__ */ st(Xce, {
        className: H.ampmSelection,
        ownerState: O,
        children: [/* @__PURE__ */ _(Qa, {
          variant: "subtitle2",
          selected: V === "am",
          typographyClassName: H.ampmLabel,
          value: es(N, "am"),
          onClick: R ? void 0 : () => I("am"),
          disabled: E
        }), /* @__PURE__ */ _(Qa, {
          variant: "subtitle2",
          selected: V === "pm",
          typographyClassName: H.ampmLabel,
          value: es(N, "pm"),
          onClick: R ? void 0 : () => I("pm"),
          disabled: E
        })]
      }), a && B && /* @__PURE__ */ _(Qa, {
        variant: "h5",
        onClick: () => g("meridiem"),
        selected: p === "meridiem",
        value: u && V ? es(N, V) : "--",
        width: Wv
      })]
    })]
  }));
}
process.env.NODE_ENV !== "production" && (yR.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  ampm: t.bool,
  ampmInClock: t.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: t.object,
  /**
   * className applied to the root component.
   */
  className: t.string,
  disabled: t.bool,
  /**
   * If `true`, show the toolbar even in desktop mode.
   * @default `true` for Desktop, `false` for Mobile.
   */
  hidden: t.bool,
  isLandscape: t.bool.isRequired,
  onChange: t.func.isRequired,
  /**
   * Callback called when a toolbar is clicked
   * @template TView
   * @param {TView} view The view to open
   */
  onViewChange: t.func.isRequired,
  readOnly: t.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  titleId: t.string,
  /**
   * Toolbar date format.
   */
  toolbarFormat: t.string,
  /**
   * Toolbar value placeholder—it is displayed when the value is empty.
   * @default "––"
   */
  toolbarPlaceholder: t.node,
  toolbarVariant: t.oneOf(["desktop", "mobile"]),
  value: t.any,
  /**
   * Currently visible picker view.
   */
  view: t.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]).isRequired,
  views: t.arrayOf(t.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]).isRequired).isRequired
});
function CR(e, n) {
  var a, s, u, d, p, h, g, b, x, S, E;
  const R = dn(), $ = $d(), M = Ie({
    props: e,
    name: n
  }), O = (a = M.ampm) != null ? a : R.is12HourCycleInCurrentLocale(), N = k.useMemo(() => {
    var z;
    return ((z = M.localeText) == null ? void 0 : z.toolbarTitle) == null ? M.localeText : y({}, M.localeText, {
      dateTimePickerToolbarTitle: M.localeText.toolbarTitle
    });
  }, [M.localeText]), V = (s = M.slots) != null ? s : Ag(M.components), I = (u = M.slotProps) != null ? u : M.componentsProps;
  return y({}, M, V1({
    views: M.views,
    openTo: M.openTo,
    defaultViews: ["year", "day", "hours", "minutes"],
    defaultOpenTo: "day"
  }), {
    ampm: O,
    localeText: N,
    orientation: (d = M.orientation) != null ? d : "portrait",
    // TODO: Remove from public API
    disableIgnoringDatePartForTimeValidation: (p = M.disableIgnoringDatePartForTimeValidation) != null ? p : !!(M.minDateTime || M.maxDateTime || // allow time clock to correctly check time validity: https://github.com/mui/mui-x/issues/8520
    M.disablePast || M.disableFuture),
    disableFuture: (h = M.disableFuture) != null ? h : !1,
    disablePast: (g = M.disablePast) != null ? g : !1,
    minDate: Xr(R, (b = M.minDateTime) != null ? b : M.minDate, $.minDate),
    maxDate: Xr(R, (x = M.maxDateTime) != null ? x : M.maxDate, $.maxDate),
    minTime: (S = M.minDateTime) != null ? S : M.minTime,
    maxTime: (E = M.maxDateTime) != null ? E : M.maxTime,
    slots: y({
      toolbar: yR,
      tabs: bR
    }, V),
    slotProps: y({}, I, {
      toolbar: y({
        ampm: O
      }, I == null ? void 0 : I.toolbar)
    })
  });
}
const Zce = J("div")({
  display: "flex",
  margin: "0 auto"
}), yd = ({
  view: e,
  onViewChange: n,
  views: a,
  focusedView: s,
  onFocusedViewChange: u,
  value: d,
  defaultValue: p,
  referenceDate: h,
  onChange: g,
  className: b,
  classes: x,
  disableFuture: S,
  disablePast: E,
  minDate: R,
  minTime: $,
  maxDate: M,
  maxTime: O,
  shouldDisableDate: N,
  shouldDisableMonth: V,
  shouldDisableYear: I,
  shouldDisableTime: z,
  shouldDisableClock: B,
  reduceAnimations: P,
  minutesStep: F,
  ampm: H,
  onMonthChange: U,
  monthsPerRow: Q,
  onYearChange: Y,
  yearsPerRow: te,
  defaultCalendarMonth: Z,
  components: q,
  componentsProps: X,
  slots: oe,
  slotProps: ie,
  loading: K,
  renderLoading: ne,
  disableHighlightToday: se,
  readOnly: ze,
  disabled: Ue,
  showDaysOutsideCurrentMonth: Oe,
  dayOfWeekFormatter: ue,
  sx: xe,
  autoFocus: me,
  fixedWeekNumber: Se,
  displayWeekNumber: ce,
  timezone: Le,
  disableIgnoringDatePartForTimeValidation: Ze,
  timeSteps: Ee,
  skipDisabled: Ae,
  timeViewsCount: Ce,
  shouldRenderTimeInASingleColumn: ae
}) => {
  var Pe, ke;
  const pt = !!((Pe = Yl((ke = ie == null ? void 0 : ie.actionBar) != null ? ke : X == null ? void 0 : X.actionBar, {})) != null && (Pe = Pe.actions) != null && Pe.length), _e = {
    view: Xc(e) ? e : "hours",
    onViewChange: n,
    focusedView: s && Xc(s) ? s : null,
    onFocusedViewChange: u,
    views: a.filter(Xc),
    value: d,
    defaultValue: p,
    referenceDate: h,
    onChange: g,
    className: b,
    classes: x,
    disableFuture: S,
    disablePast: E,
    minTime: $,
    maxTime: O,
    shouldDisableTime: z,
    shouldDisableClock: B,
    minutesStep: F,
    ampm: H,
    components: q,
    componentsProps: X,
    slots: oe,
    slotProps: ie,
    readOnly: ze,
    disabled: Ue,
    autoFocus: me,
    disableIgnoringDatePartForTimeValidation: Ze,
    timeSteps: Ee,
    skipDisabled: Ae,
    timezone: Le
  };
  return /* @__PURE__ */ st(k.Fragment, {
    children: [/* @__PURE__ */ st(Zce, {
      children: [/* @__PURE__ */ _(fx, {
        view: Bf(e) ? e : "day",
        onViewChange: n,
        views: a.filter(Bf),
        focusedView: s && Bf(s) ? s : null,
        onFocusedViewChange: u,
        value: d,
        defaultValue: p,
        referenceDate: h,
        onChange: g,
        className: b,
        classes: x,
        disableFuture: S,
        disablePast: E,
        minDate: R,
        maxDate: M,
        shouldDisableDate: N,
        shouldDisableMonth: V,
        shouldDisableYear: I,
        reduceAnimations: P,
        onMonthChange: U,
        monthsPerRow: Q,
        onYearChange: Y,
        yearsPerRow: te,
        defaultCalendarMonth: Z,
        components: q,
        componentsProps: X,
        slots: oe,
        slotProps: ie,
        loading: K,
        renderLoading: ne,
        disableHighlightToday: se,
        readOnly: ze,
        disabled: Ue,
        showDaysOutsideCurrentMonth: Oe,
        dayOfWeekFormatter: ue,
        sx: xe,
        autoFocus: me,
        fixedWeekNumber: Se,
        displayWeekNumber: ce,
        timezone: Le
      }), Ce > 0 && /* @__PURE__ */ st(k.Fragment, {
        children: [/* @__PURE__ */ _(mM, {
          orientation: "vertical"
        }), ae ? hR(y({}, _e, {
          view: "hours",
          views: ["hours"],
          focusedView: s && Xc(s) ? "hours" : null,
          sx: y({
            width: "auto",
            [`&.${N_.root}`]: {
              maxHeight: rx
            }
          }, Array.isArray(xe) ? xe : [xe])
        })) : VT(y({}, _e, {
          view: Xc(e) ? e : "hours",
          views: a.filter(Xc),
          focusedView: s && Xc(s) ? s : null,
          sx: y({
            borderBottom: 0,
            width: "auto",
            [`.${I_.root}`]: {
              maxHeight: "100%"
            }
          }, Array.isArray(xe) ? xe : [xe])
        }))]
      })]
    }), pt && /* @__PURE__ */ _(mM, {})]
  });
}, TR = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d, p, h, g, b;
  const x = pr(), S = dn(), E = CR(n, "MuiDesktopDateTimePicker"), {
    shouldRenderTimeInASingleColumn: R,
    thresholdToRenderTimeInASingleColumn: $,
    views: M,
    timeSteps: O
  } = fV(E), N = !E.viewRenderers || Object.keys(E.viewRenderers).length === 0, V = (
    // we can only ensure the expected two-column layout if none of the renderers are overridden
    N ? {
      day: yd,
      month: yd,
      year: yd,
      hours: yd,
      minutes: yd,
      seconds: yd,
      meridiem: yd
    } : y({
      day: dr,
      month: dr,
      year: dr,
      hours: null,
      minutes: null,
      seconds: null,
      meridiem: null
    }, E.viewRenderers)
  ), I = (s = E.ampmInClock) != null ? s : !0, z = N ? ["accept"] : [], B = y({}, E, {
    viewRenderers: V,
    format: pV(S, E),
    views: M,
    yearsPerRow: (u = E.yearsPerRow) != null ? u : 4,
    ampmInClock: I,
    timeSteps: O,
    thresholdToRenderTimeInASingleColumn: $,
    shouldRenderTimeInASingleColumn: R,
    slots: y({
      field: px,
      openPickerIcon: _1
    }, E.slots),
    slotProps: y({}, E.slotProps, {
      field: (F) => {
        var H;
        return y({}, Yl((H = E.slotProps) == null ? void 0 : H.field, F), im(E), {
          ref: a
        });
      },
      toolbar: y({
        hidden: !0,
        ampmInClock: I,
        toolbarVariant: N ? "desktop" : "mobile"
      }, (d = E.slotProps) == null ? void 0 : d.toolbar),
      tabs: y({
        hidden: !0
      }, (p = E.slotProps) == null ? void 0 : p.tabs),
      actionBar: y({
        actions: z
      }, (h = E.slotProps) == null ? void 0 : h.actionBar)
    })
  }), {
    renderPicker: P
  } = cR({
    props: B,
    valueManager: Oo,
    valueType: "date-time",
    getOpenDialogAriaText: (g = (b = B.localeText) == null ? void 0 : b.openDatePickerDialogue) != null ? g : x.openDatePickerDialogue,
    validator: lx
  });
  return P();
});
TR.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default `utils.is12HourCycleInCurrentLocale()`
   */
  ampm: t.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default true on desktop, false on mobile
   */
  ampmInClock: t.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: t.bool,
  /**
   * Class name applied to the root element.
   */
  className: t.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: t.bool,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: t.func,
  /**
   * Default calendar month displayed when `value` and `defaultValue` are empty.
   * @deprecated Consider using `referenceDate` instead.
   */
  defaultCalendarMonth: t.any,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: t.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: t.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: t.bool,
  /**
   * Calendar will show more weeks in order to match this value.
   * Put it to 6 for having fix number of week in Gregorian calendars
   * @default undefined
   */
  fixedWeekNumber: t.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: t.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: t.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * The label content.
   */
  label: t.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: t.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: t.object,
  /**
   * Maximal selectable date.
   */
  maxDate: t.any,
  /**
   * Maximal selectable moment of time with binding to date, to set max time in each day use `maxTime`.
   */
  maxDateTime: t.any,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: t.any,
  /**
   * Minimal selectable date.
   */
  minDate: t.any,
  /**
   * Minimal selectable moment of time with binding to date, to set min time in each day use `minTime`.
   */
  minDateTime: t.any,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: t.any,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: t.number,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: t.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: t.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   */
  onAccept: t.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: t.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: t.func,
  /**
   * Callback fired when the error associated to the current value changes.
   * If the error has a non-null value, then the `TextField` will be rendered in `error` state.
   *
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TError} error The new error describing why the current value is not valid.
   * @param {TValue} value The value associated to the error.
   */
  onError: t.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: t.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: t.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: t.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: t.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: t.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: t.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: t.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: t.oneOf(["landscape", "portrait"]),
  readOnly: t.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: t.any,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: t.func,
  /**
   * The currently selected sections.
   * This prop accept four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If an object with a `startIndex` and `endIndex` properties are provided, the sections between those two indexes will be selected.
   * 3. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 4. If `null` is provided, no section will be selected
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: t.oneOfType([t.oneOf(["all", "day", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), t.number, t.shape({
    endIndex: t.number.isRequired,
    startIndex: t.number.isRequired
  })]),
  /**
   * Disable specific clock time.
   * @param {number} clockValue The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   * @deprecated Consider using `shouldDisableTime`.
   */
  shouldDisableClock: t.func,
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: t.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: t.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: t.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: t.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: t.bool,
  /**
   * If `true`, disabled digital clock items will not be rendered.
   * @default false
   */
  skipDisabled: t.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Amount of time options below or at which the single column time renderer is used.
   * @default 24
   */
  thresholdToRenderTimeInASingleColumn: t.number,
  /**
   * The time steps between two time unit options.
   * For example, if `timeStep.minutes = 8`, then the available minute options will be `[0, 8, 16, 24, 32, 40, 48, 56]`.
   * When single column time renderer is used, only `timeStep.minutes` will be used.
   * @default{ hours: 1, minutes: 5, seconds: 5 }
   */
  timeSteps: t.shape({
    hours: t.number,
    minutes: t.number,
    seconds: t.number
  }),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: t.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be the used.
   */
  viewRenderers: t.shape({
    day: t.func,
    hours: t.func,
    meridiem: t.func,
    minutes: t.func,
    month: t.func,
    seconds: t.func,
    year: t.func
  }),
  /**
   * Available views.
   */
  views: t.arrayOf(t.oneOf(["day", "hours", "minutes", "month", "seconds", "year"]).isRequired),
  /**
   * Years rendered per row.
   * @default 4
   */
  yearsPerRow: t.oneOf([3, 4])
};
const xR = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d, p, h;
  const g = pr(), b = dn(), x = CR(n, "MuiMobileDateTimePicker"), S = y({
    day: dr,
    month: dr,
    year: dr,
    hours: ei,
    minutes: ei,
    seconds: ei
  }, x.viewRenderers), E = (s = x.ampmInClock) != null ? s : !1, R = y({}, x, {
    viewRenderers: S,
    format: pV(b, x),
    ampmInClock: E,
    slots: y({
      field: px
    }, x.slots),
    slotProps: y({}, x.slotProps, {
      field: (M) => {
        var O;
        return y({}, Yl((O = x.slotProps) == null ? void 0 : O.field, M), im(x), {
          ref: a
        });
      },
      toolbar: y({
        hidden: !1,
        ampmInClock: E
      }, (u = x.slotProps) == null ? void 0 : u.toolbar),
      tabs: y({
        hidden: !1
      }, (d = x.slotProps) == null ? void 0 : d.tabs)
    })
  }), {
    renderPicker: $
  } = dR({
    props: R,
    valueManager: Oo,
    valueType: "date-time",
    getOpenDialogAriaText: (p = (h = R.localeText) == null ? void 0 : h.openDatePickerDialogue) != null ? p : g.openDatePickerDialogue,
    validator: lx
  });
  return $();
});
xR.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default `utils.is12HourCycleInCurrentLocale()`
   */
  ampm: t.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default true on desktop, false on mobile
   */
  ampmInClock: t.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: t.bool,
  /**
   * Class name applied to the root element.
   */
  className: t.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: t.bool,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: t.func,
  /**
   * Default calendar month displayed when `value` and `defaultValue` are empty.
   * @deprecated Consider using `referenceDate` instead.
   */
  defaultCalendarMonth: t.any,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: t.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: t.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: t.bool,
  /**
   * Calendar will show more weeks in order to match this value.
   * Put it to 6 for having fix number of week in Gregorian calendars
   * @default undefined
   */
  fixedWeekNumber: t.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: t.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: t.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * The label content.
   */
  label: t.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: t.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: t.object,
  /**
   * Maximal selectable date.
   */
  maxDate: t.any,
  /**
   * Maximal selectable moment of time with binding to date, to set max time in each day use `maxTime`.
   */
  maxDateTime: t.any,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: t.any,
  /**
   * Minimal selectable date.
   */
  minDate: t.any,
  /**
   * Minimal selectable moment of time with binding to date, to set min time in each day use `minTime`.
   */
  minDateTime: t.any,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: t.any,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: t.number,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: t.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: t.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   */
  onAccept: t.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: t.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: t.func,
  /**
   * Callback fired when the error associated to the current value changes.
   * If the error has a non-null value, then the `TextField` will be rendered in `error` state.
   *
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TError} error The new error describing why the current value is not valid.
   * @param {TValue} value The value associated to the error.
   */
  onError: t.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: t.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: t.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: t.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: t.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: t.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: t.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: t.oneOf(["day", "hours", "minutes", "month", "seconds", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: t.oneOf(["landscape", "portrait"]),
  readOnly: t.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: t.any,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: t.func,
  /**
   * The currently selected sections.
   * This prop accept four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If an object with a `startIndex` and `endIndex` properties are provided, the sections between those two indexes will be selected.
   * 3. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 4. If `null` is provided, no section will be selected
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: t.oneOfType([t.oneOf(["all", "day", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), t.number, t.shape({
    endIndex: t.number.isRequired,
    startIndex: t.number.isRequired
  })]),
  /**
   * Disable specific clock time.
   * @param {number} clockValue The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   * @deprecated Consider using `shouldDisableTime`.
   */
  shouldDisableClock: t.func,
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: t.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: t.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: t.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: t.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: t.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: t.oneOf(["day", "hours", "minutes", "month", "seconds", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be the used.
   */
  viewRenderers: t.shape({
    day: t.func,
    hours: t.func,
    minutes: t.func,
    month: t.func,
    seconds: t.func,
    year: t.func
  }),
  /**
   * Available views.
   */
  views: t.arrayOf(t.oneOf(["day", "hours", "minutes", "month", "seconds", "year"]).isRequired),
  /**
   * Years rendered per row.
   * @default 3
   */
  yearsPerRow: t.oneOf([3, 4])
};
const Jce = ["desktopModeMediaQuery"], bV = /* @__PURE__ */ k.forwardRef(function(n, a) {
  const s = Ie({
    props: n,
    name: "MuiDateTimePicker"
  }), {
    desktopModeMediaQuery: u = sx
  } = s, d = le(s, Jce);
  return Tg(u, {
    defaultMatches: !0
  }) ? /* @__PURE__ */ _(TR, y({
    ref: a
  }, d)) : /* @__PURE__ */ _(xR, y({
    ref: a
  }, d));
});
process.env.NODE_ENV !== "production" && (bV.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default `utils.is12HourCycleInCurrentLocale()`
   */
  ampm: t.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default true on desktop, false on mobile
   */
  ampmInClock: t.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: t.bool,
  /**
   * Class name applied to the root element.
   */
  className: t.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: t.bool,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: t.func,
  /**
   * Default calendar month displayed when `value` and `defaultValue` are empty.
   * @deprecated Consider using `referenceDate` instead.
   */
  defaultCalendarMonth: t.any,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * CSS media query when `Mobile` mode will be changed to `Desktop`.
   * @default '@media (pointer: fine)'
   * @example '@media (min-width: 720px)' or theme.breakpoints.up("sm")
   */
  desktopModeMediaQuery: t.string,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: t.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: t.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: t.bool,
  /**
   * Calendar will show more weeks in order to match this value.
   * Put it to 6 for having fix number of week in Gregorian calendars
   * @default undefined
   */
  fixedWeekNumber: t.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: t.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: t.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Wn,
  /**
   * The label content.
   */
  label: t.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: t.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: t.object,
  /**
   * Maximal selectable date.
   */
  maxDate: t.any,
  /**
   * Maximal selectable moment of time with binding to date, to set max time in each day use `maxTime`.
   */
  maxDateTime: t.any,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: t.any,
  /**
   * Minimal selectable date.
   */
  minDate: t.any,
  /**
   * Minimal selectable moment of time with binding to date, to set min time in each day use `minTime`.
   */
  minDateTime: t.any,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: t.any,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: t.number,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: t.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: t.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   */
  onAccept: t.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: t.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: t.func,
  /**
   * Callback fired when the error associated to the current value changes.
   * If the error has a non-null value, then the `TextField` will be rendered in `error` state.
   *
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TError} error The new error describing why the current value is not valid.
   * @param {TValue} value The value associated to the error.
   */
  onError: t.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: t.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: t.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: t.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: t.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: t.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: t.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: t.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: t.oneOf(["landscape", "portrait"]),
  readOnly: t.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: t.any,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: t.func,
  /**
   * The currently selected sections.
   * This prop accept four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If an object with a `startIndex` and `endIndex` properties are provided, the sections between those two indexes will be selected.
   * 3. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 4. If `null` is provided, no section will be selected
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: t.oneOfType([t.oneOf(["all", "day", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), t.number, t.shape({
    endIndex: t.number.isRequired,
    startIndex: t.number.isRequired
  })]),
  /**
   * Disable specific clock time.
   * @param {number} clockValue The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   * @deprecated Consider using `shouldDisableTime`.
   */
  shouldDisableClock: t.func,
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: t.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: t.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: t.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: t.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: t.bool,
  /**
   * If `true`, disabled digital clock items will not be rendered.
   * @default false
   */
  skipDisabled: t.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Amount of time options below or at which the single column time renderer is used.
   * @default 24
   */
  thresholdToRenderTimeInASingleColumn: t.number,
  /**
   * The time steps between two time unit options.
   * For example, if `timeStep.minutes = 8`, then the available minute options will be `[0, 8, 16, 24, 32, 40, 48, 56]`.
   * When single column time renderer is used, only `timeStep.minutes` will be used.
   * @default{ hours: 1, minutes: 5, seconds: 5 }
   */
  timeSteps: t.shape({
    hours: t.number,
    minutes: t.number,
    seconds: t.number
  }),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: t.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be the used.
   */
  viewRenderers: t.shape({
    day: t.func,
    hours: t.func,
    meridiem: t.func,
    minutes: t.func,
    month: t.func,
    seconds: t.func,
    year: t.func
  }),
  /**
   * Available views.
   */
  views: t.arrayOf(t.oneOf(["day", "hours", "minutes", "month", "seconds", "year"]).isRequired),
  /**
   * Years rendered per row.
   * @default 4 on desktop, 3 on mobile
   */
  yearsPerRow: t.oneOf([3, 4])
});
const yV = /* @__PURE__ */ k.forwardRef(function(n, a) {
  var s, u, d, p, h;
  const g = CR(n, "MuiStaticDateTimePicker"), b = (s = g.displayStaticWrapperAs) != null ? s : "mobile", x = (u = g.ampmInClock) != null ? u : b === "desktop", S = y({
    day: dr,
    month: dr,
    year: dr,
    hours: ei,
    minutes: ei,
    seconds: ei
  }, g.viewRenderers), E = y({}, g, {
    viewRenderers: S,
    displayStaticWrapperAs: b,
    ampmInClock: x,
    yearsPerRow: (d = g.yearsPerRow) != null ? d : b === "mobile" ? 3 : 4,
    slotProps: y({}, g.slotProps, {
      tabs: y({
        hidden: b === "desktop"
      }, (p = g.slotProps) == null ? void 0 : p.tabs),
      toolbar: y({
        hidden: b === "desktop",
        ampmInClock: x
      }, (h = g.slotProps) == null ? void 0 : h.toolbar)
    })
  }), {
    renderPicker: R
  } = oR({
    props: E,
    valueManager: Oo,
    valueType: "date-time",
    validator: lx,
    ref: a
  });
  return R();
});
yV.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default `utils.is12HourCycleInCurrentLocale()`
   */
  ampm: t.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default true on desktop, false on mobile
   */
  ampmInClock: t.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: t.bool,
  /**
   * Class name applied to the root element.
   */
  className: t.string,
  /**
   * Overridable components.
   * @default {}
   * @deprecated Please use `slots`.
   */
  components: t.object,
  /**
   * The props used for each component slot.
   * @default {}
   * @deprecated Please use `slotProps`.
   */
  componentsProps: t.object,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: t.func,
  /**
   * Default calendar month displayed when `value` and `defaultValue` are empty.
   * @deprecated Consider using `referenceDate` instead.
   */
  defaultCalendarMonth: t.any,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: t.any,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: t.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: t.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: t.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: t.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: t.bool,
  /**
   * Force static wrapper inner components to be rendered in mobile or desktop mode.
   * @default "mobile"
   */
  displayStaticWrapperAs: t.oneOf(["desktop", "mobile"]),
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: t.bool,
  /**
   * Calendar will show more weeks in order to match this value.
   * Put it to 6 for having fix number of week in Gregorian calendars
   * @default undefined
   */
  fixedWeekNumber: t.number,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: t.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: t.object,
  /**
   * Maximal selectable date.
   */
  maxDate: t.any,
  /**
   * Maximal selectable moment of time with binding to date, to set max time in each day use `maxTime`.
   */
  maxDateTime: t.any,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: t.any,
  /**
   * Minimal selectable date.
   */
  minDate: t.any,
  /**
   * Minimal selectable moment of time with binding to date, to set min time in each day use `minTime`.
   */
  minDateTime: t.any,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: t.any,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: t.number,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: t.oneOf([3, 4]),
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   */
  onAccept: t.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: t.func,
  /**
   * Callback fired when component requests to be closed.
   * Can be fired when selecting (by default on `desktop` mode) or clearing a value.
   * @deprecated Please avoid using as it will be removed in next major version.
   */
  onClose: t.func,
  /**
   * Callback fired when the error associated to the current value changes.
   * If the error has a non-null value, then the `TextField` will be rendered in `error` state.
   *
   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.
   * @param {TError} error The new error describing why the current value is not valid.
   * @param {TValue} value The value associated to the error.
   */
  onError: t.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: t.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: t.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: t.func,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: t.oneOf(["day", "hours", "minutes", "month", "seconds", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: t.oneOf(["landscape", "portrait"]),
  readOnly: t.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: t.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: t.any,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: t.func,
  /**
   * Disable specific clock time.
   * @param {number} clockValue The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   * @deprecated Consider using `shouldDisableTime`.
   */
  shouldDisableClock: t.func,
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: t.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: t.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: t.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: t.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: t.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: t.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: t.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: t.oneOfType([t.arrayOf(t.oneOfType([t.func, t.object, t.bool])), t.func, t.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: t.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: t.any,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: t.oneOf(["day", "hours", "minutes", "month", "seconds", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be the used.
   */
  viewRenderers: t.shape({
    day: t.func,
    hours: t.func,
    minutes: t.func,
    month: t.func,
    seconds: t.func,
    year: t.func
  }),
  /**
   * Available views.
   */
  views: t.arrayOf(t.oneOf(["day", "hours", "minutes", "month", "seconds", "year"]).isRequired),
  /**
   * Years rendered per row.
   * @default 3
   */
  yearsPerRow: t.oneOf([3, 4])
};
/**
 * @mui/x-date-pickers v6.19.5
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
const Ipe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ArrowDropDownIcon: p_,
  ArrowLeftIcon: f_,
  ArrowRightIcon: m_,
  CalendarIcon: _1,
  ClearIcon: b_,
  ClockIcon: h_,
  DEFAULT_DESKTOP_MODE_MEDIA_QUERY: sx,
  DEFAULT_LOCALE: d_,
  DateCalendar: fx,
  DateField: ux,
  DatePicker: lV,
  DatePickerToolbar: sR,
  DateRangeIcon: v_,
  DateTimeField: px,
  DateTimePicker: bV,
  DateTimePickerTabs: bR,
  DateTimePickerToolbar: yR,
  DayCalendarSkeleton: sV,
  DesktopDatePicker: uR,
  DesktopDateTimePicker: TR,
  DesktopTimePicker: vR,
  DigitalClock: q1,
  LocalizationProvider: $g,
  MobileDatePicker: pR,
  MobileDateTimePicker: xR,
  MobileTimePicker: gR,
  MonthCalendar: rR,
  MuiPickersAdapterContext: mg,
  MultiSectionDigitalClock: G1,
  PickersActionBar: eR,
  PickersCalendarHeader: iR,
  PickersDay: z_,
  PickersLayout: _g,
  PickersLayoutContentWrapper: K_,
  PickersLayoutRoot: nR,
  PickersShortcuts: tR,
  StaticDatePicker: cV,
  StaticDateTimePicker: yV,
  StaticTimePicker: hV,
  TimeClock: Y1,
  TimeField: dx,
  TimeIcon: g_,
  TimePicker: mV,
  TimePickerToolbar: fR,
  YearCalendar: aR,
  beBY: Vae,
  caES: zae,
  clockClasses: Lre,
  clockNumberClasses: Yv,
  clockPointerClasses: Ere,
  csCZ: jae,
  daDK: Hae,
  dateCalendarClasses: lce,
  datePickerToolbarClasses: Tce,
  dateTimePickerTabsClasses: Fce,
  dateTimePickerToolbarClasses: vT,
  dayCalendarSkeletonClasses: mce,
  dayPickerClasses: Zse,
  deDE: Yae,
  digitalClockClasses: N_,
  elGR: Gae,
  enUS: sre,
  esES: Qae,
  eu: Zae,
  faIR: eie,
  fiFI: nie,
  frFR: rie,
  getDateCalendarUtilityClass: rV,
  getDayCalendarSkeletonUtilityClass: aV,
  getDigitalClockUtilityClass: $_,
  getMonthCalendarUtilityClass: tV,
  getMultiSectionDigitalClockUtilityClass: L_,
  getPickersDayUtilityClass: A_,
  getTimeClockUtilityClass: x_,
  getYearCalendarUtilityClass: nV,
  heIL: iie,
  huHU: lie,
  isIS: uie,
  itIT: pie,
  jaJP: mie,
  koKR: vie,
  kzKZ: bie,
  mk: Cie,
  monthCalendarClasses: _le,
  multiSectionDigitalClockClasses: xae,
  multiSectionDigitalClockSectionClasses: I_,
  nbNO: xie,
  nlNL: kie,
  pickersCalendarHeaderClasses: oV,
  pickersDayClasses: Zc,
  pickersFadeTransitionGroupClasses: Ole,
  pickersLayoutClasses: hT,
  pickersMonthClasses: qv,
  pickersSlideTransitionClasses: Ka,
  pickersYearClasses: Gv,
  plPL: Rie,
  ptBR: Oie,
  renderDateViewCalendar: dr,
  renderDigitalClockTimeView: hR,
  renderMultiSectionDigitalClockTimeView: VT,
  renderTimeViewClock: ei,
  roRO: Die,
  ruRU: $ie,
  skSK: Lie,
  svSE: Aie,
  timeClockClasses: Cre,
  timePickerToolbarClasses: Ff,
  trTR: Vie,
  ukUA: zie,
  unstable_useDateField: U_,
  unstable_useDateTimeField: J_,
  unstable_useTimeField: Z_,
  urPK: jie,
  useClearableField: cx,
  usePickerLayout: G_,
  viVN: Hie,
  yearCalendarClasses: Gle,
  zhCN: Yie,
  zhHK: Gie
}, Symbol.toStringTag, { value: "Module" })), Gr = {}, eue = {}, tue = {}, nue = {}, oue = {};
Gr.extend(tue);
Gr.extend(nue);
Gr.extend(oue);
const rue = Y_(["Your locale has not been found.", "Either the locale key is not a supported one. Locales supported by dayjs are available here: https://github.com/iamkun/dayjs/tree/dev/src/locale", "Or you forget to import the locale from 'dayjs/locale/{localeUsed}'", "fallback on English locale"]), aue = {
  // Year
  YY: "year",
  YYYY: {
    sectionType: "year",
    contentType: "digit",
    maxLength: 4
  },
  // Month
  M: {
    sectionType: "month",
    contentType: "digit",
    maxLength: 2
  },
  MM: "month",
  MMM: {
    sectionType: "month",
    contentType: "letter"
  },
  MMMM: {
    sectionType: "month",
    contentType: "letter"
  },
  // Day of the month
  D: {
    sectionType: "day",
    contentType: "digit",
    maxLength: 2
  },
  DD: "day",
  Do: {
    sectionType: "day",
    contentType: "digit-with-letter"
  },
  // Day of the week
  d: {
    sectionType: "weekDay",
    contentType: "digit",
    maxLength: 2
  },
  dd: {
    sectionType: "weekDay",
    contentType: "letter"
  },
  ddd: {
    sectionType: "weekDay",
    contentType: "letter"
  },
  dddd: {
    sectionType: "weekDay",
    contentType: "letter"
  },
  // Meridiem
  A: "meridiem",
  a: "meridiem",
  // Hours
  H: {
    sectionType: "hours",
    contentType: "digit",
    maxLength: 2
  },
  HH: "hours",
  h: {
    sectionType: "hours",
    contentType: "digit",
    maxLength: 2
  },
  hh: "hours",
  // Minutes
  m: {
    sectionType: "minutes",
    contentType: "digit",
    maxLength: 2
  },
  mm: "minutes",
  // Seconds
  s: {
    sectionType: "seconds",
    contentType: "digit",
    maxLength: 2
  },
  ss: "seconds"
}, iue = {
  year: "YYYY",
  month: "MMMM",
  monthShort: "MMM",
  dayOfMonth: "D",
  weekday: "dddd",
  weekdayShort: "dd",
  hours24h: "HH",
  hours12h: "hh",
  meridiem: "A",
  minutes: "mm",
  seconds: "ss",
  fullDate: "ll",
  fullDateWithWeekday: "dddd, LL",
  keyboardDate: "L",
  shortDate: "MMM D",
  normalDate: "D MMMM",
  normalDateWithWeekday: "ddd, MMM D",
  monthAndYear: "MMMM YYYY",
  monthAndDate: "MMMM D",
  fullTime: "LT",
  fullTime12h: "hh:mm A",
  fullTime24h: "HH:mm",
  fullDateTime: "lll",
  fullDateTime12h: "ll hh:mm A",
  fullDateTime24h: "ll HH:mm",
  keyboardDateTime: "L LT",
  keyboardDateTime12h: "L hh:mm A",
  keyboardDateTime24h: "L HH:mm"
}, vw = ["Missing UTC plugin", "To be able to use UTC or timezones, you have to enable the `utc` plugin", "Find more information on https://mui.com/x/react-date-pickers/timezone/#day-js-and-utc"].join(`
`), eN = ["Missing timezone plugin", "To be able to use timezones, you have to enable both the `utc` and the `timezone` plugin", "Find more information on https://mui.com/x/react-date-pickers/timezone/#day-js-and-timezone"].join(`
`), sue = (e, n) => n ? (...a) => e(...a).locale(n) : e;
class lue {
  constructor({
    locale: n,
    formats: a,
    instance: s
  } = {}) {
    var u;
    this.isMUIAdapter = !0, this.isTimezoneCompatible = !0, this.lib = "dayjs", this.rawDayJsInstance = void 0, this.dayjs = void 0, this.locale = void 0, this.formats = void 0, this.escapedCharacters = {
      start: "[",
      end: "]"
    }, this.formatTokenMap = aue, this.setLocaleToValue = (d) => {
      const p = this.getCurrentLocaleCode();
      return p === d.locale() ? d : d.locale(p);
    }, this.hasUTCPlugin = () => typeof Gr.utc < "u", this.hasTimezonePlugin = () => typeof Gr.tz < "u", this.isSame = (d, p, h) => {
      const g = this.setTimezone(p, this.getTimezone(d));
      return d.format(h) === g.format(h);
    }, this.cleanTimezone = (d) => {
      switch (d) {
        case "default":
          return;
        case "system":
          return Gr.tz.guess();
        default:
          return d;
      }
    }, this.createSystemDate = (d) => {
      if (this.rawDayJsInstance)
        return this.rawDayJsInstance(d);
      if (this.hasUTCPlugin() && this.hasTimezonePlugin()) {
        const p = Gr.tz.guess();
        return p !== "UTC" ? Gr.tz(d, p) : Gr(d);
      }
      return Gr(d);
    }, this.createUTCDate = (d) => {
      if (!this.hasUTCPlugin())
        throw new Error(vw);
      return Gr.utc(d);
    }, this.createTZDate = (d, p) => {
      if (!this.hasUTCPlugin())
        throw new Error(vw);
      if (!this.hasTimezonePlugin())
        throw new Error(eN);
      const h = d !== void 0 && !d.endsWith("Z");
      return Gr(d).tz(this.cleanTimezone(p), h);
    }, this.getLocaleFormats = () => {
      const d = Gr.Ls, p = this.locale || "en";
      let h = d[p];
      return h === void 0 && (rue(), h = d.en), h.formats;
    }, this.adjustOffset = (d) => {
      if (!this.hasTimezonePlugin())
        return d;
      const p = this.getTimezone(d);
      if (p !== "UTC") {
        var h, g;
        const b = d.tz(this.cleanTimezone(p), !0);
        return ((h = b.$offset) != null ? h : 0) === ((g = d.$offset) != null ? g : 0) ? d : b;
      }
      return d;
    }, this.date = (d) => d === null ? null : this.dayjs(d), this.dateWithTimezone = (d, p) => {
      if (d === null)
        return null;
      let h;
      return p === "UTC" ? h = this.createUTCDate(d) : p === "system" || p === "default" && !this.hasTimezonePlugin() ? h = this.createSystemDate(d) : h = this.createTZDate(d, p), this.locale === void 0 ? h : h.locale(this.locale);
    }, this.getTimezone = (d) => {
      if (this.hasTimezonePlugin()) {
        var p;
        const h = (p = d.$x) == null ? void 0 : p.$timezone;
        if (h)
          return h;
      }
      return this.hasUTCPlugin() && d.isUTC() ? "UTC" : "system";
    }, this.setTimezone = (d, p) => {
      if (this.getTimezone(d) === p)
        return d;
      if (p === "UTC") {
        if (!this.hasUTCPlugin())
          throw new Error(vw);
        return d.utc();
      }
      if (p === "system")
        return d.local();
      if (!this.hasTimezonePlugin()) {
        if (p === "default")
          return d;
        throw new Error(eN);
      }
      return Gr.tz(d, this.cleanTimezone(p));
    }, this.toJsDate = (d) => d.toDate(), this.parseISO = (d) => this.dayjs(d), this.toISO = (d) => d.toISOString(), this.parse = (d, p) => d === "" ? null : this.dayjs(d, p, this.locale, !0), this.getCurrentLocaleCode = () => this.locale || "en", this.is12HourCycleInCurrentLocale = () => /A|a/.test(this.getLocaleFormats().LT || ""), this.expandFormat = (d) => {
      const p = this.getLocaleFormats(), h = (g) => g.replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, (b, x, S) => x || S.slice(1));
      return d.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g, (g, b, x) => {
        const S = x && x.toUpperCase();
        return b || p[x] || h(p[S]);
      });
    }, this.getFormatHelperText = (d) => this.expandFormat(d).replace(/a/gi, "(a|p)m").toLocaleLowerCase(), this.isNull = (d) => d === null, this.isValid = (d) => this.dayjs(d).isValid(), this.format = (d, p) => this.formatByString(d, this.formats[p]), this.formatByString = (d, p) => this.dayjs(d).format(p), this.formatNumber = (d) => d, this.getDiff = (d, p, h) => d.diff(p, h), this.isEqual = (d, p) => d === null && p === null ? !0 : this.dayjs(d).toDate().getTime() === this.dayjs(p).toDate().getTime(), this.isSameYear = (d, p) => this.isSame(d, p, "YYYY"), this.isSameMonth = (d, p) => this.isSame(d, p, "YYYY-MM"), this.isSameDay = (d, p) => this.isSame(d, p, "YYYY-MM-DD"), this.isSameHour = (d, p) => d.isSame(p, "hour"), this.isAfter = (d, p) => d > p, this.isAfterYear = (d, p) => this.hasUTCPlugin() ? !this.isSameYear(d, p) && d.utc() > p.utc() : d.isAfter(p, "year"), this.isAfterDay = (d, p) => this.hasUTCPlugin() ? !this.isSameDay(d, p) && d.utc() > p.utc() : d.isAfter(p, "day"), this.isBefore = (d, p) => d < p, this.isBeforeYear = (d, p) => this.hasUTCPlugin() ? !this.isSameYear(d, p) && d.utc() < p.utc() : d.isBefore(p, "year"), this.isBeforeDay = (d, p) => this.hasUTCPlugin() ? !this.isSameDay(d, p) && d.utc() < p.utc() : d.isBefore(p, "day"), this.isWithinRange = (d, [p, h]) => d >= p && d <= h, this.startOfYear = (d) => this.adjustOffset(d.startOf("year")), this.startOfMonth = (d) => this.adjustOffset(d.startOf("month")), this.startOfWeek = (d) => this.adjustOffset(d.startOf("week")), this.startOfDay = (d) => this.adjustOffset(d.startOf("day")), this.endOfYear = (d) => this.adjustOffset(d.endOf("year")), this.endOfMonth = (d) => this.adjustOffset(d.endOf("month")), this.endOfWeek = (d) => this.adjustOffset(d.endOf("week")), this.endOfDay = (d) => this.adjustOffset(d.endOf("day")), this.addYears = (d, p) => this.adjustOffset(p < 0 ? d.subtract(Math.abs(p), "year") : d.add(p, "year")), this.addMonths = (d, p) => this.adjustOffset(p < 0 ? d.subtract(Math.abs(p), "month") : d.add(p, "month")), this.addWeeks = (d, p) => this.adjustOffset(p < 0 ? d.subtract(Math.abs(p), "week") : d.add(p, "week")), this.addDays = (d, p) => this.adjustOffset(p < 0 ? d.subtract(Math.abs(p), "day") : d.add(p, "day")), this.addHours = (d, p) => this.adjustOffset(p < 0 ? d.subtract(Math.abs(p), "hour") : d.add(p, "hour")), this.addMinutes = (d, p) => this.adjustOffset(p < 0 ? d.subtract(Math.abs(p), "minute") : d.add(p, "minute")), this.addSeconds = (d, p) => this.adjustOffset(p < 0 ? d.subtract(Math.abs(p), "second") : d.add(p, "second")), this.getYear = (d) => d.year(), this.getMonth = (d) => d.month(), this.getDate = (d) => d.date(), this.getHours = (d) => d.hour(), this.getMinutes = (d) => d.minute(), this.getSeconds = (d) => d.second(), this.getMilliseconds = (d) => d.millisecond(), this.setYear = (d, p) => this.adjustOffset(d.set("year", p)), this.setMonth = (d, p) => this.adjustOffset(d.set("month", p)), this.setDate = (d, p) => this.adjustOffset(d.set("date", p)), this.setHours = (d, p) => this.adjustOffset(d.set("hour", p)), this.setMinutes = (d, p) => this.adjustOffset(d.set("minute", p)), this.setSeconds = (d, p) => this.adjustOffset(d.set("second", p)), this.setMilliseconds = (d, p) => this.adjustOffset(d.set("millisecond", p)), this.getDaysInMonth = (d) => d.daysInMonth(), this.getNextMonth = (d) => this.addMonths(d, 1), this.getPreviousMonth = (d) => this.addMonths(d, -1), this.getMonthArray = (d) => {
      const h = [d.startOf("year")];
      for (; h.length < 12; ) {
        const g = h[h.length - 1];
        h.push(this.addMonths(g, 1));
      }
      return h;
    }, this.mergeDateAndTime = (d, p) => d.hour(p.hour()).minute(p.minute()).second(p.second()), this.getWeekdays = () => {
      const d = this.dayjs().startOf("week");
      return [0, 1, 2, 3, 4, 5, 6].map((p) => this.formatByString(this.addDays(d, p), "dd"));
    }, this.getWeekArray = (d) => {
      const p = this.setLocaleToValue(d), h = p.startOf("month").startOf("week"), g = p.endOf("month").endOf("week");
      let b = 0, x = h;
      const S = [];
      for (; x < g; ) {
        const E = Math.floor(b / 7);
        S[E] = S[E] || [], S[E].push(x), x = this.addDays(x, 1), b += 1;
      }
      return S;
    }, this.getWeekNumber = (d) => d.week(), this.getYearRange = (d, p) => {
      const h = d.startOf("year"), g = p.endOf("year"), b = [];
      let x = h;
      for (; x < g; )
        b.push(x), x = this.addYears(x, 1);
      return b;
    }, this.getMeridiemText = (d) => d === "am" ? "AM" : "PM", this.rawDayJsInstance = s, this.dayjs = sue((u = this.rawDayJsInstance) != null ? u : Gr, n), this.locale = n, this.formats = y({}, iue, a), Gr.extend(eue);
  }
}
const Ape = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  AdapterDayjs: lue
}, Symbol.toStringTag, { value: "Module" }));
export {
  Tue as Accordion,
  Sue as AccordionActions,
  wue as AccordionDetails,
  Eue as AccordionSummary,
  Ape as AdapterDayjs,
  Oue as Alert,
  Mue as AlertTitle,
  Nue as AppBar,
  Iue as Autocomplete,
  W9 as Avatar,
  Aue as AvatarGroup,
  PL as Backdrop,
  Vue as Badge,
  zue as BottomNavigation,
  Fue as BottomNavigationAction,
  Bpe as Box,
  jue as Breadcrumbs,
  jv as Button,
  Zo as ButtonBase,
  Uue as ButtonGroup,
  BL as ButtonGroupButtonContext,
  _L as ButtonGroupContext,
  Wue as Card,
  Yue as CardActionArea,
  Gue as CardActions,
  Que as CardContent,
  Xue as CardHeader,
  Jue as CardMedia,
  ede as Checkbox,
  TL as Chip,
  nde as CircularProgress,
  ET as ClickAwayListener,
  n1 as Collapse,
  Hpe as Column,
  ode as Container,
  aq as CssBaseline,
  Tq as Dialog,
  Eq as DialogActions,
  Aq as DialogContent,
  dde as DialogContentText,
  pde as DialogTitle,
  mM as Divider,
  sG as Drawer,
  L5 as Experimental_CssVarsProvider,
  hI as Fab,
  em as Fade,
  vI as FilledInput,
  xG as FormControl,
  vde as FormControlLabel,
  AG as FormGroup,
  jG as FormHelperText,
  KG as FormLabel,
  qG as FormLabelRoot,
  p1 as GlobalStyles,
  bde as Grid,
  fg as Grow,
  EK as Hidden,
  Sde as Icon,
  Ja as IconButton,
  wde as ImageList,
  Rde as ImageListItem,
  Ode as ImageListItemBar,
  T1 as Input,
  NI as InputAdornment,
  tx as InputBase,
  fQ as InputLabel,
  wQ as LinearProgress,
  Mde as Link,
  zI as List,
  iX as ListItem,
  Ade as ListItemAvatar,
  Nde as ListItemButton,
  _de as ListItemIcon,
  JQ as ListItemSecondaryAction,
  Vde as ListItemText,
  J8 as ListSubheader,
  FX as Menu,
  w1 as MenuItem,
  k1 as MenuList,
  jde as MobileStepper,
  h1 as Modal,
  E3 as ModalManager,
  Ude as NativeSelect,
  OT as NoSsr,
  aA as OutlinedInput,
  Wde as Pagination,
  DZ as PaginationItem,
  ni as Paper,
  DX as Popover,
  GI as PopoverPaper,
  PX as PopoverRoot,
  Pg as Popper,
  cg as Portal,
  Yde as Radio,
  qde as RadioGroup,
  Gde as Rating,
  jpe as Row,
  Qde as ScopedCssBaseline,
  bA as Select,
  AJ as Skeleton,
  Jq as Slide,
  Zde as Slider,
  GJ as SliderMark,
  KJ as SliderMarkLabel,
  HJ as SliderRail,
  UJ as SliderRoot,
  YJ as SliderThumb,
  WJ as SliderTrack,
  qJ as SliderValueLabel,
  tpe as Snackbar,
  aee as SnackbarContent,
  npe as SpeedDial,
  ope as SpeedDialAction,
  rpe as SpeedDialIcon,
  SG as Stack,
  lpe as Step,
  cpe as StepButton,
  wte as StepConnector,
  ppe as StepContent,
  Dg as StepContext,
  rte as StepIcon,
  fte as StepLabel,
  mpe as Stepper,
  nm as StepperContext,
  RU as StyledEngineProvider,
  Tw as SvgIcon,
  hpe as SwipeableDrawer,
  vpe as Switch,
  ru as THEME_ID,
  ZM as Tab,
  Ooe as TabScrollButton,
  bpe as Table,
  Cpe as TableBody,
  Lw as TableCell,
  xpe as TableContainer,
  kpe as TableFooter,
  Rpe as TableHead,
  Ope as TablePagination,
  Ppe as TableRow,
  Dpe as TableSortLabel,
  Voe as Tabs,
  A1 as TextField,
  uL as TextareaAutosize,
  MN as ThemeProvider,
  $pe as ToggleButton,
  Npe as ToggleButtonGroup,
  Hne as Toolbar,
  Mee as Tooltip,
  vo as Typography,
  yde as Unstable_Grid2,
  lg as Unstable_TrapFocus,
  bue as Utils,
  Ipe as XDatePickers,
  fee as Zoom,
  xue as accordionActionsClasses,
  HC as accordionClasses,
  kue as accordionDetailsClasses,
  If as accordionSummaryClasses,
  W4 as adaptV4Theme,
  JD as alertClasses,
  Due as alertTitleClasses,
  Kr as alpha,
  $ue as appBarClasses,
  yn as autocompleteClasses,
  V9 as avatarClasses,
  G9 as avatarGroupClasses,
  _ue as backdropClasses,
  Gc as badgeClasses,
  $L as bottomNavigationActionClasses,
  Bue as bottomNavigationClasses,
  zpe as boxClasses,
  DY as breadcrumbsClasses,
  e3 as buttonBaseClasses,
  ZC as buttonClasses,
  $r as buttonGroupClasses,
  pe as capitalize,
  rw as cardActionAreaClasses,
  que as cardActionsClasses,
  Hue as cardClasses,
  Kue as cardContentClasses,
  lM as cardHeaderClasses,
  Zue as cardMediaClasses,
  aw as checkboxClasses,
  Dn as chipClasses,
  tde as circularProgressClasses,
  yue as collapseClasses,
  hue as colors,
  ade as containerClasses,
  TT as createChainedFunction,
  o8 as createFilterOptions,
  EU as createMuiTheme,
  q4 as createStyles,
  Tn as createSvgIcon,
  rg as createTheme,
  au as css,
  ide as darkScrollbar,
  yT as darken,
  Qf as debounce,
  jl as decomposeColor,
  NH as deprecatedPropType,
  lde as dialogActionsClasses,
  Zv as dialogClasses,
  cde as dialogContentClasses,
  ude as dialogContentTextClasses,
  $q as dialogTitleClasses,
  fM as dividerClasses,
  fde as drawerClasses,
  iN as duration,
  OU as easing,
  EH as emphasize,
  J as experimentalStyled,
  NN as experimental_extendTheme,
  _5 as experimental_sx,
  vM as fabClasses,
  Za as filledInputClasses,
  mde as formControlClasses,
  Hv as formControlLabelClasses,
  gde as formGroupClasses,
  gM as formHelperTextClasses,
  Jv as formLabelClasses,
  We as generateUtilityClass,
  Ye as generateUtilityClasses,
  NW as getAccordionActionsUtilityClass,
  VW as getAccordionDetailsUtilityClass,
  r3 as getAccordionSummaryUtilityClass,
  OW as getAccordionUtilityClass,
  M8 as getAlertTitleUtilityClass,
  s8 as getAlertUtilityClass,
  A8 as getAppBarUtilityClass,
  y9 as getAutocompleteUtilityClass,
  Y9 as getAvatarGroupUtilityClass,
  A9 as getAvatarUtilityClass,
  eY as getBackdropUtilityClass,
  iY as getBadgeUtilityClass,
  bY as getBottomNavigationActionUtilityClass,
  fY as getBottomNavigationUtilityClass,
  OY as getBreadcrumbsUtilityClass,
  ZW as getButtonBaseUtilityClass,
  HY as getButtonGroupUtilityClass,
  _Y as getButtonUtilityClass,
  t7 as getCardActionAreaUtilityClass,
  s7 as getCardActionsUtilityClass,
  p7 as getCardContentUtilityClass,
  g7 as getCardHeaderUtilityClass,
  w7 as getCardMediaUtilityClass,
  QY as getCardUtilityClass,
  z7 as getCheckboxUtilityClass,
  t9 as getChipUtilityClass,
  G7 as getCircularProgressUtilityClass,
  cW as getCollapseUtilityClass,
  rde as getContainerUtilityClass,
  RH as getContrastRatio,
  xq as getDialogActionsUtilityClass,
  _q as getDialogContentTextUtilityClass,
  Oq as getDialogContentUtilityClass,
  Dq as getDialogTitleUtilityClass,
  fq as getDialogUtilityClass,
  Wq as getDividerUtilityClass,
  eG as getDrawerUtilityClass,
  lG as getFabUtilityClass,
  g9 as getFilledInputUtilityClass,
  wG as getFormControlLabelUtilityClasses,
  gG as getFormControlUtilityClasses,
  MG as getFormGroupUtilityClass,
  _G as getFormHelperTextUtilityClasses,
  UG as getFormLabelUtilityClasses,
  Cde as getGrid2UtilityClass,
  QG as getGridUtilityClass,
  c8 as getIconButtonUtilityClass,
  OK as getIconUtilityClass,
  UK as getImageListItemBarUtilityClass,
  VK as getImageListItemUtilityClass,
  NK as getImageListUtilityClass,
  A5 as getInitColorSchemeScript,
  nQ as getInputAdornmentUtilityClass,
  l9 as getInputBaseUtilityClass,
  lQ as getInputLabelUtilityClasses,
  f9 as getInputUtilityClass,
  mQ as getLinearProgressUtilityClass,
  RQ as getLinkUtilityClass,
  sX as getListItemAvatarUtilityClass,
  jQ as getListItemButtonUtilityClass,
  pX as getListItemIconUtilityClass,
  GQ as getListItemSecondaryActionClassesUtilityClass,
  gX as getListItemTextUtilityClass,
  zQ as getListItemUtilityClass,
  G8 as getListSubheaderUtilityClass,
  IQ as getListUtilityClass,
  bT as getLuminance,
  jX as getMenuItemUtilityClass,
  MX as getMenuUtilityClass,
  GX as getMobileStepperUtilityClass,
  sq as getModalUtilityClass,
  JI as getNativeSelectUtilityClasses,
  $M as getOffsetLeft,
  MM as getOffsetTop,
  h9 as getOutlinedInputUtilityClass,
  ST as getOverlayAlpha,
  SZ as getPaginationItemUtilityClass,
  yZ as getPaginationUtilityClass,
  vW as getPaperUtilityClass,
  SX as getPopoverUtilityClass,
  jZ as getRadioUtilityClass,
  XZ as getRatingUtilityClass,
  cJ as getScopedCssBaselineUtilityClass,
  mJ as getSelectUtilityClasses,
  PJ as getSkeletonUtilityClass,
  BJ as getSliderUtilityClass,
  ZJ as getSnackbarContentUtilityClass,
  iee as getSnackbarUtilityClass,
  $ee as getSpeedDialActionUtilityClass,
  Fee as getSpeedDialIconUtilityClass,
  mee as getSpeedDialUtilityClass,
  mte as getStepButtonUtilityClass,
  yte as getStepConnectorUtilityClass,
  Rte as getStepContentUtilityClass,
  Jee as getStepIconUtilityClass,
  ate as getStepLabelUtilityClass,
  Yee as getStepUtilityClass,
  $te as getStepperUtilityClass,
  V5 as getSvgIconUtilityClass,
  Yte as getSwitchUtilityClass,
  xoe as getTabScrollButtonUtilityClass,
  ene as getTabUtilityClass,
  une as getTableBodyUtilityClass,
  vne as getTableCellUtilityClass,
  xne as getTableContainerUtilityClass,
  Ene as getTableFooterUtilityClass,
  Nne as getTableHeadUtilityClass,
  qne as getTablePaginationUtilityClass,
  ioe as getTableRowUtilityClass,
  poe as getTableSortLabelUtilityClass,
  ane as getTableUtilityClass,
  Poe as getTabsUtilityClass,
  Boe as getTextFieldUtilityClass,
  Zoe as getToggleButtonGroupUtilityClass,
  Woe as getToggleButtonUtilityClass,
  Bne as getToolbarUtilityClass,
  See as getTooltipUtilityClass,
  Rue as getTouchRippleUtilityClass,
  k8 as getTypographyUtilityClass,
  Tde as grid2Classes,
  pg as gridClasses,
  pN as hexToRgb,
  fN as hslToRgb,
  d8 as iconButtonClasses,
  xde as iconClasses,
  kde as imageListClasses,
  Ede as imageListItemBarClasses,
  CM as imageListItemClasses,
  TM as inputAdornmentClasses,
  Xa as inputBaseClasses,
  eu as inputClasses,
  Pde as inputLabelClasses,
  Hs as isMuiElement,
  rs as keyframes,
  CT as lighten,
  Dde as linearProgressClasses,
  OQ as linkClasses,
  $de as listClasses,
  Ide as listItemAvatarClasses,
  $f as listItemButtonClasses,
  Mf as listItemClasses,
  PM as listItemIconClasses,
  Lde as listItemSecondaryActionClasses,
  LT as listItemTextClasses,
  Lue as listSubheaderClasses,
  S5 as makeStyles,
  zde as menuClasses,
  Ev as menuItemClasses,
  Fde as mobileStepperClasses,
  sde as modalClasses,
  R1 as nativeSelectClasses,
  js as outlinedInputClasses,
  $n as ownerDocument,
  Qr as ownerWindow,
  Hde as paginationClasses,
  gi as paginationItemClasses,
  Cue as paperClasses,
  Bde as popoverClasses,
  PU as private_createMixins,
  aN as private_createTypography,
  LN as private_excludeVariablesFromRoot,
  _M as radioClasses,
  Ov as ratingClasses,
  xg as recomposeColor,
  vN as requirePropFactory,
  Z4 as responsiveFontSizes,
  wH as rgbToHex,
  Kde as scopedCssBaselineClasses,
  Pv as selectClasses,
  ag as setRef,
  $N as shouldSkipGeneratingVar,
  Xde as skeletonClasses,
  Ji as sliderClasses,
  epe as snackbarClasses,
  Jde as snackbarContentClasses,
  Lee as speedDialActionClasses,
  eT as speedDialClasses,
  gd as speedDialIconClasses,
  hde as stackClasses,
  QM as stepButtonClasses,
  spe as stepClasses,
  upe as stepConnectorClasses,
  dpe as stepContentClasses,
  cw as stepIconClasses,
  ou as stepLabelClasses,
  fpe as stepperClasses,
  J as styled,
  vue as styles,
  gue as svgIconClasses,
  da as switchClasses,
  bd as tabClasses,
  koe as tabScrollButtonClasses,
  ype as tableBodyClasses,
  bne as tableCellClasses,
  gpe as tableClasses,
  Tpe as tableContainerClasses,
  Spe as tableFooterClasses,
  wpe as tableHeadClasses,
  tg as tablePaginationClasses,
  r$ as tableRowClasses,
  mw as tableSortLabelClasses,
  mT as tabsClasses,
  Mpe as textFieldClasses,
  Af as toggleButtonClasses,
  ho as toggleButtonGroupClasses,
  Epe as toolbarClasses,
  nu as tooltipClasses,
  yi as touchRippleClasses,
  Pue as typographyClasses,
  U5 as unstable_ClassNameGenerator,
  He as unstable_composeClasses,
  Y4 as unstable_createMuiStrictModeTheme,
  Gw as unstable_getUnit,
  zl as unstable_toUnitless,
  ro as unstable_useEnhancedEffect,
  pa as unstable_useId,
  UT as unsupportedProp,
  i8 as useAutocomplete,
  I5 as useColorScheme,
  Eo as useControlled,
  kt as useEventCallback,
  cn as useForkRef,
  is as useFormControl,
  Xf as useIsFocusVisible,
  Tg as useMediaQuery,
  xZ as usePagination,
  FZ as useRadioGroup,
  Lpe as useScrollTrigger,
  ipe as useStepContext,
  ape as useStepperContext,
  En as useTheme,
  Ie as useThemeProps,
  k5 as withStyles,
  w5 as withTheme
};
